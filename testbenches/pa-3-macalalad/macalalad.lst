

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Feb 25 21:26:40 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	dabs	1,0x7E,2
    16  0000                     	;# 
    17  0001                     	;# 
    18  0002                     	;# 
    19  0003                     	;# 
    20  0004                     	;# 
    21  0005                     	;# 
    22  0006                     	;# 
    23  0007                     	;# 
    24  0008                     	;# 
    25  0009                     	;# 
    26  000A                     	;# 
    27  000B                     	;# 
    28  000C                     	;# 
    29  000D                     	;# 
    30  000E                     	;# 
    31  000E                     	;# 
    32  000F                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0013                     	;# 
    37  0014                     	;# 
    38  0015                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0017                     	;# 
    42  0018                     	;# 
    43  0019                     	;# 
    44  001A                     	;# 
    45  001B                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  001D                     	;# 
    49  001E                     	;# 
    50  001F                     	;# 
    51  0081                     	;# 
    52  0085                     	;# 
    53  0086                     	;# 
    54  0087                     	;# 
    55  0088                     	;# 
    56  0089                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  008E                     	;# 
    60  0091                     	;# 
    61  0092                     	;# 
    62  0093                     	;# 
    63  0094                     	;# 
    64  0098                     	;# 
    65  0099                     	;# 
    66  009C                     	;# 
    67  009D                     	;# 
    68  009E                     	;# 
    69  009F                     	;# 
    70  010C                     	;# 
    71  010D                     	;# 
    72  010E                     	;# 
    73  010F                     	;# 
    74  018C                     	;# 
    75  018D                     	;# 
    76  0007                     _PORTC	set	7
    77  0008                     _PORTD	set	8
    78  005F                     _GIE	set	95
    79  005C                     _INTE	set	92
    80  0059                     _INTF	set	89
    81  005D                     _T0IE	set	93
    82  005A                     _T0IF	set	90
    83  0081                     _OPTION_REG	set	129
    84  0086                     _TRISB	set	134
    85  0087                     _TRISC	set	135
    86  0088                     _TRISD	set	136
    87                           
    88                           	psect	text0
    89  0000                     __ptext0:	
    90                           ; #config settings
    91                           
    92                           
    93                           ;psect for function _keypress_correct
    94  0000                     
    95                           	psect	cinit
    96  0015                     start_initialization:	
    97  0015                     __initialization:	
    98                           
    99                           ; Clear objects allocated to BITCOMMON
   100  0015  01F7               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   101                           
   102                           ; Clear objects allocated to BANK0
   103  0016  01A6               	clrf	__pbssBANK0& (0+127)
   104  0017                     end_of_initialization:	
   105                           ;End of C runtime variable initialization code
   106                           
   107  0017                     __end_of__initialization:	
   108  0017  0183               	clrf	3
   109  0018  120A  118A  281B   	ljmp	_main	;jump to C main() function
   110                           
   111                           	psect	bitbssCOMMON
   112  03B8                     __pbitbssCOMMON:	
   113  03B8                     _count_flag:	
   114  03B8                     	ds	1
   115  03B9                     _int_flag:	
   116  03B9                     	ds	1
   117                           
   118                           	psect	bssBANK0
   119  0026                     __pbssBANK0:	
   120  0026                     _cnt:	
   121  0026                     	ds	1
   122                           
   123                           	psect	cstackCOMMON
   124  0070                     __pcstackCOMMON:	
   125  0070                     ??_keypress_correct:	
   126  0070                     ?_ISR:	
   127                           ; 0 bytes @ 0x0
   128                           
   129  0070                     ?_main:	
   130                           ; 0 bytes @ 0x0
   131                           
   132  0070                     ?_keypress_correct:	
   133                           ; 0 bytes @ 0x0
   134                           
   135                           
   136                           ; 1 bytes @ 0x0
   137  0070                     	ds	1
   138  0071                     keypress_correct@x:	
   139                           
   140                           ; 1 bytes @ 0x1
   141  0071                     	ds	1
   142  0072                     ??_ISR:	
   143                           
   144                           ; 0 bytes @ 0x2
   145  0072                     	ds	5
   146                           
   147                           	psect	cstackBANK0
   148  0020                     __pcstackBANK0:	
   149  0020                     ?_delay:	
   150  0020                     delay@delay:	
   151                           ; 0 bytes @ 0x0
   152                           
   153                           
   154                           ; 2 bytes @ 0x0
   155  0020                     	ds	2
   156  0022                     ??_delay:	
   157                           
   158                           ; 0 bytes @ 0x2
   159  0022                     	ds	1
   160  0023                     delay@y:	
   161                           
   162                           ; 2 bytes @ 0x3
   163  0023                     	ds	2
   164  0025                     ??_main:	
   165                           
   166                           ; 0 bytes @ 0x5
   167  0025                     	ds	1
   168                           
   169                           	psect	maintext
   170  001B                     __pmaintext:	
   171 ;;
   172 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   173 ;;
   174 ;; *************** function _main *****************
   175 ;; Defined at:
   176 ;;		line 75 in file "D:\uni_2023-2024\cpe3201\embedded-systems\testbenches\pa-3-macalalad\Macalalad_LE3.c"
   177 ;; Parameters:    Size  Location     Type
   178 ;;		None
   179 ;; Auto vars:     Size  Location     Type
   180 ;;		None
   181 ;; Return value:  Size  Location     Type
   182 ;;		None               void
   183 ;; Registers used:
   184 ;;		wreg, status,2, status,0, pclath, cstack
   185 ;; Tracked objects:
   186 ;;		On entry : 17F/0
   187 ;;		On exit  : 0/0
   188 ;;		Unchanged: 0/0
   189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   190 ;;      Params:         0       0       0       0       0
   191 ;;      Locals:         0       0       0       0       0
   192 ;;      Temps:          0       1       0       0       0
   193 ;;      Totals:         0       1       0       0       0
   194 ;;Total ram usage:        1 bytes
   195 ;; Hardware stack levels required when called:    3
   196 ;; This function calls:
   197 ;;		_delay
   198 ;; This function is called by:
   199 ;;		Startup code after reset
   200 ;; This function uses a non-reentrant model
   201 ;;
   202                           
   203                           
   204                           ;psect for function _main
   205  001B                     _main:	
   206                           
   207                           ;Macalalad_LE3.c: 76: cnt = 0x00;
   208                           
   209                           ;incstack = 0
   210                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   211  001B  1283               	bcf	3,5	;RP0=0, select bank0
   212  001C  1303               	bcf	3,6	;RP1=0, select bank0
   213  001D  01A6               	clrf	_cnt
   214                           
   215                           ;Macalalad_LE3.c: 78: TRISB = 0x01;
   216  001E  3001               	movlw	1
   217  001F  1683               	bsf	3,5	;RP0=1, select bank1
   218  0020  1303               	bcf	3,6	;RP1=0, select bank1
   219  0021  0086               	movwf	6	;volatile
   220                           
   221                           ;Macalalad_LE3.c: 79: TRISC = 0x00;
   222  0022  0187               	clrf	7	;volatile
   223                           
   224                           ;Macalalad_LE3.c: 80: TRISD = 0xFF;
   225  0023  30FF               	movlw	255
   226  0024  0088               	movwf	8	;volatile
   227                           
   228                           ;Macalalad_LE3.c: 82: INTE = 1;
   229  0025  160B               	bsf	11,4	;volatile
   230                           
   231                           ;Macalalad_LE3.c: 83: INTF = 0;
   232  0026  108B               	bcf	11,1	;volatile
   233                           
   234                           ;Macalalad_LE3.c: 85: OPTION_REG = 0x44;
   235  0027  3044               	movlw	68
   236  0028  0081               	movwf	1	;volatile
   237                           
   238                           ;Macalalad_LE3.c: 87: T0IE = 1;
   239  0029  168B               	bsf	11,5	;volatile
   240                           
   241                           ;Macalalad_LE3.c: 88: T0IF = 0;
   242  002A  110B               	bcf	11,2	;volatile
   243                           
   244                           ;Macalalad_LE3.c: 90: GIE = 1;
   245  002B  178B               	bsf	11,7	;volatile
   246                           
   247                           ;Macalalad_LE3.c: 92: PORTC = cnt;
   248  002C  1283               	bcf	3,5	;RP0=0, select bank0
   249  002D  1303               	bcf	3,6	;RP1=0, select bank0
   250  002E                     L1:	
   251  002E  0826               	movf	_cnt,w
   252  002F  0087               	movwf	7	;volatile
   253                           
   254                           ;Macalalad_LE3.c: 95: delay(98);
   255                           
   256                           ;Macalalad_LE3.c: 94: while(1){
   257  0030  3062               	movlw	98
   258  0031  00A0               	movwf	delay@delay
   259  0032  3000               	movlw	0
   260  0033  00A1               	movwf	delay@delay+1
   261  0034  120A  118A  2097  120A  118A  	fcall	_delay
   262                           
   263                           ;Macalalad_LE3.c: 97: if(cnt == 0x00){
   264  0039  1283               	bcf	3,5	;RP0=0, select bank0
   265  003A  1303               	bcf	3,6	;RP1=0, select bank0
   266  003B  08A6               	movf	_cnt,f
   267  003C  1D03               	skipz
   268  003D  2840               	goto	l57
   269                           
   270                           ;Macalalad_LE3.c: 98: cnt = 0x00;
   271  003E  01A6               	clrf	_cnt
   272                           
   273                           ;Macalalad_LE3.c: 99: } else if(int_flag) {
   274  003F  282E               	goto	L1
   275  0040                     l57:	
   276  0040  1CF7               	btfss	_int_flag/(0+8),_int_flag& (0+7)
   277  0041  2844               	goto	l652
   278                           
   279                           ;Macalalad_LE3.c: 100: int_flag = 0;
   280  0042  10F7               	bcf	_int_flag/(0+8),_int_flag& (0+7)
   281                           
   282                           ;Macalalad_LE3.c: 101: } else {
   283  0043  282E               	goto	L1
   284  0044                     l652:	
   285                           
   286                           ;Macalalad_LE3.c: 102: cnt++;
   287  0044  3001               	movlw	1
   288  0045  00A5               	movwf	??_main
   289  0046  0825               	movf	??_main,w
   290  0047  07A6               	addwf	_cnt,f
   291  0048  282E               	goto	L1
   292  0049                     __end_of_main:	
   293                           ;Macalalad_LE3.c: 103: }
   294                           ;Macalalad_LE3.c: 105: PORTC = cnt;
   295                           
   296                           
   297                           	psect	text1
   298  0097                     __ptext1:	
   299 ;; *************** function _delay *****************
   300 ;; Defined at:
   301 ;;		line 64 in file "D:\uni_2023-2024\cpe3201\embedded-systems\testbenches\pa-3-macalalad\Macalalad_LE3.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;  delay           2    0[BANK0 ] int 
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  y               2    3[BANK0 ] int 
   306 ;; Return value:  Size  Location     Type
   307 ;;		None               void
   308 ;; Registers used:
   309 ;;		wreg, status,2
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       2       0       0       0
   316 ;;      Locals:         0       2       0       0       0
   317 ;;      Temps:          0       1       0       0       0
   318 ;;      Totals:         0       5       0       0       0
   319 ;;Total ram usage:        5 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; Hardware stack levels required when called:    2
   322 ;; This function calls:
   323 ;;		Nothing
   324 ;; This function is called by:
   325 ;;		_main
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           
   330                           ;psect for function _delay
   331  0097                     _delay:	
   332                           
   333                           ;Macalalad_LE3.c: 65: int y = 0;
   334                           
   335                           ;incstack = 0
   336                           ; Regs used in _delay: [wreg+status,2]
   337  0097  1283               	bcf	3,5	;RP0=0, select bank0
   338  0098  1303               	bcf	3,6	;RP1=0, select bank0
   339  0099  01A3               	clrf	delay@y
   340  009A  01A4               	clrf	delay@y+1
   341  009B                     l49:	
   342                           ;Macalalad_LE3.c: 67: while(y < delay) {
   343                           
   344  009B  1283               	bcf	3,5	;RP0=0, select bank0
   345  009C  1303               	bcf	3,6	;RP1=0, select bank0
   346  009D  0824               	movf	delay@y+1,w
   347  009E  3A80               	xorlw	128
   348  009F  00A2               	movwf	??_delay
   349  00A0  0821               	movf	delay@delay+1,w
   350  00A1  3A80               	xorlw	128
   351  00A2  0222               	subwf	??_delay,w
   352  00A3  1D03               	skipz
   353  00A4  28A7               	goto	u105
   354  00A5  0820               	movf	delay@delay,w
   355  00A6  0223               	subwf	delay@y,w
   356  00A7                     u105:	
   357  00A7  1803               	btfsc	3,0
   358  00A8  0008               	return
   359                           
   360                           ;Macalalad_LE3.c: 68: if(count_flag == 1){
   361  00A9  1C77               	btfss	_count_flag/(0+8),_count_flag& (0+7)
   362  00AA  289B               	goto	l49
   363                           
   364                           ;Macalalad_LE3.c: 69: count_flag = 0;
   365  00AB  1077               	bcf	_count_flag/(0+8),_count_flag& (0+7)
   366                           
   367                           ;Macalalad_LE3.c: 70: y++;
   368  00AC  3001               	movlw	1
   369  00AD  1283               	bcf	3,5	;RP0=0, select bank0
   370  00AE  1303               	bcf	3,6	;RP1=0, select bank0
   371  00AF  07A3               	addwf	delay@y,f
   372  00B0  1803               	skipnc
   373  00B1  0AA4               	incf	delay@y+1,f
   374  00B2  3000               	movlw	0
   375  00B3  07A4               	addwf	delay@y+1,f
   376  00B4  289B               	goto	l49
   377  00B5                     __end_of_delay:	
   378                           
   379                           	psect	text2
   380  0076                     __ptext2:	
   381 ;; *************** function _ISR *****************
   382 ;; Defined at:
   383 ;;		line 49 in file "D:\uni_2023-2024\cpe3201\embedded-systems\testbenches\pa-3-macalalad\Macalalad_LE3.c"
   384 ;; Parameters:    Size  Location     Type
   385 ;;		None
   386 ;; Auto vars:     Size  Location     Type
   387 ;;		None
   388 ;; Return value:  Size  Location     Type
   389 ;;		None               void
   390 ;; Registers used:
   391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   392 ;; Tracked objects:
   393 ;;		On entry : 0/0
   394 ;;		On exit  : 0/0
   395 ;;		Unchanged: 0/0
   396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   397 ;;      Params:         0       0       0       0       0
   398 ;;      Locals:         0       0       0       0       0
   399 ;;      Temps:          5       0       0       0       0
   400 ;;      Totals:         5       0       0       0       0
   401 ;;Total ram usage:        5 bytes
   402 ;; Hardware stack levels used:    1
   403 ;; Hardware stack levels required when called:    1
   404 ;; This function calls:
   405 ;;		_keypress_correct
   406 ;; This function is called by:
   407 ;;		Interrupt level 1
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           
   412                           ;psect for function _ISR
   413  0076                     _ISR:	
   414                           
   415                           ;Macalalad_LE3.c: 50: GIE = 0;
   416  0076  138B               	bcf	11,7	;volatile
   417                           
   418                           ;Macalalad_LE3.c: 52: if(INTF){
   419  0077  1C8B               	btfss	11,1	;volatile
   420  0078  2887               	goto	i1l43
   421                           
   422                           ;Macalalad_LE3.c: 53: INTF = 0;
   423  0079  108B               	bcf	11,1	;volatile
   424                           
   425                           ;Macalalad_LE3.c: 54: cnt = keypress_correct(PORTD);
   426  007A  0808               	movf	8,w	;volatile
   427  007B  120A  118A  2049  120A  118A  	fcall	_keypress_correct
   428  0080  00F2               	movwf	??_ISR
   429  0081  0872               	movf	??_ISR,w
   430  0082  1283               	bcf	3,5	;RP0=0, select bank0
   431  0083  1303               	bcf	3,6	;RP1=0, select bank0
   432  0084  00A6               	movwf	_cnt
   433                           
   434                           ;Macalalad_LE3.c: 55: int_flag = 1;
   435  0085  14F7               	bsf	_int_flag/(0+8),_int_flag& (0+7)
   436                           
   437                           ;Macalalad_LE3.c: 56: } else if (T0IF) {
   438  0086  288B               	goto	i1l44
   439  0087                     i1l43:	
   440  0087  1D0B               	btfss	11,2	;volatile
   441  0088  288B               	goto	i1l44
   442                           
   443                           ;Macalalad_LE3.c: 57: T0IF = 0;
   444  0089  110B               	bcf	11,2	;volatile
   445                           
   446                           ;Macalalad_LE3.c: 58: count_flag = 1;
   447  008A  1477               	bsf	_count_flag/(0+8),_count_flag& (0+7)
   448  008B                     i1l44:	
   449                           
   450                           ;Macalalad_LE3.c: 59: }
   451                           ;Macalalad_LE3.c: 61: GIE = 1;
   452  008B  178B               	bsf	11,7	;volatile
   453  008C  0876               	movf	??_ISR+4,w
   454  008D  00FF               	movwf	127
   455  008E  0875               	movf	??_ISR+3,w
   456  008F  008A               	movwf	10
   457  0090  0874               	movf	??_ISR+2,w
   458  0091  0084               	movwf	4
   459  0092  0E73               	swapf	(??_ISR+1)^(0+-128),w
   460  0093  0083               	movwf	3
   461  0094  0EFE               	swapf	126,f
   462  0095  0E7E               	swapf	126,w
   463  0096  0009               	retfie
   464  0097                     __end_of_ISR:	
   465                           
   466                           	psect	intentry
   467  0004                     __pintentry:	
   468                           ;incstack = 0
   469                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   470                           
   471  0004                     interrupt_function:	
   472  007E                     saved_w	set	btemp
   473  0004  00FE               	movwf	btemp
   474  0005  0E03               	swapf	3,w
   475  0006  00F3               	movwf	??_ISR+1
   476  0007  0804               	movf	4,w
   477  0008  00F4               	movwf	??_ISR+2
   478  0009  080A               	movf	10,w
   479  000A  00F5               	movwf	??_ISR+3
   480  000B  1283               	bcf	3,5	;RP0=0, select bank0
   481  000C  1303               	bcf	3,6	;RP1=0, select bank0
   482  000D  087F               	movf	btemp+1,w
   483  000E  00F6               	movwf	??_ISR+4
   484  000F  120A  118A  2876   	ljmp	_ISR
   485                           
   486                           	psect	text3
   487  0049                     __ptext3:	
   488 ;; *************** function _keypress_correct *****************
   489 ;; Defined at:
   490 ;;		line 20 in file "D:\uni_2023-2024\cpe3201\embedded-systems\testbenches\pa-3-macalalad\Macalalad_LE3.c"
   491 ;; Parameters:    Size  Location     Type
   492 ;;  x               1    wreg     unsigned char 
   493 ;; Auto vars:     Size  Location     Type
   494 ;;  x               1    1[COMMON] unsigned char 
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      unsigned char 
   497 ;; Registers used:
   498 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   499 ;; Tracked objects:
   500 ;;		On entry : 0/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   504 ;;      Params:         0       0       0       0       0
   505 ;;      Locals:         1       0       0       0       0
   506 ;;      Temps:          1       0       0       0       0
   507 ;;      Totals:         2       0       0       0       0
   508 ;;Total ram usage:        2 bytes
   509 ;; Hardware stack levels used:    1
   510 ;; This function calls:
   511 ;;		Nothing
   512 ;; This function is called by:
   513 ;;		_ISR
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           
   518                           ;psect for function _keypress_correct
   519  0049                     _keypress_correct:	
   520                           
   521                           ;incstack = 0
   522                           ; Regs used in _keypress_correct: [wreg-fsr0h+status,2+status,0]
   523                           ;keypress_correct@x stored from wreg
   524  0049  00F1               	movwf	keypress_correct@x
   525                           
   526                           ;Macalalad_LE3.c: 22: if(x > 0x0A){
   527  004A  300B               	movlw	11
   528  004B  0271               	subwf	keypress_correct@x,w
   529  004C  1C03               	skipc
   530  004D  2860               	goto	i1l606
   531                           
   532                           ;Macalalad_LE3.c: 23: return 0x00;
   533  004E  3000               	movlw	0
   534  004F  0008               	return
   535  0050                     i1l34:	
   536                           ;Macalalad_LE3.c: 27: case (0x00): x = 0x01;
   537                           
   538                           ;Macalalad_LE3.c: 24: }
   539                           ;Macalalad_LE3.c: 26: switch(x){
   540                           
   541  0050  01F1               	clrf	keypress_correct@x
   542  0051  0AF1               	incf	keypress_correct@x,f
   543                           
   544                           ;Macalalad_LE3.c: 28: break;
   545  0052  2874               	goto	i1l608
   546  0053                     i1l594:	
   547                           ;Macalalad_LE3.c: 30: case (0x01): x = 0x02;
   548                           
   549  0053  3002               	movlw	2
   550  0054  285C               	goto	L5
   551  0055                     i1l596:	
   552                           ;Macalalad_LE3.c: 33: case (0x02): x = 0x03;
   553                           
   554                           ;Macalalad_LE3.c: 31: break;
   555                           
   556  0055  3003               	movlw	3
   557  0056  285C               	goto	L5
   558  0057                     i1l598:	
   559                           ;Macalalad_LE3.c: 36: case (0x08): x = 0x07;
   560                           
   561                           ;Macalalad_LE3.c: 34: break;
   562                           
   563  0057  3007               	movlw	7
   564  0058  285C               	goto	L5
   565  0059                     i1l600:	
   566                           ;Macalalad_LE3.c: 39: case (0x09): x = 0x08;
   567                           
   568                           ;Macalalad_LE3.c: 37: break;
   569                           
   570  0059  3008               	movlw	8
   571  005A  285C               	goto	L5
   572  005B                     i1l602:	
   573                           ;Macalalad_LE3.c: 42: case (0x0A): x = 0x09;
   574                           
   575                           ;Macalalad_LE3.c: 40: break;
   576                           
   577  005B  3009               	movlw	9
   578  005C                     L5:	
   579  005C  00F0               	movwf	??_keypress_correct
   580  005D  0870               	movf	??_keypress_correct,w
   581  005E  00F1               	movwf	keypress_correct@x
   582                           
   583                           ;Macalalad_LE3.c: 45: }
   584                           
   585                           ;Macalalad_LE3.c: 43: break;
   586  005F  2874               	goto	i1l608
   587  0060                     i1l606:	
   588  0060  0871               	movf	keypress_correct@x,w
   589                           
   590                           ; Switch size 1, requested type "space"
   591                           ; Number of cases is 6, Range of values is 0 to 10
   592                           ; switch strategies available:
   593                           ; Name         Instructions Cycles
   594                           ; simple_byte           19    10 (average)
   595                           ; direct_byte           41     8 (fixed)
   596                           ; jumptable            260     6 (fixed)
   597                           ;	Chosen strategy is simple_byte
   598  0061  3A00               	xorlw	0	; case 0
   599  0062  1903               	skipnz
   600  0063  2850               	goto	i1l34
   601  0064  3A01               	xorlw	1	; case 1
   602  0065  1903               	skipnz
   603  0066  2853               	goto	i1l594
   604  0067  3A03               	xorlw	3	; case 2
   605  0068  1903               	skipnz
   606  0069  2855               	goto	i1l596
   607  006A  3A0A               	xorlw	10	; case 8
   608  006B  1903               	skipnz
   609  006C  2857               	goto	i1l598
   610  006D  3A01               	xorlw	1	; case 9
   611  006E  1903               	skipnz
   612  006F  2859               	goto	i1l600
   613  0070  3A03               	xorlw	3	; case 10
   614  0071  1903               	skipnz
   615  0072  285B               	goto	i1l602
   616  0073  2874               	goto	i1l608
   617  0074                     i1l608:	
   618                           
   619                           ;Macalalad_LE3.c: 46: return x;
   620  0074  0871               	movf	keypress_correct@x,w
   621  0075  0008               	return
   622  0076                     __end_of_keypress_correct:	
   623  007E                     btemp	set	126	;btemp
   624  007E                     wtemp	set	126
   625  007E                     wtemp0	set	126
   626  0080                     wtemp1	set	128
   627  0082                     wtemp2	set	130
   628  0084                     wtemp3	set	132
   629  0086                     wtemp4	set	134
   630  0088                     wtemp5	set	136
   631  007F                     wtemp6	set	127
   632  007E                     ttemp	set	126
   633  007E                     ttemp0	set	126
   634  0081                     ttemp1	set	129
   635  0084                     ttemp2	set	132
   636  0087                     ttemp3	set	135
   637  007F                     ttemp4	set	127
   638  007E                     ltemp	set	126
   639  007E                     ltemp0	set	126
   640  0082                     ltemp1	set	130
   641  0086                     ltemp2	set	134
   642  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       8
    BANK0            80      6       7
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_keypress_correct

Critical Paths under _main in BANK0

    _main->_delay

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      99
                                              5 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                5     3      2      99
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  5     5      0      72
                                              2 COMMON     5     5      0
                   _keypress_correct
 ---------------------------------------------------------------------------------
 (3) _keypress_correct                                     2     2      0      72
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 _ISR (ROOT)
   _keypress_correct

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       1       0        7.1%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      6       7       5        8.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Feb 25 21:26:40 2024

              __CFG_CP$OFF 0000                         l49 009B                         l57 0040  
                      l652 0044                        _GIE 005F                        u105 00A7  
             __CFG_CPD$OFF 0000                        _ISR 0076                        _cnt 0026  
                      fsr0 0004               __CFG_FOSC$XT 0000               __CFG_LVP$OFF 0000  
                     ?_ISR 0070                       _T0IE 005D                       _T0IF 005A  
                     _INTE 005C                       _INTF 0059                       i1l34 0050  
                     i1l43 0087                       i1l44 008B               __CFG_WRT$OFF 0000  
                     _main 001B                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0012                       ttemp 007E  
                     wtemp 007E                      ??_ISR 0072                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      i1l600 0059                      i1l602 005B  
                    i1l606 0060                      i1l608 0074                      i1l594 0053  
                    i1l596 0055                      i1l598 0057                      _PORTC 0007  
                    _PORTD 0008                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088              __CFG_PWRTE$ON 0000                      _delay 0097  
           __pbitbssCOMMON 03B8                      pclath 000A                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            __initialization 0015               __end_of_main 0049  
                   ??_main 0025          ?_keypress_correct 0070         ??_keypress_correct 0070  
                   ?_delay 0020                     delay@y 0023                     saved_w 007E  
  __end_of__initialization 0017             __pcstackCOMMON 0070              __end_of_delay 00B5  
                  ??_delay 0022                 __pbssBANK0 0026                 __pmaintext 001B  
               __pintentry 0004                 _count_flag 03B8                    __ptext0 0000  
                  __ptext1 0097                    __ptext2 0076                    __ptext3 0049  
             __size_of_ISR 0021                 delay@delay 0020       end_of_initialization 0017  
__size_of_keypress_correct 002D        start_initialization 0015                __end_of_ISR 0097  
                ___latbits 0002              __pcstackBANK0 0020           _keypress_correct 0049  
           __size_of_delay 001E          interrupt_function 0004              __size_of_main 002E  
                 _int_flag 03B9   __end_of_keypress_correct 0076                   intlevel1 0000  
        keypress_correct@x 0071                 _OPTION_REG 0081  
