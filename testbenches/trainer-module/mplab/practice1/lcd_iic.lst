

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Apr 27 12:44:39 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001D                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  0087                     	;# 
    56  0088                     	;# 
    57  0089                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0094                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010D                     	;# 
    73  010E                     	;# 
    74  010F                     	;# 
    75  018C                     	;# 
    76  018D                     	;# 
    77  0013                     _SSPBUF	set	19
    78  0014                     _SSPCON	set	20
    79  0093                     _SSPADD	set	147
    80  0091                     _SSPCON2	set	145
    81  0094                     _SSPSTAT	set	148
    82  048D                     _ACKDT	set	1165
    83  048C                     _ACKEN	set	1164
    84  048A                     _PEN	set	1162
    85  048B                     _RCEN	set	1163
    86  0489                     _RSEN	set	1161
    87  0488                     _SEN	set	1160
    88  043B                     _TRISC3	set	1083
    89  043C                     _TRISC4	set	1084
    90                           
    91                           	psect	text0
    92  0000                     __ptext0:	
    93                           ; #config settings
    94                           
    95                           
    96                           ;psect for function _I2C_Master_init
    97  0000                     
    98                           	psect	cinit
    99  07FC                     start_initialization:	
   100  07FC                     __initialization:	
   101  07FC                     end_of_initialization:	
   102                           ;End of C runtime variable initialization code
   103                           
   104  07FC                     __end_of__initialization:	
   105  07FC  0183               	clrf	3
   106  07FD  120A  118A  2F19   	ljmp	_main	;jump to C main() function
   107                           
   108                           	psect	cstackCOMMON
   109  0070                     __pcstackCOMMON:	
   110  0070                     ?_I2C_Master_init:	
   111  0070                     ??_I2C_Master_init:	
   112                           ; 0 bytes @ 0x0
   113                           
   114  0070                     ?_I2C_Wait:	
   115                           ; 0 bytes @ 0x0
   116                           
   117  0070                     ??_I2C_Wait:	
   118                           ; 0 bytes @ 0x0
   119                           
   120  0070                     ?_I2C_Start:	
   121                           ; 0 bytes @ 0x0
   122                           
   123  0070                     ??_I2C_Start:	
   124                           ; 0 bytes @ 0x0
   125                           
   126  0070                     ?_I2C_Stop:	
   127                           ; 0 bytes @ 0x0
   128                           
   129  0070                     ??_I2C_Stop:	
   130                           ; 0 bytes @ 0x0
   131                           
   132  0070                     ?_I2C_Send:	
   133                           ; 0 bytes @ 0x0
   134                           
   135  0070                     ??_I2C_Send:	
   136                           ; 0 bytes @ 0x0
   137                           
   138  0070                     ?_LCD_Command:	
   139                           ; 0 bytes @ 0x0
   140                           
   141  0070                     ?_LCD_Init:	
   142                           ; 0 bytes @ 0x0
   143                           
   144  0070                     ?_LCD_Char:	
   145                           ; 0 bytes @ 0x0
   146                           
   147  0070                     ?_main:	
   148                           ; 0 bytes @ 0x0
   149                           
   150  0070                     I2C_Send@dataOUT:	
   151                           ; 0 bytes @ 0x0
   152                           
   153                           
   154                           ; 1 bytes @ 0x0
   155  0070                     	ds	1
   156  0071                     ??_LCD_Command:	
   157  0071                     ??_LCD_Char:	
   158                           ; 0 bytes @ 0x1
   159                           
   160                           
   161                           ; 0 bytes @ 0x1
   162  0071                     	ds	2
   163  0073                     LCD_Command@command:	
   164  0073                     LCD_Char@data:	
   165                           ; 1 bytes @ 0x3
   166                           
   167                           
   168                           ; 1 bytes @ 0x3
   169  0073                     	ds	1
   170  0074                     ??_LCD_Init:	
   171  0074                     LCD_Char@chUPPER:	
   172                           ; 0 bytes @ 0x4
   173                           
   174                           
   175                           ; 1 bytes @ 0x4
   176  0074                     	ds	1
   177  0075                     LCD_Char@chLOWER:	
   178                           
   179                           ; 1 bytes @ 0x5
   180  0075                     	ds	1
   181  0076                     LCD_Char@control_byte:	
   182                           
   183                           ; 1 bytes @ 0x6
   184  0076                     	ds	1
   185  0077                     ??_main:	
   186                           
   187                           	psect	maintext
   188  0719                     __pmaintext:	
   189                           ; 0 bytes @ 0x7
   190 ;;
   191 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   192 ;;
   193 ;; *************** function _main *****************
   194 ;; Defined at:
   195 ;;		line 16 in file "C:\Users\ACER\Desktop\test\for-practice\mplab\practice1\main.c"
   196 ;; Parameters:    Size  Location     Type
   197 ;;		None
   198 ;; Auto vars:     Size  Location     Type
   199 ;;		None
   200 ;; Return value:  Size  Location     Type
   201 ;;		None               void
   202 ;; Registers used:
   203 ;;		wreg, status,2, status,0, pclath, cstack
   204 ;; Tracked objects:
   205 ;;		On entry : 17F/0
   206 ;;		On exit  : 0/0
   207 ;;		Unchanged: 0/0
   208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   209 ;;      Params:         0       0       0       0       0
   210 ;;      Locals:         0       0       0       0       0
   211 ;;      Temps:          0       0       0       0       0
   212 ;;      Totals:         0       0       0       0       0
   213 ;;Total ram usage:        0 bytes
   214 ;; Hardware stack levels required when called:    4
   215 ;; This function calls:
   216 ;;		_I2C_Master_init
   217 ;;		_LCD_Char
   218 ;;		_LCD_Init
   219 ;; This function is called by:
   220 ;;		Startup code after reset
   221 ;; This function uses a non-reentrant model
   222 ;;
   223                           
   224                           
   225                           ;psect for function _main
   226  0719                     _main:	
   227                           
   228                           ;main.c: 18: I2C_Master_init();
   229                           
   230                           ;incstack = 0
   231                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   232  0719  120A  118A  270A  120A  118A  	fcall	_I2C_Master_init
   233                           
   234                           ;main.c: 19: LCD_Init();
   235  071E  120A  118A  2751  120A  118A  	fcall	_LCD_Init
   236  0723                     L1:	
   237                           
   238                           ;main.c: 20: LCD_Char('A');
   239  0723  3041               	movlw	65
   240  0724  120A  118A  279C  120A  118A  	fcall	_LCD_Char
   241                           
   242                           ;main.c: 21: while(1)
   243  0729  2F23               	goto	L1
   244  072A                     __end_of_main:	
   245                           ;main.c: 22: {
   246                           ;main.c: 23: LCD_Char('A');
   247                           
   248                           
   249                           	psect	text1
   250  0751                     __ptext1:	
   251 ;; *************** function _LCD_Init *****************
   252 ;; Defined at:
   253 ;;		line 31 in file "C:\Users\ACER\Desktop\test\for-practice\mplab\practice1\lcd_i2c.h"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;		None
   258 ;; Return value:  Size  Location     Type
   259 ;;		None               void
   260 ;; Registers used:
   261 ;;		wreg, status,2, status,0, pclath, cstack
   262 ;; Tracked objects:
   263 ;;		On entry : 0/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   267 ;;      Params:         0       0       0       0       0
   268 ;;      Locals:         0       0       0       0       0
   269 ;;      Temps:          2       0       0       0       0
   270 ;;      Totals:         2       0       0       0       0
   271 ;;Total ram usage:        2 bytes
   272 ;; Hardware stack levels used:    1
   273 ;; Hardware stack levels required when called:    3
   274 ;; This function calls:
   275 ;;		_LCD_Command
   276 ;; This function is called by:
   277 ;;		_main
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           
   282                           ;psect for function _LCD_Init
   283  0751                     _LCD_Init:	
   284                           
   285                           ;lcd_i2c.h: 33: _delay((unsigned long)((40)*(4000000/4000.0)));
   286                           
   287                           ;incstack = 0
   288                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   289  0751  3034               	movlw	52
   290  0752  00F5               	movwf	??_LCD_Init+1
   291  0753  30F1               	movlw	241
   292  0754  00F4               	movwf	??_LCD_Init
   293  0755                     u67:	
   294  0755  0BF4               	decfsz	??_LCD_Init,f
   295  0756  2F55               	goto	u67
   296  0757  0BF5               	decfsz	??_LCD_Init+1,f
   297  0758  2F55               	goto	u67
   298  0759  2F5A               	nop2
   299                           
   300                           ;lcd_i2c.h: 35: LCD_Command(0x30);
   301  075A  3030               	movlw	48
   302  075B  120A  118A  272A  120A  118A  	fcall	_LCD_Command
   303                           
   304                           ;lcd_i2c.h: 36: _delay((unsigned long)((5)*(4000000/4000.0)));
   305  0760  3007               	movlw	7
   306  0761  00F5               	movwf	??_LCD_Init+1
   307  0762  307D               	movlw	125
   308  0763  00F4               	movwf	??_LCD_Init
   309  0764                     u77:	
   310  0764  0BF4               	decfsz	??_LCD_Init,f
   311  0765  2F64               	goto	u77
   312  0766  0BF5               	decfsz	??_LCD_Init+1,f
   313  0767  2F64               	goto	u77
   314                           
   315                           ;lcd_i2c.h: 37: LCD_Command(0x30);
   316  0768  3030               	movlw	48
   317  0769  120A  118A  272A  120A  118A  	fcall	_LCD_Command
   318                           
   319                           ;lcd_i2c.h: 38: _delay((unsigned long)((200)*(4000000/4000000.0)));
   320  076E  3042               	movlw	66
   321  076F  00F4               	movwf	??_LCD_Init
   322  0770                     u87:	
   323  0770  0BF4               	decfsz	??_LCD_Init,f
   324  0771  2F70               	goto	u87
   325  0772  0000               	nop
   326                           
   327                           ;lcd_i2c.h: 39: LCD_Command(0x30);
   328  0773  3030               	movlw	48
   329  0774  120A  118A  272A  120A  118A  	fcall	_LCD_Command
   330                           
   331                           ;lcd_i2c.h: 41: LCD_Command(0x28);
   332  0779  3028               	movlw	40
   333  077A  120A  118A  272A  120A  118A  	fcall	_LCD_Command
   334                           
   335                           ;lcd_i2c.h: 42: LCD_Command(0x08);
   336  077F  3008               	movlw	8
   337  0780  120A  118A  272A  120A  118A  	fcall	_LCD_Command
   338                           
   339                           ;lcd_i2c.h: 43: LCD_Command(0x01);
   340  0785  3001               	movlw	1
   341  0786  120A  118A  272A  120A  118A  	fcall	_LCD_Command
   342                           
   343                           ;lcd_i2c.h: 44: LCD_Command(0x06);
   344  078B  3006               	movlw	6
   345  078C  120A  118A  272A  120A  118A  	fcall	_LCD_Command
   346                           
   347                           ;lcd_i2c.h: 45: LCD_Command(0x0F);
   348  0791  300F               	movlw	15
   349  0792  120A  118A  272A  120A  118A  	fcall	_LCD_Command
   350                           
   351                           ;lcd_i2c.h: 46: LCD_Command(0x02);
   352  0797  3002               	movlw	2
   353  0798  120A  118A  272A   	fcall	_LCD_Command
   354  079B  0008               	return
   355  079C                     __end_of_LCD_Init:	
   356                           
   357                           	psect	text2
   358  072A                     __ptext2:	
   359 ;; *************** function _LCD_Command *****************
   360 ;; Defined at:
   361 ;;		line 21 in file "C:\Users\ACER\Desktop\test\for-practice\mplab\practice1\lcd_i2c.h"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  command         1    wreg     unsigned char 
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  command         1    3[COMMON] unsigned char 
   366 ;; Return value:  Size  Location     Type
   367 ;;		None               void
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, pclath, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         0       0       0       0       0
   376 ;;      Locals:         1       0       0       0       0
   377 ;;      Temps:          2       0       0       0       0
   378 ;;      Totals:         3       0       0       0       0
   379 ;;Total ram usage:        3 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; Hardware stack levels required when called:    2
   382 ;; This function calls:
   383 ;;		_I2C_Send
   384 ;;		_I2C_Start
   385 ;;		_I2C_Stop
   386 ;; This function is called by:
   387 ;;		_LCD_Init
   388 ;; This function uses a non-reentrant model
   389 ;;
   390                           
   391                           
   392                           ;psect for function _LCD_Command
   393  072A                     _LCD_Command:	
   394                           
   395                           ;incstack = 0
   396                           ; Regs used in _LCD_Command: [wreg+status,2+status,0+pclath+cstack]
   397                           ;LCD_Command@command stored from wreg
   398  072A  00F3               	movwf	LCD_Command@command
   399                           
   400                           ;lcd_i2c.h: 23: I2C_Start();
   401  072B  120A  118A  26EA  120A  118A  	fcall	_I2C_Start
   402                           
   403                           ;lcd_i2c.h: 24: I2C_Send(0x27 << 1);
   404  0730  304E               	movlw	78
   405  0731  120A  118A  2701  120A  118A  	fcall	_I2C_Send
   406                           
   407                           ;lcd_i2c.h: 25: I2C_Send(0x00);
   408  0736  3000               	movlw	0
   409  0737  120A  118A  2701  120A  118A  	fcall	_I2C_Send
   410                           
   411                           ;lcd_i2c.h: 26: I2C_Send(command);
   412  073C  0873               	movf	LCD_Command@command,w
   413  073D  120A  118A  2701  120A  118A  	fcall	_I2C_Send
   414                           
   415                           ;lcd_i2c.h: 27: I2C_Stop();
   416  0742  120A  118A  26F1  120A  118A  	fcall	_I2C_Stop
   417                           
   418                           ;lcd_i2c.h: 28: _delay((unsigned long)((2)*(4000000/4000.0)));
   419  0747  3003               	movlw	3
   420  0748  00F2               	movwf	??_LCD_Command+1
   421  0749  3097               	movlw	151
   422  074A  00F1               	movwf	??_LCD_Command
   423  074B                     u97:	
   424  074B  0BF1               	decfsz	??_LCD_Command,f
   425  074C  2F4B               	goto	u97
   426  074D  0BF2               	decfsz	??_LCD_Command+1,f
   427  074E  2F4B               	goto	u97
   428  074F  2F50               	nop2
   429  0750  0008               	return
   430  0751                     __end_of_LCD_Command:	
   431                           
   432                           	psect	text3
   433  079C                     __ptext3:	
   434 ;; *************** function _LCD_Char *****************
   435 ;; Defined at:
   436 ;;		line 49 in file "C:\Users\ACER\Desktop\test\for-practice\mplab\practice1\lcd_i2c.h"
   437 ;; Parameters:    Size  Location     Type
   438 ;;  data            1    wreg     unsigned char 
   439 ;; Auto vars:     Size  Location     Type
   440 ;;  data            1    3[COMMON] unsigned char 
   441 ;;  control_byte    1    6[COMMON] unsigned char 
   442 ;;  chLOWER         1    5[COMMON] unsigned char 
   443 ;;  chUPPER         1    4[COMMON] unsigned char 
   444 ;; Return value:  Size  Location     Type
   445 ;;		None               void
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         0       0       0       0       0
   454 ;;      Locals:         4       0       0       0       0
   455 ;;      Temps:          2       0       0       0       0
   456 ;;      Totals:         6       0       0       0       0
   457 ;;Total ram usage:        6 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; Hardware stack levels required when called:    2
   460 ;; This function calls:
   461 ;;		_I2C_Send
   462 ;;		_I2C_Start
   463 ;;		_I2C_Stop
   464 ;; This function is called by:
   465 ;;		_main
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           
   470                           ;psect for function _LCD_Char
   471  079C                     _LCD_Char:	
   472                           
   473                           ;incstack = 0
   474                           ; Regs used in _LCD_Char: [wreg+status,2+status,0+pclath+cstack]
   475                           ;LCD_Char@data stored from wreg
   476  079C  00F3               	movwf	LCD_Char@data
   477                           
   478                           ;lcd_i2c.h: 51: char chUPPER, chLOWER, control_byte;
   479                           ;lcd_i2c.h: 53: chUPPER = (data & 0xF0);
   480  079D  0873               	movf	LCD_Char@data,w
   481  079E  39F0               	andlw	240
   482  079F  00F1               	movwf	??_LCD_Char
   483  07A0  0871               	movf	??_LCD_Char,w
   484  07A1  00F4               	movwf	LCD_Char@chUPPER
   485                           
   486                           ;lcd_i2c.h: 54: chLOWER = (data << 4) & 0xF0;
   487  07A2  0873               	movf	LCD_Char@data,w
   488  07A3  00F1               	movwf	??_LCD_Char
   489  07A4  3003               	movlw	3
   490  07A5                     u35:	
   491  07A5  1003               	clrc
   492  07A6  0DF1               	rlf	??_LCD_Char,f
   493  07A7  3EFF               	addlw	-1
   494  07A8  1D03               	skipz
   495  07A9  2FA5               	goto	u35
   496  07AA  1003               	clrc
   497  07AB  0D71               	rlf	??_LCD_Char,w
   498  07AC  39F0               	andlw	240
   499  07AD  00F2               	movwf	??_LCD_Char+1
   500  07AE  0872               	movf	??_LCD_Char+1,w
   501  07AF  00F5               	movwf	LCD_Char@chLOWER
   502                           
   503                           ;lcd_i2c.h: 56: control_byte = 0x01 | 0x08;
   504  07B0  3009               	movlw	9
   505  07B1  00F1               	movwf	??_LCD_Char
   506  07B2  0871               	movf	??_LCD_Char,w
   507  07B3  00F6               	movwf	LCD_Char@control_byte
   508                           
   509                           ;lcd_i2c.h: 59: I2C_Start();
   510  07B4  120A  118A  26EA  120A  118A  	fcall	_I2C_Start
   511                           
   512                           ;lcd_i2c.h: 60: I2C_Send(0x27 << 1);
   513  07B9  304E               	movlw	78
   514  07BA  120A  118A  2701  120A  118A  	fcall	_I2C_Send
   515                           
   516                           ;lcd_i2c.h: 61: I2C_Send(chUPPER | control_byte | 0x04);
   517  07BF  0874               	movf	LCD_Char@chUPPER,w
   518  07C0  0476               	iorwf	LCD_Char@control_byte,w
   519  07C1  3804               	iorlw	4
   520  07C2  120A  118A  2701  120A  118A  	fcall	_I2C_Send
   521                           
   522                           ;lcd_i2c.h: 62: I2C_Send(chUPPER | control_byte);
   523  07C7  0874               	movf	LCD_Char@chUPPER,w
   524  07C8  0476               	iorwf	LCD_Char@control_byte,w
   525  07C9  120A  118A  2701  120A  118A  	fcall	_I2C_Send
   526                           
   527                           ;lcd_i2c.h: 63: I2C_Stop();
   528  07CE  120A  118A  26F1  120A  118A  	fcall	_I2C_Stop
   529                           
   530                           ;lcd_i2c.h: 66: I2C_Start();
   531  07D3  120A  118A  26EA  120A  118A  	fcall	_I2C_Start
   532                           
   533                           ;lcd_i2c.h: 67: I2C_Send(0x27 << 1);
   534  07D8  304E               	movlw	78
   535  07D9  120A  118A  2701  120A  118A  	fcall	_I2C_Send
   536                           
   537                           ;lcd_i2c.h: 68: I2C_Send(chLOWER | control_byte | 0x04);
   538  07DE  0875               	movf	LCD_Char@chLOWER,w
   539  07DF  0476               	iorwf	LCD_Char@control_byte,w
   540  07E0  3804               	iorlw	4
   541  07E1  120A  118A  2701  120A  118A  	fcall	_I2C_Send
   542                           
   543                           ;lcd_i2c.h: 69: I2C_Send(chLOWER | control_byte);
   544  07E6  0875               	movf	LCD_Char@chLOWER,w
   545  07E7  0476               	iorwf	LCD_Char@control_byte,w
   546  07E8  120A  118A  2701  120A  118A  	fcall	_I2C_Send
   547                           
   548                           ;lcd_i2c.h: 70: I2C_Stop();
   549  07ED  120A  118A  26F1  120A  118A  	fcall	_I2C_Stop
   550                           
   551                           ;lcd_i2c.h: 72: _delay((unsigned long)((2)*(4000000/4000.0)));
   552  07F2  3003               	movlw	3
   553  07F3  00F2               	movwf	??_LCD_Char+1
   554  07F4  3097               	movlw	151
   555  07F5  00F1               	movwf	??_LCD_Char
   556  07F6                     u107:	
   557  07F6  0BF1               	decfsz	??_LCD_Char,f
   558  07F7  2FF6               	goto	u107
   559  07F8  0BF2               	decfsz	??_LCD_Char+1,f
   560  07F9  2FF6               	goto	u107
   561  07FA  2FFB               	nop2
   562  07FB  0008               	return
   563  07FC                     __end_of_LCD_Char:	
   564                           
   565                           	psect	text4
   566  06F1                     __ptext4:	
   567 ;; *************** function _I2C_Stop *****************
   568 ;; Defined at:
   569 ;;		line 42 in file "C:\Users\ACER\Desktop\test\for-practice\mplab\practice1\i2c_func.h"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;		None               void
   576 ;; Registers used:
   577 ;;		wreg, status,2, status,0, pclath, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0
   586 ;;      Totals:         0       0       0       0       0
   587 ;;Total ram usage:        0 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    1
   590 ;; This function calls:
   591 ;;		_I2C_Wait
   592 ;; This function is called by:
   593 ;;		_LCD_Command
   594 ;;		_LCD_Char
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           
   599                           ;psect for function _I2C_Stop
   600  06F1                     _I2C_Stop:	
   601                           
   602                           ;i2c_func.h: 44: I2C_Wait();
   603                           
   604                           ;incstack = 0
   605                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
   606  06F1  120A  118A  26F8   	fcall	_I2C_Wait
   607                           
   608                           ;i2c_func.h: 45: PEN = 1;
   609  06F4  1683               	bsf	3,5	;RP0=1, select bank1
   610  06F5  1303               	bcf	3,6	;RP1=0, select bank1
   611  06F6  1511               	bsf	17,2	;volatile
   612  06F7  0008               	return
   613  06F8                     __end_of_I2C_Stop:	
   614                           
   615                           	psect	text5
   616  06EA                     __ptext5:	
   617 ;; *************** function _I2C_Start *****************
   618 ;; Defined at:
   619 ;;		line 30 in file "C:\Users\ACER\Desktop\test\for-practice\mplab\practice1\i2c_func.h"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;		None               void
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    1
   640 ;; This function calls:
   641 ;;		_I2C_Wait
   642 ;; This function is called by:
   643 ;;		_LCD_Command
   644 ;;		_LCD_Char
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _I2C_Start
   650  06EA                     _I2C_Start:	
   651                           
   652                           ;i2c_func.h: 32: I2C_Wait();
   653                           
   654                           ;incstack = 0
   655                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
   656  06EA  120A  118A  26F8   	fcall	_I2C_Wait
   657                           
   658                           ;i2c_func.h: 33: SEN = 1;
   659  06ED  1683               	bsf	3,5	;RP0=1, select bank1
   660  06EE  1303               	bcf	3,6	;RP1=0, select bank1
   661  06EF  1411               	bsf	17,0	;volatile
   662  06F0  0008               	return
   663  06F1                     __end_of_I2C_Start:	
   664                           
   665                           	psect	text6
   666  0701                     __ptext6:	
   667 ;; *************** function _I2C_Send *****************
   668 ;; Defined at:
   669 ;;		line 48 in file "C:\Users\ACER\Desktop\test\for-practice\mplab\practice1\i2c_func.h"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  dataOUT         1    wreg     unsigned char 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  dataOUT         1    0[COMMON] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;		None               void
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, pclath, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         1       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0
   686 ;;      Totals:         1       0       0       0       0
   687 ;;Total ram usage:        1 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    1
   690 ;; This function calls:
   691 ;;		_I2C_Wait
   692 ;; This function is called by:
   693 ;;		_LCD_Command
   694 ;;		_LCD_Char
   695 ;; This function uses a non-reentrant model
   696 ;;
   697                           
   698                           
   699                           ;psect for function _I2C_Send
   700  0701                     _I2C_Send:	
   701                           
   702                           ;incstack = 0
   703                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
   704                           ;I2C_Send@dataOUT stored from wreg
   705  0701  00F0               	movwf	I2C_Send@dataOUT
   706                           
   707                           ;i2c_func.h: 50: I2C_Wait();
   708  0702  120A  118A  26F8   	fcall	_I2C_Wait
   709                           
   710                           ;i2c_func.h: 51: SSPBUF = dataOUT;
   711  0705  0870               	movf	I2C_Send@dataOUT,w
   712  0706  1283               	bcf	3,5	;RP0=0, select bank0
   713  0707  1303               	bcf	3,6	;RP1=0, select bank0
   714  0708  0093               	movwf	19	;volatile
   715  0709  0008               	return
   716  070A                     __end_of_I2C_Send:	
   717                           
   718                           	psect	text7
   719  06F8                     __ptext7:	
   720 ;; *************** function _I2C_Wait *****************
   721 ;; Defined at:
   722 ;;		line 25 in file "C:\Users\ACER\Desktop\test\for-practice\mplab\practice1\i2c_func.h"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;		None               void
   729 ;; Registers used:
   730 ;;		wreg, status,2
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         0       0       0       0       0
   738 ;;      Temps:          0       0       0       0       0
   739 ;;      Totals:         0       0       0       0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_I2C_Start
   746 ;;		_I2C_Stop
   747 ;;		_I2C_Send
   748 ;;		_I2C_Repeated_Start
   749 ;;		_I2C_Read
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function _I2C_Wait
   755  06F8                     _I2C_Wait:	
   756  06F8                     l34:	
   757                           ;i2c_func.h: 27: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
   758                           
   759                           ;incstack = 0
   760                           ; Regs used in _I2C_Wait: [wreg+status,2]
   761                           
   762  06F8  1683               	bsf	3,5	;RP0=1, select bank1
   763  06F9  1303               	bcf	3,6	;RP1=0, select bank1
   764  06FA  1914               	btfsc	20,2	;volatile
   765  06FB  2EF8               	goto	l34
   766  06FC  0811               	movf	17,w	;volatile
   767  06FD  391F               	andlw	31
   768  06FE  1903               	btfsc	3,2
   769  06FF  0008               	return
   770  0700  2EF8               	goto	l34
   771  0701                     __end_of_I2C_Wait:	
   772                           
   773                           	psect	text8
   774  070A                     __ptext8:	
   775 ;; *************** function _I2C_Master_init *****************
   776 ;; Defined at:
   777 ;;		line 15 in file "C:\Users\ACER\Desktop\test\for-practice\mplab\practice1\i2c_func.h"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;		None
   782 ;; Return value:  Size  Location     Type
   783 ;;		None               void
   784 ;; Registers used:
   785 ;;		wreg, status,2
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   791 ;;      Params:         0       0       0       0       0
   792 ;;      Locals:         0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0
   794 ;;      Totals:         0       0       0       0       0
   795 ;;Total ram usage:        0 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_main
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _I2C_Master_init
   806  070A                     _I2C_Master_init:	
   807                           
   808                           ;i2c_func.h: 17: TRISC3 = 1;
   809                           
   810                           ;incstack = 0
   811                           ; Regs used in _I2C_Master_init: [wreg+status,2]
   812  070A  1683               	bsf	3,5	;RP0=1, select bank1
   813  070B  1303               	bcf	3,6	;RP1=0, select bank1
   814  070C  1587               	bsf	7,3	;volatile
   815                           
   816                           ;i2c_func.h: 18: TRISC4 = 1;
   817  070D  1607               	bsf	7,4	;volatile
   818                           
   819                           ;i2c_func.h: 19: SSPCON = 0x28;
   820  070E  3028               	movlw	40
   821  070F  1283               	bcf	3,5	;RP0=0, select bank0
   822  0710  1303               	bcf	3,6	;RP1=0, select bank0
   823  0711  0094               	movwf	20	;volatile
   824                           
   825                           ;i2c_func.h: 20: SSPCON2 = 0x00;
   826  0712  1683               	bsf	3,5	;RP0=1, select bank1
   827  0713  1303               	bcf	3,6	;RP1=0, select bank1
   828  0714  0191               	clrf	17	;volatile
   829                           
   830                           ;i2c_func.h: 21: SSPADD = 0x09;
   831  0715  3009               	movlw	9
   832  0716  0093               	movwf	19	;volatile
   833                           
   834                           ;i2c_func.h: 22: SSPSTAT = 0x00;
   835  0717  0194               	clrf	20	;volatile
   836  0718  0008               	return
   837  0719                     __end_of_I2C_Master_init:	
   838  007E                     btemp	set	126	;btemp
   839  007E                     wtemp	set	126
   840  007E                     wtemp0	set	126
   841  0080                     wtemp1	set	128
   842  0082                     wtemp2	set	130
   843  0084                     wtemp3	set	132
   844  0086                     wtemp4	set	134
   845  0088                     wtemp5	set	136
   846  007F                     wtemp6	set	127
   847  007E                     ttemp	set	126
   848  007E                     ttemp0	set	126
   849  0081                     ttemp1	set	129
   850  0084                     ttemp2	set	132
   851  0087                     ttemp3	set	135
   852  007F                     ttemp4	set	127
   853  007E                     ltemp	set	126
   854  007E                     ltemp0	set	126
   855  0082                     ltemp1	set	130
   856  0086                     ltemp2	set	134
   857  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Command->_I2C_Send
    _LCD_Char->_I2C_Send

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     195
                    _I2C_Master_init
                           _LCD_Char
                           _LCD_Init
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      30
                                              4 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      30
                                              1 COMMON     3     3      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _LCD_Char                                             6     6      0     165
                                              1 COMMON     6     6      0
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Send                                             1     1      0      15
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_init
   _LCD_Char
     _I2C_Send
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
   _LCD_Init
     _LCD_Command
       _I2C_Send
         _I2C_Wait
       _I2C_Start
         _I2C_Wait
       _I2C_Stop
         _I2C_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Apr 27 12:44:39 2024

      __size_of_I2C_Start 0007               __CFG_CP$OFF 0000              ?_LCD_Command 0070  
                      l34 06F8                        u35 07A5                        u67 0755  
                      u77 0764                        u87 0770                        u97 074B  
                     u107 07F6                       _PEN 048A              __CFG_CPD$OFF 0000  
                     _SEN 0488              __CFG_FOSC$XT 0000              __CFG_LVP$OFF 0000  
                    _RCEN 048B                      _RSEN 0489              __CFG_WRT$OFF 0000  
                    _main 0719          __end_of_I2C_Send 070A                      btemp 007E  
        __end_of_I2C_Wait 0701          __end_of_I2C_Stop 06F8             __CFG_BOREN$ON 0000  
                    ltemp 007E                      start 0000                      ttemp 007E  
                    wtemp 007E          __end_of_LCD_Char 07FC          __end_of_LCD_Init 079C  
            LCD_Char@data 0073          ?_I2C_Master_init 0070                     ?_main 0070  
                   _ACKEN 048C                     _ACKDT 048D             __CFG_WDTE$OFF 0000  
           __CFG_PWRTE$ON 0000         __end_of_I2C_Start 06F1                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   ttemp0 007E                     ttemp1 0081                     ttemp2 0084  
                   ttemp3 0087                     ttemp4 007F                     status 0003  
                   wtemp0 007E                     wtemp1 0080                     wtemp2 0082  
                   wtemp3 0084                     wtemp4 0086                     wtemp5 0088  
                   wtemp6 007F           __initialization 07FC              __end_of_main 072A  
                  ??_main 0077                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
    __size_of_LCD_Command 0027                 ?_I2C_Send 0070                 ?_I2C_Wait 0070  
               ?_I2C_Stop 0070        LCD_Command@command 0073                 ?_LCD_Char 0070  
 __end_of__initialization 07FC                 ?_LCD_Init 0070            __pcstackCOMMON 0070  
              ??_I2C_Send 0070                ??_I2C_Wait 0070                ??_I2C_Stop 0070  
              ??_LCD_Char 0071                ??_LCD_Init 0074                __pmaintext 0719  
                 _SSPCON2 0091                   _SSPSTAT 0094                 _I2C_Start 06EA  
                 __ptext0 0000                   __ptext1 0751                   __ptext2 072A  
                 __ptext3 079C                   __ptext4 06F1                   __ptext5 06EA  
                 __ptext6 0701                   __ptext7 06F8                   __ptext8 070A  
__size_of_I2C_Master_init 000F      end_of_initialization 07FC                ?_I2C_Start 0070  
       __size_of_I2C_Send 0009         __size_of_I2C_Wait 0009         __size_of_I2C_Stop 0007  
       __size_of_LCD_Char 0060         __size_of_LCD_Init 004B             ??_LCD_Command 0071  
     start_initialization 07FC         ??_I2C_Master_init 0070               ??_I2C_Start 0070  
         LCD_Char@chLOWER 0075           LCD_Char@chUPPER 0074       __end_of_LCD_Command 0751  
               ___latbits 0002      LCD_Char@control_byte 0076                  _I2C_Send 0701  
                _I2C_Wait 06F8                  _I2C_Stop 06F1                  _LCD_Char 079C  
                _LCD_Init 0751               _LCD_Command 072A           I2C_Send@dataOUT 0070  
         _I2C_Master_init 070A             __size_of_main 0011   __end_of_I2C_Master_init 0719  
