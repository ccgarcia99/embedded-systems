

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sun Apr 21 11:44:05 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     	;# 
    12  0001                     	;# 
    13  0002                     	;# 
    14  0003                     	;# 
    15  0004                     	;# 
    16  0005                     	;# 
    17  0006                     	;# 
    18  0007                     	;# 
    19  0008                     	;# 
    20  0009                     	;# 
    21  000A                     	;# 
    22  000B                     	;# 
    23  000C                     	;# 
    24  000D                     	;# 
    25  000E                     	;# 
    26  000E                     	;# 
    27  000F                     	;# 
    28  0010                     	;# 
    29  0011                     	;# 
    30  0012                     	;# 
    31  0013                     	;# 
    32  0014                     	;# 
    33  0015                     	;# 
    34  0015                     	;# 
    35  0016                     	;# 
    36  0017                     	;# 
    37  0018                     	;# 
    38  0019                     	;# 
    39  001A                     	;# 
    40  001B                     	;# 
    41  001B                     	;# 
    42  001C                     	;# 
    43  001D                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  0081                     	;# 
    47  0085                     	;# 
    48  0086                     	;# 
    49  0087                     	;# 
    50  0088                     	;# 
    51  0089                     	;# 
    52  008C                     	;# 
    53  008D                     	;# 
    54  008E                     	;# 
    55  0091                     	;# 
    56  0092                     	;# 
    57  0093                     	;# 
    58  0094                     	;# 
    59  0098                     	;# 
    60  0099                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  009F                     	;# 
    65  010C                     	;# 
    66  010D                     	;# 
    67  010E                     	;# 
    68  010F                     	;# 
    69  018C                     	;# 
    70  018D                     	;# 
    71  0006                     _PORTB	set	6
    72  0008                     _PORTD	set	8
    73  001A                     _RCREG	set	26
    74  0018                     _RCSTA	set	24
    75  0001                     _TMR0	set	1
    76  0019                     _TXREG	set	25
    77  005F                     _GIE	set	95
    78  0065                     _RCIF	set	101
    79  005A                     _T0IF	set	90
    80  005D                     _TMR0IE	set	93
    81  005A                     _TMR0IF	set	90
    82  0064                     _TXIF	set	100
    83  0081                     _OPTION_REG	set	129
    84  0099                     _SPBRG	set	153
    85  0086                     _TRISB	set	134
    86  0088                     _TRISD	set	136
    87  0098                     _TXSTA	set	152
    88  043E                     _TRISC6	set	1086
    89  043F                     _TRISC7	set	1087
    90                           
    91                           	psect	text0
    92  0000                     __ptext0:	
    93                           ; #config settings
    94                           
    95                           
    96                           ;psect for function _serial_init
    97  0000                     
    98                           	psect	cinit
    99  07FC                     start_initialization:	
   100  07FC                     __initialization:	
   101  07FC                     end_of_initialization:	
   102                           ;End of C runtime variable initialization code
   103                           
   104  07FC                     __end_of__initialization:	
   105  07FC  0183               	clrf	3
   106  07FD  120A  118A  2FCC   	ljmp	_main	;jump to C main() function
   107                           
   108                           	psect	cstackCOMMON
   109  0070                     __pcstackCOMMON:	
   110  0070                     ?_serial_init:	
   111  0070                     ??_serial_init:	
   112                           ; 0 bytes @ 0x0
   113                           
   114  0070                     ??_serial_read:	
   115                           ; 0 bytes @ 0x0
   116                           
   117  0070                     ?_main:	
   118                           ; 0 bytes @ 0x0
   119                           
   120  0070                     ??_main:	
   121                           ; 0 bytes @ 0x0
   122                           
   123  0070                     ?_serial_read:	
   124                           ; 0 bytes @ 0x0
   125                           
   126                           
   127                           ; 1 bytes @ 0x0
   128  0070                     	ds	1
   129  0071                     main@dataIN:	
   130                           
   131                           ; 1 bytes @ 0x1
   132  0071                     	ds	1
   133  0072                     main@dataOUT:	
   134                           
   135                           ; 1 bytes @ 0x2
   136  0072                     	ds	1
   137                           
   138                           	psect	maintext
   139  07CC                     __pmaintext:	
   140 ;;
   141 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   142 ;;
   143 ;; *************** function _main *****************
   144 ;; Defined at:
   145 ;;		line 24 in file "D:\uni_2023-2024\cpe3201\embedded-systems\testbenches\serial-communications\receive\usart-rx.c"
   146 ;; Parameters:    Size  Location     Type
   147 ;;		None
   148 ;; Auto vars:     Size  Location     Type
   149 ;;  dataOUT         1    2[COMMON] unsigned char 
   150 ;;  dataIN          1    1[COMMON] unsigned char 
   151 ;; Return value:  Size  Location     Type
   152 ;;		None               void
   153 ;; Registers used:
   154 ;;		wreg, status,2, status,0, pclath, cstack
   155 ;; Tracked objects:
   156 ;;		On entry : 17F/0
   157 ;;		On exit  : 0/0
   158 ;;		Unchanged: 0/0
   159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   160 ;;      Params:         0       0       0       0       0
   161 ;;      Locals:         2       0       0       0       0
   162 ;;      Temps:          1       0       0       0       0
   163 ;;      Totals:         3       0       0       0       0
   164 ;;Total ram usage:        3 bytes
   165 ;; Hardware stack levels required when called:    1
   166 ;; This function calls:
   167 ;;		_serial_init
   168 ;;		_serial_read
   169 ;; This function is called by:
   170 ;;		Startup code after reset
   171 ;; This function uses a non-reentrant model
   172 ;;
   173                           
   174                           
   175                           ;psect for function _main
   176  07CC                     _main:	
   177                           
   178                           ;usart-rx.c: 27: unsigned char dataIN = 0;
   179                           
   180                           ;incstack = 0
   181                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   182  07CC  01F1               	clrf	main@dataIN
   183                           
   184                           ;usart-rx.c: 28: unsigned char dataOUT = 0;
   185  07CD  01F2               	clrf	main@dataOUT
   186                           
   187                           ;usart-rx.c: 31: TRISB = 0x00;
   188  07CE  1683               	bsf	3,5	;RP0=1, select bank1
   189  07CF  1303               	bcf	3,6	;RP1=0, select bank1
   190  07D0  0186               	clrf	6	;volatile
   191                           
   192                           ;usart-rx.c: 32: PORTB = 0x00;
   193  07D1  1283               	bcf	3,5	;RP0=0, select bank0
   194  07D2  1303               	bcf	3,6	;RP1=0, select bank0
   195  07D3  0186               	clrf	6	;volatile
   196                           
   197                           ;usart-rx.c: 33: TRISD = 0x00;
   198  07D4  1683               	bsf	3,5	;RP0=1, select bank1
   199  07D5  1303               	bcf	3,6	;RP1=0, select bank1
   200  07D6  0188               	clrf	8	;volatile
   201                           
   202                           ;usart-rx.c: 34: PORTD = 0x00;
   203  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   204  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   205  07D9  0188               	clrf	8	;volatile
   206                           
   207                           ;usart-rx.c: 35: TRISC7 = 1;
   208  07DA  1683               	bsf	3,5	;RP0=1, select bank1
   209  07DB  1303               	bcf	3,6	;RP1=0, select bank1
   210  07DC  1787               	bsf	7,7	;volatile
   211                           
   212                           ;usart-rx.c: 36: TRISC6 = 0;
   213  07DD  1307               	bcf	7,6	;volatile
   214                           
   215                           ;usart-rx.c: 39: OPTION_REG = 0x44;
   216  07DE  3044               	movlw	68
   217  07DF  0081               	movwf	1	;volatile
   218                           
   219                           ;usart-rx.c: 40: TMR0 = 0;
   220  07E0  1283               	bcf	3,5	;RP0=0, select bank0
   221  07E1  1303               	bcf	3,6	;RP1=0, select bank0
   222  07E2  0181               	clrf	1	;volatile
   223                           
   224                           ;usart-rx.c: 41: TMR0IE = 1;
   225  07E3  168B               	bsf	11,5	;volatile
   226                           
   227                           ;usart-rx.c: 42: TMR0IF = 0;
   228  07E4  110B               	bcf	11,2	;volatile
   229                           
   230                           ;usart-rx.c: 43: GIE = 1;
   231  07E5  178B               	bsf	11,7	;volatile
   232                           
   233                           ;usart-rx.c: 46: serial_init();
   234  07E6  120A  118A  27BD  120A  118A  	fcall	_serial_init
   235  07EB                     l599:	
   236                           ;usart-rx.c: 49: while(1)
   237                           
   238                           
   239                           ;usart-rx.c: 50: {
   240                           ;usart-rx.c: 51: dataIN = serial_read();
   241  07EB  120A  118A  27B7  120A  118A  	fcall	_serial_read
   242  07F0  00F0               	movwf	??_main
   243  07F1  0870               	movf	??_main,w
   244  07F2  00F1               	movwf	main@dataIN
   245                           
   246                           ;usart-rx.c: 52: dataOUT = dataIN;
   247  07F3  0871               	movf	main@dataIN,w
   248  07F4  00F0               	movwf	??_main
   249  07F5  0870               	movf	??_main,w
   250  07F6  00F2               	movwf	main@dataOUT
   251                           
   252                           ;usart-rx.c: 53: PORTD = dataOUT;
   253  07F7  0872               	movf	main@dataOUT,w
   254  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   255  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   256  07FA  0088               	movwf	8	;volatile
   257  07FB  2FEB               	goto	l599
   258  07FC                     __end_of_main:	
   259                           
   260                           	psect	text1
   261  07B7                     __ptext1:	
   262 ;; *************** function _serial_read *****************
   263 ;; Defined at:
   264 ;;		line 40 in file "D:\uni_2023-2024\cpe3201\embedded-systems\testbenches\serial-communications\receive\usart-processes
      +.h"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;		None
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      unsigned char 
   271 ;; Registers used:
   272 ;;		wreg
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   278 ;;      Params:         0       0       0       0       0
   279 ;;      Locals:         0       0       0       0       0
   280 ;;      Temps:          0       0       0       0       0
   281 ;;      Totals:         0       0       0       0       0
   282 ;;Total ram usage:        0 bytes
   283 ;; Hardware stack levels used:    1
   284 ;; This function calls:
   285 ;;		Nothing
   286 ;; This function is called by:
   287 ;;		_main
   288 ;;		_serial_handshake
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           
   293                           ;psect for function _serial_read
   294  07B7                     _serial_read:	
   295  07B7                     l52:	
   296                           ;usart-processes.h: 42: while (!RCIF);
   297                           
   298                           ;incstack = 0
   299                           ; Regs used in _serial_read: [wreg]
   300                           
   301  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   302  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   303  07B9  1E8C               	btfss	12,5	;volatile
   304  07BA  2FB7               	goto	l52
   305                           
   306                           ;usart-processes.h: 43: return RCREG;
   307  07BB  081A               	movf	26,w	;volatile
   308  07BC  0008               	return
   309  07BD                     __end_of_serial_read:	
   310                           
   311                           	psect	text2
   312  07BD                     __ptext2:	
   313 ;; *************** function _serial_init *****************
   314 ;; Defined at:
   315 ;;		line 20 in file "D:\uni_2023-2024\cpe3201\embedded-systems\testbenches\serial-communications\receive\usart-processes
      +.h"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;		None               void
   322 ;; Registers used:
   323 ;;		wreg
   324 ;; Tracked objects:
   325 ;;		On entry : 0/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   329 ;;      Params:         0       0       0       0       0
   330 ;;      Locals:         0       0       0       0       0
   331 ;;      Temps:          0       0       0       0       0
   332 ;;      Totals:         0       0       0       0       0
   333 ;;Total ram usage:        0 bytes
   334 ;; Hardware stack levels used:    1
   335 ;; This function calls:
   336 ;;		Nothing
   337 ;; This function is called by:
   338 ;;		_main
   339 ;; This function uses a non-reentrant model
   340 ;;
   341                           
   342                           
   343                           ;psect for function _serial_init
   344  07BD                     _serial_init:	
   345                           
   346                           ;usart-processes.h: 23: TXSTA = 0b00100100;
   347                           
   348                           ;incstack = 0
   349                           ; Regs used in _serial_init: [wreg]
   350  07BD  3024               	movlw	36
   351  07BE  1683               	bsf	3,5	;RP0=1, select bank1
   352  07BF  1303               	bcf	3,6	;RP1=0, select bank1
   353  07C0  0098               	movwf	24	;volatile
   354                           
   355                           ;usart-processes.h: 24: TXIF = 0;
   356  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   357  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   358  07C3  120C               	bcf	12,4	;volatile
   359                           
   360                           ;usart-processes.h: 27: RCSTA = 0b10010000;
   361  07C4  3090               	movlw	144
   362  07C5  0098               	movwf	24	;volatile
   363                           
   364                           ;usart-processes.h: 28: RCIF = 0;
   365  07C6  128C               	bcf	12,5	;volatile
   366                           
   367                           ;usart-processes.h: 30: SPBRG = 25;
   368  07C7  3019               	movlw	25
   369  07C8  1683               	bsf	3,5	;RP0=1, select bank1
   370  07C9  1303               	bcf	3,6	;RP1=0, select bank1
   371  07CA  0099               	movwf	25	;volatile
   372  07CB  0008               	return
   373  07CC                     __end_of_serial_init:	
   374  007E                     btemp	set	126	;btemp
   375  007E                     wtemp	set	126
   376  007E                     wtemp0	set	126
   377  0080                     wtemp1	set	128
   378  0082                     wtemp2	set	130
   379  0084                     wtemp3	set	132
   380  0086                     wtemp4	set	134
   381  0088                     wtemp5	set	136
   382  007F                     wtemp6	set	127
   383  007E                     ttemp	set	126
   384  007E                     ttemp0	set	126
   385  0081                     ttemp1	set	129
   386  0084                     ttemp2	set	132
   387  0087                     ttemp3	set	135
   388  007F                     ttemp4	set	127
   389  007E                     ltemp	set	126
   390  007E                     ltemp0	set	126
   391  0082                     ltemp1	set	130
   392  0086                     ltemp2	set	134
   393  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      30
                                              0 COMMON     3     3      0
                        _serial_init
                        _serial_read
 ---------------------------------------------------------------------------------
 (1) _serial_read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _serial_init
   _serial_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sun Apr 21 11:44:05 2024

            __CFG_CP$OFF 0000                       l52 07B7                      l599 07EB  
                    _GIE 005F             __CFG_CPD$OFF 0000             __CFG_FOSC$XT 0000  
            main@dataOUT 0072             __CFG_LVP$OFF 0000                     _T0IF 005A  
                   _RCIF 0065                     _TMR0 0001                     _TXIF 0064  
           __CFG_WRT$OFF 0000                     _main 07CC                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _RCREG 001A                    _RCSTA 0018  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _TRISB 0086                    _TRISD 0088                    _TXREG 0019  
                  _TXSTA 0098            __CFG_PWRTE$ON 0000                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0070                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TRISC6 043E                   _TRISC7 043F             ?_serial_init 0070  
           ?_serial_read 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
             __pmaintext 07CC     __size_of_serial_init 000F     __size_of_serial_read 0006  
                __ptext0 0000                  __ptext1 07B7                  __ptext2 07BD  
   end_of_initialization 07FC               main@dataIN 0071      start_initialization 07FC  
              ___latbits 0002            ??_serial_init 0070            ??_serial_read 0070  
    __end_of_serial_init 07CC      __end_of_serial_read 07BD            __size_of_main 0030  
            _serial_init 07BD              _serial_read 07B7               _OPTION_REG 0081  
