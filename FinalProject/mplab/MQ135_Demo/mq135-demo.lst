

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu May 02 18:52:58 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108                           
   109                           	psect	strings
   110  1000                     __pstrings:	
   111  1000                     stringtab:	
   112  1000                     __stringtab:	
   113                           
   114                           ;	String table - string pointers are 1 byte each
   115  1000  1BFF               	btfsc	btemp+1,7
   116  1001  280A               	ljmp	stringcode
   117  1002  1383               	bcf	3,7
   118  1003  187F               	btfsc	btemp+1,0
   119  1004  1783               	bsf	3,7
   120  1005  0800               	movf	0,w
   121  1006  0A84               	incf	4,f
   122  1007  1903               	skipnz
   123  1008  0AFF               	incf	btemp+1,f
   124  1009  0008               	return
   125  100A                     stringcode:	
   126  100A                     stringdir:	
   127  100A  3010               	movlw	high stringdir
   128  100B  008A               	movwf	10
   129  100C  0804               	movf	4,w
   130  100D  0A84               	incf	4,f
   131  100E  0782               	addwf	2,f
   132  100F                     __stringbase:	
   133  100F  3400               	retlw	0
   134  1010                     __end_of__stringtab:	
   135  1010                     _dpowers:	
   136  1010  3401               	retlw	1
   137  1011  3400               	retlw	0
   138  1012  3400               	retlw	0
   139  1013  3400               	retlw	0
   140  1014  340A               	retlw	10
   141  1015  3400               	retlw	0
   142  1016  3400               	retlw	0
   143  1017  3400               	retlw	0
   144  1018  3464               	retlw	100
   145  1019  3400               	retlw	0
   146  101A  3400               	retlw	0
   147  101B  3400               	retlw	0
   148  101C  34E8               	retlw	232
   149  101D  3403               	retlw	3
   150  101E  3400               	retlw	0
   151  101F  3400               	retlw	0
   152  1020  3410               	retlw	16
   153  1021  3427               	retlw	39
   154  1022  3400               	retlw	0
   155  1023  3400               	retlw	0
   156  1024  34A0               	retlw	160
   157  1025  3486               	retlw	134
   158  1026  3401               	retlw	1
   159  1027  3400               	retlw	0
   160  1028  3440               	retlw	64
   161  1029  3442               	retlw	66
   162  102A  340F               	retlw	15
   163  102B  3400               	retlw	0
   164  102C  3480               	retlw	128
   165  102D  3496               	retlw	150
   166  102E  3498               	retlw	152
   167  102F  3400               	retlw	0
   168  1030  3400               	retlw	0
   169  1031  34E1               	retlw	225
   170  1032  34F5               	retlw	245
   171  1033  3405               	retlw	5
   172  1034  3400               	retlw	0
   173  1035  34CA               	retlw	202
   174  1036  349A               	retlw	154
   175  1037  343B               	retlw	59
   176  1038                     __end_of_dpowers:	
   177  1038                     __npowers_:	
   178  1038  3400               	retlw	0
   179  1039  3480               	retlw	128
   180  103A  343F               	retlw	63
   181  103B  34CD               	retlw	205
   182  103C  34CC               	retlw	204
   183  103D  343D               	retlw	61
   184  103E  34D7               	retlw	215
   185  103F  3423               	retlw	35
   186  1040  343C               	retlw	60
   187  1041  3412               	retlw	18
   188  1042  3483               	retlw	131
   189  1043  343A               	retlw	58
   190  1044  34B7               	retlw	183
   191  1045  34D1               	retlw	209
   192  1046  3438               	retlw	56
   193  1047  34C6               	retlw	198
   194  1048  3427               	retlw	39
   195  1049  3437               	retlw	55
   196  104A  3438               	retlw	56
   197  104B  3486               	retlw	134
   198  104C  3435               	retlw	53
   199  104D  34C0               	retlw	192
   200  104E  34D6               	retlw	214
   201  104F  3433               	retlw	51
   202  1050  34CC               	retlw	204
   203  1051  342B               	retlw	43
   204  1052  3432               	retlw	50
   205  1053  3470               	retlw	112
   206  1054  3489               	retlw	137
   207  1055  3430               	retlw	48
   208  1056  34E7               	retlw	231
   209  1057  34DB               	retlw	219
   210  1058  342E               	retlw	46
   211  1059  34E5               	retlw	229
   212  105A  343C               	retlw	60
   213  105B  341E               	retlw	30
   214  105C  3442               	retlw	66
   215  105D  34A2               	retlw	162
   216  105E  340D               	retlw	13
   217  105F                     __end_of__npowers_:	
   218  105F                     __powers_:	
   219  105F  3400               	retlw	0
   220  1060  3480               	retlw	128
   221  1061  343F               	retlw	63
   222  1062  3400               	retlw	0
   223  1063  3420               	retlw	32
   224  1064  3441               	retlw	65
   225  1065  3400               	retlw	0
   226  1066  34C8               	retlw	200
   227  1067  3442               	retlw	66
   228  1068  3400               	retlw	0
   229  1069  347A               	retlw	122
   230  106A  3444               	retlw	68
   231  106B  3440               	retlw	64
   232  106C  341C               	retlw	28
   233  106D  3446               	retlw	70
   234  106E  3450               	retlw	80
   235  106F  34C3               	retlw	195
   236  1070  3447               	retlw	71
   237  1071  3424               	retlw	36
   238  1072  3474               	retlw	116
   239  1073  3449               	retlw	73
   240  1074  3497               	retlw	151
   241  1075  3418               	retlw	24
   242  1076  344B               	retlw	75
   243  1077  34BC               	retlw	188
   244  1078  34BE               	retlw	190
   245  1079  344C               	retlw	76
   246  107A  346B               	retlw	107
   247  107B  346E               	retlw	110
   248  107C  344E               	retlw	78
   249  107D  3403               	retlw	3
   250  107E  3415               	retlw	21
   251  107F  3450               	retlw	80
   252  1080  3479               	retlw	121
   253  1081  34AD               	retlw	173
   254  1082  3460               	retlw	96
   255  1083  34F3               	retlw	243
   256  1084  3449               	retlw	73
   257  1085  3471               	retlw	113
   258  1086                     __end_of__powers_:	
   259  1086                     exp@coeff:	
   260  1086  3400               	retlw	0
   261  1087  3480               	retlw	128
   262  1088  343F               	retlw	63
   263  1089  3472               	retlw	114
   264  108A  3431               	retlw	49
   265  108B  343F               	retlw	63
   266  108C  34FE               	retlw	254
   267  108D  3475               	retlw	117
   268  108E  343E               	retlw	62
   269  108F  3458               	retlw	88
   270  1090  3463               	retlw	99
   271  1091  343D               	retlw	61
   272  1092  3495               	retlw	149
   273  1093  341D               	retlw	29
   274  1094  343C               	retlw	60
   275  1095  34C5               	retlw	197
   276  1096  34AE               	retlw	174
   277  1097  343A               	retlw	58
   278  1098  3479               	retlw	121
   279  1099  3421               	retlw	33
   280  109A  3439               	retlw	57
   281  109B  3494               	retlw	148
   282  109C  3480               	retlw	128
   283  109D  3437               	retlw	55
   284  109E  3493               	retlw	147
   285  109F  34A7               	retlw	167
   286  10A0  3435               	retlw	53
   287  10A1  3456               	retlw	86
   288  10A2  3415               	retlw	21
   289  10A3  3434               	retlw	52
   290  10A4                     __end_ofexp@coeff:	
   291  10A4                     log@coeff:	
   292  10A4  3400               	retlw	0
   293  10A5  3400               	retlw	0
   294  10A6  3400               	retlw	0
   295  10A7  3400               	retlw	0
   296  10A8  3480               	retlw	128
   297  10A9  343F               	retlw	63
   298  10AA  34F0               	retlw	240
   299  10AB  34FF               	retlw	255
   300  10AC  34BE               	retlw	190
   301  10AD  34E2               	retlw	226
   302  10AE  34A9               	retlw	169
   303  10AF  343E               	retlw	62
   304  10B0  3483               	retlw	131
   305  10B1  3476               	retlw	118
   306  10B2  34BE               	retlw	190
   307  10B3  34AE               	retlw	174
   308  10B4  342B               	retlw	43
   309  10B5  343E               	retlw	62
   310  10B6  343C               	retlw	60
   311  10B7  34C3               	retlw	195
   312  10B8  34BD               	retlw	189
   313  10B9  34D2               	retlw	210
   314  10BA  3413               	retlw	19
   315  10BB  343D               	retlw	61
   316  10BC  3478               	retlw	120
   317  10BD  34D3               	retlw	211
   318  10BE  34BB               	retlw	187
   319  10BF                     __end_oflog@coeff:	
   320  001F                     _ADCON0	set	31
   321  001E                     _ADRESH	set	30
   322  0006                     _PORTB	set	6
   323  0008                     _PORTD	set	8
   324  005F                     _GIE	set	95
   325  00FA                     _GO	set	250
   326  00FA                     _GO_DONE	set	250
   327  005C                     _INTE	set	92
   328  0059                     _INTF	set	89
   329  005E                     _PEIE	set	94
   330  0035                     _RB5	set	53
   331  0036                     _RB6	set	54
   332  0037                     _RB7	set	55
   333  009F                     _ADCON1	set	159
   334  009E                     _ADRESL	set	158
   335  0081                     _OPTION_REG	set	129
   336  0085                     _TRISA	set	133
   337  0086                     _TRISB	set	134
   338  0087                     _TRISC	set	135
   339  0088                     _TRISD	set	136
   340  040E                     _INTEDG	set	1038
   341  10BF                     __stringdata:	
   342  10BF                     STR_2:	
   343  10BF  3443               	retlw	67	;'C'
   344  10C0  344F               	retlw	79	;'O'
   345  10C1  3432               	retlw	50	;'2'
   346  10C2  3420               	retlw	32	;' '
   347  10C3  346C               	retlw	108	;'l'
   348  10C4  3465               	retlw	101	;'e'
   349  10C5  3476               	retlw	118	;'v'
   350  10C6  3465               	retlw	101	;'e'
   351  10C7  346C               	retlw	108	;'l'
   352  10C8  3473               	retlw	115	;'s'
   353  10C9  3420               	retlw	32	;' '
   354  10CA  3468               	retlw	104	;'h'
   355  10CB  3469               	retlw	105	;'i'
   356  10CC  3467               	retlw	103	;'g'
   357  10CD  3468               	retlw	104	;'h'
   358  10CE  3421               	retlw	33	;'!'
   359  10CF  3420               	retlw	32	;' '
   360  10D0  3400               	retlw	0
   361  10D1                     STR_3:	
   362  10D1  3443               	retlw	67	;'C'
   363  10D2  344F               	retlw	79	;'O'
   364  10D3  3432               	retlw	50	;'2'
   365  10D4  3420               	retlw	32	;' '
   366  10D5  346C               	retlw	108	;'l'
   367  10D6  3465               	retlw	101	;'e'
   368  10D7  3476               	retlw	118	;'v'
   369  10D8  3465               	retlw	101	;'e'
   370  10D9  346C               	retlw	108	;'l'
   371  10DA  3473               	retlw	115	;'s'
   372  10DB  3420               	retlw	32	;' '
   373  10DC  3461               	retlw	97	;'a'
   374  10DD  3472               	retlw	114	;'r'
   375  10DE  3465               	retlw	101	;'e'
   376  10DF  3420               	retlw	32	;' '
   377  10E0  344F               	retlw	79	;'O'
   378  10E1  344B               	retlw	75	;'K'
   379  10E2  3400               	retlw	0
   380  10E3                     STR_1:	
   381  10E3  3443               	retlw	67	;'C'
   382  10E4  344F               	retlw	79	;'O'
   383  10E5  3432               	retlw	50	;'2'
   384  10E6  343A               	retlw	58	;':'
   385  10E7  3420               	retlw	32	;' '
   386  10E8  3425               	retlw	37	;'%'
   387  10E9  342E               	retlw	46	;'.'
   388  10EA  3432               	retlw	50	;'2'
   389  10EB  3466               	retlw	102	;'f'
   390  10EC  3420               	retlw	32	;' '
   391  10ED  3470               	retlw	112	;'p'
   392  10EE  3470               	retlw	112	;'p'
   393  10EF  346D               	retlw	109	;'m'
   394  10F0  3420               	retlw	32	;' '
   395  10F1  3420               	retlw	32	;' '
   396  10F2  3400               	retlw	0
   397  10F3                     __end_of__stringdata:	
   398                           
   399                           ; #config settings
   400  0000                     
   401                           	psect	cinit
   402  07F8                     start_initialization:	
   403  07F8                     __initialization:	
   404                           
   405                           ; Clear objects allocated to BANK1
   406  07F8  1683               	bsf	3,5	;RP0=1, select bank1
   407  07F9  1303               	bcf	3,6	;RP1=0, select bank1
   408  07FA  01C2               	clrf	__pbssBANK1& (0+127)
   409  07FB  01C3               	clrf	(__pbssBANK1+1)& (0+127)
   410  07FC                     end_of_initialization:	
   411                           ;End of C runtime variable initialization code
   412                           
   413  07FC                     __end_of__initialization:	
   414  07FC  0183               	clrf	3
   415  07FD  120A  158A  2B67   	ljmp	_main	;jump to C main() function
   416                           
   417                           	psect	bssBANK1
   418  00C2                     __pbssBANK1:	
   419  00C2                     _errno:	
   420  00C2                     	ds	2
   421                           
   422                           	psect	cstackBANK3
   423  0190                     __pcstackBANK3:	
   424  0190                     main@ppm:	
   425                           
   426                           ; 3 bytes @ 0x0
   427  0190                     	ds	3
   428  0193                     main@buffer:	
   429                           
   430                           ; 16 bytes @ 0x3
   431  0193                     	ds	16
   432  01A3                     _main$652:	
   433                           
   434                           ; 3 bytes @ 0x13
   435  01A3                     	ds	3
   436  01A6                     _main$654:	
   437                           
   438                           ; 3 bytes @ 0x16
   439  01A6                     	ds	3
   440  01A9                     _main$655:	
   441                           
   442                           ; 3 bytes @ 0x19
   443  01A9                     	ds	3
   444  01AC                     _main$656:	
   445                           
   446                           ; 3 bytes @ 0x1C
   447  01AC                     	ds	3
   448  01AF                     _main$657:	
   449                           
   450                           ; 3 bytes @ 0x1F
   451  01AF                     	ds	3
   452  01B2                     _main$658:	
   453                           
   454                           ; 3 bytes @ 0x22
   455  01B2                     	ds	3
   456  01B5                     _main$659:	
   457                           
   458                           ; 3 bytes @ 0x25
   459  01B5                     	ds	3
   460  01B8                     _main$660:	
   461                           
   462                           ; 3 bytes @ 0x28
   463  01B8                     	ds	3
   464  01BB                     _main$661:	
   465                           
   466                           ; 3 bytes @ 0x2B
   467  01BB                     	ds	3
   468  01BE                     _main$662:	
   469                           
   470                           ; 3 bytes @ 0x2E
   471  01BE                     	ds	3
   472  01C1                     main@adcValue:	
   473                           
   474                           ; 2 bytes @ 0x31
   475  01C1                     	ds	2
   476  01C3                     main@voltage:	
   477                           
   478                           ; 3 bytes @ 0x33
   479  01C3                     	ds	3
   480  01C6                     _main$653:	
   481                           
   482                           ; 3 bytes @ 0x36
   483  01C6                     	ds	3
   484  01C9                     main@co2:	
   485                           
   486                           ; 3 bytes @ 0x39
   487  01C9                     	ds	3
   488  01CC                     main@ratio:	
   489                           
   490                           ; 3 bytes @ 0x3C
   491  01CC                     	ds	3
   492                           
   493                           	psect	cstackBANK1
   494  00A0                     __pcstackBANK1:	
   495  00A0                     _sprintf$666:	
   496  00A0                     _exp$669:	
   497                           ; 3 bytes @ 0x0
   498                           
   499                           
   500                           ; 3 bytes @ 0x0
   501  00A0                     	ds	3
   502  00A3                     _exp$438:	
   503  00A3                     _sprintf$144:	
   504                           ; 3 bytes @ 0x3
   505                           
   506                           
   507                           ; 4 bytes @ 0x3
   508  00A3                     	ds	3
   509  00A6                     exp@exponent:	
   510                           
   511                           ; 2 bytes @ 0x6
   512  00A6                     	ds	1
   513  00A7                     sprintf@ap:	
   514                           
   515                           ; 1 bytes @ 0x7
   516  00A7                     	ds	1
   517  00A8                     exp@sign:	
   518  00A8                     sprintf@vd:	
   519                           ; 1 bytes @ 0x8
   520                           
   521                           
   522                           ; 4 bytes @ 0x8
   523  00A8                     	ds	1
   524  00A9                     ?_pow:	
   525  00A9                     pow@x:	
   526                           ; 3 bytes @ 0x9
   527                           
   528                           
   529                           ; 3 bytes @ 0x9
   530  00A9                     	ds	3
   531  00AC                     pow@y:	
   532  00AC                     sprintf@vd_146:	
   533                           ; 3 bytes @ 0xC
   534                           
   535                           
   536                           ; 4 bytes @ 0xC
   537  00AC                     	ds	3
   538  00AF                     _pow$667:	
   539                           
   540                           ; 3 bytes @ 0xF
   541  00AF                     	ds	1
   542  00B0                     sprintf@flag:	
   543                           
   544                           ; 2 bytes @ 0x10
   545  00B0                     	ds	2
   546  00B2                     sprintf@integ:	
   547  00B2                     _pow$668:	
   548                           ; 3 bytes @ 0x12
   549                           
   550                           
   551                           ; 3 bytes @ 0x12
   552  00B2                     	ds	3
   553  00B5                     pow@sign:	
   554  00B5                     sprintf@_val:	
   555                           ; 1 bytes @ 0x15
   556                           
   557                           
   558                           ; 4 bytes @ 0x15
   559  00B5                     	ds	1
   560  00B6                     pow@yi:	
   561                           
   562                           ; 4 bytes @ 0x16
   563  00B6                     	ds	3
   564  00B9                     sprintf@exp:	
   565                           
   566                           ; 2 bytes @ 0x19
   567  00B9                     	ds	2
   568  00BB                     sprintf@sp:	
   569                           
   570                           ; 1 bytes @ 0x1B
   571  00BB                     	ds	1
   572  00BC                     sprintf@prec:	
   573                           
   574                           ; 2 bytes @ 0x1C
   575  00BC                     	ds	2
   576  00BE                     sprintf@fval:	
   577                           
   578                           ; 3 bytes @ 0x1E
   579  00BE                     	ds	3
   580  00C1                     sprintf@c:	
   581                           
   582                           ; 1 bytes @ 0x21
   583  00C1                     	ds	1
   584                           
   585                           	psect	cstackCOMMON
   586  0070                     __pcstackCOMMON:	
   587  0070                     ?_isdigit:	
   588  0070                     ??_isdigit:	
   589                           ; 1 bit 
   590                           
   591  0070                     ?_instCTRL:	
   592                           ; 0 bytes @ 0x0
   593                           
   594  0070                     ??_instCTRL:	
   595                           ; 0 bytes @ 0x0
   596                           
   597  0070                     ?_dataCTRL:	
   598                           ; 0 bytes @ 0x0
   599                           
   600  0070                     ??_dataCTRL:	
   601                           ; 0 bytes @ 0x0
   602                           
   603  0070                     ?_initLCD:	
   604                           ; 0 bytes @ 0x0
   605                           
   606  0070                     ?_main:	
   607                           ; 0 bytes @ 0x0
   608                           
   609  0070                     ?___ftge:	
   610                           ; 0 bytes @ 0x0
   611                           
   612  0070                     ?_readADC:	
   613                           ; 1 bit 
   614                           
   615  0070                     ?___wmul:	
   616                           ; 2 bytes @ 0x0
   617                           
   618  0070                     ?___awmod:	
   619                           ; 2 bytes @ 0x0
   620                           
   621  0070                     ?___ftpack:	
   622                           ; 2 bytes @ 0x0
   623                           
   624  0070                     ?_frexp:	
   625                           ; 3 bytes @ 0x0
   626                           
   627  0070                     ?___ftneg:	
   628                           ; 3 bytes @ 0x0
   629                           
   630  0070                     ?__tdiv_to_l_:	
   631                           ; 3 bytes @ 0x0
   632                           
   633  0070                     ?__div_to_l_:	
   634                           ; 4 bytes @ 0x0
   635                           
   636  0070                     ?___lldiv:	
   637                           ; 4 bytes @ 0x0
   638                           
   639  0070                     ?___llmod:	
   640                           ; 4 bytes @ 0x0
   641                           
   642  0070                     _isdigit$344:	
   643                           ; 4 bytes @ 0x0
   644                           
   645  0070                     ___wmul@multiplier:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ___awmod@divisor:	
   649                           ; 2 bytes @ 0x0
   650                           
   651  0070                     __div_to_l_@f1:	
   652                           ; 2 bytes @ 0x0
   653                           
   654  0070                     ___ftpack@arg:	
   655                           ; 3 bytes @ 0x0
   656                           
   657  0070                     __tdiv_to_l_@f1:	
   658                           ; 3 bytes @ 0x0
   659                           
   660  0070                     ___ftge@ff1:	
   661                           ; 3 bytes @ 0x0
   662                           
   663  0070                     ___ftneg@f1:	
   664                           ; 3 bytes @ 0x0
   665                           
   666  0070                     frexp@value:	
   667                           ; 3 bytes @ 0x0
   668                           
   669  0070                     ___lldiv@divisor:	
   670                           ; 3 bytes @ 0x0
   671                           
   672  0070                     ___llmod@divisor:	
   673                           ; 4 bytes @ 0x0
   674                           
   675                           
   676                           ; 4 bytes @ 0x0
   677  0070                     	ds	1
   678  0071                     instCTRL@CMD:	
   679  0071                     dataCTRL@DAT:	
   680                           ; 1 bytes @ 0x1
   681                           
   682  0071                     isdigit@c:	
   683                           ; 1 bytes @ 0x1
   684                           
   685                           
   686                           ; 1 bytes @ 0x1
   687  0071                     	ds	1
   688  0072                     ??_readADC:	
   689  0072                     ??_initLCD:	
   690                           ; 0 bytes @ 0x2
   691                           
   692  0072                     ?_printToLCD:	
   693                           ; 0 bytes @ 0x2
   694                           
   695  0072                     printToLCD@STR:	
   696                           ; 0 bytes @ 0x2
   697                           
   698  0072                     ___wmul@multiplicand:	
   699                           ; 2 bytes @ 0x2
   700                           
   701  0072                     ___awmod@dividend:	
   702                           ; 2 bytes @ 0x2
   703                           
   704                           
   705                           ; 2 bytes @ 0x2
   706  0072                     	ds	1
   707  0073                     ??___ftneg:	
   708  0073                     ___ftpack@exp:	
   709                           ; 0 bytes @ 0x3
   710                           
   711  0073                     frexp@eptr:	
   712                           ; 1 bytes @ 0x3
   713                           
   714  0073                     __div_to_l_@f2:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0073                     __tdiv_to_l_@f2:	
   718                           ; 3 bytes @ 0x3
   719                           
   720  0073                     ___ftge@ff2:	
   721                           ; 3 bytes @ 0x3
   722                           
   723                           
   724                           ; 3 bytes @ 0x3
   725  0073                     	ds	1
   726  0074                     ??_frexp:	
   727  0074                     ??_printToLCD:	
   728                           ; 0 bytes @ 0x4
   729                           
   730  0074                     ??___wmul:	
   731                           ; 0 bytes @ 0x4
   732                           
   733  0074                     ??___awmod:	
   734                           ; 0 bytes @ 0x4
   735                           
   736  0074                     ___ftpack@sign:	
   737                           ; 0 bytes @ 0x4
   738                           
   739  0074                     readADC@temp:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0074                     ___wmul@product:	
   743                           ; 2 bytes @ 0x4
   744                           
   745  0074                     ___lldiv@dividend:	
   746                           ; 2 bytes @ 0x4
   747                           
   748  0074                     ___llmod@dividend:	
   749                           ; 4 bytes @ 0x4
   750                           
   751                           
   752                           ; 4 bytes @ 0x4
   753  0074                     	ds	1
   754  0075                     ??___ftpack:	
   755  0075                     ___awmod@counter:	
   756                           ; 0 bytes @ 0x5
   757                           
   758                           
   759                           ; 1 bytes @ 0x5
   760  0075                     	ds	1
   761  0076                     ??__tdiv_to_l_:	
   762  0076                     ??__div_to_l_:	
   763                           ; 0 bytes @ 0x6
   764                           
   765  0076                     ??___ftge:	
   766                           ; 0 bytes @ 0x6
   767                           
   768  0076                     ___awmod@sign:	
   769                           ; 0 bytes @ 0x6
   770                           
   771                           
   772                           ; 1 bytes @ 0x6
   773  0076                     	ds	1
   774  0077                     ?___awdiv:	
   775  0077                     ___awdiv@divisor:	
   776                           ; 2 bytes @ 0x7
   777                           
   778                           
   779                           ; 2 bytes @ 0x7
   780  0077                     	ds	1
   781  0078                     ??___lldiv:	
   782  0078                     ??___llmod:	
   783                           ; 0 bytes @ 0x8
   784                           
   785  0078                     ?___awtoft:	
   786                           ; 0 bytes @ 0x8
   787                           
   788  0078                     ?___lltoft:	
   789                           ; 3 bytes @ 0x8
   790                           
   791  0078                     ___awtoft@c:	
   792                           ; 3 bytes @ 0x8
   793                           
   794  0078                     ___lltoft@c:	
   795                           ; 2 bytes @ 0x8
   796                           
   797                           
   798                           ; 4 bytes @ 0x8
   799  0078                     	ds	1
   800  0079                     ___llmod@counter:	
   801  0079                     ___awdiv@dividend:	
   802                           ; 1 bytes @ 0x9
   803                           
   804  0079                     ___lldiv@quotient:	
   805                           ; 2 bytes @ 0x9
   806                           
   807                           
   808                           ; 4 bytes @ 0x9
   809  0079                     	ds	2
   810  007B                     ??___awdiv:	
   811  007B                     ??___awtoft:	
   812                           ; 0 bytes @ 0xB
   813                           
   814                           
   815                           ; 0 bytes @ 0xB
   816  007B                     	ds	1
   817  007C                     ??___bmul:	
   818  007C                     ??___lltoft:	
   819                           ; 0 bytes @ 0xC
   820                           
   821                           
   822                           ; 0 bytes @ 0xC
   823  007C                     	ds	1
   824  007D                     ___awtoft@sign:	
   825  007D                     ___lldiv@counter:	
   826                           ; 1 bytes @ 0xD
   827                           
   828  007D                     ___lltoft@exp:	
   829                           ; 1 bytes @ 0xD
   830                           
   831                           
   832                           ; 1 bytes @ 0xD
   833  007D                     	ds	1
   834  007E                     ??___ftsub:	
   835                           
   836                           	psect	cstackBANK0
   837  0020                     __pcstackBANK0:	
   838                           ; 0 bytes @ 0xE
   839                           
   840  0020                     ___awdiv@counter:	
   841  0020                     __div_to_l_@quot:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0020                     __tdiv_to_l_@quot:	
   845                           ; 4 bytes @ 0x0
   846                           
   847                           
   848                           ; 4 bytes @ 0x0
   849  0020                     	ds	1
   850  0021                     ___awdiv@sign:	
   851                           
   852                           ; 1 bytes @ 0x1
   853  0021                     	ds	1
   854  0022                     ___awdiv@quotient:	
   855                           
   856                           ; 2 bytes @ 0x2
   857  0022                     	ds	2
   858  0024                     ?___bmul:	
   859  0024                     ___bmul@multiplicand:	
   860                           ; 1 bytes @ 0x4
   861                           
   862  0024                     __div_to_l_@cntr:	
   863                           ; 1 bytes @ 0x4
   864                           
   865  0024                     __tdiv_to_l_@cntr:	
   866                           ; 1 bytes @ 0x4
   867                           
   868                           
   869                           ; 1 bytes @ 0x4
   870  0024                     	ds	1
   871  0025                     ___bmul@product:	
   872  0025                     __div_to_l_@exp1:	
   873                           ; 1 bytes @ 0x5
   874                           
   875  0025                     __tdiv_to_l_@exp1:	
   876                           ; 1 bytes @ 0x5
   877                           
   878                           
   879                           ; 1 bytes @ 0x5
   880  0025                     	ds	1
   881  0026                     ___bmul@multiplier:	
   882                           
   883                           ; 1 bytes @ 0x6
   884  0026                     	ds	1
   885  0027                     ?___ftmul:	
   886  0027                     ___ftmul@f1:	
   887                           ; 3 bytes @ 0x7
   888                           
   889                           
   890                           ; 3 bytes @ 0x7
   891  0027                     	ds	3
   892  002A                     ___ftmul@f2:	
   893                           
   894                           ; 3 bytes @ 0xA
   895  002A                     	ds	3
   896  002D                     ??___ftmul:	
   897                           
   898                           ; 0 bytes @ 0xD
   899  002D                     	ds	4
   900  0031                     ___ftmul@exp:	
   901                           
   902                           ; 1 bytes @ 0x11
   903  0031                     	ds	1
   904  0032                     ___ftmul@f3_as_product:	
   905                           
   906                           ; 3 bytes @ 0x12
   907  0032                     	ds	3
   908  0035                     ___ftmul@cntr:	
   909                           
   910                           ; 1 bytes @ 0x15
   911  0035                     	ds	1
   912  0036                     ___ftmul@sign:	
   913                           
   914                           ; 1 bytes @ 0x16
   915  0036                     	ds	1
   916  0037                     ?_fround:	
   917  0037                     ?_scale:	
   918                           ; 3 bytes @ 0x17
   919                           
   920  0037                     ?___ftdiv:	
   921                           ; 3 bytes @ 0x17
   922                           
   923  0037                     ___ftdiv@f2:	
   924                           ; 3 bytes @ 0x17
   925                           
   926                           
   927                           ; 3 bytes @ 0x17
   928  0037                     	ds	3
   929  003A                     ??_fround:	
   930  003A                     ??_scale:	
   931                           ; 0 bytes @ 0x1A
   932                           
   933  003A                     ___ftdiv@f1:	
   934                           ; 0 bytes @ 0x1A
   935                           
   936                           
   937                           ; 3 bytes @ 0x1A
   938  003A                     	ds	2
   939  003C                     _scale$665:	
   940                           
   941                           ; 3 bytes @ 0x1C
   942  003C                     	ds	1
   943  003D                     ??___ftdiv:	
   944                           
   945                           ; 0 bytes @ 0x1D
   946  003D                     	ds	2
   947  003F                     scale@scl:	
   948                           
   949                           ; 1 bytes @ 0x1F
   950  003F                     	ds	1
   951  0040                     ?___fttol:	
   952  0040                     ___fttol@f1:	
   953                           ; 4 bytes @ 0x20
   954                           
   955  0040                     _fround$664:	
   956                           ; 3 bytes @ 0x20
   957                           
   958                           
   959                           ; 3 bytes @ 0x20
   960  0040                     	ds	1
   961  0041                     ___ftdiv@cntr:	
   962                           
   963                           ; 1 bytes @ 0x21
   964  0041                     	ds	1
   965  0042                     ___ftdiv@f3:	
   966                           
   967                           ; 3 bytes @ 0x22
   968  0042                     	ds	1
   969  0043                     _fround$663:	
   970                           
   971                           ; 3 bytes @ 0x23
   972  0043                     	ds	1
   973  0044                     ??___fttol:	
   974                           
   975                           ; 0 bytes @ 0x24
   976  0044                     	ds	1
   977  0045                     ___ftdiv@exp:	
   978                           
   979                           ; 1 bytes @ 0x25
   980  0045                     	ds	1
   981  0046                     fround@prec:	
   982  0046                     ___ftdiv@sign:	
   983                           ; 1 bytes @ 0x26
   984                           
   985                           
   986                           ; 1 bytes @ 0x26
   987  0046                     	ds	1
   988  0047                     ?___ftadd:	
   989  0047                     ___ftadd@f1:	
   990                           ; 3 bytes @ 0x27
   991                           
   992                           
   993                           ; 3 bytes @ 0x27
   994  0047                     	ds	1
   995  0048                     ___fttol@sign1:	
   996                           
   997                           ; 1 bytes @ 0x28
   998  0048                     	ds	1
   999  0049                     ___fttol@lval:	
  1000                           
  1001                           ; 4 bytes @ 0x29
  1002  0049                     	ds	1
  1003  004A                     ___ftadd@f2:	
  1004                           
  1005                           ; 3 bytes @ 0x2A
  1006  004A                     	ds	3
  1007  004D                     ??___ftadd:	
  1008  004D                     ___fttol@exp1:	
  1009                           ; 0 bytes @ 0x2D
  1010                           
  1011                           
  1012                           ; 1 bytes @ 0x2D
  1013  004D                     	ds	1
  1014  004E                     ?___altoft:	
  1015  004E                     ___altoft@c:	
  1016                           ; 3 bytes @ 0x2E
  1017                           
  1018                           
  1019                           ; 4 bytes @ 0x2E
  1020  004E                     	ds	3
  1021  0051                     ___ftadd@sign:	
  1022                           
  1023                           ; 1 bytes @ 0x31
  1024  0051                     	ds	1
  1025  0052                     ??___altoft:	
  1026  0052                     ___ftadd@exp2:	
  1027                           ; 0 bytes @ 0x32
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x32
  1031  0052                     	ds	1
  1032  0053                     ___ftadd@exp1:	
  1033                           
  1034                           ; 1 bytes @ 0x33
  1035  0053                     	ds	1
  1036  0054                     ?_eval_poly:	
  1037  0054                     ?___ftsub:	
  1038                           ; 3 bytes @ 0x34
  1039                           
  1040  0054                     ___altoft@exp:	
  1041                           ; 3 bytes @ 0x34
  1042                           
  1043  0054                     ___ftsub@f2:	
  1044                           ; 1 bytes @ 0x34
  1045                           
  1046  0054                     eval_poly@x:	
  1047                           ; 3 bytes @ 0x34
  1048                           
  1049                           
  1050                           ; 3 bytes @ 0x34
  1051  0054                     	ds	1
  1052  0055                     ___altoft@sign:	
  1053                           
  1054                           ; 1 bytes @ 0x35
  1055  0055                     	ds	1
  1056  0056                     ?_floor:	
  1057  0056                     floor@x:	
  1058                           ; 3 bytes @ 0x36
  1059                           
  1060                           
  1061                           ; 3 bytes @ 0x36
  1062  0056                     	ds	1
  1063  0057                     eval_poly@d:	
  1064  0057                     ___ftsub@f1:	
  1065                           ; 1 bytes @ 0x37
  1066                           
  1067                           
  1068                           ; 3 bytes @ 0x37
  1069  0057                     	ds	1
  1070  0058                     eval_poly@n:	
  1071                           
  1072                           ; 2 bytes @ 0x38
  1073  0058                     	ds	1
  1074  0059                     ??_floor:	
  1075                           
  1076                           ; 0 bytes @ 0x39
  1077  0059                     	ds	1
  1078  005A                     ??_eval_poly:	
  1079  005A                     ?_sprintf:	
  1080                           ; 0 bytes @ 0x3A
  1081                           
  1082  005A                     sprintf@f:	
  1083                           ; 2 bytes @ 0x3A
  1084                           
  1085  005A                     floor@i:	
  1086                           ; 1 bytes @ 0x3A
  1087                           
  1088                           
  1089                           ; 3 bytes @ 0x3A
  1090  005A                     	ds	1
  1091  005B                     eval_poly@res:	
  1092                           
  1093                           ; 3 bytes @ 0x3B
  1094  005B                     	ds	2
  1095  005D                     floor@expon:	
  1096                           
  1097                           ; 2 bytes @ 0x3D
  1098  005D                     	ds	1
  1099  005E                     ??_sprintf:	
  1100  005E                     ?_log:	
  1101                           ; 0 bytes @ 0x3E
  1102                           
  1103  005E                     ?_ldexp:	
  1104                           ; 3 bytes @ 0x3E
  1105                           
  1106  005E                     ldexp@value:	
  1107                           ; 3 bytes @ 0x3E
  1108                           
  1109  005E                     log@x:	
  1110                           ; 3 bytes @ 0x3E
  1111                           
  1112                           
  1113                           ; 3 bytes @ 0x3E
  1114  005E                     	ds	3
  1115  0061                     ??_log:	
  1116  0061                     ldexp@newexp:	
  1117                           ; 0 bytes @ 0x41
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x41
  1121  0061                     	ds	1
  1122  0062                     log@exponent:	
  1123                           
  1124                           ; 2 bytes @ 0x42
  1125  0062                     	ds	1
  1126  0063                     ??_ldexp:	
  1127                           
  1128                           ; 0 bytes @ 0x43
  1129  0063                     	ds	2
  1130  0065                     _ldexp$475:	
  1131                           
  1132                           ; 3 bytes @ 0x45
  1133  0065                     	ds	3
  1134  0068                     ?_exp:	
  1135  0068                     exp@x:	
  1136                           ; 3 bytes @ 0x48
  1137                           
  1138                           
  1139                           ; 3 bytes @ 0x48
  1140  0068                     	ds	3
  1141  006B                     ??_exp:	
  1142                           
  1143                           ; 0 bytes @ 0x4B
  1144  006B                     	ds	1
  1145  006C                     ??_pow:	
  1146                           
  1147                           ; 0 bytes @ 0x4C
  1148  006C                     	ds	1
  1149  006D                     ??_main:	
  1150                           
  1151                           ; 0 bytes @ 0x4D
  1152  006D                     	ds	2
  1153                           
  1154                           	psect	maintext
  1155  0B67                     __pmaintext:	
  1156 ;;
  1157 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1158 ;;
  1159 ;; *************** function _main *****************
  1160 ;; Defined at:
  1161 ;;		line 36 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\main.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  buffer         16    3[BANK3 ] unsigned char [16]
  1166 ;;  ratio           3   60[BANK3 ] float 
  1167 ;;  co2             3   57[BANK3 ] float 
  1168 ;;  voltage         3   51[BANK3 ] float 
  1169 ;;  ppm             3    0[BANK3 ] float 
  1170 ;;  adcValue        2   49[BANK3 ] int 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;		None               void
  1173 ;; Registers used:
  1174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 17F/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       0       0       0       0
  1181 ;;      Locals:         0       0       0      63       0
  1182 ;;      Temps:          0       2       0       0       0
  1183 ;;      Totals:         0       2       0      63       0
  1184 ;;Total ram usage:       65 bytes
  1185 ;; Hardware stack levels required when called:    5
  1186 ;; This function calls:
  1187 ;;		___awtoft
  1188 ;;		___ftadd
  1189 ;;		___ftdiv
  1190 ;;		___ftge
  1191 ;;		___ftmul
  1192 ;;		_initLCD
  1193 ;;		_instCTRL
  1194 ;;		_pow
  1195 ;;		_printToLCD
  1196 ;;		_readADC
  1197 ;;		_sprintf
  1198 ;; This function is called by:
  1199 ;;		Startup code after reset
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           
  1204                           ;psect for function _main
  1205  0B67                     _main:	
  1206                           
  1207                           ;main.c: 38: TRISB = 0b00011111;
  1208                           
  1209                           ;incstack = 0
  1210                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1211  0B67  301F               	movlw	31
  1212  0B68  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0B69  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0B6A  0086               	movwf	6	;volatile
  1215                           
  1216                           ;main.c: 39: PORTB = 0x00;
  1217  0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  1218  0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  1219  0B6D  0186               	clrf	6	;volatile
  1220                           
  1221                           ;main.c: 40: TRISC = 0b00111000;
  1222  0B6E  3038               	movlw	56
  1223  0B6F  1683               	bsf	3,5	;RP0=1, select bank1
  1224  0B70  1303               	bcf	3,6	;RP1=0, select bank1
  1225  0B71  0087               	movwf	7	;volatile
  1226                           
  1227                           ;main.c: 41: TRISA = 0xFF;
  1228  0B72  30FF               	movlw	255
  1229  0B73  0085               	movwf	5	;volatile
  1230                           
  1231                           ;main.c: 42: TRISD = 0x00;
  1232  0B74  0188               	clrf	8	;volatile
  1233                           
  1234                           ;main.c: 43: ADCON1 = 0x80;
  1235  0B75  3080               	movlw	128
  1236  0B76  009F               	movwf	31	;volatile
  1237                           
  1238                           ;main.c: 44: ADCON0 = 0x01;
  1239  0B77  3001               	movlw	1
  1240  0B78  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0B79  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0B7A  009F               	movwf	31	;volatile
  1243                           
  1244                           ;main.c: 46: OPTION_REG = 0x44;
  1245  0B7B  3044               	movlw	68
  1246  0B7C  1683               	bsf	3,5	;RP0=1, select bank1
  1247  0B7D  1303               	bcf	3,6	;RP1=0, select bank1
  1248  0B7E  0081               	movwf	1	;volatile
  1249                           
  1250                           ;main.c: 47: INTE = 1;
  1251  0B7F  160B               	bsf	11,4	;volatile
  1252                           
  1253                           ;main.c: 48: INTF = 0;
  1254  0B80  108B               	bcf	11,1	;volatile
  1255                           
  1256                           ;main.c: 49: INTEDG = 1;
  1257  0B81  1701               	bsf	1,6	;volatile
  1258                           
  1259                           ;main.c: 50: PEIE = 1;
  1260  0B82  170B               	bsf	11,6	;volatile
  1261                           
  1262                           ;main.c: 51: GIE = 1;
  1263  0B83  178B               	bsf	11,7	;volatile
  1264                           
  1265                           ;main.c: 53: initLCD();
  1266  0B84  160A  158A  21FA  120A  158A  	fcall	_initLCD
  1267  0B89                     l3124:	
  1268                           ;main.c: 55: for (;;)
  1269                           
  1270                           
  1271                           ;main.c: 56: {
  1272                           ;main.c: 57: instCTRL(0x80);
  1273  0B89  3080               	movlw	128
  1274  0B8A  160A  158A  2188  120A  158A  	fcall	_instCTRL
  1275                           
  1276                           ;main.c: 58: int adcValue = readADC();
  1277  0B8F  160A  158A  228D  120A  158A  	fcall	_readADC
  1278  0B94  0871               	movf	?_readADC+1,w
  1279  0B95  1683               	bsf	3,5	;RP0=1, select bank3
  1280  0B96  1703               	bsf	3,6	;RP1=1, select bank3
  1281  0B97  01C2               	clrf	(main@adcValue+1)^(0+384)
  1282  0B98  07C2               	addwf	(main@adcValue+1)^(0+384),f
  1283  0B99  0870               	movf	?_readADC,w
  1284  0B9A  01C1               	clrf	main@adcValue^(0+384)
  1285  0B9B  07C1               	addwf	main@adcValue^(0+384),f
  1286                           
  1287                           ;main.c: 59: float voltage = (adcValue * 5.0) / 1023.0;
  1288  0B9C  30C0               	movlw	192
  1289  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  1290  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  1291  0B9F  00B7               	movwf	___ftdiv@f2
  1292  0BA0  307F               	movlw	127
  1293  0BA1  00B8               	movwf	___ftdiv@f2+1
  1294  0BA2  3044               	movlw	68
  1295  0BA3  00B9               	movwf	___ftdiv@f2+2
  1296  0BA4  3000               	movlw	0
  1297  0BA5  00A7               	movwf	___ftmul@f1
  1298  0BA6  30A0               	movlw	160
  1299  0BA7  00A8               	movwf	___ftmul@f1+1
  1300  0BA8  3040               	movlw	64
  1301  0BA9  00A9               	movwf	___ftmul@f1+2
  1302  0BAA  1683               	bsf	3,5	;RP0=1, select bank3
  1303  0BAB  1703               	bsf	3,6	;RP1=1, select bank3
  1304  0BAC  0842               	movf	(main@adcValue+1)^(0+384),w
  1305  0BAD  01F9               	clrf	___awtoft@c+1
  1306  0BAE  07F9               	addwf	___awtoft@c+1,f
  1307  0BAF  0841               	movf	main@adcValue^(0+384),w
  1308  0BB0  01F8               	clrf	___awtoft@c
  1309  0BB1  07F8               	addwf	___awtoft@c,f
  1310  0BB2  160A  158A  21D9  120A  158A  	fcall	___awtoft
  1311  0BB7  0878               	movf	?___awtoft,w
  1312  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  1313  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  1314  0BBA  00AA               	movwf	___ftmul@f2
  1315  0BBB  0879               	movf	?___awtoft+1,w
  1316  0BBC  00AB               	movwf	___ftmul@f2+1
  1317  0BBD  087A               	movf	?___awtoft+2,w
  1318  0BBE  00AC               	movwf	___ftmul@f2+2
  1319  0BBF  160A  118A  2215  120A  158A  	fcall	___ftmul
  1320  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0BC6  0827               	movf	?___ftmul,w
  1323  0BC7  00BA               	movwf	___ftdiv@f1
  1324  0BC8  0828               	movf	?___ftmul+1,w
  1325  0BC9  00BB               	movwf	___ftdiv@f1+1
  1326  0BCA  0829               	movf	?___ftmul+2,w
  1327  0BCB  00BC               	movwf	___ftdiv@f1+2
  1328  0BCC  160A  158A  2748  120A  158A  	fcall	___ftdiv
  1329  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0BD3  0837               	movf	?___ftdiv,w
  1332  0BD4  1683               	bsf	3,5	;RP0=1, select bank3
  1333  0BD5  1703               	bsf	3,6	;RP1=1, select bank3
  1334  0BD6  00C3               	movwf	main@voltage^(0+384)
  1335  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0BD9  0838               	movf	?___ftdiv+1,w
  1338  0BDA  1683               	bsf	3,5	;RP0=1, select bank3
  1339  0BDB  1703               	bsf	3,6	;RP1=1, select bank3
  1340  0BDC  00C4               	movwf	(main@voltage+1)^(0+384)
  1341  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  1343  0BDF  0839               	movf	?___ftdiv+2,w
  1344  0BE0  1683               	bsf	3,5	;RP0=1, select bank3
  1345  0BE1  1703               	bsf	3,6	;RP1=1, select bank3
  1346  0BE2  00C5               	movwf	(main@voltage+2)^(0+384)
  1347                           
  1348                           ;main.c: 60: float ppm = 116.6020682 * pow((voltage / 2.0), -2.769034857);
  1349  0BE3  3000               	movlw	0
  1350  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0BE6  00B7               	movwf	___ftdiv@f2
  1353  0BE7  3000               	movlw	0
  1354  0BE8  00B8               	movwf	___ftdiv@f2+1
  1355  0BE9  3040               	movlw	64
  1356  0BEA  00B9               	movwf	___ftdiv@f2+2
  1357  0BEB  1683               	bsf	3,5	;RP0=1, select bank3
  1358  0BEC  1703               	bsf	3,6	;RP1=1, select bank3
  1359  0BED  0843               	movf	main@voltage^(0+384),w
  1360  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0BF0  00BA               	movwf	___ftdiv@f1
  1363  0BF1  1683               	bsf	3,5	;RP0=1, select bank3
  1364  0BF2  1703               	bsf	3,6	;RP1=1, select bank3
  1365  0BF3  0844               	movf	(main@voltage+1)^(0+384),w
  1366  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0BF6  00BB               	movwf	___ftdiv@f1+1
  1369  0BF7  1683               	bsf	3,5	;RP0=1, select bank3
  1370  0BF8  1703               	bsf	3,6	;RP1=1, select bank3
  1371  0BF9  0845               	movf	(main@voltage+2)^(0+384),w
  1372  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  1374  0BFC  00BC               	movwf	___ftdiv@f1+2
  1375  0BFD  160A  158A  2748  120A  158A  	fcall	___ftdiv
  1376  0C02  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0C03  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0C04  0837               	movf	?___ftdiv,w
  1379  0C05  1683               	bsf	3,5	;RP0=1, select bank3
  1380  0C06  1703               	bsf	3,6	;RP1=1, select bank3
  1381  0C07  00A3               	movwf	_main$652^(0+384)
  1382  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0C0A  0838               	movf	?___ftdiv+1,w
  1385  0C0B  1683               	bsf	3,5	;RP0=1, select bank3
  1386  0C0C  1703               	bsf	3,6	;RP1=1, select bank3
  1387  0C0D  00A4               	movwf	(_main$652+1)^(0+384)
  1388  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0C10  0839               	movf	?___ftdiv+2,w
  1391  0C11  1683               	bsf	3,5	;RP0=1, select bank3
  1392  0C12  1703               	bsf	3,6	;RP1=1, select bank3
  1393  0C13  00A5               	movwf	(_main$652+2)^(0+384)
  1394                           
  1395                           ;main.c: 60: float ppm = 116.6020682 * pow((voltage / 2.0), -2.769034857);
  1396  0C14  3038               	movlw	56
  1397  0C15  1683               	bsf	3,5	;RP0=1, select bank1
  1398  0C16  1303               	bcf	3,6	;RP1=0, select bank1
  1399  0C17  00AC               	movwf	pow@y^(0+128)
  1400  0C18  3031               	movlw	49
  1401  0C19  00AD               	movwf	(pow@y+1)^(0+128)
  1402  0C1A  30C0               	movlw	192
  1403  0C1B  00AE               	movwf	(pow@y+2)^(0+128)
  1404  0C1C  1683               	bsf	3,5	;RP0=1, select bank3
  1405  0C1D  1703               	bsf	3,6	;RP1=1, select bank3
  1406  0C1E  0823               	movf	_main$652^(0+384),w
  1407  0C1F  1683               	bsf	3,5	;RP0=1, select bank1
  1408  0C20  1303               	bcf	3,6	;RP1=0, select bank1
  1409  0C21  00A9               	movwf	pow@x^(0+128)
  1410  0C22  1683               	bsf	3,5	;RP0=1, select bank3
  1411  0C23  1703               	bsf	3,6	;RP1=1, select bank3
  1412  0C24  0824               	movf	(_main$652+1)^(0+384),w
  1413  0C25  1683               	bsf	3,5	;RP0=1, select bank1
  1414  0C26  1303               	bcf	3,6	;RP1=0, select bank1
  1415  0C27  00AA               	movwf	(pow@x+1)^(0+128)
  1416  0C28  1683               	bsf	3,5	;RP0=1, select bank3
  1417  0C29  1703               	bsf	3,6	;RP1=1, select bank3
  1418  0C2A  0825               	movf	(_main$652+2)^(0+384),w
  1419  0C2B  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0C2C  1303               	bcf	3,6	;RP1=0, select bank1
  1421  0C2D  00AB               	movwf	(pow@x+2)^(0+128)
  1422  0C2E  160A  118A  2523  120A  158A  	fcall	_pow
  1423  0C33  1683               	bsf	3,5	;RP0=1, select bank1
  1424  0C34  1303               	bcf	3,6	;RP1=0, select bank1
  1425  0C35  0829               	movf	?_pow^(0+128),w
  1426  0C36  1683               	bsf	3,5	;RP0=1, select bank3
  1427  0C37  1703               	bsf	3,6	;RP1=1, select bank3
  1428  0C38  00C6               	movwf	_main$653^(0+384)
  1429  0C39  1683               	bsf	3,5	;RP0=1, select bank1
  1430  0C3A  1303               	bcf	3,6	;RP1=0, select bank1
  1431  0C3B  082A               	movf	(?_pow+1)^(0+128),w
  1432  0C3C  1683               	bsf	3,5	;RP0=1, select bank3
  1433  0C3D  1703               	bsf	3,6	;RP1=1, select bank3
  1434  0C3E  00C7               	movwf	(_main$653+1)^(0+384)
  1435  0C3F  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0C40  1303               	bcf	3,6	;RP1=0, select bank1
  1437  0C41  082B               	movf	(?_pow+2)^(0+128),w
  1438  0C42  1683               	bsf	3,5	;RP0=1, select bank3
  1439  0C43  1703               	bsf	3,6	;RP1=1, select bank3
  1440  0C44  00C8               	movwf	(_main$653+2)^(0+384)
  1441                           
  1442                           ;main.c: 60: float ppm = 116.6020682 * pow((voltage / 2.0), -2.769034857);
  1443  0C45  3034               	movlw	52
  1444  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0C48  00A7               	movwf	___ftmul@f1
  1447  0C49  30E9               	movlw	233
  1448  0C4A  00A8               	movwf	___ftmul@f1+1
  1449  0C4B  3042               	movlw	66
  1450  0C4C  00A9               	movwf	___ftmul@f1+2
  1451  0C4D  1683               	bsf	3,5	;RP0=1, select bank3
  1452  0C4E  1703               	bsf	3,6	;RP1=1, select bank3
  1453  0C4F  0846               	movf	_main$653^(0+384),w
  1454  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0C52  00AA               	movwf	___ftmul@f2
  1457  0C53  1683               	bsf	3,5	;RP0=1, select bank3
  1458  0C54  1703               	bsf	3,6	;RP1=1, select bank3
  1459  0C55  0847               	movf	(_main$653+1)^(0+384),w
  1460  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  1461  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  1462  0C58  00AB               	movwf	___ftmul@f2+1
  1463  0C59  1683               	bsf	3,5	;RP0=1, select bank3
  1464  0C5A  1703               	bsf	3,6	;RP1=1, select bank3
  1465  0C5B  0848               	movf	(_main$653+2)^(0+384),w
  1466  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0C5E  00AC               	movwf	___ftmul@f2+2
  1469  0C5F  160A  118A  2215  120A  158A  	fcall	___ftmul
  1470  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0C66  0827               	movf	?___ftmul,w
  1473  0C67  1683               	bsf	3,5	;RP0=1, select bank3
  1474  0C68  1703               	bsf	3,6	;RP1=1, select bank3
  1475  0C69  0090               	movwf	main@ppm^(0+384)
  1476  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0C6C  0828               	movf	?___ftmul+1,w
  1479  0C6D  1683               	bsf	3,5	;RP0=1, select bank3
  1480  0C6E  1703               	bsf	3,6	;RP1=1, select bank3
  1481  0C6F  0091               	movwf	(main@ppm+1)^(0+384)
  1482  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  1483  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  1484  0C72  0829               	movf	?___ftmul+2,w
  1485  0C73  1683               	bsf	3,5	;RP0=1, select bank3
  1486  0C74  1703               	bsf	3,6	;RP1=1, select bank3
  1487  0C75  0092               	movwf	(main@ppm+2)^(0+384)
  1488                           
  1489                           ;main.c: 61: float ratio = voltage / 5.0;
  1490  0C76  3000               	movlw	0
  1491  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  1492  0C78  1303               	bcf	3,6	;RP1=0, select bank0
  1493  0C79  00B7               	movwf	___ftdiv@f2
  1494  0C7A  30A0               	movlw	160
  1495  0C7B  00B8               	movwf	___ftdiv@f2+1
  1496  0C7C  3040               	movlw	64
  1497  0C7D  00B9               	movwf	___ftdiv@f2+2
  1498  0C7E  1683               	bsf	3,5	;RP0=1, select bank3
  1499  0C7F  1703               	bsf	3,6	;RP1=1, select bank3
  1500  0C80  0843               	movf	main@voltage^(0+384),w
  1501  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0C83  00BA               	movwf	___ftdiv@f1
  1504  0C84  1683               	bsf	3,5	;RP0=1, select bank3
  1505  0C85  1703               	bsf	3,6	;RP1=1, select bank3
  1506  0C86  0844               	movf	(main@voltage+1)^(0+384),w
  1507  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0C89  00BB               	movwf	___ftdiv@f1+1
  1510  0C8A  1683               	bsf	3,5	;RP0=1, select bank3
  1511  0C8B  1703               	bsf	3,6	;RP1=1, select bank3
  1512  0C8C  0845               	movf	(main@voltage+2)^(0+384),w
  1513  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  1514  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  1515  0C8F  00BC               	movwf	___ftdiv@f1+2
  1516  0C90  160A  158A  2748  120A  158A  	fcall	___ftdiv
  1517  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0C97  0837               	movf	?___ftdiv,w
  1520  0C98  1683               	bsf	3,5	;RP0=1, select bank3
  1521  0C99  1703               	bsf	3,6	;RP1=1, select bank3
  1522  0C9A  00CC               	movwf	main@ratio^(0+384)
  1523  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0C9D  0838               	movf	?___ftdiv+1,w
  1526  0C9E  1683               	bsf	3,5	;RP0=1, select bank3
  1527  0C9F  1703               	bsf	3,6	;RP1=1, select bank3
  1528  0CA0  00CD               	movwf	(main@ratio+1)^(0+384)
  1529  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0CA3  0839               	movf	?___ftdiv+2,w
  1532  0CA4  1683               	bsf	3,5	;RP0=1, select bank3
  1533  0CA5  1703               	bsf	3,6	;RP1=1, select bank3
  1534  0CA6  00CE               	movwf	(main@ratio+2)^(0+384)
  1535                           
  1536                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1537  0CA7  3000               	movlw	0
  1538  0CA8  1683               	bsf	3,5	;RP0=1, select bank1
  1539  0CA9  1303               	bcf	3,6	;RP1=0, select bank1
  1540  0CAA  00AC               	movwf	pow@y^(0+128)
  1541  0CAB  30C0               	movlw	192
  1542  0CAC  00AD               	movwf	(pow@y+1)^(0+128)
  1543  0CAD  3040               	movlw	64
  1544  0CAE  00AE               	movwf	(pow@y+2)^(0+128)
  1545  0CAF  1683               	bsf	3,5	;RP0=1, select bank3
  1546  0CB0  1703               	bsf	3,6	;RP1=1, select bank3
  1547  0CB1  084C               	movf	main@ratio^(0+384),w
  1548  0CB2  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0CB3  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0CB4  00A9               	movwf	pow@x^(0+128)
  1551  0CB5  1683               	bsf	3,5	;RP0=1, select bank3
  1552  0CB6  1703               	bsf	3,6	;RP1=1, select bank3
  1553  0CB7  084D               	movf	(main@ratio+1)^(0+384),w
  1554  0CB8  1683               	bsf	3,5	;RP0=1, select bank1
  1555  0CB9  1303               	bcf	3,6	;RP1=0, select bank1
  1556  0CBA  00AA               	movwf	(pow@x+1)^(0+128)
  1557  0CBB  1683               	bsf	3,5	;RP0=1, select bank3
  1558  0CBC  1703               	bsf	3,6	;RP1=1, select bank3
  1559  0CBD  084E               	movf	(main@ratio+2)^(0+384),w
  1560  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  1561  0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  1562  0CC0  00AB               	movwf	(pow@x+2)^(0+128)
  1563  0CC1  160A  118A  2523  120A  158A  	fcall	_pow
  1564  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0CC8  0829               	movf	?_pow^(0+128),w
  1567  0CC9  1683               	bsf	3,5	;RP0=1, select bank3
  1568  0CCA  1703               	bsf	3,6	;RP1=1, select bank3
  1569  0CCB  00A6               	movwf	_main$654^(0+384)
  1570  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0CCE  082A               	movf	(?_pow+1)^(0+128),w
  1573  0CCF  1683               	bsf	3,5	;RP0=1, select bank3
  1574  0CD0  1703               	bsf	3,6	;RP1=1, select bank3
  1575  0CD1  00A7               	movwf	(_main$654+1)^(0+384)
  1576  0CD2  1683               	bsf	3,5	;RP0=1, select bank1
  1577  0CD3  1303               	bcf	3,6	;RP1=0, select bank1
  1578  0CD4  082B               	movf	(?_pow+2)^(0+128),w
  1579  0CD5  1683               	bsf	3,5	;RP0=1, select bank3
  1580  0CD6  1703               	bsf	3,6	;RP1=1, select bank3
  1581  0CD7  00A8               	movwf	(_main$654+2)^(0+384)
  1582                           
  1583                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1584  0CD8  3000               	movlw	0
  1585  0CD9  1683               	bsf	3,5	;RP0=1, select bank1
  1586  0CDA  1303               	bcf	3,6	;RP1=0, select bank1
  1587  0CDB  00AC               	movwf	pow@y^(0+128)
  1588  0CDC  30A0               	movlw	160
  1589  0CDD  00AD               	movwf	(pow@y+1)^(0+128)
  1590  0CDE  3040               	movlw	64
  1591  0CDF  00AE               	movwf	(pow@y+2)^(0+128)
  1592  0CE0  1683               	bsf	3,5	;RP0=1, select bank3
  1593  0CE1  1703               	bsf	3,6	;RP1=1, select bank3
  1594  0CE2  084C               	movf	main@ratio^(0+384),w
  1595  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0CE4  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0CE5  00A9               	movwf	pow@x^(0+128)
  1598  0CE6  1683               	bsf	3,5	;RP0=1, select bank3
  1599  0CE7  1703               	bsf	3,6	;RP1=1, select bank3
  1600  0CE8  084D               	movf	(main@ratio+1)^(0+384),w
  1601  0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0CEA  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0CEB  00AA               	movwf	(pow@x+1)^(0+128)
  1604  0CEC  1683               	bsf	3,5	;RP0=1, select bank3
  1605  0CED  1703               	bsf	3,6	;RP1=1, select bank3
  1606  0CEE  084E               	movf	(main@ratio+2)^(0+384),w
  1607  0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  1608  0CF0  1303               	bcf	3,6	;RP1=0, select bank1
  1609  0CF1  00AB               	movwf	(pow@x+2)^(0+128)
  1610  0CF2  160A  118A  2523  120A  158A  	fcall	_pow
  1611  0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  1612  0CF8  1303               	bcf	3,6	;RP1=0, select bank1
  1613  0CF9  0829               	movf	?_pow^(0+128),w
  1614  0CFA  1683               	bsf	3,5	;RP0=1, select bank3
  1615  0CFB  1703               	bsf	3,6	;RP1=1, select bank3
  1616  0CFC  00C6               	movwf	_main$653^(0+384)
  1617  0CFD  1683               	bsf	3,5	;RP0=1, select bank1
  1618  0CFE  1303               	bcf	3,6	;RP1=0, select bank1
  1619  0CFF  082A               	movf	(?_pow+1)^(0+128),w
  1620  0D00  1683               	bsf	3,5	;RP0=1, select bank3
  1621  0D01  1703               	bsf	3,6	;RP1=1, select bank3
  1622  0D02  00C7               	movwf	(_main$653+1)^(0+384)
  1623  0D03  1683               	bsf	3,5	;RP0=1, select bank1
  1624  0D04  1303               	bcf	3,6	;RP1=0, select bank1
  1625  0D05  082B               	movf	(?_pow+2)^(0+128),w
  1626  0D06  1683               	bsf	3,5	;RP0=1, select bank3
  1627  0D07  1703               	bsf	3,6	;RP1=1, select bank3
  1628  0D08  00C8               	movwf	(_main$653+2)^(0+384)
  1629                           
  1630                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1631  0D09  3000               	movlw	0
  1632  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  1633  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  1634  0D0C  00AC               	movwf	pow@y^(0+128)
  1635  0D0D  3080               	movlw	128
  1636  0D0E  00AD               	movwf	(pow@y+1)^(0+128)
  1637  0D0F  3040               	movlw	64
  1638  0D10  00AE               	movwf	(pow@y+2)^(0+128)
  1639  0D11  1683               	bsf	3,5	;RP0=1, select bank3
  1640  0D12  1703               	bsf	3,6	;RP1=1, select bank3
  1641  0D13  084C               	movf	main@ratio^(0+384),w
  1642  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0D15  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0D16  00A9               	movwf	pow@x^(0+128)
  1645  0D17  1683               	bsf	3,5	;RP0=1, select bank3
  1646  0D18  1703               	bsf	3,6	;RP1=1, select bank3
  1647  0D19  084D               	movf	(main@ratio+1)^(0+384),w
  1648  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  1649  0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  1650  0D1C  00AA               	movwf	(pow@x+1)^(0+128)
  1651  0D1D  1683               	bsf	3,5	;RP0=1, select bank3
  1652  0D1E  1703               	bsf	3,6	;RP1=1, select bank3
  1653  0D1F  084E               	movf	(main@ratio+2)^(0+384),w
  1654  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  1655  0D21  1303               	bcf	3,6	;RP1=0, select bank1
  1656  0D22  00AB               	movwf	(pow@x+2)^(0+128)
  1657  0D23  160A  118A  2523  120A  158A  	fcall	_pow
  1658  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  1659  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  1660  0D2A  0829               	movf	?_pow^(0+128),w
  1661  0D2B  1683               	bsf	3,5	;RP0=1, select bank3
  1662  0D2C  1703               	bsf	3,6	;RP1=1, select bank3
  1663  0D2D  00A9               	movwf	_main$655^(0+384)
  1664  0D2E  1683               	bsf	3,5	;RP0=1, select bank1
  1665  0D2F  1303               	bcf	3,6	;RP1=0, select bank1
  1666  0D30  082A               	movf	(?_pow+1)^(0+128),w
  1667  0D31  1683               	bsf	3,5	;RP0=1, select bank3
  1668  0D32  1703               	bsf	3,6	;RP1=1, select bank3
  1669  0D33  00AA               	movwf	(_main$655+1)^(0+384)
  1670  0D34  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0D35  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0D36  082B               	movf	(?_pow+2)^(0+128),w
  1673  0D37  1683               	bsf	3,5	;RP0=1, select bank3
  1674  0D38  1703               	bsf	3,6	;RP1=1, select bank3
  1675  0D39  00AB               	movwf	(_main$655+2)^(0+384)
  1676                           
  1677                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1678  0D3A  3000               	movlw	0
  1679  0D3B  1683               	bsf	3,5	;RP0=1, select bank1
  1680  0D3C  1303               	bcf	3,6	;RP1=0, select bank1
  1681  0D3D  00AC               	movwf	pow@y^(0+128)
  1682  0D3E  3040               	movlw	64
  1683  0D3F  00AD               	movwf	(pow@y+1)^(0+128)
  1684  0D40  3040               	movlw	64
  1685  0D41  00AE               	movwf	(pow@y+2)^(0+128)
  1686  0D42  1683               	bsf	3,5	;RP0=1, select bank3
  1687  0D43  1703               	bsf	3,6	;RP1=1, select bank3
  1688  0D44  084C               	movf	main@ratio^(0+384),w
  1689  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  1690  0D46  1303               	bcf	3,6	;RP1=0, select bank1
  1691  0D47  00A9               	movwf	pow@x^(0+128)
  1692  0D48  1683               	bsf	3,5	;RP0=1, select bank3
  1693  0D49  1703               	bsf	3,6	;RP1=1, select bank3
  1694  0D4A  084D               	movf	(main@ratio+1)^(0+384),w
  1695  0D4B  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0D4C  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0D4D  00AA               	movwf	(pow@x+1)^(0+128)
  1698  0D4E  1683               	bsf	3,5	;RP0=1, select bank3
  1699  0D4F  1703               	bsf	3,6	;RP1=1, select bank3
  1700  0D50  084E               	movf	(main@ratio+2)^(0+384),w
  1701  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  1702  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  1703  0D53  00AB               	movwf	(pow@x+2)^(0+128)
  1704  0D54  160A  118A  2523  120A  158A  	fcall	_pow
  1705  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  1706  0D5A  1303               	bcf	3,6	;RP1=0, select bank1
  1707  0D5B  0829               	movf	?_pow^(0+128),w
  1708  0D5C  1683               	bsf	3,5	;RP0=1, select bank3
  1709  0D5D  1703               	bsf	3,6	;RP1=1, select bank3
  1710  0D5E  00AC               	movwf	_main$656^(0+384)
  1711  0D5F  1683               	bsf	3,5	;RP0=1, select bank1
  1712  0D60  1303               	bcf	3,6	;RP1=0, select bank1
  1713  0D61  082A               	movf	(?_pow+1)^(0+128),w
  1714  0D62  1683               	bsf	3,5	;RP0=1, select bank3
  1715  0D63  1703               	bsf	3,6	;RP1=1, select bank3
  1716  0D64  00AD               	movwf	(_main$656+1)^(0+384)
  1717  0D65  1683               	bsf	3,5	;RP0=1, select bank1
  1718  0D66  1303               	bcf	3,6	;RP1=0, select bank1
  1719  0D67  082B               	movf	(?_pow+2)^(0+128),w
  1720  0D68  1683               	bsf	3,5	;RP0=1, select bank3
  1721  0D69  1703               	bsf	3,6	;RP1=1, select bank3
  1722  0D6A  00AE               	movwf	(_main$656+2)^(0+384)
  1723                           
  1724                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1725  0D6B  3000               	movlw	0
  1726  0D6C  1683               	bsf	3,5	;RP0=1, select bank1
  1727  0D6D  1303               	bcf	3,6	;RP1=0, select bank1
  1728  0D6E  00AC               	movwf	pow@y^(0+128)
  1729  0D6F  3000               	movlw	0
  1730  0D70  00AD               	movwf	(pow@y+1)^(0+128)
  1731  0D71  3040               	movlw	64
  1732  0D72  00AE               	movwf	(pow@y+2)^(0+128)
  1733  0D73  1683               	bsf	3,5	;RP0=1, select bank3
  1734  0D74  1703               	bsf	3,6	;RP1=1, select bank3
  1735  0D75  084C               	movf	main@ratio^(0+384),w
  1736  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0D77  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0D78  00A9               	movwf	pow@x^(0+128)
  1739  0D79  1683               	bsf	3,5	;RP0=1, select bank3
  1740  0D7A  1703               	bsf	3,6	;RP1=1, select bank3
  1741  0D7B  084D               	movf	(main@ratio+1)^(0+384),w
  1742  0D7C  1683               	bsf	3,5	;RP0=1, select bank1
  1743  0D7D  1303               	bcf	3,6	;RP1=0, select bank1
  1744  0D7E  00AA               	movwf	(pow@x+1)^(0+128)
  1745  0D7F  1683               	bsf	3,5	;RP0=1, select bank3
  1746  0D80  1703               	bsf	3,6	;RP1=1, select bank3
  1747  0D81  084E               	movf	(main@ratio+2)^(0+384),w
  1748  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  1749  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  1750  0D84  00AB               	movwf	(pow@x+2)^(0+128)
  1751  0D85  160A  118A  2523  120A  158A  	fcall	_pow
  1752  0D8A  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0D8B  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0D8C  0829               	movf	?_pow^(0+128),w
  1755  0D8D  1683               	bsf	3,5	;RP0=1, select bank3
  1756  0D8E  1703               	bsf	3,6	;RP1=1, select bank3
  1757  0D8F  00AF               	movwf	_main$657^(0+384)
  1758  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0D91  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0D92  082A               	movf	(?_pow+1)^(0+128),w
  1761  0D93  1683               	bsf	3,5	;RP0=1, select bank3
  1762  0D94  1703               	bsf	3,6	;RP1=1, select bank3
  1763  0D95  00B0               	movwf	(_main$657+1)^(0+384)
  1764  0D96  1683               	bsf	3,5	;RP0=1, select bank1
  1765  0D97  1303               	bcf	3,6	;RP1=0, select bank1
  1766  0D98  082B               	movf	(?_pow+2)^(0+128),w
  1767  0D99  1683               	bsf	3,5	;RP0=1, select bank3
  1768  0D9A  1703               	bsf	3,6	;RP1=1, select bank3
  1769  0D9B  00B1               	movwf	(_main$657+2)^(0+384)
  1770                           
  1771                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1772  0D9C  309C               	movlw	156
  1773  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0D9F  00A7               	movwf	___ftmul@f1
  1776  0DA0  30B2               	movlw	178
  1777  0DA1  00A8               	movwf	___ftmul@f1+1
  1778  0DA2  303F               	movlw	63
  1779  0DA3  00A9               	movwf	___ftmul@f1+2
  1780  0DA4  1683               	bsf	3,5	;RP0=1, select bank3
  1781  0DA5  1703               	bsf	3,6	;RP1=1, select bank3
  1782  0DA6  082F               	movf	_main$657^(0+384),w
  1783  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0DA9  00AA               	movwf	___ftmul@f2
  1786  0DAA  1683               	bsf	3,5	;RP0=1, select bank3
  1787  0DAB  1703               	bsf	3,6	;RP1=1, select bank3
  1788  0DAC  0830               	movf	(_main$657+1)^(0+384),w
  1789  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0DAF  00AB               	movwf	___ftmul@f2+1
  1792  0DB0  1683               	bsf	3,5	;RP0=1, select bank3
  1793  0DB1  1703               	bsf	3,6	;RP1=1, select bank3
  1794  0DB2  0831               	movf	(_main$657+2)^(0+384),w
  1795  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0DB5  00AC               	movwf	___ftmul@f2+2
  1798  0DB6  160A  118A  2215  120A  158A  	fcall	___ftmul
  1799  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0DBD  0827               	movf	?___ftmul,w
  1802  0DBE  00C7               	movwf	___ftadd@f1
  1803  0DBF  0828               	movf	?___ftmul+1,w
  1804  0DC0  00C8               	movwf	___ftadd@f1+1
  1805  0DC1  0829               	movf	?___ftmul+2,w
  1806  0DC2  00C9               	movwf	___ftadd@f1+2
  1807  0DC3  30A9               	movlw	169
  1808  0DC4  00A7               	movwf	___ftmul@f1
  1809  0DC5  30DE               	movlw	222
  1810  0DC6  00A8               	movwf	___ftmul@f1+1
  1811  0DC7  303C               	movlw	60
  1812  0DC8  00A9               	movwf	___ftmul@f1+2
  1813  0DC9  1683               	bsf	3,5	;RP0=1, select bank3
  1814  0DCA  1703               	bsf	3,6	;RP1=1, select bank3
  1815  0DCB  084C               	movf	main@ratio^(0+384),w
  1816  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0DCE  00AA               	movwf	___ftmul@f2
  1819  0DCF  1683               	bsf	3,5	;RP0=1, select bank3
  1820  0DD0  1703               	bsf	3,6	;RP1=1, select bank3
  1821  0DD1  084D               	movf	(main@ratio+1)^(0+384),w
  1822  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0DD4  00AB               	movwf	___ftmul@f2+1
  1825  0DD5  1683               	bsf	3,5	;RP0=1, select bank3
  1826  0DD6  1703               	bsf	3,6	;RP1=1, select bank3
  1827  0DD7  084E               	movf	(main@ratio+2)^(0+384),w
  1828  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0DDA  00AC               	movwf	___ftmul@f2+2
  1831  0DDB  160A  118A  2215  120A  158A  	fcall	___ftmul
  1832  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0DE2  0827               	movf	?___ftmul,w
  1835  0DE3  00CA               	movwf	___ftadd@f2
  1836  0DE4  0828               	movf	?___ftmul+1,w
  1837  0DE5  00CB               	movwf	___ftadd@f2+1
  1838  0DE6  0829               	movf	?___ftmul+2,w
  1839  0DE7  00CC               	movwf	___ftadd@f2+2
  1840  0DE8  160A  118A  22E8  120A  158A  	fcall	___ftadd
  1841  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0DEF  0847               	movf	?___ftadd,w
  1844  0DF0  1683               	bsf	3,5	;RP0=1, select bank3
  1845  0DF1  1703               	bsf	3,6	;RP1=1, select bank3
  1846  0DF2  00B2               	movwf	_main$658^(0+384)
  1847  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0DF5  0848               	movf	?___ftadd+1,w
  1850  0DF6  1683               	bsf	3,5	;RP0=1, select bank3
  1851  0DF7  1703               	bsf	3,6	;RP1=1, select bank3
  1852  0DF8  00B3               	movwf	(_main$658+1)^(0+384)
  1853  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0DFB  0849               	movf	?___ftadd+2,w
  1856  0DFC  1683               	bsf	3,5	;RP0=1, select bank3
  1857  0DFD  1703               	bsf	3,6	;RP1=1, select bank3
  1858  0DFE  00B4               	movwf	(_main$658+2)^(0+384)
  1859                           
  1860                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1861  0DFF  30EE               	movlw	238
  1862  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0E01  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0E02  00A7               	movwf	___ftmul@f1
  1865  0E03  30EB               	movlw	235
  1866  0E04  00A8               	movwf	___ftmul@f1+1
  1867  0E05  303A               	movlw	58
  1868  0E06  00A9               	movwf	___ftmul@f1+2
  1869  0E07  1683               	bsf	3,5	;RP0=1, select bank3
  1870  0E08  1703               	bsf	3,6	;RP1=1, select bank3
  1871  0E09  082C               	movf	_main$656^(0+384),w
  1872  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0E0C  00AA               	movwf	___ftmul@f2
  1875  0E0D  1683               	bsf	3,5	;RP0=1, select bank3
  1876  0E0E  1703               	bsf	3,6	;RP1=1, select bank3
  1877  0E0F  082D               	movf	(_main$656+1)^(0+384),w
  1878  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0E12  00AB               	movwf	___ftmul@f2+1
  1881  0E13  1683               	bsf	3,5	;RP0=1, select bank3
  1882  0E14  1703               	bsf	3,6	;RP1=1, select bank3
  1883  0E15  082E               	movf	(_main$656+2)^(0+384),w
  1884  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  1885  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  1886  0E18  00AC               	movwf	___ftmul@f2+2
  1887  0E19  160A  118A  2215  120A  158A  	fcall	___ftmul
  1888  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0E20  0827               	movf	?___ftmul,w
  1891  0E21  00C7               	movwf	___ftadd@f1
  1892  0E22  0828               	movf	?___ftmul+1,w
  1893  0E23  00C8               	movwf	___ftadd@f1+1
  1894  0E24  0829               	movf	?___ftmul+2,w
  1895  0E25  00C9               	movwf	___ftadd@f1+2
  1896  0E26  1683               	bsf	3,5	;RP0=1, select bank3
  1897  0E27  1703               	bsf	3,6	;RP1=1, select bank3
  1898  0E28  0832               	movf	_main$658^(0+384),w
  1899  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0E2B  00CA               	movwf	___ftadd@f2
  1902  0E2C  1683               	bsf	3,5	;RP0=1, select bank3
  1903  0E2D  1703               	bsf	3,6	;RP1=1, select bank3
  1904  0E2E  0833               	movf	(_main$658+1)^(0+384),w
  1905  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0E31  00CB               	movwf	___ftadd@f2+1
  1908  0E32  1683               	bsf	3,5	;RP0=1, select bank3
  1909  0E33  1703               	bsf	3,6	;RP1=1, select bank3
  1910  0E34  0834               	movf	(_main$658+2)^(0+384),w
  1911  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0E37  00CC               	movwf	___ftadd@f2+2
  1914  0E38  160A  118A  22E8  120A  158A  	fcall	___ftadd
  1915  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0E3F  0847               	movf	?___ftadd,w
  1918  0E40  1683               	bsf	3,5	;RP0=1, select bank3
  1919  0E41  1703               	bsf	3,6	;RP1=1, select bank3
  1920  0E42  00B5               	movwf	_main$659^(0+384)
  1921  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0E45  0848               	movf	?___ftadd+1,w
  1924  0E46  1683               	bsf	3,5	;RP0=1, select bank3
  1925  0E47  1703               	bsf	3,6	;RP1=1, select bank3
  1926  0E48  00B6               	movwf	(_main$659+1)^(0+384)
  1927  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0E4B  0849               	movf	?___ftadd+2,w
  1930  0E4C  1683               	bsf	3,5	;RP0=1, select bank3
  1931  0E4D  1703               	bsf	3,6	;RP1=1, select bank3
  1932  0E4E  00B7               	movwf	(_main$659+2)^(0+384)
  1933                           
  1934                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1935  0E4F  3074               	movlw	116
  1936  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0E52  00A7               	movwf	___ftmul@f1
  1939  0E53  305A               	movlw	90
  1940  0E54  00A8               	movwf	___ftmul@f1+1
  1941  0E55  30BB               	movlw	187
  1942  0E56  00A9               	movwf	___ftmul@f1+2
  1943  0E57  1683               	bsf	3,5	;RP0=1, select bank3
  1944  0E58  1703               	bsf	3,6	;RP1=1, select bank3
  1945  0E59  0829               	movf	_main$655^(0+384),w
  1946  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0E5C  00AA               	movwf	___ftmul@f2
  1949  0E5D  1683               	bsf	3,5	;RP0=1, select bank3
  1950  0E5E  1703               	bsf	3,6	;RP1=1, select bank3
  1951  0E5F  082A               	movf	(_main$655+1)^(0+384),w
  1952  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  1953  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  1954  0E62  00AB               	movwf	___ftmul@f2+1
  1955  0E63  1683               	bsf	3,5	;RP0=1, select bank3
  1956  0E64  1703               	bsf	3,6	;RP1=1, select bank3
  1957  0E65  082B               	movf	(_main$655+2)^(0+384),w
  1958  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0E68  00AC               	movwf	___ftmul@f2+2
  1961  0E69  160A  118A  2215  120A  158A  	fcall	___ftmul
  1962  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0E70  0827               	movf	?___ftmul,w
  1965  0E71  00C7               	movwf	___ftadd@f1
  1966  0E72  0828               	movf	?___ftmul+1,w
  1967  0E73  00C8               	movwf	___ftadd@f1+1
  1968  0E74  0829               	movf	?___ftmul+2,w
  1969  0E75  00C9               	movwf	___ftadd@f1+2
  1970  0E76  1683               	bsf	3,5	;RP0=1, select bank3
  1971  0E77  1703               	bsf	3,6	;RP1=1, select bank3
  1972  0E78  0835               	movf	_main$659^(0+384),w
  1973  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  1974  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  1975  0E7B  00CA               	movwf	___ftadd@f2
  1976  0E7C  1683               	bsf	3,5	;RP0=1, select bank3
  1977  0E7D  1703               	bsf	3,6	;RP1=1, select bank3
  1978  0E7E  0836               	movf	(_main$659+1)^(0+384),w
  1979  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0E81  00CB               	movwf	___ftadd@f2+1
  1982  0E82  1683               	bsf	3,5	;RP0=1, select bank3
  1983  0E83  1703               	bsf	3,6	;RP1=1, select bank3
  1984  0E84  0837               	movf	(_main$659+2)^(0+384),w
  1985  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0E87  00CC               	movwf	___ftadd@f2+2
  1988  0E88  160A  118A  22E8  120A  158A  	fcall	___ftadd
  1989  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0E8F  0847               	movf	?___ftadd,w
  1992  0E90  1683               	bsf	3,5	;RP0=1, select bank3
  1993  0E91  1703               	bsf	3,6	;RP1=1, select bank3
  1994  0E92  00B8               	movwf	_main$660^(0+384)
  1995  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0E95  0848               	movf	?___ftadd+1,w
  1998  0E96  1683               	bsf	3,5	;RP0=1, select bank3
  1999  0E97  1703               	bsf	3,6	;RP1=1, select bank3
  2000  0E98  00B9               	movwf	(_main$660+1)^(0+384)
  2001  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  2002  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  2003  0E9B  0849               	movf	?___ftadd+2,w
  2004  0E9C  1683               	bsf	3,5	;RP0=1, select bank3
  2005  0E9D  1703               	bsf	3,6	;RP1=1, select bank3
  2006  0E9E  00BA               	movwf	(_main$660+2)^(0+384)
  2007                           
  2008                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  2009  0E9F  3010               	movlw	16
  2010  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0EA2  00A7               	movwf	___ftmul@f1
  2013  0EA3  30FC               	movlw	252
  2014  0EA4  00A8               	movwf	___ftmul@f1+1
  2015  0EA5  30BA               	movlw	186
  2016  0EA6  00A9               	movwf	___ftmul@f1+2
  2017  0EA7  1683               	bsf	3,5	;RP0=1, select bank3
  2018  0EA8  1703               	bsf	3,6	;RP1=1, select bank3
  2019  0EA9  0846               	movf	_main$653^(0+384),w
  2020  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0EAC  00AA               	movwf	___ftmul@f2
  2023  0EAD  1683               	bsf	3,5	;RP0=1, select bank3
  2024  0EAE  1703               	bsf	3,6	;RP1=1, select bank3
  2025  0EAF  0847               	movf	(_main$653+1)^(0+384),w
  2026  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0EB2  00AB               	movwf	___ftmul@f2+1
  2029  0EB3  1683               	bsf	3,5	;RP0=1, select bank3
  2030  0EB4  1703               	bsf	3,6	;RP1=1, select bank3
  2031  0EB5  0848               	movf	(_main$653+2)^(0+384),w
  2032  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  2033  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  2034  0EB8  00AC               	movwf	___ftmul@f2+2
  2035  0EB9  160A  118A  2215  120A  158A  	fcall	___ftmul
  2036  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0EC0  0827               	movf	?___ftmul,w
  2039  0EC1  00C7               	movwf	___ftadd@f1
  2040  0EC2  0828               	movf	?___ftmul+1,w
  2041  0EC3  00C8               	movwf	___ftadd@f1+1
  2042  0EC4  0829               	movf	?___ftmul+2,w
  2043  0EC5  00C9               	movwf	___ftadd@f1+2
  2044  0EC6  1683               	bsf	3,5	;RP0=1, select bank3
  2045  0EC7  1703               	bsf	3,6	;RP1=1, select bank3
  2046  0EC8  0838               	movf	_main$660^(0+384),w
  2047  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0ECB  00CA               	movwf	___ftadd@f2
  2050  0ECC  1683               	bsf	3,5	;RP0=1, select bank3
  2051  0ECD  1703               	bsf	3,6	;RP1=1, select bank3
  2052  0ECE  0839               	movf	(_main$660+1)^(0+384),w
  2053  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0ED1  00CB               	movwf	___ftadd@f2+1
  2056  0ED2  1683               	bsf	3,5	;RP0=1, select bank3
  2057  0ED3  1703               	bsf	3,6	;RP1=1, select bank3
  2058  0ED4  083A               	movf	(_main$660+2)^(0+384),w
  2059  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0ED7  00CC               	movwf	___ftadd@f2+2
  2062  0ED8  160A  118A  22E8  120A  158A  	fcall	___ftadd
  2063  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0EDF  0847               	movf	?___ftadd,w
  2066  0EE0  1683               	bsf	3,5	;RP0=1, select bank3
  2067  0EE1  1703               	bsf	3,6	;RP1=1, select bank3
  2068  0EE2  00BB               	movwf	_main$661^(0+384)
  2069  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0EE5  0848               	movf	?___ftadd+1,w
  2072  0EE6  1683               	bsf	3,5	;RP0=1, select bank3
  2073  0EE7  1703               	bsf	3,6	;RP1=1, select bank3
  2074  0EE8  00BC               	movwf	(_main$661+1)^(0+384)
  2075  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0EEB  0849               	movf	?___ftadd+2,w
  2078  0EEC  1683               	bsf	3,5	;RP0=1, select bank3
  2079  0EED  1703               	bsf	3,6	;RP1=1, select bank3
  2080  0EEE  00BD               	movwf	(_main$661+2)^(0+384)
  2081                           
  2082                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  2083  0EEF  30A8               	movlw	168
  2084  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0EF2  00A7               	movwf	___ftmul@f1
  2087  0EF3  3090               	movlw	144
  2088  0EF4  00A8               	movwf	___ftmul@f1+1
  2089  0EF5  303F               	movlw	63
  2090  0EF6  00A9               	movwf	___ftmul@f1+2
  2091  0EF7  1683               	bsf	3,5	;RP0=1, select bank3
  2092  0EF8  1703               	bsf	3,6	;RP1=1, select bank3
  2093  0EF9  0826               	movf	_main$654^(0+384),w
  2094  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0EFC  00AA               	movwf	___ftmul@f2
  2097  0EFD  1683               	bsf	3,5	;RP0=1, select bank3
  2098  0EFE  1703               	bsf	3,6	;RP1=1, select bank3
  2099  0EFF  0827               	movf	(_main$654+1)^(0+384),w
  2100  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0F02  00AB               	movwf	___ftmul@f2+1
  2103  0F03  1683               	bsf	3,5	;RP0=1, select bank3
  2104  0F04  1703               	bsf	3,6	;RP1=1, select bank3
  2105  0F05  0828               	movf	(_main$654+2)^(0+384),w
  2106  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0F08  00AC               	movwf	___ftmul@f2+2
  2109  0F09  160A  118A  2215  120A  158A  	fcall	___ftmul
  2110  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0F10  0827               	movf	?___ftmul,w
  2113  0F11  00C7               	movwf	___ftadd@f1
  2114  0F12  0828               	movf	?___ftmul+1,w
  2115  0F13  00C8               	movwf	___ftadd@f1+1
  2116  0F14  0829               	movf	?___ftmul+2,w
  2117  0F15  00C9               	movwf	___ftadd@f1+2
  2118  0F16  1683               	bsf	3,5	;RP0=1, select bank3
  2119  0F17  1703               	bsf	3,6	;RP1=1, select bank3
  2120  0F18  083B               	movf	_main$661^(0+384),w
  2121  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0F1B  00CA               	movwf	___ftadd@f2
  2124  0F1C  1683               	bsf	3,5	;RP0=1, select bank3
  2125  0F1D  1703               	bsf	3,6	;RP1=1, select bank3
  2126  0F1E  083C               	movf	(_main$661+1)^(0+384),w
  2127  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0F21  00CB               	movwf	___ftadd@f2+1
  2130  0F22  1683               	bsf	3,5	;RP0=1, select bank3
  2131  0F23  1703               	bsf	3,6	;RP1=1, select bank3
  2132  0F24  083D               	movf	(_main$661+2)^(0+384),w
  2133  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0F27  00CC               	movwf	___ftadd@f2+2
  2136  0F28  160A  118A  22E8  120A  158A  	fcall	___ftadd
  2137  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2138  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2139  0F2F  0847               	movf	?___ftadd,w
  2140  0F30  1683               	bsf	3,5	;RP0=1, select bank3
  2141  0F31  1703               	bsf	3,6	;RP1=1, select bank3
  2142  0F32  00BE               	movwf	_main$662^(0+384)
  2143  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0F35  0848               	movf	?___ftadd+1,w
  2146  0F36  1683               	bsf	3,5	;RP0=1, select bank3
  2147  0F37  1703               	bsf	3,6	;RP1=1, select bank3
  2148  0F38  00BF               	movwf	(_main$662+1)^(0+384)
  2149  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2150  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2151  0F3B  0849               	movf	?___ftadd+2,w
  2152  0F3C  1683               	bsf	3,5	;RP0=1, select bank3
  2153  0F3D  1703               	bsf	3,6	;RP1=1, select bank3
  2154  0F3E  00C0               	movwf	(_main$662+2)^(0+384)
  2155                           
  2156                           ;main.c: 62: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  2157  0F3F  3080               	movlw	128
  2158  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0F42  00C7               	movwf	___ftadd@f1
  2161  0F43  30B7               	movlw	183
  2162  0F44  00C8               	movwf	___ftadd@f1+1
  2163  0F45  3039               	movlw	57
  2164  0F46  00C9               	movwf	___ftadd@f1+2
  2165  0F47  1683               	bsf	3,5	;RP0=1, select bank3
  2166  0F48  1703               	bsf	3,6	;RP1=1, select bank3
  2167  0F49  083E               	movf	_main$662^(0+384),w
  2168  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0F4C  00CA               	movwf	___ftadd@f2
  2171  0F4D  1683               	bsf	3,5	;RP0=1, select bank3
  2172  0F4E  1703               	bsf	3,6	;RP1=1, select bank3
  2173  0F4F  083F               	movf	(_main$662+1)^(0+384),w
  2174  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0F52  00CB               	movwf	___ftadd@f2+1
  2177  0F53  1683               	bsf	3,5	;RP0=1, select bank3
  2178  0F54  1703               	bsf	3,6	;RP1=1, select bank3
  2179  0F55  0840               	movf	(_main$662+2)^(0+384),w
  2180  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  2181  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  2182  0F58  00CC               	movwf	___ftadd@f2+2
  2183  0F59  160A  118A  22E8  120A  158A  	fcall	___ftadd
  2184  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0F60  0847               	movf	?___ftadd,w
  2187  0F61  1683               	bsf	3,5	;RP0=1, select bank3
  2188  0F62  1703               	bsf	3,6	;RP1=1, select bank3
  2189  0F63  00C9               	movwf	main@co2^(0+384)
  2190  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0F66  0848               	movf	?___ftadd+1,w
  2193  0F67  1683               	bsf	3,5	;RP0=1, select bank3
  2194  0F68  1703               	bsf	3,6	;RP1=1, select bank3
  2195  0F69  00CA               	movwf	(main@co2+1)^(0+384)
  2196  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0F6C  0849               	movf	?___ftadd+2,w
  2199  0F6D  1683               	bsf	3,5	;RP0=1, select bank3
  2200  0F6E  1703               	bsf	3,6	;RP1=1, select bank3
  2201  0F6F  00CB               	movwf	(main@co2+2)^(0+384)
  2202                           
  2203                           ;main.c: 63: co2 = co2 * 415.58;
  2204  0F70  30CA               	movlw	202
  2205  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  2206  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  2207  0F73  00A7               	movwf	___ftmul@f1
  2208  0F74  30CF               	movlw	207
  2209  0F75  00A8               	movwf	___ftmul@f1+1
  2210  0F76  3043               	movlw	67
  2211  0F77  00A9               	movwf	___ftmul@f1+2
  2212  0F78  1683               	bsf	3,5	;RP0=1, select bank3
  2213  0F79  1703               	bsf	3,6	;RP1=1, select bank3
  2214  0F7A  0849               	movf	main@co2^(0+384),w
  2215  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0F7D  00AA               	movwf	___ftmul@f2
  2218  0F7E  1683               	bsf	3,5	;RP0=1, select bank3
  2219  0F7F  1703               	bsf	3,6	;RP1=1, select bank3
  2220  0F80  084A               	movf	(main@co2+1)^(0+384),w
  2221  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0F83  00AB               	movwf	___ftmul@f2+1
  2224  0F84  1683               	bsf	3,5	;RP0=1, select bank3
  2225  0F85  1703               	bsf	3,6	;RP1=1, select bank3
  2226  0F86  084B               	movf	(main@co2+2)^(0+384),w
  2227  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0F89  00AC               	movwf	___ftmul@f2+2
  2230  0F8A  160A  118A  2215  120A  158A  	fcall	___ftmul
  2231  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0F91  0827               	movf	?___ftmul,w
  2234  0F92  1683               	bsf	3,5	;RP0=1, select bank3
  2235  0F93  1703               	bsf	3,6	;RP1=1, select bank3
  2236  0F94  00C9               	movwf	main@co2^(0+384)
  2237  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0F97  0828               	movf	?___ftmul+1,w
  2240  0F98  1683               	bsf	3,5	;RP0=1, select bank3
  2241  0F99  1703               	bsf	3,6	;RP1=1, select bank3
  2242  0F9A  00CA               	movwf	(main@co2+1)^(0+384)
  2243  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  2244  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  2245  0F9D  0829               	movf	?___ftmul+2,w
  2246  0F9E  1683               	bsf	3,5	;RP0=1, select bank3
  2247  0F9F  1703               	bsf	3,6	;RP1=1, select bank3
  2248  0FA0  00CB               	movwf	(main@co2+2)^(0+384)
  2249                           
  2250                           ;main.c: 64: char buffer[16];
  2251                           ;main.c: 65: sprintf(buffer, "CO2: %.2f ppm  ", co2);
  2252  0FA1  30D4               	movlw	(STR_1-__stringbase)& (0+255)
  2253  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0FA4  00ED               	movwf	??_main
  2256  0FA5  086D               	movf	??_main,w
  2257  0FA6  00DA               	movwf	sprintf@f
  2258  0FA7  1683               	bsf	3,5	;RP0=1, select bank3
  2259  0FA8  1703               	bsf	3,6	;RP1=1, select bank3
  2260  0FA9  0849               	movf	main@co2^(0+384),w
  2261  0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0FAC  00DB               	movwf	?_sprintf+1
  2264  0FAD  1683               	bsf	3,5	;RP0=1, select bank3
  2265  0FAE  1703               	bsf	3,6	;RP1=1, select bank3
  2266  0FAF  084A               	movf	(main@co2+1)^(0+384),w
  2267  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0FB2  00DC               	movwf	?_sprintf+2
  2270  0FB3  1683               	bsf	3,5	;RP0=1, select bank3
  2271  0FB4  1703               	bsf	3,6	;RP1=1, select bank3
  2272  0FB5  084B               	movf	(main@co2+2)^(0+384),w
  2273  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0FB8  00DD               	movwf	?_sprintf+3
  2276  0FB9  3093               	movlw	main@buffer& (0+255)
  2277  0FBA  120A  118A  21A0  120A  158A  	fcall	_sprintf
  2278                           
  2279                           ;main.c: 66: printToLCD(buffer);
  2280  0FBF  3093               	movlw	main@buffer& (0+255)
  2281  0FC0  00F2               	movwf	printToLCD@STR
  2282  0FC1  3001               	movlw	1
  2283  0FC2  00F3               	movwf	printToLCD@STR+1
  2284  0FC3  160A  158A  221C  120A  158A  	fcall	_printToLCD
  2285                           
  2286                           ;main.c: 67: if(co2 > 9)
  2287  0FC8  3000               	movlw	0
  2288  0FC9  00F0               	movwf	___ftge@ff1
  2289  0FCA  3010               	movlw	16
  2290  0FCB  00F1               	movwf	___ftge@ff1+1
  2291  0FCC  3041               	movlw	65
  2292  0FCD  00F2               	movwf	___ftge@ff1+2
  2293  0FCE  1683               	bsf	3,5	;RP0=1, select bank3
  2294  0FCF  1703               	bsf	3,6	;RP1=1, select bank3
  2295  0FD0  0849               	movf	main@co2^(0+384),w
  2296  0FD1  00F3               	movwf	___ftge@ff2
  2297  0FD2  084A               	movf	(main@co2+1)^(0+384),w
  2298  0FD3  00F4               	movwf	___ftge@ff2+1
  2299  0FD4  084B               	movf	(main@co2+2)^(0+384),w
  2300  0FD5  00F5               	movwf	___ftge@ff2+2
  2301  0FD6  160A  158A  238F  120A  158A  	fcall	___ftge
  2302  0FDB  1803               	btfsc	3,0
  2303  0FDC  2FE5               	goto	l3172
  2304                           
  2305                           ;main.c: 68: {
  2306                           ;main.c: 69: instCTRL(0xC0);
  2307  0FDD  30C0               	movlw	192
  2308  0FDE  160A  158A  2188  120A  158A  	fcall	_instCTRL
  2309                           
  2310                           ;main.c: 70: printToLCD("CO2 levels high! ");
  2311  0FE3  30B0               	movlw	low (STR_2-__stringbase)
  2312  0FE4  2FEC               	goto	L1
  2313  0FE5                     l3172:	
  2314                           ;main.c: 71: }
  2315                           
  2316                           
  2317                           ;main.c: 72: else
  2318                           ;main.c: 73: {
  2319                           ;main.c: 74: instCTRL(0xC0);
  2320  0FE5  30C0               	movlw	192
  2321  0FE6  160A  158A  2188  120A  158A  	fcall	_instCTRL
  2322                           
  2323                           ;main.c: 75: printToLCD("CO2 levels are OK");
  2324  0FEB  30C2               	movlw	low (STR_3-__stringbase)
  2325  0FEC                     L1:	
  2326  0FEC  00F2               	movwf	printToLCD@STR
  2327  0FED  3080               	movlw	128
  2328  0FEE  00F3               	movwf	printToLCD@STR+1
  2329  0FEF  160A  158A  221C  120A  158A  	fcall	_printToLCD
  2330                           
  2331                           ;main.c: 76: }
  2332                           ;main.c: 77: _delay((unsigned long)((50)*(4000000/4000.0)));
  2333  0FF4  3041               	movlw	65
  2334  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0FF7  00EE               	movwf	??_main+1
  2337  0FF8  30EE               	movlw	238
  2338  0FF9  00ED               	movwf	??_main
  2339  0FFA                     u4317:	
  2340  0FFA  0BED               	decfsz	??_main,f
  2341  0FFB  2FFA               	goto	u4317
  2342  0FFC  0BEE               	decfsz	??_main+1,f
  2343  0FFD  2FFA               	goto	u4317
  2344  0FFE  0000               	nop
  2345                           
  2346                           ;main.c: 78: }
  2347  0FFF  2B89               	goto	l3124
  2348  1000                     __end_of_main:	
  2349                           
  2350                           	psect	text1
  2351  01A0                     __ptext1:	
  2352 ;; *************** function _sprintf *****************
  2353 ;; Defined at:
  2354 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  sp              1    wreg     PTR unsigned char 
  2357 ;;		 -> main@buffer(16), 
  2358 ;;  f               1   58[BANK0 ] PTR const unsigned char 
  2359 ;;		 -> STR_1(16), 
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  2362 ;;		 -> main@buffer(16), 
  2363 ;;  vd              4    8[BANK1 ] unsigned long 
  2364 ;;  vd              4   12[BANK1 ] unsigned long 
  2365 ;;  _val            4   21[BANK1 ] struct .
  2366 ;;  fval            3   30[BANK1 ] struct .
  2367 ;;  integ           3   18[BANK1 ] struct .
  2368 ;;  ival            3    0        struct .
  2369 ;;  prec            2   28[BANK1 ] int 
  2370 ;;  exp             2   25[BANK1 ] int 
  2371 ;;  flag            2   16[BANK1 ] unsigned short 
  2372 ;;  width           2    0        int 
  2373 ;;  c               1   33[BANK1 ] char 
  2374 ;;  ap              1    7[BANK1 ] PTR void [1]
  2375 ;;		 -> ?_sprintf(2), 
  2376 ;;  d               1    0        unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2   58[BANK0 ] int 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         0       4       0       0       0
  2387 ;;      Locals:         0       0      34       0       0
  2388 ;;      Temps:          0       6       0       0       0
  2389 ;;      Totals:         0      10      34       0       0
  2390 ;;Total ram usage:       44 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    3
  2393 ;; This function calls:
  2394 ;;		___awdiv
  2395 ;;		___ftadd
  2396 ;;		___ftge
  2397 ;;		___ftmul
  2398 ;;		___ftneg
  2399 ;;		___ftsub
  2400 ;;		___fttol
  2401 ;;		___lldiv
  2402 ;;		___llmod
  2403 ;;		___lltoft
  2404 ;;		___wmul
  2405 ;;		__div_to_l_
  2406 ;;		__tdiv_to_l_
  2407 ;;		_fround
  2408 ;;		_isdigit
  2409 ;;		_scale
  2410 ;; This function is called by:
  2411 ;;		_main
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           
  2416                           ;psect for function _sprintf
  2417  01A0                     _sprintf:	
  2418                           
  2419                           ;incstack = 0
  2420                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2421                           ;sprintf@sp stored from wreg
  2422  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  2423  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  2424  01A2  00BB               	movwf	sprintf@sp^(0+128)
  2425                           
  2426                           ;doprnt.c: 494: va_list ap;
  2427                           ;doprnt.c: 499: signed char c;
  2428                           ;doprnt.c: 501: int width;
  2429                           ;doprnt.c: 504: int prec;
  2430                           ;doprnt.c: 508: unsigned short flag;
  2431                           ;doprnt.c: 515: char d;
  2432                           ;doprnt.c: 516: double fval, integ;
  2433                           ;doprnt.c: 517: int exp;
  2434                           ;doprnt.c: 518: double ival;
  2435                           ;doprnt.c: 519: union {
  2436                           ;doprnt.c: 520: unsigned long _val;
  2437                           ;doprnt.c: 521: struct {
  2438                           ;doprnt.c: 522: const char * _cp;
  2439                           ;doprnt.c: 523: unsigned _len;
  2440                           ;doprnt.c: 524: } _str;
  2441                           ;doprnt.c: 525: } _val;
  2442                           ;doprnt.c: 542: *ap = __va_start();
  2443  01A3  305B               	movlw	(?_sprintf+1)& (0+255)
  2444  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2445  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2446  01A6  00DE               	movwf	??_sprintf
  2447  01A7  085E               	movf	??_sprintf,w
  2448  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2449  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  2450  01AA  00A7               	movwf	sprintf@ap^(0+128)
  2451  01AB                     l3096:	
  2452                           ;doprnt.c: 545: while(c = *f++) {
  2453                           
  2454  01AB  3001               	movlw	1
  2455  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2456  01AD  07DA               	addwf	sprintf@f,f
  2457  01AE  30FF               	movlw	-1
  2458  01AF  075A               	addwf	sprintf@f,w
  2459  01B0  0084               	movwf	4
  2460  01B1  160A  118A  200A  120A  118A  	fcall	stringdir
  2461  01B6  00DE               	movwf	??_sprintf
  2462  01B7  085E               	movf	??_sprintf,w
  2463  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2464  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  2465  01BA  00C1               	movwf	sprintf@c^(0+128)
  2466  01BB  08C1               	movf	sprintf@c^(0+128),f
  2467  01BC  1903               	btfsc	3,2
  2468  01BD  2FF3               	goto	l3098
  2469                           
  2470                           ;doprnt.c: 547: if(c != '%')
  2471  01BE  0841               	movf	sprintf@c^(0+128),w
  2472  01BF  3A25               	xorlw	37
  2473  01C0  1903               	skipnz
  2474  01C1  29C6               	goto	l2912
  2475                           
  2476                           ;doprnt.c: 549: {
  2477                           ;doprnt.c: 550: ((*sp++ = (c)));
  2478  01C2  0841               	movf	sprintf@c^(0+128),w
  2479  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2480  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2481  01C5  2FE2               	goto	L7
  2482  01C6                     l2912:	
  2483                           ;doprnt.c: 551: continue;
  2484                           
  2485                           
  2486                           ;doprnt.c: 552: }
  2487                           ;doprnt.c: 557: flag = 0;
  2488  01C6  01B0               	clrf	sprintf@flag^(0+128)
  2489  01C7  01B1               	clrf	(sprintf@flag+1)^(0+128)
  2490                           
  2491                           ;doprnt.c: 620: if(*f == '.') {
  2492  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2493  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2494  01CA  085A               	movf	sprintf@f,w
  2495  01CB  0084               	movwf	4
  2496  01CC  160A  118A  200A  120A  118A  	fcall	stringdir
  2497  01D1  3A2E               	xorlw	46
  2498  01D2  1D03               	skipz
  2499  01D3  2A26               	goto	l2928
  2500                           
  2501                           ;doprnt.c: 621: flag |= 0x4000;
  2502  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  2503  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  2504  01D6  1731               	bsf	(sprintf@flag^(0+128)+1),6
  2505                           
  2506                           ;doprnt.c: 622: f++;
  2507  01D7  3001               	movlw	1
  2508  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2509  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2510  01DA  00DE               	movwf	??_sprintf
  2511  01DB  085E               	movf	??_sprintf,w
  2512  01DC  07DA               	addwf	sprintf@f,f
  2513                           
  2514                           ;doprnt.c: 629: {
  2515                           ;doprnt.c: 630: prec = 0;
  2516  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  2517  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  2518  01DF  01BC               	clrf	sprintf@prec^(0+128)
  2519  01E0  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2520  01E1                     l2926:	
  2521                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  2522                           
  2523  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2524  01E2  085A               	movf	sprintf@f,w
  2525  01E3  0084               	movwf	4
  2526  01E4  160A  118A  200A  120A  118A  	fcall	stringdir
  2527  01E9  160A  158A  217A  120A  118A  	fcall	_isdigit
  2528  01EE  1C03               	btfss	3,0
  2529  01EF  2A2E               	goto	l2934
  2530                           
  2531                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  2532  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2533  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2534  01F2  083D               	movf	(sprintf@prec+1)^(0+128),w
  2535  01F3  01F1               	clrf	___wmul@multiplier+1
  2536  01F4  07F1               	addwf	___wmul@multiplier+1,f
  2537  01F5  083C               	movf	sprintf@prec^(0+128),w
  2538  01F6  01F0               	clrf	___wmul@multiplier
  2539  01F7  07F0               	addwf	___wmul@multiplier,f
  2540  01F8  300A               	movlw	10
  2541  01F9  00F2               	movwf	___wmul@multiplicand
  2542  01FA  3000               	movlw	0
  2543  01FB  00F3               	movwf	___wmul@multiplicand+1
  2544  01FC  160A  158A  223F  120A  118A  	fcall	___wmul
  2545  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0203  085A               	movf	sprintf@f,w
  2548  0204  0084               	movwf	4
  2549  0205  160A  118A  200A  120A  118A  	fcall	stringdir
  2550  020A  0770               	addwf	?___wmul,w
  2551  020B  00DE               	movwf	??_sprintf
  2552  020C  3000               	movlw	0
  2553  020D  1803               	skipnc
  2554  020E  3001               	movlw	1
  2555  020F  0771               	addwf	?___wmul+1,w
  2556  0210  00DF               	movwf	??_sprintf+1
  2557  0211  085E               	movf	??_sprintf,w
  2558  0212  3ED0               	addlw	208
  2559  0213  1683               	bsf	3,5	;RP0=1, select bank1
  2560  0214  1303               	bcf	3,6	;RP1=0, select bank1
  2561  0215  00BC               	movwf	sprintf@prec^(0+128)
  2562  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2563  0217  1303               	bcf	3,6	;RP1=0, select bank0
  2564  0218  085F               	movf	??_sprintf+1,w
  2565  0219  1803               	skipnc
  2566  021A  3E01               	addlw	1
  2567  021B  3EFF               	addlw	255
  2568  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2569  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2570  021E  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2571  021F  3001               	movlw	1
  2572  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0222  00DE               	movwf	??_sprintf
  2575  0223  085E               	movf	??_sprintf,w
  2576  0224  07DA               	addwf	sprintf@f,f
  2577  0225  29E1               	goto	l2926
  2578  0226                     l2928:	
  2579                           ;doprnt.c: 633: }
  2580                           ;doprnt.c: 634: } else {
  2581                           
  2582                           
  2583                           ;doprnt.c: 635: prec = 0;
  2584  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2585  0227  1303               	bcf	3,6	;RP1=0, select bank1
  2586  0228  01BC               	clrf	sprintf@prec^(0+128)
  2587  0229  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2588                           
  2589                           ;doprnt.c: 637: flag |= 0x1000;
  2590  022A  1631               	bsf	(sprintf@flag^(0+128)+1),4
  2591                           
  2592                           ;doprnt.c: 639: }
  2593                           ;doprnt.c: 644: switch(c = *f++) {
  2594  022B  2A2E               	goto	l2934
  2595  022C                     l124:	
  2596                           ;doprnt.c: 671: case 'f':
  2597                           
  2598                           ;doprnt.c: 647: goto alldone;
  2599                           
  2600                           ;doprnt.c: 646: case 0:
  2601                           
  2602                           
  2603                           ;doprnt.c: 672: flag |= 0x400;
  2604  022C  1531               	bsf	(sprintf@flag^(0+128)+1),2
  2605                           
  2606                           ;doprnt.c: 673: break;
  2607  022D  2A44               	goto	l2936
  2608  022E                     l2934:	
  2609                           ;doprnt.c: 831: }
  2610                           
  2611                           ;doprnt.c: 822: continue;
  2612                           
  2613                           ;doprnt.c: 811: default:
  2614                           
  2615  022E  3001               	movlw	1
  2616  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2617  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2618  0231  07DA               	addwf	sprintf@f,f
  2619  0232  30FF               	movlw	-1
  2620  0233  075A               	addwf	sprintf@f,w
  2621  0234  0084               	movwf	4
  2622  0235  160A  118A  200A  120A  118A  	fcall	stringdir
  2623  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2624  023B  1303               	bcf	3,6	;RP1=0, select bank1
  2625  023C  00C1               	movwf	sprintf@c^(0+128)
  2626                           
  2627                           ; Switch size 1, requested type "space"
  2628                           ; Number of cases is 2, Range of values is 0 to 102
  2629                           ; switch strategies available:
  2630                           ; Name         Instructions Cycles
  2631                           ; simple_byte            7     4 (average)
  2632                           ; jumptable            260     6 (fixed)
  2633                           ;	Chosen strategy is simple_byte
  2634  023D  3A00               	xorlw	0	; case 0
  2635  023E  1903               	skipnz
  2636  023F  2FF3               	goto	l3098
  2637  0240  3A66               	xorlw	102	; case 102
  2638  0241  1903               	skipnz
  2639  0242  2A2C               	goto	l124
  2640  0243  29AB               	goto	l3096
  2641  0244                     l2936:	
  2642                           
  2643                           ;doprnt.c: 834: if(flag & (0x700)) {
  2644  0244  3000               	movlw	0
  2645  0245  0530               	andwf	sprintf@flag^(0+128),w
  2646  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0248  00DE               	movwf	??_sprintf
  2649  0249  3007               	movlw	7
  2650  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2651  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2652  024C  0531               	andwf	(sprintf@flag+1)^(0+128),w
  2653  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2654  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2655  024F  00DF               	movwf	??_sprintf+1
  2656  0250  085F               	movf	??_sprintf+1,w
  2657  0251  045E               	iorwf	??_sprintf,w
  2658  0252  1903               	skipnz
  2659  0253  2F75               	goto	l3078
  2660                           
  2661                           ;doprnt.c: 836: if(flag & 0x1000)
  2662  0254  1683               	bsf	3,5	;RP0=1, select bank1
  2663  0255  1303               	bcf	3,6	;RP1=0, select bank1
  2664  0256  1E31               	btfss	(sprintf@flag+1)^(0+128),4
  2665  0257  2A5C               	goto	l2942
  2666                           
  2667                           ;doprnt.c: 838: prec = 6;
  2668  0258  3006               	movlw	6
  2669  0259  00BC               	movwf	sprintf@prec^(0+128)
  2670  025A  3000               	movlw	0
  2671  025B  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2672  025C                     l2942:	
  2673                           
  2674                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2675  025C  0827               	movf	sprintf@ap^(0+128),w
  2676  025D  0084               	movwf	4
  2677  025E  1383               	bcf	3,7	;select IRP bank0
  2678  025F  0800               	movf	0,w
  2679  0260  00BE               	movwf	sprintf@fval^(0+128)
  2680  0261  0A84               	incf	4,f
  2681  0262  0800               	movf	0,w
  2682  0263  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2683  0264  0A84               	incf	4,f
  2684  0265  0800               	movf	0,w
  2685  0266  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2686  0267  3003               	movlw	3
  2687  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2689  026A  00DE               	movwf	??_sprintf
  2690  026B  085E               	movf	??_sprintf,w
  2691  026C  1683               	bsf	3,5	;RP0=1, select bank1
  2692  026D  1303               	bcf	3,6	;RP1=0, select bank1
  2693  026E  07A7               	addwf	sprintf@ap^(0+128),f
  2694                           
  2695                           ;doprnt.c: 840: if(fval < 0.0) {
  2696  026F  083E               	movf	sprintf@fval^(0+128),w
  2697  0270  00F0               	movwf	___ftge@ff1
  2698  0271  083F               	movf	(sprintf@fval+1)^(0+128),w
  2699  0272  00F1               	movwf	___ftge@ff1+1
  2700  0273  0840               	movf	(sprintf@fval+2)^(0+128),w
  2701  0274  00F2               	movwf	___ftge@ff1+2
  2702  0275  3000               	movlw	0
  2703  0276  00F3               	movwf	___ftge@ff2
  2704  0277  3000               	movlw	0
  2705  0278  00F4               	movwf	___ftge@ff2+1
  2706  0279  3000               	movlw	0
  2707  027A  00F5               	movwf	___ftge@ff2+2
  2708  027B  160A  158A  238F  120A  118A  	fcall	___ftge
  2709  0280  1803               	btfsc	3,0
  2710  0281  2A9B               	goto	l2952
  2711                           
  2712                           ;doprnt.c: 841: fval = -fval;
  2713  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0284  083E               	movf	sprintf@fval^(0+128),w
  2716  0285  00F0               	movwf	___ftneg@f1
  2717  0286  083F               	movf	(sprintf@fval+1)^(0+128),w
  2718  0287  00F1               	movwf	___ftneg@f1+1
  2719  0288  0840               	movf	(sprintf@fval+2)^(0+128),w
  2720  0289  00F2               	movwf	___ftneg@f1+2
  2721  028A  160A  158A  2172  120A  118A  	fcall	___ftneg
  2722  028F  0870               	movf	?___ftneg,w
  2723  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2724  0291  1303               	bcf	3,6	;RP1=0, select bank1
  2725  0292  00BE               	movwf	sprintf@fval^(0+128)
  2726  0293  0871               	movf	?___ftneg+1,w
  2727  0294  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2728  0295  0872               	movf	?___ftneg+2,w
  2729  0296  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2730                           
  2731                           ;doprnt.c: 842: flag |= 0x03;
  2732  0297  3003               	movlw	3
  2733  0298  04B0               	iorwf	sprintf@flag^(0+128),f
  2734  0299  3000               	movlw	0
  2735  029A  04B1               	iorwf	(sprintf@flag+1)^(0+128),f
  2736  029B                     l2952:	
  2737                           
  2738                           ;doprnt.c: 843: }
  2739                           ;doprnt.c: 844: exp = 0;
  2740  029B  1683               	bsf	3,5	;RP0=1, select bank1
  2741  029C  1303               	bcf	3,6	;RP1=0, select bank1
  2742  029D  01B9               	clrf	sprintf@exp^(0+128)
  2743  029E  01BA               	clrf	(sprintf@exp+1)^(0+128)
  2744                           
  2745                           ;doprnt.c: 845: if( fval!=0) {
  2746  029F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2747  02A0  043F               	iorwf	(sprintf@fval+1)^(0+128),w
  2748  02A1  043E               	iorwf	sprintf@fval^(0+128),w
  2749  02A2  1903               	skipnz
  2750  02A3  2B97               	goto	l2980
  2751                           
  2752                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2753  02A4  30BE               	movlw	low sprintf@fval
  2754  02A5  0084               	movwf	4
  2755  02A6  1383               	bcf	3,7	;select IRP bank1
  2756  02A7  0800               	movf	0,w
  2757  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2758  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2759  02AA  00DE               	movwf	??_sprintf
  2760  02AB  0A84               	incf	4,f
  2761  02AC  0800               	movf	0,w
  2762  02AD  00DF               	movwf	??_sprintf+1
  2763  02AE  0A84               	incf	4,f
  2764  02AF  0800               	movf	0,w
  2765  02B0  00E0               	movwf	??_sprintf+2
  2766  02B1  0A84               	incf	4,f
  2767  02B2  0800               	movf	0,w
  2768  02B3  00E1               	movwf	??_sprintf+3
  2769  02B4  300F               	movlw	15
  2770  02B5                     u4005:	
  2771  02B5  1003               	clrc
  2772  02B6  0CE1               	rrf	??_sprintf+3,f
  2773  02B7  0CE0               	rrf	??_sprintf+2,f
  2774  02B8  0CDF               	rrf	??_sprintf+1,f
  2775  02B9  0CDE               	rrf	??_sprintf,f
  2776  02BA  3EFF               	addlw	-1
  2777  02BB  1D03               	skipz
  2778  02BC  2AB5               	goto	u4005
  2779  02BD  30FF               	movlw	255
  2780  02BE  055E               	andwf	??_sprintf,w
  2781  02BF  00E2               	movwf	??_sprintf+4
  2782  02C0  3000               	movlw	0
  2783  02C1  055F               	andwf	??_sprintf+1,w
  2784  02C2  00E3               	movwf	??_sprintf+5
  2785  02C3  0862               	movf	??_sprintf+4,w
  2786  02C4  3E82               	addlw	130
  2787  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2788  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2789  02C7  00B9               	movwf	sprintf@exp^(0+128)
  2790  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2791  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2792  02CA  0863               	movf	??_sprintf+5,w
  2793  02CB  1803               	skipnc
  2794  02CC  3E01               	addlw	1
  2795  02CD  3EFF               	addlw	255
  2796  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  2797  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  2798  02D0  00BA               	movwf	(sprintf@exp+1)^(0+128)
  2799                           
  2800                           ;doprnt.c: 847: exp--;
  2801  02D1  30FF               	movlw	255
  2802  02D2  07B9               	addwf	sprintf@exp^(0+128),f
  2803  02D3  1803               	skipnc
  2804  02D4  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2805  02D5  30FF               	movlw	255
  2806  02D6  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2807                           
  2808                           ;doprnt.c: 848: exp *= 3;
  2809  02D7  3003               	movlw	3
  2810  02D8  00F0               	movwf	___wmul@multiplier
  2811  02D9  3000               	movlw	0
  2812  02DA  00F1               	movwf	___wmul@multiplier+1
  2813  02DB  083A               	movf	(sprintf@exp+1)^(0+128),w
  2814  02DC  01F3               	clrf	___wmul@multiplicand+1
  2815  02DD  07F3               	addwf	___wmul@multiplicand+1,f
  2816  02DE  0839               	movf	sprintf@exp^(0+128),w
  2817  02DF  01F2               	clrf	___wmul@multiplicand
  2818  02E0  07F2               	addwf	___wmul@multiplicand,f
  2819  02E1  160A  158A  223F  120A  118A  	fcall	___wmul
  2820  02E6  0871               	movf	?___wmul+1,w
  2821  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2822  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2823  02E9  01BA               	clrf	(sprintf@exp+1)^(0+128)
  2824  02EA  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2825  02EB  0870               	movf	?___wmul,w
  2826  02EC  01B9               	clrf	sprintf@exp^(0+128)
  2827  02ED  07B9               	addwf	sprintf@exp^(0+128),f
  2828                           
  2829                           ;doprnt.c: 849: exp /= 10;
  2830  02EE  300A               	movlw	10
  2831  02EF  00F7               	movwf	___awdiv@divisor
  2832  02F0  3000               	movlw	0
  2833  02F1  00F8               	movwf	___awdiv@divisor+1
  2834  02F2  083A               	movf	(sprintf@exp+1)^(0+128),w
  2835  02F3  01FA               	clrf	___awdiv@dividend+1
  2836  02F4  07FA               	addwf	___awdiv@dividend+1,f
  2837  02F5  0839               	movf	sprintf@exp^(0+128),w
  2838  02F6  01F9               	clrf	___awdiv@dividend
  2839  02F7  07F9               	addwf	___awdiv@dividend,f
  2840  02F8  160A  158A  23EC  120A  118A  	fcall	___awdiv
  2841  02FD  0878               	movf	?___awdiv+1,w
  2842  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2843  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2844  0300  01BA               	clrf	(sprintf@exp+1)^(0+128)
  2845  0301  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2846  0302  0877               	movf	?___awdiv,w
  2847  0303  01B9               	clrf	sprintf@exp^(0+128)
  2848  0304  07B9               	addwf	sprintf@exp^(0+128),f
  2849                           
  2850                           ;doprnt.c: 850: if(exp < 0)
  2851  0305  1FBA               	btfss	(sprintf@exp+1)^(0+128),7
  2852  0306  2B0D               	goto	l2968
  2853                           
  2854                           ;doprnt.c: 851: exp--;
  2855  0307  30FF               	movlw	255
  2856  0308  07B9               	addwf	sprintf@exp^(0+128),f
  2857  0309  1803               	skipnc
  2858  030A  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2859  030B  30FF               	movlw	255
  2860  030C  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2861  030D                     l2968:	
  2862                           
  2863                           ;doprnt.c: 855: integ = scale(-exp);
  2864  030D  0339               	decf	sprintf@exp^(0+128),w
  2865  030E  3AFF               	xorlw	255
  2866  030F  120A  158A  20C8  120A  118A  	fcall	_scale
  2867  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0316  0837               	movf	?_scale,w
  2870  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2871  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2872  0319  00B2               	movwf	sprintf@integ^(0+128)
  2873  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2874  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2875  031C  0838               	movf	?_scale+1,w
  2876  031D  1683               	bsf	3,5	;RP0=1, select bank1
  2877  031E  1303               	bcf	3,6	;RP1=0, select bank1
  2878  031F  00B3               	movwf	(sprintf@integ+1)^(0+128)
  2879  0320  1283               	bcf	3,5	;RP0=0, select bank0
  2880  0321  1303               	bcf	3,6	;RP1=0, select bank0
  2881  0322  0839               	movf	?_scale+2,w
  2882  0323  1683               	bsf	3,5	;RP0=1, select bank1
  2883  0324  1303               	bcf	3,6	;RP1=0, select bank1
  2884  0325  00B4               	movwf	(sprintf@integ+2)^(0+128)
  2885                           
  2886                           ;doprnt.c: 856: integ *= fval;
  2887  0326  083E               	movf	sprintf@fval^(0+128),w
  2888  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0329  00A7               	movwf	___ftmul@f1
  2891  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2892  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2893  032C  083F               	movf	(sprintf@fval+1)^(0+128),w
  2894  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2895  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2896  032F  00A8               	movwf	___ftmul@f1+1
  2897  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2898  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2899  0332  0840               	movf	(sprintf@fval+2)^(0+128),w
  2900  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2901  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0335  00A9               	movwf	___ftmul@f1+2
  2903  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2904  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2905  0338  0832               	movf	sprintf@integ^(0+128),w
  2906  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2907  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2908  033B  00AA               	movwf	___ftmul@f2
  2909  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2910  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2911  033E  0833               	movf	(sprintf@integ+1)^(0+128),w
  2912  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0341  00AB               	movwf	___ftmul@f2+1
  2915  0342  1683               	bsf	3,5	;RP0=1, select bank1
  2916  0343  1303               	bcf	3,6	;RP1=0, select bank1
  2917  0344  0834               	movf	(sprintf@integ+2)^(0+128),w
  2918  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0347  00AC               	movwf	___ftmul@f2+2
  2921  0348  160A  118A  2215  120A  118A  	fcall	___ftmul
  2922  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2923  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2924  034F  0827               	movf	?___ftmul,w
  2925  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2926  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2927  0352  00B2               	movwf	sprintf@integ^(0+128)
  2928  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2929  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2930  0355  0828               	movf	?___ftmul+1,w
  2931  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2932  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2933  0358  00B3               	movwf	(sprintf@integ+1)^(0+128)
  2934  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2935  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2936  035B  0829               	movf	?___ftmul+2,w
  2937  035C  1683               	bsf	3,5	;RP0=1, select bank1
  2938  035D  1303               	bcf	3,6	;RP1=0, select bank1
  2939  035E  00B4               	movwf	(sprintf@integ+2)^(0+128)
  2940                           
  2941                           ;doprnt.c: 857: if(integ < 1.0)
  2942  035F  0832               	movf	sprintf@integ^(0+128),w
  2943  0360  00F0               	movwf	___ftge@ff1
  2944  0361  0833               	movf	(sprintf@integ+1)^(0+128),w
  2945  0362  00F1               	movwf	___ftge@ff1+1
  2946  0363  0834               	movf	(sprintf@integ+2)^(0+128),w
  2947  0364  00F2               	movwf	___ftge@ff1+2
  2948  0365  3000               	movlw	0
  2949  0366  00F3               	movwf	___ftge@ff2
  2950  0367  3080               	movlw	128
  2951  0368  00F4               	movwf	___ftge@ff2+1
  2952  0369  303F               	movlw	63
  2953  036A  00F5               	movwf	___ftge@ff2+2
  2954  036B  160A  158A  238F  120A  118A  	fcall	___ftge
  2955  0370  1803               	btfsc	3,0
  2956  0371  2B7A               	goto	l2976
  2957                           
  2958                           ;doprnt.c: 858: exp--;
  2959  0372  30FF               	movlw	255
  2960  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2961  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2962  0375  07B9               	addwf	sprintf@exp^(0+128),f
  2963  0376  1803               	skipnc
  2964  0377  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2965  0378  30FF               	movlw	255
  2966  0379  2B96               	goto	L2
  2967  037A                     l2976:	
  2968                           
  2969                           ;doprnt.c: 859: else if(integ >= 10.0)
  2970  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2971  037B  1303               	bcf	3,6	;RP1=0, select bank1
  2972  037C  0832               	movf	sprintf@integ^(0+128),w
  2973  037D  00F0               	movwf	___ftge@ff1
  2974  037E  0833               	movf	(sprintf@integ+1)^(0+128),w
  2975  037F  00F1               	movwf	___ftge@ff1+1
  2976  0380  0834               	movf	(sprintf@integ+2)^(0+128),w
  2977  0381  00F2               	movwf	___ftge@ff1+2
  2978  0382  3000               	movlw	0
  2979  0383  00F3               	movwf	___ftge@ff2
  2980  0384  3020               	movlw	32
  2981  0385  00F4               	movwf	___ftge@ff2+1
  2982  0386  3041               	movlw	65
  2983  0387  00F5               	movwf	___ftge@ff2+2
  2984  0388  160A  158A  238F  120A  118A  	fcall	___ftge
  2985  038D  1C03               	btfss	3,0
  2986  038E  2B97               	goto	l2980
  2987                           
  2988                           ;doprnt.c: 860: exp++;
  2989  038F  3001               	movlw	1
  2990  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2991  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2992  0392  07B9               	addwf	sprintf@exp^(0+128),f
  2993  0393  1803               	skipnc
  2994  0394  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2995  0395  3000               	movlw	0
  2996  0396                     L2:	
  2997  0396  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2998  0397                     l2980:	
  2999                           
  3000                           ;doprnt.c: 861: }
  3001                           ;doprnt.c: 1121: if(prec <= 12)
  3002  0397  1683               	bsf	3,5	;RP0=1, select bank1
  3003  0398  1303               	bcf	3,6	;RP1=0, select bank1
  3004  0399  083D               	movf	(sprintf@prec+1)^(0+128),w
  3005  039A  3A80               	xorlw	128
  3006  039B  00FF               	movwf	127
  3007  039C  3080               	movlw	128
  3008  039D  027F               	subwf	127,w
  3009  039E  1D03               	skipz
  3010  039F  2BA2               	goto	u4045
  3011  03A0  300D               	movlw	13
  3012  03A1  023C               	subwf	sprintf@prec^(0+128),w
  3013  03A2                     u4045:	
  3014  03A2  1803               	skipnc
  3015  03A3  2BDD               	goto	l2984
  3016                           
  3017                           ;doprnt.c: 1122: fval += fround(prec);
  3018  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  3019  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  3020  03A6  083C               	movf	sprintf@prec^(0+128),w
  3021  03A7  120A  118A  2004  120A  118A  	fcall	_fround
  3022  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3023  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3024  03AE  0837               	movf	?_fround,w
  3025  03AF  00C7               	movwf	___ftadd@f1
  3026  03B0  0838               	movf	?_fround+1,w
  3027  03B1  00C8               	movwf	___ftadd@f1+1
  3028  03B2  0839               	movf	?_fround+2,w
  3029  03B3  00C9               	movwf	___ftadd@f1+2
  3030  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  3031  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  3032  03B6  083E               	movf	sprintf@fval^(0+128),w
  3033  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  3034  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  3035  03B9  00CA               	movwf	___ftadd@f2
  3036  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  3037  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  3038  03BC  083F               	movf	(sprintf@fval+1)^(0+128),w
  3039  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  3040  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  3041  03BF  00CB               	movwf	___ftadd@f2+1
  3042  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  3043  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  3044  03C2  0840               	movf	(sprintf@fval+2)^(0+128),w
  3045  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3046  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3047  03C5  00CC               	movwf	___ftadd@f2+2
  3048  03C6  160A  118A  22E8  120A  118A  	fcall	___ftadd
  3049  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3050  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3051  03CD  0847               	movf	?___ftadd,w
  3052  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  3053  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  3054  03D0  00BE               	movwf	sprintf@fval^(0+128)
  3055  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3056  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3057  03D3  0848               	movf	?___ftadd+1,w
  3058  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3059  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3060  03D6  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3061  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3062  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3063  03D9  0849               	movf	?___ftadd+2,w
  3064  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  3065  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  3066  03DC  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3067  03DD                     l2984:	
  3068                           
  3069                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3070  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  3071  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  3072  03DF  083A               	movf	(sprintf@exp+1)^(0+128),w
  3073  03E0  3A80               	xorlw	128
  3074  03E1  00FF               	movwf	127
  3075  03E2  3080               	movlw	128
  3076  03E3  027F               	subwf	127,w
  3077  03E4  1D03               	skipz
  3078  03E5  2BE8               	goto	u4055
  3079  03E6  300A               	movlw	10
  3080  03E7  0239               	subwf	sprintf@exp^(0+128),w
  3081  03E8                     u4055:	
  3082  03E8  1803               	skipnc
  3083  03E9  2C1B               	goto	l2992
  3084  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  3085  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  3086  03EC  0840               	movf	(sprintf@fval+2)^(0+128),w
  3087  03ED  043F               	iorwf	(sprintf@fval+1)^(0+128),w
  3088  03EE  043E               	iorwf	sprintf@fval^(0+128),w
  3089  03EF  1903               	skipnz
  3090  03F0  2C7C               	goto	l3008
  3091  03F1  083E               	movf	sprintf@fval^(0+128),w
  3092  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3093  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3094  03F4  00C0               	movwf	___fttol@f1
  3095  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  3096  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  3097  03F7  083F               	movf	(sprintf@fval+1)^(0+128),w
  3098  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3099  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3100  03FA  00C1               	movwf	___fttol@f1+1
  3101  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3102  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  3103  03FD  0840               	movf	(sprintf@fval+2)^(0+128),w
  3104  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3105  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3106  0400  00C2               	movwf	___fttol@f1+2
  3107  0401  160A  158A  2588  120A  118A  	fcall	___fttol
  3108  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0407  1303               	bcf	3,6	;RP1=0, select bank0
  3110  0408  0843               	movf	?___fttol+3,w
  3111  0409  0442               	iorwf	?___fttol+2,w
  3112  040A  0441               	iorwf	?___fttol+1,w
  3113  040B  0440               	iorwf	?___fttol,w
  3114  040C  1D03               	skipz
  3115  040D  2C7C               	goto	l3008
  3116  040E  1683               	bsf	3,5	;RP0=1, select bank1
  3117  040F  1303               	bcf	3,6	;RP1=0, select bank1
  3118  0410  083A               	movf	(sprintf@exp+1)^(0+128),w
  3119  0411  3A80               	xorlw	128
  3120  0412  00FF               	movwf	127
  3121  0413  3080               	movlw	128
  3122  0414  027F               	subwf	127,w
  3123  0415  1D03               	skipz
  3124  0416  2C19               	goto	u4085
  3125  0417  3002               	movlw	2
  3126  0418  0239               	subwf	sprintf@exp^(0+128),w
  3127  0419                     u4085:	
  3128  0419  1C03               	skipc
  3129  041A  2C7C               	goto	l3008
  3130  041B                     l2992:	
  3131                           
  3132                           ;doprnt.c: 1129: if(integ < 4.294967296){
  3133  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3134  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3135  041D  0832               	movf	sprintf@integ^(0+128),w
  3136  041E  00F0               	movwf	___ftge@ff1
  3137  041F  0833               	movf	(sprintf@integ+1)^(0+128),w
  3138  0420  00F1               	movwf	___ftge@ff1+1
  3139  0421  0834               	movf	(sprintf@integ+2)^(0+128),w
  3140  0422  00F2               	movwf	___ftge@ff1+2
  3141  0423  3070               	movlw	112
  3142  0424  00F3               	movwf	___ftge@ff2
  3143  0425  3089               	movlw	137
  3144  0426  00F4               	movwf	___ftge@ff2+1
  3145  0427  3040               	movlw	64
  3146  0428  00F5               	movwf	___ftge@ff2+2
  3147  0429  160A  158A  238F  120A  118A  	fcall	___ftge
  3148  042E  1803               	btfsc	3,0
  3149  042F  2C32               	goto	l2996
  3150                           
  3151                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3152  0430  30F7               	movlw	247
  3153  0431  2C33               	goto	L3
  3154  0432                     l2996:	
  3155                           ;doprnt.c: 1131: }else{
  3156                           
  3157                           
  3158                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3159  0432  30F8               	movlw	248
  3160  0433                     L3:	
  3161  0433  1683               	bsf	3,5	;RP0=1, select bank1
  3162  0434  1303               	bcf	3,6	;RP1=0, select bank1
  3163  0435  07B9               	addwf	sprintf@exp^(0+128),f
  3164  0436  1803               	skipnc
  3165  0437  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  3166  0438  30FF               	movlw	255
  3167  0439  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  3168                           
  3169                           ;doprnt.c: 1133: }
  3170                           ;doprnt.c: 1134: integ = scale(exp);
  3171  043A  0839               	movf	sprintf@exp^(0+128),w
  3172  043B  120A  158A  20C8  120A  118A  	fcall	_scale
  3173  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0442  0837               	movf	?_scale,w
  3176  0443  1683               	bsf	3,5	;RP0=1, select bank1
  3177  0444  1303               	bcf	3,6	;RP1=0, select bank1
  3178  0445  00B2               	movwf	sprintf@integ^(0+128)
  3179  0446  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0447  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0448  0838               	movf	?_scale+1,w
  3182  0449  1683               	bsf	3,5	;RP0=1, select bank1
  3183  044A  1303               	bcf	3,6	;RP1=0, select bank1
  3184  044B  00B3               	movwf	(sprintf@integ+1)^(0+128)
  3185  044C  1283               	bcf	3,5	;RP0=0, select bank0
  3186  044D  1303               	bcf	3,6	;RP1=0, select bank0
  3187  044E  0839               	movf	?_scale+2,w
  3188  044F  1683               	bsf	3,5	;RP0=1, select bank1
  3189  0450  1303               	bcf	3,6	;RP1=0, select bank1
  3190  0451  00B4               	movwf	(sprintf@integ+2)^(0+128)
  3191                           
  3192                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  3193  0452  083E               	movf	sprintf@fval^(0+128),w
  3194  0453  00F0               	movwf	__tdiv_to_l_@f1
  3195  0454  083F               	movf	(sprintf@fval+1)^(0+128),w
  3196  0455  00F1               	movwf	__tdiv_to_l_@f1+1
  3197  0456  0840               	movf	(sprintf@fval+2)^(0+128),w
  3198  0457  00F2               	movwf	__tdiv_to_l_@f1+2
  3199  0458  0832               	movf	sprintf@integ^(0+128),w
  3200  0459  00F3               	movwf	__tdiv_to_l_@f2
  3201  045A  0833               	movf	(sprintf@integ+1)^(0+128),w
  3202  045B  00F4               	movwf	__tdiv_to_l_@f2+1
  3203  045C  0834               	movf	(sprintf@integ+2)^(0+128),w
  3204  045D  00F5               	movwf	__tdiv_to_l_@f2+2
  3205  045E  120A  158A  2005  120A  118A  	fcall	__tdiv_to_l_
  3206  0463  0873               	movf	?__tdiv_to_l_+3,w
  3207  0464  1683               	bsf	3,5	;RP0=1, select bank1
  3208  0465  1303               	bcf	3,6	;RP1=0, select bank1
  3209  0466  00A6               	movwf	(_sprintf$144+3)^(0+128)
  3210  0467  0872               	movf	?__tdiv_to_l_+2,w
  3211  0468  00A5               	movwf	(_sprintf$144+2)^(0+128)
  3212  0469  0871               	movf	?__tdiv_to_l_+1,w
  3213  046A  00A4               	movwf	(_sprintf$144+1)^(0+128)
  3214  046B  0870               	movf	?__tdiv_to_l_,w
  3215  046C  00A3               	movwf	_sprintf$144^(0+128)
  3216  046D  0826               	movf	(_sprintf$144+3)^(0+128),w
  3217  046E  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3218  046F  0825               	movf	(_sprintf$144+2)^(0+128),w
  3219  0470  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3220  0471  0824               	movf	(_sprintf$144+1)^(0+128),w
  3221  0472  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3222  0473  0823               	movf	_sprintf$144^(0+128),w
  3223  0474  00B5               	movwf	sprintf@_val^(0+128)
  3224                           
  3225                           ;doprnt.c: 1138: fval = 0.0;
  3226  0475  3000               	movlw	0
  3227  0476  00BE               	movwf	sprintf@fval^(0+128)
  3228  0477  3000               	movlw	0
  3229  0478  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3230  0479  3000               	movlw	0
  3231  047A  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3232                           
  3233                           ;doprnt.c: 1139: } else {
  3234  047B  2CEB               	goto	l3012
  3235  047C                     l3008:	
  3236                           
  3237                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  3238  047C  1683               	bsf	3,5	;RP0=1, select bank1
  3239  047D  1303               	bcf	3,6	;RP1=0, select bank1
  3240  047E  083E               	movf	sprintf@fval^(0+128),w
  3241  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0480  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0481  00C0               	movwf	___fttol@f1
  3244  0482  1683               	bsf	3,5	;RP0=1, select bank1
  3245  0483  1303               	bcf	3,6	;RP1=0, select bank1
  3246  0484  083F               	movf	(sprintf@fval+1)^(0+128),w
  3247  0485  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0486  1303               	bcf	3,6	;RP1=0, select bank0
  3249  0487  00C1               	movwf	___fttol@f1+1
  3250  0488  1683               	bsf	3,5	;RP0=1, select bank1
  3251  0489  1303               	bcf	3,6	;RP1=0, select bank1
  3252  048A  0840               	movf	(sprintf@fval+2)^(0+128),w
  3253  048B  1283               	bcf	3,5	;RP0=0, select bank0
  3254  048C  1303               	bcf	3,6	;RP1=0, select bank0
  3255  048D  00C2               	movwf	___fttol@f1+2
  3256  048E  160A  158A  2588  120A  118A  	fcall	___fttol
  3257  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3259  0495  0843               	movf	?___fttol+3,w
  3260  0496  1683               	bsf	3,5	;RP0=1, select bank1
  3261  0497  1303               	bcf	3,6	;RP1=0, select bank1
  3262  0498  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3263  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3264  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3265  049B  0842               	movf	?___fttol+2,w
  3266  049C  1683               	bsf	3,5	;RP0=1, select bank1
  3267  049D  1303               	bcf	3,6	;RP1=0, select bank1
  3268  049E  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3269  049F  1283               	bcf	3,5	;RP0=0, select bank0
  3270  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  3271  04A1  0841               	movf	?___fttol+1,w
  3272  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  3273  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  3274  04A4  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3275  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  3276  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  3277  04A7  0840               	movf	?___fttol,w
  3278  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  3279  04A9  1303               	bcf	3,6	;RP1=0, select bank1
  3280  04AA  00B5               	movwf	sprintf@_val^(0+128)
  3281                           
  3282                           ;doprnt.c: 1141: fval -= (double)_val._val;
  3283  04AB  0838               	movf	(sprintf@_val+3)^(0+128),w
  3284  04AC  00FB               	movwf	___lltoft@c+3
  3285  04AD  0837               	movf	(sprintf@_val+2)^(0+128),w
  3286  04AE  00FA               	movwf	___lltoft@c+2
  3287  04AF  0836               	movf	(sprintf@_val+1)^(0+128),w
  3288  04B0  00F9               	movwf	___lltoft@c+1
  3289  04B1  0835               	movf	sprintf@_val^(0+128),w
  3290  04B2  00F8               	movwf	___lltoft@c
  3291  04B3  160A  158A  2262  120A  118A  	fcall	___lltoft
  3292  04B8  0878               	movf	?___lltoft,w
  3293  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3294  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3295  04BB  00D4               	movwf	___ftsub@f2
  3296  04BC  0879               	movf	?___lltoft+1,w
  3297  04BD  00D5               	movwf	___ftsub@f2+1
  3298  04BE  087A               	movf	?___lltoft+2,w
  3299  04BF  00D6               	movwf	___ftsub@f2+2
  3300  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  3301  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  3302  04C2  083E               	movf	sprintf@fval^(0+128),w
  3303  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  3304  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  3305  04C5  00D7               	movwf	___ftsub@f1
  3306  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  3307  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  3308  04C8  083F               	movf	(sprintf@fval+1)^(0+128),w
  3309  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  3310  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  3311  04CB  00D8               	movwf	___ftsub@f1+1
  3312  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  3313  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  3314  04CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  3315  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  3316  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  3317  04D1  00D9               	movwf	___ftsub@f1+2
  3318  04D2  160A  158A  21BD  120A  118A  	fcall	___ftsub
  3319  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3320  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  3321  04D9  0854               	movf	?___ftsub,w
  3322  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  3323  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  3324  04DC  00BE               	movwf	sprintf@fval^(0+128)
  3325  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  3326  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  3327  04DF  0855               	movf	?___ftsub+1,w
  3328  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  3329  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  3330  04E2  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3331  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3332  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3333  04E5  0856               	movf	?___ftsub+2,w
  3334  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  3335  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  3336  04E8  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3337                           
  3338                           ;doprnt.c: 1142: exp = 0;
  3339  04E9  01B9               	clrf	sprintf@exp^(0+128)
  3340  04EA  01BA               	clrf	(sprintf@exp+1)^(0+128)
  3341  04EB                     l3012:	
  3342                           
  3343                           ;doprnt.c: 1143: }
  3344                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3345  04EB  01C1               	clrf	sprintf@c^(0+128)
  3346  04EC  0AC1               	incf	sprintf@c^(0+128),f
  3347  04ED  0841               	movf	sprintf@c^(0+128),w
  3348  04EE  3A0A               	xorlw	10
  3349  04EF  1903               	btfsc	3,2
  3350  04F0  2D41               	goto	l3026
  3351  04F1                     l3018:	
  3352                           
  3353                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  3354  04F1  0841               	movf	sprintf@c^(0+128),w
  3355  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3356  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  3357  04F4  00DE               	movwf	??_sprintf
  3358  04F5  3001               	movlw	1
  3359  04F6                     u4115:	
  3360  04F6  1003               	clrc
  3361  04F7  0DDE               	rlf	??_sprintf,f
  3362  04F8  3EFF               	addlw	-1
  3363  04F9  1D03               	skipz
  3364  04FA  2CF6               	goto	u4115
  3365  04FB  1003               	clrc
  3366  04FC  0D5E               	rlf	??_sprintf,w
  3367  04FD  3E01               	addlw	low (_dpowers-__stringbase)
  3368  04FE  0084               	movwf	4
  3369  04FF  160A  118A  200A  120A  118A  	fcall	stringdir
  3370  0504  00DF               	movwf	??_sprintf+1
  3371  0505  160A  118A  200A  120A  118A  	fcall	stringdir
  3372  050A  00E0               	movwf	??_sprintf+2
  3373  050B  160A  118A  200A  120A  118A  	fcall	stringdir
  3374  0510  00E1               	movwf	??_sprintf+3
  3375  0511  160A  118A  200A  120A  118A  	fcall	stringdir
  3376  0516  00E2               	movwf	??_sprintf+4
  3377  0517  0862               	movf	??_sprintf+4,w
  3378  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3379  0519  1303               	bcf	3,6	;RP1=0, select bank1
  3380  051A  0238               	subwf	(sprintf@_val+3)^(0+128),w
  3381  051B  1D03               	skipz
  3382  051C  2D33               	goto	u4125
  3383  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3384  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3385  051F  0861               	movf	??_sprintf+3,w
  3386  0520  1683               	bsf	3,5	;RP0=1, select bank1
  3387  0521  1303               	bcf	3,6	;RP1=0, select bank1
  3388  0522  0237               	subwf	(sprintf@_val+2)^(0+128),w
  3389  0523  1D03               	skipz
  3390  0524  2D33               	goto	u4125
  3391  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3392  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3393  0527  0860               	movf	??_sprintf+2,w
  3394  0528  1683               	bsf	3,5	;RP0=1, select bank1
  3395  0529  1303               	bcf	3,6	;RP1=0, select bank1
  3396  052A  0236               	subwf	(sprintf@_val+1)^(0+128),w
  3397  052B  1D03               	skipz
  3398  052C  2D33               	goto	u4125
  3399  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3400  052E  1303               	bcf	3,6	;RP1=0, select bank0
  3401  052F  085F               	movf	??_sprintf+1,w
  3402  0530  1683               	bsf	3,5	;RP0=1, select bank1
  3403  0531  1303               	bcf	3,6	;RP1=0, select bank1
  3404  0532  0235               	subwf	sprintf@_val^(0+128),w
  3405  0533                     u4125:	
  3406  0533  1C03               	btfss	3,0
  3407  0534  2D41               	goto	l3026
  3408                           
  3409                           ;doprnt.c: 1147: break;
  3410  0535  3001               	movlw	1
  3411  0536  1283               	bcf	3,5	;RP0=0, select bank0
  3412  0537  1303               	bcf	3,6	;RP1=0, select bank0
  3413  0538  00DE               	movwf	??_sprintf
  3414  0539  085E               	movf	??_sprintf,w
  3415  053A  1683               	bsf	3,5	;RP0=1, select bank1
  3416  053B  1303               	bcf	3,6	;RP1=0, select bank1
  3417  053C  07C1               	addwf	sprintf@c^(0+128),f
  3418  053D  0841               	movf	sprintf@c^(0+128),w
  3419  053E  3A0A               	xorlw	10
  3420  053F  1D03               	skipz
  3421  0540  2CF1               	goto	l3018
  3422  0541                     l3026:	
  3423                           
  3424                           ;doprnt.c: 1184: {
  3425                           ;doprnt.c: 1197: if(flag & 0x03)
  3426  0541  3003               	movlw	3
  3427  0542  0530               	andwf	sprintf@flag^(0+128),w
  3428  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3429  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3430  0545  00DE               	movwf	??_sprintf
  3431  0546  3000               	movlw	0
  3432  0547  1683               	bsf	3,5	;RP0=1, select bank1
  3433  0548  1303               	bcf	3,6	;RP1=0, select bank1
  3434  0549  0531               	andwf	(sprintf@flag+1)^(0+128),w
  3435  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3436  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3437  054C  00DF               	movwf	??_sprintf+1
  3438  054D  085F               	movf	??_sprintf+1,w
  3439  054E  045E               	iorwf	??_sprintf,w
  3440  054F  1903               	skipnz
  3441  0550  2D62               	goto	l150
  3442                           
  3443                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  3444  0551  302D               	movlw	45
  3445  0552                     L4:	
  3446  0552  00DE               	movwf	??_sprintf
  3447  0553  1683               	bsf	3,5	;RP0=1, select bank1
  3448  0554  1303               	bcf	3,6	;RP1=0, select bank1
  3449  0555  083B               	movf	sprintf@sp^(0+128),w
  3450  0556  0084               	movwf	4
  3451  0557  1283               	bcf	3,5	;RP0=0, select bank0
  3452  0558  1303               	bcf	3,6	;RP1=0, select bank0
  3453  0559  085E               	movf	??_sprintf,w
  3454  055A  1783               	bsf	3,7	;select IRP bank2
  3455  055B  0080               	movwf	0
  3456  055C  3001               	movlw	1
  3457  055D  00DE               	movwf	??_sprintf
  3458  055E  085E               	movf	??_sprintf,w
  3459  055F  1683               	bsf	3,5	;RP0=1, select bank1
  3460  0560  1303               	bcf	3,6	;RP1=0, select bank1
  3461  0561  07BB               	addwf	sprintf@sp^(0+128),f
  3462  0562                     l150:	
  3463  0562  30FF               	movlw	-1
  3464  0563  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0564  00DE               	movwf	??_sprintf
  3466  0565  085E               	movf	??_sprintf,w
  3467  0566  1683               	bsf	3,5	;RP0=1, select bank1
  3468  0567  1303               	bcf	3,6	;RP1=0, select bank1
  3469  0568  07C1               	addwf	sprintf@c^(0+128),f
  3470  0569  0841               	movf	sprintf@c^(0+128),w
  3471  056A  3AFF               	xorlw	-1
  3472  056B  1903               	btfsc	3,2
  3473  056C  2DE9               	goto	l3044
  3474                           
  3475                           ;doprnt.c: 1209: {
  3476                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  3477                           
  3478                           ;doprnt.c: 1204: }
  3479                           ;doprnt.c: 1205: while(c--) {
  3480  056D  0841               	movf	sprintf@c^(0+128),w
  3481  056E  1283               	bcf	3,5	;RP0=0, select bank0
  3482  056F  1303               	bcf	3,6	;RP1=0, select bank0
  3483  0570  00DE               	movwf	??_sprintf
  3484  0571  3001               	movlw	1
  3485  0572                     u4155:	
  3486  0572  1003               	clrc
  3487  0573  0DDE               	rlf	??_sprintf,f
  3488  0574  3EFF               	addlw	-1
  3489  0575  1D03               	skipz
  3490  0576  2D72               	goto	u4155
  3491  0577  1003               	clrc
  3492  0578  0D5E               	rlf	??_sprintf,w
  3493  0579  3E01               	addlw	low (_dpowers-__stringbase)
  3494  057A  0084               	movwf	4
  3495  057B  160A  118A  200A  120A  118A  	fcall	stringdir
  3496  0580  00F0               	movwf	___lldiv@divisor
  3497  0581  160A  118A  200A  120A  118A  	fcall	stringdir
  3498  0586  00F1               	movwf	___lldiv@divisor+1
  3499  0587  160A  118A  200A  120A  118A  	fcall	stringdir
  3500  058C  00F2               	movwf	___lldiv@divisor+2
  3501  058D  160A  118A  200A  120A  118A  	fcall	stringdir
  3502  0592  00F3               	movwf	___lldiv@divisor+3
  3503  0593  1683               	bsf	3,5	;RP0=1, select bank1
  3504  0594  1303               	bcf	3,6	;RP1=0, select bank1
  3505  0595  0838               	movf	(sprintf@_val+3)^(0+128),w
  3506  0596  00F7               	movwf	___lldiv@dividend+3
  3507  0597  0837               	movf	(sprintf@_val+2)^(0+128),w
  3508  0598  00F6               	movwf	___lldiv@dividend+2
  3509  0599  0836               	movf	(sprintf@_val+1)^(0+128),w
  3510  059A  00F5               	movwf	___lldiv@dividend+1
  3511  059B  0835               	movf	sprintf@_val^(0+128),w
  3512  059C  00F4               	movwf	___lldiv@dividend
  3513  059D  160A  158A  2449  120A  118A  	fcall	___lldiv
  3514  05A2  0873               	movf	?___lldiv+3,w
  3515  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  3516  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  3517  05A5  00AB               	movwf	(sprintf@vd+3)^(0+128)
  3518  05A6  0872               	movf	?___lldiv+2,w
  3519  05A7  00AA               	movwf	(sprintf@vd+2)^(0+128)
  3520  05A8  0871               	movf	?___lldiv+1,w
  3521  05A9  00A9               	movwf	(sprintf@vd+1)^(0+128)
  3522  05AA  0870               	movf	?___lldiv,w
  3523  05AB  00A8               	movwf	sprintf@vd^(0+128)
  3524                           
  3525                           ;doprnt.c: 1211: vd %= 10;
  3526  05AC  3000               	movlw	0
  3527  05AD  00F3               	movwf	___llmod@divisor+3
  3528  05AE  3000               	movlw	0
  3529  05AF  00F2               	movwf	___llmod@divisor+2
  3530  05B0  3000               	movlw	0
  3531  05B1  00F1               	movwf	___llmod@divisor+1
  3532  05B2  300A               	movlw	10
  3533  05B3  00F0               	movwf	___llmod@divisor
  3534  05B4  082B               	movf	(sprintf@vd+3)^(0+128),w
  3535  05B5  00F7               	movwf	___llmod@dividend+3
  3536  05B6  082A               	movf	(sprintf@vd+2)^(0+128),w
  3537  05B7  00F6               	movwf	___llmod@dividend+2
  3538  05B8  0829               	movf	(sprintf@vd+1)^(0+128),w
  3539  05B9  00F5               	movwf	___llmod@dividend+1
  3540  05BA  0828               	movf	sprintf@vd^(0+128),w
  3541  05BB  00F4               	movwf	___llmod@dividend
  3542  05BC  160A  158A  2343  120A  118A  	fcall	___llmod
  3543  05C1  0873               	movf	?___llmod+3,w
  3544  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  3545  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  3546  05C4  00AB               	movwf	(sprintf@vd+3)^(0+128)
  3547  05C5  0872               	movf	?___llmod+2,w
  3548  05C6  00AA               	movwf	(sprintf@vd+2)^(0+128)
  3549  05C7  0871               	movf	?___llmod+1,w
  3550  05C8  00A9               	movwf	(sprintf@vd+1)^(0+128)
  3551  05C9  0870               	movf	?___llmod,w
  3552  05CA  00A8               	movwf	sprintf@vd^(0+128)
  3553                           
  3554                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  3555  05CB  0828               	movf	sprintf@vd^(0+128),w
  3556  05CC  3E30               	addlw	48
  3557  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3558  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3559  05CF  2D52               	goto	L4
  3560  05D0                     l3038:	
  3561                           ;doprnt.c: 1213: }
  3562                           ;doprnt.c: 1215: }
  3563                           ;doprnt.c: 1216: while(exp > 0) {
  3564                           
  3565                           
  3566                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  3567  05D0  3030               	movlw	48
  3568  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3569  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3570  05D3  00DE               	movwf	??_sprintf
  3571  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3572  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3573  05D6  083B               	movf	sprintf@sp^(0+128),w
  3574  05D7  0084               	movwf	4
  3575  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3576  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  3577  05DA  085E               	movf	??_sprintf,w
  3578  05DB  1783               	bsf	3,7	;select IRP bank2
  3579  05DC  0080               	movwf	0
  3580  05DD  3001               	movlw	1
  3581  05DE  00DE               	movwf	??_sprintf
  3582  05DF  085E               	movf	??_sprintf,w
  3583  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3584  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3585  05E2  07BB               	addwf	sprintf@sp^(0+128),f
  3586                           
  3587                           ;doprnt.c: 1218: exp--;
  3588  05E3  30FF               	movlw	255
  3589  05E4  07B9               	addwf	sprintf@exp^(0+128),f
  3590  05E5  1803               	skipnc
  3591  05E6  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  3592  05E7  30FF               	movlw	255
  3593  05E8  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  3594  05E9                     l3044:	
  3595  05E9  083A               	movf	(sprintf@exp+1)^(0+128),w
  3596  05EA  3A80               	xorlw	128
  3597  05EB  00FF               	movwf	127
  3598  05EC  3080               	movlw	128
  3599  05ED  027F               	subwf	127,w
  3600  05EE  1D03               	skipz
  3601  05EF  2DF2               	goto	u4175
  3602  05F0  3001               	movlw	1
  3603  05F1  0239               	subwf	sprintf@exp^(0+128),w
  3604  05F2                     u4175:	
  3605  05F2  1803               	skipnc
  3606  05F3  2DD0               	goto	l3038
  3607                           
  3608                           ;doprnt.c: 1219: }
  3609                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3610  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3611  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3612  05F6  083D               	movf	(sprintf@prec+1)^(0+128),w
  3613  05F7  3A80               	xorlw	128
  3614  05F8  00FF               	movwf	127
  3615  05F9  3080               	movlw	128
  3616  05FA  027F               	subwf	127,w
  3617  05FB  1D03               	skipz
  3618  05FC  2DFF               	goto	u4185
  3619  05FD  3009               	movlw	9
  3620  05FE  023C               	subwf	sprintf@prec^(0+128),w
  3621  05FF                     u4185:	
  3622  05FF  1C03               	skipc
  3623  0600  2E03               	goto	l3050
  3624                           
  3625                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3626  0601  3008               	movlw	8
  3627  0602  2E06               	goto	L5
  3628  0603                     l3050:	
  3629                           
  3630                           ;doprnt.c: 1222: else
  3631                           ;doprnt.c: 1223: c = prec;
  3632  0603  1683               	bsf	3,5	;RP0=1, select bank1
  3633  0604  1303               	bcf	3,6	;RP1=0, select bank1
  3634  0605  083C               	movf	sprintf@prec^(0+128),w
  3635  0606                     L5:	
  3636  0606  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0607  1303               	bcf	3,6	;RP1=0, select bank0
  3638  0608  00DE               	movwf	??_sprintf
  3639  0609  085E               	movf	??_sprintf,w
  3640  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3641  060B  1303               	bcf	3,6	;RP1=0, select bank1
  3642  060C  00C1               	movwf	sprintf@c^(0+128)
  3643                           
  3644                           ;doprnt.c: 1224: prec -= c;
  3645  060D  0841               	movf	sprintf@c^(0+128),w
  3646  060E  1283               	bcf	3,5	;RP0=0, select bank0
  3647  060F  1303               	bcf	3,6	;RP1=0, select bank0
  3648  0610  00DE               	movwf	??_sprintf
  3649  0611  01DF               	clrf	??_sprintf+1
  3650  0612  1BDE               	btfsc	??_sprintf,7
  3651  0613  03DF               	decf	??_sprintf+1,f
  3652  0614  085E               	movf	??_sprintf,w
  3653  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3654  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3655  0617  02BC               	subwf	sprintf@prec^(0+128),f
  3656  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3657  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3658  061A  085F               	movf	??_sprintf+1,w
  3659  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3660  061C  1303               	bcf	3,6	;RP1=0, select bank1
  3661  061D  1C03               	skipc
  3662  061E  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3663  061F  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3664                           
  3665                           ;doprnt.c: 1228: if(c)
  3666  0620  0841               	movf	sprintf@c^(0+128),w
  3667  0621  1903               	btfsc	3,2
  3668  0622  2E36               	goto	l3056
  3669                           
  3670                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  3671  0623  302E               	movlw	46
  3672  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3674  0626  00DE               	movwf	??_sprintf
  3675  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3676  0628  1303               	bcf	3,6	;RP1=0, select bank1
  3677  0629  083B               	movf	sprintf@sp^(0+128),w
  3678  062A  0084               	movwf	4
  3679  062B  1283               	bcf	3,5	;RP0=0, select bank0
  3680  062C  1303               	bcf	3,6	;RP1=0, select bank0
  3681  062D  085E               	movf	??_sprintf,w
  3682  062E  1783               	bsf	3,7	;select IRP bank2
  3683  062F  0080               	movwf	0
  3684  0630  3001               	movlw	1
  3685  0631  00DE               	movwf	??_sprintf
  3686  0632  085E               	movf	??_sprintf,w
  3687  0633  1683               	bsf	3,5	;RP0=1, select bank1
  3688  0634  1303               	bcf	3,6	;RP1=0, select bank1
  3689  0635  07BB               	addwf	sprintf@sp^(0+128),f
  3690  0636                     l3056:	
  3691                           
  3692                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3693  0636  0841               	movf	sprintf@c^(0+128),w
  3694  0637  120A  158A  20C8  120A  118A  	fcall	_scale
  3695  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3696  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3697  063E  0837               	movf	?_scale,w
  3698  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3699  0640  1303               	bcf	3,6	;RP1=0, select bank1
  3700  0641  00A0               	movwf	_sprintf$666^(0+128)
  3701  0642  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0643  1303               	bcf	3,6	;RP1=0, select bank0
  3703  0644  0838               	movf	?_scale+1,w
  3704  0645  1683               	bsf	3,5	;RP0=1, select bank1
  3705  0646  1303               	bcf	3,6	;RP1=0, select bank1
  3706  0647  00A1               	movwf	(_sprintf$666+1)^(0+128)
  3707  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3709  064A  0839               	movf	?_scale+2,w
  3710  064B  1683               	bsf	3,5	;RP0=1, select bank1
  3711  064C  1303               	bcf	3,6	;RP1=0, select bank1
  3712  064D  00A2               	movwf	(_sprintf$666+2)^(0+128)
  3713                           
  3714                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3715  064E  0820               	movf	_sprintf$666^(0+128),w
  3716  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0651  00AA               	movwf	___ftmul@f2
  3719  0652  1683               	bsf	3,5	;RP0=1, select bank1
  3720  0653  1303               	bcf	3,6	;RP1=0, select bank1
  3721  0654  0821               	movf	(_sprintf$666+1)^(0+128),w
  3722  0655  1283               	bcf	3,5	;RP0=0, select bank0
  3723  0656  1303               	bcf	3,6	;RP1=0, select bank0
  3724  0657  00AB               	movwf	___ftmul@f2+1
  3725  0658  1683               	bsf	3,5	;RP0=1, select bank1
  3726  0659  1303               	bcf	3,6	;RP1=0, select bank1
  3727  065A  0822               	movf	(_sprintf$666+2)^(0+128),w
  3728  065B  1283               	bcf	3,5	;RP0=0, select bank0
  3729  065C  1303               	bcf	3,6	;RP1=0, select bank0
  3730  065D  00AC               	movwf	___ftmul@f2+2
  3731  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3732  065F  1303               	bcf	3,6	;RP1=0, select bank1
  3733  0660  083E               	movf	sprintf@fval^(0+128),w
  3734  0661  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0662  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0663  00A7               	movwf	___ftmul@f1
  3737  0664  1683               	bsf	3,5	;RP0=1, select bank1
  3738  0665  1303               	bcf	3,6	;RP1=0, select bank1
  3739  0666  083F               	movf	(sprintf@fval+1)^(0+128),w
  3740  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3741  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3742  0669  00A8               	movwf	___ftmul@f1+1
  3743  066A  1683               	bsf	3,5	;RP0=1, select bank1
  3744  066B  1303               	bcf	3,6	;RP1=0, select bank1
  3745  066C  0840               	movf	(sprintf@fval+2)^(0+128),w
  3746  066D  1283               	bcf	3,5	;RP0=0, select bank0
  3747  066E  1303               	bcf	3,6	;RP1=0, select bank0
  3748  066F  00A9               	movwf	___ftmul@f1+2
  3749  0670  160A  118A  2215  120A  118A  	fcall	___ftmul
  3750  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3751  0676  1303               	bcf	3,6	;RP1=0, select bank0
  3752  0677  0827               	movf	?___ftmul,w
  3753  0678  00C0               	movwf	___fttol@f1
  3754  0679  0828               	movf	?___ftmul+1,w
  3755  067A  00C1               	movwf	___fttol@f1+1
  3756  067B  0829               	movf	?___ftmul+2,w
  3757  067C  00C2               	movwf	___fttol@f1+2
  3758  067D  160A  158A  2588  120A  118A  	fcall	___fttol
  3759  0682  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0683  1303               	bcf	3,6	;RP1=0, select bank0
  3761  0684  0843               	movf	?___fttol+3,w
  3762  0685  1683               	bsf	3,5	;RP0=1, select bank1
  3763  0686  1303               	bcf	3,6	;RP1=0, select bank1
  3764  0687  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3765  0688  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0689  1303               	bcf	3,6	;RP1=0, select bank0
  3767  068A  0842               	movf	?___fttol+2,w
  3768  068B  1683               	bsf	3,5	;RP0=1, select bank1
  3769  068C  1303               	bcf	3,6	;RP1=0, select bank1
  3770  068D  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3771  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3772  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3773  0690  0841               	movf	?___fttol+1,w
  3774  0691  1683               	bsf	3,5	;RP0=1, select bank1
  3775  0692  1303               	bcf	3,6	;RP1=0, select bank1
  3776  0693  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3777  0694  1283               	bcf	3,5	;RP0=0, select bank0
  3778  0695  1303               	bcf	3,6	;RP1=0, select bank0
  3779  0696  0840               	movf	?___fttol,w
  3780  0697  1683               	bsf	3,5	;RP0=1, select bank1
  3781  0698  1303               	bcf	3,6	;RP1=0, select bank1
  3782  0699                     L6:	
  3783  0699  00B5               	movwf	sprintf@_val^(0+128)
  3784  069A  30FF               	movlw	-1
  3785  069B  1283               	bcf	3,5	;RP0=0, select bank0
  3786  069C  1303               	bcf	3,6	;RP1=0, select bank0
  3787  069D  00DE               	movwf	??_sprintf
  3788  069E  085E               	movf	??_sprintf,w
  3789  069F  1683               	bsf	3,5	;RP0=1, select bank1
  3790  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  3791  06A1  07C1               	addwf	sprintf@c^(0+128),f
  3792  06A2  0841               	movf	sprintf@c^(0+128),w
  3793  06A3  3AFF               	xorlw	-1
  3794  06A4  1903               	btfsc	3,2
  3795  06A5  2F70               	goto	l3076
  3796                           
  3797                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  3798                           
  3799                           ;doprnt.c: 1237: while(c--) {
  3800  06A6  0841               	movf	sprintf@c^(0+128),w
  3801  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3802  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3803  06A9  00DE               	movwf	??_sprintf
  3804  06AA  3001               	movlw	1
  3805  06AB                     u4205:	
  3806  06AB  1003               	clrc
  3807  06AC  0DDE               	rlf	??_sprintf,f
  3808  06AD  3EFF               	addlw	-1
  3809  06AE  1D03               	skipz
  3810  06AF  2EAB               	goto	u4205
  3811  06B0  1003               	clrc
  3812  06B1  0D5E               	rlf	??_sprintf,w
  3813  06B2  3E01               	addlw	low (_dpowers-__stringbase)
  3814  06B3  0084               	movwf	4
  3815  06B4  160A  118A  200A  120A  118A  	fcall	stringdir
  3816  06B9  00F0               	movwf	___lldiv@divisor
  3817  06BA  160A  118A  200A  120A  118A  	fcall	stringdir
  3818  06BF  00F1               	movwf	___lldiv@divisor+1
  3819  06C0  160A  118A  200A  120A  118A  	fcall	stringdir
  3820  06C5  00F2               	movwf	___lldiv@divisor+2
  3821  06C6  160A  118A  200A  120A  118A  	fcall	stringdir
  3822  06CB  00F3               	movwf	___lldiv@divisor+3
  3823  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  3824  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  3825  06CE  0838               	movf	(sprintf@_val+3)^(0+128),w
  3826  06CF  00F7               	movwf	___lldiv@dividend+3
  3827  06D0  0837               	movf	(sprintf@_val+2)^(0+128),w
  3828  06D1  00F6               	movwf	___lldiv@dividend+2
  3829  06D2  0836               	movf	(sprintf@_val+1)^(0+128),w
  3830  06D3  00F5               	movwf	___lldiv@dividend+1
  3831  06D4  0835               	movf	sprintf@_val^(0+128),w
  3832  06D5  00F4               	movwf	___lldiv@dividend
  3833  06D6  160A  158A  2449  120A  118A  	fcall	___lldiv
  3834  06DB  0873               	movf	?___lldiv+3,w
  3835  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3836  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  3837  06DE  00AF               	movwf	(sprintf@vd_146+3)^(0+128)
  3838  06DF  0872               	movf	?___lldiv+2,w
  3839  06E0  00AE               	movwf	(sprintf@vd_146+2)^(0+128)
  3840  06E1  0871               	movf	?___lldiv+1,w
  3841  06E2  00AD               	movwf	(sprintf@vd_146+1)^(0+128)
  3842  06E3  0870               	movf	?___lldiv,w
  3843  06E4  00AC               	movwf	sprintf@vd_146^(0+128)
  3844                           
  3845                           ;doprnt.c: 1239: vd %= 10;
  3846  06E5  3000               	movlw	0
  3847  06E6  00F3               	movwf	___llmod@divisor+3
  3848  06E7  3000               	movlw	0
  3849  06E8  00F2               	movwf	___llmod@divisor+2
  3850  06E9  3000               	movlw	0
  3851  06EA  00F1               	movwf	___llmod@divisor+1
  3852  06EB  300A               	movlw	10
  3853  06EC  00F0               	movwf	___llmod@divisor
  3854  06ED  082F               	movf	(sprintf@vd_146+3)^(0+128),w
  3855  06EE  00F7               	movwf	___llmod@dividend+3
  3856  06EF  082E               	movf	(sprintf@vd_146+2)^(0+128),w
  3857  06F0  00F6               	movwf	___llmod@dividend+2
  3858  06F1  082D               	movf	(sprintf@vd_146+1)^(0+128),w
  3859  06F2  00F5               	movwf	___llmod@dividend+1
  3860  06F3  082C               	movf	sprintf@vd_146^(0+128),w
  3861  06F4  00F4               	movwf	___llmod@dividend
  3862  06F5  160A  158A  2343  120A  118A  	fcall	___llmod
  3863  06FA  0873               	movf	?___llmod+3,w
  3864  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3865  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  3866  06FD  00AF               	movwf	(sprintf@vd_146+3)^(0+128)
  3867  06FE  0872               	movf	?___llmod+2,w
  3868  06FF  00AE               	movwf	(sprintf@vd_146+2)^(0+128)
  3869  0700  0871               	movf	?___llmod+1,w
  3870  0701  00AD               	movwf	(sprintf@vd_146+1)^(0+128)
  3871  0702  0870               	movf	?___llmod,w
  3872  0703  00AC               	movwf	sprintf@vd_146^(0+128)
  3873                           
  3874                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  3875  0704  082C               	movf	sprintf@vd_146^(0+128),w
  3876  0705  3E30               	addlw	48
  3877  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3878  0707  1303               	bcf	3,6	;RP1=0, select bank0
  3879  0708  00DE               	movwf	??_sprintf
  3880  0709  1683               	bsf	3,5	;RP0=1, select bank1
  3881  070A  1303               	bcf	3,6	;RP1=0, select bank1
  3882  070B  083B               	movf	sprintf@sp^(0+128),w
  3883  070C  0084               	movwf	4
  3884  070D  1283               	bcf	3,5	;RP0=0, select bank0
  3885  070E  1303               	bcf	3,6	;RP1=0, select bank0
  3886  070F  085E               	movf	??_sprintf,w
  3887  0710  1783               	bsf	3,7	;select IRP bank2
  3888  0711  0080               	movwf	0
  3889  0712  3001               	movlw	1
  3890  0713  00DE               	movwf	??_sprintf
  3891  0714  085E               	movf	??_sprintf,w
  3892  0715  1683               	bsf	3,5	;RP0=1, select bank1
  3893  0716  1303               	bcf	3,6	;RP1=0, select bank1
  3894  0717  07BB               	addwf	sprintf@sp^(0+128),f
  3895                           
  3896                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  3897  0718  0841               	movf	sprintf@c^(0+128),w
  3898  0719  1283               	bcf	3,5	;RP0=0, select bank0
  3899  071A  1303               	bcf	3,6	;RP1=0, select bank0
  3900  071B  00DE               	movwf	??_sprintf
  3901  071C  3001               	movlw	1
  3902  071D                     u4215:	
  3903  071D  1003               	clrc
  3904  071E  0DDE               	rlf	??_sprintf,f
  3905  071F  3EFF               	addlw	-1
  3906  0720  1D03               	skipz
  3907  0721  2F1D               	goto	u4215
  3908  0722  1003               	clrc
  3909  0723  0D5E               	rlf	??_sprintf,w
  3910  0724  3E01               	addlw	low (_dpowers-__stringbase)
  3911  0725  0084               	movwf	4
  3912  0726  160A  118A  200A  120A  118A  	fcall	stringdir
  3913  072B  00F0               	movwf	___llmod@divisor
  3914  072C  160A  118A  200A  120A  118A  	fcall	stringdir
  3915  0731  00F1               	movwf	___llmod@divisor+1
  3916  0732  160A  118A  200A  120A  118A  	fcall	stringdir
  3917  0737  00F2               	movwf	___llmod@divisor+2
  3918  0738  160A  118A  200A  120A  118A  	fcall	stringdir
  3919  073D  00F3               	movwf	___llmod@divisor+3
  3920  073E  1683               	bsf	3,5	;RP0=1, select bank1
  3921  073F  1303               	bcf	3,6	;RP1=0, select bank1
  3922  0740  0838               	movf	(sprintf@_val+3)^(0+128),w
  3923  0741  00F7               	movwf	___llmod@dividend+3
  3924  0742  0837               	movf	(sprintf@_val+2)^(0+128),w
  3925  0743  00F6               	movwf	___llmod@dividend+2
  3926  0744  0836               	movf	(sprintf@_val+1)^(0+128),w
  3927  0745  00F5               	movwf	___llmod@dividend+1
  3928  0746  0835               	movf	sprintf@_val^(0+128),w
  3929  0747  00F4               	movwf	___llmod@dividend
  3930  0748  160A  158A  2343  120A  118A  	fcall	___llmod
  3931  074D  0873               	movf	?___llmod+3,w
  3932  074E  1683               	bsf	3,5	;RP0=1, select bank1
  3933  074F  1303               	bcf	3,6	;RP1=0, select bank1
  3934  0750  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3935  0751  0872               	movf	?___llmod+2,w
  3936  0752  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3937  0753  0871               	movf	?___llmod+1,w
  3938  0754  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3939  0755  0870               	movf	?___llmod,w
  3940  0756  2E99               	goto	L6
  3941  0757                     l3070:	
  3942                           ;doprnt.c: 1242: }
  3943                           ;doprnt.c: 1244: while(prec) {
  3944                           
  3945                           
  3946                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  3947  0757  3030               	movlw	48
  3948  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0759  1303               	bcf	3,6	;RP1=0, select bank0
  3950  075A  00DE               	movwf	??_sprintf
  3951  075B  1683               	bsf	3,5	;RP0=1, select bank1
  3952  075C  1303               	bcf	3,6	;RP1=0, select bank1
  3953  075D  083B               	movf	sprintf@sp^(0+128),w
  3954  075E  0084               	movwf	4
  3955  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3956  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3957  0761  085E               	movf	??_sprintf,w
  3958  0762  1783               	bsf	3,7	;select IRP bank2
  3959  0763  0080               	movwf	0
  3960  0764  3001               	movlw	1
  3961  0765  00DE               	movwf	??_sprintf
  3962  0766  085E               	movf	??_sprintf,w
  3963  0767  1683               	bsf	3,5	;RP0=1, select bank1
  3964  0768  1303               	bcf	3,6	;RP1=0, select bank1
  3965  0769  07BB               	addwf	sprintf@sp^(0+128),f
  3966                           
  3967                           ;doprnt.c: 1246: prec--;
  3968  076A  30FF               	movlw	255
  3969  076B  07BC               	addwf	sprintf@prec^(0+128),f
  3970  076C  1803               	skipnc
  3971  076D  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3972  076E  30FF               	movlw	255
  3973  076F  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3974  0770                     l3076:	
  3975  0770  083D               	movf	(sprintf@prec+1)^(0+128),w
  3976  0771  043C               	iorwf	sprintf@prec^(0+128),w
  3977  0772  1903               	btfsc	3,2
  3978  0773  29AB               	goto	l3096
  3979  0774  2F57               	goto	l3070
  3980  0775                     l3078:	
  3981                           ;doprnt.c: 1247: }
  3982                           ;doprnt.c: 1254: continue;
  3983                           
  3984                           
  3985                           ;doprnt.c: 1255: }
  3986                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  3987  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3988  0776  1303               	bcf	3,6	;RP1=0, select bank1
  3989  0777  083D               	movf	(sprintf@prec+1)^(0+128),w
  3990  0778  043C               	iorwf	sprintf@prec^(0+128),w
  3991  0779  1D03               	skipz
  3992  077A  2F87               	goto	l165
  3993  077B  0838               	movf	(sprintf@_val+3)^(0+128),w
  3994  077C  0437               	iorwf	(sprintf@_val+2)^(0+128),w
  3995  077D  0436               	iorwf	(sprintf@_val+1)^(0+128),w
  3996  077E  0435               	iorwf	sprintf@_val^(0+128),w
  3997  077F  1D03               	skipz
  3998  0780  2F87               	goto	l165
  3999                           
  4000                           ;doprnt.c: 1300: prec++;
  4001  0781  3001               	movlw	1
  4002  0782  07BC               	addwf	sprintf@prec^(0+128),f
  4003  0783  1803               	skipnc
  4004  0784  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  4005  0785  3000               	movlw	0
  4006  0786  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  4007  0787                     l165:	
  4008                           
  4009                           ;doprnt.c: 1348: if(c < prec)
  4010  0787  0841               	movf	sprintf@c^(0+128),w
  4011  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4012  0789  1303               	bcf	3,6	;RP1=0, select bank0
  4013  078A  00DE               	movwf	??_sprintf
  4014  078B  01DF               	clrf	??_sprintf+1
  4015  078C  1BDE               	btfsc	??_sprintf,7
  4016  078D  03DF               	decf	??_sprintf+1,f
  4017  078E  085F               	movf	??_sprintf+1,w
  4018  078F  3A80               	xorlw	128
  4019  0790  00E0               	movwf	??_sprintf+2
  4020  0791  1683               	bsf	3,5	;RP0=1, select bank1
  4021  0792  1303               	bcf	3,6	;RP1=0, select bank1
  4022  0793  083D               	movf	(sprintf@prec+1)^(0+128),w
  4023  0794  3A80               	xorlw	128
  4024  0795  1283               	bcf	3,5	;RP0=0, select bank0
  4025  0796  1303               	bcf	3,6	;RP1=0, select bank0
  4026  0797  0260               	subwf	??_sprintf+2,w
  4027  0798  1D03               	skipz
  4028  0799  2FA0               	goto	u4265
  4029  079A  1683               	bsf	3,5	;RP0=1, select bank1
  4030  079B  1303               	bcf	3,6	;RP1=0, select bank1
  4031  079C  083C               	movf	sprintf@prec^(0+128),w
  4032  079D  1283               	bcf	3,5	;RP0=0, select bank0
  4033  079E  1303               	bcf	3,6	;RP1=0, select bank0
  4034  079F  025E               	subwf	??_sprintf,w
  4035  07A0                     u4265:	
  4036  07A0  1803               	skipnc
  4037  07A1  2FAD               	goto	l3086
  4038                           
  4039                           ;doprnt.c: 1349: c = prec;
  4040  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  4041  07A3  1303               	bcf	3,6	;RP1=0, select bank1
  4042  07A4  083C               	movf	sprintf@prec^(0+128),w
  4043  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  4044  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  4045  07A7  00DE               	movwf	??_sprintf
  4046  07A8  085E               	movf	??_sprintf,w
  4047  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  4048  07AA  1303               	bcf	3,6	;RP1=0, select bank1
  4049  07AB  00C1               	movwf	sprintf@c^(0+128)
  4050  07AC  2FCF               	goto	l3090
  4051  07AD                     l3086:	
  4052                           
  4053                           ;doprnt.c: 1350: else if(prec < c)
  4054  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  4055  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  4056  07AF  0841               	movf	sprintf@c^(0+128),w
  4057  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  4058  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  4059  07B2  00DE               	movwf	??_sprintf
  4060  07B3  01DF               	clrf	??_sprintf+1
  4061  07B4  1BDE               	btfsc	??_sprintf,7
  4062  07B5  03DF               	decf	??_sprintf+1,f
  4063  07B6  1683               	bsf	3,5	;RP0=1, select bank1
  4064  07B7  1303               	bcf	3,6	;RP1=0, select bank1
  4065  07B8  083D               	movf	(sprintf@prec+1)^(0+128),w
  4066  07B9  3A80               	xorlw	128
  4067  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4068  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4069  07BC  00E0               	movwf	??_sprintf+2
  4070  07BD  085F               	movf	??_sprintf+1,w
  4071  07BE  3A80               	xorlw	128
  4072  07BF  0260               	subwf	??_sprintf+2,w
  4073  07C0  1D03               	skipz
  4074  07C1  2FC6               	goto	u4275
  4075  07C2  085E               	movf	??_sprintf,w
  4076  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  4077  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  4078  07C5  023C               	subwf	sprintf@prec^(0+128),w
  4079  07C6                     u4275:	
  4080  07C6  1803               	skipnc
  4081  07C7  2FCF               	goto	l3090
  4082                           
  4083                           ;doprnt.c: 1351: prec = c;
  4084  07C8  1683               	bsf	3,5	;RP0=1, select bank1
  4085  07C9  1303               	bcf	3,6	;RP1=0, select bank1
  4086  07CA  0841               	movf	sprintf@c^(0+128),w
  4087  07CB  00BC               	movwf	sprintf@prec^(0+128)
  4088  07CC  01BD               	clrf	(sprintf@prec+1)^(0+128)
  4089  07CD  1BBC               	btfsc	sprintf@prec^(0+128),7
  4090  07CE  03BD               	decf	(sprintf@prec+1)^(0+128),f
  4091  07CF                     l3090:	
  4092                           
  4093                           ;doprnt.c: 1431: {
  4094                           ;doprnt.c: 1447: if(flag & 0x03)
  4095  07CF  3003               	movlw	3
  4096  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  4097  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  4098  07D2  0530               	andwf	sprintf@flag^(0+128),w
  4099  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  4100  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  4101  07D5  00DE               	movwf	??_sprintf
  4102  07D6  3000               	movlw	0
  4103  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  4104  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  4105  07D9  0531               	andwf	(sprintf@flag+1)^(0+128),w
  4106  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  4107  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  4108  07DC  00DF               	movwf	??_sprintf+1
  4109  07DD  085F               	movf	??_sprintf+1,w
  4110  07DE  045E               	iorwf	??_sprintf,w
  4111  07DF  1903               	skipnz
  4112  07E0  29AB               	goto	l3096
  4113                           
  4114                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  4115  07E1  302D               	movlw	45
  4116  07E2                     L7:	
  4117  07E2  00DE               	movwf	??_sprintf
  4118  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  4119  07E4  1303               	bcf	3,6	;RP1=0, select bank1
  4120  07E5  083B               	movf	sprintf@sp^(0+128),w
  4121  07E6  0084               	movwf	4
  4122  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  4123  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  4124  07E9  085E               	movf	??_sprintf,w
  4125  07EA  1783               	bsf	3,7	;select IRP bank2
  4126  07EB  0080               	movwf	0
  4127  07EC  3001               	movlw	1
  4128  07ED  00DE               	movwf	??_sprintf
  4129  07EE  085E               	movf	??_sprintf,w
  4130  07EF  1683               	bsf	3,5	;RP0=1, select bank1
  4131  07F0  1303               	bcf	3,6	;RP1=0, select bank1
  4132  07F1  07BB               	addwf	sprintf@sp^(0+128),f
  4133  07F2  29AB               	goto	l3096
  4134  07F3                     l3098:	
  4135                           ;doprnt.c: 1478: }
  4136                           ;doprnt.c: 1542: }
  4137                           ;doprnt.c: 1544: alldone:
  4138                           
  4139                           
  4140                           ;doprnt.c: 1547: *sp = 0;
  4141  07F3  083B               	movf	sprintf@sp^(0+128),w
  4142  07F4  0084               	movwf	4
  4143  07F5  1783               	bsf	3,7	;select IRP bank2
  4144  07F6  0180               	clrf	0
  4145  07F7  0008               	return
  4146  07F8                     __end_of_sprintf:	
  4147                           ;doprnt.c: 1549: return 0;
  4148                           ;	Return value of _sprintf is never used
  4149                           
  4150                           
  4151                           	psect	text2
  4152  08C8                     __ptext2:	
  4153 ;; *************** function _scale *****************
  4154 ;; Defined at:
  4155 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  4156 ;; Parameters:    Size  Location     Type
  4157 ;;  scl             1    wreg     char 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;  scl             1   31[BANK0 ] char 
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  3   23[BANK0 ] char 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4169 ;;      Params:         0       3       0       0       0
  4170 ;;      Locals:         0       4       0       0       0
  4171 ;;      Temps:          0       2       0       0       0
  4172 ;;      Totals:         0       9       0       0       0
  4173 ;;Total ram usage:        9 bytes
  4174 ;; Hardware stack levels used:    1
  4175 ;; Hardware stack levels required when called:    2
  4176 ;; This function calls:
  4177 ;;		___awdiv
  4178 ;;		___awmod
  4179 ;;		___bmul
  4180 ;;		___ftmul
  4181 ;; This function is called by:
  4182 ;;		_sprintf
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           
  4187                           ;psect for function _scale
  4188  08C8                     _scale:	
  4189                           
  4190                           ;incstack = 0
  4191                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4192                           ;scale@scl stored from wreg
  4193  08C8  1283               	bcf	3,5	;RP0=0, select bank0
  4194  08C9  1303               	bcf	3,6	;RP1=0, select bank0
  4195  08CA  00BF               	movwf	scale@scl
  4196                           
  4197                           ;doprnt.c: 428: if(scl < 0) {
  4198  08CB  1FBF               	btfss	scale@scl,7
  4199  08CC  2A1B               	goto	l2548
  4200                           
  4201                           ;doprnt.c: 429: scl = -scl;
  4202  08CD  09BF               	comf	scale@scl,f
  4203  08CE  0ABF               	incf	scale@scl,f
  4204                           
  4205                           ;doprnt.c: 430: if(scl>=110)
  4206  08CF  083F               	movf	scale@scl,w
  4207  08D0  3A80               	xorlw	128
  4208  08D1  3E12               	addlw	-238
  4209  08D2  1C03               	skipc
  4210  08D3  298E               	goto	l2538
  4211                           
  4212                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4213  08D4  3003               	movlw	3
  4214  08D5  00BA               	movwf	??_scale
  4215  08D6  083A               	movf	??_scale,w
  4216  08D7  00A4               	movwf	___bmul@multiplicand
  4217  08D8  300A               	movlw	10
  4218  08D9  00F7               	movwf	___awdiv@divisor
  4219  08DA  3000               	movlw	0
  4220  08DB  00F8               	movwf	___awdiv@divisor+1
  4221  08DC  083F               	movf	scale@scl,w
  4222  08DD  00F2               	movwf	___awmod@dividend
  4223  08DE  01F3               	clrf	___awmod@dividend+1
  4224  08DF  1BF2               	btfsc	___awmod@dividend,7
  4225  08E0  03F3               	decf	___awmod@dividend+1,f
  4226  08E1  3064               	movlw	100
  4227  08E2  00F0               	movwf	___awmod@divisor
  4228  08E3  3000               	movlw	0
  4229  08E4  00F1               	movwf	___awmod@divisor+1
  4230  08E5  160A  118A  20F8  120A  158A  	fcall	___awmod
  4231  08EA  0871               	movf	?___awmod+1,w
  4232  08EB  01FA               	clrf	___awdiv@dividend+1
  4233  08EC  07FA               	addwf	___awdiv@dividend+1,f
  4234  08ED  0870               	movf	?___awmod,w
  4235  08EE  01F9               	clrf	___awdiv@dividend
  4236  08EF  07F9               	addwf	___awdiv@dividend,f
  4237  08F0  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4238  08F5  0877               	movf	?___awdiv,w
  4239  08F6  3E09               	addlw	9
  4240  08F7  160A  158A  21AA  120A  158A  	fcall	___bmul
  4241  08FC  3E29               	addlw	low (__npowers_-__stringbase)
  4242  08FD  0084               	movwf	4
  4243  08FE  160A  118A  200A  120A  158A  	fcall	stringdir
  4244  0903  1283               	bcf	3,5	;RP0=0, select bank0
  4245  0904  1303               	bcf	3,6	;RP1=0, select bank0
  4246  0905  00A7               	movwf	___ftmul@f1
  4247  0906  160A  118A  200A  120A  158A  	fcall	stringdir
  4248  090B  00A8               	movwf	___ftmul@f1+1
  4249  090C  160A  118A  200A  120A  158A  	fcall	stringdir
  4250  0911  00A9               	movwf	___ftmul@f1+2
  4251  0912  3003               	movlw	3
  4252  0913  00BB               	movwf	??_scale+1
  4253  0914  083B               	movf	??_scale+1,w
  4254  0915  00A4               	movwf	___bmul@multiplicand
  4255  0916  3064               	movlw	100
  4256  0917  00F7               	movwf	___awdiv@divisor
  4257  0918  3000               	movlw	0
  4258  0919  00F8               	movwf	___awdiv@divisor+1
  4259  091A  083F               	movf	scale@scl,w
  4260  091B  00F9               	movwf	___awdiv@dividend
  4261  091C  01FA               	clrf	___awdiv@dividend+1
  4262  091D  1BF9               	btfsc	___awdiv@dividend,7
  4263  091E  03FA               	decf	___awdiv@dividend+1,f
  4264  091F  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4265  0924  0877               	movf	?___awdiv,w
  4266  0925  3E12               	addlw	18
  4267  0926  160A  158A  21AA  120A  158A  	fcall	___bmul
  4268  092B  3E29               	addlw	low (__npowers_-__stringbase)
  4269  092C  0084               	movwf	4
  4270  092D  160A  118A  200A  120A  158A  	fcall	stringdir
  4271  0932  1283               	bcf	3,5	;RP0=0, select bank0
  4272  0933  1303               	bcf	3,6	;RP1=0, select bank0
  4273  0934  00AA               	movwf	___ftmul@f2
  4274  0935  160A  118A  200A  120A  158A  	fcall	stringdir
  4275  093A  00AB               	movwf	___ftmul@f2+1
  4276  093B  160A  118A  200A  120A  158A  	fcall	stringdir
  4277  0940  00AC               	movwf	___ftmul@f2+2
  4278  0941  160A  118A  2215  120A  158A  	fcall	___ftmul
  4279  0946  1283               	bcf	3,5	;RP0=0, select bank0
  4280  0947  1303               	bcf	3,6	;RP1=0, select bank0
  4281  0948  0827               	movf	?___ftmul,w
  4282  0949  00BC               	movwf	_scale$665
  4283  094A  0828               	movf	?___ftmul+1,w
  4284  094B  00BD               	movwf	_scale$665+1
  4285  094C  0829               	movf	?___ftmul+2,w
  4286  094D  00BE               	movwf	_scale$665+2
  4287                           
  4288                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4289  094E  3003               	movlw	3
  4290  094F  00BA               	movwf	??_scale
  4291  0950  083A               	movf	??_scale,w
  4292  0951  00A4               	movwf	___bmul@multiplicand
  4293  0952  083F               	movf	scale@scl,w
  4294  0953  00F2               	movwf	___awmod@dividend
  4295  0954  01F3               	clrf	___awmod@dividend+1
  4296  0955  1BF2               	btfsc	___awmod@dividend,7
  4297  0956  03F3               	decf	___awmod@dividend+1,f
  4298  0957  300A               	movlw	10
  4299  0958  00F0               	movwf	___awmod@divisor
  4300  0959  3000               	movlw	0
  4301  095A  00F1               	movwf	___awmod@divisor+1
  4302  095B  160A  118A  20F8  120A  158A  	fcall	___awmod
  4303  0960  0870               	movf	?___awmod,w
  4304  0961  160A  158A  21AA  120A  158A  	fcall	___bmul
  4305  0966  3E29               	addlw	low (__npowers_-__stringbase)
  4306  0967  0084               	movwf	4
  4307  0968  160A  118A  200A  120A  158A  	fcall	stringdir
  4308  096D  1283               	bcf	3,5	;RP0=0, select bank0
  4309  096E  1303               	bcf	3,6	;RP1=0, select bank0
  4310  096F  00A7               	movwf	___ftmul@f1
  4311  0970  160A  118A  200A  120A  158A  	fcall	stringdir
  4312  0975  00A8               	movwf	___ftmul@f1+1
  4313  0976  160A  118A  200A  120A  158A  	fcall	stringdir
  4314  097B  00A9               	movwf	___ftmul@f1+2
  4315  097C  083C               	movf	_scale$665,w
  4316  097D  00AA               	movwf	___ftmul@f2
  4317  097E  083D               	movf	_scale$665+1,w
  4318  097F  00AB               	movwf	___ftmul@f2+1
  4319  0980  083E               	movf	_scale$665+2,w
  4320  0981  00AC               	movwf	___ftmul@f2+2
  4321  0982  160A  118A  2215   	fcall	___ftmul
  4322  0985  1283               	bcf	3,5	;RP0=0, select bank0
  4323  0986  1303               	bcf	3,6	;RP1=0, select bank0
  4324  0987  0827               	movf	?___ftmul,w
  4325  0988  00B7               	movwf	?_scale
  4326  0989  0828               	movf	?___ftmul+1,w
  4327  098A  00B8               	movwf	?_scale+1
  4328  098B  0829               	movf	?___ftmul+2,w
  4329  098C  00B9               	movwf	?_scale+2
  4330  098D  0008               	return
  4331  098E                     l2538:	
  4332                           
  4333                           ;doprnt.c: 432: else if(scl > 10)
  4334  098E  083F               	movf	scale@scl,w
  4335  098F  3A80               	xorlw	128
  4336  0990  3E75               	addlw	-139
  4337  0991  1C03               	skipc
  4338  0992  29FC               	goto	l2544
  4339                           
  4340                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4341  0993  3003               	movlw	3
  4342  0994  00BA               	movwf	??_scale
  4343  0995  083A               	movf	??_scale,w
  4344  0996  00A4               	movwf	___bmul@multiplicand
  4345  0997  083F               	movf	scale@scl,w
  4346  0998  00F2               	movwf	___awmod@dividend
  4347  0999  01F3               	clrf	___awmod@dividend+1
  4348  099A  1BF2               	btfsc	___awmod@dividend,7
  4349  099B  03F3               	decf	___awmod@dividend+1,f
  4350  099C  300A               	movlw	10
  4351  099D  00F0               	movwf	___awmod@divisor
  4352  099E  3000               	movlw	0
  4353  099F  00F1               	movwf	___awmod@divisor+1
  4354  09A0  160A  118A  20F8  120A  158A  	fcall	___awmod
  4355  09A5  0870               	movf	?___awmod,w
  4356  09A6  160A  158A  21AA  120A  158A  	fcall	___bmul
  4357  09AB  3E29               	addlw	low (__npowers_-__stringbase)
  4358  09AC  0084               	movwf	4
  4359  09AD  160A  118A  200A  120A  158A  	fcall	stringdir
  4360  09B2  1283               	bcf	3,5	;RP0=0, select bank0
  4361  09B3  1303               	bcf	3,6	;RP1=0, select bank0
  4362  09B4  00A7               	movwf	___ftmul@f1
  4363  09B5  160A  118A  200A  120A  158A  	fcall	stringdir
  4364  09BA  00A8               	movwf	___ftmul@f1+1
  4365  09BB  160A  118A  200A  120A  158A  	fcall	stringdir
  4366  09C0  00A9               	movwf	___ftmul@f1+2
  4367  09C1  3003               	movlw	3
  4368  09C2  00BB               	movwf	??_scale+1
  4369  09C3  083B               	movf	??_scale+1,w
  4370  09C4  00A4               	movwf	___bmul@multiplicand
  4371  09C5  300A               	movlw	10
  4372  09C6  00F7               	movwf	___awdiv@divisor
  4373  09C7  3000               	movlw	0
  4374  09C8  00F8               	movwf	___awdiv@divisor+1
  4375  09C9  083F               	movf	scale@scl,w
  4376  09CA  00F9               	movwf	___awdiv@dividend
  4377  09CB  01FA               	clrf	___awdiv@dividend+1
  4378  09CC  1BF9               	btfsc	___awdiv@dividend,7
  4379  09CD  03FA               	decf	___awdiv@dividend+1,f
  4380  09CE  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4381  09D3  0877               	movf	?___awdiv,w
  4382  09D4  3E09               	addlw	9
  4383  09D5  160A  158A  21AA  120A  158A  	fcall	___bmul
  4384  09DA  3E29               	addlw	low (__npowers_-__stringbase)
  4385  09DB  0084               	movwf	4
  4386  09DC  160A  118A  200A  120A  158A  	fcall	stringdir
  4387  09E1  1283               	bcf	3,5	;RP0=0, select bank0
  4388  09E2  1303               	bcf	3,6	;RP1=0, select bank0
  4389  09E3  00AA               	movwf	___ftmul@f2
  4390  09E4  160A  118A  200A  120A  158A  	fcall	stringdir
  4391  09E9  00AB               	movwf	___ftmul@f2+1
  4392  09EA  160A  118A  200A  120A  158A  	fcall	stringdir
  4393  09EF  00AC               	movwf	___ftmul@f2+2
  4394  09F0  160A  118A  2215   	fcall	___ftmul
  4395  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4396  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4397  09F5  0827               	movf	?___ftmul,w
  4398  09F6  00B7               	movwf	?_scale
  4399  09F7  0828               	movf	?___ftmul+1,w
  4400  09F8  00B8               	movwf	?_scale+1
  4401  09F9  0829               	movf	?___ftmul+2,w
  4402  09FA  00B9               	movwf	?_scale+2
  4403  09FB  0008               	return
  4404  09FC                     l2544:	
  4405                           
  4406                           ;doprnt.c: 434: return _npowers_[scl];
  4407  09FC  3003               	movlw	3
  4408  09FD  00BA               	movwf	??_scale
  4409  09FE  083A               	movf	??_scale,w
  4410  09FF  00A4               	movwf	___bmul@multiplicand
  4411  0A00  083F               	movf	scale@scl,w
  4412  0A01  160A  158A  21AA  120A  158A  	fcall	___bmul
  4413  0A06  3E29               	addlw	low (__npowers_-__stringbase)
  4414  0A07  0084               	movwf	4
  4415  0A08  160A  118A  200A  120A  158A  	fcall	stringdir
  4416  0A0D  1283               	bcf	3,5	;RP0=0, select bank0
  4417  0A0E  1303               	bcf	3,6	;RP1=0, select bank0
  4418  0A0F  00B7               	movwf	?_scale
  4419  0A10  160A  118A  200A  120A  158A  	fcall	stringdir
  4420  0A15  00B8               	movwf	?_scale+1
  4421  0A16  160A  118A  200A   	fcall	stringdir
  4422  0A19  00B9               	movwf	?_scale+2
  4423  0A1A  0008               	return
  4424  0A1B                     l2548:	
  4425                           
  4426                           ;doprnt.c: 435: }
  4427                           ;doprnt.c: 436: if(scl>=110)
  4428  0A1B  083F               	movf	scale@scl,w
  4429  0A1C  3A80               	xorlw	128
  4430  0A1D  3E12               	addlw	-238
  4431  0A1E  1C03               	skipc
  4432  0A1F  2ADA               	goto	l2556
  4433                           
  4434                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4435  0A20  3003               	movlw	3
  4436  0A21  00BA               	movwf	??_scale
  4437  0A22  083A               	movf	??_scale,w
  4438  0A23  00A4               	movwf	___bmul@multiplicand
  4439  0A24  300A               	movlw	10
  4440  0A25  00F7               	movwf	___awdiv@divisor
  4441  0A26  3000               	movlw	0
  4442  0A27  00F8               	movwf	___awdiv@divisor+1
  4443  0A28  083F               	movf	scale@scl,w
  4444  0A29  00F2               	movwf	___awmod@dividend
  4445  0A2A  01F3               	clrf	___awmod@dividend+1
  4446  0A2B  1BF2               	btfsc	___awmod@dividend,7
  4447  0A2C  03F3               	decf	___awmod@dividend+1,f
  4448  0A2D  3064               	movlw	100
  4449  0A2E  00F0               	movwf	___awmod@divisor
  4450  0A2F  3000               	movlw	0
  4451  0A30  00F1               	movwf	___awmod@divisor+1
  4452  0A31  160A  118A  20F8  120A  158A  	fcall	___awmod
  4453  0A36  0871               	movf	?___awmod+1,w
  4454  0A37  01FA               	clrf	___awdiv@dividend+1
  4455  0A38  07FA               	addwf	___awdiv@dividend+1,f
  4456  0A39  0870               	movf	?___awmod,w
  4457  0A3A  01F9               	clrf	___awdiv@dividend
  4458  0A3B  07F9               	addwf	___awdiv@dividend,f
  4459  0A3C  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4460  0A41  0877               	movf	?___awdiv,w
  4461  0A42  3E09               	addlw	9
  4462  0A43  160A  158A  21AA  120A  158A  	fcall	___bmul
  4463  0A48  3E50               	addlw	low (__powers_-__stringbase)
  4464  0A49  0084               	movwf	4
  4465  0A4A  160A  118A  200A  120A  158A  	fcall	stringdir
  4466  0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  4467  0A50  1303               	bcf	3,6	;RP1=0, select bank0
  4468  0A51  00A7               	movwf	___ftmul@f1
  4469  0A52  160A  118A  200A  120A  158A  	fcall	stringdir
  4470  0A57  00A8               	movwf	___ftmul@f1+1
  4471  0A58  160A  118A  200A  120A  158A  	fcall	stringdir
  4472  0A5D  00A9               	movwf	___ftmul@f1+2
  4473  0A5E  3003               	movlw	3
  4474  0A5F  00BB               	movwf	??_scale+1
  4475  0A60  083B               	movf	??_scale+1,w
  4476  0A61  00A4               	movwf	___bmul@multiplicand
  4477  0A62  3064               	movlw	100
  4478  0A63  00F7               	movwf	___awdiv@divisor
  4479  0A64  3000               	movlw	0
  4480  0A65  00F8               	movwf	___awdiv@divisor+1
  4481  0A66  083F               	movf	scale@scl,w
  4482  0A67  00F9               	movwf	___awdiv@dividend
  4483  0A68  01FA               	clrf	___awdiv@dividend+1
  4484  0A69  1BF9               	btfsc	___awdiv@dividend,7
  4485  0A6A  03FA               	decf	___awdiv@dividend+1,f
  4486  0A6B  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4487  0A70  0877               	movf	?___awdiv,w
  4488  0A71  3E12               	addlw	18
  4489  0A72  160A  158A  21AA  120A  158A  	fcall	___bmul
  4490  0A77  3E50               	addlw	low (__powers_-__stringbase)
  4491  0A78  0084               	movwf	4
  4492  0A79  160A  118A  200A  120A  158A  	fcall	stringdir
  4493  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  4494  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  4495  0A80  00AA               	movwf	___ftmul@f2
  4496  0A81  160A  118A  200A  120A  158A  	fcall	stringdir
  4497  0A86  00AB               	movwf	___ftmul@f2+1
  4498  0A87  160A  118A  200A  120A  158A  	fcall	stringdir
  4499  0A8C  00AC               	movwf	___ftmul@f2+2
  4500  0A8D  160A  118A  2215  120A  158A  	fcall	___ftmul
  4501  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  4502  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  4503  0A94  0827               	movf	?___ftmul,w
  4504  0A95  00BC               	movwf	_scale$665
  4505  0A96  0828               	movf	?___ftmul+1,w
  4506  0A97  00BD               	movwf	_scale$665+1
  4507  0A98  0829               	movf	?___ftmul+2,w
  4508  0A99  00BE               	movwf	_scale$665+2
  4509                           
  4510                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4511  0A9A  3003               	movlw	3
  4512  0A9B  00BA               	movwf	??_scale
  4513  0A9C  083A               	movf	??_scale,w
  4514  0A9D  00A4               	movwf	___bmul@multiplicand
  4515  0A9E  083F               	movf	scale@scl,w
  4516  0A9F  00F2               	movwf	___awmod@dividend
  4517  0AA0  01F3               	clrf	___awmod@dividend+1
  4518  0AA1  1BF2               	btfsc	___awmod@dividend,7
  4519  0AA2  03F3               	decf	___awmod@dividend+1,f
  4520  0AA3  300A               	movlw	10
  4521  0AA4  00F0               	movwf	___awmod@divisor
  4522  0AA5  3000               	movlw	0
  4523  0AA6  00F1               	movwf	___awmod@divisor+1
  4524  0AA7  160A  118A  20F8  120A  158A  	fcall	___awmod
  4525  0AAC  0870               	movf	?___awmod,w
  4526  0AAD  160A  158A  21AA  120A  158A  	fcall	___bmul
  4527  0AB2  3E50               	addlw	low (__powers_-__stringbase)
  4528  0AB3  0084               	movwf	4
  4529  0AB4  160A  118A  200A  120A  158A  	fcall	stringdir
  4530  0AB9  1283               	bcf	3,5	;RP0=0, select bank0
  4531  0ABA  1303               	bcf	3,6	;RP1=0, select bank0
  4532  0ABB  00A7               	movwf	___ftmul@f1
  4533  0ABC  160A  118A  200A  120A  158A  	fcall	stringdir
  4534  0AC1  00A8               	movwf	___ftmul@f1+1
  4535  0AC2  160A  118A  200A  120A  158A  	fcall	stringdir
  4536  0AC7  00A9               	movwf	___ftmul@f1+2
  4537  0AC8  083C               	movf	_scale$665,w
  4538  0AC9  00AA               	movwf	___ftmul@f2
  4539  0ACA  083D               	movf	_scale$665+1,w
  4540  0ACB  00AB               	movwf	___ftmul@f2+1
  4541  0ACC  083E               	movf	_scale$665+2,w
  4542  0ACD  00AC               	movwf	___ftmul@f2+2
  4543  0ACE  160A  118A  2215   	fcall	___ftmul
  4544  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  4545  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  4546  0AD3  0827               	movf	?___ftmul,w
  4547  0AD4  00B7               	movwf	?_scale
  4548  0AD5  0828               	movf	?___ftmul+1,w
  4549  0AD6  00B8               	movwf	?_scale+1
  4550  0AD7  0829               	movf	?___ftmul+2,w
  4551  0AD8  00B9               	movwf	?_scale+2
  4552  0AD9  0008               	return
  4553  0ADA                     l2556:	
  4554                           
  4555                           ;doprnt.c: 438: else if(scl > 10)
  4556  0ADA  083F               	movf	scale@scl,w
  4557  0ADB  3A80               	xorlw	128
  4558  0ADC  3E75               	addlw	-139
  4559  0ADD  1C03               	skipc
  4560  0ADE  2B48               	goto	l2562
  4561                           
  4562                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4563  0ADF  3003               	movlw	3
  4564  0AE0  00BA               	movwf	??_scale
  4565  0AE1  083A               	movf	??_scale,w
  4566  0AE2  00A4               	movwf	___bmul@multiplicand
  4567  0AE3  083F               	movf	scale@scl,w
  4568  0AE4  00F2               	movwf	___awmod@dividend
  4569  0AE5  01F3               	clrf	___awmod@dividend+1
  4570  0AE6  1BF2               	btfsc	___awmod@dividend,7
  4571  0AE7  03F3               	decf	___awmod@dividend+1,f
  4572  0AE8  300A               	movlw	10
  4573  0AE9  00F0               	movwf	___awmod@divisor
  4574  0AEA  3000               	movlw	0
  4575  0AEB  00F1               	movwf	___awmod@divisor+1
  4576  0AEC  160A  118A  20F8  120A  158A  	fcall	___awmod
  4577  0AF1  0870               	movf	?___awmod,w
  4578  0AF2  160A  158A  21AA  120A  158A  	fcall	___bmul
  4579  0AF7  3E50               	addlw	low (__powers_-__stringbase)
  4580  0AF8  0084               	movwf	4
  4581  0AF9  160A  118A  200A  120A  158A  	fcall	stringdir
  4582  0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  4583  0AFF  1303               	bcf	3,6	;RP1=0, select bank0
  4584  0B00  00A7               	movwf	___ftmul@f1
  4585  0B01  160A  118A  200A  120A  158A  	fcall	stringdir
  4586  0B06  00A8               	movwf	___ftmul@f1+1
  4587  0B07  160A  118A  200A  120A  158A  	fcall	stringdir
  4588  0B0C  00A9               	movwf	___ftmul@f1+2
  4589  0B0D  3003               	movlw	3
  4590  0B0E  00BB               	movwf	??_scale+1
  4591  0B0F  083B               	movf	??_scale+1,w
  4592  0B10  00A4               	movwf	___bmul@multiplicand
  4593  0B11  300A               	movlw	10
  4594  0B12  00F7               	movwf	___awdiv@divisor
  4595  0B13  3000               	movlw	0
  4596  0B14  00F8               	movwf	___awdiv@divisor+1
  4597  0B15  083F               	movf	scale@scl,w
  4598  0B16  00F9               	movwf	___awdiv@dividend
  4599  0B17  01FA               	clrf	___awdiv@dividend+1
  4600  0B18  1BF9               	btfsc	___awdiv@dividend,7
  4601  0B19  03FA               	decf	___awdiv@dividend+1,f
  4602  0B1A  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4603  0B1F  0877               	movf	?___awdiv,w
  4604  0B20  3E09               	addlw	9
  4605  0B21  160A  158A  21AA  120A  158A  	fcall	___bmul
  4606  0B26  3E50               	addlw	low (__powers_-__stringbase)
  4607  0B27  0084               	movwf	4
  4608  0B28  160A  118A  200A  120A  158A  	fcall	stringdir
  4609  0B2D  1283               	bcf	3,5	;RP0=0, select bank0
  4610  0B2E  1303               	bcf	3,6	;RP1=0, select bank0
  4611  0B2F  00AA               	movwf	___ftmul@f2
  4612  0B30  160A  118A  200A  120A  158A  	fcall	stringdir
  4613  0B35  00AB               	movwf	___ftmul@f2+1
  4614  0B36  160A  118A  200A  120A  158A  	fcall	stringdir
  4615  0B3B  00AC               	movwf	___ftmul@f2+2
  4616  0B3C  160A  118A  2215   	fcall	___ftmul
  4617  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  4618  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  4619  0B41  0827               	movf	?___ftmul,w
  4620  0B42  00B7               	movwf	?_scale
  4621  0B43  0828               	movf	?___ftmul+1,w
  4622  0B44  00B8               	movwf	?_scale+1
  4623  0B45  0829               	movf	?___ftmul+2,w
  4624  0B46  00B9               	movwf	?_scale+2
  4625  0B47  0008               	return
  4626  0B48                     l2562:	
  4627                           
  4628                           ;doprnt.c: 440: return _powers_[scl];
  4629  0B48  3003               	movlw	3
  4630  0B49  00BA               	movwf	??_scale
  4631  0B4A  083A               	movf	??_scale,w
  4632  0B4B  00A4               	movwf	___bmul@multiplicand
  4633  0B4C  083F               	movf	scale@scl,w
  4634  0B4D  160A  158A  21AA  120A  158A  	fcall	___bmul
  4635  0B52  3E50               	addlw	low (__powers_-__stringbase)
  4636  0B53  0084               	movwf	4
  4637  0B54  160A  118A  200A  120A  158A  	fcall	stringdir
  4638  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0B5B  00B7               	movwf	?_scale
  4641  0B5C  160A  118A  200A  120A  158A  	fcall	stringdir
  4642  0B61  00B8               	movwf	?_scale+1
  4643  0B62  160A  118A  200A   	fcall	stringdir
  4644  0B65  00B9               	movwf	?_scale+2
  4645  0B66  0008               	return
  4646  0B67                     __end_of_scale:	
  4647                           
  4648                           	psect	text3
  4649  197A                     __ptext3:	
  4650 ;; *************** function _isdigit *****************
  4651 ;; Defined at:
  4652 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;  c               1    wreg     unsigned char 
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  c               1    1[COMMON] unsigned char 
  4657 ;; Return value:  Size  Location     Type
  4658 ;;		None               void
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4666 ;;      Params:         0       0       0       0       0
  4667 ;;      Locals:         2       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0
  4669 ;;      Totals:         2       0       0       0       0
  4670 ;;Total ram usage:        2 bytes
  4671 ;; Hardware stack levels used:    1
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_sprintf
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           
  4680                           ;psect for function _isdigit
  4681  197A                     _isdigit:	
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4685                           ;isdigit@c stored from wreg
  4686  197A  00F1               	movwf	isdigit@c
  4687  197B  01F0               	clrf	_isdigit$344
  4688  197C  303A               	movlw	58
  4689  197D  0271               	subwf	isdigit@c,w
  4690  197E  1803               	skipnc
  4691  197F  2986               	goto	l2574
  4692  1980  3030               	movlw	48
  4693  1981  0271               	subwf	isdigit@c,w
  4694  1982  1C03               	skipc
  4695  1983  2986               	goto	l2574
  4696  1984  01F0               	clrf	_isdigit$344
  4697  1985  0AF0               	incf	_isdigit$344,f
  4698  1986                     l2574:	
  4699  1986  0C70               	rrf	_isdigit$344,w
  4700  1987  0008               	return
  4701  1988                     __end_of_isdigit:	
  4702                           
  4703                           	psect	text4
  4704  0004                     __ptext4:	
  4705 ;; *************** function _fround *****************
  4706 ;; Defined at:
  4707 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  prec            1    wreg     unsigned char 
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;  prec            1   38[BANK0 ] unsigned char 
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  3   23[BANK0 ] unsigned char 
  4714 ;; Registers used:
  4715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4721 ;;      Params:         0       3       0       0       0
  4722 ;;      Locals:         0       7       0       0       0
  4723 ;;      Temps:          0       6       0       0       0
  4724 ;;      Totals:         0      16       0       0       0
  4725 ;;Total ram usage:       16 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    2
  4728 ;; This function calls:
  4729 ;;		___awdiv
  4730 ;;		___awmod
  4731 ;;		___bmul
  4732 ;;		___ftmul
  4733 ;; This function is called by:
  4734 ;;		_sprintf
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           
  4739                           ;psect for function _fround
  4740  0004                     _fround:	
  4741                           
  4742                           ;incstack = 0
  4743                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4744                           ;fround@prec stored from wreg
  4745  0004  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0005  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0006  00C6               	movwf	fround@prec
  4748                           
  4749                           ;doprnt.c: 413: if(prec>=110)
  4750  0007  306E               	movlw	110
  4751  0008  0246               	subwf	fround@prec,w
  4752  0009  1C03               	skipc
  4753  000A  28E4               	goto	l2514
  4754                           
  4755                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4756  000B  3003               	movlw	3
  4757  000C  00BA               	movwf	??_fround
  4758  000D  083A               	movf	??_fround,w
  4759  000E  00A4               	movwf	___bmul@multiplicand
  4760  000F  300A               	movlw	10
  4761  0010  00F7               	movwf	___awdiv@divisor
  4762  0011  3000               	movlw	0
  4763  0012  00F8               	movwf	___awdiv@divisor+1
  4764  0013  0846               	movf	fround@prec,w
  4765  0014  00BB               	movwf	??_fround+1
  4766  0015  01BC               	clrf	??_fround+2
  4767  0016  083B               	movf	??_fround+1,w
  4768  0017  00F2               	movwf	___awmod@dividend
  4769  0018  083C               	movf	??_fround+2,w
  4770  0019  00F3               	movwf	___awmod@dividend+1
  4771  001A  3064               	movlw	100
  4772  001B  00F0               	movwf	___awmod@divisor
  4773  001C  3000               	movlw	0
  4774  001D  00F1               	movwf	___awmod@divisor+1
  4775  001E  160A  118A  20F8  120A  118A  	fcall	___awmod
  4776  0023  0871               	movf	?___awmod+1,w
  4777  0024  01FA               	clrf	___awdiv@dividend+1
  4778  0025  07FA               	addwf	___awdiv@dividend+1,f
  4779  0026  0870               	movf	?___awmod,w
  4780  0027  01F9               	clrf	___awdiv@dividend
  4781  0028  07F9               	addwf	___awdiv@dividend,f
  4782  0029  160A  158A  23EC  120A  118A  	fcall	___awdiv
  4783  002E  0877               	movf	?___awdiv,w
  4784  002F  3E09               	addlw	9
  4785  0030  160A  158A  21AA  120A  118A  	fcall	___bmul
  4786  0035  3E29               	addlw	low (__npowers_-__stringbase)
  4787  0036  0084               	movwf	4
  4788  0037  160A  118A  200A  120A  118A  	fcall	stringdir
  4789  003C  1283               	bcf	3,5	;RP0=0, select bank0
  4790  003D  1303               	bcf	3,6	;RP1=0, select bank0
  4791  003E  00A7               	movwf	___ftmul@f1
  4792  003F  160A  118A  200A  120A  118A  	fcall	stringdir
  4793  0044  00A8               	movwf	___ftmul@f1+1
  4794  0045  160A  118A  200A  120A  118A  	fcall	stringdir
  4795  004A  00A9               	movwf	___ftmul@f1+2
  4796  004B  3003               	movlw	3
  4797  004C  00BD               	movwf	??_fround+3
  4798  004D  083D               	movf	??_fround+3,w
  4799  004E  00A4               	movwf	___bmul@multiplicand
  4800  004F  3064               	movlw	100
  4801  0050  00F7               	movwf	___awdiv@divisor
  4802  0051  3000               	movlw	0
  4803  0052  00F8               	movwf	___awdiv@divisor+1
  4804  0053  0846               	movf	fround@prec,w
  4805  0054  00BE               	movwf	??_fround+4
  4806  0055  01BF               	clrf	??_fround+5
  4807  0056  083E               	movf	??_fround+4,w
  4808  0057  00F9               	movwf	___awdiv@dividend
  4809  0058  083F               	movf	??_fround+5,w
  4810  0059  00FA               	movwf	___awdiv@dividend+1
  4811  005A  160A  158A  23EC  120A  118A  	fcall	___awdiv
  4812  005F  0877               	movf	?___awdiv,w
  4813  0060  3E12               	addlw	18
  4814  0061  160A  158A  21AA  120A  118A  	fcall	___bmul
  4815  0066  3E29               	addlw	low (__npowers_-__stringbase)
  4816  0067  0084               	movwf	4
  4817  0068  160A  118A  200A  120A  118A  	fcall	stringdir
  4818  006D  1283               	bcf	3,5	;RP0=0, select bank0
  4819  006E  1303               	bcf	3,6	;RP1=0, select bank0
  4820  006F  00AA               	movwf	___ftmul@f2
  4821  0070  160A  118A  200A  120A  118A  	fcall	stringdir
  4822  0075  00AB               	movwf	___ftmul@f2+1
  4823  0076  160A  118A  200A  120A  118A  	fcall	stringdir
  4824  007B  00AC               	movwf	___ftmul@f2+2
  4825  007C  160A  118A  2215  120A  118A  	fcall	___ftmul
  4826  0081  1283               	bcf	3,5	;RP0=0, select bank0
  4827  0082  1303               	bcf	3,6	;RP1=0, select bank0
  4828  0083  0827               	movf	?___ftmul,w
  4829  0084  00C3               	movwf	_fround$663
  4830  0085  0828               	movf	?___ftmul+1,w
  4831  0086  00C4               	movwf	_fround$663+1
  4832  0087  0829               	movf	?___ftmul+2,w
  4833  0088  00C5               	movwf	_fround$663+2
  4834                           
  4835                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4836  0089  3003               	movlw	3
  4837  008A  00BA               	movwf	??_fround
  4838  008B  083A               	movf	??_fround,w
  4839  008C  00A4               	movwf	___bmul@multiplicand
  4840  008D  0846               	movf	fround@prec,w
  4841  008E  00BB               	movwf	??_fround+1
  4842  008F  01BC               	clrf	??_fround+2
  4843  0090  083B               	movf	??_fround+1,w
  4844  0091  00F2               	movwf	___awmod@dividend
  4845  0092  083C               	movf	??_fround+2,w
  4846  0093  00F3               	movwf	___awmod@dividend+1
  4847  0094  300A               	movlw	10
  4848  0095  00F0               	movwf	___awmod@divisor
  4849  0096  3000               	movlw	0
  4850  0097  00F1               	movwf	___awmod@divisor+1
  4851  0098  160A  118A  20F8  120A  118A  	fcall	___awmod
  4852  009D  0870               	movf	?___awmod,w
  4853  009E  160A  158A  21AA  120A  118A  	fcall	___bmul
  4854  00A3  3E29               	addlw	low (__npowers_-__stringbase)
  4855  00A4  0084               	movwf	4
  4856  00A5  160A  118A  200A  120A  118A  	fcall	stringdir
  4857  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4858  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  4859  00AC  00A7               	movwf	___ftmul@f1
  4860  00AD  160A  118A  200A  120A  118A  	fcall	stringdir
  4861  00B2  00A8               	movwf	___ftmul@f1+1
  4862  00B3  160A  118A  200A  120A  118A  	fcall	stringdir
  4863  00B8  00A9               	movwf	___ftmul@f1+2
  4864  00B9  0843               	movf	_fround$663,w
  4865  00BA  00AA               	movwf	___ftmul@f2
  4866  00BB  0844               	movf	_fround$663+1,w
  4867  00BC  00AB               	movwf	___ftmul@f2+1
  4868  00BD  0845               	movf	_fround$663+2,w
  4869  00BE  00AC               	movwf	___ftmul@f2+2
  4870  00BF  160A  118A  2215  120A  118A  	fcall	___ftmul
  4871  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  4872  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  4873  00C6  0827               	movf	?___ftmul,w
  4874  00C7  00C0               	movwf	_fround$664
  4875  00C8  0828               	movf	?___ftmul+1,w
  4876  00C9  00C1               	movwf	_fround$664+1
  4877  00CA  0829               	movf	?___ftmul+2,w
  4878  00CB  00C2               	movwf	_fround$664+2
  4879                           
  4880                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4881  00CC  3000               	movlw	0
  4882  00CD  00A7               	movwf	___ftmul@f1
  4883  00CE  3000               	movlw	0
  4884  00CF  00A8               	movwf	___ftmul@f1+1
  4885  00D0  303F               	movlw	63
  4886  00D1  00A9               	movwf	___ftmul@f1+2
  4887  00D2  0840               	movf	_fround$664,w
  4888  00D3  00AA               	movwf	___ftmul@f2
  4889  00D4  0841               	movf	_fround$664+1,w
  4890  00D5  00AB               	movwf	___ftmul@f2+1
  4891  00D6  0842               	movf	_fround$664+2,w
  4892  00D7  00AC               	movwf	___ftmul@f2+2
  4893  00D8  160A  118A  2215   	fcall	___ftmul
  4894  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  4895  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  4896  00DD  0827               	movf	?___ftmul,w
  4897  00DE  00B7               	movwf	?_fround
  4898  00DF  0828               	movf	?___ftmul+1,w
  4899  00E0  00B8               	movwf	?_fround+1
  4900  00E1  0829               	movf	?___ftmul+2,w
  4901  00E2  00B9               	movwf	?_fround+2
  4902  00E3  0008               	return
  4903  00E4                     l2514:	
  4904                           
  4905                           ;doprnt.c: 415: else if(prec > 10)
  4906  00E4  300B               	movlw	11
  4907  00E5  0246               	subwf	fround@prec,w
  4908  00E6  1C03               	skipc
  4909  00E7  296E               	goto	l2522
  4910                           
  4911                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4912  00E8  3003               	movlw	3
  4913  00E9  00BA               	movwf	??_fround
  4914  00EA  083A               	movf	??_fround,w
  4915  00EB  00A4               	movwf	___bmul@multiplicand
  4916  00EC  0846               	movf	fround@prec,w
  4917  00ED  00BB               	movwf	??_fround+1
  4918  00EE  01BC               	clrf	??_fround+2
  4919  00EF  083B               	movf	??_fround+1,w
  4920  00F0  00F2               	movwf	___awmod@dividend
  4921  00F1  083C               	movf	??_fround+2,w
  4922  00F2  00F3               	movwf	___awmod@dividend+1
  4923  00F3  300A               	movlw	10
  4924  00F4  00F0               	movwf	___awmod@divisor
  4925  00F5  3000               	movlw	0
  4926  00F6  00F1               	movwf	___awmod@divisor+1
  4927  00F7  160A  118A  20F8  120A  118A  	fcall	___awmod
  4928  00FC  0870               	movf	?___awmod,w
  4929  00FD  160A  158A  21AA  120A  118A  	fcall	___bmul
  4930  0102  3E29               	addlw	low (__npowers_-__stringbase)
  4931  0103  0084               	movwf	4
  4932  0104  160A  118A  200A  120A  118A  	fcall	stringdir
  4933  0109  1283               	bcf	3,5	;RP0=0, select bank0
  4934  010A  1303               	bcf	3,6	;RP1=0, select bank0
  4935  010B  00A7               	movwf	___ftmul@f1
  4936  010C  160A  118A  200A  120A  118A  	fcall	stringdir
  4937  0111  00A8               	movwf	___ftmul@f1+1
  4938  0112  160A  118A  200A  120A  118A  	fcall	stringdir
  4939  0117  00A9               	movwf	___ftmul@f1+2
  4940  0118  3003               	movlw	3
  4941  0119  00BD               	movwf	??_fround+3
  4942  011A  083D               	movf	??_fround+3,w
  4943  011B  00A4               	movwf	___bmul@multiplicand
  4944  011C  300A               	movlw	10
  4945  011D  00F7               	movwf	___awdiv@divisor
  4946  011E  3000               	movlw	0
  4947  011F  00F8               	movwf	___awdiv@divisor+1
  4948  0120  0846               	movf	fround@prec,w
  4949  0121  00BE               	movwf	??_fround+4
  4950  0122  01BF               	clrf	??_fround+5
  4951  0123  083E               	movf	??_fround+4,w
  4952  0124  00F9               	movwf	___awdiv@dividend
  4953  0125  083F               	movf	??_fround+5,w
  4954  0126  00FA               	movwf	___awdiv@dividend+1
  4955  0127  160A  158A  23EC  120A  118A  	fcall	___awdiv
  4956  012C  0877               	movf	?___awdiv,w
  4957  012D  3E09               	addlw	9
  4958  012E  160A  158A  21AA  120A  118A  	fcall	___bmul
  4959  0133  3E29               	addlw	low (__npowers_-__stringbase)
  4960  0134  0084               	movwf	4
  4961  0135  160A  118A  200A  120A  118A  	fcall	stringdir
  4962  013A  1283               	bcf	3,5	;RP0=0, select bank0
  4963  013B  1303               	bcf	3,6	;RP1=0, select bank0
  4964  013C  00AA               	movwf	___ftmul@f2
  4965  013D  160A  118A  200A  120A  118A  	fcall	stringdir
  4966  0142  00AB               	movwf	___ftmul@f2+1
  4967  0143  160A  118A  200A  120A  118A  	fcall	stringdir
  4968  0148  00AC               	movwf	___ftmul@f2+2
  4969  0149  160A  118A  2215  120A  118A  	fcall	___ftmul
  4970  014E  1283               	bcf	3,5	;RP0=0, select bank0
  4971  014F  1303               	bcf	3,6	;RP1=0, select bank0
  4972  0150  0827               	movf	?___ftmul,w
  4973  0151  00C3               	movwf	_fround$663
  4974  0152  0828               	movf	?___ftmul+1,w
  4975  0153  00C4               	movwf	_fround$663+1
  4976  0154  0829               	movf	?___ftmul+2,w
  4977  0155  00C5               	movwf	_fround$663+2
  4978                           
  4979                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4980  0156  3000               	movlw	0
  4981  0157  00A7               	movwf	___ftmul@f1
  4982  0158  3000               	movlw	0
  4983  0159  00A8               	movwf	___ftmul@f1+1
  4984  015A  303F               	movlw	63
  4985  015B  00A9               	movwf	___ftmul@f1+2
  4986  015C  0843               	movf	_fround$663,w
  4987  015D  00AA               	movwf	___ftmul@f2
  4988  015E  0844               	movf	_fround$663+1,w
  4989  015F  00AB               	movwf	___ftmul@f2+1
  4990  0160  0845               	movf	_fround$663+2,w
  4991  0161  00AC               	movwf	___ftmul@f2+2
  4992  0162  160A  118A  2215   	fcall	___ftmul
  4993  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4994  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4995  0167  0827               	movf	?___ftmul,w
  4996  0168  00B7               	movwf	?_fround
  4997  0169  0828               	movf	?___ftmul+1,w
  4998  016A  00B8               	movwf	?_fround+1
  4999  016B  0829               	movf	?___ftmul+2,w
  5000  016C  00B9               	movwf	?_fround+2
  5001  016D  0008               	return
  5002  016E                     l2522:	
  5003                           
  5004                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  5005  016E  3000               	movlw	0
  5006  016F  00A7               	movwf	___ftmul@f1
  5007  0170  3000               	movlw	0
  5008  0171  00A8               	movwf	___ftmul@f1+1
  5009  0172  303F               	movlw	63
  5010  0173  00A9               	movwf	___ftmul@f1+2
  5011  0174  3003               	movlw	3
  5012  0175  00BA               	movwf	??_fround
  5013  0176  083A               	movf	??_fround,w
  5014  0177  00A4               	movwf	___bmul@multiplicand
  5015  0178  0846               	movf	fround@prec,w
  5016  0179  160A  158A  21AA  120A  118A  	fcall	___bmul
  5017  017E  3E29               	addlw	low (__npowers_-__stringbase)
  5018  017F  0084               	movwf	4
  5019  0180  160A  118A  200A  120A  118A  	fcall	stringdir
  5020  0185  1283               	bcf	3,5	;RP0=0, select bank0
  5021  0186  1303               	bcf	3,6	;RP1=0, select bank0
  5022  0187  00AA               	movwf	___ftmul@f2
  5023  0188  160A  118A  200A  120A  118A  	fcall	stringdir
  5024  018D  00AB               	movwf	___ftmul@f2+1
  5025  018E  160A  118A  200A  120A  118A  	fcall	stringdir
  5026  0193  00AC               	movwf	___ftmul@f2+2
  5027  0194  160A  118A  2215   	fcall	___ftmul
  5028  0197  1283               	bcf	3,5	;RP0=0, select bank0
  5029  0198  1303               	bcf	3,6	;RP1=0, select bank0
  5030  0199  0827               	movf	?___ftmul,w
  5031  019A  00B7               	movwf	?_fround
  5032  019B  0828               	movf	?___ftmul+1,w
  5033  019C  00B8               	movwf	?_fround+1
  5034  019D  0829               	movf	?___ftmul+2,w
  5035  019E  00B9               	movwf	?_fround+2
  5036  019F  0008               	return
  5037  01A0                     __end_of_fround:	
  5038                           
  5039                           	psect	text5
  5040  10F8                     __ptext5:	
  5041 ;; *************** function ___awmod *****************
  5042 ;; Defined at:
  5043 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;  divisor         2    0[COMMON] int 
  5046 ;;  dividend        2    2[COMMON] int 
  5047 ;; Auto vars:     Size  Location     Type
  5048 ;;  sign            1    6[COMMON] unsigned char 
  5049 ;;  counter         1    5[COMMON] unsigned char 
  5050 ;; Return value:  Size  Location     Type
  5051 ;;                  2    0[COMMON] int 
  5052 ;; Registers used:
  5053 ;;		wreg, status,2, status,0
  5054 ;; Tracked objects:
  5055 ;;		On entry : 0/0
  5056 ;;		On exit  : 0/0
  5057 ;;		Unchanged: 0/0
  5058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5059 ;;      Params:         4       0       0       0       0
  5060 ;;      Locals:         2       0       0       0       0
  5061 ;;      Temps:          1       0       0       0       0
  5062 ;;      Totals:         7       0       0       0       0
  5063 ;;Total ram usage:        7 bytes
  5064 ;; Hardware stack levels used:    1
  5065 ;; This function calls:
  5066 ;;		Nothing
  5067 ;; This function is called by:
  5068 ;;		_fround
  5069 ;;		_scale
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           
  5073                           
  5074                           ;psect for function ___awmod
  5075  10F8                     ___awmod:	
  5076                           
  5077                           ;incstack = 0
  5078                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5079  10F8  01F6               	clrf	___awmod@sign
  5080  10F9  1FF3               	btfss	___awmod@dividend+1,7
  5081  10FA  2902               	goto	l2310
  5082  10FB  09F2               	comf	___awmod@dividend,f
  5083  10FC  09F3               	comf	___awmod@dividend+1,f
  5084  10FD  0AF2               	incf	___awmod@dividend,f
  5085  10FE  1903               	skipnz
  5086  10FF  0AF3               	incf	___awmod@dividend+1,f
  5087  1100  01F6               	clrf	___awmod@sign
  5088  1101  0AF6               	incf	___awmod@sign,f
  5089  1102                     l2310:	
  5090  1102  1FF1               	btfss	___awmod@divisor+1,7
  5091  1103  2909               	goto	l2314
  5092  1104  09F0               	comf	___awmod@divisor,f
  5093  1105  09F1               	comf	___awmod@divisor+1,f
  5094  1106  0AF0               	incf	___awmod@divisor,f
  5095  1107  1903               	skipnz
  5096  1108  0AF1               	incf	___awmod@divisor+1,f
  5097  1109                     l2314:	
  5098  1109  0871               	movf	___awmod@divisor+1,w
  5099  110A  0470               	iorwf	___awmod@divisor,w
  5100  110B  1903               	skipnz
  5101  110C  2936               	goto	l2332
  5102  110D  01F5               	clrf	___awmod@counter
  5103  110E  0AF5               	incf	___awmod@counter,f
  5104  110F                     l2322:	
  5105  110F  1BF1               	btfsc	___awmod@divisor+1,7
  5106  1110  291D               	goto	l2324
  5107  1111  3001               	movlw	1
  5108  1112                     u3005:	
  5109  1112  1003               	clrc
  5110  1113  0DF0               	rlf	___awmod@divisor,f
  5111  1114  0DF1               	rlf	___awmod@divisor+1,f
  5112  1115  3EFF               	addlw	-1
  5113  1116  1D03               	skipz
  5114  1117  2912               	goto	u3005
  5115  1118  3001               	movlw	1
  5116  1119  00F4               	movwf	??___awmod
  5117  111A  0874               	movf	??___awmod,w
  5118  111B  07F5               	addwf	___awmod@counter,f
  5119  111C  290F               	goto	l2322
  5120  111D                     l2324:	
  5121  111D  0871               	movf	___awmod@divisor+1,w
  5122  111E  0273               	subwf	___awmod@dividend+1,w
  5123  111F  1D03               	skipz
  5124  1120  2923               	goto	u3025
  5125  1121  0870               	movf	___awmod@divisor,w
  5126  1122  0272               	subwf	___awmod@dividend,w
  5127  1123                     u3025:	
  5128  1123  1C03               	skipc
  5129  1124  292B               	goto	l2328
  5130  1125  0870               	movf	___awmod@divisor,w
  5131  1126  02F2               	subwf	___awmod@dividend,f
  5132  1127  0871               	movf	___awmod@divisor+1,w
  5133  1128  1C03               	skipc
  5134  1129  03F3               	decf	___awmod@dividend+1,f
  5135  112A  02F3               	subwf	___awmod@dividend+1,f
  5136  112B                     l2328:	
  5137  112B  3001               	movlw	1
  5138  112C                     u3035:	
  5139  112C  1003               	clrc
  5140  112D  0CF1               	rrf	___awmod@divisor+1,f
  5141  112E  0CF0               	rrf	___awmod@divisor,f
  5142  112F  3EFF               	addlw	-1
  5143  1130  1D03               	skipz
  5144  1131  292C               	goto	u3035
  5145  1132  3001               	movlw	1
  5146  1133  02F5               	subwf	___awmod@counter,f
  5147  1134  1D03               	btfss	3,2
  5148  1135  291D               	goto	l2324
  5149  1136                     l2332:	
  5150  1136  0876               	movf	___awmod@sign,w
  5151  1137  1903               	btfsc	3,2
  5152  1138  293E               	goto	l2336
  5153  1139  09F2               	comf	___awmod@dividend,f
  5154  113A  09F3               	comf	___awmod@dividend+1,f
  5155  113B  0AF2               	incf	___awmod@dividend,f
  5156  113C  1903               	skipnz
  5157  113D  0AF3               	incf	___awmod@dividend+1,f
  5158  113E                     l2336:	
  5159  113E  0873               	movf	___awmod@dividend+1,w
  5160  113F  01F1               	clrf	?___awmod+1
  5161  1140  07F1               	addwf	?___awmod+1,f
  5162  1141  0872               	movf	___awmod@dividend,w
  5163  1142  01F0               	clrf	?___awmod
  5164  1143  07F0               	addwf	?___awmod,f
  5165  1144  0008               	return
  5166  1145                     __end_of___awmod:	
  5167                           
  5168                           	psect	text6
  5169  1BEC                     __ptext6:	
  5170 ;; *************** function ___awdiv *****************
  5171 ;; Defined at:
  5172 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  5173 ;; Parameters:    Size  Location     Type
  5174 ;;  divisor         2    7[COMMON] int 
  5175 ;;  dividend        2    9[COMMON] int 
  5176 ;; Auto vars:     Size  Location     Type
  5177 ;;  quotient        2    2[BANK0 ] int 
  5178 ;;  sign            1    1[BANK0 ] unsigned char 
  5179 ;;  counter         1    0[BANK0 ] unsigned char 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  2    7[COMMON] int 
  5182 ;; Registers used:
  5183 ;;		wreg, status,2, status,0
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5189 ;;      Params:         4       0       0       0       0
  5190 ;;      Locals:         0       4       0       0       0
  5191 ;;      Temps:          1       0       0       0       0
  5192 ;;      Totals:         5       4       0       0       0
  5193 ;;Total ram usage:        9 bytes
  5194 ;; Hardware stack levels used:    1
  5195 ;; This function calls:
  5196 ;;		Nothing
  5197 ;; This function is called by:
  5198 ;;		_fround
  5199 ;;		_scale
  5200 ;;		_sprintf
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function ___awdiv
  5206  1BEC                     ___awdiv:	
  5207                           
  5208                           ;incstack = 0
  5209                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5210  1BEC  1283               	bcf	3,5	;RP0=0, select bank0
  5211  1BED  1303               	bcf	3,6	;RP1=0, select bank0
  5212  1BEE  01A1               	clrf	___awdiv@sign
  5213  1BEF  1FF8               	btfss	___awdiv@divisor+1,7
  5214  1BF0  2BF8               	goto	l2266
  5215  1BF1  09F7               	comf	___awdiv@divisor,f
  5216  1BF2  09F8               	comf	___awdiv@divisor+1,f
  5217  1BF3  0AF7               	incf	___awdiv@divisor,f
  5218  1BF4  1903               	skipnz
  5219  1BF5  0AF8               	incf	___awdiv@divisor+1,f
  5220  1BF6  01A1               	clrf	___awdiv@sign
  5221  1BF7  0AA1               	incf	___awdiv@sign,f
  5222  1BF8                     l2266:	
  5223  1BF8  1FFA               	btfss	___awdiv@dividend+1,7
  5224  1BF9  2C03               	goto	l2272
  5225  1BFA  09F9               	comf	___awdiv@dividend,f
  5226  1BFB  09FA               	comf	___awdiv@dividend+1,f
  5227  1BFC  0AF9               	incf	___awdiv@dividend,f
  5228  1BFD  1903               	skipnz
  5229  1BFE  0AFA               	incf	___awdiv@dividend+1,f
  5230  1BFF  3001               	movlw	1
  5231  1C00  00FB               	movwf	??___awdiv
  5232  1C01  087B               	movf	??___awdiv,w
  5233  1C02  06A1               	xorwf	___awdiv@sign,f
  5234  1C03                     l2272:	
  5235  1C03  01A2               	clrf	___awdiv@quotient
  5236  1C04  01A3               	clrf	___awdiv@quotient+1
  5237  1C05  0878               	movf	___awdiv@divisor+1,w
  5238  1C06  0477               	iorwf	___awdiv@divisor,w
  5239  1C07  1903               	skipnz
  5240  1C08  2C3A               	goto	l2294
  5241  1C09  01A0               	clrf	___awdiv@counter
  5242  1C0A  0AA0               	incf	___awdiv@counter,f
  5243  1C0B                     l2282:	
  5244  1C0B  1BF8               	btfsc	___awdiv@divisor+1,7
  5245  1C0C  2C19               	goto	l2284
  5246  1C0D  3001               	movlw	1
  5247  1C0E                     u2905:	
  5248  1C0E  1003               	clrc
  5249  1C0F  0DF7               	rlf	___awdiv@divisor,f
  5250  1C10  0DF8               	rlf	___awdiv@divisor+1,f
  5251  1C11  3EFF               	addlw	-1
  5252  1C12  1D03               	skipz
  5253  1C13  2C0E               	goto	u2905
  5254  1C14  3001               	movlw	1
  5255  1C15  00FB               	movwf	??___awdiv
  5256  1C16  087B               	movf	??___awdiv,w
  5257  1C17  07A0               	addwf	___awdiv@counter,f
  5258  1C18  2C0B               	goto	l2282
  5259  1C19                     l2284:	
  5260  1C19  3001               	movlw	1
  5261  1C1A                     u2925:	
  5262  1C1A  1003               	clrc
  5263  1C1B  0DA2               	rlf	___awdiv@quotient,f
  5264  1C1C  0DA3               	rlf	___awdiv@quotient+1,f
  5265  1C1D  3EFF               	addlw	-1
  5266  1C1E  1D03               	skipz
  5267  1C1F  2C1A               	goto	u2925
  5268  1C20  0878               	movf	___awdiv@divisor+1,w
  5269  1C21  027A               	subwf	___awdiv@dividend+1,w
  5270  1C22  1D03               	skipz
  5271  1C23  2C26               	goto	u2935
  5272  1C24  0877               	movf	___awdiv@divisor,w
  5273  1C25  0279               	subwf	___awdiv@dividend,w
  5274  1C26                     u2935:	
  5275  1C26  1C03               	skipc
  5276  1C27  2C2F               	goto	l2290
  5277  1C28  0877               	movf	___awdiv@divisor,w
  5278  1C29  02F9               	subwf	___awdiv@dividend,f
  5279  1C2A  0878               	movf	___awdiv@divisor+1,w
  5280  1C2B  1C03               	skipc
  5281  1C2C  03FA               	decf	___awdiv@dividend+1,f
  5282  1C2D  02FA               	subwf	___awdiv@dividend+1,f
  5283  1C2E  1422               	bsf	___awdiv@quotient,0
  5284  1C2F                     l2290:	
  5285  1C2F  3001               	movlw	1
  5286  1C30                     u2945:	
  5287  1C30  1003               	clrc
  5288  1C31  0CF8               	rrf	___awdiv@divisor+1,f
  5289  1C32  0CF7               	rrf	___awdiv@divisor,f
  5290  1C33  3EFF               	addlw	-1
  5291  1C34  1D03               	skipz
  5292  1C35  2C30               	goto	u2945
  5293  1C36  3001               	movlw	1
  5294  1C37  02A0               	subwf	___awdiv@counter,f
  5295  1C38  1D03               	btfss	3,2
  5296  1C39  2C19               	goto	l2284
  5297  1C3A                     l2294:	
  5298  1C3A  0821               	movf	___awdiv@sign,w
  5299  1C3B  1903               	btfsc	3,2
  5300  1C3C  2C42               	goto	l2298
  5301  1C3D  09A2               	comf	___awdiv@quotient,f
  5302  1C3E  09A3               	comf	___awdiv@quotient+1,f
  5303  1C3F  0AA2               	incf	___awdiv@quotient,f
  5304  1C40  1903               	skipnz
  5305  1C41  0AA3               	incf	___awdiv@quotient+1,f
  5306  1C42                     l2298:	
  5307  1C42  0823               	movf	___awdiv@quotient+1,w
  5308  1C43  01F8               	clrf	?___awdiv+1
  5309  1C44  07F8               	addwf	?___awdiv+1,f
  5310  1C45  0822               	movf	___awdiv@quotient,w
  5311  1C46  01F7               	clrf	?___awdiv
  5312  1C47  07F7               	addwf	?___awdiv,f
  5313  1C48  0008               	return
  5314  1C49                     __end_of___awdiv:	
  5315                           
  5316                           	psect	text7
  5317  0805                     __ptext7:	
  5318 ;; *************** function __tdiv_to_l_ *****************
  5319 ;; Defined at:
  5320 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;  f1              3    0[COMMON] float 
  5323 ;;  f2              3    3[COMMON] float 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  quot            4    0[BANK0 ] unsigned long 
  5326 ;;  exp1            1    5[BANK0 ] unsigned char 
  5327 ;;  cntr            1    4[BANK0 ] unsigned char 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  4    0[COMMON] unsigned long 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5337 ;;      Params:         6       0       0       0       0
  5338 ;;      Locals:         0       6       0       0       0
  5339 ;;      Temps:          4       0       0       0       0
  5340 ;;      Totals:        10       6       0       0       0
  5341 ;;Total ram usage:       16 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_sprintf
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           
  5351                           ;psect for function __tdiv_to_l_
  5352  0805                     __tdiv_to_l_:	
  5353                           
  5354                           ;incstack = 0
  5355                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5356  0805  0870               	movf	__tdiv_to_l_@f1,w
  5357  0806  00F6               	movwf	??__tdiv_to_l_
  5358  0807  0871               	movf	__tdiv_to_l_@f1+1,w
  5359  0808  00F7               	movwf	??__tdiv_to_l_+1
  5360  0809  0872               	movf	__tdiv_to_l_@f1+2,w
  5361  080A  00F8               	movwf	??__tdiv_to_l_+2
  5362  080B  1003               	clrc
  5363  080C  0D77               	rlf	??__tdiv_to_l_+1,w
  5364  080D  0D78               	rlf	??__tdiv_to_l_+2,w
  5365  080E  00F9               	movwf	??__tdiv_to_l_+3
  5366  080F  0879               	movf	??__tdiv_to_l_+3,w
  5367  0810  1283               	bcf	3,5	;RP0=0, select bank0
  5368  0811  1303               	bcf	3,6	;RP1=0, select bank0
  5369  0812  00A5               	movwf	__tdiv_to_l_@exp1
  5370  0813  08A5               	movf	__tdiv_to_l_@exp1,f
  5371  0814  1D03               	skipz
  5372  0815  281F               	goto	l2584
  5373  0816  3000               	movlw	0
  5374  0817  00F3               	movwf	?__tdiv_to_l_+3
  5375  0818  3000               	movlw	0
  5376  0819  00F2               	movwf	?__tdiv_to_l_+2
  5377  081A  3000               	movlw	0
  5378  081B  00F1               	movwf	?__tdiv_to_l_+1
  5379  081C  3000               	movlw	0
  5380  081D  00F0               	movwf	?__tdiv_to_l_
  5381  081E  0008               	return
  5382  081F                     l2584:	
  5383  081F  0873               	movf	__tdiv_to_l_@f2,w
  5384  0820  00F6               	movwf	??__tdiv_to_l_
  5385  0821  0874               	movf	__tdiv_to_l_@f2+1,w
  5386  0822  00F7               	movwf	??__tdiv_to_l_+1
  5387  0823  0875               	movf	__tdiv_to_l_@f2+2,w
  5388  0824  00F8               	movwf	??__tdiv_to_l_+2
  5389  0825  1003               	clrc
  5390  0826  0D77               	rlf	??__tdiv_to_l_+1,w
  5391  0827  0D78               	rlf	??__tdiv_to_l_+2,w
  5392  0828  00F9               	movwf	??__tdiv_to_l_+3
  5393  0829  0879               	movf	??__tdiv_to_l_+3,w
  5394  082A  00A4               	movwf	__tdiv_to_l_@cntr
  5395  082B  08A4               	movf	__tdiv_to_l_@cntr,f
  5396  082C  1D03               	skipz
  5397  082D  2837               	goto	l488
  5398  082E  3000               	movlw	0
  5399  082F  00F3               	movwf	?__tdiv_to_l_+3
  5400  0830  3000               	movlw	0
  5401  0831  00F2               	movwf	?__tdiv_to_l_+2
  5402  0832  3000               	movlw	0
  5403  0833  00F1               	movwf	?__tdiv_to_l_+1
  5404  0834  3000               	movlw	0
  5405  0835  00F0               	movwf	?__tdiv_to_l_
  5406  0836  0008               	return
  5407  0837                     l488:	
  5408  0837  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5409  0838  30FF               	movlw	255
  5410  0839  05F0               	andwf	__tdiv_to_l_@f1,f
  5411  083A  30FF               	movlw	255
  5412  083B  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5413  083C  3000               	movlw	0
  5414  083D  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5415  083E  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5416  083F  30FF               	movlw	255
  5417  0840  05F3               	andwf	__tdiv_to_l_@f2,f
  5418  0841  30FF               	movlw	255
  5419  0842  05F4               	andwf	__tdiv_to_l_@f2+1,f
  5420  0843  3000               	movlw	0
  5421  0844  05F5               	andwf	__tdiv_to_l_@f2+2,f
  5422  0845  3000               	movlw	0
  5423  0846  00A3               	movwf	__tdiv_to_l_@quot+3
  5424  0847  3000               	movlw	0
  5425  0848  00A2               	movwf	__tdiv_to_l_@quot+2
  5426  0849  3000               	movlw	0
  5427  084A  00A1               	movwf	__tdiv_to_l_@quot+1
  5428  084B  3000               	movlw	0
  5429  084C  00A0               	movwf	__tdiv_to_l_@quot
  5430  084D  307F               	movlw	127
  5431  084E  02A5               	subwf	__tdiv_to_l_@exp1,f
  5432  084F  3098               	movlw	152
  5433  0850  0724               	addwf	__tdiv_to_l_@cntr,w
  5434  0851  00F6               	movwf	??__tdiv_to_l_
  5435  0852  0876               	movf	??__tdiv_to_l_,w
  5436  0853  02A5               	subwf	__tdiv_to_l_@exp1,f
  5437  0854  3018               	movlw	24
  5438  0855  00F6               	movwf	??__tdiv_to_l_
  5439  0856  0876               	movf	??__tdiv_to_l_,w
  5440  0857  00A4               	movwf	__tdiv_to_l_@cntr
  5441  0858                     l2598:	
  5442  0858  3001               	movlw	1
  5443  0859  00F6               	movwf	??__tdiv_to_l_
  5444  085A                     u3355:	
  5445  085A  1003               	clrc
  5446  085B  0DA0               	rlf	__tdiv_to_l_@quot,f
  5447  085C  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5448  085D  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5449  085E  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5450  085F  0BF6               	decfsz	??__tdiv_to_l_,f
  5451  0860  285A               	goto	u3355
  5452  0861  0875               	movf	__tdiv_to_l_@f2+2,w
  5453  0862  0272               	subwf	__tdiv_to_l_@f1+2,w
  5454  0863  1D03               	skipz
  5455  0864  286B               	goto	u3365
  5456  0865  0874               	movf	__tdiv_to_l_@f2+1,w
  5457  0866  0271               	subwf	__tdiv_to_l_@f1+1,w
  5458  0867  1D03               	skipz
  5459  0868  286B               	goto	u3365
  5460  0869  0873               	movf	__tdiv_to_l_@f2,w
  5461  086A  0270               	subwf	__tdiv_to_l_@f1,w
  5462  086B                     u3365:	
  5463  086B  1C03               	skipc
  5464  086C  2878               	goto	l2606
  5465  086D  0873               	movf	__tdiv_to_l_@f2,w
  5466  086E  02F0               	subwf	__tdiv_to_l_@f1,f
  5467  086F  0874               	movf	__tdiv_to_l_@f2+1,w
  5468  0870  1C03               	skipc
  5469  0871  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  5470  0872  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5471  0873  0875               	movf	__tdiv_to_l_@f2+2,w
  5472  0874  1C03               	skipc
  5473  0875  0A75               	incf	__tdiv_to_l_@f2+2,w
  5474  0876  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5475  0877  1420               	bsf	__tdiv_to_l_@quot,0
  5476  0878                     l2606:	
  5477  0878  3001               	movlw	1
  5478  0879                     u3375:	
  5479  0879  1003               	clrc
  5480  087A  0DF0               	rlf	__tdiv_to_l_@f1,f
  5481  087B  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5482  087C  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5483  087D  3EFF               	addlw	-1
  5484  087E  1D03               	skipz
  5485  087F  2879               	goto	u3375
  5486  0880  3001               	movlw	1
  5487  0881  02A4               	subwf	__tdiv_to_l_@cntr,f
  5488  0882  1D03               	btfss	3,2
  5489  0883  2858               	goto	l2598
  5490  0884  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5491  0885  28A4               	goto	l2618
  5492  0886  0825               	movf	__tdiv_to_l_@exp1,w
  5493  0887  3A80               	xorlw	128
  5494  0888  3E97               	addlw	151
  5495  0889  1803               	skipnc
  5496  088A  2894               	goto	l2616
  5497  088B  3000               	movlw	0
  5498  088C  00F3               	movwf	?__tdiv_to_l_+3
  5499  088D  3000               	movlw	0
  5500  088E  00F2               	movwf	?__tdiv_to_l_+2
  5501  088F  3000               	movlw	0
  5502  0890  00F1               	movwf	?__tdiv_to_l_+1
  5503  0891  3000               	movlw	0
  5504  0892  00F0               	movwf	?__tdiv_to_l_
  5505  0893  0008               	return
  5506  0894                     l2616:	
  5507  0894  3001               	movlw	1
  5508  0895                     u3415:	
  5509  0895  1003               	clrc
  5510  0896  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5511  0897  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5512  0898  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5513  0899  0CA0               	rrf	__tdiv_to_l_@quot,f
  5514  089A  3EFF               	addlw	-1
  5515  089B  1D03               	skipz
  5516  089C  2895               	goto	u3415
  5517  089D  3001               	movlw	1
  5518  089E  00F6               	movwf	??__tdiv_to_l_
  5519  089F  0876               	movf	??__tdiv_to_l_,w
  5520  08A0  07A5               	addwf	__tdiv_to_l_@exp1,f
  5521  08A1  1903               	btfsc	3,2
  5522  08A2  28BF               	goto	l2628
  5523  08A3  2894               	goto	l2616
  5524  08A4                     l2618:	
  5525  08A4  3018               	movlw	24
  5526  08A5  0225               	subwf	__tdiv_to_l_@exp1,w
  5527  08A6  1C03               	skipc
  5528  08A7  28BC               	goto	l2626
  5529  08A8  3000               	movlw	0
  5530  08A9  00F3               	movwf	?__tdiv_to_l_+3
  5531  08AA  3000               	movlw	0
  5532  08AB  00F2               	movwf	?__tdiv_to_l_+2
  5533  08AC  3000               	movlw	0
  5534  08AD  00F1               	movwf	?__tdiv_to_l_+1
  5535  08AE  3000               	movlw	0
  5536  08AF  00F0               	movwf	?__tdiv_to_l_
  5537  08B0  0008               	return
  5538  08B1                     l2624:	
  5539  08B1  3001               	movlw	1
  5540  08B2  00F6               	movwf	??__tdiv_to_l_
  5541  08B3                     u3445:	
  5542  08B3  1003               	clrc
  5543  08B4  0DA0               	rlf	__tdiv_to_l_@quot,f
  5544  08B5  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5545  08B6  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5546  08B7  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5547  08B8  0BF6               	decfsz	??__tdiv_to_l_,f
  5548  08B9  28B3               	goto	u3445
  5549  08BA  3001               	movlw	1
  5550  08BB  02A5               	subwf	__tdiv_to_l_@exp1,f
  5551  08BC                     l2626:	
  5552  08BC  08A5               	movf	__tdiv_to_l_@exp1,f
  5553  08BD  1D03               	skipz
  5554  08BE  28B1               	goto	l2624
  5555  08BF                     l2628:	
  5556  08BF  0823               	movf	__tdiv_to_l_@quot+3,w
  5557  08C0  00F3               	movwf	?__tdiv_to_l_+3
  5558  08C1  0822               	movf	__tdiv_to_l_@quot+2,w
  5559  08C2  00F2               	movwf	?__tdiv_to_l_+2
  5560  08C3  0821               	movf	__tdiv_to_l_@quot+1,w
  5561  08C4  00F1               	movwf	?__tdiv_to_l_+1
  5562  08C5  0820               	movf	__tdiv_to_l_@quot,w
  5563  08C6  00F0               	movwf	?__tdiv_to_l_
  5564  08C7  0008               	return
  5565  08C8                     __end_of__tdiv_to_l_:	
  5566                           
  5567                           	psect	text8
  5568  13F1                     __ptext8:	
  5569 ;; *************** function __div_to_l_ *****************
  5570 ;; Defined at:
  5571 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  f1              3    0[COMMON] unsigned long 
  5574 ;;  f2              3    3[COMMON] unsigned long 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  quot            4    0[BANK0 ] unsigned long 
  5577 ;;  exp1            1    5[BANK0 ] unsigned char 
  5578 ;;  cntr            1    4[BANK0 ] unsigned char 
  5579 ;; Return value:  Size  Location     Type
  5580 ;;                  4    0[COMMON] unsigned long 
  5581 ;; Registers used:
  5582 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5583 ;; Tracked objects:
  5584 ;;		On entry : 0/0
  5585 ;;		On exit  : 0/0
  5586 ;;		Unchanged: 0/0
  5587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5588 ;;      Params:         6       0       0       0       0
  5589 ;;      Locals:         0       6       0       0       0
  5590 ;;      Temps:          8       0       0       0       0
  5591 ;;      Totals:        14       6       0       0       0
  5592 ;;Total ram usage:       20 bytes
  5593 ;; Hardware stack levels used:    1
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_sprintf
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           
  5602                           ;psect for function __div_to_l_
  5603  13F1                     __div_to_l_:	
  5604                           
  5605                           ;incstack = 0
  5606                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5607  13F1  3070               	movlw	low __div_to_l_@f1
  5608  13F2  0084               	movwf	4
  5609  13F3  0800               	movf	0,w
  5610  13F4  00F6               	movwf	??__div_to_l_
  5611  13F5  0A84               	incf	4,f
  5612  13F6  0800               	movf	0,w
  5613  13F7  00F7               	movwf	??__div_to_l_+1
  5614  13F8  0A84               	incf	4,f
  5615  13F9  0800               	movf	0,w
  5616  13FA  00F8               	movwf	??__div_to_l_+2
  5617  13FB  0A84               	incf	4,f
  5618  13FC  0800               	movf	0,w
  5619  13FD  00F9               	movwf	??__div_to_l_+3
  5620  13FE  1003               	clrc
  5621  13FF  0D78               	rlf	??__div_to_l_+2,w
  5622  1400  0D79               	rlf	??__div_to_l_+3,w
  5623  1401  00FA               	movwf	??__div_to_l_+4
  5624  1402  087A               	movf	??__div_to_l_+4,w
  5625  1403  1283               	bcf	3,5	;RP0=0, select bank0
  5626  1404  1303               	bcf	3,6	;RP1=0, select bank0
  5627  1405  00A5               	movwf	__div_to_l_@exp1
  5628  1406  08A5               	movf	__div_to_l_@exp1,f
  5629  1407  1D03               	skipz
  5630  1408  2C12               	goto	l2638
  5631  1409  3000               	movlw	0
  5632  140A  00F3               	movwf	?__div_to_l_+3
  5633  140B  3000               	movlw	0
  5634  140C  00F2               	movwf	?__div_to_l_+2
  5635  140D  3000               	movlw	0
  5636  140E  00F1               	movwf	?__div_to_l_+1
  5637  140F  3000               	movlw	0
  5638  1410  00F0               	movwf	?__div_to_l_
  5639  1411  0008               	return
  5640  1412                     l2638:	
  5641  1412  3073               	movlw	low __div_to_l_@f2
  5642  1413  0084               	movwf	4
  5643  1414  0800               	movf	0,w
  5644  1415  00F6               	movwf	??__div_to_l_
  5645  1416  0A84               	incf	4,f
  5646  1417  0800               	movf	0,w
  5647  1418  00F7               	movwf	??__div_to_l_+1
  5648  1419  0A84               	incf	4,f
  5649  141A  0800               	movf	0,w
  5650  141B  00F8               	movwf	??__div_to_l_+2
  5651  141C  0A84               	incf	4,f
  5652  141D  0800               	movf	0,w
  5653  141E  00F9               	movwf	??__div_to_l_+3
  5654  141F  1003               	clrc
  5655  1420  0D78               	rlf	??__div_to_l_+2,w
  5656  1421  0D79               	rlf	??__div_to_l_+3,w
  5657  1422  00FA               	movwf	??__div_to_l_+4
  5658  1423  087A               	movf	??__div_to_l_+4,w
  5659  1424  00A4               	movwf	__div_to_l_@cntr
  5660  1425  08A4               	movf	__div_to_l_@cntr,f
  5661  1426  1D03               	skipz
  5662  1427  2C31               	goto	l2644
  5663  1428  3000               	movlw	0
  5664  1429  00F3               	movwf	?__div_to_l_+3
  5665  142A  3000               	movlw	0
  5666  142B  00F2               	movwf	?__div_to_l_+2
  5667  142C  3000               	movlw	0
  5668  142D  00F1               	movwf	?__div_to_l_+1
  5669  142E  3000               	movlw	0
  5670  142F  00F0               	movwf	?__div_to_l_
  5671  1430  0008               	return
  5672  1431                     l2644:	
  5673  1431  3070               	movlw	low __div_to_l_@f1
  5674  1432  0084               	movwf	4
  5675  1433  3000               	movlw	0
  5676  1434  0480               	iorwf	0,f
  5677  1435  0A84               	incf	4,f
  5678  1436  3000               	movlw	0
  5679  1437  0480               	iorwf	0,f
  5680  1438  0A84               	incf	4,f
  5681  1439  3080               	movlw	128
  5682  143A  0480               	iorwf	0,f
  5683  143B  0A84               	incf	4,f
  5684  143C  3000               	movlw	0
  5685  143D  0480               	iorwf	0,f
  5686  143E  3070               	movlw	low __div_to_l_@f1
  5687  143F  0084               	movwf	4
  5688  1440  30FF               	movlw	255
  5689  1441  0580               	andwf	0,f
  5690  1442  0A84               	incf	4,f
  5691  1443  30FF               	movlw	255
  5692  1444  0580               	andwf	0,f
  5693  1445  0A84               	incf	4,f
  5694  1446  30FF               	movlw	255
  5695  1447  0580               	andwf	0,f
  5696  1448  0A84               	incf	4,f
  5697  1449  3000               	movlw	0
  5698  144A  0580               	andwf	0,f
  5699  144B  3073               	movlw	low __div_to_l_@f2
  5700  144C  0084               	movwf	4
  5701  144D  3000               	movlw	0
  5702  144E  0480               	iorwf	0,f
  5703  144F  0A84               	incf	4,f
  5704  1450  3000               	movlw	0
  5705  1451  0480               	iorwf	0,f
  5706  1452  0A84               	incf	4,f
  5707  1453  3080               	movlw	128
  5708  1454  0480               	iorwf	0,f
  5709  1455  0A84               	incf	4,f
  5710  1456  3000               	movlw	0
  5711  1457  0480               	iorwf	0,f
  5712  1458  3073               	movlw	low __div_to_l_@f2
  5713  1459  0084               	movwf	4
  5714  145A  30FF               	movlw	255
  5715  145B  0580               	andwf	0,f
  5716  145C  0A84               	incf	4,f
  5717  145D  30FF               	movlw	255
  5718  145E  0580               	andwf	0,f
  5719  145F  0A84               	incf	4,f
  5720  1460  30FF               	movlw	255
  5721  1461  0580               	andwf	0,f
  5722  1462  0A84               	incf	4,f
  5723  1463  3000               	movlw	0
  5724  1464  0580               	andwf	0,f
  5725  1465  3000               	movlw	0
  5726  1466  00A3               	movwf	__div_to_l_@quot+3
  5727  1467  3000               	movlw	0
  5728  1468  00A2               	movwf	__div_to_l_@quot+2
  5729  1469  3000               	movlw	0
  5730  146A  00A1               	movwf	__div_to_l_@quot+1
  5731  146B  3000               	movlw	0
  5732  146C  00A0               	movwf	__div_to_l_@quot
  5733  146D  307F               	movlw	127
  5734  146E  02A5               	subwf	__div_to_l_@exp1,f
  5735  146F  30A0               	movlw	160
  5736  1470  0724               	addwf	__div_to_l_@cntr,w
  5737  1471  00F6               	movwf	??__div_to_l_
  5738  1472  0876               	movf	??__div_to_l_,w
  5739  1473  02A5               	subwf	__div_to_l_@exp1,f
  5740  1474  3020               	movlw	32
  5741  1475  00F6               	movwf	??__div_to_l_
  5742  1476  0876               	movf	??__div_to_l_,w
  5743  1477  00A4               	movwf	__div_to_l_@cntr
  5744  1478                     l2654:	
  5745  1478  3001               	movlw	1
  5746  1479  00F6               	movwf	??__div_to_l_
  5747  147A                     u3485:	
  5748  147A  1003               	clrc
  5749  147B  0DA0               	rlf	__div_to_l_@quot,f
  5750  147C  0DA1               	rlf	__div_to_l_@quot+1,f
  5751  147D  0DA2               	rlf	__div_to_l_@quot+2,f
  5752  147E  0DA3               	rlf	__div_to_l_@quot+3,f
  5753  147F  0BF6               	decfsz	??__div_to_l_,f
  5754  1480  2C7A               	goto	u3485
  5755  1481  3073               	movlw	low __div_to_l_@f2
  5756  1482  0084               	movwf	4
  5757  1483  0800               	movf	0,w
  5758  1484  00F6               	movwf	??__div_to_l_
  5759  1485  0A84               	incf	4,f
  5760  1486  0800               	movf	0,w
  5761  1487  00F7               	movwf	??__div_to_l_+1
  5762  1488  0A84               	incf	4,f
  5763  1489  0800               	movf	0,w
  5764  148A  00F8               	movwf	??__div_to_l_+2
  5765  148B  0A84               	incf	4,f
  5766  148C  0800               	movf	0,w
  5767  148D  00F9               	movwf	??__div_to_l_+3
  5768  148E  3070               	movlw	low __div_to_l_@f1
  5769  148F  0084               	movwf	4
  5770  1490  0800               	movf	0,w
  5771  1491  00FA               	movwf	??__div_to_l_+4
  5772  1492  0A84               	incf	4,f
  5773  1493  0800               	movf	0,w
  5774  1494  00FB               	movwf	??__div_to_l_+5
  5775  1495  0A84               	incf	4,f
  5776  1496  0800               	movf	0,w
  5777  1497  00FC               	movwf	??__div_to_l_+6
  5778  1498  0A84               	incf	4,f
  5779  1499  0800               	movf	0,w
  5780  149A  00FD               	movwf	??__div_to_l_+7
  5781  149B  0879               	movf	??__div_to_l_+3,w
  5782  149C  027D               	subwf	??__div_to_l_+7,w
  5783  149D  1D03               	skipz
  5784  149E  2CA9               	goto	u3495
  5785  149F  0878               	movf	??__div_to_l_+2,w
  5786  14A0  027C               	subwf	??__div_to_l_+6,w
  5787  14A1  1D03               	skipz
  5788  14A2  2CA9               	goto	u3495
  5789  14A3  0877               	movf	??__div_to_l_+1,w
  5790  14A4  027B               	subwf	??__div_to_l_+5,w
  5791  14A5  1D03               	skipz
  5792  14A6  2CA9               	goto	u3495
  5793  14A7  0876               	movf	??__div_to_l_,w
  5794  14A8  027A               	subwf	??__div_to_l_+4,w
  5795  14A9                     u3495:	
  5796  14A9  1C03               	skipc
  5797  14AA  2CCE               	goto	l413
  5798  14AB  3073               	movlw	low __div_to_l_@f2
  5799  14AC  0084               	movwf	4
  5800  14AD  0800               	movf	0,w
  5801  14AE  00F6               	movwf	??__div_to_l_
  5802  14AF  0A84               	incf	4,f
  5803  14B0  0800               	movf	0,w
  5804  14B1  00F7               	movwf	??__div_to_l_+1
  5805  14B2  0A84               	incf	4,f
  5806  14B3  0800               	movf	0,w
  5807  14B4  00F8               	movwf	??__div_to_l_+2
  5808  14B5  0A84               	incf	4,f
  5809  14B6  0800               	movf	0,w
  5810  14B7  00F9               	movwf	??__div_to_l_+3
  5811  14B8  3070               	movlw	low __div_to_l_@f1
  5812  14B9  0084               	movwf	4
  5813  14BA  0876               	movf	??__div_to_l_,w
  5814  14BB  0280               	subwf	0,f
  5815  14BC  0A84               	incf	4,f
  5816  14BD  0877               	movf	??__div_to_l_+1,w
  5817  14BE  1C03               	skipc
  5818  14BF  0F77               	incfsz	??__div_to_l_+1,w
  5819  14C0  0280               	subwf	0,f
  5820  14C1  0A84               	incf	4,f
  5821  14C2  0878               	movf	??__div_to_l_+2,w
  5822  14C3  1C03               	skipc
  5823  14C4  0F78               	incfsz	??__div_to_l_+2,w
  5824  14C5  0280               	subwf	0,f
  5825  14C6  0A84               	incf	4,f
  5826  14C7  0879               	movf	??__div_to_l_+3,w
  5827  14C8  1C03               	skipc
  5828  14C9  0A79               	incf	??__div_to_l_+3,w
  5829  14CA  0280               	subwf	0,f
  5830  14CB  3003               	movlw	3
  5831  14CC  0284               	subwf	4,f
  5832  14CD  1420               	bsf	__div_to_l_@quot,0
  5833  14CE                     l413:	
  5834  14CE  3070               	movlw	low __div_to_l_@f1
  5835  14CF  0084               	movwf	4
  5836  14D0  1003               	clrc
  5837  14D1  0D80               	rlf	0,f
  5838  14D2  0A84               	incf	4,f
  5839  14D3  0D80               	rlf	0,f
  5840  14D4  0A84               	incf	4,f
  5841  14D5  0D80               	rlf	0,f
  5842  14D6  0A84               	incf	4,f
  5843  14D7  0D80               	rlf	0,f
  5844  14D8  0384               	decf	4,f
  5845  14D9  0384               	decf	4,f
  5846  14DA  0384               	decf	4,f
  5847  14DB  3001               	movlw	1
  5848  14DC  02A4               	subwf	__div_to_l_@cntr,f
  5849  14DD  1D03               	btfss	3,2
  5850  14DE  2C78               	goto	l2654
  5851  14DF  1FA5               	btfss	__div_to_l_@exp1,7
  5852  14E0  2CFF               	goto	l2672
  5853  14E1  0825               	movf	__div_to_l_@exp1,w
  5854  14E2  3A80               	xorlw	128
  5855  14E3  3E9F               	addlw	159
  5856  14E4  1803               	skipnc
  5857  14E5  2CEF               	goto	l2670
  5858  14E6  3000               	movlw	0
  5859  14E7  00F3               	movwf	?__div_to_l_+3
  5860  14E8  3000               	movlw	0
  5861  14E9  00F2               	movwf	?__div_to_l_+2
  5862  14EA  3000               	movlw	0
  5863  14EB  00F1               	movwf	?__div_to_l_+1
  5864  14EC  3000               	movlw	0
  5865  14ED  00F0               	movwf	?__div_to_l_
  5866  14EE  0008               	return
  5867  14EF                     l2670:	
  5868  14EF  3001               	movlw	1
  5869  14F0                     u3535:	
  5870  14F0  1003               	clrc
  5871  14F1  0CA3               	rrf	__div_to_l_@quot+3,f
  5872  14F2  0CA2               	rrf	__div_to_l_@quot+2,f
  5873  14F3  0CA1               	rrf	__div_to_l_@quot+1,f
  5874  14F4  0CA0               	rrf	__div_to_l_@quot,f
  5875  14F5  3EFF               	addlw	-1
  5876  14F6  1D03               	skipz
  5877  14F7  2CF0               	goto	u3535
  5878  14F8  3001               	movlw	1
  5879  14F9  00F6               	movwf	??__div_to_l_
  5880  14FA  0876               	movf	??__div_to_l_,w
  5881  14FB  07A5               	addwf	__div_to_l_@exp1,f
  5882  14FC  1903               	btfsc	3,2
  5883  14FD  2D1A               	goto	l2682
  5884  14FE  2CEF               	goto	l2670
  5885  14FF                     l2672:	
  5886  14FF  3020               	movlw	32
  5887  1500  0225               	subwf	__div_to_l_@exp1,w
  5888  1501  1C03               	skipc
  5889  1502  2D17               	goto	l2680
  5890  1503  3000               	movlw	0
  5891  1504  00F3               	movwf	?__div_to_l_+3
  5892  1505  3000               	movlw	0
  5893  1506  00F2               	movwf	?__div_to_l_+2
  5894  1507  3000               	movlw	0
  5895  1508  00F1               	movwf	?__div_to_l_+1
  5896  1509  3000               	movlw	0
  5897  150A  00F0               	movwf	?__div_to_l_
  5898  150B  0008               	return
  5899  150C                     l2678:	
  5900  150C  3001               	movlw	1
  5901  150D  00F6               	movwf	??__div_to_l_
  5902  150E                     u3565:	
  5903  150E  1003               	clrc
  5904  150F  0DA0               	rlf	__div_to_l_@quot,f
  5905  1510  0DA1               	rlf	__div_to_l_@quot+1,f
  5906  1511  0DA2               	rlf	__div_to_l_@quot+2,f
  5907  1512  0DA3               	rlf	__div_to_l_@quot+3,f
  5908  1513  0BF6               	decfsz	??__div_to_l_,f
  5909  1514  2D0E               	goto	u3565
  5910  1515  3001               	movlw	1
  5911  1516  02A5               	subwf	__div_to_l_@exp1,f
  5912  1517                     l2680:	
  5913  1517  08A5               	movf	__div_to_l_@exp1,f
  5914  1518  1D03               	skipz
  5915  1519  2D0C               	goto	l2678
  5916  151A                     l2682:	
  5917  151A  0823               	movf	__div_to_l_@quot+3,w
  5918  151B  00F3               	movwf	?__div_to_l_+3
  5919  151C  0822               	movf	__div_to_l_@quot+2,w
  5920  151D  00F2               	movwf	?__div_to_l_+2
  5921  151E  0821               	movf	__div_to_l_@quot+1,w
  5922  151F  00F1               	movwf	?__div_to_l_+1
  5923  1520  0820               	movf	__div_to_l_@quot,w
  5924  1521  00F0               	movwf	?__div_to_l_
  5925  1522  0008               	return
  5926  1523                     __end_of__div_to_l_:	
  5927                           
  5928                           	psect	text9
  5929  1A3F                     __ptext9:	
  5930 ;; *************** function ___wmul *****************
  5931 ;; Defined at:
  5932 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  multiplier      2    0[COMMON] unsigned int 
  5935 ;;  multiplicand    2    2[COMMON] unsigned int 
  5936 ;; Auto vars:     Size  Location     Type
  5937 ;;  product         2    4[COMMON] unsigned int 
  5938 ;; Return value:  Size  Location     Type
  5939 ;;                  2    0[COMMON] unsigned int 
  5940 ;; Registers used:
  5941 ;;		wreg, status,2, status,0
  5942 ;; Tracked objects:
  5943 ;;		On entry : 0/0
  5944 ;;		On exit  : 0/0
  5945 ;;		Unchanged: 0/0
  5946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5947 ;;      Params:         4       0       0       0       0
  5948 ;;      Locals:         2       0       0       0       0
  5949 ;;      Temps:          0       0       0       0       0
  5950 ;;      Totals:         6       0       0       0       0
  5951 ;;Total ram usage:        6 bytes
  5952 ;; Hardware stack levels used:    1
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_sprintf
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           
  5961                           ;psect for function ___wmul
  5962  1A3F                     ___wmul:	
  5963                           
  5964                           ;incstack = 0
  5965                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5966  1A3F  01F4               	clrf	___wmul@product
  5967  1A40  01F5               	clrf	___wmul@product+1
  5968  1A41                     l2688:	
  5969  1A41  1C70               	btfss	___wmul@multiplier,0
  5970  1A42  2A49               	goto	l255
  5971  1A43  0872               	movf	___wmul@multiplicand,w
  5972  1A44  07F4               	addwf	___wmul@product,f
  5973  1A45  1803               	skipnc
  5974  1A46  0AF5               	incf	___wmul@product+1,f
  5975  1A47  0873               	movf	___wmul@multiplicand+1,w
  5976  1A48  07F5               	addwf	___wmul@product+1,f
  5977  1A49                     l255:	
  5978  1A49  3001               	movlw	1
  5979  1A4A                     u3595:	
  5980  1A4A  1003               	clrc
  5981  1A4B  0DF2               	rlf	___wmul@multiplicand,f
  5982  1A4C  0DF3               	rlf	___wmul@multiplicand+1,f
  5983  1A4D  3EFF               	addlw	-1
  5984  1A4E  1D03               	skipz
  5985  1A4F  2A4A               	goto	u3595
  5986  1A50  3001               	movlw	1
  5987  1A51                     u3605:	
  5988  1A51  1003               	clrc
  5989  1A52  0CF1               	rrf	___wmul@multiplier+1,f
  5990  1A53  0CF0               	rrf	___wmul@multiplier,f
  5991  1A54  3EFF               	addlw	-1
  5992  1A55  1D03               	skipz
  5993  1A56  2A51               	goto	u3605
  5994  1A57  0871               	movf	___wmul@multiplier+1,w
  5995  1A58  0470               	iorwf	___wmul@multiplier,w
  5996  1A59  1D03               	skipz
  5997  1A5A  2A41               	goto	l2688
  5998  1A5B  0875               	movf	___wmul@product+1,w
  5999  1A5C  01F1               	clrf	?___wmul+1
  6000  1A5D  07F1               	addwf	?___wmul+1,f
  6001  1A5E  0874               	movf	___wmul@product,w
  6002  1A5F  01F0               	clrf	?___wmul
  6003  1A60  07F0               	addwf	?___wmul,f
  6004  1A61  0008               	return
  6005  1A62                     __end_of___wmul:	
  6006                           
  6007                           	psect	text10
  6008  1B43                     __ptext10:	
  6009 ;; *************** function ___llmod *****************
  6010 ;; Defined at:
  6011 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  divisor         4    0[COMMON] unsigned long 
  6014 ;;  dividend        4    4[COMMON] unsigned long 
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;  counter         1    9[COMMON] unsigned char 
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  4    0[COMMON] unsigned long 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6026 ;;      Params:         8       0       0       0       0
  6027 ;;      Locals:         1       0       0       0       0
  6028 ;;      Temps:          1       0       0       0       0
  6029 ;;      Totals:        10       0       0       0       0
  6030 ;;Total ram usage:       10 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; This function calls:
  6033 ;;		Nothing
  6034 ;; This function is called by:
  6035 ;;		_sprintf
  6036 ;; This function uses a non-reentrant model
  6037 ;;
  6038                           
  6039                           
  6040                           ;psect for function ___llmod
  6041  1B43                     ___llmod:	
  6042                           
  6043                           ;incstack = 0
  6044                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6045  1B43  0873               	movf	___llmod@divisor+3,w
  6046  1B44  0472               	iorwf	___llmod@divisor+2,w
  6047  1B45  0471               	iorwf	___llmod@divisor+1,w
  6048  1B46  0470               	iorwf	___llmod@divisor,w
  6049  1B47  1903               	skipnz
  6050  1B48  2B86               	goto	l2738
  6051  1B49  01F9               	clrf	___llmod@counter
  6052  1B4A  0AF9               	incf	___llmod@counter,f
  6053  1B4B                     l2728:	
  6054  1B4B  1BF3               	btfsc	___llmod@divisor+3,7
  6055  1B4C  2B5B               	goto	l2730
  6056  1B4D  3001               	movlw	1
  6057  1B4E  00F8               	movwf	??___llmod
  6058  1B4F                     u3705:	
  6059  1B4F  1003               	clrc
  6060  1B50  0DF0               	rlf	___llmod@divisor,f
  6061  1B51  0DF1               	rlf	___llmod@divisor+1,f
  6062  1B52  0DF2               	rlf	___llmod@divisor+2,f
  6063  1B53  0DF3               	rlf	___llmod@divisor+3,f
  6064  1B54  0BF8               	decfsz	??___llmod,f
  6065  1B55  2B4F               	goto	u3705
  6066  1B56  3001               	movlw	1
  6067  1B57  00F8               	movwf	??___llmod
  6068  1B58  0878               	movf	??___llmod,w
  6069  1B59  07F9               	addwf	___llmod@counter,f
  6070  1B5A  2B4B               	goto	l2728
  6071  1B5B                     l2730:	
  6072  1B5B  0873               	movf	___llmod@divisor+3,w
  6073  1B5C  0277               	subwf	___llmod@dividend+3,w
  6074  1B5D  1D03               	skipz
  6075  1B5E  2B69               	goto	u3725
  6076  1B5F  0872               	movf	___llmod@divisor+2,w
  6077  1B60  0276               	subwf	___llmod@dividend+2,w
  6078  1B61  1D03               	skipz
  6079  1B62  2B69               	goto	u3725
  6080  1B63  0871               	movf	___llmod@divisor+1,w
  6081  1B64  0275               	subwf	___llmod@dividend+1,w
  6082  1B65  1D03               	skipz
  6083  1B66  2B69               	goto	u3725
  6084  1B67  0870               	movf	___llmod@divisor,w
  6085  1B68  0274               	subwf	___llmod@dividend,w
  6086  1B69                     u3725:	
  6087  1B69  1C03               	skipc
  6088  1B6A  2B79               	goto	l2734
  6089  1B6B  0870               	movf	___llmod@divisor,w
  6090  1B6C  02F4               	subwf	___llmod@dividend,f
  6091  1B6D  0871               	movf	___llmod@divisor+1,w
  6092  1B6E  1C03               	skipc
  6093  1B6F  0F71               	incfsz	___llmod@divisor+1,w
  6094  1B70  02F5               	subwf	___llmod@dividend+1,f
  6095  1B71  0872               	movf	___llmod@divisor+2,w
  6096  1B72  1C03               	skipc
  6097  1B73  0F72               	incfsz	___llmod@divisor+2,w
  6098  1B74  02F6               	subwf	___llmod@dividend+2,f
  6099  1B75  0873               	movf	___llmod@divisor+3,w
  6100  1B76  1C03               	skipc
  6101  1B77  0F73               	incfsz	___llmod@divisor+3,w
  6102  1B78  02F7               	subwf	___llmod@dividend+3,f
  6103  1B79                     l2734:	
  6104  1B79  3001               	movlw	1
  6105  1B7A                     u3735:	
  6106  1B7A  1003               	clrc
  6107  1B7B  0CF3               	rrf	___llmod@divisor+3,f
  6108  1B7C  0CF2               	rrf	___llmod@divisor+2,f
  6109  1B7D  0CF1               	rrf	___llmod@divisor+1,f
  6110  1B7E  0CF0               	rrf	___llmod@divisor,f
  6111  1B7F  3EFF               	addlw	-1
  6112  1B80  1D03               	skipz
  6113  1B81  2B7A               	goto	u3735
  6114  1B82  3001               	movlw	1
  6115  1B83  02F9               	subwf	___llmod@counter,f
  6116  1B84  1D03               	btfss	3,2
  6117  1B85  2B5B               	goto	l2730
  6118  1B86                     l2738:	
  6119  1B86  0877               	movf	___llmod@dividend+3,w
  6120  1B87  00F3               	movwf	?___llmod+3
  6121  1B88  0876               	movf	___llmod@dividend+2,w
  6122  1B89  00F2               	movwf	?___llmod+2
  6123  1B8A  0875               	movf	___llmod@dividend+1,w
  6124  1B8B  00F1               	movwf	?___llmod+1
  6125  1B8C  0874               	movf	___llmod@dividend,w
  6126  1B8D  00F0               	movwf	?___llmod
  6127  1B8E  0008               	return
  6128  1B8F                     __end_of___llmod:	
  6129                           
  6130                           	psect	text11
  6131  1C49                     __ptext11:	
  6132 ;; *************** function ___lldiv *****************
  6133 ;; Defined at:
  6134 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  divisor         4    0[COMMON] unsigned long 
  6137 ;;  dividend        4    4[COMMON] unsigned long 
  6138 ;; Auto vars:     Size  Location     Type
  6139 ;;  quotient        4    9[COMMON] unsigned long 
  6140 ;;  counter         1   13[COMMON] unsigned char 
  6141 ;; Return value:  Size  Location     Type
  6142 ;;                  4    0[COMMON] unsigned long 
  6143 ;; Registers used:
  6144 ;;		wreg, status,2, status,0
  6145 ;; Tracked objects:
  6146 ;;		On entry : 0/0
  6147 ;;		On exit  : 0/0
  6148 ;;		Unchanged: 0/0
  6149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6150 ;;      Params:         8       0       0       0       0
  6151 ;;      Locals:         5       0       0       0       0
  6152 ;;      Temps:          1       0       0       0       0
  6153 ;;      Totals:        14       0       0       0       0
  6154 ;;Total ram usage:       14 bytes
  6155 ;; Hardware stack levels used:    1
  6156 ;; This function calls:
  6157 ;;		Nothing
  6158 ;; This function is called by:
  6159 ;;		_sprintf
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           
  6164                           ;psect for function ___lldiv
  6165  1C49                     ___lldiv:	
  6166                           
  6167                           ;incstack = 0
  6168                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6169  1C49  3000               	movlw	0
  6170  1C4A  00FC               	movwf	___lldiv@quotient+3
  6171  1C4B  3000               	movlw	0
  6172  1C4C  00FB               	movwf	___lldiv@quotient+2
  6173  1C4D  3000               	movlw	0
  6174  1C4E  00FA               	movwf	___lldiv@quotient+1
  6175  1C4F  3000               	movlw	0
  6176  1C50  00F9               	movwf	___lldiv@quotient
  6177  1C51  0873               	movf	___lldiv@divisor+3,w
  6178  1C52  0472               	iorwf	___lldiv@divisor+2,w
  6179  1C53  0471               	iorwf	___lldiv@divisor+1,w
  6180  1C54  0470               	iorwf	___lldiv@divisor,w
  6181  1C55  1903               	skipnz
  6182  1C56  2C9E               	goto	l2718
  6183  1C57  01FD               	clrf	___lldiv@counter
  6184  1C58  0AFD               	incf	___lldiv@counter,f
  6185  1C59                     l2704:	
  6186  1C59  1BF3               	btfsc	___lldiv@divisor+3,7
  6187  1C5A  2C69               	goto	l2706
  6188  1C5B  3001               	movlw	1
  6189  1C5C  00F8               	movwf	??___lldiv
  6190  1C5D                     u3635:	
  6191  1C5D  1003               	clrc
  6192  1C5E  0DF0               	rlf	___lldiv@divisor,f
  6193  1C5F  0DF1               	rlf	___lldiv@divisor+1,f
  6194  1C60  0DF2               	rlf	___lldiv@divisor+2,f
  6195  1C61  0DF3               	rlf	___lldiv@divisor+3,f
  6196  1C62  0BF8               	decfsz	??___lldiv,f
  6197  1C63  2C5D               	goto	u3635
  6198  1C64  3001               	movlw	1
  6199  1C65  00F8               	movwf	??___lldiv
  6200  1C66  0878               	movf	??___lldiv,w
  6201  1C67  07FD               	addwf	___lldiv@counter,f
  6202  1C68  2C59               	goto	l2704
  6203  1C69                     l2706:	
  6204  1C69  3001               	movlw	1
  6205  1C6A  00F8               	movwf	??___lldiv
  6206  1C6B                     u3655:	
  6207  1C6B  1003               	clrc
  6208  1C6C  0DF9               	rlf	___lldiv@quotient,f
  6209  1C6D  0DFA               	rlf	___lldiv@quotient+1,f
  6210  1C6E  0DFB               	rlf	___lldiv@quotient+2,f
  6211  1C6F  0DFC               	rlf	___lldiv@quotient+3,f
  6212  1C70  0BF8               	decfsz	??___lldiv,f
  6213  1C71  2C6B               	goto	u3655
  6214  1C72  0873               	movf	___lldiv@divisor+3,w
  6215  1C73  0277               	subwf	___lldiv@dividend+3,w
  6216  1C74  1D03               	skipz
  6217  1C75  2C80               	goto	u3665
  6218  1C76  0872               	movf	___lldiv@divisor+2,w
  6219  1C77  0276               	subwf	___lldiv@dividend+2,w
  6220  1C78  1D03               	skipz
  6221  1C79  2C80               	goto	u3665
  6222  1C7A  0871               	movf	___lldiv@divisor+1,w
  6223  1C7B  0275               	subwf	___lldiv@dividend+1,w
  6224  1C7C  1D03               	skipz
  6225  1C7D  2C80               	goto	u3665
  6226  1C7E  0870               	movf	___lldiv@divisor,w
  6227  1C7F  0274               	subwf	___lldiv@dividend,w
  6228  1C80                     u3665:	
  6229  1C80  1C03               	skipc
  6230  1C81  2C91               	goto	l2714
  6231  1C82  0870               	movf	___lldiv@divisor,w
  6232  1C83  02F4               	subwf	___lldiv@dividend,f
  6233  1C84  0871               	movf	___lldiv@divisor+1,w
  6234  1C85  1C03               	skipc
  6235  1C86  0F71               	incfsz	___lldiv@divisor+1,w
  6236  1C87  02F5               	subwf	___lldiv@dividend+1,f
  6237  1C88  0872               	movf	___lldiv@divisor+2,w
  6238  1C89  1C03               	skipc
  6239  1C8A  0F72               	incfsz	___lldiv@divisor+2,w
  6240  1C8B  02F6               	subwf	___lldiv@dividend+2,f
  6241  1C8C  0873               	movf	___lldiv@divisor+3,w
  6242  1C8D  1C03               	skipc
  6243  1C8E  0F73               	incfsz	___lldiv@divisor+3,w
  6244  1C8F  02F7               	subwf	___lldiv@dividend+3,f
  6245  1C90  1479               	bsf	___lldiv@quotient,0
  6246  1C91                     l2714:	
  6247  1C91  3001               	movlw	1
  6248  1C92                     u3675:	
  6249  1C92  1003               	clrc
  6250  1C93  0CF3               	rrf	___lldiv@divisor+3,f
  6251  1C94  0CF2               	rrf	___lldiv@divisor+2,f
  6252  1C95  0CF1               	rrf	___lldiv@divisor+1,f
  6253  1C96  0CF0               	rrf	___lldiv@divisor,f
  6254  1C97  3EFF               	addlw	-1
  6255  1C98  1D03               	skipz
  6256  1C99  2C92               	goto	u3675
  6257  1C9A  3001               	movlw	1
  6258  1C9B  02FD               	subwf	___lldiv@counter,f
  6259  1C9C  1D03               	btfss	3,2
  6260  1C9D  2C69               	goto	l2706
  6261  1C9E                     l2718:	
  6262  1C9E  087C               	movf	___lldiv@quotient+3,w
  6263  1C9F  00F3               	movwf	?___lldiv+3
  6264  1CA0  087B               	movf	___lldiv@quotient+2,w
  6265  1CA1  00F2               	movwf	?___lldiv+2
  6266  1CA2  087A               	movf	___lldiv@quotient+1,w
  6267  1CA3  00F1               	movwf	?___lldiv+1
  6268  1CA4  0879               	movf	___lldiv@quotient,w
  6269  1CA5  00F0               	movwf	?___lldiv
  6270  1CA6  0008               	return
  6271  1CA7                     __end_of___lldiv:	
  6272                           
  6273                           	psect	text12
  6274  1A8D                     __ptext12:	
  6275 ;; *************** function _readADC *****************
  6276 ;; Defined at:
  6277 ;;		line 81 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\main.c"
  6278 ;; Parameters:    Size  Location     Type
  6279 ;;		None
  6280 ;; Auto vars:     Size  Location     Type
  6281 ;;  temp            2    4[COMMON] int 
  6282 ;; Return value:  Size  Location     Type
  6283 ;;                  2    0[COMMON] int 
  6284 ;; Registers used:
  6285 ;;		wreg, status,2, status,0, btemp+1
  6286 ;; Tracked objects:
  6287 ;;		On entry : 0/0
  6288 ;;		On exit  : 0/0
  6289 ;;		Unchanged: 0/0
  6290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6291 ;;      Params:         2       0       0       0       0
  6292 ;;      Locals:         2       0       0       0       0
  6293 ;;      Temps:          2       0       0       0       0
  6294 ;;      Totals:         6       0       0       0       0
  6295 ;;Total ram usage:        6 bytes
  6296 ;; Hardware stack levels used:    1
  6297 ;; This function calls:
  6298 ;;		Nothing
  6299 ;; This function is called by:
  6300 ;;		_main
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           
  6305                           ;psect for function _readADC
  6306  1A8D                     _readADC:	
  6307                           
  6308                           ;main.c: 83: int temp = 0;
  6309                           
  6310                           ;incstack = 0
  6311                           ; Regs used in _readADC: [wreg+status,2+status,0+btemp+1]
  6312  1A8D  01F4               	clrf	readADC@temp
  6313  1A8E  01F5               	clrf	readADC@temp+1
  6314                           
  6315                           ;main.c: 84: _delay((unsigned long)((20)*(4000000/4000.0)));
  6316  1A8F  301A               	movlw	26
  6317  1A90  00F3               	movwf	??_readADC+1
  6318  1A91  30F8               	movlw	248
  6319  1A92  00F2               	movwf	??_readADC
  6320  1A93                     u4327:	
  6321  1A93  0BF2               	decfsz	??_readADC,f
  6322  1A94  2A93               	goto	u4327
  6323  1A95  0BF3               	decfsz	??_readADC+1,f
  6324  1A96  2A93               	goto	u4327
  6325  1A97  0000               	nop
  6326                           
  6327                           ;main.c: 85: GO = 1;
  6328  1A98  1283               	bcf	3,5	;RP0=0, select bank0
  6329  1A99  1303               	bcf	3,6	;RP1=0, select bank0
  6330  1A9A  151F               	bsf	31,2	;volatile
  6331  1A9B                     l75:	
  6332                           ;main.c: 87: ;
  6333                           
  6334                           ;main.c: 86: while (GO_DONE == 1)
  6335                           
  6336  1A9B  191F               	btfsc	31,2	;volatile
  6337  1A9C  2A9B               	goto	l75
  6338                           
  6339                           ;main.c: 88: temp = ADRESH;
  6340  1A9D  081E               	movf	30,w	;volatile
  6341  1A9E  00F2               	movwf	??_readADC
  6342  1A9F  01F3               	clrf	??_readADC+1
  6343  1AA0  0872               	movf	??_readADC,w
  6344  1AA1  00F4               	movwf	readADC@temp
  6345  1AA2  0873               	movf	??_readADC+1,w
  6346  1AA3  00F5               	movwf	readADC@temp+1
  6347                           
  6348                           ;main.c: 89: temp = temp << 8;
  6349  1AA4  0875               	movf	readADC@temp+1,w
  6350  1AA5  00F3               	movwf	??_readADC+1
  6351  1AA6  0874               	movf	readADC@temp,w
  6352  1AA7  00F2               	movwf	??_readADC
  6353  1AA8  0872               	movf	??_readADC,w
  6354  1AA9  00F3               	movwf	??_readADC+1
  6355  1AAA  01F2               	clrf	??_readADC
  6356  1AAB  0872               	movf	??_readADC,w
  6357  1AAC  00F4               	movwf	readADC@temp
  6358  1AAD  0873               	movf	??_readADC+1,w
  6359  1AAE  00F5               	movwf	readADC@temp+1
  6360                           
  6361                           ;main.c: 90: temp = temp | ADRESL;
  6362  1AAF  0874               	movf	readADC@temp,w
  6363  1AB0  1683               	bsf	3,5	;RP0=1, select bank1
  6364  1AB1  1303               	bcf	3,6	;RP1=0, select bank1
  6365  1AB2  041E               	iorwf	30,w	;volatile
  6366  1AB3  00F2               	movwf	??_readADC
  6367  1AB4  0875               	movf	readADC@temp+1,w
  6368  1AB5  00F3               	movwf	??_readADC+1
  6369  1AB6  0872               	movf	??_readADC,w
  6370  1AB7  00F4               	movwf	readADC@temp
  6371  1AB8  0873               	movf	??_readADC+1,w
  6372  1AB9  00F5               	movwf	readADC@temp+1
  6373                           
  6374                           ;main.c: 91: return temp;
  6375  1ABA  0875               	movf	readADC@temp+1,w
  6376  1ABB  01F1               	clrf	?_readADC+1
  6377  1ABC  07F1               	addwf	?_readADC+1,f
  6378  1ABD  0874               	movf	readADC@temp,w
  6379  1ABE  01F0               	clrf	?_readADC
  6380  1ABF  07F0               	addwf	?_readADC,f
  6381  1AC0  0008               	return
  6382  1AC1                     __end_of_readADC:	
  6383                           
  6384                           	psect	text13
  6385  1A1C                     __ptext13:	
  6386 ;; *************** function _printToLCD *****************
  6387 ;; Defined at:
  6388 ;;		line 47 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\lcd_functions.h"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;  STR             2    2[COMMON] PTR const unsigned char 
  6391 ;;		 -> STR_3(18), STR_2(18), main@buffer(16), 
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;		None               void
  6396 ;; Registers used:
  6397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6403 ;;      Params:         2       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0
  6406 ;;      Totals:         2       0       0       0       0
  6407 ;;Total ram usage:        2 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    1
  6410 ;; This function calls:
  6411 ;;		_dataCTRL
  6412 ;; This function is called by:
  6413 ;;		_main
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           
  6418                           ;psect for function _printToLCD
  6419  1A1C                     _printToLCD:	
  6420  1A1C                     l2846:	
  6421                           ;lcd_functions.h: 49: while (*STR != '\0')
  6422                           
  6423                           ;incstack = 0
  6424                           ; Regs used in _printToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6425                           
  6426  1A1C  0873               	movf	printToLCD@STR+1,w
  6427  1A1D  1283               	bcf	3,5	;RP0=0, select bank0
  6428  1A1E  1303               	bcf	3,6	;RP1=0, select bank0
  6429  1A1F  00FF               	movwf	127
  6430  1A20  0872               	movf	printToLCD@STR,w
  6431  1A21  0084               	movwf	4
  6432  1A22  160A  118A  2000  160A  158A  	fcall	stringtab
  6433  1A27  3800               	iorlw	0
  6434  1A28  1903               	btfsc	3,2
  6435  1A29  0008               	return
  6436                           
  6437                           ;lcd_functions.h: 50: {
  6438                           ;lcd_functions.h: 51: dataCTRL(*STR);
  6439  1A2A  0873               	movf	printToLCD@STR+1,w
  6440  1A2B  1283               	bcf	3,5	;RP0=0, select bank0
  6441  1A2C  1303               	bcf	3,6	;RP1=0, select bank0
  6442  1A2D  00FF               	movwf	127
  6443  1A2E  0872               	movf	printToLCD@STR,w
  6444  1A2F  0084               	movwf	4
  6445  1A30  160A  118A  2000  160A  158A  	fcall	stringtab
  6446  1A35  160A  158A  2199  160A  158A  	fcall	_dataCTRL
  6447                           
  6448                           ;lcd_functions.h: 52: STR++;
  6449  1A3A  3001               	movlw	1
  6450  1A3B  07F2               	addwf	printToLCD@STR,f
  6451  1A3C  1803               	skipnc
  6452  1A3D  0AF3               	incf	printToLCD@STR+1,f
  6453  1A3E  2A1C               	goto	l2846
  6454  1A3F                     __end_of_printToLCD:	
  6455                           
  6456                           	psect	text14
  6457  1999                     __ptext14:	
  6458 ;; *************** function _dataCTRL *****************
  6459 ;; Defined at:
  6460 ;;		line 27 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\lcd_functions.h"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  DAT             1    wreg     unsigned char 
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;  DAT             1    1[COMMON] unsigned char 
  6465 ;; Return value:  Size  Location     Type
  6466 ;;		None               void
  6467 ;; Registers used:
  6468 ;;		wreg
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6474 ;;      Params:         0       0       0       0       0
  6475 ;;      Locals:         1       0       0       0       0
  6476 ;;      Temps:          1       0       0       0       0
  6477 ;;      Totals:         2       0       0       0       0
  6478 ;;Total ram usage:        2 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; This function calls:
  6481 ;;		Nothing
  6482 ;; This function is called by:
  6483 ;;		_printToLCD
  6484 ;; This function uses a non-reentrant model
  6485 ;;
  6486                           
  6487                           
  6488                           ;psect for function _dataCTRL
  6489  1999                     _dataCTRL:	
  6490                           
  6491                           ;incstack = 0
  6492                           ; Regs used in _dataCTRL: [wreg]
  6493                           ;dataCTRL@DAT stored from wreg
  6494  1999  00F1               	movwf	dataCTRL@DAT
  6495                           
  6496                           ;lcd_functions.h: 29: PORTD = DAT;
  6497  199A  0871               	movf	dataCTRL@DAT,w
  6498  199B  1283               	bcf	3,5	;RP0=0, select bank0
  6499  199C  1303               	bcf	3,6	;RP1=0, select bank0
  6500  199D  0088               	movwf	8	;volatile
  6501                           
  6502                           ;lcd_functions.h: 30: RB5 = 1;
  6503  199E  1686               	bsf	6,5	;volatile
  6504                           
  6505                           ;lcd_functions.h: 31: RB6 = 0;
  6506  199F  1306               	bcf	6,6	;volatile
  6507                           
  6508                           ;lcd_functions.h: 32: RB7 = 1;
  6509  19A0  1786               	bsf	6,7	;volatile
  6510                           
  6511                           ;lcd_functions.h: 33: _delay((unsigned long)((50)*(4000000/4000000.0)));
  6512  19A1  3010               	movlw	16
  6513  19A2  00F0               	movwf	??_dataCTRL
  6514  19A3                     u4337:	
  6515  19A3  0BF0               	decfsz	??_dataCTRL,f
  6516  19A4  29A3               	goto	u4337
  6517  19A5  0000               	nop
  6518                           
  6519                           ;lcd_functions.h: 34: RB7 = 0;
  6520  19A6  1283               	bcf	3,5	;RP0=0, select bank0
  6521  19A7  1303               	bcf	3,6	;RP1=0, select bank0
  6522  19A8  1386               	bcf	6,7	;volatile
  6523  19A9  0008               	return
  6524  19AA                     __end_of_dataCTRL:	
  6525                           
  6526                           	psect	text15
  6527  1523                     __ptext15:	
  6528 ;; *************** function _pow *****************
  6529 ;; Defined at:
  6530 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\pow.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;  x               3    9[BANK1 ] unsigned char 
  6533 ;;  y               3   12[BANK1 ] unsigned char 
  6534 ;; Auto vars:     Size  Location     Type
  6535 ;;  yi              4   22[BANK1 ] unsigned long 
  6536 ;;  sign            1   21[BANK1 ] unsigned char 
  6537 ;; Return value:  Size  Location     Type
  6538 ;;                  3    9[BANK1 ] unsigned char 
  6539 ;; Registers used:
  6540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6541 ;; Tracked objects:
  6542 ;;		On entry : 0/0
  6543 ;;		On exit  : 0/0
  6544 ;;		Unchanged: 0/0
  6545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6546 ;;      Params:         0       0       6       0       0
  6547 ;;      Locals:         0       0      11       0       0
  6548 ;;      Temps:          0       1       0       0       0
  6549 ;;      Totals:         0       1      17       0       0
  6550 ;;Total ram usage:       18 bytes
  6551 ;; Hardware stack levels used:    1
  6552 ;; Hardware stack levels required when called:    4
  6553 ;; This function calls:
  6554 ;;		___ftge
  6555 ;;		___ftmul
  6556 ;;		___ftneg
  6557 ;;		___fttol
  6558 ;;		___lltoft
  6559 ;;		_exp
  6560 ;;		_log
  6561 ;; This function is called by:
  6562 ;;		_main
  6563 ;; This function uses a non-reentrant model
  6564 ;;
  6565                           
  6566                           
  6567                           ;psect for function _pow
  6568  1523                     _pow:	
  6569                           
  6570                           ;incstack = 0
  6571                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6572  1523  1683               	bsf	3,5	;RP0=1, select bank1
  6573  1524  1303               	bcf	3,6	;RP1=0, select bank1
  6574  1525  01B5               	clrf	pow@sign^(0+128)
  6575  1526  082B               	movf	(pow@x+2)^(0+128),w
  6576  1527  042A               	iorwf	(pow@x+1)^(0+128),w
  6577  1528  0429               	iorwf	pow@x^(0+128),w
  6578  1529  1D03               	skipz
  6579  152A  2D4D               	goto	l2874
  6580  152B  3000               	movlw	0
  6581  152C  00F0               	movwf	___ftge@ff1
  6582  152D  3000               	movlw	0
  6583  152E  00F1               	movwf	___ftge@ff1+1
  6584  152F  3000               	movlw	0
  6585  1530  00F2               	movwf	___ftge@ff1+2
  6586  1531  082C               	movf	pow@y^(0+128),w
  6587  1532  00F3               	movwf	___ftge@ff2
  6588  1533  082D               	movf	(pow@y+1)^(0+128),w
  6589  1534  00F4               	movwf	___ftge@ff2+1
  6590  1535  082E               	movf	(pow@y+2)^(0+128),w
  6591  1536  00F5               	movwf	___ftge@ff2+2
  6592  1537  160A  158A  238F  160A  118A  	fcall	___ftge
  6593  153C  1C03               	btfss	3,0
  6594  153D  2D44               	goto	l655
  6595  153E  3021               	movlw	33
  6596  153F  1683               	bsf	3,5	;RP0=1, select bank1
  6597  1540  1303               	bcf	3,6	;RP1=0, select bank1
  6598  1541  00C2               	movwf	_errno^(0+128)
  6599  1542  3000               	movlw	0
  6600  1543  00C3               	movwf	(_errno^(0+128)+1)
  6601  1544                     l655:	
  6602  1544  3000               	movlw	0
  6603  1545  1683               	bsf	3,5	;RP0=1, select bank1
  6604  1546  1303               	bcf	3,6	;RP1=0, select bank1
  6605  1547  00A9               	movwf	?_pow^(0+128)
  6606  1548  3000               	movlw	0
  6607  1549  00AA               	movwf	(?_pow+1)^(0+128)
  6608  154A  3000               	movlw	0
  6609  154B  00AB               	movwf	(?_pow+2)^(0+128)
  6610  154C  0008               	return
  6611  154D                     l2874:	
  6612  154D  082E               	movf	(pow@y+2)^(0+128),w
  6613  154E  042D               	iorwf	(pow@y+1)^(0+128),w
  6614  154F  042C               	iorwf	pow@y^(0+128),w
  6615  1550  1D03               	skipz
  6616  1551  2D59               	goto	l2880
  6617  1552  3000               	movlw	0
  6618  1553  00A9               	movwf	?_pow^(0+128)
  6619  1554  3080               	movlw	128
  6620  1555  00AA               	movwf	(?_pow+1)^(0+128)
  6621  1556  303F               	movlw	63
  6622  1557  00AB               	movwf	(?_pow+2)^(0+128)
  6623  1558  0008               	return
  6624  1559                     l2880:	
  6625  1559  0829               	movf	pow@x^(0+128),w
  6626  155A  00F0               	movwf	___ftge@ff1
  6627  155B  082A               	movf	(pow@x+1)^(0+128),w
  6628  155C  00F1               	movwf	___ftge@ff1+1
  6629  155D  082B               	movf	(pow@x+2)^(0+128),w
  6630  155E  00F2               	movwf	___ftge@ff1+2
  6631  155F  3000               	movlw	0
  6632  1560  00F3               	movwf	___ftge@ff2
  6633  1561  3000               	movlw	0
  6634  1562  00F4               	movwf	___ftge@ff2+1
  6635  1563  3000               	movlw	0
  6636  1564  00F5               	movwf	___ftge@ff2+2
  6637  1565  160A  158A  238F  160A  118A  	fcall	___ftge
  6638  156A  1803               	btfsc	3,0
  6639  156B  2DDD               	goto	l2892
  6640  156C  1683               	bsf	3,5	;RP0=1, select bank1
  6641  156D  1303               	bcf	3,6	;RP1=0, select bank1
  6642  156E  082C               	movf	pow@y^(0+128),w
  6643  156F  1283               	bcf	3,5	;RP0=0, select bank0
  6644  1570  1303               	bcf	3,6	;RP1=0, select bank0
  6645  1571  00C0               	movwf	___fttol@f1
  6646  1572  1683               	bsf	3,5	;RP0=1, select bank1
  6647  1573  1303               	bcf	3,6	;RP1=0, select bank1
  6648  1574  082D               	movf	(pow@y+1)^(0+128),w
  6649  1575  1283               	bcf	3,5	;RP0=0, select bank0
  6650  1576  1303               	bcf	3,6	;RP1=0, select bank0
  6651  1577  00C1               	movwf	___fttol@f1+1
  6652  1578  1683               	bsf	3,5	;RP0=1, select bank1
  6653  1579  1303               	bcf	3,6	;RP1=0, select bank1
  6654  157A  082E               	movf	(pow@y+2)^(0+128),w
  6655  157B  1283               	bcf	3,5	;RP0=0, select bank0
  6656  157C  1303               	bcf	3,6	;RP1=0, select bank0
  6657  157D  00C2               	movwf	___fttol@f1+2
  6658  157E  160A  158A  2588  160A  118A  	fcall	___fttol
  6659  1583  1283               	bcf	3,5	;RP0=0, select bank0
  6660  1584  1303               	bcf	3,6	;RP1=0, select bank0
  6661  1585  0843               	movf	?___fttol+3,w
  6662  1586  1683               	bsf	3,5	;RP0=1, select bank1
  6663  1587  1303               	bcf	3,6	;RP1=0, select bank1
  6664  1588  00B9               	movwf	(pow@yi+3)^(0+128)
  6665  1589  1283               	bcf	3,5	;RP0=0, select bank0
  6666  158A  1303               	bcf	3,6	;RP1=0, select bank0
  6667  158B  0842               	movf	?___fttol+2,w
  6668  158C  1683               	bsf	3,5	;RP0=1, select bank1
  6669  158D  1303               	bcf	3,6	;RP1=0, select bank1
  6670  158E  00B8               	movwf	(pow@yi+2)^(0+128)
  6671  158F  1283               	bcf	3,5	;RP0=0, select bank0
  6672  1590  1303               	bcf	3,6	;RP1=0, select bank0
  6673  1591  0841               	movf	?___fttol+1,w
  6674  1592  1683               	bsf	3,5	;RP0=1, select bank1
  6675  1593  1303               	bcf	3,6	;RP1=0, select bank1
  6676  1594  00B7               	movwf	(pow@yi+1)^(0+128)
  6677  1595  1283               	bcf	3,5	;RP0=0, select bank0
  6678  1596  1303               	bcf	3,6	;RP1=0, select bank0
  6679  1597  0840               	movf	?___fttol,w
  6680  1598  1683               	bsf	3,5	;RP0=1, select bank1
  6681  1599  1303               	bcf	3,6	;RP1=0, select bank1
  6682  159A  00B6               	movwf	pow@yi^(0+128)
  6683  159B  0839               	movf	(pow@yi+3)^(0+128),w
  6684  159C  00FB               	movwf	___lltoft@c+3
  6685  159D  0838               	movf	(pow@yi+2)^(0+128),w
  6686  159E  00FA               	movwf	___lltoft@c+2
  6687  159F  0837               	movf	(pow@yi+1)^(0+128),w
  6688  15A0  00F9               	movwf	___lltoft@c+1
  6689  15A1  0836               	movf	pow@yi^(0+128),w
  6690  15A2  00F8               	movwf	___lltoft@c
  6691  15A3  160A  158A  2262  160A  118A  	fcall	___lltoft
  6692  15A8  1683               	bsf	3,5	;RP0=1, select bank1
  6693  15A9  1303               	bcf	3,6	;RP1=0, select bank1
  6694  15AA  082E               	movf	(pow@y+2)^(0+128),w
  6695  15AB  067A               	xorwf	?___lltoft+2,w
  6696  15AC  1D03               	skipz
  6697  15AD  2DB4               	goto	u3915
  6698  15AE  082D               	movf	(pow@y+1)^(0+128),w
  6699  15AF  0679               	xorwf	?___lltoft+1,w
  6700  15B0  1D03               	skipz
  6701  15B1  2DB4               	goto	u3915
  6702  15B2  082C               	movf	pow@y^(0+128),w
  6703  15B3  0678               	xorwf	?___lltoft,w
  6704  15B4                     u3915:	
  6705  15B4  1903               	skipnz
  6706  15B5  2DC1               	goto	l2888
  6707  15B6  3021               	movlw	33
  6708  15B7  00C2               	movwf	_errno^(0+128)
  6709  15B8  3000               	movlw	0
  6710  15B9  00C3               	movwf	(_errno^(0+128)+1)
  6711  15BA  3000               	movlw	0
  6712  15BB  00A9               	movwf	?_pow^(0+128)
  6713  15BC  3000               	movlw	0
  6714  15BD  00AA               	movwf	(?_pow+1)^(0+128)
  6715  15BE  3000               	movlw	0
  6716  15BF  00AB               	movwf	(?_pow+2)^(0+128)
  6717  15C0  0008               	return
  6718  15C1                     l2888:	
  6719  15C1  0836               	movf	pow@yi^(0+128),w
  6720  15C2  3901               	andlw	1
  6721  15C3  1283               	bcf	3,5	;RP0=0, select bank0
  6722  15C4  1303               	bcf	3,6	;RP1=0, select bank0
  6723  15C5  00EC               	movwf	??_pow
  6724  15C6  086C               	movf	??_pow,w
  6725  15C7  1683               	bsf	3,5	;RP0=1, select bank1
  6726  15C8  1303               	bcf	3,6	;RP1=0, select bank1
  6727  15C9  00B5               	movwf	pow@sign^(0+128)
  6728  15CA  0829               	movf	pow@x^(0+128),w
  6729  15CB  00F0               	movwf	___ftneg@f1
  6730  15CC  082A               	movf	(pow@x+1)^(0+128),w
  6731  15CD  00F1               	movwf	___ftneg@f1+1
  6732  15CE  082B               	movf	(pow@x+2)^(0+128),w
  6733  15CF  00F2               	movwf	___ftneg@f1+2
  6734  15D0  160A  158A  2172  160A  118A  	fcall	___ftneg
  6735  15D5  0870               	movf	?___ftneg,w
  6736  15D6  1683               	bsf	3,5	;RP0=1, select bank1
  6737  15D7  1303               	bcf	3,6	;RP1=0, select bank1
  6738  15D8  00A9               	movwf	pow@x^(0+128)
  6739  15D9  0871               	movf	?___ftneg+1,w
  6740  15DA  00AA               	movwf	(pow@x+1)^(0+128)
  6741  15DB  0872               	movf	?___ftneg+2,w
  6742  15DC  00AB               	movwf	(pow@x+2)^(0+128)
  6743  15DD                     l2892:	
  6744  15DD  1683               	bsf	3,5	;RP0=1, select bank1
  6745  15DE  1303               	bcf	3,6	;RP1=0, select bank1
  6746  15DF  0829               	movf	pow@x^(0+128),w
  6747  15E0  1283               	bcf	3,5	;RP0=0, select bank0
  6748  15E1  1303               	bcf	3,6	;RP1=0, select bank0
  6749  15E2  00DE               	movwf	log@x
  6750  15E3  1683               	bsf	3,5	;RP0=1, select bank1
  6751  15E4  1303               	bcf	3,6	;RP1=0, select bank1
  6752  15E5  082A               	movf	(pow@x+1)^(0+128),w
  6753  15E6  1283               	bcf	3,5	;RP0=0, select bank0
  6754  15E7  1303               	bcf	3,6	;RP1=0, select bank0
  6755  15E8  00DF               	movwf	log@x+1
  6756  15E9  1683               	bsf	3,5	;RP0=1, select bank1
  6757  15EA  1303               	bcf	3,6	;RP1=0, select bank1
  6758  15EB  082B               	movf	(pow@x+2)^(0+128),w
  6759  15EC  1283               	bcf	3,5	;RP0=0, select bank0
  6760  15ED  1303               	bcf	3,6	;RP1=0, select bank0
  6761  15EE  00E0               	movwf	log@x+2
  6762  15EF  160A  118A  2145  160A  118A  	fcall	_log
  6763  15F4  1283               	bcf	3,5	;RP0=0, select bank0
  6764  15F5  1303               	bcf	3,6	;RP1=0, select bank0
  6765  15F6  085E               	movf	?_log,w
  6766  15F7  1683               	bsf	3,5	;RP0=1, select bank1
  6767  15F8  1303               	bcf	3,6	;RP1=0, select bank1
  6768  15F9  00AF               	movwf	_pow$667^(0+128)
  6769  15FA  1283               	bcf	3,5	;RP0=0, select bank0
  6770  15FB  1303               	bcf	3,6	;RP1=0, select bank0
  6771  15FC  085F               	movf	?_log+1,w
  6772  15FD  1683               	bsf	3,5	;RP0=1, select bank1
  6773  15FE  1303               	bcf	3,6	;RP1=0, select bank1
  6774  15FF  00B0               	movwf	(_pow$667+1)^(0+128)
  6775  1600  1283               	bcf	3,5	;RP0=0, select bank0
  6776  1601  1303               	bcf	3,6	;RP1=0, select bank0
  6777  1602  0860               	movf	?_log+2,w
  6778  1603  1683               	bsf	3,5	;RP0=1, select bank1
  6779  1604  1303               	bcf	3,6	;RP1=0, select bank1
  6780  1605  00B1               	movwf	(_pow$667+2)^(0+128)
  6781  1606  082C               	movf	pow@y^(0+128),w
  6782  1607  1283               	bcf	3,5	;RP0=0, select bank0
  6783  1608  1303               	bcf	3,6	;RP1=0, select bank0
  6784  1609  00A7               	movwf	___ftmul@f1
  6785  160A  1683               	bsf	3,5	;RP0=1, select bank1
  6786  160B  1303               	bcf	3,6	;RP1=0, select bank1
  6787  160C  082D               	movf	(pow@y+1)^(0+128),w
  6788  160D  1283               	bcf	3,5	;RP0=0, select bank0
  6789  160E  1303               	bcf	3,6	;RP1=0, select bank0
  6790  160F  00A8               	movwf	___ftmul@f1+1
  6791  1610  1683               	bsf	3,5	;RP0=1, select bank1
  6792  1611  1303               	bcf	3,6	;RP1=0, select bank1
  6793  1612  082E               	movf	(pow@y+2)^(0+128),w
  6794  1613  1283               	bcf	3,5	;RP0=0, select bank0
  6795  1614  1303               	bcf	3,6	;RP1=0, select bank0
  6796  1615  00A9               	movwf	___ftmul@f1+2
  6797  1616  1683               	bsf	3,5	;RP0=1, select bank1
  6798  1617  1303               	bcf	3,6	;RP1=0, select bank1
  6799  1618  082F               	movf	_pow$667^(0+128),w
  6800  1619  1283               	bcf	3,5	;RP0=0, select bank0
  6801  161A  1303               	bcf	3,6	;RP1=0, select bank0
  6802  161B  00AA               	movwf	___ftmul@f2
  6803  161C  1683               	bsf	3,5	;RP0=1, select bank1
  6804  161D  1303               	bcf	3,6	;RP1=0, select bank1
  6805  161E  0830               	movf	(_pow$667+1)^(0+128),w
  6806  161F  1283               	bcf	3,5	;RP0=0, select bank0
  6807  1620  1303               	bcf	3,6	;RP1=0, select bank0
  6808  1621  00AB               	movwf	___ftmul@f2+1
  6809  1622  1683               	bsf	3,5	;RP0=1, select bank1
  6810  1623  1303               	bcf	3,6	;RP1=0, select bank1
  6811  1624  0831               	movf	(_pow$667+2)^(0+128),w
  6812  1625  1283               	bcf	3,5	;RP0=0, select bank0
  6813  1626  1303               	bcf	3,6	;RP1=0, select bank0
  6814  1627  00AC               	movwf	___ftmul@f2+2
  6815  1628  160A  118A  2215  160A  118A  	fcall	___ftmul
  6816  162D  1283               	bcf	3,5	;RP0=0, select bank0
  6817  162E  1303               	bcf	3,6	;RP1=0, select bank0
  6818  162F  0827               	movf	?___ftmul,w
  6819  1630  1683               	bsf	3,5	;RP0=1, select bank1
  6820  1631  1303               	bcf	3,6	;RP1=0, select bank1
  6821  1632  00B2               	movwf	_pow$668^(0+128)
  6822  1633  1283               	bcf	3,5	;RP0=0, select bank0
  6823  1634  1303               	bcf	3,6	;RP1=0, select bank0
  6824  1635  0828               	movf	?___ftmul+1,w
  6825  1636  1683               	bsf	3,5	;RP0=1, select bank1
  6826  1637  1303               	bcf	3,6	;RP1=0, select bank1
  6827  1638  00B3               	movwf	(_pow$668+1)^(0+128)
  6828  1639  1283               	bcf	3,5	;RP0=0, select bank0
  6829  163A  1303               	bcf	3,6	;RP1=0, select bank0
  6830  163B  0829               	movf	?___ftmul+2,w
  6831  163C  1683               	bsf	3,5	;RP0=1, select bank1
  6832  163D  1303               	bcf	3,6	;RP1=0, select bank1
  6833  163E  00B4               	movwf	(_pow$668+2)^(0+128)
  6834  163F  0832               	movf	_pow$668^(0+128),w
  6835  1640  1283               	bcf	3,5	;RP0=0, select bank0
  6836  1641  1303               	bcf	3,6	;RP1=0, select bank0
  6837  1642  00E8               	movwf	exp@x
  6838  1643  1683               	bsf	3,5	;RP0=1, select bank1
  6839  1644  1303               	bcf	3,6	;RP1=0, select bank1
  6840  1645  0833               	movf	(_pow$668+1)^(0+128),w
  6841  1646  1283               	bcf	3,5	;RP0=0, select bank0
  6842  1647  1303               	bcf	3,6	;RP1=0, select bank0
  6843  1648  00E9               	movwf	exp@x+1
  6844  1649  1683               	bsf	3,5	;RP0=1, select bank1
  6845  164A  1303               	bcf	3,6	;RP1=0, select bank1
  6846  164B  0834               	movf	(_pow$668+2)^(0+128),w
  6847  164C  1283               	bcf	3,5	;RP0=0, select bank0
  6848  164D  1303               	bcf	3,6	;RP1=0, select bank0
  6849  164E  00EA               	movwf	exp@x+2
  6850  164F  160A  118A  267B  160A  118A  	fcall	_exp
  6851  1654  1283               	bcf	3,5	;RP0=0, select bank0
  6852  1655  1303               	bcf	3,6	;RP1=0, select bank0
  6853  1656  0868               	movf	?_exp,w
  6854  1657  1683               	bsf	3,5	;RP0=1, select bank1
  6855  1658  1303               	bcf	3,6	;RP1=0, select bank1
  6856  1659  00A9               	movwf	pow@x^(0+128)
  6857  165A  1283               	bcf	3,5	;RP0=0, select bank0
  6858  165B  1303               	bcf	3,6	;RP1=0, select bank0
  6859  165C  0869               	movf	?_exp+1,w
  6860  165D  1683               	bsf	3,5	;RP0=1, select bank1
  6861  165E  1303               	bcf	3,6	;RP1=0, select bank1
  6862  165F  00AA               	movwf	(pow@x+1)^(0+128)
  6863  1660  1283               	bcf	3,5	;RP0=0, select bank0
  6864  1661  1303               	bcf	3,6	;RP1=0, select bank0
  6865  1662  086A               	movf	?_exp+2,w
  6866  1663  1683               	bsf	3,5	;RP0=1, select bank1
  6867  1664  1303               	bcf	3,6	;RP1=0, select bank1
  6868  1665  00AB               	movwf	(pow@x+2)^(0+128)
  6869  1666  0835               	movf	pow@sign^(0+128),w
  6870  1667  1903               	btfsc	3,2
  6871  1668  0008               	return
  6872  1669  0829               	movf	pow@x^(0+128),w
  6873  166A  00F0               	movwf	___ftneg@f1
  6874  166B  082A               	movf	(pow@x+1)^(0+128),w
  6875  166C  00F1               	movwf	___ftneg@f1+1
  6876  166D  082B               	movf	(pow@x+2)^(0+128),w
  6877  166E  00F2               	movwf	___ftneg@f1+2
  6878  166F  160A  158A  2172   	fcall	___ftneg
  6879  1672  0870               	movf	?___ftneg,w
  6880  1673  1683               	bsf	3,5	;RP0=1, select bank1
  6881  1674  1303               	bcf	3,6	;RP1=0, select bank1
  6882  1675  00A9               	movwf	?_pow^(0+128)
  6883  1676  0871               	movf	?___ftneg+1,w
  6884  1677  00AA               	movwf	(?_pow+1)^(0+128)
  6885  1678  0872               	movf	?___ftneg+2,w
  6886  1679  00AB               	movwf	(?_pow+2)^(0+128)
  6887  167A  0008               	return
  6888  167B                     __end_of_pow:	
  6889                           
  6890                           	psect	text16
  6891  1145                     __ptext16:	
  6892 ;; *************** function _log *****************
  6893 ;; Defined at:
  6894 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\log.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  x               3   62[BANK0 ] unsigned char 
  6897 ;; Auto vars:     Size  Location     Type
  6898 ;;  exponent        2   66[BANK0 ] int 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  3   62[BANK0 ] int 
  6901 ;; Registers used:
  6902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6908 ;;      Params:         0       3       0       0       0
  6909 ;;      Locals:         0       2       0       0       0
  6910 ;;      Temps:          0       1       0       0       0
  6911 ;;      Totals:         0       6       0       0       0
  6912 ;;Total ram usage:        6 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; Hardware stack levels required when called:    3
  6915 ;; This function calls:
  6916 ;;		___awtoft
  6917 ;;		___ftadd
  6918 ;;		___ftge
  6919 ;;		___ftmul
  6920 ;;		_eval_poly
  6921 ;;		_frexp
  6922 ;; This function is called by:
  6923 ;;		_pow
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           
  6928                           ;psect for function _log
  6929  1145                     _log:	
  6930                           
  6931                           ;incstack = 0
  6932                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6933  1145  1283               	bcf	3,5	;RP0=0, select bank0
  6934  1146  1303               	bcf	3,6	;RP1=0, select bank0
  6935  1147  085E               	movf	log@x,w
  6936  1148  00F0               	movwf	___ftge@ff1
  6937  1149  085F               	movf	log@x+1,w
  6938  114A  00F1               	movwf	___ftge@ff1+1
  6939  114B  0860               	movf	log@x+2,w
  6940  114C  00F2               	movwf	___ftge@ff1+2
  6941  114D  3000               	movlw	0
  6942  114E  00F3               	movwf	___ftge@ff2
  6943  114F  3000               	movlw	0
  6944  1150  00F4               	movwf	___ftge@ff2+1
  6945  1151  3000               	movlw	0
  6946  1152  00F5               	movwf	___ftge@ff2+2
  6947  1153  160A  158A  238F  160A  118A  	fcall	___ftge
  6948  1158  1803               	btfsc	3,0
  6949  1159  2969               	goto	l2758
  6950  115A  3021               	movlw	33
  6951  115B  1683               	bsf	3,5	;RP0=1, select bank1
  6952  115C  1303               	bcf	3,6	;RP1=0, select bank1
  6953  115D  00C2               	movwf	_errno^(0+128)
  6954  115E  3000               	movlw	0
  6955  115F  00C3               	movwf	(_errno^(0+128)+1)
  6956  1160  3000               	movlw	0
  6957  1161  1283               	bcf	3,5	;RP0=0, select bank0
  6958  1162  1303               	bcf	3,6	;RP1=0, select bank0
  6959  1163  00DE               	movwf	?_log
  6960  1164  3000               	movlw	0
  6961  1165  00DF               	movwf	?_log+1
  6962  1166  3000               	movlw	0
  6963  1167  00E0               	movwf	?_log+2
  6964  1168  0008               	return
  6965  1169                     l2758:	
  6966  1169  1283               	bcf	3,5	;RP0=0, select bank0
  6967  116A  1303               	bcf	3,6	;RP1=0, select bank0
  6968  116B  0860               	movf	log@x+2,w
  6969  116C  045F               	iorwf	log@x+1,w
  6970  116D  045E               	iorwf	log@x,w
  6971  116E  1D03               	skipz
  6972  116F  297F               	goto	l2764
  6973  1170  3022               	movlw	34
  6974  1171  1683               	bsf	3,5	;RP0=1, select bank1
  6975  1172  1303               	bcf	3,6	;RP1=0, select bank1
  6976  1173  00C2               	movwf	_errno^(0+128)
  6977  1174  3000               	movlw	0
  6978  1175  00C3               	movwf	(_errno^(0+128)+1)
  6979  1176  3000               	movlw	0
  6980  1177  1283               	bcf	3,5	;RP0=0, select bank0
  6981  1178  1303               	bcf	3,6	;RP1=0, select bank0
  6982  1179  00DE               	movwf	?_log
  6983  117A  3000               	movlw	0
  6984  117B  00DF               	movwf	?_log+1
  6985  117C  3000               	movlw	0
  6986  117D  00E0               	movwf	?_log+2
  6987  117E  0008               	return
  6988  117F                     l2764:	
  6989  117F  3000               	movlw	0
  6990  1180  00C7               	movwf	___ftadd@f1
  6991  1181  3080               	movlw	128
  6992  1182  00C8               	movwf	___ftadd@f1+1
  6993  1183  30BF               	movlw	191
  6994  1184  00C9               	movwf	___ftadd@f1+2
  6995  1185  3000               	movlw	0
  6996  1186  00A7               	movwf	___ftmul@f1
  6997  1187  3000               	movlw	0
  6998  1188  00A8               	movwf	___ftmul@f1+1
  6999  1189  3040               	movlw	64
  7000  118A  00A9               	movwf	___ftmul@f1+2
  7001  118B  3062               	movlw	log@exponent& (0+255)
  7002  118C  00E1               	movwf	??_log
  7003  118D  0861               	movf	??_log,w
  7004  118E  00F3               	movwf	frexp@eptr
  7005  118F  085E               	movf	log@x,w
  7006  1190  00F0               	movwf	frexp@value
  7007  1191  085F               	movf	log@x+1,w
  7008  1192  00F1               	movwf	frexp@value+1
  7009  1193  0860               	movf	log@x+2,w
  7010  1194  00F2               	movwf	frexp@value+2
  7011  1195  160A  158A  22C1  160A  118A  	fcall	_frexp
  7012  119A  0870               	movf	?_frexp,w
  7013  119B  1283               	bcf	3,5	;RP0=0, select bank0
  7014  119C  1303               	bcf	3,6	;RP1=0, select bank0
  7015  119D  00AA               	movwf	___ftmul@f2
  7016  119E  0871               	movf	?_frexp+1,w
  7017  119F  00AB               	movwf	___ftmul@f2+1
  7018  11A0  0872               	movf	?_frexp+2,w
  7019  11A1  00AC               	movwf	___ftmul@f2+2
  7020  11A2  160A  118A  2215  160A  118A  	fcall	___ftmul
  7021  11A7  1283               	bcf	3,5	;RP0=0, select bank0
  7022  11A8  1303               	bcf	3,6	;RP1=0, select bank0
  7023  11A9  0827               	movf	?___ftmul,w
  7024  11AA  00CA               	movwf	___ftadd@f2
  7025  11AB  0828               	movf	?___ftmul+1,w
  7026  11AC  00CB               	movwf	___ftadd@f2+1
  7027  11AD  0829               	movf	?___ftmul+2,w
  7028  11AE  00CC               	movwf	___ftadd@f2+2
  7029  11AF  160A  118A  22E8  160A  118A  	fcall	___ftadd
  7030  11B4  1283               	bcf	3,5	;RP0=0, select bank0
  7031  11B5  1303               	bcf	3,6	;RP1=0, select bank0
  7032  11B6  0847               	movf	?___ftadd,w
  7033  11B7  00DE               	movwf	log@x
  7034  11B8  0848               	movf	?___ftadd+1,w
  7035  11B9  00DF               	movwf	log@x+1
  7036  11BA  0849               	movf	?___ftadd+2,w
  7037  11BB  00E0               	movwf	log@x+2
  7038  11BC  30FF               	movlw	255
  7039  11BD  07E2               	addwf	log@exponent,f
  7040  11BE  1803               	skipnc
  7041  11BF  0AE3               	incf	log@exponent+1,f
  7042  11C0  30FF               	movlw	255
  7043  11C1  07E3               	addwf	log@exponent+1,f
  7044  11C2  085E               	movf	log@x,w
  7045  11C3  00D4               	movwf	eval_poly@x
  7046  11C4  085F               	movf	log@x+1,w
  7047  11C5  00D5               	movwf	eval_poly@x+1
  7048  11C6  0860               	movf	log@x+2,w
  7049  11C7  00D6               	movwf	eval_poly@x+2
  7050  11C8  3095               	movlw	(log@coeff-__stringbase)& (0+255)
  7051  11C9  00E1               	movwf	??_log
  7052  11CA  0861               	movf	??_log,w
  7053  11CB  00D7               	movwf	eval_poly@d
  7054  11CC  3008               	movlw	8
  7055  11CD  00D8               	movwf	eval_poly@n
  7056  11CE  3000               	movlw	0
  7057  11CF  00D9               	movwf	eval_poly@n+1
  7058  11D0  160A  158A  250F  160A  118A  	fcall	_eval_poly
  7059  11D5  1283               	bcf	3,5	;RP0=0, select bank0
  7060  11D6  1303               	bcf	3,6	;RP1=0, select bank0
  7061  11D7  0854               	movf	?_eval_poly,w
  7062  11D8  00DE               	movwf	log@x
  7063  11D9  0855               	movf	?_eval_poly+1,w
  7064  11DA  00DF               	movwf	log@x+1
  7065  11DB  0856               	movf	?_eval_poly+2,w
  7066  11DC  00E0               	movwf	log@x+2
  7067  11DD  085E               	movf	log@x,w
  7068  11DE  00C7               	movwf	___ftadd@f1
  7069  11DF  085F               	movf	log@x+1,w
  7070  11E0  00C8               	movwf	___ftadd@f1+1
  7071  11E1  0860               	movf	log@x+2,w
  7072  11E2  00C9               	movwf	___ftadd@f1+2
  7073  11E3  3072               	movlw	114
  7074  11E4  00A7               	movwf	___ftmul@f1
  7075  11E5  3031               	movlw	49
  7076  11E6  00A8               	movwf	___ftmul@f1+1
  7077  11E7  303F               	movlw	63
  7078  11E8  00A9               	movwf	___ftmul@f1+2
  7079  11E9  0863               	movf	log@exponent+1,w
  7080  11EA  01F9               	clrf	___awtoft@c+1
  7081  11EB  07F9               	addwf	___awtoft@c+1,f
  7082  11EC  0862               	movf	log@exponent,w
  7083  11ED  01F8               	clrf	___awtoft@c
  7084  11EE  07F8               	addwf	___awtoft@c,f
  7085  11EF  160A  158A  21D9  160A  118A  	fcall	___awtoft
  7086  11F4  0878               	movf	?___awtoft,w
  7087  11F5  1283               	bcf	3,5	;RP0=0, select bank0
  7088  11F6  1303               	bcf	3,6	;RP1=0, select bank0
  7089  11F7  00AA               	movwf	___ftmul@f2
  7090  11F8  0879               	movf	?___awtoft+1,w
  7091  11F9  00AB               	movwf	___ftmul@f2+1
  7092  11FA  087A               	movf	?___awtoft+2,w
  7093  11FB  00AC               	movwf	___ftmul@f2+2
  7094  11FC  160A  118A  2215  160A  118A  	fcall	___ftmul
  7095  1201  1283               	bcf	3,5	;RP0=0, select bank0
  7096  1202  1303               	bcf	3,6	;RP1=0, select bank0
  7097  1203  0827               	movf	?___ftmul,w
  7098  1204  00CA               	movwf	___ftadd@f2
  7099  1205  0828               	movf	?___ftmul+1,w
  7100  1206  00CB               	movwf	___ftadd@f2+1
  7101  1207  0829               	movf	?___ftmul+2,w
  7102  1208  00CC               	movwf	___ftadd@f2+2
  7103  1209  160A  118A  22E8   	fcall	___ftadd
  7104  120C  1283               	bcf	3,5	;RP0=0, select bank0
  7105  120D  1303               	bcf	3,6	;RP1=0, select bank0
  7106  120E  0847               	movf	?___ftadd,w
  7107  120F  00DE               	movwf	?_log
  7108  1210  0848               	movf	?___ftadd+1,w
  7109  1211  00DF               	movwf	?_log+1
  7110  1212  0849               	movf	?___ftadd+2,w
  7111  1213  00E0               	movwf	?_log+2
  7112  1214  0008               	return
  7113  1215                     __end_of_log:	
  7114                           
  7115                           	psect	text17
  7116  167B                     __ptext17:	
  7117 ;; *************** function _exp *****************
  7118 ;; Defined at:
  7119 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\exp.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;  x               3   72[BANK0 ] int 
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;  exponent        2    6[BANK1 ] int 
  7124 ;;  sign            1    8[BANK1 ] unsigned char 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  3   72[BANK0 ] unsigned char 
  7127 ;; Registers used:
  7128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7134 ;;      Params:         0       3       0       0       0
  7135 ;;      Locals:         0       0       9       0       0
  7136 ;;      Temps:          0       1       0       0       0
  7137 ;;      Totals:         0       4       9       0       0
  7138 ;;Total ram usage:       13 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:    3
  7141 ;; This function calls:
  7142 ;;		___awtoft
  7143 ;;		___ftdiv
  7144 ;;		___ftge
  7145 ;;		___ftmul
  7146 ;;		___ftneg
  7147 ;;		___ftsub
  7148 ;;		___fttol
  7149 ;;		_eval_poly
  7150 ;;		_floor
  7151 ;;		_ldexp
  7152 ;; This function is called by:
  7153 ;;		_pow
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           
  7158                           ;psect for function _exp
  7159  167B                     _exp:	
  7160                           
  7161                           ;incstack = 0
  7162                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7163  167B  1283               	bcf	3,5	;RP0=0, select bank0
  7164  167C  1303               	bcf	3,6	;RP1=0, select bank0
  7165  167D  086A               	movf	exp@x+2,w
  7166  167E  0469               	iorwf	exp@x+1,w
  7167  167F  0468               	iorwf	exp@x,w
  7168  1680  1D03               	skipz
  7169  1681  2E89               	goto	l2780
  7170  1682  3000               	movlw	0
  7171  1683  00E8               	movwf	?_exp
  7172  1684  3080               	movlw	128
  7173  1685  00E9               	movwf	?_exp+1
  7174  1686  303F               	movlw	63
  7175  1687  00EA               	movwf	?_exp+2
  7176  1688  0008               	return
  7177  1689                     l2780:	
  7178  1689  3072               	movlw	114
  7179  168A  00F0               	movwf	___ftge@ff1
  7180  168B  3031               	movlw	49
  7181  168C  00F1               	movwf	___ftge@ff1+1
  7182  168D  3044               	movlw	68
  7183  168E  00F2               	movwf	___ftge@ff1+2
  7184  168F  0868               	movf	exp@x,w
  7185  1690  00F3               	movwf	___ftge@ff2
  7186  1691  0869               	movf	exp@x+1,w
  7187  1692  00F4               	movwf	___ftge@ff2+1
  7188  1693  086A               	movf	exp@x+2,w
  7189  1694  00F5               	movwf	___ftge@ff2+2
  7190  1695  160A  158A  238F  160A  118A  	fcall	___ftge
  7191  169A  1803               	btfsc	3,0
  7192  169B  2EAA               	goto	l2790
  7193  169C  3022               	movlw	34
  7194  169D  1683               	bsf	3,5	;RP0=1, select bank1
  7195  169E  1303               	bcf	3,6	;RP1=0, select bank1
  7196  169F  00C2               	movwf	_errno^(0+128)
  7197  16A0  3000               	movlw	0
  7198  16A1  00C3               	movwf	(_errno^(0+128)+1)
  7199  16A2  30FF               	movlw	255
  7200  16A3  1283               	bcf	3,5	;RP0=0, select bank0
  7201  16A4  00E8               	movwf	?_exp
  7202  16A5  307F               	movlw	127
  7203  16A6  00E9               	movwf	?_exp+1
  7204  16A7  307F               	movlw	127
  7205  16A8  00EA               	movwf	?_exp+2
  7206  16A9  0008               	return
  7207  16AA                     l2790:	
  7208  16AA  1283               	bcf	3,5	;RP0=0, select bank0
  7209  16AB  1303               	bcf	3,6	;RP1=0, select bank0
  7210  16AC  0868               	movf	exp@x,w
  7211  16AD  00F0               	movwf	___ftge@ff1
  7212  16AE  0869               	movf	exp@x+1,w
  7213  16AF  00F1               	movwf	___ftge@ff1+1
  7214  16B0  086A               	movf	exp@x+2,w
  7215  16B1  00F2               	movwf	___ftge@ff1+2
  7216  16B2  3049               	movlw	73
  7217  16B3  00F3               	movwf	___ftge@ff2
  7218  16B4  303A               	movlw	58
  7219  16B5  00F4               	movwf	___ftge@ff2+1
  7220  16B6  30C4               	movlw	196
  7221  16B7  00F5               	movwf	___ftge@ff2+2
  7222  16B8  160A  158A  238F  160A  118A  	fcall	___ftge
  7223  16BD  1803               	btfsc	3,0
  7224  16BE  2ECE               	goto	l2796
  7225  16BF  3022               	movlw	34
  7226  16C0  1683               	bsf	3,5	;RP0=1, select bank1
  7227  16C1  1303               	bcf	3,6	;RP1=0, select bank1
  7228  16C2  00C2               	movwf	_errno^(0+128)
  7229  16C3  3000               	movlw	0
  7230  16C4  00C3               	movwf	(_errno^(0+128)+1)
  7231  16C5  3000               	movlw	0
  7232  16C6  1283               	bcf	3,5	;RP0=0, select bank0
  7233  16C7  1303               	bcf	3,6	;RP1=0, select bank0
  7234  16C8  00E8               	movwf	?_exp
  7235  16C9  3000               	movlw	0
  7236  16CA  00E9               	movwf	?_exp+1
  7237  16CB  3000               	movlw	0
  7238  16CC  00EA               	movwf	?_exp+2
  7239  16CD  0008               	return
  7240  16CE                     l2796:	
  7241  16CE  1283               	bcf	3,5	;RP0=0, select bank0
  7242  16CF  1303               	bcf	3,6	;RP1=0, select bank0
  7243  16D0  0868               	movf	exp@x,w
  7244  16D1  00F0               	movwf	___ftge@ff1
  7245  16D2  0869               	movf	exp@x+1,w
  7246  16D3  00F1               	movwf	___ftge@ff1+1
  7247  16D4  086A               	movf	exp@x+2,w
  7248  16D5  00F2               	movwf	___ftge@ff1+2
  7249  16D6  3000               	movlw	0
  7250  16D7  00F3               	movwf	___ftge@ff2
  7251  16D8  3000               	movlw	0
  7252  16D9  00F4               	movwf	___ftge@ff2+1
  7253  16DA  3000               	movlw	0
  7254  16DB  00F5               	movwf	___ftge@ff2+2
  7255  16DC  160A  158A  238F  160A  118A  	fcall	___ftge
  7256  16E1  3000               	movlw	0
  7257  16E2  1C03               	btfss	3,0
  7258  16E3  3001               	movlw	1
  7259  16E4  1283               	bcf	3,5	;RP0=0, select bank0
  7260  16E5  1303               	bcf	3,6	;RP1=0, select bank0
  7261  16E6  00EB               	movwf	??_exp
  7262  16E7  086B               	movf	??_exp,w
  7263  16E8  1683               	bsf	3,5	;RP0=1, select bank1
  7264  16E9  1303               	bcf	3,6	;RP1=0, select bank1
  7265  16EA  00A8               	movwf	exp@sign^(0+128)
  7266  16EB  0828               	movf	exp@sign^(0+128),w
  7267  16EC  1903               	btfsc	3,2
  7268  16ED  2F05               	goto	l2802
  7269  16EE  1283               	bcf	3,5	;RP0=0, select bank0
  7270  16EF  1303               	bcf	3,6	;RP1=0, select bank0
  7271  16F0  0868               	movf	exp@x,w
  7272  16F1  00F0               	movwf	___ftneg@f1
  7273  16F2  0869               	movf	exp@x+1,w
  7274  16F3  00F1               	movwf	___ftneg@f1+1
  7275  16F4  086A               	movf	exp@x+2,w
  7276  16F5  00F2               	movwf	___ftneg@f1+2
  7277  16F6  160A  158A  2172  160A  118A  	fcall	___ftneg
  7278  16FB  0870               	movf	?___ftneg,w
  7279  16FC  1283               	bcf	3,5	;RP0=0, select bank0
  7280  16FD  1303               	bcf	3,6	;RP1=0, select bank0
  7281  16FE  00E8               	movwf	exp@x
  7282  16FF  0871               	movf	?___ftneg+1,w
  7283  1700  00E9               	movwf	exp@x+1
  7284  1701  0872               	movf	?___ftneg+2,w
  7285  1702  00EA               	movwf	exp@x+2
  7286  1703  1683               	bsf	3,5	;RP0=1, select bank1
  7287  1704  1303               	bcf	3,6	;RP1=0, select bank1
  7288  1705                     l2802:	
  7289  1705  30AA               	movlw	170
  7290  1706  1283               	bcf	3,5	;RP0=0, select bank0
  7291  1707  00A7               	movwf	___ftmul@f1
  7292  1708  30B8               	movlw	184
  7293  1709  00A8               	movwf	___ftmul@f1+1
  7294  170A  303F               	movlw	63
  7295  170B  00A9               	movwf	___ftmul@f1+2
  7296  170C  0868               	movf	exp@x,w
  7297  170D  00AA               	movwf	___ftmul@f2
  7298  170E  0869               	movf	exp@x+1,w
  7299  170F  00AB               	movwf	___ftmul@f2+1
  7300  1710  086A               	movf	exp@x+2,w
  7301  1711  00AC               	movwf	___ftmul@f2+2
  7302  1712  160A  118A  2215  160A  118A  	fcall	___ftmul
  7303  1717  1283               	bcf	3,5	;RP0=0, select bank0
  7304  1718  1303               	bcf	3,6	;RP1=0, select bank0
  7305  1719  0827               	movf	?___ftmul,w
  7306  171A  00E8               	movwf	exp@x
  7307  171B  0828               	movf	?___ftmul+1,w
  7308  171C  00E9               	movwf	exp@x+1
  7309  171D  0829               	movf	?___ftmul+2,w
  7310  171E  00EA               	movwf	exp@x+2
  7311  171F  0868               	movf	exp@x,w
  7312  1720  00D6               	movwf	floor@x
  7313  1721  0869               	movf	exp@x+1,w
  7314  1722  00D7               	movwf	floor@x+1
  7315  1723  086A               	movf	exp@x+2,w
  7316  1724  00D8               	movwf	floor@x+2
  7317  1725  160A  158A  2616  160A  118A  	fcall	_floor
  7318  172A  1283               	bcf	3,5	;RP0=0, select bank0
  7319  172B  1303               	bcf	3,6	;RP1=0, select bank0
  7320  172C  0856               	movf	?_floor,w
  7321  172D  1683               	bsf	3,5	;RP0=1, select bank1
  7322  172E  1303               	bcf	3,6	;RP1=0, select bank1
  7323  172F  00A0               	movwf	_exp$669^(0+128)
  7324  1730  1283               	bcf	3,5	;RP0=0, select bank0
  7325  1731  1303               	bcf	3,6	;RP1=0, select bank0
  7326  1732  0857               	movf	?_floor+1,w
  7327  1733  1683               	bsf	3,5	;RP0=1, select bank1
  7328  1734  1303               	bcf	3,6	;RP1=0, select bank1
  7329  1735  00A1               	movwf	(_exp$669+1)^(0+128)
  7330  1736  1283               	bcf	3,5	;RP0=0, select bank0
  7331  1737  1303               	bcf	3,6	;RP1=0, select bank0
  7332  1738  0858               	movf	?_floor+2,w
  7333  1739  1683               	bsf	3,5	;RP0=1, select bank1
  7334  173A  1303               	bcf	3,6	;RP1=0, select bank1
  7335  173B  00A2               	movwf	(_exp$669+2)^(0+128)
  7336  173C  0820               	movf	_exp$669^(0+128),w
  7337  173D  1283               	bcf	3,5	;RP0=0, select bank0
  7338  173E  1303               	bcf	3,6	;RP1=0, select bank0
  7339  173F  00C0               	movwf	___fttol@f1
  7340  1740  1683               	bsf	3,5	;RP0=1, select bank1
  7341  1741  1303               	bcf	3,6	;RP1=0, select bank1
  7342  1742  0821               	movf	(_exp$669+1)^(0+128),w
  7343  1743  1283               	bcf	3,5	;RP0=0, select bank0
  7344  1744  1303               	bcf	3,6	;RP1=0, select bank0
  7345  1745  00C1               	movwf	___fttol@f1+1
  7346  1746  1683               	bsf	3,5	;RP0=1, select bank1
  7347  1747  1303               	bcf	3,6	;RP1=0, select bank1
  7348  1748  0822               	movf	(_exp$669+2)^(0+128),w
  7349  1749  1283               	bcf	3,5	;RP0=0, select bank0
  7350  174A  1303               	bcf	3,6	;RP1=0, select bank0
  7351  174B  00C2               	movwf	___fttol@f1+2
  7352  174C  160A  158A  2588  160A  118A  	fcall	___fttol
  7353  1751  1283               	bcf	3,5	;RP0=0, select bank0
  7354  1752  1303               	bcf	3,6	;RP1=0, select bank0
  7355  1753  0841               	movf	?___fttol+1,w
  7356  1754  1683               	bsf	3,5	;RP0=1, select bank1
  7357  1755  1303               	bcf	3,6	;RP1=0, select bank1
  7358  1756  01A7               	clrf	(exp@exponent+1)^(0+128)
  7359  1757  07A7               	addwf	(exp@exponent+1)^(0+128),f
  7360  1758  1283               	bcf	3,5	;RP0=0, select bank0
  7361  1759  1303               	bcf	3,6	;RP1=0, select bank0
  7362  175A  0840               	movf	?___fttol,w
  7363  175B  1683               	bsf	3,5	;RP0=1, select bank1
  7364  175C  1303               	bcf	3,6	;RP1=0, select bank1
  7365  175D  01A6               	clrf	exp@exponent^(0+128)
  7366  175E  07A6               	addwf	exp@exponent^(0+128),f
  7367  175F  0827               	movf	(exp@exponent+1)^(0+128),w
  7368  1760  01F9               	clrf	___awtoft@c+1
  7369  1761  07F9               	addwf	___awtoft@c+1,f
  7370  1762  0826               	movf	exp@exponent^(0+128),w
  7371  1763  01F8               	clrf	___awtoft@c
  7372  1764  07F8               	addwf	___awtoft@c,f
  7373  1765  160A  158A  21D9  160A  118A  	fcall	___awtoft
  7374  176A  0878               	movf	?___awtoft,w
  7375  176B  1283               	bcf	3,5	;RP0=0, select bank0
  7376  176C  1303               	bcf	3,6	;RP1=0, select bank0
  7377  176D  00D4               	movwf	___ftsub@f2
  7378  176E  0879               	movf	?___awtoft+1,w
  7379  176F  00D5               	movwf	___ftsub@f2+1
  7380  1770  087A               	movf	?___awtoft+2,w
  7381  1771  00D6               	movwf	___ftsub@f2+2
  7382  1772  0868               	movf	exp@x,w
  7383  1773  00D7               	movwf	___ftsub@f1
  7384  1774  0869               	movf	exp@x+1,w
  7385  1775  00D8               	movwf	___ftsub@f1+1
  7386  1776  086A               	movf	exp@x+2,w
  7387  1777  00D9               	movwf	___ftsub@f1+2
  7388  1778  160A  158A  21BD  160A  118A  	fcall	___ftsub
  7389  177D  1283               	bcf	3,5	;RP0=0, select bank0
  7390  177E  1303               	bcf	3,6	;RP1=0, select bank0
  7391  177F  0854               	movf	?___ftsub,w
  7392  1780  00E8               	movwf	exp@x
  7393  1781  0855               	movf	?___ftsub+1,w
  7394  1782  00E9               	movwf	exp@x+1
  7395  1783  0856               	movf	?___ftsub+2,w
  7396  1784  00EA               	movwf	exp@x+2
  7397  1785  0868               	movf	exp@x,w
  7398  1786  00D4               	movwf	eval_poly@x
  7399  1787  0869               	movf	exp@x+1,w
  7400  1788  00D5               	movwf	eval_poly@x+1
  7401  1789  086A               	movf	exp@x+2,w
  7402  178A  00D6               	movwf	eval_poly@x+2
  7403  178B  3077               	movlw	(exp@coeff-__stringbase)& (0+255)
  7404  178C  00EB               	movwf	??_exp
  7405  178D  086B               	movf	??_exp,w
  7406  178E  00D7               	movwf	eval_poly@d
  7407  178F  3009               	movlw	9
  7408  1790  00D8               	movwf	eval_poly@n
  7409  1791  3000               	movlw	0
  7410  1792  00D9               	movwf	eval_poly@n+1
  7411  1793  160A  158A  250F  160A  118A  	fcall	_eval_poly
  7412  1798  1283               	bcf	3,5	;RP0=0, select bank0
  7413  1799  1303               	bcf	3,6	;RP1=0, select bank0
  7414  179A  0854               	movf	?_eval_poly,w
  7415  179B  00DE               	movwf	ldexp@value
  7416  179C  0855               	movf	?_eval_poly+1,w
  7417  179D  00DF               	movwf	ldexp@value+1
  7418  179E  0856               	movf	?_eval_poly+2,w
  7419  179F  00E0               	movwf	ldexp@value+2
  7420  17A0  1683               	bsf	3,5	;RP0=1, select bank1
  7421  17A1  1303               	bcf	3,6	;RP1=0, select bank1
  7422  17A2  0827               	movf	(exp@exponent+1)^(0+128),w
  7423  17A3  1283               	bcf	3,5	;RP0=0, select bank0
  7424  17A4  1303               	bcf	3,6	;RP1=0, select bank0
  7425  17A5  01E2               	clrf	ldexp@newexp+1
  7426  17A6  07E2               	addwf	ldexp@newexp+1,f
  7427  17A7  1683               	bsf	3,5	;RP0=1, select bank1
  7428  17A8  1303               	bcf	3,6	;RP1=0, select bank1
  7429  17A9  0826               	movf	exp@exponent^(0+128),w
  7430  17AA  1283               	bcf	3,5	;RP0=0, select bank0
  7431  17AB  1303               	bcf	3,6	;RP1=0, select bank0
  7432  17AC  01E1               	clrf	ldexp@newexp
  7433  17AD  07E1               	addwf	ldexp@newexp,f
  7434  17AE  160A  158A  26AF  160A  118A  	fcall	_ldexp
  7435  17B3  1283               	bcf	3,5	;RP0=0, select bank0
  7436  17B4  1303               	bcf	3,6	;RP1=0, select bank0
  7437  17B5  085E               	movf	?_ldexp,w
  7438  17B6  00E8               	movwf	exp@x
  7439  17B7  085F               	movf	?_ldexp+1,w
  7440  17B8  00E9               	movwf	exp@x+1
  7441  17B9  0860               	movf	?_ldexp+2,w
  7442  17BA  00EA               	movwf	exp@x+2
  7443  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  7444  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  7445  17BD  0828               	movf	exp@sign^(0+128),w
  7446  17BE  1903               	btfsc	3,2
  7447  17BF  0008               	return
  7448  17C0  30FF               	movlw	255
  7449  17C1  00A3               	movwf	_exp$438^(0+128)
  7450  17C2  307F               	movlw	127
  7451  17C3  00A4               	movwf	(_exp$438+1)^(0+128)
  7452  17C4  307F               	movlw	127
  7453  17C5  00A5               	movwf	(_exp$438+2)^(0+128)
  7454  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  7455  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  7456  17C8  086A               	movf	exp@x+2,w
  7457  17C9  1683               	bsf	3,5	;RP0=1, select bank1
  7458  17CA  1303               	bcf	3,6	;RP1=0, select bank1
  7459  17CB  0625               	xorwf	(_exp$438+2)^(0+128),w
  7460  17CC  1D03               	skipz
  7461  17CD  2FDC               	goto	u3845
  7462  17CE  1283               	bcf	3,5	;RP0=0, select bank0
  7463  17CF  1303               	bcf	3,6	;RP1=0, select bank0
  7464  17D0  0869               	movf	exp@x+1,w
  7465  17D1  1683               	bsf	3,5	;RP0=1, select bank1
  7466  17D2  1303               	bcf	3,6	;RP1=0, select bank1
  7467  17D3  0624               	xorwf	(_exp$438+1)^(0+128),w
  7468  17D4  1D03               	skipz
  7469  17D5  2FDC               	goto	u3845
  7470  17D6  1283               	bcf	3,5	;RP0=0, select bank0
  7471  17D7  1303               	bcf	3,6	;RP1=0, select bank0
  7472  17D8  0868               	movf	exp@x,w
  7473  17D9  1683               	bsf	3,5	;RP0=1, select bank1
  7474  17DA  1303               	bcf	3,6	;RP1=0, select bank1
  7475  17DB  0623               	xorwf	_exp$438^(0+128),w
  7476  17DC                     u3845:	
  7477  17DC  1D03               	skipz
  7478  17DD  2FE7               	goto	l2824
  7479  17DE  3000               	movlw	0
  7480  17DF  1283               	bcf	3,5	;RP0=0, select bank0
  7481  17E0  1303               	bcf	3,6	;RP1=0, select bank0
  7482  17E1  00E8               	movwf	?_exp
  7483  17E2  3000               	movlw	0
  7484  17E3  00E9               	movwf	?_exp+1
  7485  17E4  3000               	movlw	0
  7486  17E5  00EA               	movwf	?_exp+2
  7487  17E6  0008               	return
  7488  17E7                     l2824:	
  7489  17E7  1283               	bcf	3,5	;RP0=0, select bank0
  7490  17E8  0868               	movf	exp@x,w
  7491  17E9  00B7               	movwf	___ftdiv@f2
  7492  17EA  0869               	movf	exp@x+1,w
  7493  17EB  00B8               	movwf	___ftdiv@f2+1
  7494  17EC  086A               	movf	exp@x+2,w
  7495  17ED  00B9               	movwf	___ftdiv@f2+2
  7496  17EE  3000               	movlw	0
  7497  17EF  00BA               	movwf	___ftdiv@f1
  7498  17F0  3080               	movlw	128
  7499  17F1  00BB               	movwf	___ftdiv@f1+1
  7500  17F2  303F               	movlw	63
  7501  17F3  00BC               	movwf	___ftdiv@f1+2
  7502  17F4  160A  158A  2748   	fcall	___ftdiv
  7503  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  7504  17F8  1303               	bcf	3,6	;RP1=0, select bank0
  7505  17F9  0837               	movf	?___ftdiv,w
  7506  17FA  00E8               	movwf	?_exp
  7507  17FB  0838               	movf	?___ftdiv+1,w
  7508  17FC  00E9               	movwf	?_exp+1
  7509  17FD  0839               	movf	?___ftdiv+2,w
  7510  17FE  00EA               	movwf	?_exp+2
  7511  17FF  0008               	return
  7512  1800                     __end_of_exp:	
  7513                           
  7514                           	psect	text18
  7515  1EAF                     __ptext18:	
  7516 ;; *************** function _ldexp *****************
  7517 ;; Defined at:
  7518 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  value           3   62[BANK0 ] unsigned char 
  7521 ;;  newexp          2   65[BANK0 ] int 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;		None
  7524 ;; Return value:  Size  Location     Type
  7525 ;;                  3   62[BANK0 ] int 
  7526 ;; Registers used:
  7527 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7528 ;; Tracked objects:
  7529 ;;		On entry : 0/0
  7530 ;;		On exit  : 0/0
  7531 ;;		Unchanged: 0/0
  7532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7533 ;;      Params:         0       5       0       0       0
  7534 ;;      Locals:         0       3       0       0       0
  7535 ;;      Temps:          0       2       0       0       0
  7536 ;;      Totals:         0      10       0       0       0
  7537 ;;Total ram usage:       10 bytes
  7538 ;; Hardware stack levels used:    1
  7539 ;; Hardware stack levels required when called:    1
  7540 ;; This function calls:
  7541 ;;		___ftge
  7542 ;;		___ftneg
  7543 ;; This function is called by:
  7544 ;;		_exp
  7545 ;; This function uses a non-reentrant model
  7546 ;;
  7547                           
  7548                           
  7549                           ;psect for function _ldexp
  7550  1EAF                     _ldexp:	
  7551                           
  7552                           ;incstack = 0
  7553                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7554  1EAF  1283               	bcf	3,5	;RP0=0, select bank0
  7555  1EB0  1303               	bcf	3,6	;RP1=0, select bank0
  7556  1EB1  0860               	movf	ldexp@value+2,w
  7557  1EB2  045F               	iorwf	ldexp@value+1,w
  7558  1EB3  045E               	iorwf	ldexp@value,w
  7559  1EB4  1D03               	skipz
  7560  1EB5  2EBD               	goto	l2444
  7561  1EB6  3000               	movlw	0
  7562  1EB7  00DE               	movwf	?_ldexp
  7563  1EB8  3000               	movlw	0
  7564  1EB9  00DF               	movwf	?_ldexp+1
  7565  1EBA  3000               	movlw	0
  7566  1EBB  00E0               	movwf	?_ldexp+2
  7567  1EBC  0008               	return
  7568  1EBD                     l2444:	
  7569  1EBD  0860               	movf	ldexp@value+2,w
  7570  1EBE  397F               	andlw	127
  7571  1EBF  00E3               	movwf	??_ldexp
  7572  1EC0  01E4               	clrf	??_ldexp+1
  7573  1EC1  1003               	clrc
  7574  1EC2  0DE3               	rlf	??_ldexp,f
  7575  1EC3  0DE4               	rlf	??_ldexp+1,f
  7576  1EC4  0863               	movf	??_ldexp,w
  7577  1EC5  07E1               	addwf	ldexp@newexp,f
  7578  1EC6  1803               	skipnc
  7579  1EC7  0AE2               	incf	ldexp@newexp+1,f
  7580  1EC8  0864               	movf	??_ldexp+1,w
  7581  1EC9  07E2               	addwf	ldexp@newexp+1,f
  7582  1ECA  0D5F               	rlf	ldexp@value+1,w
  7583  1ECB  0D5F               	rlf	ldexp@value+1,w
  7584  1ECC  3901               	andlw	1
  7585  1ECD  00E3               	movwf	??_ldexp
  7586  1ECE  01E4               	clrf	??_ldexp+1
  7587  1ECF  0863               	movf	??_ldexp,w
  7588  1ED0  07E1               	addwf	ldexp@newexp,f
  7589  1ED1  1803               	skipnc
  7590  1ED2  0AE2               	incf	ldexp@newexp+1,f
  7591  1ED3  0864               	movf	??_ldexp+1,w
  7592  1ED4  07E2               	addwf	ldexp@newexp+1,f
  7593  1ED5  1FE2               	btfss	ldexp@newexp+1,7
  7594  1ED6  2EE6               	goto	l2454
  7595  1ED7  3022               	movlw	34
  7596  1ED8  1683               	bsf	3,5	;RP0=1, select bank1
  7597  1ED9  1303               	bcf	3,6	;RP1=0, select bank1
  7598  1EDA  00C2               	movwf	_errno^(0+128)
  7599  1EDB  3000               	movlw	0
  7600  1EDC  00C3               	movwf	(_errno^(0+128)+1)
  7601  1EDD  3000               	movlw	0
  7602  1EDE  1283               	bcf	3,5	;RP0=0, select bank0
  7603  1EDF  1303               	bcf	3,6	;RP1=0, select bank0
  7604  1EE0  00DE               	movwf	?_ldexp
  7605  1EE1  3000               	movlw	0
  7606  1EE2  00DF               	movwf	?_ldexp+1
  7607  1EE3  3000               	movlw	0
  7608  1EE4  00E0               	movwf	?_ldexp+2
  7609  1EE5  0008               	return
  7610  1EE6                     l2454:	
  7611  1EE6  0862               	movf	ldexp@newexp+1,w
  7612  1EE7  3A80               	xorlw	128
  7613  1EE8  00FF               	movwf	127
  7614  1EE9  3081               	movlw	129
  7615  1EEA  027F               	subwf	127,w
  7616  1EEB  1D03               	skipz
  7617  1EEC  2EEF               	goto	u3225
  7618  1EED  3000               	movlw	0
  7619  1EEE  0261               	subwf	ldexp@newexp,w
  7620  1EEF                     u3225:	
  7621  1EEF  1C03               	skipc
  7622  1EF0  2F2F               	goto	l2478
  7623  1EF1  3022               	movlw	34
  7624  1EF2  1683               	bsf	3,5	;RP0=1, select bank1
  7625  1EF3  1303               	bcf	3,6	;RP1=0, select bank1
  7626  1EF4  00C2               	movwf	_errno^(0+128)
  7627  1EF5  3000               	movlw	0
  7628  1EF6  00C3               	movwf	(_errno^(0+128)+1)
  7629  1EF7  1283               	bcf	3,5	;RP0=0, select bank0
  7630  1EF8  1303               	bcf	3,6	;RP1=0, select bank0
  7631  1EF9  085E               	movf	ldexp@value,w
  7632  1EFA  00F0               	movwf	___ftge@ff1
  7633  1EFB  085F               	movf	ldexp@value+1,w
  7634  1EFC  00F1               	movwf	___ftge@ff1+1
  7635  1EFD  0860               	movf	ldexp@value+2,w
  7636  1EFE  00F2               	movwf	___ftge@ff1+2
  7637  1EFF  3000               	movlw	0
  7638  1F00  00F3               	movwf	___ftge@ff2
  7639  1F01  3000               	movlw	0
  7640  1F02  00F4               	movwf	___ftge@ff2+1
  7641  1F03  3000               	movlw	0
  7642  1F04  00F5               	movwf	___ftge@ff2+2
  7643  1F05  160A  158A  238F  160A  158A  	fcall	___ftge
  7644  1F0A  1803               	btfsc	3,0
  7645  1F0B  2F26               	goto	l2474
  7646  1F0C  30FF               	movlw	255
  7647  1F0D  1283               	bcf	3,5	;RP0=0, select bank0
  7648  1F0E  1303               	bcf	3,6	;RP1=0, select bank0
  7649  1F0F  00E5               	movwf	_ldexp$475
  7650  1F10  307F               	movlw	127
  7651  1F11  00E6               	movwf	_ldexp$475+1
  7652  1F12  307F               	movlw	127
  7653  1F13  00E7               	movwf	_ldexp$475+2
  7654  1F14  0865               	movf	_ldexp$475,w
  7655  1F15  00F0               	movwf	___ftneg@f1
  7656  1F16  0866               	movf	_ldexp$475+1,w
  7657  1F17  00F1               	movwf	___ftneg@f1+1
  7658  1F18  0867               	movf	_ldexp$475+2,w
  7659  1F19  00F2               	movwf	___ftneg@f1+2
  7660  1F1A  160A  158A  2172   	fcall	___ftneg
  7661  1F1D  0870               	movf	?___ftneg,w
  7662  1F1E  1283               	bcf	3,5	;RP0=0, select bank0
  7663  1F1F  1303               	bcf	3,6	;RP1=0, select bank0
  7664  1F20  00DE               	movwf	?_ldexp
  7665  1F21  0871               	movf	?___ftneg+1,w
  7666  1F22  00DF               	movwf	?_ldexp+1
  7667  1F23  0872               	movf	?___ftneg+2,w
  7668  1F24  00E0               	movwf	?_ldexp+2
  7669  1F25  0008               	return
  7670  1F26                     l2474:	
  7671  1F26  30FF               	movlw	255
  7672  1F27  1283               	bcf	3,5	;RP0=0, select bank0
  7673  1F28  1303               	bcf	3,6	;RP1=0, select bank0
  7674  1F29  00DE               	movwf	?_ldexp
  7675  1F2A  307F               	movlw	127
  7676  1F2B  00DF               	movwf	?_ldexp+1
  7677  1F2C  307F               	movlw	127
  7678  1F2D  00E0               	movwf	?_ldexp+2
  7679  1F2E  0008               	return
  7680  1F2F                     l2478:	
  7681  1F2F  1283               	bcf	3,5	;RP0=0, select bank0
  7682  1F30  1303               	bcf	3,6	;RP1=0, select bank0
  7683  1F31  0862               	movf	ldexp@newexp+1,w
  7684  1F32  00E4               	movwf	??_ldexp+1
  7685  1F33  0861               	movf	ldexp@newexp,w
  7686  1F34  00E3               	movwf	??_ldexp
  7687  1F35  0D64               	rlf	??_ldexp+1,w
  7688  1F36  0CE4               	rrf	??_ldexp+1,f
  7689  1F37  0CE3               	rrf	??_ldexp,f
  7690  1F38  0860               	movf	ldexp@value+2,w
  7691  1F39  0663               	xorwf	??_ldexp,w
  7692  1F3A  3980               	andlw	-128
  7693  1F3B  0663               	xorwf	??_ldexp,w
  7694  1F3C  00E0               	movwf	ldexp@value+2
  7695  1F3D  0861               	movf	ldexp@newexp,w
  7696  1F3E  3901               	andlw	1
  7697  1F3F  00E3               	movwf	??_ldexp
  7698  1F40  0CE3               	rrf	??_ldexp,f
  7699  1F41  0CE3               	rrf	??_ldexp,f
  7700  1F42  085F               	movf	ldexp@value+1,w
  7701  1F43  0663               	xorwf	??_ldexp,w
  7702  1F44  397F               	andlw	-129
  7703  1F45  0663               	xorwf	??_ldexp,w
  7704  1F46  00DF               	movwf	ldexp@value+1
  7705  1F47  0008               	return
  7706  1F48                     __end_of_ldexp:	
  7707                           
  7708                           	psect	text19
  7709  1972                     __ptext19:	
  7710 ;; *************** function ___ftneg *****************
  7711 ;; Defined at:
  7712 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  f1              3    0[COMMON] float 
  7715 ;; Auto vars:     Size  Location     Type
  7716 ;;		None
  7717 ;; Return value:  Size  Location     Type
  7718 ;;                  3    0[COMMON] float 
  7719 ;; Registers used:
  7720 ;;		wreg
  7721 ;; Tracked objects:
  7722 ;;		On entry : 0/0
  7723 ;;		On exit  : 0/0
  7724 ;;		Unchanged: 0/0
  7725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7726 ;;      Params:         3       0       0       0       0
  7727 ;;      Locals:         0       0       0       0       0
  7728 ;;      Temps:          0       0       0       0       0
  7729 ;;      Totals:         3       0       0       0       0
  7730 ;;Total ram usage:        3 bytes
  7731 ;; Hardware stack levels used:    1
  7732 ;; This function calls:
  7733 ;;		Nothing
  7734 ;; This function is called by:
  7735 ;;		_sprintf
  7736 ;;		_pow
  7737 ;;		_exp
  7738 ;;		_ldexp
  7739 ;; This function uses a non-reentrant model
  7740 ;;
  7741                           
  7742                           
  7743                           ;psect for function ___ftneg
  7744  1972                     ___ftneg:	
  7745                           
  7746                           ;incstack = 0
  7747                           ; Regs used in ___ftneg: [wreg]
  7748  1972  0872               	movf	___ftneg@f1+2,w
  7749  1973  0471               	iorwf	___ftneg@f1+1,w
  7750  1974  0470               	iorwf	___ftneg@f1,w
  7751  1975  1903               	skipnz
  7752  1976  0008               	return
  7753  1977  3080               	movlw	128
  7754  1978  06F2               	xorwf	___ftneg@f1+2,f
  7755  1979  0008               	return
  7756  197A                     __end_of___ftneg:	
  7757                           
  7758                           	psect	text20
  7759  1E16                     __ptext20:	
  7760 ;; *************** function _floor *****************
  7761 ;; Defined at:
  7762 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\floor.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  x               3   54[BANK0 ] float 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  i               3   58[BANK0 ] float 
  7767 ;;  expon           2   61[BANK0 ] int 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  3   54[BANK0 ] int 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7777 ;;      Params:         0       3       0       0       0
  7778 ;;      Locals:         0       5       0       0       0
  7779 ;;      Temps:          0       1       0       0       0
  7780 ;;      Totals:         0       9       0       0       0
  7781 ;;Total ram usage:        9 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    2
  7784 ;; This function calls:
  7785 ;;		___altoft
  7786 ;;		___ftadd
  7787 ;;		___ftge
  7788 ;;		___fttol
  7789 ;;		_frexp
  7790 ;; This function is called by:
  7791 ;;		_exp
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           
  7796                           ;psect for function _floor
  7797  1E16                     _floor:	
  7798                           
  7799                           ;incstack = 0
  7800                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7801  1E16  1283               	bcf	3,5	;RP0=0, select bank0
  7802  1E17  1303               	bcf	3,6	;RP1=0, select bank0
  7803  1E18  0856               	movf	floor@x,w
  7804  1E19  00F0               	movwf	frexp@value
  7805  1E1A  0857               	movf	floor@x+1,w
  7806  1E1B  00F1               	movwf	frexp@value+1
  7807  1E1C  0858               	movf	floor@x+2,w
  7808  1E1D  00F2               	movwf	frexp@value+2
  7809  1E1E  305D               	movlw	floor@expon& (0+255)
  7810  1E1F  00D9               	movwf	??_floor
  7811  1E20  0859               	movf	??_floor,w
  7812  1E21  00F3               	movwf	frexp@eptr
  7813  1E22  160A  158A  22C1  160A  158A  	fcall	_frexp
  7814  1E27  1283               	bcf	3,5	;RP0=0, select bank0
  7815  1E28  1303               	bcf	3,6	;RP1=0, select bank0
  7816  1E29  1FDE               	btfss	floor@expon+1,7
  7817  1E2A  2E50               	goto	l2414
  7818  1E2B  0856               	movf	floor@x,w
  7819  1E2C  00F0               	movwf	___ftge@ff1
  7820  1E2D  0857               	movf	floor@x+1,w
  7821  1E2E  00F1               	movwf	___ftge@ff1+1
  7822  1E2F  0858               	movf	floor@x+2,w
  7823  1E30  00F2               	movwf	___ftge@ff1+2
  7824  1E31  3000               	movlw	0
  7825  1E32  00F3               	movwf	___ftge@ff2
  7826  1E33  3000               	movlw	0
  7827  1E34  00F4               	movwf	___ftge@ff2+1
  7828  1E35  3000               	movlw	0
  7829  1E36  00F5               	movwf	___ftge@ff2+2
  7830  1E37  160A  158A  238F  160A  158A  	fcall	___ftge
  7831  1E3C  1803               	btfsc	3,0
  7832  1E3D  2E47               	goto	l2410
  7833  1E3E  3000               	movlw	0
  7834  1E3F  1283               	bcf	3,5	;RP0=0, select bank0
  7835  1E40  1303               	bcf	3,6	;RP1=0, select bank0
  7836  1E41  00D6               	movwf	?_floor
  7837  1E42  3080               	movlw	128
  7838  1E43  00D7               	movwf	?_floor+1
  7839  1E44  30BF               	movlw	191
  7840  1E45  00D8               	movwf	?_floor+2
  7841  1E46  0008               	return
  7842  1E47                     l2410:	
  7843  1E47  3000               	movlw	0
  7844  1E48  1283               	bcf	3,5	;RP0=0, select bank0
  7845  1E49  1303               	bcf	3,6	;RP1=0, select bank0
  7846  1E4A  00D6               	movwf	?_floor
  7847  1E4B  3000               	movlw	0
  7848  1E4C  00D7               	movwf	?_floor+1
  7849  1E4D  3000               	movlw	0
  7850  1E4E  00D8               	movwf	?_floor+2
  7851  1E4F  0008               	return
  7852  1E50                     l2414:	
  7853  1E50  3000               	movlw	0
  7854  1E51  025E               	subwf	floor@expon+1,w
  7855  1E52  3015               	movlw	21
  7856  1E53  1903               	skipnz
  7857  1E54  025D               	subwf	floor@expon,w
  7858  1E55  1803               	btfsc	3,0
  7859  1E56  0008               	return
  7860  1E57  0856               	movf	floor@x,w
  7861  1E58  00C0               	movwf	___fttol@f1
  7862  1E59  0857               	movf	floor@x+1,w
  7863  1E5A  00C1               	movwf	___fttol@f1+1
  7864  1E5B  0858               	movf	floor@x+2,w
  7865  1E5C  00C2               	movwf	___fttol@f1+2
  7866  1E5D  160A  158A  2588  160A  158A  	fcall	___fttol
  7867  1E62  1283               	bcf	3,5	;RP0=0, select bank0
  7868  1E63  1303               	bcf	3,6	;RP1=0, select bank0
  7869  1E64  0843               	movf	?___fttol+3,w
  7870  1E65  00D1               	movwf	___altoft@c+3
  7871  1E66  0842               	movf	?___fttol+2,w
  7872  1E67  00D0               	movwf	___altoft@c+2
  7873  1E68  0841               	movf	?___fttol+1,w
  7874  1E69  00CF               	movwf	___altoft@c+1
  7875  1E6A  0840               	movf	?___fttol,w
  7876  1E6B  00CE               	movwf	___altoft@c
  7877  1E6C  160A  158A  2301  160A  158A  	fcall	___altoft
  7878  1E71  1283               	bcf	3,5	;RP0=0, select bank0
  7879  1E72  1303               	bcf	3,6	;RP1=0, select bank0
  7880  1E73  084E               	movf	?___altoft,w
  7881  1E74  00DA               	movwf	floor@i
  7882  1E75  084F               	movf	?___altoft+1,w
  7883  1E76  00DB               	movwf	floor@i+1
  7884  1E77  0850               	movf	?___altoft+2,w
  7885  1E78  00DC               	movwf	floor@i+2
  7886  1E79  0856               	movf	floor@x,w
  7887  1E7A  00F0               	movwf	___ftge@ff1
  7888  1E7B  0857               	movf	floor@x+1,w
  7889  1E7C  00F1               	movwf	___ftge@ff1+1
  7890  1E7D  0858               	movf	floor@x+2,w
  7891  1E7E  00F2               	movwf	___ftge@ff1+2
  7892  1E7F  085A               	movf	floor@i,w
  7893  1E80  00F3               	movwf	___ftge@ff2
  7894  1E81  085B               	movf	floor@i+1,w
  7895  1E82  00F4               	movwf	___ftge@ff2+1
  7896  1E83  085C               	movf	floor@i+2,w
  7897  1E84  00F5               	movwf	___ftge@ff2+2
  7898  1E85  160A  158A  238F  160A  158A  	fcall	___ftge
  7899  1E8A  1803               	btfsc	3,0
  7900  1E8B  2EA6               	goto	l2424
  7901  1E8C  3000               	movlw	0
  7902  1E8D  1283               	bcf	3,5	;RP0=0, select bank0
  7903  1E8E  1303               	bcf	3,6	;RP1=0, select bank0
  7904  1E8F  00C7               	movwf	___ftadd@f1
  7905  1E90  3080               	movlw	128
  7906  1E91  00C8               	movwf	___ftadd@f1+1
  7907  1E92  30BF               	movlw	191
  7908  1E93  00C9               	movwf	___ftadd@f1+2
  7909  1E94  085A               	movf	floor@i,w
  7910  1E95  00CA               	movwf	___ftadd@f2
  7911  1E96  085B               	movf	floor@i+1,w
  7912  1E97  00CB               	movwf	___ftadd@f2+1
  7913  1E98  085C               	movf	floor@i+2,w
  7914  1E99  00CC               	movwf	___ftadd@f2+2
  7915  1E9A  160A  118A  22E8   	fcall	___ftadd
  7916  1E9D  1283               	bcf	3,5	;RP0=0, select bank0
  7917  1E9E  1303               	bcf	3,6	;RP1=0, select bank0
  7918  1E9F  0847               	movf	?___ftadd,w
  7919  1EA0  00D6               	movwf	?_floor
  7920  1EA1  0848               	movf	?___ftadd+1,w
  7921  1EA2  00D7               	movwf	?_floor+1
  7922  1EA3  0849               	movf	?___ftadd+2,w
  7923  1EA4  00D8               	movwf	?_floor+2
  7924  1EA5  0008               	return
  7925  1EA6                     l2424:	
  7926  1EA6  1283               	bcf	3,5	;RP0=0, select bank0
  7927  1EA7  1303               	bcf	3,6	;RP1=0, select bank0
  7928  1EA8  085A               	movf	floor@i,w
  7929  1EA9  00D6               	movwf	?_floor
  7930  1EAA  085B               	movf	floor@i+1,w
  7931  1EAB  00D7               	movwf	?_floor+1
  7932  1EAC  085C               	movf	floor@i+2,w
  7933  1EAD  00D8               	movwf	?_floor+2
  7934  1EAE  0008               	return
  7935  1EAF                     __end_of_floor:	
  7936                           
  7937                           	psect	text21
  7938  1AC1                     __ptext21:	
  7939 ;; *************** function _frexp *****************
  7940 ;; Defined at:
  7941 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  value           3    0[COMMON] int 
  7944 ;;  eptr            1    3[COMMON] PTR int 
  7945 ;;		 -> log@exponent(2), floor@expon(2), 
  7946 ;; Auto vars:     Size  Location     Type
  7947 ;;		None
  7948 ;; Return value:  Size  Location     Type
  7949 ;;                  3    0[COMMON] PTR int 
  7950 ;; Registers used:
  7951 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7952 ;; Tracked objects:
  7953 ;;		On entry : 0/0
  7954 ;;		On exit  : 0/0
  7955 ;;		Unchanged: 0/0
  7956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7957 ;;      Params:         4       0       0       0       0
  7958 ;;      Locals:         0       0       0       0       0
  7959 ;;      Temps:          2       0       0       0       0
  7960 ;;      Totals:         6       0       0       0       0
  7961 ;;Total ram usage:        6 bytes
  7962 ;; Hardware stack levels used:    1
  7963 ;; This function calls:
  7964 ;;		Nothing
  7965 ;; This function is called by:
  7966 ;;		_floor
  7967 ;;		_log
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           
  7972                           ;psect for function _frexp
  7973  1AC1                     _frexp:	
  7974                           
  7975                           ;incstack = 0
  7976                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  7977  1AC1  0872               	movf	frexp@value+2,w
  7978  1AC2  0471               	iorwf	frexp@value+1,w
  7979  1AC3  0470               	iorwf	frexp@value,w
  7980  1AC4  1D03               	skipz
  7981  1AC5  2AD3               	goto	l2246
  7982  1AC6  0873               	movf	frexp@eptr,w
  7983  1AC7  0084               	movwf	4
  7984  1AC8  1383               	bcf	3,7	;select IRP bank0
  7985  1AC9  0180               	clrf	0
  7986  1ACA  0A84               	incf	4,f
  7987  1ACB  0180               	clrf	0
  7988  1ACC  3000               	movlw	0
  7989  1ACD  00F0               	movwf	?_frexp
  7990  1ACE  3000               	movlw	0
  7991  1ACF  00F1               	movwf	?_frexp+1
  7992  1AD0  3000               	movlw	0
  7993  1AD1  00F2               	movwf	?_frexp+2
  7994  1AD2  0008               	return
  7995  1AD3                     l2246:	
  7996  1AD3  0872               	movf	frexp@value+2,w
  7997  1AD4  397F               	andlw	127
  7998  1AD5  00F4               	movwf	??_frexp
  7999  1AD6  01F5               	clrf	??_frexp+1
  8000  1AD7  1003               	clrc
  8001  1AD8  0DF4               	rlf	??_frexp,f
  8002  1AD9  0DF5               	rlf	??_frexp+1,f
  8003  1ADA  0873               	movf	frexp@eptr,w
  8004  1ADB  0084               	movwf	4
  8005  1ADC  0874               	movf	??_frexp,w
  8006  1ADD  1383               	bcf	3,7	;select IRP bank0
  8007  1ADE  0080               	movwf	0
  8008  1ADF  0A84               	incf	4,f
  8009  1AE0  0875               	movf	??_frexp+1,w
  8010  1AE1  0080               	movwf	0
  8011  1AE2  0D71               	rlf	frexp@value+1,w
  8012  1AE3  0D71               	rlf	frexp@value+1,w
  8013  1AE4  3901               	andlw	1
  8014  1AE5  00F4               	movwf	??_frexp
  8015  1AE6  01F5               	clrf	??_frexp+1
  8016  1AE7  0873               	movf	frexp@eptr,w
  8017  1AE8  0084               	movwf	4
  8018  1AE9  0874               	movf	??_frexp,w
  8019  1AEA  0480               	iorwf	0,f
  8020  1AEB  0A84               	incf	4,f
  8021  1AEC  0875               	movf	??_frexp+1,w
  8022  1AED  0480               	iorwf	0,f
  8023  1AEE  0873               	movf	frexp@eptr,w
  8024  1AEF  0084               	movwf	4
  8025  1AF0  3082               	movlw	130
  8026  1AF1  0780               	addwf	0,f
  8027  1AF2  0F84               	incfsz	4,f
  8028  1AF3  0800               	movf	0,w
  8029  1AF4  1803               	skipnc
  8030  1AF5  0A00               	incf	0,w
  8031  1AF6  00FF               	movwf	127
  8032  1AF7  30FF               	movlw	255
  8033  1AF8  077F               	addwf	127,w
  8034  1AF9  0080               	movwf	0
  8035  1AFA  0384               	decf	4,f
  8036  1AFB  0872               	movf	frexp@value+2,w
  8037  1AFC  3980               	andlw	-128
  8038  1AFD  383F               	iorlw	63
  8039  1AFE  00F2               	movwf	frexp@value+2
  8040  1AFF  13F1               	bcf	frexp@value+1,7
  8041  1B00  0008               	return
  8042  1B01                     __end_of_frexp:	
  8043                           
  8044                           	psect	text22
  8045  1D88                     __ptext22:	
  8046 ;; *************** function ___fttol *****************
  8047 ;; Defined at:
  8048 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  8049 ;; Parameters:    Size  Location     Type
  8050 ;;  f1              3   32[BANK0 ] float 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;  lval            4   41[BANK0 ] unsigned long 
  8053 ;;  exp1            1   45[BANK0 ] unsigned char 
  8054 ;;  sign1           1   40[BANK0 ] unsigned char 
  8055 ;; Return value:  Size  Location     Type
  8056 ;;                  4   32[BANK0 ] long 
  8057 ;; Registers used:
  8058 ;;		wreg, status,2, status,0
  8059 ;; Tracked objects:
  8060 ;;		On entry : 0/0
  8061 ;;		On exit  : 0/0
  8062 ;;		Unchanged: 0/0
  8063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8064 ;;      Params:         0       4       0       0       0
  8065 ;;      Locals:         0       6       0       0       0
  8066 ;;      Temps:          0       4       0       0       0
  8067 ;;      Totals:         0      14       0       0       0
  8068 ;;Total ram usage:       14 bytes
  8069 ;; Hardware stack levels used:    1
  8070 ;; This function calls:
  8071 ;;		Nothing
  8072 ;; This function is called by:
  8073 ;;		_sprintf
  8074 ;;		_pow
  8075 ;;		_exp
  8076 ;;		_floor
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079                           
  8080                           
  8081                           ;psect for function ___fttol
  8082  1D88                     ___fttol:	
  8083                           
  8084                           ;incstack = 0
  8085                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8086  1D88  1283               	bcf	3,5	;RP0=0, select bank0
  8087  1D89  1303               	bcf	3,6	;RP1=0, select bank0
  8088  1D8A  0840               	movf	___fttol@f1,w
  8089  1D8B  00C4               	movwf	??___fttol
  8090  1D8C  0841               	movf	___fttol@f1+1,w
  8091  1D8D  00C5               	movwf	??___fttol+1
  8092  1D8E  0842               	movf	___fttol@f1+2,w
  8093  1D8F  00C6               	movwf	??___fttol+2
  8094  1D90  1003               	clrc
  8095  1D91  0D45               	rlf	??___fttol+1,w
  8096  1D92  0D46               	rlf	??___fttol+2,w
  8097  1D93  00C7               	movwf	??___fttol+3
  8098  1D94  0847               	movf	??___fttol+3,w
  8099  1D95  00CD               	movwf	___fttol@exp1
  8100  1D96  08CD               	movf	___fttol@exp1,f
  8101  1D97  1D03               	skipz
  8102  1D98  2DA2               	goto	l2200
  8103  1D99  3000               	movlw	0
  8104  1D9A  00C3               	movwf	?___fttol+3
  8105  1D9B  3000               	movlw	0
  8106  1D9C  00C2               	movwf	?___fttol+2
  8107  1D9D  3000               	movlw	0
  8108  1D9E  00C1               	movwf	?___fttol+1
  8109  1D9F  3000               	movlw	0
  8110  1DA0  00C0               	movwf	?___fttol
  8111  1DA1  0008               	return
  8112  1DA2                     l2200:	
  8113  1DA2  0840               	movf	___fttol@f1,w
  8114  1DA3  00C4               	movwf	??___fttol
  8115  1DA4  0841               	movf	___fttol@f1+1,w
  8116  1DA5  00C5               	movwf	??___fttol+1
  8117  1DA6  0842               	movf	___fttol@f1+2,w
  8118  1DA7  00C6               	movwf	??___fttol+2
  8119  1DA8  3017               	movlw	23
  8120  1DA9                     u2775:	
  8121  1DA9  1003               	clrc
  8122  1DAA  0CC6               	rrf	??___fttol+2,f
  8123  1DAB  0CC5               	rrf	??___fttol+1,f
  8124  1DAC  0CC4               	rrf	??___fttol,f
  8125  1DAD  3EFF               	addlw	-1
  8126  1DAE  1D03               	skipz
  8127  1DAF  2DA9               	goto	u2775
  8128  1DB0  0844               	movf	??___fttol,w
  8129  1DB1  00C7               	movwf	??___fttol+3
  8130  1DB2  0847               	movf	??___fttol+3,w
  8131  1DB3  00C8               	movwf	___fttol@sign1
  8132  1DB4  17C1               	bsf	___fttol@f1+1,7
  8133  1DB5  30FF               	movlw	255
  8134  1DB6  05C0               	andwf	___fttol@f1,f
  8135  1DB7  30FF               	movlw	255
  8136  1DB8  05C1               	andwf	___fttol@f1+1,f
  8137  1DB9  3000               	movlw	0
  8138  1DBA  05C2               	andwf	___fttol@f1+2,f
  8139  1DBB  0840               	movf	___fttol@f1,w
  8140  1DBC  00C9               	movwf	___fttol@lval
  8141  1DBD  0841               	movf	___fttol@f1+1,w
  8142  1DBE  00CA               	movwf	___fttol@lval+1
  8143  1DBF  0842               	movf	___fttol@f1+2,w
  8144  1DC0  00CB               	movwf	___fttol@lval+2
  8145  1DC1  01CC               	clrf	___fttol@lval+3
  8146  1DC2  308E               	movlw	142
  8147  1DC3  02CD               	subwf	___fttol@exp1,f
  8148  1DC4  1FCD               	btfss	___fttol@exp1,7
  8149  1DC5  2DE4               	goto	l2220
  8150  1DC6  084D               	movf	___fttol@exp1,w
  8151  1DC7  3A80               	xorlw	128
  8152  1DC8  3E8F               	addlw	143
  8153  1DC9  1803               	skipnc
  8154  1DCA  2DD4               	goto	l2218
  8155  1DCB  3000               	movlw	0
  8156  1DCC  00C3               	movwf	?___fttol+3
  8157  1DCD  3000               	movlw	0
  8158  1DCE  00C2               	movwf	?___fttol+2
  8159  1DCF  3000               	movlw	0
  8160  1DD0  00C1               	movwf	?___fttol+1
  8161  1DD1  3000               	movlw	0
  8162  1DD2  00C0               	movwf	?___fttol
  8163  1DD3  0008               	return
  8164  1DD4                     l2218:	
  8165  1DD4  3001               	movlw	1
  8166  1DD5                     u2805:	
  8167  1DD5  1003               	clrc
  8168  1DD6  0CCC               	rrf	___fttol@lval+3,f
  8169  1DD7  0CCB               	rrf	___fttol@lval+2,f
  8170  1DD8  0CCA               	rrf	___fttol@lval+1,f
  8171  1DD9  0CC9               	rrf	___fttol@lval,f
  8172  1DDA  3EFF               	addlw	-1
  8173  1DDB  1D03               	skipz
  8174  1DDC  2DD5               	goto	u2805
  8175  1DDD  3001               	movlw	1
  8176  1DDE  00C4               	movwf	??___fttol
  8177  1DDF  0844               	movf	??___fttol,w
  8178  1DE0  07CD               	addwf	___fttol@exp1,f
  8179  1DE1  1903               	btfsc	3,2
  8180  1DE2  2DFF               	goto	l2230
  8181  1DE3  2DD4               	goto	l2218
  8182  1DE4                     l2220:	
  8183  1DE4  3018               	movlw	24
  8184  1DE5  024D               	subwf	___fttol@exp1,w
  8185  1DE6  1C03               	skipc
  8186  1DE7  2DFC               	goto	l2228
  8187  1DE8  3000               	movlw	0
  8188  1DE9  00C3               	movwf	?___fttol+3
  8189  1DEA  3000               	movlw	0
  8190  1DEB  00C2               	movwf	?___fttol+2
  8191  1DEC  3000               	movlw	0
  8192  1DED  00C1               	movwf	?___fttol+1
  8193  1DEE  3000               	movlw	0
  8194  1DEF  00C0               	movwf	?___fttol
  8195  1DF0  0008               	return
  8196  1DF1                     l2226:	
  8197  1DF1  3001               	movlw	1
  8198  1DF2  00C4               	movwf	??___fttol
  8199  1DF3                     u2835:	
  8200  1DF3  1003               	clrc
  8201  1DF4  0DC9               	rlf	___fttol@lval,f
  8202  1DF5  0DCA               	rlf	___fttol@lval+1,f
  8203  1DF6  0DCB               	rlf	___fttol@lval+2,f
  8204  1DF7  0DCC               	rlf	___fttol@lval+3,f
  8205  1DF8  0BC4               	decfsz	??___fttol,f
  8206  1DF9  2DF3               	goto	u2835
  8207  1DFA  3001               	movlw	1
  8208  1DFB  02CD               	subwf	___fttol@exp1,f
  8209  1DFC                     l2228:	
  8210  1DFC  08CD               	movf	___fttol@exp1,f
  8211  1DFD  1D03               	skipz
  8212  1DFE  2DF1               	goto	l2226
  8213  1DFF                     l2230:	
  8214  1DFF  0848               	movf	___fttol@sign1,w
  8215  1E00  1903               	btfsc	3,2
  8216  1E01  2E0D               	goto	l2234
  8217  1E02  09C9               	comf	___fttol@lval,f
  8218  1E03  09CA               	comf	___fttol@lval+1,f
  8219  1E04  09CB               	comf	___fttol@lval+2,f
  8220  1E05  09CC               	comf	___fttol@lval+3,f
  8221  1E06  0AC9               	incf	___fttol@lval,f
  8222  1E07  1903               	skipnz
  8223  1E08  0ACA               	incf	___fttol@lval+1,f
  8224  1E09  1903               	skipnz
  8225  1E0A  0ACB               	incf	___fttol@lval+2,f
  8226  1E0B  1903               	skipnz
  8227  1E0C  0ACC               	incf	___fttol@lval+3,f
  8228  1E0D                     l2234:	
  8229  1E0D  084C               	movf	___fttol@lval+3,w
  8230  1E0E  00C3               	movwf	?___fttol+3
  8231  1E0F  084B               	movf	___fttol@lval+2,w
  8232  1E10  00C2               	movwf	?___fttol+2
  8233  1E11  084A               	movf	___fttol@lval+1,w
  8234  1E12  00C1               	movwf	?___fttol+1
  8235  1E13  0849               	movf	___fttol@lval,w
  8236  1E14  00C0               	movwf	?___fttol
  8237  1E15  0008               	return
  8238  1E16                     __end_of___fttol:	
  8239                           
  8240                           	psect	text23
  8241  1B8F                     __ptext23:	
  8242 ;; *************** function ___ftge *****************
  8243 ;; Defined at:
  8244 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  ff1             3    0[COMMON] float 
  8247 ;;  ff2             3    3[COMMON] float 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;		None
  8250 ;; Return value:  Size  Location     Type
  8251 ;;		None               void
  8252 ;; Registers used:
  8253 ;;		wreg, status,2, status,0
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8259 ;;      Params:         6       0       0       0       0
  8260 ;;      Locals:         0       0       0       0       0
  8261 ;;      Temps:          6       0       0       0       0
  8262 ;;      Totals:        12       0       0       0       0
  8263 ;;Total ram usage:       12 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_main
  8269 ;;		_sprintf
  8270 ;;		_pow
  8271 ;;		_exp
  8272 ;;		_floor
  8273 ;;		_ldexp
  8274 ;;		_log
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           
  8279                           ;psect for function ___ftge
  8280  1B8F                     ___ftge:	
  8281                           
  8282                           ;incstack = 0
  8283                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8284  1B8F  1FF2               	btfss	___ftge@ff1+2,7
  8285  1B90  2BB6               	goto	l2120
  8286  1B91  3000               	movlw	0
  8287  1B92  00F6               	movwf	??___ftge
  8288  1B93  3000               	movlw	0
  8289  1B94  00F7               	movwf	??___ftge+1
  8290  1B95  3080               	movlw	128
  8291  1B96  00F8               	movwf	??___ftge+2
  8292  1B97  0970               	comf	___ftge@ff1,w
  8293  1B98  00F9               	movwf	??___ftge+3
  8294  1B99  0971               	comf	___ftge@ff1+1,w
  8295  1B9A  00FA               	movwf	??___ftge+4
  8296  1B9B  0972               	comf	___ftge@ff1+2,w
  8297  1B9C  00FB               	movwf	??___ftge+5
  8298  1B9D  0AF9               	incf	??___ftge+3,f
  8299  1B9E  1903               	skipnz
  8300  1B9F  0AFA               	incf	??___ftge+4,f
  8301  1BA0  1903               	skipnz
  8302  1BA1  0AFB               	incf	??___ftge+5,f
  8303  1BA2  0879               	movf	??___ftge+3,w
  8304  1BA3  07F6               	addwf	??___ftge,f
  8305  1BA4  087A               	movf	??___ftge+4,w
  8306  1BA5  1803               	skipnc
  8307  1BA6  0F7A               	incfsz	??___ftge+4,w
  8308  1BA7  2BA9               	goto	u2571
  8309  1BA8  2BAA               	goto	u2572
  8310  1BA9                     u2571:	
  8311  1BA9  07F7               	addwf	??___ftge+1,f
  8312  1BAA                     u2572:	
  8313  1BAA  087B               	movf	??___ftge+5,w
  8314  1BAB  1803               	skipnc
  8315  1BAC  0F7B               	incfsz	??___ftge+5,w
  8316  1BAD  2BAF               	goto	u2573
  8317  1BAE  2BB0               	goto	u2574
  8318  1BAF                     u2573:	
  8319  1BAF  07F8               	addwf	??___ftge+2,f
  8320  1BB0                     u2574:	
  8321  1BB0  0876               	movf	??___ftge,w
  8322  1BB1  00F0               	movwf	___ftge@ff1
  8323  1BB2  0877               	movf	??___ftge+1,w
  8324  1BB3  00F1               	movwf	___ftge@ff1+1
  8325  1BB4  0878               	movf	??___ftge+2,w
  8326  1BB5  00F2               	movwf	___ftge@ff1+2
  8327  1BB6                     l2120:	
  8328  1BB6  1FF5               	btfss	___ftge@ff2+2,7
  8329  1BB7  2BDD               	goto	l2124
  8330  1BB8  3000               	movlw	0
  8331  1BB9  00F6               	movwf	??___ftge
  8332  1BBA  3000               	movlw	0
  8333  1BBB  00F7               	movwf	??___ftge+1
  8334  1BBC  3080               	movlw	128
  8335  1BBD  00F8               	movwf	??___ftge+2
  8336  1BBE  0973               	comf	___ftge@ff2,w
  8337  1BBF  00F9               	movwf	??___ftge+3
  8338  1BC0  0974               	comf	___ftge@ff2+1,w
  8339  1BC1  00FA               	movwf	??___ftge+4
  8340  1BC2  0975               	comf	___ftge@ff2+2,w
  8341  1BC3  00FB               	movwf	??___ftge+5
  8342  1BC4  0AF9               	incf	??___ftge+3,f
  8343  1BC5  1903               	skipnz
  8344  1BC6  0AFA               	incf	??___ftge+4,f
  8345  1BC7  1903               	skipnz
  8346  1BC8  0AFB               	incf	??___ftge+5,f
  8347  1BC9  0879               	movf	??___ftge+3,w
  8348  1BCA  07F6               	addwf	??___ftge,f
  8349  1BCB  087A               	movf	??___ftge+4,w
  8350  1BCC  1803               	skipnc
  8351  1BCD  0F7A               	incfsz	??___ftge+4,w
  8352  1BCE  2BD0               	goto	u2591
  8353  1BCF  2BD1               	goto	u2592
  8354  1BD0                     u2591:	
  8355  1BD0  07F7               	addwf	??___ftge+1,f
  8356  1BD1                     u2592:	
  8357  1BD1  087B               	movf	??___ftge+5,w
  8358  1BD2  1803               	skipnc
  8359  1BD3  0F7B               	incfsz	??___ftge+5,w
  8360  1BD4  2BD6               	goto	u2593
  8361  1BD5  2BD7               	goto	u2594
  8362  1BD6                     u2593:	
  8363  1BD6  07F8               	addwf	??___ftge+2,f
  8364  1BD7                     u2594:	
  8365  1BD7  0876               	movf	??___ftge,w
  8366  1BD8  00F3               	movwf	___ftge@ff2
  8367  1BD9  0877               	movf	??___ftge+1,w
  8368  1BDA  00F4               	movwf	___ftge@ff2+1
  8369  1BDB  0878               	movf	??___ftge+2,w
  8370  1BDC  00F5               	movwf	___ftge@ff2+2
  8371  1BDD                     l2124:	
  8372  1BDD  3080               	movlw	128
  8373  1BDE  06F2               	xorwf	___ftge@ff1+2,f
  8374  1BDF  3080               	movlw	128
  8375  1BE0  06F5               	xorwf	___ftge@ff2+2,f
  8376  1BE1  0875               	movf	___ftge@ff2+2,w
  8377  1BE2  0272               	subwf	___ftge@ff1+2,w
  8378  1BE3  1D03               	skipz
  8379  1BE4  0008               	return
  8380  1BE5  0874               	movf	___ftge@ff2+1,w
  8381  1BE6  0271               	subwf	___ftge@ff1+1,w
  8382  1BE7  1D03               	skipz
  8383  1BE8  0008               	return
  8384  1BE9  0873               	movf	___ftge@ff2,w
  8385  1BEA  0270               	subwf	___ftge@ff1,w
  8386  1BEB  0008               	return
  8387  1BEC                     __end_of___ftge:	
  8388                           
  8389                           	psect	text24
  8390  1B01                     __ptext24:	
  8391 ;; *************** function ___altoft *****************
  8392 ;; Defined at:
  8393 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\altoft.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  c               4   46[BANK0 ] long 
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;  sign            1   53[BANK0 ] unsigned char 
  8398 ;;  exp             1   52[BANK0 ] unsigned char 
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  3   46[BANK0 ] float 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0, pclath, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8408 ;;      Params:         0       4       0       0       0
  8409 ;;      Locals:         0       2       0       0       0
  8410 ;;      Temps:          0       2       0       0       0
  8411 ;;      Totals:         0       8       0       0       0
  8412 ;;Total ram usage:        8 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    1
  8415 ;; This function calls:
  8416 ;;		___ftpack
  8417 ;; This function is called by:
  8418 ;;		_floor
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           
  8423                           ;psect for function ___altoft
  8424  1B01                     ___altoft:	
  8425                           
  8426                           ;incstack = 0
  8427                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  8428  1B01  1283               	bcf	3,5	;RP0=0, select bank0
  8429  1B02  1303               	bcf	3,6	;RP1=0, select bank0
  8430  1B03  01D5               	clrf	___altoft@sign
  8431  1B04  308E               	movlw	142
  8432  1B05  00D2               	movwf	??___altoft
  8433  1B06  0852               	movf	??___altoft,w
  8434  1B07  00D4               	movwf	___altoft@exp
  8435  1B08  1FD1               	btfss	___altoft@c+3,7
  8436  1B09  2B17               	goto	l2038
  8437  1B0A  09CE               	comf	___altoft@c,f
  8438  1B0B  09CF               	comf	___altoft@c+1,f
  8439  1B0C  09D0               	comf	___altoft@c+2,f
  8440  1B0D  09D1               	comf	___altoft@c+3,f
  8441  1B0E  0ACE               	incf	___altoft@c,f
  8442  1B0F  1903               	skipnz
  8443  1B10  0ACF               	incf	___altoft@c+1,f
  8444  1B11  1903               	skipnz
  8445  1B12  0AD0               	incf	___altoft@c+2,f
  8446  1B13  1903               	skipnz
  8447  1B14  0AD1               	incf	___altoft@c+3,f
  8448  1B15  01D5               	clrf	___altoft@sign
  8449  1B16  0AD5               	incf	___altoft@sign,f
  8450  1B17                     l2038:	
  8451  1B17  30FF               	movlw	255
  8452  1B18  0551               	andwf	___altoft@c+3,w
  8453  1B19  1903               	btfsc	3,2
  8454  1B1A  2B29               	goto	l2040
  8455  1B1B  3001               	movlw	1
  8456  1B1C                     u2305:	
  8457  1B1C  1003               	clrc
  8458  1B1D  0CD1               	rrf	___altoft@c+3,f
  8459  1B1E  0CD0               	rrf	___altoft@c+2,f
  8460  1B1F  0CCF               	rrf	___altoft@c+1,f
  8461  1B20  0CCE               	rrf	___altoft@c,f
  8462  1B21  3EFF               	addlw	-1
  8463  1B22  1D03               	skipz
  8464  1B23  2B1C               	goto	u2305
  8465  1B24  3001               	movlw	1
  8466  1B25  00D2               	movwf	??___altoft
  8467  1B26  0852               	movf	??___altoft,w
  8468  1B27  07D4               	addwf	___altoft@exp,f
  8469  1B28  2B17               	goto	l2038
  8470  1B29                     l2040:	
  8471  1B29  084E               	movf	___altoft@c,w
  8472  1B2A  00F0               	movwf	___ftpack@arg
  8473  1B2B  084F               	movf	___altoft@c+1,w
  8474  1B2C  00F1               	movwf	___ftpack@arg+1
  8475  1B2D  0850               	movf	___altoft@c+2,w
  8476  1B2E  00F2               	movwf	___ftpack@arg+2
  8477  1B2F  0854               	movf	___altoft@exp,w
  8478  1B30  00D2               	movwf	??___altoft
  8479  1B31  0852               	movf	??___altoft,w
  8480  1B32  00F3               	movwf	___ftpack@exp
  8481  1B33  0855               	movf	___altoft@sign,w
  8482  1B34  00D3               	movwf	??___altoft+1
  8483  1B35  0853               	movf	??___altoft+1,w
  8484  1B36  00F4               	movwf	___ftpack@sign
  8485  1B37  160A  158A  24A7   	fcall	___ftpack
  8486  1B3A  0870               	movf	?___ftpack,w
  8487  1B3B  1283               	bcf	3,5	;RP0=0, select bank0
  8488  1B3C  1303               	bcf	3,6	;RP1=0, select bank0
  8489  1B3D  00CE               	movwf	?___altoft
  8490  1B3E  0871               	movf	?___ftpack+1,w
  8491  1B3F  00CF               	movwf	?___altoft+1
  8492  1B40  0872               	movf	?___ftpack+2,w
  8493  1B41  00D0               	movwf	?___altoft+2
  8494  1B42  0008               	return
  8495  1B43                     __end_of___altoft:	
  8496                           
  8497                           	psect	text25
  8498  1D0F                     __ptext25:	
  8499 ;; *************** function _eval_poly *****************
  8500 ;; Defined at:
  8501 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\evalpoly.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;  x               3   52[BANK0 ] float 
  8504 ;;  d               1   55[BANK0 ] PTR const 
  8505 ;;		 -> log@coeff(27), exp@coeff(30), 
  8506 ;;  n               2   56[BANK0 ] int 
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;  res             3   59[BANK0 ] int 
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  3   52[BANK0 ] int 
  8511 ;; Registers used:
  8512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8518 ;;      Params:         0       6       0       0       0
  8519 ;;      Locals:         0       3       0       0       0
  8520 ;;      Temps:          0       1       0       0       0
  8521 ;;      Totals:         0      10       0       0       0
  8522 ;;Total ram usage:       10 bytes
  8523 ;; Hardware stack levels used:    1
  8524 ;; Hardware stack levels required when called:    2
  8525 ;; This function calls:
  8526 ;;		___bmul
  8527 ;;		___ftadd
  8528 ;;		___ftmul
  8529 ;; This function is called by:
  8530 ;;		_exp
  8531 ;;		_log
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           
  8536                           ;psect for function _eval_poly
  8537  1D0F                     _eval_poly:	
  8538                           
  8539                           ;incstack = 0
  8540                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8541  1D0F  3003               	movlw	3
  8542  1D10  1283               	bcf	3,5	;RP0=0, select bank0
  8543  1D11  1303               	bcf	3,6	;RP1=0, select bank0
  8544  1D12  00DA               	movwf	??_eval_poly
  8545  1D13  085A               	movf	??_eval_poly,w
  8546  1D14  00A4               	movwf	___bmul@multiplicand
  8547  1D15  0858               	movf	eval_poly@n,w
  8548  1D16  160A  158A  21AA  160A  158A  	fcall	___bmul
  8549  1D1B  1283               	bcf	3,5	;RP0=0, select bank0
  8550  1D1C  1303               	bcf	3,6	;RP1=0, select bank0
  8551  1D1D  0757               	addwf	eval_poly@d,w
  8552  1D1E  0084               	movwf	4
  8553  1D1F  160A  118A  200A  160A  158A  	fcall	stringdir
  8554  1D24  00DB               	movwf	eval_poly@res
  8555  1D25  160A  118A  200A  160A  158A  	fcall	stringdir
  8556  1D2A  00DC               	movwf	eval_poly@res+1
  8557  1D2B  160A  118A  200A  160A  158A  	fcall	stringdir
  8558  1D30                     L10:	
  8559  1D30  00DD               	movwf	eval_poly@res+2
  8560  1D31  0859               	movf	eval_poly@n+1,w
  8561  1D32  0458               	iorwf	eval_poly@n,w
  8562  1D33  1903               	btfsc	3,2
  8563  1D34  2D81               	goto	l2434
  8564  1D35  3003               	movlw	3
  8565  1D36  00DA               	movwf	??_eval_poly
  8566  1D37  085A               	movf	??_eval_poly,w
  8567  1D38  00A4               	movwf	___bmul@multiplicand
  8568  1D39  30FF               	movlw	255
  8569  1D3A  07D8               	addwf	eval_poly@n,f
  8570  1D3B  1803               	skipnc
  8571  1D3C  0AD9               	incf	eval_poly@n+1,f
  8572  1D3D  30FF               	movlw	255
  8573  1D3E  07D9               	addwf	eval_poly@n+1,f
  8574  1D3F  0858               	movf	eval_poly@n,w
  8575  1D40  160A  158A  21AA  160A  158A  	fcall	___bmul
  8576  1D45  1283               	bcf	3,5	;RP0=0, select bank0
  8577  1D46  1303               	bcf	3,6	;RP1=0, select bank0
  8578  1D47  0757               	addwf	eval_poly@d,w
  8579  1D48  0084               	movwf	4
  8580  1D49  160A  118A  200A  160A  158A  	fcall	stringdir
  8581  1D4E  00C7               	movwf	___ftadd@f1
  8582  1D4F  160A  118A  200A  160A  158A  	fcall	stringdir
  8583  1D54  00C8               	movwf	___ftadd@f1+1
  8584  1D55  160A  118A  200A  160A  158A  	fcall	stringdir
  8585  1D5A  00C9               	movwf	___ftadd@f1+2
  8586  1D5B  085B               	movf	eval_poly@res,w
  8587  1D5C  00A7               	movwf	___ftmul@f1
  8588  1D5D  085C               	movf	eval_poly@res+1,w
  8589  1D5E  00A8               	movwf	___ftmul@f1+1
  8590  1D5F  085D               	movf	eval_poly@res+2,w
  8591  1D60  00A9               	movwf	___ftmul@f1+2
  8592  1D61  0854               	movf	eval_poly@x,w
  8593  1D62  00AA               	movwf	___ftmul@f2
  8594  1D63  0855               	movf	eval_poly@x+1,w
  8595  1D64  00AB               	movwf	___ftmul@f2+1
  8596  1D65  0856               	movf	eval_poly@x+2,w
  8597  1D66  00AC               	movwf	___ftmul@f2+2
  8598  1D67  160A  118A  2215  160A  158A  	fcall	___ftmul
  8599  1D6C  1283               	bcf	3,5	;RP0=0, select bank0
  8600  1D6D  1303               	bcf	3,6	;RP1=0, select bank0
  8601  1D6E  0827               	movf	?___ftmul,w
  8602  1D6F  00CA               	movwf	___ftadd@f2
  8603  1D70  0828               	movf	?___ftmul+1,w
  8604  1D71  00CB               	movwf	___ftadd@f2+1
  8605  1D72  0829               	movf	?___ftmul+2,w
  8606  1D73  00CC               	movwf	___ftadd@f2+2
  8607  1D74  160A  118A  22E8  160A  158A  	fcall	___ftadd
  8608  1D79  1283               	bcf	3,5	;RP0=0, select bank0
  8609  1D7A  1303               	bcf	3,6	;RP1=0, select bank0
  8610  1D7B  0847               	movf	?___ftadd,w
  8611  1D7C  00DB               	movwf	eval_poly@res
  8612  1D7D  0848               	movf	?___ftadd+1,w
  8613  1D7E  00DC               	movwf	eval_poly@res+1
  8614  1D7F  0849               	movf	?___ftadd+2,w
  8615  1D80  2D30               	goto	L10
  8616  1D81                     l2434:	
  8617  1D81  085B               	movf	eval_poly@res,w
  8618  1D82  00D4               	movwf	?_eval_poly
  8619  1D83  085C               	movf	eval_poly@res+1,w
  8620  1D84  00D5               	movwf	?_eval_poly+1
  8621  1D85  085D               	movf	eval_poly@res+2,w
  8622  1D86  00D6               	movwf	?_eval_poly+2
  8623  1D87  0008               	return
  8624  1D88                     __end_of_eval_poly:	
  8625                           
  8626                           	psect	text26
  8627  1215                     __ptext26:	
  8628 ;; *************** function ___ftmul *****************
  8629 ;; Defined at:
  8630 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8631 ;; Parameters:    Size  Location     Type
  8632 ;;  f1              3    7[BANK0 ] float 
  8633 ;;  f2              3   10[BANK0 ] float 
  8634 ;; Auto vars:     Size  Location     Type
  8635 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  8636 ;;  sign            1   22[BANK0 ] unsigned char 
  8637 ;;  cntr            1   21[BANK0 ] unsigned char 
  8638 ;;  exp             1   17[BANK0 ] unsigned char 
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  3    7[BANK0 ] float 
  8641 ;; Registers used:
  8642 ;;		wreg, status,2, status,0, pclath, cstack
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 0/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8648 ;;      Params:         0       6       0       0       0
  8649 ;;      Locals:         0       6       0       0       0
  8650 ;;      Temps:          0       4       0       0       0
  8651 ;;      Totals:         0      16       0       0       0
  8652 ;;Total ram usage:       16 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; Hardware stack levels required when called:    1
  8655 ;; This function calls:
  8656 ;;		___ftpack
  8657 ;; This function is called by:
  8658 ;;		_main
  8659 ;;		_fround
  8660 ;;		_scale
  8661 ;;		_sprintf
  8662 ;;		_pow
  8663 ;;		_exp
  8664 ;;		_log
  8665 ;;		_eval_poly
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           
  8670                           ;psect for function ___ftmul
  8671  1215                     ___ftmul:	
  8672                           
  8673                           ;incstack = 0
  8674                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8675  1215  1283               	bcf	3,5	;RP0=0, select bank0
  8676  1216  1303               	bcf	3,6	;RP1=0, select bank0
  8677  1217  0827               	movf	___ftmul@f1,w
  8678  1218  00AD               	movwf	??___ftmul
  8679  1219  0828               	movf	___ftmul@f1+1,w
  8680  121A  00AE               	movwf	??___ftmul+1
  8681  121B  0829               	movf	___ftmul@f1+2,w
  8682  121C  00AF               	movwf	??___ftmul+2
  8683  121D  1003               	clrc
  8684  121E  0D2E               	rlf	??___ftmul+1,w
  8685  121F  0D2F               	rlf	??___ftmul+2,w
  8686  1220  00B0               	movwf	??___ftmul+3
  8687  1221  0830               	movf	??___ftmul+3,w
  8688  1222  00B1               	movwf	___ftmul@exp
  8689  1223  08B1               	movf	___ftmul@exp,f
  8690  1224  1D03               	skipz
  8691  1225  2A2D               	goto	l2142
  8692  1226  3000               	movlw	0
  8693  1227  00A7               	movwf	?___ftmul
  8694  1228  3000               	movlw	0
  8695  1229  00A8               	movwf	?___ftmul+1
  8696  122A  3000               	movlw	0
  8697  122B  00A9               	movwf	?___ftmul+2
  8698  122C  0008               	return
  8699  122D                     l2142:	
  8700  122D  082A               	movf	___ftmul@f2,w
  8701  122E  00AD               	movwf	??___ftmul
  8702  122F  082B               	movf	___ftmul@f2+1,w
  8703  1230  00AE               	movwf	??___ftmul+1
  8704  1231  082C               	movf	___ftmul@f2+2,w
  8705  1232  00AF               	movwf	??___ftmul+2
  8706  1233  1003               	clrc
  8707  1234  0D2E               	rlf	??___ftmul+1,w
  8708  1235  0D2F               	rlf	??___ftmul+2,w
  8709  1236  00B0               	movwf	??___ftmul+3
  8710  1237  0830               	movf	??___ftmul+3,w
  8711  1238  00B6               	movwf	___ftmul@sign
  8712  1239  08B6               	movf	___ftmul@sign,f
  8713  123A  1D03               	skipz
  8714  123B  2A43               	goto	l2148
  8715  123C  3000               	movlw	0
  8716  123D  00A7               	movwf	?___ftmul
  8717  123E  3000               	movlw	0
  8718  123F  00A8               	movwf	?___ftmul+1
  8719  1240  3000               	movlw	0
  8720  1241  00A9               	movwf	?___ftmul+2
  8721  1242  0008               	return
  8722  1243                     l2148:	
  8723  1243  0836               	movf	___ftmul@sign,w
  8724  1244  3E7B               	addlw	123
  8725  1245  00AD               	movwf	??___ftmul
  8726  1246  082D               	movf	??___ftmul,w
  8727  1247  07B1               	addwf	___ftmul@exp,f
  8728  1248  0827               	movf	___ftmul@f1,w
  8729  1249  00AD               	movwf	??___ftmul
  8730  124A  0828               	movf	___ftmul@f1+1,w
  8731  124B  00AE               	movwf	??___ftmul+1
  8732  124C  0829               	movf	___ftmul@f1+2,w
  8733  124D  00AF               	movwf	??___ftmul+2
  8734  124E  3010               	movlw	16
  8735  124F                     u2635:	
  8736  124F  1003               	clrc
  8737  1250  0CAF               	rrf	??___ftmul+2,f
  8738  1251  0CAE               	rrf	??___ftmul+1,f
  8739  1252  0CAD               	rrf	??___ftmul,f
  8740  1253  3EFF               	addlw	-1
  8741  1254  1D03               	skipz
  8742  1255  2A4F               	goto	u2635
  8743  1256  082D               	movf	??___ftmul,w
  8744  1257  00B0               	movwf	??___ftmul+3
  8745  1258  0830               	movf	??___ftmul+3,w
  8746  1259  00B6               	movwf	___ftmul@sign
  8747  125A  082A               	movf	___ftmul@f2,w
  8748  125B  00AD               	movwf	??___ftmul
  8749  125C  082B               	movf	___ftmul@f2+1,w
  8750  125D  00AE               	movwf	??___ftmul+1
  8751  125E  082C               	movf	___ftmul@f2+2,w
  8752  125F  00AF               	movwf	??___ftmul+2
  8753  1260  3010               	movlw	16
  8754  1261                     u2645:	
  8755  1261  1003               	clrc
  8756  1262  0CAF               	rrf	??___ftmul+2,f
  8757  1263  0CAE               	rrf	??___ftmul+1,f
  8758  1264  0CAD               	rrf	??___ftmul,f
  8759  1265  3EFF               	addlw	-1
  8760  1266  1D03               	skipz
  8761  1267  2A61               	goto	u2645
  8762  1268  082D               	movf	??___ftmul,w
  8763  1269  00B0               	movwf	??___ftmul+3
  8764  126A  0830               	movf	??___ftmul+3,w
  8765  126B  06B6               	xorwf	___ftmul@sign,f
  8766  126C  3080               	movlw	128
  8767  126D  00AD               	movwf	??___ftmul
  8768  126E  082D               	movf	??___ftmul,w
  8769  126F  05B6               	andwf	___ftmul@sign,f
  8770  1270  17A8               	bsf	___ftmul@f1+1,7
  8771  1271  17AB               	bsf	___ftmul@f2+1,7
  8772  1272  30FF               	movlw	255
  8773  1273  05AA               	andwf	___ftmul@f2,f
  8774  1274  30FF               	movlw	255
  8775  1275  05AB               	andwf	___ftmul@f2+1,f
  8776  1276  3000               	movlw	0
  8777  1277  05AC               	andwf	___ftmul@f2+2,f
  8778  1278  3000               	movlw	0
  8779  1279  00B2               	movwf	___ftmul@f3_as_product
  8780  127A  3000               	movlw	0
  8781  127B  00B3               	movwf	___ftmul@f3_as_product+1
  8782  127C  3000               	movlw	0
  8783  127D  00B4               	movwf	___ftmul@f3_as_product+2
  8784  127E  3007               	movlw	7
  8785  127F  00AD               	movwf	??___ftmul
  8786  1280  082D               	movf	??___ftmul,w
  8787  1281  00B5               	movwf	___ftmul@cntr
  8788  1282                     l2160:	
  8789  1282  1C27               	btfss	___ftmul@f1,0
  8790  1283  2A92               	goto	l2164
  8791  1284  082A               	movf	___ftmul@f2,w
  8792  1285  07B2               	addwf	___ftmul@f3_as_product,f
  8793  1286  082B               	movf	___ftmul@f2+1,w
  8794  1287  1103               	clrz
  8795  1288  1803               	skipnc
  8796  1289  0A2B               	incf	___ftmul@f2+1,w
  8797  128A  1D03               	btfss	3,2
  8798  128B  07B3               	addwf	___ftmul@f3_as_product+1,f
  8799  128C  082C               	movf	___ftmul@f2+2,w
  8800  128D  1103               	clrz
  8801  128E  1803               	skipnc
  8802  128F  0A2C               	incf	___ftmul@f2+2,w
  8803  1290  1D03               	btfss	3,2
  8804  1291  07B4               	addwf	___ftmul@f3_as_product+2,f
  8805  1292                     l2164:	
  8806  1292  3001               	movlw	1
  8807  1293                     u2675:	
  8808  1293  1003               	clrc
  8809  1294  0CA9               	rrf	___ftmul@f1+2,f
  8810  1295  0CA8               	rrf	___ftmul@f1+1,f
  8811  1296  0CA7               	rrf	___ftmul@f1,f
  8812  1297  3EFF               	addlw	-1
  8813  1298  1D03               	skipz
  8814  1299  2A93               	goto	u2675
  8815  129A  3001               	movlw	1
  8816  129B                     u2685:	
  8817  129B  1003               	clrc
  8818  129C  0DAA               	rlf	___ftmul@f2,f
  8819  129D  0DAB               	rlf	___ftmul@f2+1,f
  8820  129E  0DAC               	rlf	___ftmul@f2+2,f
  8821  129F  3EFF               	addlw	-1
  8822  12A0  1D03               	skipz
  8823  12A1  2A9B               	goto	u2685
  8824  12A2  3001               	movlw	1
  8825  12A3  02B5               	subwf	___ftmul@cntr,f
  8826  12A4  1D03               	btfss	3,2
  8827  12A5  2A82               	goto	l2160
  8828  12A6  3009               	movlw	9
  8829  12A7  00AD               	movwf	??___ftmul
  8830  12A8  082D               	movf	??___ftmul,w
  8831  12A9  00B5               	movwf	___ftmul@cntr
  8832  12AA                     l2172:	
  8833  12AA  1C27               	btfss	___ftmul@f1,0
  8834  12AB  2ABA               	goto	l2176
  8835  12AC  082A               	movf	___ftmul@f2,w
  8836  12AD  07B2               	addwf	___ftmul@f3_as_product,f
  8837  12AE  082B               	movf	___ftmul@f2+1,w
  8838  12AF  1103               	clrz
  8839  12B0  1803               	skipnc
  8840  12B1  0A2B               	incf	___ftmul@f2+1,w
  8841  12B2  1D03               	btfss	3,2
  8842  12B3  07B3               	addwf	___ftmul@f3_as_product+1,f
  8843  12B4  082C               	movf	___ftmul@f2+2,w
  8844  12B5  1103               	clrz
  8845  12B6  1803               	skipnc
  8846  12B7  0A2C               	incf	___ftmul@f2+2,w
  8847  12B8  1D03               	btfss	3,2
  8848  12B9  07B4               	addwf	___ftmul@f3_as_product+2,f
  8849  12BA                     l2176:	
  8850  12BA  3001               	movlw	1
  8851  12BB                     u2725:	
  8852  12BB  1003               	clrc
  8853  12BC  0CA9               	rrf	___ftmul@f1+2,f
  8854  12BD  0CA8               	rrf	___ftmul@f1+1,f
  8855  12BE  0CA7               	rrf	___ftmul@f1,f
  8856  12BF  3EFF               	addlw	-1
  8857  12C0  1D03               	skipz
  8858  12C1  2ABB               	goto	u2725
  8859  12C2  3001               	movlw	1
  8860  12C3                     u2735:	
  8861  12C3  1003               	clrc
  8862  12C4  0CB4               	rrf	___ftmul@f3_as_product+2,f
  8863  12C5  0CB3               	rrf	___ftmul@f3_as_product+1,f
  8864  12C6  0CB2               	rrf	___ftmul@f3_as_product,f
  8865  12C7  3EFF               	addlw	-1
  8866  12C8  1D03               	skipz
  8867  12C9  2AC3               	goto	u2735
  8868  12CA  3001               	movlw	1
  8869  12CB  02B5               	subwf	___ftmul@cntr,f
  8870  12CC  1D03               	btfss	3,2
  8871  12CD  2AAA               	goto	l2172
  8872  12CE  0832               	movf	___ftmul@f3_as_product,w
  8873  12CF  00F0               	movwf	___ftpack@arg
  8874  12D0  0833               	movf	___ftmul@f3_as_product+1,w
  8875  12D1  00F1               	movwf	___ftpack@arg+1
  8876  12D2  0834               	movf	___ftmul@f3_as_product+2,w
  8877  12D3  00F2               	movwf	___ftpack@arg+2
  8878  12D4  0831               	movf	___ftmul@exp,w
  8879  12D5  00AD               	movwf	??___ftmul
  8880  12D6  082D               	movf	??___ftmul,w
  8881  12D7  00F3               	movwf	___ftpack@exp
  8882  12D8  0836               	movf	___ftmul@sign,w
  8883  12D9  00AE               	movwf	??___ftmul+1
  8884  12DA  082E               	movf	??___ftmul+1,w
  8885  12DB  00F4               	movwf	___ftpack@sign
  8886  12DC  160A  158A  24A7   	fcall	___ftpack
  8887  12DF  0870               	movf	?___ftpack,w
  8888  12E0  1283               	bcf	3,5	;RP0=0, select bank0
  8889  12E1  1303               	bcf	3,6	;RP1=0, select bank0
  8890  12E2  00A7               	movwf	?___ftmul
  8891  12E3  0871               	movf	?___ftpack+1,w
  8892  12E4  00A8               	movwf	?___ftmul+1
  8893  12E5  0872               	movf	?___ftpack+2,w
  8894  12E6  00A9               	movwf	?___ftmul+2
  8895  12E7  0008               	return
  8896  12E8                     __end_of___ftmul:	
  8897                           
  8898                           	psect	text27
  8899  19AA                     __ptext27:	
  8900 ;; *************** function ___bmul *****************
  8901 ;; Defined at:
  8902 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  multiplier      1    wreg     unsigned char 
  8905 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  multiplier      1    6[BANK0 ] unsigned char 
  8908 ;;  product         1    5[BANK0 ] unsigned char 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  1    wreg      unsigned char 
  8911 ;; Registers used:
  8912 ;;		wreg, status,2, status,0
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8918 ;;      Params:         0       1       0       0       0
  8919 ;;      Locals:         0       2       0       0       0
  8920 ;;      Temps:          1       0       0       0       0
  8921 ;;      Totals:         1       3       0       0       0
  8922 ;;Total ram usage:        4 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; This function calls:
  8925 ;;		Nothing
  8926 ;; This function is called by:
  8927 ;;		_fround
  8928 ;;		_scale
  8929 ;;		_eval_poly
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           
  8934                           ;psect for function ___bmul
  8935  19AA                     ___bmul:	
  8936                           
  8937                           ;incstack = 0
  8938                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8939                           ;___bmul@multiplier stored from wreg
  8940  19AA  1283               	bcf	3,5	;RP0=0, select bank0
  8941  19AB  1303               	bcf	3,6	;RP1=0, select bank0
  8942  19AC  00A6               	movwf	___bmul@multiplier
  8943  19AD  01A5               	clrf	___bmul@product
  8944  19AE                     l2014:	
  8945  19AE  1C26               	btfss	___bmul@multiplier,0
  8946  19AF  29B4               	goto	l2018
  8947  19B0  0824               	movf	___bmul@multiplicand,w
  8948  19B1  00FC               	movwf	??___bmul
  8949  19B2  087C               	movf	??___bmul,w
  8950  19B3  07A5               	addwf	___bmul@product,f
  8951  19B4                     l2018:	
  8952  19B4  1003               	clrc
  8953  19B5  0DA4               	rlf	___bmul@multiplicand,f
  8954  19B6  1003               	clrc
  8955  19B7  0CA6               	rrf	___bmul@multiplier,f
  8956  19B8  08A6               	movf	___bmul@multiplier,f
  8957  19B9  1D03               	skipz
  8958  19BA  29AE               	goto	l2014
  8959  19BB  0825               	movf	___bmul@product,w
  8960  19BC  0008               	return
  8961  19BD                     __end_of___bmul:	
  8962                           
  8963                           	psect	text28
  8964  19BD                     __ptext28:	
  8965 ;; *************** function ___ftsub *****************
  8966 ;; Defined at:
  8967 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  f2              3   52[BANK0 ] float 
  8970 ;;  f1              3   55[BANK0 ] float 
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  3   52[BANK0 ] float 
  8975 ;; Registers used:
  8976 ;;		wreg, status,2, status,0, pclath, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8982 ;;      Params:         0       6       0       0       0
  8983 ;;      Locals:         0       0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0
  8985 ;;      Totals:         0       6       0       0       0
  8986 ;;Total ram usage:        6 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    2
  8989 ;; This function calls:
  8990 ;;		___ftadd
  8991 ;; This function is called by:
  8992 ;;		_sprintf
  8993 ;;		_exp
  8994 ;; This function uses a non-reentrant model
  8995 ;;
  8996                           
  8997                           
  8998                           ;psect for function ___ftsub
  8999  19BD                     ___ftsub:	
  9000                           
  9001                           ;incstack = 0
  9002                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  9003  19BD  3080               	movlw	128
  9004  19BE  1283               	bcf	3,5	;RP0=0, select bank0
  9005  19BF  1303               	bcf	3,6	;RP1=0, select bank0
  9006  19C0  06D6               	xorwf	___ftsub@f2+2,f
  9007  19C1  0857               	movf	___ftsub@f1,w
  9008  19C2  00C7               	movwf	___ftadd@f1
  9009  19C3  0858               	movf	___ftsub@f1+1,w
  9010  19C4  00C8               	movwf	___ftadd@f1+1
  9011  19C5  0859               	movf	___ftsub@f1+2,w
  9012  19C6  00C9               	movwf	___ftadd@f1+2
  9013  19C7  0854               	movf	___ftsub@f2,w
  9014  19C8  00CA               	movwf	___ftadd@f2
  9015  19C9  0855               	movf	___ftsub@f2+1,w
  9016  19CA  00CB               	movwf	___ftadd@f2+1
  9017  19CB  0856               	movf	___ftsub@f2+2,w
  9018  19CC  00CC               	movwf	___ftadd@f2+2
  9019  19CD  160A  118A  22E8   	fcall	___ftadd
  9020  19D0  1283               	bcf	3,5	;RP0=0, select bank0
  9021  19D1  1303               	bcf	3,6	;RP1=0, select bank0
  9022  19D2  0847               	movf	?___ftadd,w
  9023  19D3  00D4               	movwf	?___ftsub
  9024  19D4  0848               	movf	?___ftadd+1,w
  9025  19D5  00D5               	movwf	?___ftsub+1
  9026  19D6  0849               	movf	?___ftadd+2,w
  9027  19D7  00D6               	movwf	?___ftsub+2
  9028  19D8  0008               	return
  9029  19D9                     __end_of___ftsub:	
  9030                           
  9031                           	psect	text29
  9032  12E8                     __ptext29:	
  9033 ;; *************** function ___ftadd *****************
  9034 ;; Defined at:
  9035 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  9036 ;; Parameters:    Size  Location     Type
  9037 ;;  f1              3   39[BANK0 ] float 
  9038 ;;  f2              3   42[BANK0 ] float 
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;  exp1            1   51[BANK0 ] unsigned char 
  9041 ;;  exp2            1   50[BANK0 ] unsigned char 
  9042 ;;  sign            1   49[BANK0 ] unsigned char 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  3   39[BANK0 ] float 
  9045 ;; Registers used:
  9046 ;;		wreg, status,2, status,0, pclath, cstack
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9052 ;;      Params:         0       6       0       0       0
  9053 ;;      Locals:         0       3       0       0       0
  9054 ;;      Temps:          0       4       0       0       0
  9055 ;;      Totals:         0      13       0       0       0
  9056 ;;Total ram usage:       13 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:    1
  9059 ;; This function calls:
  9060 ;;		___ftpack
  9061 ;; This function is called by:
  9062 ;;		_main
  9063 ;;		_sprintf
  9064 ;;		___ftsub
  9065 ;;		_floor
  9066 ;;		_log
  9067 ;;		_eval_poly
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           
  9072                           ;psect for function ___ftadd
  9073  12E8                     ___ftadd:	
  9074                           
  9075                           ;incstack = 0
  9076                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9077  12E8  1283               	bcf	3,5	;RP0=0, select bank0
  9078  12E9  1303               	bcf	3,6	;RP1=0, select bank0
  9079  12EA  0847               	movf	___ftadd@f1,w
  9080  12EB  00CD               	movwf	??___ftadd
  9081  12EC  0848               	movf	___ftadd@f1+1,w
  9082  12ED  00CE               	movwf	??___ftadd+1
  9083  12EE  0849               	movf	___ftadd@f1+2,w
  9084  12EF  00CF               	movwf	??___ftadd+2
  9085  12F0  1003               	clrc
  9086  12F1  0D4E               	rlf	??___ftadd+1,w
  9087  12F2  0D4F               	rlf	??___ftadd+2,w
  9088  12F3  00D0               	movwf	??___ftadd+3
  9089  12F4  0850               	movf	??___ftadd+3,w
  9090  12F5  00D3               	movwf	___ftadd@exp1
  9091  12F6  084A               	movf	___ftadd@f2,w
  9092  12F7  00CD               	movwf	??___ftadd
  9093  12F8  084B               	movf	___ftadd@f2+1,w
  9094  12F9  00CE               	movwf	??___ftadd+1
  9095  12FA  084C               	movf	___ftadd@f2+2,w
  9096  12FB  00CF               	movwf	??___ftadd+2
  9097  12FC  1003               	clrc
  9098  12FD  0D4E               	rlf	??___ftadd+1,w
  9099  12FE  0D4F               	rlf	??___ftadd+2,w
  9100  12FF  00D0               	movwf	??___ftadd+3
  9101  1300  0850               	movf	??___ftadd+3,w
  9102  1301  00D2               	movwf	___ftadd@exp2
  9103  1302  0853               	movf	___ftadd@exp1,w
  9104  1303  1903               	btfsc	3,2
  9105  1304  2B11               	goto	l2052
  9106  1305  0852               	movf	___ftadd@exp2,w
  9107  1306  0253               	subwf	___ftadd@exp1,w
  9108  1307  1803               	skipnc
  9109  1308  2B18               	goto	l2056
  9110  1309  0353               	decf	___ftadd@exp1,w
  9111  130A  3AFF               	xorlw	255
  9112  130B  0752               	addwf	___ftadd@exp2,w
  9113  130C  00CD               	movwf	??___ftadd
  9114  130D  3019               	movlw	25
  9115  130E  024D               	subwf	??___ftadd,w
  9116  130F  1C03               	skipc
  9117  1310  2B18               	goto	l2056
  9118  1311                     l2052:	
  9119  1311  084A               	movf	___ftadd@f2,w
  9120  1312  00C7               	movwf	?___ftadd
  9121  1313  084B               	movf	___ftadd@f2+1,w
  9122  1314  00C8               	movwf	?___ftadd+1
  9123  1315  084C               	movf	___ftadd@f2+2,w
  9124  1316  00C9               	movwf	?___ftadd+2
  9125  1317  0008               	return
  9126  1318                     l2056:	
  9127  1318  0852               	movf	___ftadd@exp2,w
  9128  1319  1903               	btfsc	3,2
  9129  131A  0008               	return
  9130  131B  0853               	movf	___ftadd@exp1,w
  9131  131C  0252               	subwf	___ftadd@exp2,w
  9132  131D  1803               	skipnc
  9133  131E  2B27               	goto	l2062
  9134  131F  0352               	decf	___ftadd@exp2,w
  9135  1320  3AFF               	xorlw	255
  9136  1321  0753               	addwf	___ftadd@exp1,w
  9137  1322  00CD               	movwf	??___ftadd
  9138  1323  3019               	movlw	25
  9139  1324  024D               	subwf	??___ftadd,w
  9140  1325  1803               	btfsc	3,0
  9141  1326  0008               	return
  9142  1327                     l2062:	
  9143  1327  3006               	movlw	6
  9144  1328  00CD               	movwf	??___ftadd
  9145  1329  084D               	movf	??___ftadd,w
  9146  132A  00D1               	movwf	___ftadd@sign
  9147  132B  1BC9               	btfsc	___ftadd@f1+2,7
  9148  132C  17D1               	bsf	___ftadd@sign,7
  9149  132D  1BCC               	btfsc	___ftadd@f2+2,7
  9150  132E  1751               	bsf	___ftadd@sign,6
  9151  132F  17C8               	bsf	___ftadd@f1+1,7
  9152  1330  30FF               	movlw	255
  9153  1331  05C7               	andwf	___ftadd@f1,f
  9154  1332  30FF               	movlw	255
  9155  1333  05C8               	andwf	___ftadd@f1+1,f
  9156  1334  3000               	movlw	0
  9157  1335  05C9               	andwf	___ftadd@f1+2,f
  9158  1336  17CB               	bsf	___ftadd@f2+1,7
  9159  1337  30FF               	movlw	255
  9160  1338  05CA               	andwf	___ftadd@f2,f
  9161  1339  30FF               	movlw	255
  9162  133A  05CB               	andwf	___ftadd@f2+1,f
  9163  133B  3000               	movlw	0
  9164  133C  05CC               	andwf	___ftadd@f2+2,f
  9165  133D  0852               	movf	___ftadd@exp2,w
  9166  133E  0253               	subwf	___ftadd@exp1,w
  9167  133F  1803               	skipnc
  9168  1340  2B67               	goto	l2084
  9169  1341                     l2074:	
  9170  1341  3001               	movlw	1
  9171  1342                     u2415:	
  9172  1342  1003               	clrc
  9173  1343  0DCA               	rlf	___ftadd@f2,f
  9174  1344  0DCB               	rlf	___ftadd@f2+1,f
  9175  1345  0DCC               	rlf	___ftadd@f2+2,f
  9176  1346  3EFF               	addlw	-1
  9177  1347  1D03               	skipz
  9178  1348  2B42               	goto	u2415
  9179  1349  3001               	movlw	1
  9180  134A  02D2               	subwf	___ftadd@exp2,f
  9181  134B  0852               	movf	___ftadd@exp2,w
  9182  134C  0653               	xorwf	___ftadd@exp1,w
  9183  134D  1903               	skipnz
  9184  134E  2B62               	goto	l2082
  9185  134F  3001               	movlw	1
  9186  1350  02D1               	subwf	___ftadd@sign,f
  9187  1351  0851               	movf	___ftadd@sign,w
  9188  1352  3907               	andlw	7
  9189  1353  1903               	btfsc	3,2
  9190  1354  2B62               	goto	l2082
  9191  1355  2B41               	goto	l2074
  9192  1356                     l2080:	
  9193  1356  3001               	movlw	1
  9194  1357                     u2445:	
  9195  1357  1003               	clrc
  9196  1358  0CC9               	rrf	___ftadd@f1+2,f
  9197  1359  0CC8               	rrf	___ftadd@f1+1,f
  9198  135A  0CC7               	rrf	___ftadd@f1,f
  9199  135B  3EFF               	addlw	-1
  9200  135C  1D03               	skipz
  9201  135D  2B57               	goto	u2445
  9202  135E  3001               	movlw	1
  9203  135F  00CD               	movwf	??___ftadd
  9204  1360  084D               	movf	??___ftadd,w
  9205  1361  07D3               	addwf	___ftadd@exp1,f
  9206  1362                     l2082:	
  9207  1362  0853               	movf	___ftadd@exp1,w
  9208  1363  0652               	xorwf	___ftadd@exp2,w
  9209  1364  1903               	btfsc	3,2
  9210  1365  2B90               	goto	l462
  9211  1366  2B56               	goto	l2080
  9212  1367                     l2084:	
  9213  1367  0853               	movf	___ftadd@exp1,w
  9214  1368  0252               	subwf	___ftadd@exp2,w
  9215  1369  1803               	skipnc
  9216  136A  2B90               	goto	l462
  9217  136B                     l2086:	
  9218  136B  3001               	movlw	1
  9219  136C                     u2475:	
  9220  136C  1003               	clrc
  9221  136D  0DC7               	rlf	___ftadd@f1,f
  9222  136E  0DC8               	rlf	___ftadd@f1+1,f
  9223  136F  0DC9               	rlf	___ftadd@f1+2,f
  9224  1370  3EFF               	addlw	-1
  9225  1371  1D03               	skipz
  9226  1372  2B6C               	goto	u2475
  9227  1373  3001               	movlw	1
  9228  1374  02D3               	subwf	___ftadd@exp1,f
  9229  1375  0852               	movf	___ftadd@exp2,w
  9230  1376  0653               	xorwf	___ftadd@exp1,w
  9231  1377  1903               	skipnz
  9232  1378  2B8C               	goto	l2094
  9233  1379  3001               	movlw	1
  9234  137A  02D1               	subwf	___ftadd@sign,f
  9235  137B  0851               	movf	___ftadd@sign,w
  9236  137C  3907               	andlw	7
  9237  137D  1903               	btfsc	3,2
  9238  137E  2B8C               	goto	l2094
  9239  137F  2B6B               	goto	l2086
  9240  1380                     l2092:	
  9241  1380  3001               	movlw	1
  9242  1381                     u2505:	
  9243  1381  1003               	clrc
  9244  1382  0CCC               	rrf	___ftadd@f2+2,f
  9245  1383  0CCB               	rrf	___ftadd@f2+1,f
  9246  1384  0CCA               	rrf	___ftadd@f2,f
  9247  1385  3EFF               	addlw	-1
  9248  1386  1D03               	skipz
  9249  1387  2B81               	goto	u2505
  9250  1388  3001               	movlw	1
  9251  1389  00CD               	movwf	??___ftadd
  9252  138A  084D               	movf	??___ftadd,w
  9253  138B  07D2               	addwf	___ftadd@exp2,f
  9254  138C                     l2094:	
  9255  138C  0853               	movf	___ftadd@exp1,w
  9256  138D  0652               	xorwf	___ftadd@exp2,w
  9257  138E  1D03               	skipz
  9258  138F  2B80               	goto	l2092
  9259  1390                     l462:	
  9260  1390  1FD1               	btfss	___ftadd@sign,7
  9261  1391  2BA2               	goto	l2098
  9262  1392  30FF               	movlw	255
  9263  1393  06C7               	xorwf	___ftadd@f1,f
  9264  1394  30FF               	movlw	255
  9265  1395  06C8               	xorwf	___ftadd@f1+1,f
  9266  1396  30FF               	movlw	255
  9267  1397  06C9               	xorwf	___ftadd@f1+2,f
  9268  1398  3001               	movlw	1
  9269  1399  07C7               	addwf	___ftadd@f1,f
  9270  139A  3000               	movlw	0
  9271  139B  1803               	skipnc
  9272  139C  3001               	movlw	1
  9273  139D  07C8               	addwf	___ftadd@f1+1,f
  9274  139E  3000               	movlw	0
  9275  139F  1803               	skipnc
  9276  13A0  3001               	movlw	1
  9277  13A1  07C9               	addwf	___ftadd@f1+2,f
  9278  13A2                     l2098:	
  9279  13A2  1F51               	btfss	___ftadd@sign,6
  9280  13A3  2BB4               	goto	l2102
  9281  13A4  30FF               	movlw	255
  9282  13A5  06CA               	xorwf	___ftadd@f2,f
  9283  13A6  30FF               	movlw	255
  9284  13A7  06CB               	xorwf	___ftadd@f2+1,f
  9285  13A8  30FF               	movlw	255
  9286  13A9  06CC               	xorwf	___ftadd@f2+2,f
  9287  13AA  3001               	movlw	1
  9288  13AB  07CA               	addwf	___ftadd@f2,f
  9289  13AC  3000               	movlw	0
  9290  13AD  1803               	skipnc
  9291  13AE  3001               	movlw	1
  9292  13AF  07CB               	addwf	___ftadd@f2+1,f
  9293  13B0  3000               	movlw	0
  9294  13B1  1803               	skipnc
  9295  13B2  3001               	movlw	1
  9296  13B3  07CC               	addwf	___ftadd@f2+2,f
  9297  13B4                     l2102:	
  9298  13B4  01D1               	clrf	___ftadd@sign
  9299  13B5  0847               	movf	___ftadd@f1,w
  9300  13B6  07CA               	addwf	___ftadd@f2,f
  9301  13B7  0848               	movf	___ftadd@f1+1,w
  9302  13B8  1103               	clrz
  9303  13B9  1803               	skipnc
  9304  13BA  0A48               	incf	___ftadd@f1+1,w
  9305  13BB  1D03               	btfss	3,2
  9306  13BC  07CB               	addwf	___ftadd@f2+1,f
  9307  13BD  0849               	movf	___ftadd@f1+2,w
  9308  13BE  1103               	clrz
  9309  13BF  1803               	skipnc
  9310  13C0  0A49               	incf	___ftadd@f1+2,w
  9311  13C1  1D03               	btfss	3,2
  9312  13C2  07CC               	addwf	___ftadd@f2+2,f
  9313  13C3  1FCC               	btfss	___ftadd@f2+2,7
  9314  13C4  2BD7               	goto	l2112
  9315  13C5  30FF               	movlw	255
  9316  13C6  06CA               	xorwf	___ftadd@f2,f
  9317  13C7  30FF               	movlw	255
  9318  13C8  06CB               	xorwf	___ftadd@f2+1,f
  9319  13C9  30FF               	movlw	255
  9320  13CA  06CC               	xorwf	___ftadd@f2+2,f
  9321  13CB  3001               	movlw	1
  9322  13CC  07CA               	addwf	___ftadd@f2,f
  9323  13CD  3000               	movlw	0
  9324  13CE  1803               	skipnc
  9325  13CF  3001               	movlw	1
  9326  13D0  07CB               	addwf	___ftadd@f2+1,f
  9327  13D1  3000               	movlw	0
  9328  13D2  1803               	skipnc
  9329  13D3  3001               	movlw	1
  9330  13D4  07CC               	addwf	___ftadd@f2+2,f
  9331  13D5  01D1               	clrf	___ftadd@sign
  9332  13D6  0AD1               	incf	___ftadd@sign,f
  9333  13D7                     l2112:	
  9334  13D7  084A               	movf	___ftadd@f2,w
  9335  13D8  00F0               	movwf	___ftpack@arg
  9336  13D9  084B               	movf	___ftadd@f2+1,w
  9337  13DA  00F1               	movwf	___ftpack@arg+1
  9338  13DB  084C               	movf	___ftadd@f2+2,w
  9339  13DC  00F2               	movwf	___ftpack@arg+2
  9340  13DD  0853               	movf	___ftadd@exp1,w
  9341  13DE  00CD               	movwf	??___ftadd
  9342  13DF  084D               	movf	??___ftadd,w
  9343  13E0  00F3               	movwf	___ftpack@exp
  9344  13E1  0851               	movf	___ftadd@sign,w
  9345  13E2  00CE               	movwf	??___ftadd+1
  9346  13E3  084E               	movf	??___ftadd+1,w
  9347  13E4  00F4               	movwf	___ftpack@sign
  9348  13E5  160A  158A  24A7   	fcall	___ftpack
  9349  13E8  0870               	movf	?___ftpack,w
  9350  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  9351  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  9352  13EB  00C7               	movwf	?___ftadd
  9353  13EC  0871               	movf	?___ftpack+1,w
  9354  13ED  00C8               	movwf	?___ftadd+1
  9355  13EE  0872               	movf	?___ftpack+2,w
  9356  13EF  00C9               	movwf	?___ftadd+2
  9357  13F0  0008               	return
  9358  13F1                     __end_of___ftadd:	
  9359                           
  9360                           	psect	text30
  9361  1F48                     __ptext30:	
  9362 ;; *************** function ___ftdiv *****************
  9363 ;; Defined at:
  9364 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  f2              3   23[BANK0 ] float 
  9367 ;;  f1              3   26[BANK0 ] float 
  9368 ;; Auto vars:     Size  Location     Type
  9369 ;;  f3              3   34[BANK0 ] float 
  9370 ;;  sign            1   38[BANK0 ] unsigned char 
  9371 ;;  exp             1   37[BANK0 ] unsigned char 
  9372 ;;  cntr            1   33[BANK0 ] unsigned char 
  9373 ;; Return value:  Size  Location     Type
  9374 ;;                  3   23[BANK0 ] float 
  9375 ;; Registers used:
  9376 ;;		wreg, status,2, status,0, pclath, cstack
  9377 ;; Tracked objects:
  9378 ;;		On entry : 0/0
  9379 ;;		On exit  : 0/0
  9380 ;;		Unchanged: 0/0
  9381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9382 ;;      Params:         0       6       0       0       0
  9383 ;;      Locals:         0       6       0       0       0
  9384 ;;      Temps:          0       4       0       0       0
  9385 ;;      Totals:         0      16       0       0       0
  9386 ;;Total ram usage:       16 bytes
  9387 ;; Hardware stack levels used:    1
  9388 ;; Hardware stack levels required when called:    1
  9389 ;; This function calls:
  9390 ;;		___ftpack
  9391 ;; This function is called by:
  9392 ;;		_main
  9393 ;;		_exp
  9394 ;; This function uses a non-reentrant model
  9395 ;;
  9396                           
  9397                           
  9398                           ;psect for function ___ftdiv
  9399  1F48                     ___ftdiv:	
  9400                           
  9401                           ;incstack = 0
  9402                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9403  1F48  1283               	bcf	3,5	;RP0=0, select bank0
  9404  1F49  1303               	bcf	3,6	;RP1=0, select bank0
  9405  1F4A  083A               	movf	___ftdiv@f1,w
  9406  1F4B  00BD               	movwf	??___ftdiv
  9407  1F4C  083B               	movf	___ftdiv@f1+1,w
  9408  1F4D  00BE               	movwf	??___ftdiv+1
  9409  1F4E  083C               	movf	___ftdiv@f1+2,w
  9410  1F4F  00BF               	movwf	??___ftdiv+2
  9411  1F50  1003               	clrc
  9412  1F51  0D3E               	rlf	??___ftdiv+1,w
  9413  1F52  0D3F               	rlf	??___ftdiv+2,w
  9414  1F53  00C0               	movwf	??___ftdiv+3
  9415  1F54  0840               	movf	??___ftdiv+3,w
  9416  1F55  00C5               	movwf	___ftdiv@exp
  9417  1F56  08C5               	movf	___ftdiv@exp,f
  9418  1F57  1D03               	skipz
  9419  1F58  2F60               	goto	l2358
  9420  1F59  3000               	movlw	0
  9421  1F5A  00B7               	movwf	?___ftdiv
  9422  1F5B  3000               	movlw	0
  9423  1F5C  00B8               	movwf	?___ftdiv+1
  9424  1F5D  3000               	movlw	0
  9425  1F5E  00B9               	movwf	?___ftdiv+2
  9426  1F5F  0008               	return
  9427  1F60                     l2358:	
  9428  1F60  0837               	movf	___ftdiv@f2,w
  9429  1F61  00BD               	movwf	??___ftdiv
  9430  1F62  0838               	movf	___ftdiv@f2+1,w
  9431  1F63  00BE               	movwf	??___ftdiv+1
  9432  1F64  0839               	movf	___ftdiv@f2+2,w
  9433  1F65  00BF               	movwf	??___ftdiv+2
  9434  1F66  1003               	clrc
  9435  1F67  0D3E               	rlf	??___ftdiv+1,w
  9436  1F68  0D3F               	rlf	??___ftdiv+2,w
  9437  1F69  00C0               	movwf	??___ftdiv+3
  9438  1F6A  0840               	movf	??___ftdiv+3,w
  9439  1F6B  00C6               	movwf	___ftdiv@sign
  9440  1F6C  08C6               	movf	___ftdiv@sign,f
  9441  1F6D  1D03               	skipz
  9442  1F6E  2F76               	goto	l2364
  9443  1F6F  3000               	movlw	0
  9444  1F70  00B7               	movwf	?___ftdiv
  9445  1F71  3000               	movlw	0
  9446  1F72  00B8               	movwf	?___ftdiv+1
  9447  1F73  3000               	movlw	0
  9448  1F74  00B9               	movwf	?___ftdiv+2
  9449  1F75  0008               	return
  9450  1F76                     l2364:	
  9451  1F76  3000               	movlw	0
  9452  1F77  00C2               	movwf	___ftdiv@f3
  9453  1F78  3000               	movlw	0
  9454  1F79  00C3               	movwf	___ftdiv@f3+1
  9455  1F7A  3000               	movlw	0
  9456  1F7B  00C4               	movwf	___ftdiv@f3+2
  9457  1F7C  3089               	movlw	137
  9458  1F7D  0746               	addwf	___ftdiv@sign,w
  9459  1F7E  00BD               	movwf	??___ftdiv
  9460  1F7F  083D               	movf	??___ftdiv,w
  9461  1F80  02C5               	subwf	___ftdiv@exp,f
  9462  1F81  083A               	movf	___ftdiv@f1,w
  9463  1F82  00BD               	movwf	??___ftdiv
  9464  1F83  083B               	movf	___ftdiv@f1+1,w
  9465  1F84  00BE               	movwf	??___ftdiv+1
  9466  1F85  083C               	movf	___ftdiv@f1+2,w
  9467  1F86  00BF               	movwf	??___ftdiv+2
  9468  1F87  3010               	movlw	16
  9469  1F88                     u3095:	
  9470  1F88  1003               	clrc
  9471  1F89  0CBF               	rrf	??___ftdiv+2,f
  9472  1F8A  0CBE               	rrf	??___ftdiv+1,f
  9473  1F8B  0CBD               	rrf	??___ftdiv,f
  9474  1F8C  3EFF               	addlw	-1
  9475  1F8D  1D03               	skipz
  9476  1F8E  2F88               	goto	u3095
  9477  1F8F  083D               	movf	??___ftdiv,w
  9478  1F90  00C0               	movwf	??___ftdiv+3
  9479  1F91  0840               	movf	??___ftdiv+3,w
  9480  1F92  00C6               	movwf	___ftdiv@sign
  9481  1F93  0837               	movf	___ftdiv@f2,w
  9482  1F94  00BD               	movwf	??___ftdiv
  9483  1F95  0838               	movf	___ftdiv@f2+1,w
  9484  1F96  00BE               	movwf	??___ftdiv+1
  9485  1F97  0839               	movf	___ftdiv@f2+2,w
  9486  1F98  00BF               	movwf	??___ftdiv+2
  9487  1F99  3010               	movlw	16
  9488  1F9A                     u3105:	
  9489  1F9A  1003               	clrc
  9490  1F9B  0CBF               	rrf	??___ftdiv+2,f
  9491  1F9C  0CBE               	rrf	??___ftdiv+1,f
  9492  1F9D  0CBD               	rrf	??___ftdiv,f
  9493  1F9E  3EFF               	addlw	-1
  9494  1F9F  1D03               	skipz
  9495  1FA0  2F9A               	goto	u3105
  9496  1FA1  083D               	movf	??___ftdiv,w
  9497  1FA2  00C0               	movwf	??___ftdiv+3
  9498  1FA3  0840               	movf	??___ftdiv+3,w
  9499  1FA4  06C6               	xorwf	___ftdiv@sign,f
  9500  1FA5  3080               	movlw	128
  9501  1FA6  00BD               	movwf	??___ftdiv
  9502  1FA7  083D               	movf	??___ftdiv,w
  9503  1FA8  05C6               	andwf	___ftdiv@sign,f
  9504  1FA9  17BB               	bsf	___ftdiv@f1+1,7
  9505  1FAA  30FF               	movlw	255
  9506  1FAB  05BA               	andwf	___ftdiv@f1,f
  9507  1FAC  30FF               	movlw	255
  9508  1FAD  05BB               	andwf	___ftdiv@f1+1,f
  9509  1FAE  3000               	movlw	0
  9510  1FAF  05BC               	andwf	___ftdiv@f1+2,f
  9511  1FB0  17B8               	bsf	___ftdiv@f2+1,7
  9512  1FB1  30FF               	movlw	255
  9513  1FB2  05B7               	andwf	___ftdiv@f2,f
  9514  1FB3  30FF               	movlw	255
  9515  1FB4  05B8               	andwf	___ftdiv@f2+1,f
  9516  1FB5  3000               	movlw	0
  9517  1FB6  05B9               	andwf	___ftdiv@f2+2,f
  9518  1FB7  3018               	movlw	24
  9519  1FB8  00BD               	movwf	??___ftdiv
  9520  1FB9  083D               	movf	??___ftdiv,w
  9521  1FBA  00C1               	movwf	___ftdiv@cntr
  9522  1FBB                     l2378:	
  9523  1FBB  3001               	movlw	1
  9524  1FBC                     u3115:	
  9525  1FBC  1003               	clrc
  9526  1FBD  0DC2               	rlf	___ftdiv@f3,f
  9527  1FBE  0DC3               	rlf	___ftdiv@f3+1,f
  9528  1FBF  0DC4               	rlf	___ftdiv@f3+2,f
  9529  1FC0  3EFF               	addlw	-1
  9530  1FC1  1D03               	skipz
  9531  1FC2  2FBC               	goto	u3115
  9532  1FC3  0839               	movf	___ftdiv@f2+2,w
  9533  1FC4  023C               	subwf	___ftdiv@f1+2,w
  9534  1FC5  1D03               	skipz
  9535  1FC6  2FCD               	goto	u3125
  9536  1FC7  0838               	movf	___ftdiv@f2+1,w
  9537  1FC8  023B               	subwf	___ftdiv@f1+1,w
  9538  1FC9  1D03               	skipz
  9539  1FCA  2FCD               	goto	u3125
  9540  1FCB  0837               	movf	___ftdiv@f2,w
  9541  1FCC  023A               	subwf	___ftdiv@f1,w
  9542  1FCD                     u3125:	
  9543  1FCD  1C03               	skipc
  9544  1FCE  2FDA               	goto	l2386
  9545  1FCF  0837               	movf	___ftdiv@f2,w
  9546  1FD0  02BA               	subwf	___ftdiv@f1,f
  9547  1FD1  0838               	movf	___ftdiv@f2+1,w
  9548  1FD2  1C03               	skipc
  9549  1FD3  0F38               	incfsz	___ftdiv@f2+1,w
  9550  1FD4  02BB               	subwf	___ftdiv@f1+1,f
  9551  1FD5  0839               	movf	___ftdiv@f2+2,w
  9552  1FD6  1C03               	skipc
  9553  1FD7  0A39               	incf	___ftdiv@f2+2,w
  9554  1FD8  02BC               	subwf	___ftdiv@f1+2,f
  9555  1FD9  1442               	bsf	___ftdiv@f3,0
  9556  1FDA                     l2386:	
  9557  1FDA  3001               	movlw	1
  9558  1FDB                     u3135:	
  9559  1FDB  1003               	clrc
  9560  1FDC  0DBA               	rlf	___ftdiv@f1,f
  9561  1FDD  0DBB               	rlf	___ftdiv@f1+1,f
  9562  1FDE  0DBC               	rlf	___ftdiv@f1+2,f
  9563  1FDF  3EFF               	addlw	-1
  9564  1FE0  1D03               	skipz
  9565  1FE1  2FDB               	goto	u3135
  9566  1FE2  3001               	movlw	1
  9567  1FE3  02C1               	subwf	___ftdiv@cntr,f
  9568  1FE4  1D03               	btfss	3,2
  9569  1FE5  2FBB               	goto	l2378
  9570  1FE6  0842               	movf	___ftdiv@f3,w
  9571  1FE7  00F0               	movwf	___ftpack@arg
  9572  1FE8  0843               	movf	___ftdiv@f3+1,w
  9573  1FE9  00F1               	movwf	___ftpack@arg+1
  9574  1FEA  0844               	movf	___ftdiv@f3+2,w
  9575  1FEB  00F2               	movwf	___ftpack@arg+2
  9576  1FEC  0845               	movf	___ftdiv@exp,w
  9577  1FED  00BD               	movwf	??___ftdiv
  9578  1FEE  083D               	movf	??___ftdiv,w
  9579  1FEF  00F3               	movwf	___ftpack@exp
  9580  1FF0  0846               	movf	___ftdiv@sign,w
  9581  1FF1  00BE               	movwf	??___ftdiv+1
  9582  1FF2  083E               	movf	??___ftdiv+1,w
  9583  1FF3  00F4               	movwf	___ftpack@sign
  9584  1FF4  160A  158A  24A7   	fcall	___ftpack
  9585  1FF7  0870               	movf	?___ftpack,w
  9586  1FF8  1283               	bcf	3,5	;RP0=0, select bank0
  9587  1FF9  1303               	bcf	3,6	;RP1=0, select bank0
  9588  1FFA  00B7               	movwf	?___ftdiv
  9589  1FFB  0871               	movf	?___ftpack+1,w
  9590  1FFC  00B8               	movwf	?___ftdiv+1
  9591  1FFD  0872               	movf	?___ftpack+2,w
  9592  1FFE  00B9               	movwf	?___ftdiv+2
  9593  1FFF  0008               	return
  9594  2000                     __end_of___ftdiv:	
  9595                           
  9596                           	psect	text31
  9597  19D9                     __ptext31:	
  9598 ;; *************** function ___awtoft *****************
  9599 ;; Defined at:
  9600 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;  c               2    8[COMMON] int 
  9603 ;; Auto vars:     Size  Location     Type
  9604 ;;  sign            1   13[COMMON] unsigned char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  3    8[COMMON] float 
  9607 ;; Registers used:
  9608 ;;		wreg, status,2, status,0, pclath, cstack
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9614 ;;      Params:         3       0       0       0       0
  9615 ;;      Locals:         1       0       0       0       0
  9616 ;;      Temps:          2       0       0       0       0
  9617 ;;      Totals:         6       0       0       0       0
  9618 ;;Total ram usage:        6 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; Hardware stack levels required when called:    1
  9621 ;; This function calls:
  9622 ;;		___ftpack
  9623 ;; This function is called by:
  9624 ;;		_main
  9625 ;;		_exp
  9626 ;;		_log
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function ___awtoft
  9632  19D9                     ___awtoft:	
  9633                           
  9634                           ;incstack = 0
  9635                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9636  19D9  01FD               	clrf	___awtoft@sign
  9637  19DA  1FF9               	btfss	___awtoft@c+1,7
  9638  19DB  29E3               	goto	l2348
  9639  19DC  09F8               	comf	___awtoft@c,f
  9640  19DD  09F9               	comf	___awtoft@c+1,f
  9641  19DE  0AF8               	incf	___awtoft@c,f
  9642  19DF  1903               	skipnz
  9643  19E0  0AF9               	incf	___awtoft@c+1,f
  9644  19E1  01FD               	clrf	___awtoft@sign
  9645  19E2  0AFD               	incf	___awtoft@sign,f
  9646  19E3                     l2348:	
  9647  19E3  0878               	movf	___awtoft@c,w
  9648  19E4  00F0               	movwf	___ftpack@arg
  9649  19E5  0879               	movf	___awtoft@c+1,w
  9650  19E6  00F1               	movwf	___ftpack@arg+1
  9651  19E7  01F2               	clrf	___ftpack@arg+2
  9652  19E8  308E               	movlw	142
  9653  19E9  00FB               	movwf	??___awtoft
  9654  19EA  087B               	movf	??___awtoft,w
  9655  19EB  00F3               	movwf	___ftpack@exp
  9656  19EC  087D               	movf	___awtoft@sign,w
  9657  19ED  00FC               	movwf	??___awtoft+1
  9658  19EE  087C               	movf	??___awtoft+1,w
  9659  19EF  00F4               	movwf	___ftpack@sign
  9660  19F0  160A  158A  24A7   	fcall	___ftpack
  9661  19F3  0870               	movf	?___ftpack,w
  9662  19F4  00F8               	movwf	?___awtoft
  9663  19F5  0871               	movf	?___ftpack+1,w
  9664  19F6  00F9               	movwf	?___awtoft+1
  9665  19F7  0872               	movf	?___ftpack+2,w
  9666  19F8  00FA               	movwf	?___awtoft+2
  9667  19F9  0008               	return
  9668  19FA                     __end_of___awtoft:	
  9669                           
  9670                           	psect	text32
  9671  1A62                     __ptext32:	
  9672 ;; *************** function ___lltoft *****************
  9673 ;; Defined at:
  9674 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  9675 ;; Parameters:    Size  Location     Type
  9676 ;;  c               4    8[COMMON] unsigned long 
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;  exp             1   13[COMMON] unsigned char 
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  3    8[COMMON] float 
  9681 ;; Registers used:
  9682 ;;		wreg, status,2, status,0, pclath, cstack
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9688 ;;      Params:         4       0       0       0       0
  9689 ;;      Locals:         1       0       0       0       0
  9690 ;;      Temps:          1       0       0       0       0
  9691 ;;      Totals:         6       0       0       0       0
  9692 ;;Total ram usage:        6 bytes
  9693 ;; Hardware stack levels used:    1
  9694 ;; Hardware stack levels required when called:    1
  9695 ;; This function calls:
  9696 ;;		___ftpack
  9697 ;; This function is called by:
  9698 ;;		_sprintf
  9699 ;;		_pow
  9700 ;; This function uses a non-reentrant model
  9701 ;;
  9702                           
  9703                           
  9704                           ;psect for function ___lltoft
  9705  1A62                     ___lltoft:	
  9706                           
  9707                           ;incstack = 0
  9708                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  9709  1A62  308E               	movlw	142
  9710  1A63  00FC               	movwf	??___lltoft
  9711  1A64  087C               	movf	??___lltoft,w
  9712  1A65  00FD               	movwf	___lltoft@exp
  9713  1A66                     l2746:	
  9714  1A66  30FF               	movlw	255
  9715  1A67  057B               	andwf	___lltoft@c+3,w
  9716  1A68  1903               	btfsc	3,2
  9717  1A69  2A78               	goto	l2748
  9718  1A6A  3001               	movlw	1
  9719  1A6B                     u3755:	
  9720  1A6B  1003               	clrc
  9721  1A6C  0CFB               	rrf	___lltoft@c+3,f
  9722  1A6D  0CFA               	rrf	___lltoft@c+2,f
  9723  1A6E  0CF9               	rrf	___lltoft@c+1,f
  9724  1A6F  0CF8               	rrf	___lltoft@c,f
  9725  1A70  3EFF               	addlw	-1
  9726  1A71  1D03               	skipz
  9727  1A72  2A6B               	goto	u3755
  9728  1A73  3001               	movlw	1
  9729  1A74  00FC               	movwf	??___lltoft
  9730  1A75  087C               	movf	??___lltoft,w
  9731  1A76  07FD               	addwf	___lltoft@exp,f
  9732  1A77  2A66               	goto	l2746
  9733  1A78                     l2748:	
  9734  1A78  0878               	movf	___lltoft@c,w
  9735  1A79  00F0               	movwf	___ftpack@arg
  9736  1A7A  0879               	movf	___lltoft@c+1,w
  9737  1A7B  00F1               	movwf	___ftpack@arg+1
  9738  1A7C  087A               	movf	___lltoft@c+2,w
  9739  1A7D  00F2               	movwf	___ftpack@arg+2
  9740  1A7E  087D               	movf	___lltoft@exp,w
  9741  1A7F  00FC               	movwf	??___lltoft
  9742  1A80  087C               	movf	??___lltoft,w
  9743  1A81  00F3               	movwf	___ftpack@exp
  9744  1A82  01F4               	clrf	___ftpack@sign
  9745  1A83  160A  158A  24A7   	fcall	___ftpack
  9746  1A86  0870               	movf	?___ftpack,w
  9747  1A87  00F8               	movwf	?___lltoft
  9748  1A88  0871               	movf	?___ftpack+1,w
  9749  1A89  00F9               	movwf	?___lltoft+1
  9750  1A8A  0872               	movf	?___ftpack+2,w
  9751  1A8B  00FA               	movwf	?___lltoft+2
  9752  1A8C  0008               	return
  9753  1A8D                     __end_of___lltoft:	
  9754                           
  9755                           	psect	text33
  9756  1CA7                     __ptext33:	
  9757 ;; *************** function ___ftpack *****************
  9758 ;; Defined at:
  9759 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;  arg             3    0[COMMON] unsigned um
  9762 ;;  exp             1    3[COMMON] unsigned char 
  9763 ;;  sign            1    4[COMMON] unsigned char 
  9764 ;; Auto vars:     Size  Location     Type
  9765 ;;		None
  9766 ;; Return value:  Size  Location     Type
  9767 ;;                  3    0[COMMON] float 
  9768 ;; Registers used:
  9769 ;;		wreg, status,2, status,0
  9770 ;; Tracked objects:
  9771 ;;		On entry : 0/0
  9772 ;;		On exit  : 0/0
  9773 ;;		Unchanged: 0/0
  9774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9775 ;;      Params:         5       0       0       0       0
  9776 ;;      Locals:         0       0       0       0       0
  9777 ;;      Temps:          3       0       0       0       0
  9778 ;;      Totals:         8       0       0       0       0
  9779 ;;Total ram usage:        8 bytes
  9780 ;; Hardware stack levels used:    1
  9781 ;; This function calls:
  9782 ;;		Nothing
  9783 ;; This function is called by:
  9784 ;;		___altoft
  9785 ;;		___awtoft
  9786 ;;		___ftadd
  9787 ;;		___ftdiv
  9788 ;;		___ftmul
  9789 ;;		___lltoft
  9790 ;; This function uses a non-reentrant model
  9791 ;;
  9792                           
  9793                           
  9794                           ;psect for function ___ftpack
  9795  1CA7                     ___ftpack:	
  9796                           
  9797                           ;incstack = 0
  9798                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9799  1CA7  0873               	movf	___ftpack@exp,w
  9800  1CA8  1903               	btfsc	3,2
  9801  1CA9  2CAF               	goto	l1986
  9802  1CAA  0872               	movf	___ftpack@arg+2,w
  9803  1CAB  0471               	iorwf	___ftpack@arg+1,w
  9804  1CAC  0470               	iorwf	___ftpack@arg,w
  9805  1CAD  1D03               	skipz
  9806  1CAE  2CC2               	goto	l1992
  9807  1CAF                     l1986:	
  9808  1CAF  3000               	movlw	0
  9809  1CB0  00F0               	movwf	?___ftpack
  9810  1CB1  3000               	movlw	0
  9811  1CB2  00F1               	movwf	?___ftpack+1
  9812  1CB3  3000               	movlw	0
  9813  1CB4  00F2               	movwf	?___ftpack+2
  9814  1CB5  0008               	return
  9815  1CB6                     l1990:	
  9816  1CB6  3001               	movlw	1
  9817  1CB7  00F5               	movwf	??___ftpack
  9818  1CB8  0875               	movf	??___ftpack,w
  9819  1CB9  07F3               	addwf	___ftpack@exp,f
  9820  1CBA  3001               	movlw	1
  9821  1CBB                     u2185:	
  9822  1CBB  1003               	clrc
  9823  1CBC  0CF2               	rrf	___ftpack@arg+2,f
  9824  1CBD  0CF1               	rrf	___ftpack@arg+1,f
  9825  1CBE  0CF0               	rrf	___ftpack@arg,f
  9826  1CBF  3EFF               	addlw	-1
  9827  1CC0  1D03               	skipz
  9828  1CC1  2CBB               	goto	u2185
  9829  1CC2                     l1992:	
  9830  1CC2  30FE               	movlw	254
  9831  1CC3  0572               	andwf	___ftpack@arg+2,w
  9832  1CC4  1903               	btfsc	3,2
  9833  1CC5  2CDD               	goto	l433
  9834  1CC6  2CB6               	goto	l1990
  9835  1CC7                     l1994:	
  9836  1CC7  3001               	movlw	1
  9837  1CC8  00F5               	movwf	??___ftpack
  9838  1CC9  0875               	movf	??___ftpack,w
  9839  1CCA  07F3               	addwf	___ftpack@exp,f
  9840  1CCB  3001               	movlw	1
  9841  1CCC  07F0               	addwf	___ftpack@arg,f
  9842  1CCD  3000               	movlw	0
  9843  1CCE  1803               	skipnc
  9844  1CCF  3001               	movlw	1
  9845  1CD0  07F1               	addwf	___ftpack@arg+1,f
  9846  1CD1  3000               	movlw	0
  9847  1CD2  1803               	skipnc
  9848  1CD3  3001               	movlw	1
  9849  1CD4  07F2               	addwf	___ftpack@arg+2,f
  9850  1CD5  3001               	movlw	1
  9851  1CD6                     u2205:	
  9852  1CD6  1003               	clrc
  9853  1CD7  0CF2               	rrf	___ftpack@arg+2,f
  9854  1CD8  0CF1               	rrf	___ftpack@arg+1,f
  9855  1CD9  0CF0               	rrf	___ftpack@arg,f
  9856  1CDA  3EFF               	addlw	-1
  9857  1CDB  1D03               	skipz
  9858  1CDC  2CD6               	goto	u2205
  9859  1CDD                     l433:	
  9860  1CDD  30FF               	movlw	255
  9861  1CDE  0572               	andwf	___ftpack@arg+2,w
  9862  1CDF  1903               	btfsc	3,2
  9863  1CE0  2CEC               	goto	l2002
  9864  1CE1  2CC7               	goto	l1994
  9865  1CE2                     l2000:	
  9866  1CE2  3001               	movlw	1
  9867  1CE3  02F3               	subwf	___ftpack@exp,f
  9868  1CE4  3001               	movlw	1
  9869  1CE5                     u2225:	
  9870  1CE5  1003               	clrc
  9871  1CE6  0DF0               	rlf	___ftpack@arg,f
  9872  1CE7  0DF1               	rlf	___ftpack@arg+1,f
  9873  1CE8  0DF2               	rlf	___ftpack@arg+2,f
  9874  1CE9  3EFF               	addlw	-1
  9875  1CEA  1D03               	skipz
  9876  1CEB  2CE5               	goto	u2225
  9877  1CEC                     l2002:	
  9878  1CEC  1FF1               	btfss	___ftpack@arg+1,7
  9879  1CED  2CE2               	goto	l2000
  9880  1CEE  1873               	btfsc	___ftpack@exp,0
  9881  1CEF  2CF6               	goto	l439
  9882  1CF0  30FF               	movlw	255
  9883  1CF1  05F0               	andwf	___ftpack@arg,f
  9884  1CF2  307F               	movlw	127
  9885  1CF3  05F1               	andwf	___ftpack@arg+1,f
  9886  1CF4  30FF               	movlw	255
  9887  1CF5  05F2               	andwf	___ftpack@arg+2,f
  9888  1CF6                     l439:	
  9889  1CF6  1003               	clrc
  9890  1CF7  0CF3               	rrf	___ftpack@exp,f
  9891  1CF8  0873               	movf	___ftpack@exp,w
  9892  1CF9  00F5               	movwf	??___ftpack
  9893  1CFA  01F6               	clrf	??___ftpack+1
  9894  1CFB  01F7               	clrf	??___ftpack+2
  9895  1CFC  3010               	movlw	16
  9896  1CFD                     u2255:	
  9897  1CFD  1003               	clrc
  9898  1CFE  0DF5               	rlf	??___ftpack,f
  9899  1CFF  0DF6               	rlf	??___ftpack+1,f
  9900  1D00  0DF7               	rlf	??___ftpack+2,f
  9901  1D01  3EFF               	addlw	-1
  9902  1D02  1D03               	skipz
  9903  1D03  2CFD               	goto	u2255
  9904  1D04  0875               	movf	??___ftpack,w
  9905  1D05  04F0               	iorwf	___ftpack@arg,f
  9906  1D06  0876               	movf	??___ftpack+1,w
  9907  1D07  04F1               	iorwf	___ftpack@arg+1,f
  9908  1D08  0877               	movf	??___ftpack+2,w
  9909  1D09  04F2               	iorwf	___ftpack@arg+2,f
  9910  1D0A  0874               	movf	___ftpack@sign,w
  9911  1D0B  1903               	btfsc	3,2
  9912  1D0C  0008               	return
  9913  1D0D  17F2               	bsf	___ftpack@arg+2,7
  9914  1D0E  0008               	return
  9915  1D0F                     __end_of___ftpack:	
  9916                           
  9917                           	psect	text34
  9918  19FA                     __ptext34:	
  9919 ;; *************** function _initLCD *****************
  9920 ;; Defined at:
  9921 ;;		line 37 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\lcd_functions.h"
  9922 ;; Parameters:    Size  Location     Type
  9923 ;;		None
  9924 ;; Auto vars:     Size  Location     Type
  9925 ;;		None
  9926 ;; Return value:  Size  Location     Type
  9927 ;;		None               void
  9928 ;; Registers used:
  9929 ;;		wreg, status,2, status,0, pclath, cstack
  9930 ;; Tracked objects:
  9931 ;;		On entry : 0/0
  9932 ;;		On exit  : 0/0
  9933 ;;		Unchanged: 0/0
  9934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9935 ;;      Params:         0       0       0       0       0
  9936 ;;      Locals:         0       0       0       0       0
  9937 ;;      Temps:          1       0       0       0       0
  9938 ;;      Totals:         1       0       0       0       0
  9939 ;;Total ram usage:        1 bytes
  9940 ;; Hardware stack levels used:    1
  9941 ;; Hardware stack levels required when called:    1
  9942 ;; This function calls:
  9943 ;;		_instCTRL
  9944 ;; This function is called by:
  9945 ;;		_main
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949                           
  9950                           ;psect for function _initLCD
  9951  19FA                     _initLCD:	
  9952                           
  9953                           ;lcd_functions.h: 39: instCTRL(0x3C);
  9954                           
  9955                           ;incstack = 0
  9956                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  9957  19FA  303C               	movlw	60
  9958  19FB  160A  158A  2188  160A  158A  	fcall	_instCTRL
  9959                           
  9960                           ;lcd_functions.h: 40: _delay((unsigned long)((50)*(4000000/4000000.0)));
  9961  1A00  3010               	movlw	16
  9962  1A01  00F2               	movwf	??_initLCD
  9963  1A02                     u4347:	
  9964  1A02  0BF2               	decfsz	??_initLCD,f
  9965  1A03  2A02               	goto	u4347
  9966  1A04  0000               	nop
  9967                           
  9968                           ;lcd_functions.h: 41: instCTRL(0x0C);
  9969  1A05  300C               	movlw	12
  9970  1A06  160A  158A  2188  160A  158A  	fcall	_instCTRL
  9971                           
  9972                           ;lcd_functions.h: 42: instCTRL(0x01);
  9973  1A0B  3001               	movlw	1
  9974  1A0C  160A  158A  2188  160A  158A  	fcall	_instCTRL
  9975                           
  9976                           ;lcd_functions.h: 43: instCTRL(0x06);
  9977  1A11  3006               	movlw	6
  9978  1A12  160A  158A  2188  160A  158A  	fcall	_instCTRL
  9979                           
  9980                           ;lcd_functions.h: 44: instCTRL(0x0F);
  9981  1A17  300F               	movlw	15
  9982  1A18  160A  158A  2188   	fcall	_instCTRL
  9983  1A1B  0008               	return
  9984  1A1C                     __end_of_initLCD:	
  9985                           
  9986                           	psect	text35
  9987  1988                     __ptext35:	
  9988 ;; *************** function _instCTRL *****************
  9989 ;; Defined at:
  9990 ;;		line 17 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\lcd_functions.h"
  9991 ;; Parameters:    Size  Location     Type
  9992 ;;  CMD             1    wreg     unsigned char 
  9993 ;; Auto vars:     Size  Location     Type
  9994 ;;  CMD             1    1[COMMON] unsigned char 
  9995 ;; Return value:  Size  Location     Type
  9996 ;;		None               void
  9997 ;; Registers used:
  9998 ;;		wreg
  9999 ;; Tracked objects:
 10000 ;;		On entry : 0/0
 10001 ;;		On exit  : 0/0
 10002 ;;		Unchanged: 0/0
 10003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10004 ;;      Params:         0       0       0       0       0
 10005 ;;      Locals:         1       0       0       0       0
 10006 ;;      Temps:          1       0       0       0       0
 10007 ;;      Totals:         2       0       0       0       0
 10008 ;;Total ram usage:        2 bytes
 10009 ;; Hardware stack levels used:    1
 10010 ;; This function calls:
 10011 ;;		Nothing
 10012 ;; This function is called by:
 10013 ;;		_initLCD
 10014 ;;		_main
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           
 10018                           
 10019                           ;psect for function _instCTRL
 10020  1988                     _instCTRL:	
 10021                           
 10022                           ;incstack = 0
 10023                           ; Regs used in _instCTRL: [wreg]
 10024                           ;instCTRL@CMD stored from wreg
 10025  1988  00F1               	movwf	instCTRL@CMD
 10026                           
 10027                           ;lcd_functions.h: 19: PORTD = CMD;
 10028  1989  0871               	movf	instCTRL@CMD,w
 10029  198A  1283               	bcf	3,5	;RP0=0, select bank0
 10030  198B  1303               	bcf	3,6	;RP1=0, select bank0
 10031  198C  0088               	movwf	8	;volatile
 10032                           
 10033                           ;lcd_functions.h: 20: RB5 = 0;
 10034  198D  1286               	bcf	6,5	;volatile
 10035                           
 10036                           ;lcd_functions.h: 21: RB6 = 0;
 10037  198E  1306               	bcf	6,6	;volatile
 10038                           
 10039                           ;lcd_functions.h: 22: RB7 = 1;
 10040  198F  1786               	bsf	6,7	;volatile
 10041                           
 10042                           ;lcd_functions.h: 23: _delay((unsigned long)((50)*(4000000/4000000.0)));
 10043  1990  3010               	movlw	16
 10044  1991  00F0               	movwf	??_instCTRL
 10045  1992                     u4357:	
 10046  1992  0BF0               	decfsz	??_instCTRL,f
 10047  1993  2992               	goto	u4357
 10048  1994  0000               	nop
 10049                           
 10050                           ;lcd_functions.h: 24: RB7 = 0;
 10051  1995  1283               	bcf	3,5	;RP0=0, select bank0
 10052  1996  1303               	bcf	3,6	;RP1=0, select bank0
 10053  1997  1386               	bcf	6,7	;volatile
 10054  1998  0008               	return
 10055  1999                     __end_of_instCTRL:	
 10056  007E                     btemp	set	126	;btemp
 10057  007E                     wtemp	set	126
 10058  007E                     wtemp0	set	126
 10059  0080                     wtemp1	set	128
 10060  0082                     wtemp2	set	130
 10061  0084                     wtemp3	set	132
 10062  0086                     wtemp4	set	134
 10063  0088                     wtemp5	set	136
 10064  007F                     wtemp6	set	127
 10065  007E                     ttemp	set	126
 10066  007E                     ttemp0	set	126
 10067  0081                     ttemp1	set	129
 10068  0084                     ttemp2	set	132
 10069  0087                     ttemp3	set	135
 10070  007F                     ttemp4	set	127
 10071  007E                     ltemp	set	126
 10072  007E                     ltemp0	set	126
 10073  0082                     ltemp1	set	130
 10074  0086                     ltemp2	set	134
 10075  0080                     ltemp3	set	128


Data Sizes:
    Strings     52
    Constant    175
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     34      36
    BANK3            96     63      63
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK3[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S131$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    printToLCD@STR	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[18]), STR_2(CODE[18]), main@buffer(BANK3[16]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _printToLCD->_dataCTRL
    _pow->___lltoft
    _log->___awtoft
    _exp->___awtoft
    ___ftmul->___awtoft
    ___bmul->___awdiv
    ___ftsub->___awtoft
    ___ftsub->___lltoft
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _initLCD->_instCTRL

Critical Paths under _main in BANK0

    _main->_pow
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->_scale
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _pow->_exp

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0  129759
                                             77 BANK0      2     2      0
                                              0 BANK3     63    63      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            _initLCD
                           _instCTRL
                                _pow
                         _printToLCD
                            _readADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    46      4   41696
                                             58 BANK0     10     6      4
                                              0 BANK1     34    34      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    8864
                                             23 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    8666
                                             23 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2      70
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _printToLCD                                           2     0      2     226
                                              2 COMMON     2     0      2
                           _dataCTRL
 ---------------------------------------------------------------------------------
 (2) _dataCTRL                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pow                                                 18    12      6   71955
                                             76 BANK0      1     1      0
                                              9 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   23475
                                             62 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 13    10      3   37910
                                             72 BANK0      4     1      3
                                              0 BANK1      9     9      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                               10     5      5    2308
                                             62 BANK0     10     5      5
                             ___ftge
                            ___ftneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     310
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    8759
                                             54 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     436
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     570
                                             32 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6    1620
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    1954
                                             46 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     4      6   10136
                                             52 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    5137
                                              7 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     628
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4132
                                             52 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3875
                                             39 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2467
                                             23 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2013
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1938
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1763
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      22
                                              2 COMMON     1     1      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (1) _instCTRL                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   _initLCD
     _instCTRL
   _instCTRL
   _pow
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     ___lltoft
       ___ftpack
     _exp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       _eval_poly
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftge
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         _frexp
       _ldexp
         ___ftge
         ___ftneg
         _eval_poly (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _frexp
   _printToLCD
     _dataCTRL
   _readADC
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___ftsub
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      C0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     22      24       7       45.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     3F      3F       9       65.6%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      C0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu May 02 18:52:58 2024

           ___altoft@exp 0054                        pc 0002           ___bmul@product 0025  
            __CFG_CP$OFF 0000            ___altoft@sign 0055                       l75 1A9B  
                     _GO 00FA             ___awdiv@sign 0021                       fsr 0004  
    ___wmul@multiplicand 0072             ___ftadd@exp1 0053             ___ftadd@exp2 0052  
           ___ftadd@sign 0051                      l124 022C                      l150 0562  
                    l413 14CE                      l165 0787                      l255 1A49  
                    l433 1CDD                      l462 1390                      l439 1CF6  
                    l655 1544                      l488 0837                      _GIE 005F  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
           __CFG_CPD$OFF 0000                      _exp 167B                      _log 1145  
                    _pow 1523                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076            printToLCD@STR 0072             __CFG_FOSC$HS 0000  
            _sprintf$144 00A3              _sprintf$666 00A0             __CFG_LVP$OFF 0000  
           ___ftdiv@cntr 0041             ___ftdiv@sign 0046                     l2000 1CE2  
                   l2002 1CEC                     l2102 13B4                     l2014 19AE  
                   l2112 13D7                     l2040 1B29                     l2120 1BB6  
                   l2200 1DA2                     l2018 19B4                     l2052 1311  
                   l2124 1BDD                     l2220 1DE4                     l3012 04EB  
                   l2062 1327                     l2142 122D                     l2038 1B17  
                   l2230 1DFF                     l2310 1102                     l2080 1356  
                   l2056 1318                     l2160 1282                     l3008 047C  
                   l2082 1362                     l2074 1341                     l2234 1E0D  
                   l2226 1DF1                     l2218 1DD4                     l2410 1E47  
                   l2322 110F                     l2314 1109                     l3050 0603  
                   l3026 0541                     l3018 04F1                     l2092 1380  
                   l2084 1367                     l2172 12AA                     l2164 1292  
                   l2148 1243                     l2228 1DFC                     l2324 111D  
                   l2332 1136                     l3044 05E9                     l3124 0B89  
                   l2094 138C                     l2086 136B                     l2246 1AD3  
                   l2414 1E50                     l3070 0757                     l3038 05D0  
                   l2176 12BA                     l2424 1EA6                     l2272 1C03  
                   l2336 113E                     l2328 112B                     l3056 0636  
                   l2098 13A2                     l2434 1D81                     l2290 1C2F  
                   l2282 1C0B                     l2266 1BF8                     l2522 016E  
                   l2514 00E4                     l3090 07CF                     l2348 19E3  
                   l2364 1F76                     l2444 1EBD                     l2284 1C19  
                   l3076 0770                     l3172 0FE5                     l2358 1F60  
                   l2454 1EE6                     l2606 0878                     l2294 1C3A  
                   l3086 07AD                     l3078 0775                     l2704 1C59  
                   l2624 08B1                     l2616 0894                     l2544 09FC  
                   l3096 01AB                     l2386 1FDA                     l2378 1FBB  
                   l2474 1F26                     l2802 1705                     l2714 1C91  
                   l2706 1C69                     l2730 1B5B                     l2626 08BC  
                   l2618 08A4                     l2298 1C42                     l2562 0B48  
                   l2538 098E                     l3098 07F3                     l2644 1431  
                   l2628 08BF                     l2556 0ADA                     l2548 0A1B  
                   l2478 1F2F                     l2718 1C9E                     l2734 1B79  
                   l2670 14EF                     l2654 1478                     l2638 1412  
                   l2574 1986                     l2824 17E7                     l2728 1B4B  
                   l2680 1517                     l2672 14FF                     l2584 081F  
                   l2912 01C6                     l2746 1A66                     l2738 1B86  
                   l2682 151A                     l2748 1A78                     l2780 1689  
                   l2764 117F                     l1990 1CB6                     l2790 16AA  
                   l2758 1169                     l2846 1A1C                     l2678 150C  
                   l2598 0858                     l2942 025C                     l2934 022E  
                   l2926 01E1                     l1992 1CC2                     l2880 1559  
                   l2688 1A41                     l2952 029B                     l2936 0244  
                   l2928 0226                     l1994 1CC7                     l1986 1CAF  
                   l2874 154D                     l2796 16CE                     l2892 15DD  
                   l2980 0397                     l2888 15C1                     l2992 041B  
                   l2984 03DD                     l2976 037A                     l2968 030D  
                   l2996 0432                     ?_exp 0068                     ?_log 005E  
                   ?_pow 00A9                     STR_1 10E3                     STR_2 10BF  
                   STR_3 10D1                     u2205 1CD6                     u3005 1112  
                   u2225 1CE5                     u3105 1F9A                     u2305 1B1C  
                   u3025 1123                     u3115 1FBC                     u3035 112C  
                   u3125 1FCD                     u4005 02B5                     u2255 1CFD  
                   u3135 1FDB                     u2415 1342                     u2185 1CBB  
                   u2505 1381                     u3225 1EEF                     u4115 04F6  
                   u2445 1357                     u4205 06AB                     u4125 0533  
                   u4045 03A2                     u3095 1F88                     u3415 0895  
                   u4215 071D                     u4055 03E8                     u2475 136C  
                   u2635 124F                     u2571 1BA9                     u3355 085A  
                   u4155 0572                     u2572 1BAA                     u2725 12BB  
                   u2645 1261                     u2573 1BAF                     u2805 1DD5  
                   u3605 1A51                     u3445 08B3                     u3365 086B  
                   u4085 0419                     u4317 0FFA                     u2574 1BB0  
                   u2735 12C3                     u2591 1BD0                     u4327 1A93  
                   u3535 14F0                     u3375 0879                     u4175 05F2  
                   u2592 1BD1                     u2593 1BD6                     u4337 19A3  
                   u3705 1B4F                     u2905 1C0E                     u4265 07A0  
                   u4185 05FF                     u2594 1BD7                     u4347 1A02  
                   u2675 1293                     u2835 1DF3                     u3635 1C5D  
                   u4275 07C6                     _PEIE 005E                     u4357 1992  
                   u2685 129B                     u3725 1B69                     u3565 150E  
                   u3485 147A                     u2925 1C1A                     _INTE 005C  
                   _INTF 0059                     u2775 1DA9                     u3655 1C6B  
                   u3735 1B7A                     u3495 14A9                     u2935 1C26  
                   u3665 1C80                     u2945 1C30                     u3755 1A6B  
                   u3915 15B4                     u3675 1C92                     u3595 1A4A  
                   u3845 17DC             __CFG_WRT$OFF 0000                     _main 0B67  
           ___ftpack@arg 0070             ___ftpack@exp 0073                     btemp 007E  
                   exp@x 0068                     log@x 005E            __CFG_BOREN$ON 0000  
           main@adcValue 01C1                     ltemp 007E                     pow@x 00A9  
                   pow@y 00AC                     start 0000                     ttemp 007E  
                   wtemp 007E              main@voltage 01C3        ___bmul@multiplier 0026  
           ___ftmul@cntr 0035             ___ftmul@sign 0036             ___fttol@exp1 004D  
                  ??_exp 006B                    ??_log 0061             ___fttol@lval 0049  
                  ??_pow 006C                    ?_main 0070          __end_of___awdiv 1C49  
        __end_of___ftadd 13F1            __CFG_WDTE$OFF 0000          __end_of___awmod 1145  
        __end_of___ftdiv 2000          __end_of___ftneg 197A          __end_of___lldiv 1CA7  
        __end_of___ftmul 12E8          ___awdiv@divisor 0077          __end_of___llmod 1B8F  
        __end_of___ftsub 19D9          __end_of___fttol 1E16          ___awdiv@counter 0020  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
           ___lltoft@exp 007D          __end_of_readADC 1AC1          __end_of_initLCD 1A1C  
          ___awtoft@sign 007D              readADC@temp 0074          __end_of_dpowers 1038  
                  _floor 1E16                    _ldexp 1EAF                    _frexp 1AC1  
                  _errno 00C2                    _scale 08C8          __end_of_isdigit 1988  
          ___ftpack@sign 0074                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  pow@yi 00B6                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __end_of_sprintf 07F8  
            exp@exponent 00A6              ldexp@newexp 0061          __initialization 07F8  
            log@exponent 0062             __end_of_main 1000                   ??_main 006D  
          ___fttol@sign1 0048     __size_of__tdiv_to_l_ 00C3                   _ADCON0 001F  
                 _ADCON1 009F                   ?_floor 0056                   ?_ldexp 005E  
                 ?_frexp 0070         __end_of___altoft 1B43         ___llmod@dividend 0074  
                 ?_scale 0037                   _ADRESH 001E                   _ADRESL 009E  
       ___awdiv@dividend 0079         __end_of___awtoft 19FA         __end_of___ftpack 1D0F  
       __end_of___lltoft 1A8D                   _INTEDG 040E         __end_of_dataCTRL 19AA  
            instCTRL@CMD 0071           __CFG_PWRTE$OFF 0000         __end_of__powers_ 1086  
                 ___bmul 19AA                   ___ftge 1B8F                   ___wmul 1A3F  
              ??___awdiv 007B                ??___ftadd 004D                ??___awmod 0074  
              ??___ftdiv 003D                ??___ftneg 0073                ??___lldiv 0078  
              ??___ftmul 002D                ??___llmod 0078                ??___ftsub 007E  
              ??___fttol 0044         __end_of_instCTRL 1999                   _fround 0004  
       ___awdiv@quotient 0022          ___awmod@divisor 0070          ___awmod@counter 0075  
                 floor@i 005A                   floor@x 0056    ___ftmul@f3_as_product 0032  
              ??_readADC 0072                ??_initLCD 0072                ??_isdigit 0070  
              ??_sprintf 005E         __end_ofexp@coeff 10A4         __end_oflog@coeff 10BF  
__end_of__initialization 07FC               ___altoft@c 004E               ___ftadd@f1 0047  
             ___ftadd@f2 004A               ___ftge@ff1 0070               ___ftge@ff2 0073  
           eval_poly@res 005B               ___ftdiv@f1 003A               ___ftdiv@f2 0037  
             ___ftdiv@f3 0042               ___ftneg@f1 0070               ___awtoft@c 0078  
    ___bmul@multiplicand 0024               ___ftmul@f1 0027               ___ftmul@f2 002A  
             ___ftsub@f1 0057               ___ftsub@f2 0054               ___fttol@f1 0040  
         __pcstackCOMMON 0070               ___lltoft@c 0078            __end_of_floor 1EAF  
          __end_of_ldexp 1F48            __end_of_frexp 1B01            __end_of_scale 0B67  
             __div_to_l_ 13F1          __div_to_l_@exp1 0025                  ??_floor 0059  
                ??_ldexp 0063          __div_to_l_@cntr 0024             sprintf@integ 00B2  
                ??_frexp 0074                  ??_scale 003A          __div_to_l_@quot 0020  
             __pbssBANK1 00C2       __size_of_eval_poly 0079            __div_to_l_@f1 0070  
          __div_to_l_@f2 0073               __pmaintext 0B67                  ?___bmul 0024  
                ?___ftge 0070                  ?___wmul 0070                ?___altoft 004E  
                ?_fround 0037                ?___awtoft 0078                ?___ftpack 0070  
              ?___lltoft 0078                ?_dataCTRL 0070                  _GO_DONE 00FA  
             __stringtab 1000                ?_instCTRL 0070        __end_of__npowers_ 105F  
        __size_of___bmul 0013          __size_of___ftge 005D                  ___awdiv 1BEC  
                ___ftadd 12E8                  ___awmod 10F8                  ___ftdiv 1F48  
                ___ftneg 1972                  ___lldiv 1C49          __size_of___wmul 0023  
                ___ftmul 1215                  ___llmod 1B43                  ___ftsub 19BD  
                ___fttol 1D88               _fround$663 0043               _fround$664 0040  
             ??___altoft 0052                  _exp$438 00A3                  _exp$669 00A0  
             ??___awtoft 007B               ??___ftpack 0075        __end_of_eval_poly 1D88  
        __size_of_fround 019C               ??___lltoft 007C                  __ptext1 01A0  
                __ptext2 08C8                  __ptext3 197A                  __ptext4 0004  
                __ptext5 10F8                  __ptext6 1BEC                  __ptext7 0805  
                __ptext8 13F1                  __ptext9 1A3F                  _pow$667 00AF  
                _pow$668 00B2               ??_dataCTRL 0070                  _readADC 1A8D  
                _initLCD 19FA              ?__div_to_l_ 0070                  _dpowers 1010  
           __size_of_exp 0185             __size_of_log 00D0                  _isdigit 197A  
           __size_of_pow 0158         ___awmod@dividend 0072                  main@co2 01C9  
                _sprintf 01A0                  main@ppm 0190     end_of_initialization 07FC  
                exp@sign 00A8               ??_instCTRL 0070          ___lldiv@divisor 0070  
                pow@sign 00B5          ___lldiv@counter 007D           __tdiv_to_l_@f1 0070  
         __tdiv_to_l_@f2 0073            ??__tdiv_to_l_ 0076               _printToLCD 1A1C  
            ___ftdiv@exp 0045               main@buffer 0193      __size_of__div_to_l_ 0132  
            ___ftmul@exp 0031           __end_of___bmul 19BD           __end_of___ftge 1BEC  
         __end_of___wmul 1A62           __end_of_fround 01A0               floor@expon 005D  
    start_initialization 07F8               eval_poly@d 0057               eval_poly@n 0058  
             eval_poly@x 0054               ldexp@value 005E      __end_of__tdiv_to_l_ 08C8  
            __end_of_exp 1800              __end_of_log 1215              __end_of_pow 167B  
             frexp@value 0070          ___llmod@divisor 0070          ___llmod@counter 0079  
               ??___bmul 007C                 ??___ftge 0076                 ??___wmul 0074  
          sprintf@vd_146 00AC                 ??_fround 003A              ?_printToLCD 0072  
      __size_of___altoft 0042               fround@prec 0046        __size_of___awtoft 0021  
      __size_of___ftpack 0068        __size_of___lltoft 002B                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK3 0190  
      __size_of_dataCTRL 0011      __end_of__stringdata 10F3              sprintf@_val 00B5  
            sprintf@flag 00B0              sprintf@fval 00BE              sprintf@prec 00BC  
      __size_of_instCTRL 0011                 ?___awdiv 0077                 ?___ftadd 0047  
               ?___awmod 0070                 ?___ftdiv 0037                 ?___ftneg 0070  
               ?___lldiv 0070                 ?___ftmul 0027                 ?___llmod 0070  
               ?___ftsub 0054                __npowers_ 1038                 ?___fttol 0040  
              __pstrings 1000              __tdiv_to_l_ 0805                _ldexp$475 0065  
           ??__div_to_l_ 0076                 ?_readADC 0070                 ?_initLCD 0070  
               ?_isdigit 0070                _eval_poly 1D0F                _scale$665 003C  
               ?_sprintf 005A           __size_of_floor 0099           __size_of_ldexp 0099  
         __size_of_frexp 0040           __size_of_scale 029F           ___wmul@product 0074  
    __size_of_printToLCD 0023              dataCTRL@DAT 0071       __end_of__div_to_l_ 1523  
            __stringbase 100F              __stringdata 10BF        ___wmul@multiplier 0070  
             ?_eval_poly 0054                main@ratio 01CC                frexp@eptr 0073  
       __size_of___awdiv 005D         __size_of___ftadd 0109         __size_of___awmod 004D  
       __size_of___ftdiv 00B8         __size_of___ftneg 0008         __size_of___lldiv 005E  
               ___altoft 1B01         __size_of___ftmul 00D3         __size_of___llmod 004C  
       __size_of___ftsub 001C         __size_of___fttol 008E                 ___awtoft 19D9  
               ___ftpack 1CA7       __end_of__stringtab 1010                 ___lltoft 1A62  
            _isdigit$344 0070                 _dataCTRL 1999               sprintf@exp 00B9  
       __size_of_readADC 0034         __size_of_initLCD 0022         __size_of_isdigit 000E  
               _main$660 01B8                 _main$652 01A3                 _main$653 01C6  
               _main$661 01BB                 _main$662 01BE                 _main$654 01A6  
               _main$655 01A9                 _main$656 01AC                 _main$657 01AF  
               _main$658 01B2                 _main$659 01B5                 __ptext10 1B43  
               __ptext11 1C49                 __ptext20 1E16                 __ptext12 1A8D  
               __ptext21 1AC1                 __ptext13 1A1C                 __ptext30 1F48  
               __ptext22 1D88                 __ptext14 1999                 __ptext31 19D9  
               __ptext23 1B8F                 __ptext15 1523                 __ptext32 1A62  
               __ptext24 1B01                 __ptext16 1145                 __ptext33 1CA7  
               __ptext25 1D0F                 __ptext17 167B                 __ptext34 19FA  
               __ptext26 1215                 __ptext18 1EAF                 __ptext35 1988  
               __ptext27 19AA                 __ptext19 1972                 __ptext28 19BD  
               __ptext29 12E8                 __powers_ 105F         __size_of_sprintf 0658  
               _instCTRL 1988            __size_of_main 0499             ??_printToLCD 0074  
               exp@coeff 1086                 log@coeff 10A4              ??_eval_poly 005A  
               isdigit@c 0071                 scale@scl 003F                sprintf@ap 00A7  
       __tdiv_to_l_@exp1 0025                sprintf@vd 00A8         __tdiv_to_l_@cntr 0024  
              sprintf@sp 00BB         __tdiv_to_l_@quot 0020         ___lldiv@dividend 0074  
     __end_of_printToLCD 1A3F                stringcode 100A             ?__tdiv_to_l_ 0070  
             _OPTION_REG 0081                 sprintf@c 00C1                 sprintf@f 005A  
       ___lldiv@quotient 0079                 stringdir 100A                 stringtab 1000  
