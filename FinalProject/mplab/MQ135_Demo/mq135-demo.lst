

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu May 02 17:30:30 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108                           
   109                           	psect	strings
   110  1000                     __pstrings:	
   111  1000                     stringtab:	
   112  1000                     __stringtab:	
   113                           
   114                           ;	String table - string pointers are 1 byte each
   115  1000  1BFF               	btfsc	btemp+1,7
   116  1001  280A               	ljmp	stringcode
   117  1002  1383               	bcf	3,7
   118  1003  187F               	btfsc	btemp+1,0
   119  1004  1783               	bsf	3,7
   120  1005  0800               	movf	0,w
   121  1006  0A84               	incf	4,f
   122  1007  1903               	skipnz
   123  1008  0AFF               	incf	btemp+1,f
   124  1009  0008               	return
   125  100A                     stringcode:	
   126  100A                     stringdir:	
   127  100A  3010               	movlw	high stringdir
   128  100B  008A               	movwf	10
   129  100C  0804               	movf	4,w
   130  100D  0A84               	incf	4,f
   131  100E  0782               	addwf	2,f
   132  100F                     __stringbase:	
   133  100F  3400               	retlw	0
   134  1010                     __end_of__stringtab:	
   135  1010                     _dpowers:	
   136  1010  3401               	retlw	1
   137  1011  3400               	retlw	0
   138  1012  3400               	retlw	0
   139  1013  3400               	retlw	0
   140  1014  340A               	retlw	10
   141  1015  3400               	retlw	0
   142  1016  3400               	retlw	0
   143  1017  3400               	retlw	0
   144  1018  3464               	retlw	100
   145  1019  3400               	retlw	0
   146  101A  3400               	retlw	0
   147  101B  3400               	retlw	0
   148  101C  34E8               	retlw	232
   149  101D  3403               	retlw	3
   150  101E  3400               	retlw	0
   151  101F  3400               	retlw	0
   152  1020  3410               	retlw	16
   153  1021  3427               	retlw	39
   154  1022  3400               	retlw	0
   155  1023  3400               	retlw	0
   156  1024  34A0               	retlw	160
   157  1025  3486               	retlw	134
   158  1026  3401               	retlw	1
   159  1027  3400               	retlw	0
   160  1028  3440               	retlw	64
   161  1029  3442               	retlw	66
   162  102A  340F               	retlw	15
   163  102B  3400               	retlw	0
   164  102C  3480               	retlw	128
   165  102D  3496               	retlw	150
   166  102E  3498               	retlw	152
   167  102F  3400               	retlw	0
   168  1030  3400               	retlw	0
   169  1031  34E1               	retlw	225
   170  1032  34F5               	retlw	245
   171  1033  3405               	retlw	5
   172  1034  3400               	retlw	0
   173  1035  34CA               	retlw	202
   174  1036  349A               	retlw	154
   175  1037  343B               	retlw	59
   176  1038                     __end_of_dpowers:	
   177  1038                     __npowers_:	
   178  1038  3400               	retlw	0
   179  1039  3480               	retlw	128
   180  103A  343F               	retlw	63
   181  103B  34CD               	retlw	205
   182  103C  34CC               	retlw	204
   183  103D  343D               	retlw	61
   184  103E  34D7               	retlw	215
   185  103F  3423               	retlw	35
   186  1040  343C               	retlw	60
   187  1041  3412               	retlw	18
   188  1042  3483               	retlw	131
   189  1043  343A               	retlw	58
   190  1044  34B7               	retlw	183
   191  1045  34D1               	retlw	209
   192  1046  3438               	retlw	56
   193  1047  34C6               	retlw	198
   194  1048  3427               	retlw	39
   195  1049  3437               	retlw	55
   196  104A  3438               	retlw	56
   197  104B  3486               	retlw	134
   198  104C  3435               	retlw	53
   199  104D  34C0               	retlw	192
   200  104E  34D6               	retlw	214
   201  104F  3433               	retlw	51
   202  1050  34CC               	retlw	204
   203  1051  342B               	retlw	43
   204  1052  3432               	retlw	50
   205  1053  3470               	retlw	112
   206  1054  3489               	retlw	137
   207  1055  3430               	retlw	48
   208  1056  34E7               	retlw	231
   209  1057  34DB               	retlw	219
   210  1058  342E               	retlw	46
   211  1059  34E5               	retlw	229
   212  105A  343C               	retlw	60
   213  105B  341E               	retlw	30
   214  105C  3442               	retlw	66
   215  105D  34A2               	retlw	162
   216  105E  340D               	retlw	13
   217  105F                     __end_of__npowers_:	
   218  105F                     __powers_:	
   219  105F  3400               	retlw	0
   220  1060  3480               	retlw	128
   221  1061  343F               	retlw	63
   222  1062  3400               	retlw	0
   223  1063  3420               	retlw	32
   224  1064  3441               	retlw	65
   225  1065  3400               	retlw	0
   226  1066  34C8               	retlw	200
   227  1067  3442               	retlw	66
   228  1068  3400               	retlw	0
   229  1069  347A               	retlw	122
   230  106A  3444               	retlw	68
   231  106B  3440               	retlw	64
   232  106C  341C               	retlw	28
   233  106D  3446               	retlw	70
   234  106E  3450               	retlw	80
   235  106F  34C3               	retlw	195
   236  1070  3447               	retlw	71
   237  1071  3424               	retlw	36
   238  1072  3474               	retlw	116
   239  1073  3449               	retlw	73
   240  1074  3497               	retlw	151
   241  1075  3418               	retlw	24
   242  1076  344B               	retlw	75
   243  1077  34BC               	retlw	188
   244  1078  34BE               	retlw	190
   245  1079  344C               	retlw	76
   246  107A  346B               	retlw	107
   247  107B  346E               	retlw	110
   248  107C  344E               	retlw	78
   249  107D  3403               	retlw	3
   250  107E  3415               	retlw	21
   251  107F  3450               	retlw	80
   252  1080  3479               	retlw	121
   253  1081  34AD               	retlw	173
   254  1082  3460               	retlw	96
   255  1083  34F3               	retlw	243
   256  1084  3449               	retlw	73
   257  1085  3471               	retlw	113
   258  1086                     __end_of__powers_:	
   259  1086                     exp@coeff:	
   260  1086  3400               	retlw	0
   261  1087  3480               	retlw	128
   262  1088  343F               	retlw	63
   263  1089  3472               	retlw	114
   264  108A  3431               	retlw	49
   265  108B  343F               	retlw	63
   266  108C  34FE               	retlw	254
   267  108D  3475               	retlw	117
   268  108E  343E               	retlw	62
   269  108F  3458               	retlw	88
   270  1090  3463               	retlw	99
   271  1091  343D               	retlw	61
   272  1092  3495               	retlw	149
   273  1093  341D               	retlw	29
   274  1094  343C               	retlw	60
   275  1095  34C5               	retlw	197
   276  1096  34AE               	retlw	174
   277  1097  343A               	retlw	58
   278  1098  3479               	retlw	121
   279  1099  3421               	retlw	33
   280  109A  3439               	retlw	57
   281  109B  3494               	retlw	148
   282  109C  3480               	retlw	128
   283  109D  3437               	retlw	55
   284  109E  3493               	retlw	147
   285  109F  34A7               	retlw	167
   286  10A0  3435               	retlw	53
   287  10A1  3456               	retlw	86
   288  10A2  3415               	retlw	21
   289  10A3  3434               	retlw	52
   290  10A4                     __end_ofexp@coeff:	
   291  10A4                     log@coeff:	
   292  10A4  3400               	retlw	0
   293  10A5  3400               	retlw	0
   294  10A6  3400               	retlw	0
   295  10A7  3400               	retlw	0
   296  10A8  3480               	retlw	128
   297  10A9  343F               	retlw	63
   298  10AA  34F0               	retlw	240
   299  10AB  34FF               	retlw	255
   300  10AC  34BE               	retlw	190
   301  10AD  34E2               	retlw	226
   302  10AE  34A9               	retlw	169
   303  10AF  343E               	retlw	62
   304  10B0  3483               	retlw	131
   305  10B1  3476               	retlw	118
   306  10B2  34BE               	retlw	190
   307  10B3  34AE               	retlw	174
   308  10B4  342B               	retlw	43
   309  10B5  343E               	retlw	62
   310  10B6  343C               	retlw	60
   311  10B7  34C3               	retlw	195
   312  10B8  34BD               	retlw	189
   313  10B9  34D2               	retlw	210
   314  10BA  3413               	retlw	19
   315  10BB  343D               	retlw	61
   316  10BC  3478               	retlw	120
   317  10BD  34D3               	retlw	211
   318  10BE  34BB               	retlw	187
   319  10BF                     __end_oflog@coeff:	
   320  001F                     _ADCON0	set	31
   321  001E                     _ADRESH	set	30
   322  0008                     _PORTD	set	8
   323  005F                     _GIE	set	95
   324  00FA                     _GO	set	250
   325  00FA                     _GO_DONE	set	250
   326  005C                     _INTE	set	92
   327  0059                     _INTF	set	89
   328  005E                     _PEIE	set	94
   329  0035                     _RB5	set	53
   330  0036                     _RB6	set	54
   331  0037                     _RB7	set	55
   332  005D                     _TMR0IE	set	93
   333  005A                     _TMR0IF	set	90
   334  009F                     _ADCON1	set	159
   335  009E                     _ADRESL	set	158
   336  0081                     _OPTION_REG	set	129
   337  0085                     _TRISA	set	133
   338  0086                     _TRISB	set	134
   339  0088                     _TRISD	set	136
   340  040E                     _INTEDG	set	1038
   341  10BF                     __stringdata:	
   342  10BF                     STR_2:	
   343  10BF  3443               	retlw	67	;'C'
   344  10C0  344F               	retlw	79	;'O'
   345  10C1  3432               	retlw	50	;'2'
   346  10C2  3420               	retlw	32	;' '
   347  10C3  346C               	retlw	108	;'l'
   348  10C4  3465               	retlw	101	;'e'
   349  10C5  3476               	retlw	118	;'v'
   350  10C6  3465               	retlw	101	;'e'
   351  10C7  346C               	retlw	108	;'l'
   352  10C8  3473               	retlw	115	;'s'
   353  10C9  3420               	retlw	32	;' '
   354  10CA  3468               	retlw	104	;'h'
   355  10CB  3469               	retlw	105	;'i'
   356  10CC  3467               	retlw	103	;'g'
   357  10CD  3468               	retlw	104	;'h'
   358  10CE  3421               	retlw	33	;'!'
   359  10CF  3420               	retlw	32	;' '
   360  10D0  3400               	retlw	0
   361  10D1                     STR_3:	
   362  10D1  3443               	retlw	67	;'C'
   363  10D2  344F               	retlw	79	;'O'
   364  10D3  3432               	retlw	50	;'2'
   365  10D4  3420               	retlw	32	;' '
   366  10D5  346C               	retlw	108	;'l'
   367  10D6  3465               	retlw	101	;'e'
   368  10D7  3476               	retlw	118	;'v'
   369  10D8  3465               	retlw	101	;'e'
   370  10D9  346C               	retlw	108	;'l'
   371  10DA  3473               	retlw	115	;'s'
   372  10DB  3420               	retlw	32	;' '
   373  10DC  3461               	retlw	97	;'a'
   374  10DD  3472               	retlw	114	;'r'
   375  10DE  3465               	retlw	101	;'e'
   376  10DF  3420               	retlw	32	;' '
   377  10E0  344F               	retlw	79	;'O'
   378  10E1  344B               	retlw	75	;'K'
   379  10E2  3400               	retlw	0
   380  10E3                     STR_1:	
   381  10E3  3443               	retlw	67	;'C'
   382  10E4  344F               	retlw	79	;'O'
   383  10E5  3432               	retlw	50	;'2'
   384  10E6  343A               	retlw	58	;':'
   385  10E7  3420               	retlw	32	;' '
   386  10E8  3425               	retlw	37	;'%'
   387  10E9  342E               	retlw	46	;'.'
   388  10EA  3432               	retlw	50	;'2'
   389  10EB  3466               	retlw	102	;'f'
   390  10EC  3420               	retlw	32	;' '
   391  10ED  3470               	retlw	112	;'p'
   392  10EE  3470               	retlw	112	;'p'
   393  10EF  346D               	retlw	109	;'m'
   394  10F0  3420               	retlw	32	;' '
   395  10F1  3420               	retlw	32	;' '
   396  10F2  3400               	retlw	0
   397  10F3                     __end_of__stringdata:	
   398                           
   399                           ; #config settings
   400  0000                     
   401                           	psect	cinit
   402  07F8                     start_initialization:	
   403  07F8                     __initialization:	
   404                           
   405                           ; Clear objects allocated to BANK1
   406  07F8  1683               	bsf	3,5	;RP0=1, select bank1
   407  07F9  1303               	bcf	3,6	;RP1=0, select bank1
   408  07FA  01C2               	clrf	__pbssBANK1& (0+127)
   409  07FB  01C3               	clrf	(__pbssBANK1+1)& (0+127)
   410  07FC                     end_of_initialization:	
   411                           ;End of C runtime variable initialization code
   412                           
   413  07FC                     __end_of__initialization:	
   414  07FC  0183               	clrf	3
   415  07FD  120A  158A  2B6D   	ljmp	_main	;jump to C main() function
   416                           
   417                           	psect	bssBANK1
   418  00C2                     __pbssBANK1:	
   419  00C2                     _errno:	
   420  00C2                     	ds	2
   421                           
   422                           	psect	cstackBANK3
   423  0190                     __pcstackBANK3:	
   424  0190                     main@ppm:	
   425                           
   426                           ; 3 bytes @ 0x0
   427  0190                     	ds	3
   428  0193                     main@buffer:	
   429                           
   430                           ; 16 bytes @ 0x3
   431  0193                     	ds	16
   432  01A3                     _main$652:	
   433                           
   434                           ; 3 bytes @ 0x13
   435  01A3                     	ds	3
   436  01A6                     _main$654:	
   437                           
   438                           ; 3 bytes @ 0x16
   439  01A6                     	ds	3
   440  01A9                     _main$655:	
   441                           
   442                           ; 3 bytes @ 0x19
   443  01A9                     	ds	3
   444  01AC                     _main$656:	
   445                           
   446                           ; 3 bytes @ 0x1C
   447  01AC                     	ds	3
   448  01AF                     _main$657:	
   449                           
   450                           ; 3 bytes @ 0x1F
   451  01AF                     	ds	3
   452  01B2                     _main$658:	
   453                           
   454                           ; 3 bytes @ 0x22
   455  01B2                     	ds	3
   456  01B5                     _main$659:	
   457                           
   458                           ; 3 bytes @ 0x25
   459  01B5                     	ds	3
   460  01B8                     _main$660:	
   461                           
   462                           ; 3 bytes @ 0x28
   463  01B8                     	ds	3
   464  01BB                     _main$661:	
   465                           
   466                           ; 3 bytes @ 0x2B
   467  01BB                     	ds	3
   468  01BE                     _main$662:	
   469                           
   470                           ; 3 bytes @ 0x2E
   471  01BE                     	ds	3
   472  01C1                     main@adcValue:	
   473                           
   474                           ; 2 bytes @ 0x31
   475  01C1                     	ds	2
   476  01C3                     main@voltage:	
   477                           
   478                           ; 3 bytes @ 0x33
   479  01C3                     	ds	3
   480  01C6                     _main$653:	
   481                           
   482                           ; 3 bytes @ 0x36
   483  01C6                     	ds	3
   484  01C9                     main@co2:	
   485                           
   486                           ; 3 bytes @ 0x39
   487  01C9                     	ds	3
   488  01CC                     main@ratio:	
   489                           
   490                           ; 3 bytes @ 0x3C
   491  01CC                     	ds	3
   492                           
   493                           	psect	cstackBANK1
   494  00A0                     __pcstackBANK1:	
   495  00A0                     _sprintf$666:	
   496  00A0                     _exp$669:	
   497                           ; 3 bytes @ 0x0
   498                           
   499                           
   500                           ; 3 bytes @ 0x0
   501  00A0                     	ds	3
   502  00A3                     _exp$438:	
   503  00A3                     _sprintf$144:	
   504                           ; 3 bytes @ 0x3
   505                           
   506                           
   507                           ; 4 bytes @ 0x3
   508  00A3                     	ds	3
   509  00A6                     exp@exponent:	
   510                           
   511                           ; 2 bytes @ 0x6
   512  00A6                     	ds	1
   513  00A7                     sprintf@ap:	
   514                           
   515                           ; 1 bytes @ 0x7
   516  00A7                     	ds	1
   517  00A8                     exp@sign:	
   518  00A8                     sprintf@vd:	
   519                           ; 1 bytes @ 0x8
   520                           
   521                           
   522                           ; 4 bytes @ 0x8
   523  00A8                     	ds	1
   524  00A9                     ?_pow:	
   525  00A9                     pow@x:	
   526                           ; 3 bytes @ 0x9
   527                           
   528                           
   529                           ; 3 bytes @ 0x9
   530  00A9                     	ds	3
   531  00AC                     pow@y:	
   532  00AC                     sprintf@vd_146:	
   533                           ; 3 bytes @ 0xC
   534                           
   535                           
   536                           ; 4 bytes @ 0xC
   537  00AC                     	ds	3
   538  00AF                     _pow$667:	
   539                           
   540                           ; 3 bytes @ 0xF
   541  00AF                     	ds	1
   542  00B0                     sprintf@flag:	
   543                           
   544                           ; 2 bytes @ 0x10
   545  00B0                     	ds	2
   546  00B2                     sprintf@integ:	
   547  00B2                     _pow$668:	
   548                           ; 3 bytes @ 0x12
   549                           
   550                           
   551                           ; 3 bytes @ 0x12
   552  00B2                     	ds	3
   553  00B5                     pow@sign:	
   554  00B5                     sprintf@_val:	
   555                           ; 1 bytes @ 0x15
   556                           
   557                           
   558                           ; 4 bytes @ 0x15
   559  00B5                     	ds	1
   560  00B6                     pow@yi:	
   561                           
   562                           ; 4 bytes @ 0x16
   563  00B6                     	ds	3
   564  00B9                     sprintf@exp:	
   565                           
   566                           ; 2 bytes @ 0x19
   567  00B9                     	ds	2
   568  00BB                     sprintf@sp:	
   569                           
   570                           ; 1 bytes @ 0x1B
   571  00BB                     	ds	1
   572  00BC                     sprintf@prec:	
   573                           
   574                           ; 2 bytes @ 0x1C
   575  00BC                     	ds	2
   576  00BE                     sprintf@fval:	
   577                           
   578                           ; 3 bytes @ 0x1E
   579  00BE                     	ds	3
   580  00C1                     sprintf@c:	
   581                           
   582                           ; 1 bytes @ 0x21
   583  00C1                     	ds	1
   584                           
   585                           	psect	cstackCOMMON
   586  0070                     __pcstackCOMMON:	
   587  0070                     ?_isdigit:	
   588  0070                     ??_isdigit:	
   589                           ; 1 bit 
   590                           
   591  0070                     ?_instCTRL:	
   592                           ; 0 bytes @ 0x0
   593                           
   594  0070                     ??_instCTRL:	
   595                           ; 0 bytes @ 0x0
   596                           
   597  0070                     ?_dataCTRL:	
   598                           ; 0 bytes @ 0x0
   599                           
   600  0070                     ??_dataCTRL:	
   601                           ; 0 bytes @ 0x0
   602                           
   603  0070                     ?_initLCD:	
   604                           ; 0 bytes @ 0x0
   605                           
   606  0070                     ?_main:	
   607                           ; 0 bytes @ 0x0
   608                           
   609  0070                     ?___ftge:	
   610                           ; 0 bytes @ 0x0
   611                           
   612  0070                     ?_readADC:	
   613                           ; 1 bit 
   614                           
   615  0070                     ?___wmul:	
   616                           ; 2 bytes @ 0x0
   617                           
   618  0070                     ?___awmod:	
   619                           ; 2 bytes @ 0x0
   620                           
   621  0070                     ?___ftpack:	
   622                           ; 2 bytes @ 0x0
   623                           
   624  0070                     ?_frexp:	
   625                           ; 3 bytes @ 0x0
   626                           
   627  0070                     ?___ftneg:	
   628                           ; 3 bytes @ 0x0
   629                           
   630  0070                     ?__tdiv_to_l_:	
   631                           ; 3 bytes @ 0x0
   632                           
   633  0070                     ?__div_to_l_:	
   634                           ; 4 bytes @ 0x0
   635                           
   636  0070                     ?___lldiv:	
   637                           ; 4 bytes @ 0x0
   638                           
   639  0070                     ?___llmod:	
   640                           ; 4 bytes @ 0x0
   641                           
   642  0070                     _isdigit$344:	
   643                           ; 4 bytes @ 0x0
   644                           
   645  0070                     ___wmul@multiplier:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ___awmod@divisor:	
   649                           ; 2 bytes @ 0x0
   650                           
   651  0070                     __div_to_l_@f1:	
   652                           ; 2 bytes @ 0x0
   653                           
   654  0070                     ___ftpack@arg:	
   655                           ; 3 bytes @ 0x0
   656                           
   657  0070                     __tdiv_to_l_@f1:	
   658                           ; 3 bytes @ 0x0
   659                           
   660  0070                     ___ftge@ff1:	
   661                           ; 3 bytes @ 0x0
   662                           
   663  0070                     ___ftneg@f1:	
   664                           ; 3 bytes @ 0x0
   665                           
   666  0070                     frexp@value:	
   667                           ; 3 bytes @ 0x0
   668                           
   669  0070                     ___lldiv@divisor:	
   670                           ; 3 bytes @ 0x0
   671                           
   672  0070                     ___llmod@divisor:	
   673                           ; 4 bytes @ 0x0
   674                           
   675                           
   676                           ; 4 bytes @ 0x0
   677  0070                     	ds	1
   678  0071                     instCTRL@CMD:	
   679  0071                     dataCTRL@DAT:	
   680                           ; 1 bytes @ 0x1
   681                           
   682  0071                     isdigit@c:	
   683                           ; 1 bytes @ 0x1
   684                           
   685                           
   686                           ; 1 bytes @ 0x1
   687  0071                     	ds	1
   688  0072                     ??_readADC:	
   689  0072                     ??_initLCD:	
   690                           ; 0 bytes @ 0x2
   691                           
   692  0072                     ?_printToLCD:	
   693                           ; 0 bytes @ 0x2
   694                           
   695  0072                     printToLCD@STR:	
   696                           ; 0 bytes @ 0x2
   697                           
   698  0072                     ___wmul@multiplicand:	
   699                           ; 2 bytes @ 0x2
   700                           
   701  0072                     ___awmod@dividend:	
   702                           ; 2 bytes @ 0x2
   703                           
   704                           
   705                           ; 2 bytes @ 0x2
   706  0072                     	ds	1
   707  0073                     ??___ftneg:	
   708  0073                     ___ftpack@exp:	
   709                           ; 0 bytes @ 0x3
   710                           
   711  0073                     frexp@eptr:	
   712                           ; 1 bytes @ 0x3
   713                           
   714  0073                     __div_to_l_@f2:	
   715                           ; 1 bytes @ 0x3
   716                           
   717  0073                     __tdiv_to_l_@f2:	
   718                           ; 3 bytes @ 0x3
   719                           
   720  0073                     ___ftge@ff2:	
   721                           ; 3 bytes @ 0x3
   722                           
   723                           
   724                           ; 3 bytes @ 0x3
   725  0073                     	ds	1
   726  0074                     ??_frexp:	
   727  0074                     ??_printToLCD:	
   728                           ; 0 bytes @ 0x4
   729                           
   730  0074                     ??___wmul:	
   731                           ; 0 bytes @ 0x4
   732                           
   733  0074                     ??___awmod:	
   734                           ; 0 bytes @ 0x4
   735                           
   736  0074                     ___ftpack@sign:	
   737                           ; 0 bytes @ 0x4
   738                           
   739  0074                     readADC@temp:	
   740                           ; 1 bytes @ 0x4
   741                           
   742  0074                     ___wmul@product:	
   743                           ; 2 bytes @ 0x4
   744                           
   745  0074                     ___lldiv@dividend:	
   746                           ; 2 bytes @ 0x4
   747                           
   748  0074                     ___llmod@dividend:	
   749                           ; 4 bytes @ 0x4
   750                           
   751                           
   752                           ; 4 bytes @ 0x4
   753  0074                     	ds	1
   754  0075                     ??___ftpack:	
   755  0075                     ___awmod@counter:	
   756                           ; 0 bytes @ 0x5
   757                           
   758                           
   759                           ; 1 bytes @ 0x5
   760  0075                     	ds	1
   761  0076                     ??__tdiv_to_l_:	
   762  0076                     ??__div_to_l_:	
   763                           ; 0 bytes @ 0x6
   764                           
   765  0076                     ??___ftge:	
   766                           ; 0 bytes @ 0x6
   767                           
   768  0076                     ___awmod@sign:	
   769                           ; 0 bytes @ 0x6
   770                           
   771                           
   772                           ; 1 bytes @ 0x6
   773  0076                     	ds	1
   774  0077                     ?___awdiv:	
   775  0077                     ___awdiv@divisor:	
   776                           ; 2 bytes @ 0x7
   777                           
   778                           
   779                           ; 2 bytes @ 0x7
   780  0077                     	ds	1
   781  0078                     ??___lldiv:	
   782  0078                     ??___llmod:	
   783                           ; 0 bytes @ 0x8
   784                           
   785  0078                     ?___awtoft:	
   786                           ; 0 bytes @ 0x8
   787                           
   788  0078                     ?___lltoft:	
   789                           ; 3 bytes @ 0x8
   790                           
   791  0078                     ___awtoft@c:	
   792                           ; 3 bytes @ 0x8
   793                           
   794  0078                     ___lltoft@c:	
   795                           ; 2 bytes @ 0x8
   796                           
   797                           
   798                           ; 4 bytes @ 0x8
   799  0078                     	ds	1
   800  0079                     ___llmod@counter:	
   801  0079                     ___awdiv@dividend:	
   802                           ; 1 bytes @ 0x9
   803                           
   804  0079                     ___lldiv@quotient:	
   805                           ; 2 bytes @ 0x9
   806                           
   807                           
   808                           ; 4 bytes @ 0x9
   809  0079                     	ds	2
   810  007B                     ??___awdiv:	
   811  007B                     ??___awtoft:	
   812                           ; 0 bytes @ 0xB
   813                           
   814                           
   815                           ; 0 bytes @ 0xB
   816  007B                     	ds	1
   817  007C                     ??___bmul:	
   818  007C                     ??___lltoft:	
   819                           ; 0 bytes @ 0xC
   820                           
   821                           
   822                           ; 0 bytes @ 0xC
   823  007C                     	ds	1
   824  007D                     ___awtoft@sign:	
   825  007D                     ___lldiv@counter:	
   826                           ; 1 bytes @ 0xD
   827                           
   828  007D                     ___lltoft@exp:	
   829                           ; 1 bytes @ 0xD
   830                           
   831                           
   832                           ; 1 bytes @ 0xD
   833  007D                     	ds	1
   834  007E                     ??___ftsub:	
   835                           
   836                           	psect	cstackBANK0
   837  0020                     __pcstackBANK0:	
   838                           ; 0 bytes @ 0xE
   839                           
   840  0020                     ___awdiv@counter:	
   841  0020                     __div_to_l_@quot:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0020                     __tdiv_to_l_@quot:	
   845                           ; 4 bytes @ 0x0
   846                           
   847                           
   848                           ; 4 bytes @ 0x0
   849  0020                     	ds	1
   850  0021                     ___awdiv@sign:	
   851                           
   852                           ; 1 bytes @ 0x1
   853  0021                     	ds	1
   854  0022                     ___awdiv@quotient:	
   855                           
   856                           ; 2 bytes @ 0x2
   857  0022                     	ds	2
   858  0024                     ?___bmul:	
   859  0024                     ___bmul@multiplicand:	
   860                           ; 1 bytes @ 0x4
   861                           
   862  0024                     __div_to_l_@cntr:	
   863                           ; 1 bytes @ 0x4
   864                           
   865  0024                     __tdiv_to_l_@cntr:	
   866                           ; 1 bytes @ 0x4
   867                           
   868                           
   869                           ; 1 bytes @ 0x4
   870  0024                     	ds	1
   871  0025                     ___bmul@product:	
   872  0025                     __div_to_l_@exp1:	
   873                           ; 1 bytes @ 0x5
   874                           
   875  0025                     __tdiv_to_l_@exp1:	
   876                           ; 1 bytes @ 0x5
   877                           
   878                           
   879                           ; 1 bytes @ 0x5
   880  0025                     	ds	1
   881  0026                     ___bmul@multiplier:	
   882                           
   883                           ; 1 bytes @ 0x6
   884  0026                     	ds	1
   885  0027                     ?___ftmul:	
   886  0027                     ___ftmul@f1:	
   887                           ; 3 bytes @ 0x7
   888                           
   889                           
   890                           ; 3 bytes @ 0x7
   891  0027                     	ds	3
   892  002A                     ___ftmul@f2:	
   893                           
   894                           ; 3 bytes @ 0xA
   895  002A                     	ds	3
   896  002D                     ??___ftmul:	
   897                           
   898                           ; 0 bytes @ 0xD
   899  002D                     	ds	4
   900  0031                     ___ftmul@exp:	
   901                           
   902                           ; 1 bytes @ 0x11
   903  0031                     	ds	1
   904  0032                     ___ftmul@f3_as_product:	
   905                           
   906                           ; 3 bytes @ 0x12
   907  0032                     	ds	3
   908  0035                     ___ftmul@cntr:	
   909                           
   910                           ; 1 bytes @ 0x15
   911  0035                     	ds	1
   912  0036                     ___ftmul@sign:	
   913                           
   914                           ; 1 bytes @ 0x16
   915  0036                     	ds	1
   916  0037                     ?_fround:	
   917  0037                     ?_scale:	
   918                           ; 3 bytes @ 0x17
   919                           
   920  0037                     ?___ftdiv:	
   921                           ; 3 bytes @ 0x17
   922                           
   923  0037                     ___ftdiv@f2:	
   924                           ; 3 bytes @ 0x17
   925                           
   926                           
   927                           ; 3 bytes @ 0x17
   928  0037                     	ds	3
   929  003A                     ??_fround:	
   930  003A                     ??_scale:	
   931                           ; 0 bytes @ 0x1A
   932                           
   933  003A                     ___ftdiv@f1:	
   934                           ; 0 bytes @ 0x1A
   935                           
   936                           
   937                           ; 3 bytes @ 0x1A
   938  003A                     	ds	2
   939  003C                     _scale$665:	
   940                           
   941                           ; 3 bytes @ 0x1C
   942  003C                     	ds	1
   943  003D                     ??___ftdiv:	
   944                           
   945                           ; 0 bytes @ 0x1D
   946  003D                     	ds	2
   947  003F                     scale@scl:	
   948                           
   949                           ; 1 bytes @ 0x1F
   950  003F                     	ds	1
   951  0040                     ?___fttol:	
   952  0040                     ___fttol@f1:	
   953                           ; 4 bytes @ 0x20
   954                           
   955  0040                     _fround$664:	
   956                           ; 3 bytes @ 0x20
   957                           
   958                           
   959                           ; 3 bytes @ 0x20
   960  0040                     	ds	1
   961  0041                     ___ftdiv@cntr:	
   962                           
   963                           ; 1 bytes @ 0x21
   964  0041                     	ds	1
   965  0042                     ___ftdiv@f3:	
   966                           
   967                           ; 3 bytes @ 0x22
   968  0042                     	ds	1
   969  0043                     _fround$663:	
   970                           
   971                           ; 3 bytes @ 0x23
   972  0043                     	ds	1
   973  0044                     ??___fttol:	
   974                           
   975                           ; 0 bytes @ 0x24
   976  0044                     	ds	1
   977  0045                     ___ftdiv@exp:	
   978                           
   979                           ; 1 bytes @ 0x25
   980  0045                     	ds	1
   981  0046                     fround@prec:	
   982  0046                     ___ftdiv@sign:	
   983                           ; 1 bytes @ 0x26
   984                           
   985                           
   986                           ; 1 bytes @ 0x26
   987  0046                     	ds	1
   988  0047                     ?___ftadd:	
   989  0047                     ___ftadd@f1:	
   990                           ; 3 bytes @ 0x27
   991                           
   992                           
   993                           ; 3 bytes @ 0x27
   994  0047                     	ds	1
   995  0048                     ___fttol@sign1:	
   996                           
   997                           ; 1 bytes @ 0x28
   998  0048                     	ds	1
   999  0049                     ___fttol@lval:	
  1000                           
  1001                           ; 4 bytes @ 0x29
  1002  0049                     	ds	1
  1003  004A                     ___ftadd@f2:	
  1004                           
  1005                           ; 3 bytes @ 0x2A
  1006  004A                     	ds	3
  1007  004D                     ??___ftadd:	
  1008  004D                     ___fttol@exp1:	
  1009                           ; 0 bytes @ 0x2D
  1010                           
  1011                           
  1012                           ; 1 bytes @ 0x2D
  1013  004D                     	ds	1
  1014  004E                     ?___altoft:	
  1015  004E                     ___altoft@c:	
  1016                           ; 3 bytes @ 0x2E
  1017                           
  1018                           
  1019                           ; 4 bytes @ 0x2E
  1020  004E                     	ds	3
  1021  0051                     ___ftadd@sign:	
  1022                           
  1023                           ; 1 bytes @ 0x31
  1024  0051                     	ds	1
  1025  0052                     ??___altoft:	
  1026  0052                     ___ftadd@exp2:	
  1027                           ; 0 bytes @ 0x32
  1028                           
  1029                           
  1030                           ; 1 bytes @ 0x32
  1031  0052                     	ds	1
  1032  0053                     ___ftadd@exp1:	
  1033                           
  1034                           ; 1 bytes @ 0x33
  1035  0053                     	ds	1
  1036  0054                     ?_eval_poly:	
  1037  0054                     ?___ftsub:	
  1038                           ; 3 bytes @ 0x34
  1039                           
  1040  0054                     ___altoft@exp:	
  1041                           ; 3 bytes @ 0x34
  1042                           
  1043  0054                     ___ftsub@f2:	
  1044                           ; 1 bytes @ 0x34
  1045                           
  1046  0054                     eval_poly@x:	
  1047                           ; 3 bytes @ 0x34
  1048                           
  1049                           
  1050                           ; 3 bytes @ 0x34
  1051  0054                     	ds	1
  1052  0055                     ___altoft@sign:	
  1053                           
  1054                           ; 1 bytes @ 0x35
  1055  0055                     	ds	1
  1056  0056                     ?_floor:	
  1057  0056                     floor@x:	
  1058                           ; 3 bytes @ 0x36
  1059                           
  1060                           
  1061                           ; 3 bytes @ 0x36
  1062  0056                     	ds	1
  1063  0057                     eval_poly@d:	
  1064  0057                     ___ftsub@f1:	
  1065                           ; 1 bytes @ 0x37
  1066                           
  1067                           
  1068                           ; 3 bytes @ 0x37
  1069  0057                     	ds	1
  1070  0058                     eval_poly@n:	
  1071                           
  1072                           ; 2 bytes @ 0x38
  1073  0058                     	ds	1
  1074  0059                     ??_floor:	
  1075                           
  1076                           ; 0 bytes @ 0x39
  1077  0059                     	ds	1
  1078  005A                     ??_eval_poly:	
  1079  005A                     ?_sprintf:	
  1080                           ; 0 bytes @ 0x3A
  1081                           
  1082  005A                     sprintf@f:	
  1083                           ; 2 bytes @ 0x3A
  1084                           
  1085  005A                     floor@i:	
  1086                           ; 1 bytes @ 0x3A
  1087                           
  1088                           
  1089                           ; 3 bytes @ 0x3A
  1090  005A                     	ds	1
  1091  005B                     eval_poly@res:	
  1092                           
  1093                           ; 3 bytes @ 0x3B
  1094  005B                     	ds	2
  1095  005D                     floor@expon:	
  1096                           
  1097                           ; 2 bytes @ 0x3D
  1098  005D                     	ds	1
  1099  005E                     ??_sprintf:	
  1100  005E                     ?_log:	
  1101                           ; 0 bytes @ 0x3E
  1102                           
  1103  005E                     ?_ldexp:	
  1104                           ; 3 bytes @ 0x3E
  1105                           
  1106  005E                     ldexp@value:	
  1107                           ; 3 bytes @ 0x3E
  1108                           
  1109  005E                     log@x:	
  1110                           ; 3 bytes @ 0x3E
  1111                           
  1112                           
  1113                           ; 3 bytes @ 0x3E
  1114  005E                     	ds	3
  1115  0061                     ??_log:	
  1116  0061                     ldexp@newexp:	
  1117                           ; 0 bytes @ 0x41
  1118                           
  1119                           
  1120                           ; 2 bytes @ 0x41
  1121  0061                     	ds	1
  1122  0062                     log@exponent:	
  1123                           
  1124                           ; 2 bytes @ 0x42
  1125  0062                     	ds	1
  1126  0063                     ??_ldexp:	
  1127                           
  1128                           ; 0 bytes @ 0x43
  1129  0063                     	ds	2
  1130  0065                     _ldexp$475:	
  1131                           
  1132                           ; 3 bytes @ 0x45
  1133  0065                     	ds	3
  1134  0068                     ?_exp:	
  1135  0068                     exp@x:	
  1136                           ; 3 bytes @ 0x48
  1137                           
  1138                           
  1139                           ; 3 bytes @ 0x48
  1140  0068                     	ds	3
  1141  006B                     ??_exp:	
  1142                           
  1143                           ; 0 bytes @ 0x4B
  1144  006B                     	ds	1
  1145  006C                     ??_pow:	
  1146                           
  1147                           ; 0 bytes @ 0x4C
  1148  006C                     	ds	1
  1149  006D                     ??_main:	
  1150                           
  1151                           ; 0 bytes @ 0x4D
  1152  006D                     	ds	2
  1153                           
  1154                           	psect	maintext
  1155  0B6D                     __pmaintext:	
  1156 ;;
  1157 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1158 ;;
  1159 ;; *************** function _main *****************
  1160 ;; Defined at:
  1161 ;;		line 35 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\main.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;		None
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  buffer         16    3[BANK3 ] unsigned char [16]
  1166 ;;  ratio           3   60[BANK3 ] float 
  1167 ;;  co2             3   57[BANK3 ] float 
  1168 ;;  voltage         3   51[BANK3 ] float 
  1169 ;;  ppm             3    0[BANK3 ] float 
  1170 ;;  adcValue        2   49[BANK3 ] int 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;		None               void
  1173 ;; Registers used:
  1174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 17F/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       0       0       0       0
  1181 ;;      Locals:         0       0       0      63       0
  1182 ;;      Temps:          0       2       0       0       0
  1183 ;;      Totals:         0       2       0      63       0
  1184 ;;Total ram usage:       65 bytes
  1185 ;; Hardware stack levels required when called:    5
  1186 ;; This function calls:
  1187 ;;		___awtoft
  1188 ;;		___ftadd
  1189 ;;		___ftdiv
  1190 ;;		___ftge
  1191 ;;		___ftmul
  1192 ;;		_initLCD
  1193 ;;		_instCTRL
  1194 ;;		_pow
  1195 ;;		_printToLCD
  1196 ;;		_readADC
  1197 ;;		_sprintf
  1198 ;; This function is called by:
  1199 ;;		Startup code after reset
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           
  1204                           ;psect for function _main
  1205  0B6D                     _main:	
  1206                           
  1207                           ;main.c: 37: TRISB = 0x00;
  1208                           
  1209                           ;incstack = 0
  1210                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1211  0B6D  1683               	bsf	3,5	;RP0=1, select bank1
  1212  0B6E  1303               	bcf	3,6	;RP1=0, select bank1
  1213  0B6F  0186               	clrf	6	;volatile
  1214                           
  1215                           ;main.c: 38: TRISA = 0xFF;
  1216  0B70  30FF               	movlw	255
  1217  0B71  0085               	movwf	5	;volatile
  1218                           
  1219                           ;main.c: 39: TRISD = 0x00;
  1220  0B72  0188               	clrf	8	;volatile
  1221                           
  1222                           ;main.c: 40: ADCON1 = 0x80;
  1223  0B73  3080               	movlw	128
  1224  0B74  009F               	movwf	31	;volatile
  1225                           
  1226                           ;main.c: 41: ADCON0 = 0x01;
  1227  0B75  3001               	movlw	1
  1228  0B76  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0B77  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0B78  009F               	movwf	31	;volatile
  1231                           
  1232                           ;main.c: 43: OPTION_REG = 0x44;
  1233  0B79  3044               	movlw	68
  1234  0B7A  1683               	bsf	3,5	;RP0=1, select bank1
  1235  0B7B  1303               	bcf	3,6	;RP1=0, select bank1
  1236  0B7C  0081               	movwf	1	;volatile
  1237                           
  1238                           ;main.c: 44: TMR0IE = 1;
  1239  0B7D  168B               	bsf	11,5	;volatile
  1240                           
  1241                           ;main.c: 45: TMR0IF = 0;
  1242  0B7E  110B               	bcf	11,2	;volatile
  1243                           
  1244                           ;main.c: 46: INTE = 1;
  1245  0B7F  160B               	bsf	11,4	;volatile
  1246                           
  1247                           ;main.c: 47: INTF = 0;
  1248  0B80  108B               	bcf	11,1	;volatile
  1249                           
  1250                           ;main.c: 48: INTEDG = 1;
  1251  0B81  1701               	bsf	1,6	;volatile
  1252                           
  1253                           ;main.c: 49: PEIE = 1;
  1254  0B82  170B               	bsf	11,6	;volatile
  1255                           
  1256                           ;main.c: 50: GIE = 1;
  1257  0B83  178B               	bsf	11,7	;volatile
  1258                           
  1259                           ;main.c: 52: initLCD();
  1260  0B84  160A  158A  21FA  120A  158A  	fcall	_initLCD
  1261  0B89                     l3124:	
  1262                           ;main.c: 54: for (;;)
  1263                           
  1264                           
  1265                           ;main.c: 55: {
  1266                           ;main.c: 56: instCTRL(0x80);
  1267  0B89  3080               	movlw	128
  1268  0B8A  160A  158A  2188  120A  158A  	fcall	_instCTRL
  1269                           
  1270                           ;main.c: 57: int adcValue = readADC();
  1271  0B8F  160A  158A  228D  120A  158A  	fcall	_readADC
  1272  0B94  0871               	movf	?_readADC+1,w
  1273  0B95  1683               	bsf	3,5	;RP0=1, select bank3
  1274  0B96  1703               	bsf	3,6	;RP1=1, select bank3
  1275  0B97  01C2               	clrf	(main@adcValue+1)^(0+384)
  1276  0B98  07C2               	addwf	(main@adcValue+1)^(0+384),f
  1277  0B99  0870               	movf	?_readADC,w
  1278  0B9A  01C1               	clrf	main@adcValue^(0+384)
  1279  0B9B  07C1               	addwf	main@adcValue^(0+384),f
  1280                           
  1281                           ;main.c: 58: float voltage = (adcValue * 5.0) / 1023.0;
  1282  0B9C  30C0               	movlw	192
  1283  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0B9F  00B7               	movwf	___ftdiv@f2
  1286  0BA0  307F               	movlw	127
  1287  0BA1  00B8               	movwf	___ftdiv@f2+1
  1288  0BA2  3044               	movlw	68
  1289  0BA3  00B9               	movwf	___ftdiv@f2+2
  1290  0BA4  3000               	movlw	0
  1291  0BA5  00A7               	movwf	___ftmul@f1
  1292  0BA6  30A0               	movlw	160
  1293  0BA7  00A8               	movwf	___ftmul@f1+1
  1294  0BA8  3040               	movlw	64
  1295  0BA9  00A9               	movwf	___ftmul@f1+2
  1296  0BAA  1683               	bsf	3,5	;RP0=1, select bank3
  1297  0BAB  1703               	bsf	3,6	;RP1=1, select bank3
  1298  0BAC  0842               	movf	(main@adcValue+1)^(0+384),w
  1299  0BAD  01F9               	clrf	___awtoft@c+1
  1300  0BAE  07F9               	addwf	___awtoft@c+1,f
  1301  0BAF  0841               	movf	main@adcValue^(0+384),w
  1302  0BB0  01F8               	clrf	___awtoft@c
  1303  0BB1  07F8               	addwf	___awtoft@c,f
  1304  0BB2  160A  158A  21D9  120A  158A  	fcall	___awtoft
  1305  0BB7  0878               	movf	?___awtoft,w
  1306  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  1307  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  1308  0BBA  00AA               	movwf	___ftmul@f2
  1309  0BBB  0879               	movf	?___awtoft+1,w
  1310  0BBC  00AB               	movwf	___ftmul@f2+1
  1311  0BBD  087A               	movf	?___awtoft+2,w
  1312  0BBE  00AC               	movwf	___ftmul@f2+2
  1313  0BBF  160A  118A  2215  120A  158A  	fcall	___ftmul
  1314  0BC4  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0BC5  1303               	bcf	3,6	;RP1=0, select bank0
  1316  0BC6  0827               	movf	?___ftmul,w
  1317  0BC7  00BA               	movwf	___ftdiv@f1
  1318  0BC8  0828               	movf	?___ftmul+1,w
  1319  0BC9  00BB               	movwf	___ftdiv@f1+1
  1320  0BCA  0829               	movf	?___ftmul+2,w
  1321  0BCB  00BC               	movwf	___ftdiv@f1+2
  1322  0BCC  160A  158A  2748  120A  158A  	fcall	___ftdiv
  1323  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0BD3  0837               	movf	?___ftdiv,w
  1326  0BD4  1683               	bsf	3,5	;RP0=1, select bank3
  1327  0BD5  1703               	bsf	3,6	;RP1=1, select bank3
  1328  0BD6  00C3               	movwf	main@voltage^(0+384)
  1329  0BD7  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0BD8  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0BD9  0838               	movf	?___ftdiv+1,w
  1332  0BDA  1683               	bsf	3,5	;RP0=1, select bank3
  1333  0BDB  1703               	bsf	3,6	;RP1=1, select bank3
  1334  0BDC  00C4               	movwf	(main@voltage+1)^(0+384)
  1335  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0BDF  0839               	movf	?___ftdiv+2,w
  1338  0BE0  1683               	bsf	3,5	;RP0=1, select bank3
  1339  0BE1  1703               	bsf	3,6	;RP1=1, select bank3
  1340  0BE2  00C5               	movwf	(main@voltage+2)^(0+384)
  1341                           
  1342                           ;main.c: 59: float ppm = 116.6020682 * pow((voltage / 2.0), -2.769034857);
  1343  0BE3  3000               	movlw	0
  1344  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0BE6  00B7               	movwf	___ftdiv@f2
  1347  0BE7  3000               	movlw	0
  1348  0BE8  00B8               	movwf	___ftdiv@f2+1
  1349  0BE9  3040               	movlw	64
  1350  0BEA  00B9               	movwf	___ftdiv@f2+2
  1351  0BEB  1683               	bsf	3,5	;RP0=1, select bank3
  1352  0BEC  1703               	bsf	3,6	;RP1=1, select bank3
  1353  0BED  0843               	movf	main@voltage^(0+384),w
  1354  0BEE  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0BEF  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0BF0  00BA               	movwf	___ftdiv@f1
  1357  0BF1  1683               	bsf	3,5	;RP0=1, select bank3
  1358  0BF2  1703               	bsf	3,6	;RP1=1, select bank3
  1359  0BF3  0844               	movf	(main@voltage+1)^(0+384),w
  1360  0BF4  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0BF5  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0BF6  00BB               	movwf	___ftdiv@f1+1
  1363  0BF7  1683               	bsf	3,5	;RP0=1, select bank3
  1364  0BF8  1703               	bsf	3,6	;RP1=1, select bank3
  1365  0BF9  0845               	movf	(main@voltage+2)^(0+384),w
  1366  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0BFC  00BC               	movwf	___ftdiv@f1+2
  1369  0BFD  160A  158A  2748  120A  158A  	fcall	___ftdiv
  1370  0C02  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0C03  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0C04  0837               	movf	?___ftdiv,w
  1373  0C05  1683               	bsf	3,5	;RP0=1, select bank3
  1374  0C06  1703               	bsf	3,6	;RP1=1, select bank3
  1375  0C07  00A3               	movwf	_main$652^(0+384)
  1376  0C08  1283               	bcf	3,5	;RP0=0, select bank0
  1377  0C09  1303               	bcf	3,6	;RP1=0, select bank0
  1378  0C0A  0838               	movf	?___ftdiv+1,w
  1379  0C0B  1683               	bsf	3,5	;RP0=1, select bank3
  1380  0C0C  1703               	bsf	3,6	;RP1=1, select bank3
  1381  0C0D  00A4               	movwf	(_main$652+1)^(0+384)
  1382  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0C10  0839               	movf	?___ftdiv+2,w
  1385  0C11  1683               	bsf	3,5	;RP0=1, select bank3
  1386  0C12  1703               	bsf	3,6	;RP1=1, select bank3
  1387  0C13  00A5               	movwf	(_main$652+2)^(0+384)
  1388                           
  1389                           ;main.c: 59: float ppm = 116.6020682 * pow((voltage / 2.0), -2.769034857);
  1390  0C14  3038               	movlw	56
  1391  0C15  1683               	bsf	3,5	;RP0=1, select bank1
  1392  0C16  1303               	bcf	3,6	;RP1=0, select bank1
  1393  0C17  00AC               	movwf	pow@y^(0+128)
  1394  0C18  3031               	movlw	49
  1395  0C19  00AD               	movwf	(pow@y+1)^(0+128)
  1396  0C1A  30C0               	movlw	192
  1397  0C1B  00AE               	movwf	(pow@y+2)^(0+128)
  1398  0C1C  1683               	bsf	3,5	;RP0=1, select bank3
  1399  0C1D  1703               	bsf	3,6	;RP1=1, select bank3
  1400  0C1E  0823               	movf	_main$652^(0+384),w
  1401  0C1F  1683               	bsf	3,5	;RP0=1, select bank1
  1402  0C20  1303               	bcf	3,6	;RP1=0, select bank1
  1403  0C21  00A9               	movwf	pow@x^(0+128)
  1404  0C22  1683               	bsf	3,5	;RP0=1, select bank3
  1405  0C23  1703               	bsf	3,6	;RP1=1, select bank3
  1406  0C24  0824               	movf	(_main$652+1)^(0+384),w
  1407  0C25  1683               	bsf	3,5	;RP0=1, select bank1
  1408  0C26  1303               	bcf	3,6	;RP1=0, select bank1
  1409  0C27  00AA               	movwf	(pow@x+1)^(0+128)
  1410  0C28  1683               	bsf	3,5	;RP0=1, select bank3
  1411  0C29  1703               	bsf	3,6	;RP1=1, select bank3
  1412  0C2A  0825               	movf	(_main$652+2)^(0+384),w
  1413  0C2B  1683               	bsf	3,5	;RP0=1, select bank1
  1414  0C2C  1303               	bcf	3,6	;RP1=0, select bank1
  1415  0C2D  00AB               	movwf	(pow@x+2)^(0+128)
  1416  0C2E  160A  118A  2523  120A  158A  	fcall	_pow
  1417  0C33  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0C34  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0C35  0829               	movf	?_pow^(0+128),w
  1420  0C36  1683               	bsf	3,5	;RP0=1, select bank3
  1421  0C37  1703               	bsf	3,6	;RP1=1, select bank3
  1422  0C38  00C6               	movwf	_main$653^(0+384)
  1423  0C39  1683               	bsf	3,5	;RP0=1, select bank1
  1424  0C3A  1303               	bcf	3,6	;RP1=0, select bank1
  1425  0C3B  082A               	movf	(?_pow+1)^(0+128),w
  1426  0C3C  1683               	bsf	3,5	;RP0=1, select bank3
  1427  0C3D  1703               	bsf	3,6	;RP1=1, select bank3
  1428  0C3E  00C7               	movwf	(_main$653+1)^(0+384)
  1429  0C3F  1683               	bsf	3,5	;RP0=1, select bank1
  1430  0C40  1303               	bcf	3,6	;RP1=0, select bank1
  1431  0C41  082B               	movf	(?_pow+2)^(0+128),w
  1432  0C42  1683               	bsf	3,5	;RP0=1, select bank3
  1433  0C43  1703               	bsf	3,6	;RP1=1, select bank3
  1434  0C44  00C8               	movwf	(_main$653+2)^(0+384)
  1435                           
  1436                           ;main.c: 59: float ppm = 116.6020682 * pow((voltage / 2.0), -2.769034857);
  1437  0C45  3034               	movlw	52
  1438  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0C48  00A7               	movwf	___ftmul@f1
  1441  0C49  30E9               	movlw	233
  1442  0C4A  00A8               	movwf	___ftmul@f1+1
  1443  0C4B  3042               	movlw	66
  1444  0C4C  00A9               	movwf	___ftmul@f1+2
  1445  0C4D  1683               	bsf	3,5	;RP0=1, select bank3
  1446  0C4E  1703               	bsf	3,6	;RP1=1, select bank3
  1447  0C4F  0846               	movf	_main$653^(0+384),w
  1448  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0C52  00AA               	movwf	___ftmul@f2
  1451  0C53  1683               	bsf	3,5	;RP0=1, select bank3
  1452  0C54  1703               	bsf	3,6	;RP1=1, select bank3
  1453  0C55  0847               	movf	(_main$653+1)^(0+384),w
  1454  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0C58  00AB               	movwf	___ftmul@f2+1
  1457  0C59  1683               	bsf	3,5	;RP0=1, select bank3
  1458  0C5A  1703               	bsf	3,6	;RP1=1, select bank3
  1459  0C5B  0848               	movf	(_main$653+2)^(0+384),w
  1460  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  1461  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  1462  0C5E  00AC               	movwf	___ftmul@f2+2
  1463  0C5F  160A  118A  2215  120A  158A  	fcall	___ftmul
  1464  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  1466  0C66  0827               	movf	?___ftmul,w
  1467  0C67  1683               	bsf	3,5	;RP0=1, select bank3
  1468  0C68  1703               	bsf	3,6	;RP1=1, select bank3
  1469  0C69  0090               	movwf	main@ppm^(0+384)
  1470  0C6A  1283               	bcf	3,5	;RP0=0, select bank0
  1471  0C6B  1303               	bcf	3,6	;RP1=0, select bank0
  1472  0C6C  0828               	movf	?___ftmul+1,w
  1473  0C6D  1683               	bsf	3,5	;RP0=1, select bank3
  1474  0C6E  1703               	bsf	3,6	;RP1=1, select bank3
  1475  0C6F  0091               	movwf	(main@ppm+1)^(0+384)
  1476  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0C72  0829               	movf	?___ftmul+2,w
  1479  0C73  1683               	bsf	3,5	;RP0=1, select bank3
  1480  0C74  1703               	bsf	3,6	;RP1=1, select bank3
  1481  0C75  0092               	movwf	(main@ppm+2)^(0+384)
  1482                           
  1483                           ;main.c: 60: float ratio = voltage / 5.0;
  1484  0C76  3000               	movlw	0
  1485  0C77  1283               	bcf	3,5	;RP0=0, select bank0
  1486  0C78  1303               	bcf	3,6	;RP1=0, select bank0
  1487  0C79  00B7               	movwf	___ftdiv@f2
  1488  0C7A  30A0               	movlw	160
  1489  0C7B  00B8               	movwf	___ftdiv@f2+1
  1490  0C7C  3040               	movlw	64
  1491  0C7D  00B9               	movwf	___ftdiv@f2+2
  1492  0C7E  1683               	bsf	3,5	;RP0=1, select bank3
  1493  0C7F  1703               	bsf	3,6	;RP1=1, select bank3
  1494  0C80  0843               	movf	main@voltage^(0+384),w
  1495  0C81  1283               	bcf	3,5	;RP0=0, select bank0
  1496  0C82  1303               	bcf	3,6	;RP1=0, select bank0
  1497  0C83  00BA               	movwf	___ftdiv@f1
  1498  0C84  1683               	bsf	3,5	;RP0=1, select bank3
  1499  0C85  1703               	bsf	3,6	;RP1=1, select bank3
  1500  0C86  0844               	movf	(main@voltage+1)^(0+384),w
  1501  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0C89  00BB               	movwf	___ftdiv@f1+1
  1504  0C8A  1683               	bsf	3,5	;RP0=1, select bank3
  1505  0C8B  1703               	bsf	3,6	;RP1=1, select bank3
  1506  0C8C  0845               	movf	(main@voltage+2)^(0+384),w
  1507  0C8D  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0C8E  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0C8F  00BC               	movwf	___ftdiv@f1+2
  1510  0C90  160A  158A  2748  120A  158A  	fcall	___ftdiv
  1511  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  1512  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  1513  0C97  0837               	movf	?___ftdiv,w
  1514  0C98  1683               	bsf	3,5	;RP0=1, select bank3
  1515  0C99  1703               	bsf	3,6	;RP1=1, select bank3
  1516  0C9A  00CC               	movwf	main@ratio^(0+384)
  1517  0C9B  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0C9C  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0C9D  0838               	movf	?___ftdiv+1,w
  1520  0C9E  1683               	bsf	3,5	;RP0=1, select bank3
  1521  0C9F  1703               	bsf	3,6	;RP1=1, select bank3
  1522  0CA0  00CD               	movwf	(main@ratio+1)^(0+384)
  1523  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  1524  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  1525  0CA3  0839               	movf	?___ftdiv+2,w
  1526  0CA4  1683               	bsf	3,5	;RP0=1, select bank3
  1527  0CA5  1703               	bsf	3,6	;RP1=1, select bank3
  1528  0CA6  00CE               	movwf	(main@ratio+2)^(0+384)
  1529                           
  1530                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1531  0CA7  3000               	movlw	0
  1532  0CA8  1683               	bsf	3,5	;RP0=1, select bank1
  1533  0CA9  1303               	bcf	3,6	;RP1=0, select bank1
  1534  0CAA  00AC               	movwf	pow@y^(0+128)
  1535  0CAB  30C0               	movlw	192
  1536  0CAC  00AD               	movwf	(pow@y+1)^(0+128)
  1537  0CAD  3040               	movlw	64
  1538  0CAE  00AE               	movwf	(pow@y+2)^(0+128)
  1539  0CAF  1683               	bsf	3,5	;RP0=1, select bank3
  1540  0CB0  1703               	bsf	3,6	;RP1=1, select bank3
  1541  0CB1  084C               	movf	main@ratio^(0+384),w
  1542  0CB2  1683               	bsf	3,5	;RP0=1, select bank1
  1543  0CB3  1303               	bcf	3,6	;RP1=0, select bank1
  1544  0CB4  00A9               	movwf	pow@x^(0+128)
  1545  0CB5  1683               	bsf	3,5	;RP0=1, select bank3
  1546  0CB6  1703               	bsf	3,6	;RP1=1, select bank3
  1547  0CB7  084D               	movf	(main@ratio+1)^(0+384),w
  1548  0CB8  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0CB9  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0CBA  00AA               	movwf	(pow@x+1)^(0+128)
  1551  0CBB  1683               	bsf	3,5	;RP0=1, select bank3
  1552  0CBC  1703               	bsf	3,6	;RP1=1, select bank3
  1553  0CBD  084E               	movf	(main@ratio+2)^(0+384),w
  1554  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
  1555  0CBF  1303               	bcf	3,6	;RP1=0, select bank1
  1556  0CC0  00AB               	movwf	(pow@x+2)^(0+128)
  1557  0CC1  160A  118A  2523  120A  158A  	fcall	_pow
  1558  0CC6  1683               	bsf	3,5	;RP0=1, select bank1
  1559  0CC7  1303               	bcf	3,6	;RP1=0, select bank1
  1560  0CC8  0829               	movf	?_pow^(0+128),w
  1561  0CC9  1683               	bsf	3,5	;RP0=1, select bank3
  1562  0CCA  1703               	bsf	3,6	;RP1=1, select bank3
  1563  0CCB  00A6               	movwf	_main$654^(0+384)
  1564  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
  1565  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
  1566  0CCE  082A               	movf	(?_pow+1)^(0+128),w
  1567  0CCF  1683               	bsf	3,5	;RP0=1, select bank3
  1568  0CD0  1703               	bsf	3,6	;RP1=1, select bank3
  1569  0CD1  00A7               	movwf	(_main$654+1)^(0+384)
  1570  0CD2  1683               	bsf	3,5	;RP0=1, select bank1
  1571  0CD3  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0CD4  082B               	movf	(?_pow+2)^(0+128),w
  1573  0CD5  1683               	bsf	3,5	;RP0=1, select bank3
  1574  0CD6  1703               	bsf	3,6	;RP1=1, select bank3
  1575  0CD7  00A8               	movwf	(_main$654+2)^(0+384)
  1576                           
  1577                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1578  0CD8  3000               	movlw	0
  1579  0CD9  1683               	bsf	3,5	;RP0=1, select bank1
  1580  0CDA  1303               	bcf	3,6	;RP1=0, select bank1
  1581  0CDB  00AC               	movwf	pow@y^(0+128)
  1582  0CDC  30A0               	movlw	160
  1583  0CDD  00AD               	movwf	(pow@y+1)^(0+128)
  1584  0CDE  3040               	movlw	64
  1585  0CDF  00AE               	movwf	(pow@y+2)^(0+128)
  1586  0CE0  1683               	bsf	3,5	;RP0=1, select bank3
  1587  0CE1  1703               	bsf	3,6	;RP1=1, select bank3
  1588  0CE2  084C               	movf	main@ratio^(0+384),w
  1589  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  1590  0CE4  1303               	bcf	3,6	;RP1=0, select bank1
  1591  0CE5  00A9               	movwf	pow@x^(0+128)
  1592  0CE6  1683               	bsf	3,5	;RP0=1, select bank3
  1593  0CE7  1703               	bsf	3,6	;RP1=1, select bank3
  1594  0CE8  084D               	movf	(main@ratio+1)^(0+384),w
  1595  0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0CEA  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0CEB  00AA               	movwf	(pow@x+1)^(0+128)
  1598  0CEC  1683               	bsf	3,5	;RP0=1, select bank3
  1599  0CED  1703               	bsf	3,6	;RP1=1, select bank3
  1600  0CEE  084E               	movf	(main@ratio+2)^(0+384),w
  1601  0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  1602  0CF0  1303               	bcf	3,6	;RP1=0, select bank1
  1603  0CF1  00AB               	movwf	(pow@x+2)^(0+128)
  1604  0CF2  160A  118A  2523  120A  158A  	fcall	_pow
  1605  0CF7  1683               	bsf	3,5	;RP0=1, select bank1
  1606  0CF8  1303               	bcf	3,6	;RP1=0, select bank1
  1607  0CF9  0829               	movf	?_pow^(0+128),w
  1608  0CFA  1683               	bsf	3,5	;RP0=1, select bank3
  1609  0CFB  1703               	bsf	3,6	;RP1=1, select bank3
  1610  0CFC  00C6               	movwf	_main$653^(0+384)
  1611  0CFD  1683               	bsf	3,5	;RP0=1, select bank1
  1612  0CFE  1303               	bcf	3,6	;RP1=0, select bank1
  1613  0CFF  082A               	movf	(?_pow+1)^(0+128),w
  1614  0D00  1683               	bsf	3,5	;RP0=1, select bank3
  1615  0D01  1703               	bsf	3,6	;RP1=1, select bank3
  1616  0D02  00C7               	movwf	(_main$653+1)^(0+384)
  1617  0D03  1683               	bsf	3,5	;RP0=1, select bank1
  1618  0D04  1303               	bcf	3,6	;RP1=0, select bank1
  1619  0D05  082B               	movf	(?_pow+2)^(0+128),w
  1620  0D06  1683               	bsf	3,5	;RP0=1, select bank3
  1621  0D07  1703               	bsf	3,6	;RP1=1, select bank3
  1622  0D08  00C8               	movwf	(_main$653+2)^(0+384)
  1623                           
  1624                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1625  0D09  3000               	movlw	0
  1626  0D0A  1683               	bsf	3,5	;RP0=1, select bank1
  1627  0D0B  1303               	bcf	3,6	;RP1=0, select bank1
  1628  0D0C  00AC               	movwf	pow@y^(0+128)
  1629  0D0D  3080               	movlw	128
  1630  0D0E  00AD               	movwf	(pow@y+1)^(0+128)
  1631  0D0F  3040               	movlw	64
  1632  0D10  00AE               	movwf	(pow@y+2)^(0+128)
  1633  0D11  1683               	bsf	3,5	;RP0=1, select bank3
  1634  0D12  1703               	bsf	3,6	;RP1=1, select bank3
  1635  0D13  084C               	movf	main@ratio^(0+384),w
  1636  0D14  1683               	bsf	3,5	;RP0=1, select bank1
  1637  0D15  1303               	bcf	3,6	;RP1=0, select bank1
  1638  0D16  00A9               	movwf	pow@x^(0+128)
  1639  0D17  1683               	bsf	3,5	;RP0=1, select bank3
  1640  0D18  1703               	bsf	3,6	;RP1=1, select bank3
  1641  0D19  084D               	movf	(main@ratio+1)^(0+384),w
  1642  0D1A  1683               	bsf	3,5	;RP0=1, select bank1
  1643  0D1B  1303               	bcf	3,6	;RP1=0, select bank1
  1644  0D1C  00AA               	movwf	(pow@x+1)^(0+128)
  1645  0D1D  1683               	bsf	3,5	;RP0=1, select bank3
  1646  0D1E  1703               	bsf	3,6	;RP1=1, select bank3
  1647  0D1F  084E               	movf	(main@ratio+2)^(0+384),w
  1648  0D20  1683               	bsf	3,5	;RP0=1, select bank1
  1649  0D21  1303               	bcf	3,6	;RP1=0, select bank1
  1650  0D22  00AB               	movwf	(pow@x+2)^(0+128)
  1651  0D23  160A  118A  2523  120A  158A  	fcall	_pow
  1652  0D28  1683               	bsf	3,5	;RP0=1, select bank1
  1653  0D29  1303               	bcf	3,6	;RP1=0, select bank1
  1654  0D2A  0829               	movf	?_pow^(0+128),w
  1655  0D2B  1683               	bsf	3,5	;RP0=1, select bank3
  1656  0D2C  1703               	bsf	3,6	;RP1=1, select bank3
  1657  0D2D  00A9               	movwf	_main$655^(0+384)
  1658  0D2E  1683               	bsf	3,5	;RP0=1, select bank1
  1659  0D2F  1303               	bcf	3,6	;RP1=0, select bank1
  1660  0D30  082A               	movf	(?_pow+1)^(0+128),w
  1661  0D31  1683               	bsf	3,5	;RP0=1, select bank3
  1662  0D32  1703               	bsf	3,6	;RP1=1, select bank3
  1663  0D33  00AA               	movwf	(_main$655+1)^(0+384)
  1664  0D34  1683               	bsf	3,5	;RP0=1, select bank1
  1665  0D35  1303               	bcf	3,6	;RP1=0, select bank1
  1666  0D36  082B               	movf	(?_pow+2)^(0+128),w
  1667  0D37  1683               	bsf	3,5	;RP0=1, select bank3
  1668  0D38  1703               	bsf	3,6	;RP1=1, select bank3
  1669  0D39  00AB               	movwf	(_main$655+2)^(0+384)
  1670                           
  1671                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1672  0D3A  3000               	movlw	0
  1673  0D3B  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0D3C  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0D3D  00AC               	movwf	pow@y^(0+128)
  1676  0D3E  3040               	movlw	64
  1677  0D3F  00AD               	movwf	(pow@y+1)^(0+128)
  1678  0D40  3040               	movlw	64
  1679  0D41  00AE               	movwf	(pow@y+2)^(0+128)
  1680  0D42  1683               	bsf	3,5	;RP0=1, select bank3
  1681  0D43  1703               	bsf	3,6	;RP1=1, select bank3
  1682  0D44  084C               	movf	main@ratio^(0+384),w
  1683  0D45  1683               	bsf	3,5	;RP0=1, select bank1
  1684  0D46  1303               	bcf	3,6	;RP1=0, select bank1
  1685  0D47  00A9               	movwf	pow@x^(0+128)
  1686  0D48  1683               	bsf	3,5	;RP0=1, select bank3
  1687  0D49  1703               	bsf	3,6	;RP1=1, select bank3
  1688  0D4A  084D               	movf	(main@ratio+1)^(0+384),w
  1689  0D4B  1683               	bsf	3,5	;RP0=1, select bank1
  1690  0D4C  1303               	bcf	3,6	;RP1=0, select bank1
  1691  0D4D  00AA               	movwf	(pow@x+1)^(0+128)
  1692  0D4E  1683               	bsf	3,5	;RP0=1, select bank3
  1693  0D4F  1703               	bsf	3,6	;RP1=1, select bank3
  1694  0D50  084E               	movf	(main@ratio+2)^(0+384),w
  1695  0D51  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0D52  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0D53  00AB               	movwf	(pow@x+2)^(0+128)
  1698  0D54  160A  118A  2523  120A  158A  	fcall	_pow
  1699  0D59  1683               	bsf	3,5	;RP0=1, select bank1
  1700  0D5A  1303               	bcf	3,6	;RP1=0, select bank1
  1701  0D5B  0829               	movf	?_pow^(0+128),w
  1702  0D5C  1683               	bsf	3,5	;RP0=1, select bank3
  1703  0D5D  1703               	bsf	3,6	;RP1=1, select bank3
  1704  0D5E  00AC               	movwf	_main$656^(0+384)
  1705  0D5F  1683               	bsf	3,5	;RP0=1, select bank1
  1706  0D60  1303               	bcf	3,6	;RP1=0, select bank1
  1707  0D61  082A               	movf	(?_pow+1)^(0+128),w
  1708  0D62  1683               	bsf	3,5	;RP0=1, select bank3
  1709  0D63  1703               	bsf	3,6	;RP1=1, select bank3
  1710  0D64  00AD               	movwf	(_main$656+1)^(0+384)
  1711  0D65  1683               	bsf	3,5	;RP0=1, select bank1
  1712  0D66  1303               	bcf	3,6	;RP1=0, select bank1
  1713  0D67  082B               	movf	(?_pow+2)^(0+128),w
  1714  0D68  1683               	bsf	3,5	;RP0=1, select bank3
  1715  0D69  1703               	bsf	3,6	;RP1=1, select bank3
  1716  0D6A  00AE               	movwf	(_main$656+2)^(0+384)
  1717                           
  1718                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1719  0D6B  3000               	movlw	0
  1720  0D6C  1683               	bsf	3,5	;RP0=1, select bank1
  1721  0D6D  1303               	bcf	3,6	;RP1=0, select bank1
  1722  0D6E  00AC               	movwf	pow@y^(0+128)
  1723  0D6F  3000               	movlw	0
  1724  0D70  00AD               	movwf	(pow@y+1)^(0+128)
  1725  0D71  3040               	movlw	64
  1726  0D72  00AE               	movwf	(pow@y+2)^(0+128)
  1727  0D73  1683               	bsf	3,5	;RP0=1, select bank3
  1728  0D74  1703               	bsf	3,6	;RP1=1, select bank3
  1729  0D75  084C               	movf	main@ratio^(0+384),w
  1730  0D76  1683               	bsf	3,5	;RP0=1, select bank1
  1731  0D77  1303               	bcf	3,6	;RP1=0, select bank1
  1732  0D78  00A9               	movwf	pow@x^(0+128)
  1733  0D79  1683               	bsf	3,5	;RP0=1, select bank3
  1734  0D7A  1703               	bsf	3,6	;RP1=1, select bank3
  1735  0D7B  084D               	movf	(main@ratio+1)^(0+384),w
  1736  0D7C  1683               	bsf	3,5	;RP0=1, select bank1
  1737  0D7D  1303               	bcf	3,6	;RP1=0, select bank1
  1738  0D7E  00AA               	movwf	(pow@x+1)^(0+128)
  1739  0D7F  1683               	bsf	3,5	;RP0=1, select bank3
  1740  0D80  1703               	bsf	3,6	;RP1=1, select bank3
  1741  0D81  084E               	movf	(main@ratio+2)^(0+384),w
  1742  0D82  1683               	bsf	3,5	;RP0=1, select bank1
  1743  0D83  1303               	bcf	3,6	;RP1=0, select bank1
  1744  0D84  00AB               	movwf	(pow@x+2)^(0+128)
  1745  0D85  160A  118A  2523  120A  158A  	fcall	_pow
  1746  0D8A  1683               	bsf	3,5	;RP0=1, select bank1
  1747  0D8B  1303               	bcf	3,6	;RP1=0, select bank1
  1748  0D8C  0829               	movf	?_pow^(0+128),w
  1749  0D8D  1683               	bsf	3,5	;RP0=1, select bank3
  1750  0D8E  1703               	bsf	3,6	;RP1=1, select bank3
  1751  0D8F  00AF               	movwf	_main$657^(0+384)
  1752  0D90  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0D91  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0D92  082A               	movf	(?_pow+1)^(0+128),w
  1755  0D93  1683               	bsf	3,5	;RP0=1, select bank3
  1756  0D94  1703               	bsf	3,6	;RP1=1, select bank3
  1757  0D95  00B0               	movwf	(_main$657+1)^(0+384)
  1758  0D96  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0D97  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0D98  082B               	movf	(?_pow+2)^(0+128),w
  1761  0D99  1683               	bsf	3,5	;RP0=1, select bank3
  1762  0D9A  1703               	bsf	3,6	;RP1=1, select bank3
  1763  0D9B  00B1               	movwf	(_main$657+2)^(0+384)
  1764                           
  1765                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1766  0D9C  309C               	movlw	156
  1767  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  1768  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  1769  0D9F  00A7               	movwf	___ftmul@f1
  1770  0DA0  30B2               	movlw	178
  1771  0DA1  00A8               	movwf	___ftmul@f1+1
  1772  0DA2  303F               	movlw	63
  1773  0DA3  00A9               	movwf	___ftmul@f1+2
  1774  0DA4  1683               	bsf	3,5	;RP0=1, select bank3
  1775  0DA5  1703               	bsf	3,6	;RP1=1, select bank3
  1776  0DA6  082F               	movf	_main$657^(0+384),w
  1777  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  1779  0DA9  00AA               	movwf	___ftmul@f2
  1780  0DAA  1683               	bsf	3,5	;RP0=1, select bank3
  1781  0DAB  1703               	bsf	3,6	;RP1=1, select bank3
  1782  0DAC  0830               	movf	(_main$657+1)^(0+384),w
  1783  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  1784  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  1785  0DAF  00AB               	movwf	___ftmul@f2+1
  1786  0DB0  1683               	bsf	3,5	;RP0=1, select bank3
  1787  0DB1  1703               	bsf	3,6	;RP1=1, select bank3
  1788  0DB2  0831               	movf	(_main$657+2)^(0+384),w
  1789  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  1790  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  1791  0DB5  00AC               	movwf	___ftmul@f2+2
  1792  0DB6  160A  118A  2215  120A  158A  	fcall	___ftmul
  1793  0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  1794  0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  1795  0DBD  0827               	movf	?___ftmul,w
  1796  0DBE  00C7               	movwf	___ftadd@f1
  1797  0DBF  0828               	movf	?___ftmul+1,w
  1798  0DC0  00C8               	movwf	___ftadd@f1+1
  1799  0DC1  0829               	movf	?___ftmul+2,w
  1800  0DC2  00C9               	movwf	___ftadd@f1+2
  1801  0DC3  30A9               	movlw	169
  1802  0DC4  00A7               	movwf	___ftmul@f1
  1803  0DC5  30DE               	movlw	222
  1804  0DC6  00A8               	movwf	___ftmul@f1+1
  1805  0DC7  303C               	movlw	60
  1806  0DC8  00A9               	movwf	___ftmul@f1+2
  1807  0DC9  1683               	bsf	3,5	;RP0=1, select bank3
  1808  0DCA  1703               	bsf	3,6	;RP1=1, select bank3
  1809  0DCB  084C               	movf	main@ratio^(0+384),w
  1810  0DCC  1283               	bcf	3,5	;RP0=0, select bank0
  1811  0DCD  1303               	bcf	3,6	;RP1=0, select bank0
  1812  0DCE  00AA               	movwf	___ftmul@f2
  1813  0DCF  1683               	bsf	3,5	;RP0=1, select bank3
  1814  0DD0  1703               	bsf	3,6	;RP1=1, select bank3
  1815  0DD1  084D               	movf	(main@ratio+1)^(0+384),w
  1816  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  1817  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  1818  0DD4  00AB               	movwf	___ftmul@f2+1
  1819  0DD5  1683               	bsf	3,5	;RP0=1, select bank3
  1820  0DD6  1703               	bsf	3,6	;RP1=1, select bank3
  1821  0DD7  084E               	movf	(main@ratio+2)^(0+384),w
  1822  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0DDA  00AC               	movwf	___ftmul@f2+2
  1825  0DDB  160A  118A  2215  120A  158A  	fcall	___ftmul
  1826  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0DE2  0827               	movf	?___ftmul,w
  1829  0DE3  00CA               	movwf	___ftadd@f2
  1830  0DE4  0828               	movf	?___ftmul+1,w
  1831  0DE5  00CB               	movwf	___ftadd@f2+1
  1832  0DE6  0829               	movf	?___ftmul+2,w
  1833  0DE7  00CC               	movwf	___ftadd@f2+2
  1834  0DE8  160A  118A  22E8  120A  158A  	fcall	___ftadd
  1835  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0DEF  0847               	movf	?___ftadd,w
  1838  0DF0  1683               	bsf	3,5	;RP0=1, select bank3
  1839  0DF1  1703               	bsf	3,6	;RP1=1, select bank3
  1840  0DF2  00B2               	movwf	_main$658^(0+384)
  1841  0DF3  1283               	bcf	3,5	;RP0=0, select bank0
  1842  0DF4  1303               	bcf	3,6	;RP1=0, select bank0
  1843  0DF5  0848               	movf	?___ftadd+1,w
  1844  0DF6  1683               	bsf	3,5	;RP0=1, select bank3
  1845  0DF7  1703               	bsf	3,6	;RP1=1, select bank3
  1846  0DF8  00B3               	movwf	(_main$658+1)^(0+384)
  1847  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0DFB  0849               	movf	?___ftadd+2,w
  1850  0DFC  1683               	bsf	3,5	;RP0=1, select bank3
  1851  0DFD  1703               	bsf	3,6	;RP1=1, select bank3
  1852  0DFE  00B4               	movwf	(_main$658+2)^(0+384)
  1853                           
  1854                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1855  0DFF  30EE               	movlw	238
  1856  0E00  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0E01  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0E02  00A7               	movwf	___ftmul@f1
  1859  0E03  30EB               	movlw	235
  1860  0E04  00A8               	movwf	___ftmul@f1+1
  1861  0E05  303A               	movlw	58
  1862  0E06  00A9               	movwf	___ftmul@f1+2
  1863  0E07  1683               	bsf	3,5	;RP0=1, select bank3
  1864  0E08  1703               	bsf	3,6	;RP1=1, select bank3
  1865  0E09  082C               	movf	_main$656^(0+384),w
  1866  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0E0C  00AA               	movwf	___ftmul@f2
  1869  0E0D  1683               	bsf	3,5	;RP0=1, select bank3
  1870  0E0E  1703               	bsf	3,6	;RP1=1, select bank3
  1871  0E0F  082D               	movf	(_main$656+1)^(0+384),w
  1872  0E10  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0E11  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0E12  00AB               	movwf	___ftmul@f2+1
  1875  0E13  1683               	bsf	3,5	;RP0=1, select bank3
  1876  0E14  1703               	bsf	3,6	;RP1=1, select bank3
  1877  0E15  082E               	movf	(_main$656+2)^(0+384),w
  1878  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0E18  00AC               	movwf	___ftmul@f2+2
  1881  0E19  160A  118A  2215  120A  158A  	fcall	___ftmul
  1882  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0E20  0827               	movf	?___ftmul,w
  1885  0E21  00C7               	movwf	___ftadd@f1
  1886  0E22  0828               	movf	?___ftmul+1,w
  1887  0E23  00C8               	movwf	___ftadd@f1+1
  1888  0E24  0829               	movf	?___ftmul+2,w
  1889  0E25  00C9               	movwf	___ftadd@f1+2
  1890  0E26  1683               	bsf	3,5	;RP0=1, select bank3
  1891  0E27  1703               	bsf	3,6	;RP1=1, select bank3
  1892  0E28  0832               	movf	_main$658^(0+384),w
  1893  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0E2B  00CA               	movwf	___ftadd@f2
  1896  0E2C  1683               	bsf	3,5	;RP0=1, select bank3
  1897  0E2D  1703               	bsf	3,6	;RP1=1, select bank3
  1898  0E2E  0833               	movf	(_main$658+1)^(0+384),w
  1899  0E2F  1283               	bcf	3,5	;RP0=0, select bank0
  1900  0E30  1303               	bcf	3,6	;RP1=0, select bank0
  1901  0E31  00CB               	movwf	___ftadd@f2+1
  1902  0E32  1683               	bsf	3,5	;RP0=1, select bank3
  1903  0E33  1703               	bsf	3,6	;RP1=1, select bank3
  1904  0E34  0834               	movf	(_main$658+2)^(0+384),w
  1905  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0E37  00CC               	movwf	___ftadd@f2+2
  1908  0E38  160A  118A  22E8  120A  158A  	fcall	___ftadd
  1909  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0E3F  0847               	movf	?___ftadd,w
  1912  0E40  1683               	bsf	3,5	;RP0=1, select bank3
  1913  0E41  1703               	bsf	3,6	;RP1=1, select bank3
  1914  0E42  00B5               	movwf	_main$659^(0+384)
  1915  0E43  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0E44  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0E45  0848               	movf	?___ftadd+1,w
  1918  0E46  1683               	bsf	3,5	;RP0=1, select bank3
  1919  0E47  1703               	bsf	3,6	;RP1=1, select bank3
  1920  0E48  00B6               	movwf	(_main$659+1)^(0+384)
  1921  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0E4B  0849               	movf	?___ftadd+2,w
  1924  0E4C  1683               	bsf	3,5	;RP0=1, select bank3
  1925  0E4D  1703               	bsf	3,6	;RP1=1, select bank3
  1926  0E4E  00B7               	movwf	(_main$659+2)^(0+384)
  1927                           
  1928                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  1929  0E4F  3074               	movlw	116
  1930  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0E52  00A7               	movwf	___ftmul@f1
  1933  0E53  305A               	movlw	90
  1934  0E54  00A8               	movwf	___ftmul@f1+1
  1935  0E55  30BB               	movlw	187
  1936  0E56  00A9               	movwf	___ftmul@f1+2
  1937  0E57  1683               	bsf	3,5	;RP0=1, select bank3
  1938  0E58  1703               	bsf	3,6	;RP1=1, select bank3
  1939  0E59  0829               	movf	_main$655^(0+384),w
  1940  0E5A  1283               	bcf	3,5	;RP0=0, select bank0
  1941  0E5B  1303               	bcf	3,6	;RP1=0, select bank0
  1942  0E5C  00AA               	movwf	___ftmul@f2
  1943  0E5D  1683               	bsf	3,5	;RP0=1, select bank3
  1944  0E5E  1703               	bsf	3,6	;RP1=1, select bank3
  1945  0E5F  082A               	movf	(_main$655+1)^(0+384),w
  1946  0E60  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0E61  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0E62  00AB               	movwf	___ftmul@f2+1
  1949  0E63  1683               	bsf	3,5	;RP0=1, select bank3
  1950  0E64  1703               	bsf	3,6	;RP1=1, select bank3
  1951  0E65  082B               	movf	(_main$655+2)^(0+384),w
  1952  0E66  1283               	bcf	3,5	;RP0=0, select bank0
  1953  0E67  1303               	bcf	3,6	;RP1=0, select bank0
  1954  0E68  00AC               	movwf	___ftmul@f2+2
  1955  0E69  160A  118A  2215  120A  158A  	fcall	___ftmul
  1956  0E6E  1283               	bcf	3,5	;RP0=0, select bank0
  1957  0E6F  1303               	bcf	3,6	;RP1=0, select bank0
  1958  0E70  0827               	movf	?___ftmul,w
  1959  0E71  00C7               	movwf	___ftadd@f1
  1960  0E72  0828               	movf	?___ftmul+1,w
  1961  0E73  00C8               	movwf	___ftadd@f1+1
  1962  0E74  0829               	movf	?___ftmul+2,w
  1963  0E75  00C9               	movwf	___ftadd@f1+2
  1964  0E76  1683               	bsf	3,5	;RP0=1, select bank3
  1965  0E77  1703               	bsf	3,6	;RP1=1, select bank3
  1966  0E78  0835               	movf	_main$659^(0+384),w
  1967  0E79  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0E7A  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0E7B  00CA               	movwf	___ftadd@f2
  1970  0E7C  1683               	bsf	3,5	;RP0=1, select bank3
  1971  0E7D  1703               	bsf	3,6	;RP1=1, select bank3
  1972  0E7E  0836               	movf	(_main$659+1)^(0+384),w
  1973  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  1974  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  1975  0E81  00CB               	movwf	___ftadd@f2+1
  1976  0E82  1683               	bsf	3,5	;RP0=1, select bank3
  1977  0E83  1703               	bsf	3,6	;RP1=1, select bank3
  1978  0E84  0837               	movf	(_main$659+2)^(0+384),w
  1979  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  1980  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  1981  0E87  00CC               	movwf	___ftadd@f2+2
  1982  0E88  160A  118A  22E8  120A  158A  	fcall	___ftadd
  1983  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0E8F  0847               	movf	?___ftadd,w
  1986  0E90  1683               	bsf	3,5	;RP0=1, select bank3
  1987  0E91  1703               	bsf	3,6	;RP1=1, select bank3
  1988  0E92  00B8               	movwf	_main$660^(0+384)
  1989  0E93  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0E94  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0E95  0848               	movf	?___ftadd+1,w
  1992  0E96  1683               	bsf	3,5	;RP0=1, select bank3
  1993  0E97  1703               	bsf	3,6	;RP1=1, select bank3
  1994  0E98  00B9               	movwf	(_main$660+1)^(0+384)
  1995  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0E9B  0849               	movf	?___ftadd+2,w
  1998  0E9C  1683               	bsf	3,5	;RP0=1, select bank3
  1999  0E9D  1703               	bsf	3,6	;RP1=1, select bank3
  2000  0E9E  00BA               	movwf	(_main$660+2)^(0+384)
  2001                           
  2002                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  2003  0E9F  3010               	movlw	16
  2004  0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0EA2  00A7               	movwf	___ftmul@f1
  2007  0EA3  30FC               	movlw	252
  2008  0EA4  00A8               	movwf	___ftmul@f1+1
  2009  0EA5  30BA               	movlw	186
  2010  0EA6  00A9               	movwf	___ftmul@f1+2
  2011  0EA7  1683               	bsf	3,5	;RP0=1, select bank3
  2012  0EA8  1703               	bsf	3,6	;RP1=1, select bank3
  2013  0EA9  0846               	movf	_main$653^(0+384),w
  2014  0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  2015  0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  2016  0EAC  00AA               	movwf	___ftmul@f2
  2017  0EAD  1683               	bsf	3,5	;RP0=1, select bank3
  2018  0EAE  1703               	bsf	3,6	;RP1=1, select bank3
  2019  0EAF  0847               	movf	(_main$653+1)^(0+384),w
  2020  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0EB2  00AB               	movwf	___ftmul@f2+1
  2023  0EB3  1683               	bsf	3,5	;RP0=1, select bank3
  2024  0EB4  1703               	bsf	3,6	;RP1=1, select bank3
  2025  0EB5  0848               	movf	(_main$653+2)^(0+384),w
  2026  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  2027  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  2028  0EB8  00AC               	movwf	___ftmul@f2+2
  2029  0EB9  160A  118A  2215  120A  158A  	fcall	___ftmul
  2030  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0EC0  0827               	movf	?___ftmul,w
  2033  0EC1  00C7               	movwf	___ftadd@f1
  2034  0EC2  0828               	movf	?___ftmul+1,w
  2035  0EC3  00C8               	movwf	___ftadd@f1+1
  2036  0EC4  0829               	movf	?___ftmul+2,w
  2037  0EC5  00C9               	movwf	___ftadd@f1+2
  2038  0EC6  1683               	bsf	3,5	;RP0=1, select bank3
  2039  0EC7  1703               	bsf	3,6	;RP1=1, select bank3
  2040  0EC8  0838               	movf	_main$660^(0+384),w
  2041  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  2042  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  2043  0ECB  00CA               	movwf	___ftadd@f2
  2044  0ECC  1683               	bsf	3,5	;RP0=1, select bank3
  2045  0ECD  1703               	bsf	3,6	;RP1=1, select bank3
  2046  0ECE  0839               	movf	(_main$660+1)^(0+384),w
  2047  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0ED1  00CB               	movwf	___ftadd@f2+1
  2050  0ED2  1683               	bsf	3,5	;RP0=1, select bank3
  2051  0ED3  1703               	bsf	3,6	;RP1=1, select bank3
  2052  0ED4  083A               	movf	(_main$660+2)^(0+384),w
  2053  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  2054  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  2055  0ED7  00CC               	movwf	___ftadd@f2+2
  2056  0ED8  160A  118A  22E8  120A  158A  	fcall	___ftadd
  2057  0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0EDF  0847               	movf	?___ftadd,w
  2060  0EE0  1683               	bsf	3,5	;RP0=1, select bank3
  2061  0EE1  1703               	bsf	3,6	;RP1=1, select bank3
  2062  0EE2  00BB               	movwf	_main$661^(0+384)
  2063  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0EE5  0848               	movf	?___ftadd+1,w
  2066  0EE6  1683               	bsf	3,5	;RP0=1, select bank3
  2067  0EE7  1703               	bsf	3,6	;RP1=1, select bank3
  2068  0EE8  00BC               	movwf	(_main$661+1)^(0+384)
  2069  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  2070  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  2071  0EEB  0849               	movf	?___ftadd+2,w
  2072  0EEC  1683               	bsf	3,5	;RP0=1, select bank3
  2073  0EED  1703               	bsf	3,6	;RP1=1, select bank3
  2074  0EEE  00BD               	movwf	(_main$661+2)^(0+384)
  2075                           
  2076                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  2077  0EEF  30A8               	movlw	168
  2078  0EF0  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0EF1  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0EF2  00A7               	movwf	___ftmul@f1
  2081  0EF3  3090               	movlw	144
  2082  0EF4  00A8               	movwf	___ftmul@f1+1
  2083  0EF5  303F               	movlw	63
  2084  0EF6  00A9               	movwf	___ftmul@f1+2
  2085  0EF7  1683               	bsf	3,5	;RP0=1, select bank3
  2086  0EF8  1703               	bsf	3,6	;RP1=1, select bank3
  2087  0EF9  0826               	movf	_main$654^(0+384),w
  2088  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  2089  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0EFC  00AA               	movwf	___ftmul@f2
  2091  0EFD  1683               	bsf	3,5	;RP0=1, select bank3
  2092  0EFE  1703               	bsf	3,6	;RP1=1, select bank3
  2093  0EFF  0827               	movf	(_main$654+1)^(0+384),w
  2094  0F00  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0F01  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0F02  00AB               	movwf	___ftmul@f2+1
  2097  0F03  1683               	bsf	3,5	;RP0=1, select bank3
  2098  0F04  1703               	bsf	3,6	;RP1=1, select bank3
  2099  0F05  0828               	movf	(_main$654+2)^(0+384),w
  2100  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0F08  00AC               	movwf	___ftmul@f2+2
  2103  0F09  160A  118A  2215  120A  158A  	fcall	___ftmul
  2104  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0F10  0827               	movf	?___ftmul,w
  2107  0F11  00C7               	movwf	___ftadd@f1
  2108  0F12  0828               	movf	?___ftmul+1,w
  2109  0F13  00C8               	movwf	___ftadd@f1+1
  2110  0F14  0829               	movf	?___ftmul+2,w
  2111  0F15  00C9               	movwf	___ftadd@f1+2
  2112  0F16  1683               	bsf	3,5	;RP0=1, select bank3
  2113  0F17  1703               	bsf	3,6	;RP1=1, select bank3
  2114  0F18  083B               	movf	_main$661^(0+384),w
  2115  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2116  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2117  0F1B  00CA               	movwf	___ftadd@f2
  2118  0F1C  1683               	bsf	3,5	;RP0=1, select bank3
  2119  0F1D  1703               	bsf	3,6	;RP1=1, select bank3
  2120  0F1E  083C               	movf	(_main$661+1)^(0+384),w
  2121  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0F21  00CB               	movwf	___ftadd@f2+1
  2124  0F22  1683               	bsf	3,5	;RP0=1, select bank3
  2125  0F23  1703               	bsf	3,6	;RP1=1, select bank3
  2126  0F24  083D               	movf	(_main$661+2)^(0+384),w
  2127  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2128  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2129  0F27  00CC               	movwf	___ftadd@f2+2
  2130  0F28  160A  118A  22E8  120A  158A  	fcall	___ftadd
  2131  0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  2132  0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  2133  0F2F  0847               	movf	?___ftadd,w
  2134  0F30  1683               	bsf	3,5	;RP0=1, select bank3
  2135  0F31  1703               	bsf	3,6	;RP1=1, select bank3
  2136  0F32  00BE               	movwf	_main$662^(0+384)
  2137  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  2138  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  2139  0F35  0848               	movf	?___ftadd+1,w
  2140  0F36  1683               	bsf	3,5	;RP0=1, select bank3
  2141  0F37  1703               	bsf	3,6	;RP1=1, select bank3
  2142  0F38  00BF               	movwf	(_main$662+1)^(0+384)
  2143  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0F3B  0849               	movf	?___ftadd+2,w
  2146  0F3C  1683               	bsf	3,5	;RP0=1, select bank3
  2147  0F3D  1703               	bsf	3,6	;RP1=1, select bank3
  2148  0F3E  00C0               	movwf	(_main$662+2)^(0+384)
  2149                           
  2150                           ;main.c: 61: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * pow(ratio, 2)) + (0.00
      +                          18 * pow(ratio, 3)) + (-0.003333333 * pow(ratio, 4)) + (-0.001923077 * pow(ratio, 5)) + 
      +                          (1.130128205 * pow(ratio, 6));
  2151  0F3F  3080               	movlw	128
  2152  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0F42  00C7               	movwf	___ftadd@f1
  2155  0F43  30B7               	movlw	183
  2156  0F44  00C8               	movwf	___ftadd@f1+1
  2157  0F45  3039               	movlw	57
  2158  0F46  00C9               	movwf	___ftadd@f1+2
  2159  0F47  1683               	bsf	3,5	;RP0=1, select bank3
  2160  0F48  1703               	bsf	3,6	;RP1=1, select bank3
  2161  0F49  083E               	movf	_main$662^(0+384),w
  2162  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0F4C  00CA               	movwf	___ftadd@f2
  2165  0F4D  1683               	bsf	3,5	;RP0=1, select bank3
  2166  0F4E  1703               	bsf	3,6	;RP1=1, select bank3
  2167  0F4F  083F               	movf	(_main$662+1)^(0+384),w
  2168  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0F52  00CB               	movwf	___ftadd@f2+1
  2171  0F53  1683               	bsf	3,5	;RP0=1, select bank3
  2172  0F54  1703               	bsf	3,6	;RP1=1, select bank3
  2173  0F55  0840               	movf	(_main$662+2)^(0+384),w
  2174  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0F58  00CC               	movwf	___ftadd@f2+2
  2177  0F59  160A  118A  22E8  120A  158A  	fcall	___ftadd
  2178  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0F60  0847               	movf	?___ftadd,w
  2181  0F61  1683               	bsf	3,5	;RP0=1, select bank3
  2182  0F62  1703               	bsf	3,6	;RP1=1, select bank3
  2183  0F63  00C9               	movwf	main@co2^(0+384)
  2184  0F64  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0F65  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0F66  0848               	movf	?___ftadd+1,w
  2187  0F67  1683               	bsf	3,5	;RP0=1, select bank3
  2188  0F68  1703               	bsf	3,6	;RP1=1, select bank3
  2189  0F69  00CA               	movwf	(main@co2+1)^(0+384)
  2190  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0F6C  0849               	movf	?___ftadd+2,w
  2193  0F6D  1683               	bsf	3,5	;RP0=1, select bank3
  2194  0F6E  1703               	bsf	3,6	;RP1=1, select bank3
  2195  0F6F  00CB               	movwf	(main@co2+2)^(0+384)
  2196                           
  2197                           ;main.c: 62: co2 = co2 * 415.58;
  2198  0F70  30CA               	movlw	202
  2199  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0F73  00A7               	movwf	___ftmul@f1
  2202  0F74  30CF               	movlw	207
  2203  0F75  00A8               	movwf	___ftmul@f1+1
  2204  0F76  3043               	movlw	67
  2205  0F77  00A9               	movwf	___ftmul@f1+2
  2206  0F78  1683               	bsf	3,5	;RP0=1, select bank3
  2207  0F79  1703               	bsf	3,6	;RP1=1, select bank3
  2208  0F7A  0849               	movf	main@co2^(0+384),w
  2209  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  2210  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  2211  0F7D  00AA               	movwf	___ftmul@f2
  2212  0F7E  1683               	bsf	3,5	;RP0=1, select bank3
  2213  0F7F  1703               	bsf	3,6	;RP1=1, select bank3
  2214  0F80  084A               	movf	(main@co2+1)^(0+384),w
  2215  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  2216  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  2217  0F83  00AB               	movwf	___ftmul@f2+1
  2218  0F84  1683               	bsf	3,5	;RP0=1, select bank3
  2219  0F85  1703               	bsf	3,6	;RP1=1, select bank3
  2220  0F86  084B               	movf	(main@co2+2)^(0+384),w
  2221  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  2222  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  2223  0F89  00AC               	movwf	___ftmul@f2+2
  2224  0F8A  160A  118A  2215  120A  158A  	fcall	___ftmul
  2225  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0F91  0827               	movf	?___ftmul,w
  2228  0F92  1683               	bsf	3,5	;RP0=1, select bank3
  2229  0F93  1703               	bsf	3,6	;RP1=1, select bank3
  2230  0F94  00C9               	movwf	main@co2^(0+384)
  2231  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0F97  0828               	movf	?___ftmul+1,w
  2234  0F98  1683               	bsf	3,5	;RP0=1, select bank3
  2235  0F99  1703               	bsf	3,6	;RP1=1, select bank3
  2236  0F9A  00CA               	movwf	(main@co2+1)^(0+384)
  2237  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0F9D  0829               	movf	?___ftmul+2,w
  2240  0F9E  1683               	bsf	3,5	;RP0=1, select bank3
  2241  0F9F  1703               	bsf	3,6	;RP1=1, select bank3
  2242  0FA0  00CB               	movwf	(main@co2+2)^(0+384)
  2243                           
  2244                           ;main.c: 63: char buffer[16];
  2245                           ;main.c: 64: sprintf(buffer, "CO2: %.2f ppm  ", co2);
  2246  0FA1  30D4               	movlw	(STR_1-__stringbase)& (0+255)
  2247  0FA2  1283               	bcf	3,5	;RP0=0, select bank0
  2248  0FA3  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0FA4  00ED               	movwf	??_main
  2250  0FA5  086D               	movf	??_main,w
  2251  0FA6  00DA               	movwf	sprintf@f
  2252  0FA7  1683               	bsf	3,5	;RP0=1, select bank3
  2253  0FA8  1703               	bsf	3,6	;RP1=1, select bank3
  2254  0FA9  0849               	movf	main@co2^(0+384),w
  2255  0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  2256  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  2257  0FAC  00DB               	movwf	?_sprintf+1
  2258  0FAD  1683               	bsf	3,5	;RP0=1, select bank3
  2259  0FAE  1703               	bsf	3,6	;RP1=1, select bank3
  2260  0FAF  084A               	movf	(main@co2+1)^(0+384),w
  2261  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0FB2  00DC               	movwf	?_sprintf+2
  2264  0FB3  1683               	bsf	3,5	;RP0=1, select bank3
  2265  0FB4  1703               	bsf	3,6	;RP1=1, select bank3
  2266  0FB5  084B               	movf	(main@co2+2)^(0+384),w
  2267  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0FB8  00DD               	movwf	?_sprintf+3
  2270  0FB9  3093               	movlw	main@buffer& (0+255)
  2271  0FBA  120A  118A  21A0  120A  158A  	fcall	_sprintf
  2272                           
  2273                           ;main.c: 65: printToLCD(buffer);
  2274  0FBF  3093               	movlw	main@buffer& (0+255)
  2275  0FC0  00F2               	movwf	printToLCD@STR
  2276  0FC1  3001               	movlw	1
  2277  0FC2  00F3               	movwf	printToLCD@STR+1
  2278  0FC3  160A  158A  221C  120A  158A  	fcall	_printToLCD
  2279                           
  2280                           ;main.c: 66: if(co2 > 9)
  2281  0FC8  3000               	movlw	0
  2282  0FC9  00F0               	movwf	___ftge@ff1
  2283  0FCA  3010               	movlw	16
  2284  0FCB  00F1               	movwf	___ftge@ff1+1
  2285  0FCC  3041               	movlw	65
  2286  0FCD  00F2               	movwf	___ftge@ff1+2
  2287  0FCE  1683               	bsf	3,5	;RP0=1, select bank3
  2288  0FCF  1703               	bsf	3,6	;RP1=1, select bank3
  2289  0FD0  0849               	movf	main@co2^(0+384),w
  2290  0FD1  00F3               	movwf	___ftge@ff2
  2291  0FD2  084A               	movf	(main@co2+1)^(0+384),w
  2292  0FD3  00F4               	movwf	___ftge@ff2+1
  2293  0FD4  084B               	movf	(main@co2+2)^(0+384),w
  2294  0FD5  00F5               	movwf	___ftge@ff2+2
  2295  0FD6  160A  158A  238F  120A  158A  	fcall	___ftge
  2296  0FDB  1803               	btfsc	3,0
  2297  0FDC  2FE5               	goto	l3172
  2298                           
  2299                           ;main.c: 67: {
  2300                           ;main.c: 68: instCTRL(0xC0);
  2301  0FDD  30C0               	movlw	192
  2302  0FDE  160A  158A  2188  120A  158A  	fcall	_instCTRL
  2303                           
  2304                           ;main.c: 69: printToLCD("CO2 levels high! ");
  2305  0FE3  30B0               	movlw	low (STR_2-__stringbase)
  2306  0FE4  2FEC               	goto	L1
  2307  0FE5                     l3172:	
  2308                           ;main.c: 70: }
  2309                           
  2310                           
  2311                           ;main.c: 71: else
  2312                           ;main.c: 72: {
  2313                           ;main.c: 73: instCTRL(0xC0);
  2314  0FE5  30C0               	movlw	192
  2315  0FE6  160A  158A  2188  120A  158A  	fcall	_instCTRL
  2316                           
  2317                           ;main.c: 74: printToLCD("CO2 levels are OK");
  2318  0FEB  30C2               	movlw	low (STR_3-__stringbase)
  2319  0FEC                     L1:	
  2320  0FEC  00F2               	movwf	printToLCD@STR
  2321  0FED  3080               	movlw	128
  2322  0FEE  00F3               	movwf	printToLCD@STR+1
  2323  0FEF  160A  158A  221C  120A  158A  	fcall	_printToLCD
  2324                           
  2325                           ;main.c: 75: }
  2326                           ;main.c: 76: _delay((unsigned long)((50)*(4000000/4000.0)));
  2327  0FF4  3041               	movlw	65
  2328  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0FF7  00EE               	movwf	??_main+1
  2331  0FF8  30EE               	movlw	238
  2332  0FF9  00ED               	movwf	??_main
  2333  0FFA                     u4317:	
  2334  0FFA  0BED               	decfsz	??_main,f
  2335  0FFB  2FFA               	goto	u4317
  2336  0FFC  0BEE               	decfsz	??_main+1,f
  2337  0FFD  2FFA               	goto	u4317
  2338  0FFE  0000               	nop
  2339                           
  2340                           ;main.c: 77: }
  2341  0FFF  2B89               	goto	l3124
  2342  1000                     __end_of_main:	
  2343                           
  2344                           	psect	text1
  2345  01A0                     __ptext1:	
  2346 ;; *************** function _sprintf *****************
  2347 ;; Defined at:
  2348 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  sp              1    wreg     PTR unsigned char 
  2351 ;;		 -> main@buffer(16), 
  2352 ;;  f               1   58[BANK0 ] PTR const unsigned char 
  2353 ;;		 -> STR_1(16), 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  2356 ;;		 -> main@buffer(16), 
  2357 ;;  vd              4    8[BANK1 ] unsigned long 
  2358 ;;  vd              4   12[BANK1 ] unsigned long 
  2359 ;;  _val            4   21[BANK1 ] struct .
  2360 ;;  fval            3   30[BANK1 ] struct .
  2361 ;;  integ           3   18[BANK1 ] struct .
  2362 ;;  ival            3    0        struct .
  2363 ;;  prec            2   28[BANK1 ] int 
  2364 ;;  exp             2   25[BANK1 ] int 
  2365 ;;  flag            2   16[BANK1 ] unsigned short 
  2366 ;;  width           2    0        int 
  2367 ;;  c               1   33[BANK1 ] char 
  2368 ;;  ap              1    7[BANK1 ] PTR void [1]
  2369 ;;		 -> ?_sprintf(2), 
  2370 ;;  d               1    0        unsigned char 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2   58[BANK0 ] int 
  2373 ;; Registers used:
  2374 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         0       4       0       0       0
  2381 ;;      Locals:         0       0      34       0       0
  2382 ;;      Temps:          0       6       0       0       0
  2383 ;;      Totals:         0      10      34       0       0
  2384 ;;Total ram usage:       44 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    3
  2387 ;; This function calls:
  2388 ;;		___awdiv
  2389 ;;		___ftadd
  2390 ;;		___ftge
  2391 ;;		___ftmul
  2392 ;;		___ftneg
  2393 ;;		___ftsub
  2394 ;;		___fttol
  2395 ;;		___lldiv
  2396 ;;		___llmod
  2397 ;;		___lltoft
  2398 ;;		___wmul
  2399 ;;		__div_to_l_
  2400 ;;		__tdiv_to_l_
  2401 ;;		_fround
  2402 ;;		_isdigit
  2403 ;;		_scale
  2404 ;; This function is called by:
  2405 ;;		_main
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           
  2410                           ;psect for function _sprintf
  2411  01A0                     _sprintf:	
  2412                           
  2413                           ;incstack = 0
  2414                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2415                           ;sprintf@sp stored from wreg
  2416  01A0  1683               	bsf	3,5	;RP0=1, select bank1
  2417  01A1  1303               	bcf	3,6	;RP1=0, select bank1
  2418  01A2  00BB               	movwf	sprintf@sp^(0+128)
  2419                           
  2420                           ;doprnt.c: 494: va_list ap;
  2421                           ;doprnt.c: 499: signed char c;
  2422                           ;doprnt.c: 501: int width;
  2423                           ;doprnt.c: 504: int prec;
  2424                           ;doprnt.c: 508: unsigned short flag;
  2425                           ;doprnt.c: 515: char d;
  2426                           ;doprnt.c: 516: double fval, integ;
  2427                           ;doprnt.c: 517: int exp;
  2428                           ;doprnt.c: 518: double ival;
  2429                           ;doprnt.c: 519: union {
  2430                           ;doprnt.c: 520: unsigned long _val;
  2431                           ;doprnt.c: 521: struct {
  2432                           ;doprnt.c: 522: const char * _cp;
  2433                           ;doprnt.c: 523: unsigned _len;
  2434                           ;doprnt.c: 524: } _str;
  2435                           ;doprnt.c: 525: } _val;
  2436                           ;doprnt.c: 542: *ap = __va_start();
  2437  01A3  305B               	movlw	(?_sprintf+1)& (0+255)
  2438  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2439  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2440  01A6  00DE               	movwf	??_sprintf
  2441  01A7  085E               	movf	??_sprintf,w
  2442  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2443  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  2444  01AA  00A7               	movwf	sprintf@ap^(0+128)
  2445  01AB                     l3096:	
  2446                           ;doprnt.c: 545: while(c = *f++) {
  2447                           
  2448  01AB  3001               	movlw	1
  2449  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2450  01AD  07DA               	addwf	sprintf@f,f
  2451  01AE  30FF               	movlw	-1
  2452  01AF  075A               	addwf	sprintf@f,w
  2453  01B0  0084               	movwf	4
  2454  01B1  160A  118A  200A  120A  118A  	fcall	stringdir
  2455  01B6  00DE               	movwf	??_sprintf
  2456  01B7  085E               	movf	??_sprintf,w
  2457  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  2458  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  2459  01BA  00C1               	movwf	sprintf@c^(0+128)
  2460  01BB  08C1               	movf	sprintf@c^(0+128),f
  2461  01BC  1903               	btfsc	3,2
  2462  01BD  2FF3               	goto	l3098
  2463                           
  2464                           ;doprnt.c: 547: if(c != '%')
  2465  01BE  0841               	movf	sprintf@c^(0+128),w
  2466  01BF  3A25               	xorlw	37
  2467  01C0  1903               	skipnz
  2468  01C1  29C6               	goto	l2912
  2469                           
  2470                           ;doprnt.c: 549: {
  2471                           ;doprnt.c: 550: ((*sp++ = (c)));
  2472  01C2  0841               	movf	sprintf@c^(0+128),w
  2473  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  2474  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  2475  01C5  2FE2               	goto	L7
  2476  01C6                     l2912:	
  2477                           ;doprnt.c: 551: continue;
  2478                           
  2479                           
  2480                           ;doprnt.c: 552: }
  2481                           ;doprnt.c: 557: flag = 0;
  2482  01C6  01B0               	clrf	sprintf@flag^(0+128)
  2483  01C7  01B1               	clrf	(sprintf@flag+1)^(0+128)
  2484                           
  2485                           ;doprnt.c: 620: if(*f == '.') {
  2486  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2487  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2488  01CA  085A               	movf	sprintf@f,w
  2489  01CB  0084               	movwf	4
  2490  01CC  160A  118A  200A  120A  118A  	fcall	stringdir
  2491  01D1  3A2E               	xorlw	46
  2492  01D2  1D03               	skipz
  2493  01D3  2A26               	goto	l2928
  2494                           
  2495                           ;doprnt.c: 621: flag |= 0x4000;
  2496  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  2497  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  2498  01D6  1731               	bsf	(sprintf@flag^(0+128)+1),6
  2499                           
  2500                           ;doprnt.c: 622: f++;
  2501  01D7  3001               	movlw	1
  2502  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  2503  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  2504  01DA  00DE               	movwf	??_sprintf
  2505  01DB  085E               	movf	??_sprintf,w
  2506  01DC  07DA               	addwf	sprintf@f,f
  2507                           
  2508                           ;doprnt.c: 629: {
  2509                           ;doprnt.c: 630: prec = 0;
  2510  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  2511  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  2512  01DF  01BC               	clrf	sprintf@prec^(0+128)
  2513  01E0  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2514  01E1                     l2926:	
  2515                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  2516                           
  2517  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  2518  01E2  085A               	movf	sprintf@f,w
  2519  01E3  0084               	movwf	4
  2520  01E4  160A  118A  200A  120A  118A  	fcall	stringdir
  2521  01E9  160A  158A  217A  120A  118A  	fcall	_isdigit
  2522  01EE  1C03               	btfss	3,0
  2523  01EF  2A2E               	goto	l2934
  2524                           
  2525                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  2526  01F0  1683               	bsf	3,5	;RP0=1, select bank1
  2527  01F1  1303               	bcf	3,6	;RP1=0, select bank1
  2528  01F2  083D               	movf	(sprintf@prec+1)^(0+128),w
  2529  01F3  01F1               	clrf	___wmul@multiplier+1
  2530  01F4  07F1               	addwf	___wmul@multiplier+1,f
  2531  01F5  083C               	movf	sprintf@prec^(0+128),w
  2532  01F6  01F0               	clrf	___wmul@multiplier
  2533  01F7  07F0               	addwf	___wmul@multiplier,f
  2534  01F8  300A               	movlw	10
  2535  01F9  00F2               	movwf	___wmul@multiplicand
  2536  01FA  3000               	movlw	0
  2537  01FB  00F3               	movwf	___wmul@multiplicand+1
  2538  01FC  160A  158A  223F  120A  118A  	fcall	___wmul
  2539  0201  1283               	bcf	3,5	;RP0=0, select bank0
  2540  0202  1303               	bcf	3,6	;RP1=0, select bank0
  2541  0203  085A               	movf	sprintf@f,w
  2542  0204  0084               	movwf	4
  2543  0205  160A  118A  200A  120A  118A  	fcall	stringdir
  2544  020A  0770               	addwf	?___wmul,w
  2545  020B  00DE               	movwf	??_sprintf
  2546  020C  3000               	movlw	0
  2547  020D  1803               	skipnc
  2548  020E  3001               	movlw	1
  2549  020F  0771               	addwf	?___wmul+1,w
  2550  0210  00DF               	movwf	??_sprintf+1
  2551  0211  085E               	movf	??_sprintf,w
  2552  0212  3ED0               	addlw	208
  2553  0213  1683               	bsf	3,5	;RP0=1, select bank1
  2554  0214  1303               	bcf	3,6	;RP1=0, select bank1
  2555  0215  00BC               	movwf	sprintf@prec^(0+128)
  2556  0216  1283               	bcf	3,5	;RP0=0, select bank0
  2557  0217  1303               	bcf	3,6	;RP1=0, select bank0
  2558  0218  085F               	movf	??_sprintf+1,w
  2559  0219  1803               	skipnc
  2560  021A  3E01               	addlw	1
  2561  021B  3EFF               	addlw	255
  2562  021C  1683               	bsf	3,5	;RP0=1, select bank1
  2563  021D  1303               	bcf	3,6	;RP1=0, select bank1
  2564  021E  00BD               	movwf	(sprintf@prec+1)^(0+128)
  2565  021F  3001               	movlw	1
  2566  0220  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0221  1303               	bcf	3,6	;RP1=0, select bank0
  2568  0222  00DE               	movwf	??_sprintf
  2569  0223  085E               	movf	??_sprintf,w
  2570  0224  07DA               	addwf	sprintf@f,f
  2571  0225  29E1               	goto	l2926
  2572  0226                     l2928:	
  2573                           ;doprnt.c: 633: }
  2574                           ;doprnt.c: 634: } else {
  2575                           
  2576                           
  2577                           ;doprnt.c: 635: prec = 0;
  2578  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0227  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0228  01BC               	clrf	sprintf@prec^(0+128)
  2581  0229  01BD               	clrf	(sprintf@prec+1)^(0+128)
  2582                           
  2583                           ;doprnt.c: 637: flag |= 0x1000;
  2584  022A  1631               	bsf	(sprintf@flag^(0+128)+1),4
  2585                           
  2586                           ;doprnt.c: 639: }
  2587                           ;doprnt.c: 644: switch(c = *f++) {
  2588  022B  2A2E               	goto	l2934
  2589  022C                     l124:	
  2590                           ;doprnt.c: 671: case 'f':
  2591                           
  2592                           ;doprnt.c: 647: goto alldone;
  2593                           
  2594                           ;doprnt.c: 646: case 0:
  2595                           
  2596                           
  2597                           ;doprnt.c: 672: flag |= 0x400;
  2598  022C  1531               	bsf	(sprintf@flag^(0+128)+1),2
  2599                           
  2600                           ;doprnt.c: 673: break;
  2601  022D  2A44               	goto	l2936
  2602  022E                     l2934:	
  2603                           ;doprnt.c: 831: }
  2604                           
  2605                           ;doprnt.c: 822: continue;
  2606                           
  2607                           ;doprnt.c: 811: default:
  2608                           
  2609  022E  3001               	movlw	1
  2610  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2611  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2612  0231  07DA               	addwf	sprintf@f,f
  2613  0232  30FF               	movlw	-1
  2614  0233  075A               	addwf	sprintf@f,w
  2615  0234  0084               	movwf	4
  2616  0235  160A  118A  200A  120A  118A  	fcall	stringdir
  2617  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2618  023B  1303               	bcf	3,6	;RP1=0, select bank1
  2619  023C  00C1               	movwf	sprintf@c^(0+128)
  2620                           
  2621                           ; Switch size 1, requested type "space"
  2622                           ; Number of cases is 2, Range of values is 0 to 102
  2623                           ; switch strategies available:
  2624                           ; Name         Instructions Cycles
  2625                           ; simple_byte            7     4 (average)
  2626                           ; jumptable            260     6 (fixed)
  2627                           ;	Chosen strategy is simple_byte
  2628  023D  3A00               	xorlw	0	; case 0
  2629  023E  1903               	skipnz
  2630  023F  2FF3               	goto	l3098
  2631  0240  3A66               	xorlw	102	; case 102
  2632  0241  1903               	skipnz
  2633  0242  2A2C               	goto	l124
  2634  0243  29AB               	goto	l3096
  2635  0244                     l2936:	
  2636                           
  2637                           ;doprnt.c: 834: if(flag & (0x700)) {
  2638  0244  3000               	movlw	0
  2639  0245  0530               	andwf	sprintf@flag^(0+128),w
  2640  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2641  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2642  0248  00DE               	movwf	??_sprintf
  2643  0249  3007               	movlw	7
  2644  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2645  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2646  024C  0531               	andwf	(sprintf@flag+1)^(0+128),w
  2647  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2648  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2649  024F  00DF               	movwf	??_sprintf+1
  2650  0250  085F               	movf	??_sprintf+1,w
  2651  0251  045E               	iorwf	??_sprintf,w
  2652  0252  1903               	skipnz
  2653  0253  2F75               	goto	l3078
  2654                           
  2655                           ;doprnt.c: 836: if(flag & 0x1000)
  2656  0254  1683               	bsf	3,5	;RP0=1, select bank1
  2657  0255  1303               	bcf	3,6	;RP1=0, select bank1
  2658  0256  1E31               	btfss	(sprintf@flag+1)^(0+128),4
  2659  0257  2A5C               	goto	l2942
  2660                           
  2661                           ;doprnt.c: 838: prec = 6;
  2662  0258  3006               	movlw	6
  2663  0259  00BC               	movwf	sprintf@prec^(0+128)
  2664  025A  3000               	movlw	0
  2665  025B  00BD               	movwf	(sprintf@prec^(0+128)+1)
  2666  025C                     l2942:	
  2667                           
  2668                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2669  025C  0827               	movf	sprintf@ap^(0+128),w
  2670  025D  0084               	movwf	4
  2671  025E  1383               	bcf	3,7	;select IRP bank0
  2672  025F  0800               	movf	0,w
  2673  0260  00BE               	movwf	sprintf@fval^(0+128)
  2674  0261  0A84               	incf	4,f
  2675  0262  0800               	movf	0,w
  2676  0263  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2677  0264  0A84               	incf	4,f
  2678  0265  0800               	movf	0,w
  2679  0266  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2680  0267  3003               	movlw	3
  2681  0268  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0269  1303               	bcf	3,6	;RP1=0, select bank0
  2683  026A  00DE               	movwf	??_sprintf
  2684  026B  085E               	movf	??_sprintf,w
  2685  026C  1683               	bsf	3,5	;RP0=1, select bank1
  2686  026D  1303               	bcf	3,6	;RP1=0, select bank1
  2687  026E  07A7               	addwf	sprintf@ap^(0+128),f
  2688                           
  2689                           ;doprnt.c: 840: if(fval < 0.0) {
  2690  026F  083E               	movf	sprintf@fval^(0+128),w
  2691  0270  00F0               	movwf	___ftge@ff1
  2692  0271  083F               	movf	(sprintf@fval+1)^(0+128),w
  2693  0272  00F1               	movwf	___ftge@ff1+1
  2694  0273  0840               	movf	(sprintf@fval+2)^(0+128),w
  2695  0274  00F2               	movwf	___ftge@ff1+2
  2696  0275  3000               	movlw	0
  2697  0276  00F3               	movwf	___ftge@ff2
  2698  0277  3000               	movlw	0
  2699  0278  00F4               	movwf	___ftge@ff2+1
  2700  0279  3000               	movlw	0
  2701  027A  00F5               	movwf	___ftge@ff2+2
  2702  027B  160A  158A  238F  120A  118A  	fcall	___ftge
  2703  0280  1803               	btfsc	3,0
  2704  0281  2A9B               	goto	l2952
  2705                           
  2706                           ;doprnt.c: 841: fval = -fval;
  2707  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2708  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2709  0284  083E               	movf	sprintf@fval^(0+128),w
  2710  0285  00F0               	movwf	___ftneg@f1
  2711  0286  083F               	movf	(sprintf@fval+1)^(0+128),w
  2712  0287  00F1               	movwf	___ftneg@f1+1
  2713  0288  0840               	movf	(sprintf@fval+2)^(0+128),w
  2714  0289  00F2               	movwf	___ftneg@f1+2
  2715  028A  120A  158A  2003  120A  118A  	fcall	___ftneg
  2716  028F  0870               	movf	?___ftneg,w
  2717  0290  1683               	bsf	3,5	;RP0=1, select bank1
  2718  0291  1303               	bcf	3,6	;RP1=0, select bank1
  2719  0292  00BE               	movwf	sprintf@fval^(0+128)
  2720  0293  0871               	movf	?___ftneg+1,w
  2721  0294  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2722  0295  0872               	movf	?___ftneg+2,w
  2723  0296  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2724                           
  2725                           ;doprnt.c: 842: flag |= 0x03;
  2726  0297  3003               	movlw	3
  2727  0298  04B0               	iorwf	sprintf@flag^(0+128),f
  2728  0299  3000               	movlw	0
  2729  029A  04B1               	iorwf	(sprintf@flag+1)^(0+128),f
  2730  029B                     l2952:	
  2731                           
  2732                           ;doprnt.c: 843: }
  2733                           ;doprnt.c: 844: exp = 0;
  2734  029B  1683               	bsf	3,5	;RP0=1, select bank1
  2735  029C  1303               	bcf	3,6	;RP1=0, select bank1
  2736  029D  01B9               	clrf	sprintf@exp^(0+128)
  2737  029E  01BA               	clrf	(sprintf@exp+1)^(0+128)
  2738                           
  2739                           ;doprnt.c: 845: if( fval!=0) {
  2740  029F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2741  02A0  043F               	iorwf	(sprintf@fval+1)^(0+128),w
  2742  02A1  043E               	iorwf	sprintf@fval^(0+128),w
  2743  02A2  1903               	skipnz
  2744  02A3  2B97               	goto	l2980
  2745                           
  2746                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2747  02A4  30BE               	movlw	low sprintf@fval
  2748  02A5  0084               	movwf	4
  2749  02A6  1383               	bcf	3,7	;select IRP bank1
  2750  02A7  0800               	movf	0,w
  2751  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2752  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2753  02AA  00DE               	movwf	??_sprintf
  2754  02AB  0A84               	incf	4,f
  2755  02AC  0800               	movf	0,w
  2756  02AD  00DF               	movwf	??_sprintf+1
  2757  02AE  0A84               	incf	4,f
  2758  02AF  0800               	movf	0,w
  2759  02B0  00E0               	movwf	??_sprintf+2
  2760  02B1  0A84               	incf	4,f
  2761  02B2  0800               	movf	0,w
  2762  02B3  00E1               	movwf	??_sprintf+3
  2763  02B4  300F               	movlw	15
  2764  02B5                     u4005:	
  2765  02B5  1003               	clrc
  2766  02B6  0CE1               	rrf	??_sprintf+3,f
  2767  02B7  0CE0               	rrf	??_sprintf+2,f
  2768  02B8  0CDF               	rrf	??_sprintf+1,f
  2769  02B9  0CDE               	rrf	??_sprintf,f
  2770  02BA  3EFF               	addlw	-1
  2771  02BB  1D03               	skipz
  2772  02BC  2AB5               	goto	u4005
  2773  02BD  30FF               	movlw	255
  2774  02BE  055E               	andwf	??_sprintf,w
  2775  02BF  00E2               	movwf	??_sprintf+4
  2776  02C0  3000               	movlw	0
  2777  02C1  055F               	andwf	??_sprintf+1,w
  2778  02C2  00E3               	movwf	??_sprintf+5
  2779  02C3  0862               	movf	??_sprintf+4,w
  2780  02C4  3E82               	addlw	130
  2781  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  2782  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  2783  02C7  00B9               	movwf	sprintf@exp^(0+128)
  2784  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2785  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2786  02CA  0863               	movf	??_sprintf+5,w
  2787  02CB  1803               	skipnc
  2788  02CC  3E01               	addlw	1
  2789  02CD  3EFF               	addlw	255
  2790  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  2791  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  2792  02D0  00BA               	movwf	(sprintf@exp+1)^(0+128)
  2793                           
  2794                           ;doprnt.c: 847: exp--;
  2795  02D1  30FF               	movlw	255
  2796  02D2  07B9               	addwf	sprintf@exp^(0+128),f
  2797  02D3  1803               	skipnc
  2798  02D4  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2799  02D5  30FF               	movlw	255
  2800  02D6  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2801                           
  2802                           ;doprnt.c: 848: exp *= 3;
  2803  02D7  3003               	movlw	3
  2804  02D8  00F0               	movwf	___wmul@multiplier
  2805  02D9  3000               	movlw	0
  2806  02DA  00F1               	movwf	___wmul@multiplier+1
  2807  02DB  083A               	movf	(sprintf@exp+1)^(0+128),w
  2808  02DC  01F3               	clrf	___wmul@multiplicand+1
  2809  02DD  07F3               	addwf	___wmul@multiplicand+1,f
  2810  02DE  0839               	movf	sprintf@exp^(0+128),w
  2811  02DF  01F2               	clrf	___wmul@multiplicand
  2812  02E0  07F2               	addwf	___wmul@multiplicand,f
  2813  02E1  160A  158A  223F  120A  118A  	fcall	___wmul
  2814  02E6  0871               	movf	?___wmul+1,w
  2815  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2816  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2817  02E9  01BA               	clrf	(sprintf@exp+1)^(0+128)
  2818  02EA  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2819  02EB  0870               	movf	?___wmul,w
  2820  02EC  01B9               	clrf	sprintf@exp^(0+128)
  2821  02ED  07B9               	addwf	sprintf@exp^(0+128),f
  2822                           
  2823                           ;doprnt.c: 849: exp /= 10;
  2824  02EE  300A               	movlw	10
  2825  02EF  00F7               	movwf	___awdiv@divisor
  2826  02F0  3000               	movlw	0
  2827  02F1  00F8               	movwf	___awdiv@divisor+1
  2828  02F2  083A               	movf	(sprintf@exp+1)^(0+128),w
  2829  02F3  01FA               	clrf	___awdiv@dividend+1
  2830  02F4  07FA               	addwf	___awdiv@dividend+1,f
  2831  02F5  0839               	movf	sprintf@exp^(0+128),w
  2832  02F6  01F9               	clrf	___awdiv@dividend
  2833  02F7  07F9               	addwf	___awdiv@dividend,f
  2834  02F8  160A  158A  23EC  120A  118A  	fcall	___awdiv
  2835  02FD  0878               	movf	?___awdiv+1,w
  2836  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2837  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2838  0300  01BA               	clrf	(sprintf@exp+1)^(0+128)
  2839  0301  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2840  0302  0877               	movf	?___awdiv,w
  2841  0303  01B9               	clrf	sprintf@exp^(0+128)
  2842  0304  07B9               	addwf	sprintf@exp^(0+128),f
  2843                           
  2844                           ;doprnt.c: 850: if(exp < 0)
  2845  0305  1FBA               	btfss	(sprintf@exp+1)^(0+128),7
  2846  0306  2B0D               	goto	l2968
  2847                           
  2848                           ;doprnt.c: 851: exp--;
  2849  0307  30FF               	movlw	255
  2850  0308  07B9               	addwf	sprintf@exp^(0+128),f
  2851  0309  1803               	skipnc
  2852  030A  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2853  030B  30FF               	movlw	255
  2854  030C  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2855  030D                     l2968:	
  2856                           
  2857                           ;doprnt.c: 855: integ = scale(-exp);
  2858  030D  0339               	decf	sprintf@exp^(0+128),w
  2859  030E  3AFF               	xorlw	255
  2860  030F  120A  158A  20CE  120A  118A  	fcall	_scale
  2861  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2862  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2863  0316  0837               	movf	?_scale,w
  2864  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2865  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2866  0319  00B2               	movwf	sprintf@integ^(0+128)
  2867  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2868  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2869  031C  0838               	movf	?_scale+1,w
  2870  031D  1683               	bsf	3,5	;RP0=1, select bank1
  2871  031E  1303               	bcf	3,6	;RP1=0, select bank1
  2872  031F  00B3               	movwf	(sprintf@integ+1)^(0+128)
  2873  0320  1283               	bcf	3,5	;RP0=0, select bank0
  2874  0321  1303               	bcf	3,6	;RP1=0, select bank0
  2875  0322  0839               	movf	?_scale+2,w
  2876  0323  1683               	bsf	3,5	;RP0=1, select bank1
  2877  0324  1303               	bcf	3,6	;RP1=0, select bank1
  2878  0325  00B4               	movwf	(sprintf@integ+2)^(0+128)
  2879                           
  2880                           ;doprnt.c: 856: integ *= fval;
  2881  0326  083E               	movf	sprintf@fval^(0+128),w
  2882  0327  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0328  1303               	bcf	3,6	;RP1=0, select bank0
  2884  0329  00A7               	movwf	___ftmul@f1
  2885  032A  1683               	bsf	3,5	;RP0=1, select bank1
  2886  032B  1303               	bcf	3,6	;RP1=0, select bank1
  2887  032C  083F               	movf	(sprintf@fval+1)^(0+128),w
  2888  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2889  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2890  032F  00A8               	movwf	___ftmul@f1+1
  2891  0330  1683               	bsf	3,5	;RP0=1, select bank1
  2892  0331  1303               	bcf	3,6	;RP1=0, select bank1
  2893  0332  0840               	movf	(sprintf@fval+2)^(0+128),w
  2894  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2895  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2896  0335  00A9               	movwf	___ftmul@f1+2
  2897  0336  1683               	bsf	3,5	;RP0=1, select bank1
  2898  0337  1303               	bcf	3,6	;RP1=0, select bank1
  2899  0338  0832               	movf	sprintf@integ^(0+128),w
  2900  0339  1283               	bcf	3,5	;RP0=0, select bank0
  2901  033A  1303               	bcf	3,6	;RP1=0, select bank0
  2902  033B  00AA               	movwf	___ftmul@f2
  2903  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2904  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2905  033E  0833               	movf	(sprintf@integ+1)^(0+128),w
  2906  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2907  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2908  0341  00AB               	movwf	___ftmul@f2+1
  2909  0342  1683               	bsf	3,5	;RP0=1, select bank1
  2910  0343  1303               	bcf	3,6	;RP1=0, select bank1
  2911  0344  0834               	movf	(sprintf@integ+2)^(0+128),w
  2912  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0347  00AC               	movwf	___ftmul@f2+2
  2915  0348  160A  118A  2215  120A  118A  	fcall	___ftmul
  2916  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2917  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2918  034F  0827               	movf	?___ftmul,w
  2919  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2920  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2921  0352  00B2               	movwf	sprintf@integ^(0+128)
  2922  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2923  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2924  0355  0828               	movf	?___ftmul+1,w
  2925  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2926  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2927  0358  00B3               	movwf	(sprintf@integ+1)^(0+128)
  2928  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2929  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2930  035B  0829               	movf	?___ftmul+2,w
  2931  035C  1683               	bsf	3,5	;RP0=1, select bank1
  2932  035D  1303               	bcf	3,6	;RP1=0, select bank1
  2933  035E  00B4               	movwf	(sprintf@integ+2)^(0+128)
  2934                           
  2935                           ;doprnt.c: 857: if(integ < 1.0)
  2936  035F  0832               	movf	sprintf@integ^(0+128),w
  2937  0360  00F0               	movwf	___ftge@ff1
  2938  0361  0833               	movf	(sprintf@integ+1)^(0+128),w
  2939  0362  00F1               	movwf	___ftge@ff1+1
  2940  0363  0834               	movf	(sprintf@integ+2)^(0+128),w
  2941  0364  00F2               	movwf	___ftge@ff1+2
  2942  0365  3000               	movlw	0
  2943  0366  00F3               	movwf	___ftge@ff2
  2944  0367  3080               	movlw	128
  2945  0368  00F4               	movwf	___ftge@ff2+1
  2946  0369  303F               	movlw	63
  2947  036A  00F5               	movwf	___ftge@ff2+2
  2948  036B  160A  158A  238F  120A  118A  	fcall	___ftge
  2949  0370  1803               	btfsc	3,0
  2950  0371  2B7A               	goto	l2976
  2951                           
  2952                           ;doprnt.c: 858: exp--;
  2953  0372  30FF               	movlw	255
  2954  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2955  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2956  0375  07B9               	addwf	sprintf@exp^(0+128),f
  2957  0376  1803               	skipnc
  2958  0377  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2959  0378  30FF               	movlw	255
  2960  0379  2B96               	goto	L2
  2961  037A                     l2976:	
  2962                           
  2963                           ;doprnt.c: 859: else if(integ >= 10.0)
  2964  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2965  037B  1303               	bcf	3,6	;RP1=0, select bank1
  2966  037C  0832               	movf	sprintf@integ^(0+128),w
  2967  037D  00F0               	movwf	___ftge@ff1
  2968  037E  0833               	movf	(sprintf@integ+1)^(0+128),w
  2969  037F  00F1               	movwf	___ftge@ff1+1
  2970  0380  0834               	movf	(sprintf@integ+2)^(0+128),w
  2971  0381  00F2               	movwf	___ftge@ff1+2
  2972  0382  3000               	movlw	0
  2973  0383  00F3               	movwf	___ftge@ff2
  2974  0384  3020               	movlw	32
  2975  0385  00F4               	movwf	___ftge@ff2+1
  2976  0386  3041               	movlw	65
  2977  0387  00F5               	movwf	___ftge@ff2+2
  2978  0388  160A  158A  238F  120A  118A  	fcall	___ftge
  2979  038D  1C03               	btfss	3,0
  2980  038E  2B97               	goto	l2980
  2981                           
  2982                           ;doprnt.c: 860: exp++;
  2983  038F  3001               	movlw	1
  2984  0390  1683               	bsf	3,5	;RP0=1, select bank1
  2985  0391  1303               	bcf	3,6	;RP1=0, select bank1
  2986  0392  07B9               	addwf	sprintf@exp^(0+128),f
  2987  0393  1803               	skipnc
  2988  0394  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2989  0395  3000               	movlw	0
  2990  0396                     L2:	
  2991  0396  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2992  0397                     l2980:	
  2993                           
  2994                           ;doprnt.c: 861: }
  2995                           ;doprnt.c: 1121: if(prec <= 12)
  2996  0397  1683               	bsf	3,5	;RP0=1, select bank1
  2997  0398  1303               	bcf	3,6	;RP1=0, select bank1
  2998  0399  083D               	movf	(sprintf@prec+1)^(0+128),w
  2999  039A  3A80               	xorlw	128
  3000  039B  00FF               	movwf	127
  3001  039C  3080               	movlw	128
  3002  039D  027F               	subwf	127,w
  3003  039E  1D03               	skipz
  3004  039F  2BA2               	goto	u4045
  3005  03A0  300D               	movlw	13
  3006  03A1  023C               	subwf	sprintf@prec^(0+128),w
  3007  03A2                     u4045:	
  3008  03A2  1803               	skipnc
  3009  03A3  2BDD               	goto	l2984
  3010                           
  3011                           ;doprnt.c: 1122: fval += fround(prec);
  3012  03A4  1683               	bsf	3,5	;RP0=1, select bank1
  3013  03A5  1303               	bcf	3,6	;RP1=0, select bank1
  3014  03A6  083C               	movf	sprintf@prec^(0+128),w
  3015  03A7  120A  118A  2004  120A  118A  	fcall	_fround
  3016  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3017  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3018  03AE  0837               	movf	?_fround,w
  3019  03AF  00C7               	movwf	___ftadd@f1
  3020  03B0  0838               	movf	?_fround+1,w
  3021  03B1  00C8               	movwf	___ftadd@f1+1
  3022  03B2  0839               	movf	?_fround+2,w
  3023  03B3  00C9               	movwf	___ftadd@f1+2
  3024  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  3025  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  3026  03B6  083E               	movf	sprintf@fval^(0+128),w
  3027  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  3028  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  3029  03B9  00CA               	movwf	___ftadd@f2
  3030  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  3031  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  3032  03BC  083F               	movf	(sprintf@fval+1)^(0+128),w
  3033  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  3034  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  3035  03BF  00CB               	movwf	___ftadd@f2+1
  3036  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  3037  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  3038  03C2  0840               	movf	(sprintf@fval+2)^(0+128),w
  3039  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3040  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3041  03C5  00CC               	movwf	___ftadd@f2+2
  3042  03C6  160A  118A  22E8  120A  118A  	fcall	___ftadd
  3043  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3044  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3045  03CD  0847               	movf	?___ftadd,w
  3046  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  3047  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  3048  03D0  00BE               	movwf	sprintf@fval^(0+128)
  3049  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3050  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3051  03D3  0848               	movf	?___ftadd+1,w
  3052  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3053  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3054  03D6  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3055  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3056  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3057  03D9  0849               	movf	?___ftadd+2,w
  3058  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  3059  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  3060  03DC  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3061  03DD                     l2984:	
  3062                           
  3063                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3064  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  3065  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  3066  03DF  083A               	movf	(sprintf@exp+1)^(0+128),w
  3067  03E0  3A80               	xorlw	128
  3068  03E1  00FF               	movwf	127
  3069  03E2  3080               	movlw	128
  3070  03E3  027F               	subwf	127,w
  3071  03E4  1D03               	skipz
  3072  03E5  2BE8               	goto	u4055
  3073  03E6  300A               	movlw	10
  3074  03E7  0239               	subwf	sprintf@exp^(0+128),w
  3075  03E8                     u4055:	
  3076  03E8  1803               	skipnc
  3077  03E9  2C1B               	goto	l2992
  3078  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  3079  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  3080  03EC  0840               	movf	(sprintf@fval+2)^(0+128),w
  3081  03ED  043F               	iorwf	(sprintf@fval+1)^(0+128),w
  3082  03EE  043E               	iorwf	sprintf@fval^(0+128),w
  3083  03EF  1903               	skipnz
  3084  03F0  2C7C               	goto	l3008
  3085  03F1  083E               	movf	sprintf@fval^(0+128),w
  3086  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3087  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3088  03F4  00C0               	movwf	___fttol@f1
  3089  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  3090  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  3091  03F7  083F               	movf	(sprintf@fval+1)^(0+128),w
  3092  03F8  1283               	bcf	3,5	;RP0=0, select bank0
  3093  03F9  1303               	bcf	3,6	;RP1=0, select bank0
  3094  03FA  00C1               	movwf	___fttol@f1+1
  3095  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  3096  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  3097  03FD  0840               	movf	(sprintf@fval+2)^(0+128),w
  3098  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  3099  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  3100  0400  00C2               	movwf	___fttol@f1+2
  3101  0401  160A  158A  2588  120A  118A  	fcall	___fttol
  3102  0406  1283               	bcf	3,5	;RP0=0, select bank0
  3103  0407  1303               	bcf	3,6	;RP1=0, select bank0
  3104  0408  0843               	movf	?___fttol+3,w
  3105  0409  0442               	iorwf	?___fttol+2,w
  3106  040A  0441               	iorwf	?___fttol+1,w
  3107  040B  0440               	iorwf	?___fttol,w
  3108  040C  1D03               	skipz
  3109  040D  2C7C               	goto	l3008
  3110  040E  1683               	bsf	3,5	;RP0=1, select bank1
  3111  040F  1303               	bcf	3,6	;RP1=0, select bank1
  3112  0410  083A               	movf	(sprintf@exp+1)^(0+128),w
  3113  0411  3A80               	xorlw	128
  3114  0412  00FF               	movwf	127
  3115  0413  3080               	movlw	128
  3116  0414  027F               	subwf	127,w
  3117  0415  1D03               	skipz
  3118  0416  2C19               	goto	u4085
  3119  0417  3002               	movlw	2
  3120  0418  0239               	subwf	sprintf@exp^(0+128),w
  3121  0419                     u4085:	
  3122  0419  1C03               	skipc
  3123  041A  2C7C               	goto	l3008
  3124  041B                     l2992:	
  3125                           
  3126                           ;doprnt.c: 1129: if(integ < 4.294967296){
  3127  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3128  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3129  041D  0832               	movf	sprintf@integ^(0+128),w
  3130  041E  00F0               	movwf	___ftge@ff1
  3131  041F  0833               	movf	(sprintf@integ+1)^(0+128),w
  3132  0420  00F1               	movwf	___ftge@ff1+1
  3133  0421  0834               	movf	(sprintf@integ+2)^(0+128),w
  3134  0422  00F2               	movwf	___ftge@ff1+2
  3135  0423  3070               	movlw	112
  3136  0424  00F3               	movwf	___ftge@ff2
  3137  0425  3089               	movlw	137
  3138  0426  00F4               	movwf	___ftge@ff2+1
  3139  0427  3040               	movlw	64
  3140  0428  00F5               	movwf	___ftge@ff2+2
  3141  0429  160A  158A  238F  120A  118A  	fcall	___ftge
  3142  042E  1803               	btfsc	3,0
  3143  042F  2C32               	goto	l2996
  3144                           
  3145                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3146  0430  30F7               	movlw	247
  3147  0431  2C33               	goto	L3
  3148  0432                     l2996:	
  3149                           ;doprnt.c: 1131: }else{
  3150                           
  3151                           
  3152                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3153  0432  30F8               	movlw	248
  3154  0433                     L3:	
  3155  0433  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0434  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0435  07B9               	addwf	sprintf@exp^(0+128),f
  3158  0436  1803               	skipnc
  3159  0437  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  3160  0438  30FF               	movlw	255
  3161  0439  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  3162                           
  3163                           ;doprnt.c: 1133: }
  3164                           ;doprnt.c: 1134: integ = scale(exp);
  3165  043A  0839               	movf	sprintf@exp^(0+128),w
  3166  043B  120A  158A  20CE  120A  118A  	fcall	_scale
  3167  0440  1283               	bcf	3,5	;RP0=0, select bank0
  3168  0441  1303               	bcf	3,6	;RP1=0, select bank0
  3169  0442  0837               	movf	?_scale,w
  3170  0443  1683               	bsf	3,5	;RP0=1, select bank1
  3171  0444  1303               	bcf	3,6	;RP1=0, select bank1
  3172  0445  00B2               	movwf	sprintf@integ^(0+128)
  3173  0446  1283               	bcf	3,5	;RP0=0, select bank0
  3174  0447  1303               	bcf	3,6	;RP1=0, select bank0
  3175  0448  0838               	movf	?_scale+1,w
  3176  0449  1683               	bsf	3,5	;RP0=1, select bank1
  3177  044A  1303               	bcf	3,6	;RP1=0, select bank1
  3178  044B  00B3               	movwf	(sprintf@integ+1)^(0+128)
  3179  044C  1283               	bcf	3,5	;RP0=0, select bank0
  3180  044D  1303               	bcf	3,6	;RP1=0, select bank0
  3181  044E  0839               	movf	?_scale+2,w
  3182  044F  1683               	bsf	3,5	;RP0=1, select bank1
  3183  0450  1303               	bcf	3,6	;RP1=0, select bank1
  3184  0451  00B4               	movwf	(sprintf@integ+2)^(0+128)
  3185                           
  3186                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  3187  0452  083E               	movf	sprintf@fval^(0+128),w
  3188  0453  00F0               	movwf	__tdiv_to_l_@f1
  3189  0454  083F               	movf	(sprintf@fval+1)^(0+128),w
  3190  0455  00F1               	movwf	__tdiv_to_l_@f1+1
  3191  0456  0840               	movf	(sprintf@fval+2)^(0+128),w
  3192  0457  00F2               	movwf	__tdiv_to_l_@f1+2
  3193  0458  0832               	movf	sprintf@integ^(0+128),w
  3194  0459  00F3               	movwf	__tdiv_to_l_@f2
  3195  045A  0833               	movf	(sprintf@integ+1)^(0+128),w
  3196  045B  00F4               	movwf	__tdiv_to_l_@f2+1
  3197  045C  0834               	movf	(sprintf@integ+2)^(0+128),w
  3198  045D  00F5               	movwf	__tdiv_to_l_@f2+2
  3199  045E  120A  158A  200B  120A  118A  	fcall	__tdiv_to_l_
  3200  0463  0873               	movf	?__tdiv_to_l_+3,w
  3201  0464  1683               	bsf	3,5	;RP0=1, select bank1
  3202  0465  1303               	bcf	3,6	;RP1=0, select bank1
  3203  0466  00A6               	movwf	(_sprintf$144+3)^(0+128)
  3204  0467  0872               	movf	?__tdiv_to_l_+2,w
  3205  0468  00A5               	movwf	(_sprintf$144+2)^(0+128)
  3206  0469  0871               	movf	?__tdiv_to_l_+1,w
  3207  046A  00A4               	movwf	(_sprintf$144+1)^(0+128)
  3208  046B  0870               	movf	?__tdiv_to_l_,w
  3209  046C  00A3               	movwf	_sprintf$144^(0+128)
  3210  046D  0826               	movf	(_sprintf$144+3)^(0+128),w
  3211  046E  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3212  046F  0825               	movf	(_sprintf$144+2)^(0+128),w
  3213  0470  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3214  0471  0824               	movf	(_sprintf$144+1)^(0+128),w
  3215  0472  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3216  0473  0823               	movf	_sprintf$144^(0+128),w
  3217  0474  00B5               	movwf	sprintf@_val^(0+128)
  3218                           
  3219                           ;doprnt.c: 1138: fval = 0.0;
  3220  0475  3000               	movlw	0
  3221  0476  00BE               	movwf	sprintf@fval^(0+128)
  3222  0477  3000               	movlw	0
  3223  0478  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3224  0479  3000               	movlw	0
  3225  047A  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3226                           
  3227                           ;doprnt.c: 1139: } else {
  3228  047B  2CEB               	goto	l3012
  3229  047C                     l3008:	
  3230                           
  3231                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  3232  047C  1683               	bsf	3,5	;RP0=1, select bank1
  3233  047D  1303               	bcf	3,6	;RP1=0, select bank1
  3234  047E  083E               	movf	sprintf@fval^(0+128),w
  3235  047F  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0480  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0481  00C0               	movwf	___fttol@f1
  3238  0482  1683               	bsf	3,5	;RP0=1, select bank1
  3239  0483  1303               	bcf	3,6	;RP1=0, select bank1
  3240  0484  083F               	movf	(sprintf@fval+1)^(0+128),w
  3241  0485  1283               	bcf	3,5	;RP0=0, select bank0
  3242  0486  1303               	bcf	3,6	;RP1=0, select bank0
  3243  0487  00C1               	movwf	___fttol@f1+1
  3244  0488  1683               	bsf	3,5	;RP0=1, select bank1
  3245  0489  1303               	bcf	3,6	;RP1=0, select bank1
  3246  048A  0840               	movf	(sprintf@fval+2)^(0+128),w
  3247  048B  1283               	bcf	3,5	;RP0=0, select bank0
  3248  048C  1303               	bcf	3,6	;RP1=0, select bank0
  3249  048D  00C2               	movwf	___fttol@f1+2
  3250  048E  160A  158A  2588  120A  118A  	fcall	___fttol
  3251  0493  1283               	bcf	3,5	;RP0=0, select bank0
  3252  0494  1303               	bcf	3,6	;RP1=0, select bank0
  3253  0495  0843               	movf	?___fttol+3,w
  3254  0496  1683               	bsf	3,5	;RP0=1, select bank1
  3255  0497  1303               	bcf	3,6	;RP1=0, select bank1
  3256  0498  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3257  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3258  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3259  049B  0842               	movf	?___fttol+2,w
  3260  049C  1683               	bsf	3,5	;RP0=1, select bank1
  3261  049D  1303               	bcf	3,6	;RP1=0, select bank1
  3262  049E  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3263  049F  1283               	bcf	3,5	;RP0=0, select bank0
  3264  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  3265  04A1  0841               	movf	?___fttol+1,w
  3266  04A2  1683               	bsf	3,5	;RP0=1, select bank1
  3267  04A3  1303               	bcf	3,6	;RP1=0, select bank1
  3268  04A4  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3269  04A5  1283               	bcf	3,5	;RP0=0, select bank0
  3270  04A6  1303               	bcf	3,6	;RP1=0, select bank0
  3271  04A7  0840               	movf	?___fttol,w
  3272  04A8  1683               	bsf	3,5	;RP0=1, select bank1
  3273  04A9  1303               	bcf	3,6	;RP1=0, select bank1
  3274  04AA  00B5               	movwf	sprintf@_val^(0+128)
  3275                           
  3276                           ;doprnt.c: 1141: fval -= (double)_val._val;
  3277  04AB  0838               	movf	(sprintf@_val+3)^(0+128),w
  3278  04AC  00FB               	movwf	___lltoft@c+3
  3279  04AD  0837               	movf	(sprintf@_val+2)^(0+128),w
  3280  04AE  00FA               	movwf	___lltoft@c+2
  3281  04AF  0836               	movf	(sprintf@_val+1)^(0+128),w
  3282  04B0  00F9               	movwf	___lltoft@c+1
  3283  04B1  0835               	movf	sprintf@_val^(0+128),w
  3284  04B2  00F8               	movwf	___lltoft@c
  3285  04B3  160A  158A  2262  120A  118A  	fcall	___lltoft
  3286  04B8  0878               	movf	?___lltoft,w
  3287  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  3288  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  3289  04BB  00D4               	movwf	___ftsub@f2
  3290  04BC  0879               	movf	?___lltoft+1,w
  3291  04BD  00D5               	movwf	___ftsub@f2+1
  3292  04BE  087A               	movf	?___lltoft+2,w
  3293  04BF  00D6               	movwf	___ftsub@f2+2
  3294  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  3295  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  3296  04C2  083E               	movf	sprintf@fval^(0+128),w
  3297  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  3298  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  3299  04C5  00D7               	movwf	___ftsub@f1
  3300  04C6  1683               	bsf	3,5	;RP0=1, select bank1
  3301  04C7  1303               	bcf	3,6	;RP1=0, select bank1
  3302  04C8  083F               	movf	(sprintf@fval+1)^(0+128),w
  3303  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  3304  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  3305  04CB  00D8               	movwf	___ftsub@f1+1
  3306  04CC  1683               	bsf	3,5	;RP0=1, select bank1
  3307  04CD  1303               	bcf	3,6	;RP1=0, select bank1
  3308  04CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  3309  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  3310  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  3311  04D1  00D9               	movwf	___ftsub@f1+2
  3312  04D2  160A  158A  21BD  120A  118A  	fcall	___ftsub
  3313  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3314  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  3315  04D9  0854               	movf	?___ftsub,w
  3316  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  3317  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  3318  04DC  00BE               	movwf	sprintf@fval^(0+128)
  3319  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  3320  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  3321  04DF  0855               	movf	?___ftsub+1,w
  3322  04E0  1683               	bsf	3,5	;RP0=1, select bank1
  3323  04E1  1303               	bcf	3,6	;RP1=0, select bank1
  3324  04E2  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3325  04E3  1283               	bcf	3,5	;RP0=0, select bank0
  3326  04E4  1303               	bcf	3,6	;RP1=0, select bank0
  3327  04E5  0856               	movf	?___ftsub+2,w
  3328  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  3329  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  3330  04E8  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3331                           
  3332                           ;doprnt.c: 1142: exp = 0;
  3333  04E9  01B9               	clrf	sprintf@exp^(0+128)
  3334  04EA  01BA               	clrf	(sprintf@exp+1)^(0+128)
  3335  04EB                     l3012:	
  3336                           
  3337                           ;doprnt.c: 1143: }
  3338                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3339  04EB  01C1               	clrf	sprintf@c^(0+128)
  3340  04EC  0AC1               	incf	sprintf@c^(0+128),f
  3341  04ED  0841               	movf	sprintf@c^(0+128),w
  3342  04EE  3A0A               	xorlw	10
  3343  04EF  1903               	btfsc	3,2
  3344  04F0  2D41               	goto	l3026
  3345  04F1                     l3018:	
  3346                           
  3347                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  3348  04F1  0841               	movf	sprintf@c^(0+128),w
  3349  04F2  1283               	bcf	3,5	;RP0=0, select bank0
  3350  04F3  1303               	bcf	3,6	;RP1=0, select bank0
  3351  04F4  00DE               	movwf	??_sprintf
  3352  04F5  3001               	movlw	1
  3353  04F6                     u4115:	
  3354  04F6  1003               	clrc
  3355  04F7  0DDE               	rlf	??_sprintf,f
  3356  04F8  3EFF               	addlw	-1
  3357  04F9  1D03               	skipz
  3358  04FA  2CF6               	goto	u4115
  3359  04FB  1003               	clrc
  3360  04FC  0D5E               	rlf	??_sprintf,w
  3361  04FD  3E01               	addlw	low (_dpowers-__stringbase)
  3362  04FE  0084               	movwf	4
  3363  04FF  160A  118A  200A  120A  118A  	fcall	stringdir
  3364  0504  00DF               	movwf	??_sprintf+1
  3365  0505  160A  118A  200A  120A  118A  	fcall	stringdir
  3366  050A  00E0               	movwf	??_sprintf+2
  3367  050B  160A  118A  200A  120A  118A  	fcall	stringdir
  3368  0510  00E1               	movwf	??_sprintf+3
  3369  0511  160A  118A  200A  120A  118A  	fcall	stringdir
  3370  0516  00E2               	movwf	??_sprintf+4
  3371  0517  0862               	movf	??_sprintf+4,w
  3372  0518  1683               	bsf	3,5	;RP0=1, select bank1
  3373  0519  1303               	bcf	3,6	;RP1=0, select bank1
  3374  051A  0238               	subwf	(sprintf@_val+3)^(0+128),w
  3375  051B  1D03               	skipz
  3376  051C  2D33               	goto	u4125
  3377  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3378  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3379  051F  0861               	movf	??_sprintf+3,w
  3380  0520  1683               	bsf	3,5	;RP0=1, select bank1
  3381  0521  1303               	bcf	3,6	;RP1=0, select bank1
  3382  0522  0237               	subwf	(sprintf@_val+2)^(0+128),w
  3383  0523  1D03               	skipz
  3384  0524  2D33               	goto	u4125
  3385  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3386  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3387  0527  0860               	movf	??_sprintf+2,w
  3388  0528  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0529  1303               	bcf	3,6	;RP1=0, select bank1
  3390  052A  0236               	subwf	(sprintf@_val+1)^(0+128),w
  3391  052B  1D03               	skipz
  3392  052C  2D33               	goto	u4125
  3393  052D  1283               	bcf	3,5	;RP0=0, select bank0
  3394  052E  1303               	bcf	3,6	;RP1=0, select bank0
  3395  052F  085F               	movf	??_sprintf+1,w
  3396  0530  1683               	bsf	3,5	;RP0=1, select bank1
  3397  0531  1303               	bcf	3,6	;RP1=0, select bank1
  3398  0532  0235               	subwf	sprintf@_val^(0+128),w
  3399  0533                     u4125:	
  3400  0533  1C03               	btfss	3,0
  3401  0534  2D41               	goto	l3026
  3402                           
  3403                           ;doprnt.c: 1147: break;
  3404  0535  3001               	movlw	1
  3405  0536  1283               	bcf	3,5	;RP0=0, select bank0
  3406  0537  1303               	bcf	3,6	;RP1=0, select bank0
  3407  0538  00DE               	movwf	??_sprintf
  3408  0539  085E               	movf	??_sprintf,w
  3409  053A  1683               	bsf	3,5	;RP0=1, select bank1
  3410  053B  1303               	bcf	3,6	;RP1=0, select bank1
  3411  053C  07C1               	addwf	sprintf@c^(0+128),f
  3412  053D  0841               	movf	sprintf@c^(0+128),w
  3413  053E  3A0A               	xorlw	10
  3414  053F  1D03               	skipz
  3415  0540  2CF1               	goto	l3018
  3416  0541                     l3026:	
  3417                           
  3418                           ;doprnt.c: 1184: {
  3419                           ;doprnt.c: 1197: if(flag & 0x03)
  3420  0541  3003               	movlw	3
  3421  0542  0530               	andwf	sprintf@flag^(0+128),w
  3422  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0545  00DE               	movwf	??_sprintf
  3425  0546  3000               	movlw	0
  3426  0547  1683               	bsf	3,5	;RP0=1, select bank1
  3427  0548  1303               	bcf	3,6	;RP1=0, select bank1
  3428  0549  0531               	andwf	(sprintf@flag+1)^(0+128),w
  3429  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3430  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3431  054C  00DF               	movwf	??_sprintf+1
  3432  054D  085F               	movf	??_sprintf+1,w
  3433  054E  045E               	iorwf	??_sprintf,w
  3434  054F  1903               	skipnz
  3435  0550  2D62               	goto	l150
  3436                           
  3437                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  3438  0551  302D               	movlw	45
  3439  0552                     L4:	
  3440  0552  00DE               	movwf	??_sprintf
  3441  0553  1683               	bsf	3,5	;RP0=1, select bank1
  3442  0554  1303               	bcf	3,6	;RP1=0, select bank1
  3443  0555  083B               	movf	sprintf@sp^(0+128),w
  3444  0556  0084               	movwf	4
  3445  0557  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0558  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0559  085E               	movf	??_sprintf,w
  3448  055A  1783               	bsf	3,7	;select IRP bank2
  3449  055B  0080               	movwf	0
  3450  055C  3001               	movlw	1
  3451  055D  00DE               	movwf	??_sprintf
  3452  055E  085E               	movf	??_sprintf,w
  3453  055F  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0560  1303               	bcf	3,6	;RP1=0, select bank1
  3455  0561  07BB               	addwf	sprintf@sp^(0+128),f
  3456  0562                     l150:	
  3457  0562  30FF               	movlw	-1
  3458  0563  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0564  00DE               	movwf	??_sprintf
  3460  0565  085E               	movf	??_sprintf,w
  3461  0566  1683               	bsf	3,5	;RP0=1, select bank1
  3462  0567  1303               	bcf	3,6	;RP1=0, select bank1
  3463  0568  07C1               	addwf	sprintf@c^(0+128),f
  3464  0569  0841               	movf	sprintf@c^(0+128),w
  3465  056A  3AFF               	xorlw	-1
  3466  056B  1903               	btfsc	3,2
  3467  056C  2DE9               	goto	l3044
  3468                           
  3469                           ;doprnt.c: 1209: {
  3470                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  3471                           
  3472                           ;doprnt.c: 1204: }
  3473                           ;doprnt.c: 1205: while(c--) {
  3474  056D  0841               	movf	sprintf@c^(0+128),w
  3475  056E  1283               	bcf	3,5	;RP0=0, select bank0
  3476  056F  1303               	bcf	3,6	;RP1=0, select bank0
  3477  0570  00DE               	movwf	??_sprintf
  3478  0571  3001               	movlw	1
  3479  0572                     u4155:	
  3480  0572  1003               	clrc
  3481  0573  0DDE               	rlf	??_sprintf,f
  3482  0574  3EFF               	addlw	-1
  3483  0575  1D03               	skipz
  3484  0576  2D72               	goto	u4155
  3485  0577  1003               	clrc
  3486  0578  0D5E               	rlf	??_sprintf,w
  3487  0579  3E01               	addlw	low (_dpowers-__stringbase)
  3488  057A  0084               	movwf	4
  3489  057B  160A  118A  200A  120A  118A  	fcall	stringdir
  3490  0580  00F0               	movwf	___lldiv@divisor
  3491  0581  160A  118A  200A  120A  118A  	fcall	stringdir
  3492  0586  00F1               	movwf	___lldiv@divisor+1
  3493  0587  160A  118A  200A  120A  118A  	fcall	stringdir
  3494  058C  00F2               	movwf	___lldiv@divisor+2
  3495  058D  160A  118A  200A  120A  118A  	fcall	stringdir
  3496  0592  00F3               	movwf	___lldiv@divisor+3
  3497  0593  1683               	bsf	3,5	;RP0=1, select bank1
  3498  0594  1303               	bcf	3,6	;RP1=0, select bank1
  3499  0595  0838               	movf	(sprintf@_val+3)^(0+128),w
  3500  0596  00F7               	movwf	___lldiv@dividend+3
  3501  0597  0837               	movf	(sprintf@_val+2)^(0+128),w
  3502  0598  00F6               	movwf	___lldiv@dividend+2
  3503  0599  0836               	movf	(sprintf@_val+1)^(0+128),w
  3504  059A  00F5               	movwf	___lldiv@dividend+1
  3505  059B  0835               	movf	sprintf@_val^(0+128),w
  3506  059C  00F4               	movwf	___lldiv@dividend
  3507  059D  160A  158A  2449  120A  118A  	fcall	___lldiv
  3508  05A2  0873               	movf	?___lldiv+3,w
  3509  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  3510  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  3511  05A5  00AB               	movwf	(sprintf@vd+3)^(0+128)
  3512  05A6  0872               	movf	?___lldiv+2,w
  3513  05A7  00AA               	movwf	(sprintf@vd+2)^(0+128)
  3514  05A8  0871               	movf	?___lldiv+1,w
  3515  05A9  00A9               	movwf	(sprintf@vd+1)^(0+128)
  3516  05AA  0870               	movf	?___lldiv,w
  3517  05AB  00A8               	movwf	sprintf@vd^(0+128)
  3518                           
  3519                           ;doprnt.c: 1211: vd %= 10;
  3520  05AC  3000               	movlw	0
  3521  05AD  00F3               	movwf	___llmod@divisor+3
  3522  05AE  3000               	movlw	0
  3523  05AF  00F2               	movwf	___llmod@divisor+2
  3524  05B0  3000               	movlw	0
  3525  05B1  00F1               	movwf	___llmod@divisor+1
  3526  05B2  300A               	movlw	10
  3527  05B3  00F0               	movwf	___llmod@divisor
  3528  05B4  082B               	movf	(sprintf@vd+3)^(0+128),w
  3529  05B5  00F7               	movwf	___llmod@dividend+3
  3530  05B6  082A               	movf	(sprintf@vd+2)^(0+128),w
  3531  05B7  00F6               	movwf	___llmod@dividend+2
  3532  05B8  0829               	movf	(sprintf@vd+1)^(0+128),w
  3533  05B9  00F5               	movwf	___llmod@dividend+1
  3534  05BA  0828               	movf	sprintf@vd^(0+128),w
  3535  05BB  00F4               	movwf	___llmod@dividend
  3536  05BC  160A  158A  2343  120A  118A  	fcall	___llmod
  3537  05C1  0873               	movf	?___llmod+3,w
  3538  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  3539  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  3540  05C4  00AB               	movwf	(sprintf@vd+3)^(0+128)
  3541  05C5  0872               	movf	?___llmod+2,w
  3542  05C6  00AA               	movwf	(sprintf@vd+2)^(0+128)
  3543  05C7  0871               	movf	?___llmod+1,w
  3544  05C8  00A9               	movwf	(sprintf@vd+1)^(0+128)
  3545  05C9  0870               	movf	?___llmod,w
  3546  05CA  00A8               	movwf	sprintf@vd^(0+128)
  3547                           
  3548                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  3549  05CB  0828               	movf	sprintf@vd^(0+128),w
  3550  05CC  3E30               	addlw	48
  3551  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  3552  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  3553  05CF  2D52               	goto	L4
  3554  05D0                     l3038:	
  3555                           ;doprnt.c: 1213: }
  3556                           ;doprnt.c: 1215: }
  3557                           ;doprnt.c: 1216: while(exp > 0) {
  3558                           
  3559                           
  3560                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  3561  05D0  3030               	movlw	48
  3562  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  3563  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  3564  05D3  00DE               	movwf	??_sprintf
  3565  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  3566  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  3567  05D6  083B               	movf	sprintf@sp^(0+128),w
  3568  05D7  0084               	movwf	4
  3569  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  3570  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  3571  05DA  085E               	movf	??_sprintf,w
  3572  05DB  1783               	bsf	3,7	;select IRP bank2
  3573  05DC  0080               	movwf	0
  3574  05DD  3001               	movlw	1
  3575  05DE  00DE               	movwf	??_sprintf
  3576  05DF  085E               	movf	??_sprintf,w
  3577  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  3578  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  3579  05E2  07BB               	addwf	sprintf@sp^(0+128),f
  3580                           
  3581                           ;doprnt.c: 1218: exp--;
  3582  05E3  30FF               	movlw	255
  3583  05E4  07B9               	addwf	sprintf@exp^(0+128),f
  3584  05E5  1803               	skipnc
  3585  05E6  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  3586  05E7  30FF               	movlw	255
  3587  05E8  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  3588  05E9                     l3044:	
  3589  05E9  083A               	movf	(sprintf@exp+1)^(0+128),w
  3590  05EA  3A80               	xorlw	128
  3591  05EB  00FF               	movwf	127
  3592  05EC  3080               	movlw	128
  3593  05ED  027F               	subwf	127,w
  3594  05EE  1D03               	skipz
  3595  05EF  2DF2               	goto	u4175
  3596  05F0  3001               	movlw	1
  3597  05F1  0239               	subwf	sprintf@exp^(0+128),w
  3598  05F2                     u4175:	
  3599  05F2  1803               	skipnc
  3600  05F3  2DD0               	goto	l3038
  3601                           
  3602                           ;doprnt.c: 1219: }
  3603                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3604  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3605  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3606  05F6  083D               	movf	(sprintf@prec+1)^(0+128),w
  3607  05F7  3A80               	xorlw	128
  3608  05F8  00FF               	movwf	127
  3609  05F9  3080               	movlw	128
  3610  05FA  027F               	subwf	127,w
  3611  05FB  1D03               	skipz
  3612  05FC  2DFF               	goto	u4185
  3613  05FD  3009               	movlw	9
  3614  05FE  023C               	subwf	sprintf@prec^(0+128),w
  3615  05FF                     u4185:	
  3616  05FF  1C03               	skipc
  3617  0600  2E03               	goto	l3050
  3618                           
  3619                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3620  0601  3008               	movlw	8
  3621  0602  2E06               	goto	L5
  3622  0603                     l3050:	
  3623                           
  3624                           ;doprnt.c: 1222: else
  3625                           ;doprnt.c: 1223: c = prec;
  3626  0603  1683               	bsf	3,5	;RP0=1, select bank1
  3627  0604  1303               	bcf	3,6	;RP1=0, select bank1
  3628  0605  083C               	movf	sprintf@prec^(0+128),w
  3629  0606                     L5:	
  3630  0606  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0607  1303               	bcf	3,6	;RP1=0, select bank0
  3632  0608  00DE               	movwf	??_sprintf
  3633  0609  085E               	movf	??_sprintf,w
  3634  060A  1683               	bsf	3,5	;RP0=1, select bank1
  3635  060B  1303               	bcf	3,6	;RP1=0, select bank1
  3636  060C  00C1               	movwf	sprintf@c^(0+128)
  3637                           
  3638                           ;doprnt.c: 1224: prec -= c;
  3639  060D  0841               	movf	sprintf@c^(0+128),w
  3640  060E  1283               	bcf	3,5	;RP0=0, select bank0
  3641  060F  1303               	bcf	3,6	;RP1=0, select bank0
  3642  0610  00DE               	movwf	??_sprintf
  3643  0611  01DF               	clrf	??_sprintf+1
  3644  0612  1BDE               	btfsc	??_sprintf,7
  3645  0613  03DF               	decf	??_sprintf+1,f
  3646  0614  085E               	movf	??_sprintf,w
  3647  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3648  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3649  0617  02BC               	subwf	sprintf@prec^(0+128),f
  3650  0618  1283               	bcf	3,5	;RP0=0, select bank0
  3651  0619  1303               	bcf	3,6	;RP1=0, select bank0
  3652  061A  085F               	movf	??_sprintf+1,w
  3653  061B  1683               	bsf	3,5	;RP0=1, select bank1
  3654  061C  1303               	bcf	3,6	;RP1=0, select bank1
  3655  061D  1C03               	skipc
  3656  061E  03BD               	decf	(sprintf@prec+1)^(0+128),f
  3657  061F  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  3658                           
  3659                           ;doprnt.c: 1228: if(c)
  3660  0620  0841               	movf	sprintf@c^(0+128),w
  3661  0621  1903               	btfsc	3,2
  3662  0622  2E36               	goto	l3056
  3663                           
  3664                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  3665  0623  302E               	movlw	46
  3666  0624  1283               	bcf	3,5	;RP0=0, select bank0
  3667  0625  1303               	bcf	3,6	;RP1=0, select bank0
  3668  0626  00DE               	movwf	??_sprintf
  3669  0627  1683               	bsf	3,5	;RP0=1, select bank1
  3670  0628  1303               	bcf	3,6	;RP1=0, select bank1
  3671  0629  083B               	movf	sprintf@sp^(0+128),w
  3672  062A  0084               	movwf	4
  3673  062B  1283               	bcf	3,5	;RP0=0, select bank0
  3674  062C  1303               	bcf	3,6	;RP1=0, select bank0
  3675  062D  085E               	movf	??_sprintf,w
  3676  062E  1783               	bsf	3,7	;select IRP bank2
  3677  062F  0080               	movwf	0
  3678  0630  3001               	movlw	1
  3679  0631  00DE               	movwf	??_sprintf
  3680  0632  085E               	movf	??_sprintf,w
  3681  0633  1683               	bsf	3,5	;RP0=1, select bank1
  3682  0634  1303               	bcf	3,6	;RP1=0, select bank1
  3683  0635  07BB               	addwf	sprintf@sp^(0+128),f
  3684  0636                     l3056:	
  3685                           
  3686                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3687  0636  0841               	movf	sprintf@c^(0+128),w
  3688  0637  120A  158A  20CE  120A  118A  	fcall	_scale
  3689  063C  1283               	bcf	3,5	;RP0=0, select bank0
  3690  063D  1303               	bcf	3,6	;RP1=0, select bank0
  3691  063E  0837               	movf	?_scale,w
  3692  063F  1683               	bsf	3,5	;RP0=1, select bank1
  3693  0640  1303               	bcf	3,6	;RP1=0, select bank1
  3694  0641  00A0               	movwf	_sprintf$666^(0+128)
  3695  0642  1283               	bcf	3,5	;RP0=0, select bank0
  3696  0643  1303               	bcf	3,6	;RP1=0, select bank0
  3697  0644  0838               	movf	?_scale+1,w
  3698  0645  1683               	bsf	3,5	;RP0=1, select bank1
  3699  0646  1303               	bcf	3,6	;RP1=0, select bank1
  3700  0647  00A1               	movwf	(_sprintf$666+1)^(0+128)
  3701  0648  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0649  1303               	bcf	3,6	;RP1=0, select bank0
  3703  064A  0839               	movf	?_scale+2,w
  3704  064B  1683               	bsf	3,5	;RP0=1, select bank1
  3705  064C  1303               	bcf	3,6	;RP1=0, select bank1
  3706  064D  00A2               	movwf	(_sprintf$666+2)^(0+128)
  3707                           
  3708                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3709  064E  0820               	movf	_sprintf$666^(0+128),w
  3710  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3712  0651  00AA               	movwf	___ftmul@f2
  3713  0652  1683               	bsf	3,5	;RP0=1, select bank1
  3714  0653  1303               	bcf	3,6	;RP1=0, select bank1
  3715  0654  0821               	movf	(_sprintf$666+1)^(0+128),w
  3716  0655  1283               	bcf	3,5	;RP0=0, select bank0
  3717  0656  1303               	bcf	3,6	;RP1=0, select bank0
  3718  0657  00AB               	movwf	___ftmul@f2+1
  3719  0658  1683               	bsf	3,5	;RP0=1, select bank1
  3720  0659  1303               	bcf	3,6	;RP1=0, select bank1
  3721  065A  0822               	movf	(_sprintf$666+2)^(0+128),w
  3722  065B  1283               	bcf	3,5	;RP0=0, select bank0
  3723  065C  1303               	bcf	3,6	;RP1=0, select bank0
  3724  065D  00AC               	movwf	___ftmul@f2+2
  3725  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3726  065F  1303               	bcf	3,6	;RP1=0, select bank1
  3727  0660  083E               	movf	sprintf@fval^(0+128),w
  3728  0661  1283               	bcf	3,5	;RP0=0, select bank0
  3729  0662  1303               	bcf	3,6	;RP1=0, select bank0
  3730  0663  00A7               	movwf	___ftmul@f1
  3731  0664  1683               	bsf	3,5	;RP0=1, select bank1
  3732  0665  1303               	bcf	3,6	;RP1=0, select bank1
  3733  0666  083F               	movf	(sprintf@fval+1)^(0+128),w
  3734  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3735  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3736  0669  00A8               	movwf	___ftmul@f1+1
  3737  066A  1683               	bsf	3,5	;RP0=1, select bank1
  3738  066B  1303               	bcf	3,6	;RP1=0, select bank1
  3739  066C  0840               	movf	(sprintf@fval+2)^(0+128),w
  3740  066D  1283               	bcf	3,5	;RP0=0, select bank0
  3741  066E  1303               	bcf	3,6	;RP1=0, select bank0
  3742  066F  00A9               	movwf	___ftmul@f1+2
  3743  0670  160A  118A  2215  120A  118A  	fcall	___ftmul
  3744  0675  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0676  1303               	bcf	3,6	;RP1=0, select bank0
  3746  0677  0827               	movf	?___ftmul,w
  3747  0678  00C0               	movwf	___fttol@f1
  3748  0679  0828               	movf	?___ftmul+1,w
  3749  067A  00C1               	movwf	___fttol@f1+1
  3750  067B  0829               	movf	?___ftmul+2,w
  3751  067C  00C2               	movwf	___fttol@f1+2
  3752  067D  160A  158A  2588  120A  118A  	fcall	___fttol
  3753  0682  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0683  1303               	bcf	3,6	;RP1=0, select bank0
  3755  0684  0843               	movf	?___fttol+3,w
  3756  0685  1683               	bsf	3,5	;RP0=1, select bank1
  3757  0686  1303               	bcf	3,6	;RP1=0, select bank1
  3758  0687  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3759  0688  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0689  1303               	bcf	3,6	;RP1=0, select bank0
  3761  068A  0842               	movf	?___fttol+2,w
  3762  068B  1683               	bsf	3,5	;RP0=1, select bank1
  3763  068C  1303               	bcf	3,6	;RP1=0, select bank1
  3764  068D  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3765  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3766  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3767  0690  0841               	movf	?___fttol+1,w
  3768  0691  1683               	bsf	3,5	;RP0=1, select bank1
  3769  0692  1303               	bcf	3,6	;RP1=0, select bank1
  3770  0693  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3771  0694  1283               	bcf	3,5	;RP0=0, select bank0
  3772  0695  1303               	bcf	3,6	;RP1=0, select bank0
  3773  0696  0840               	movf	?___fttol,w
  3774  0697  1683               	bsf	3,5	;RP0=1, select bank1
  3775  0698  1303               	bcf	3,6	;RP1=0, select bank1
  3776  0699                     L6:	
  3777  0699  00B5               	movwf	sprintf@_val^(0+128)
  3778  069A  30FF               	movlw	-1
  3779  069B  1283               	bcf	3,5	;RP0=0, select bank0
  3780  069C  1303               	bcf	3,6	;RP1=0, select bank0
  3781  069D  00DE               	movwf	??_sprintf
  3782  069E  085E               	movf	??_sprintf,w
  3783  069F  1683               	bsf	3,5	;RP0=1, select bank1
  3784  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  3785  06A1  07C1               	addwf	sprintf@c^(0+128),f
  3786  06A2  0841               	movf	sprintf@c^(0+128),w
  3787  06A3  3AFF               	xorlw	-1
  3788  06A4  1903               	btfsc	3,2
  3789  06A5  2F70               	goto	l3076
  3790                           
  3791                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  3792                           
  3793                           ;doprnt.c: 1237: while(c--) {
  3794  06A6  0841               	movf	sprintf@c^(0+128),w
  3795  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3796  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3797  06A9  00DE               	movwf	??_sprintf
  3798  06AA  3001               	movlw	1
  3799  06AB                     u4205:	
  3800  06AB  1003               	clrc
  3801  06AC  0DDE               	rlf	??_sprintf,f
  3802  06AD  3EFF               	addlw	-1
  3803  06AE  1D03               	skipz
  3804  06AF  2EAB               	goto	u4205
  3805  06B0  1003               	clrc
  3806  06B1  0D5E               	rlf	??_sprintf,w
  3807  06B2  3E01               	addlw	low (_dpowers-__stringbase)
  3808  06B3  0084               	movwf	4
  3809  06B4  160A  118A  200A  120A  118A  	fcall	stringdir
  3810  06B9  00F0               	movwf	___lldiv@divisor
  3811  06BA  160A  118A  200A  120A  118A  	fcall	stringdir
  3812  06BF  00F1               	movwf	___lldiv@divisor+1
  3813  06C0  160A  118A  200A  120A  118A  	fcall	stringdir
  3814  06C5  00F2               	movwf	___lldiv@divisor+2
  3815  06C6  160A  118A  200A  120A  118A  	fcall	stringdir
  3816  06CB  00F3               	movwf	___lldiv@divisor+3
  3817  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  3818  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  3819  06CE  0838               	movf	(sprintf@_val+3)^(0+128),w
  3820  06CF  00F7               	movwf	___lldiv@dividend+3
  3821  06D0  0837               	movf	(sprintf@_val+2)^(0+128),w
  3822  06D1  00F6               	movwf	___lldiv@dividend+2
  3823  06D2  0836               	movf	(sprintf@_val+1)^(0+128),w
  3824  06D3  00F5               	movwf	___lldiv@dividend+1
  3825  06D4  0835               	movf	sprintf@_val^(0+128),w
  3826  06D5  00F4               	movwf	___lldiv@dividend
  3827  06D6  160A  158A  2449  120A  118A  	fcall	___lldiv
  3828  06DB  0873               	movf	?___lldiv+3,w
  3829  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  3830  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  3831  06DE  00AF               	movwf	(sprintf@vd_146+3)^(0+128)
  3832  06DF  0872               	movf	?___lldiv+2,w
  3833  06E0  00AE               	movwf	(sprintf@vd_146+2)^(0+128)
  3834  06E1  0871               	movf	?___lldiv+1,w
  3835  06E2  00AD               	movwf	(sprintf@vd_146+1)^(0+128)
  3836  06E3  0870               	movf	?___lldiv,w
  3837  06E4  00AC               	movwf	sprintf@vd_146^(0+128)
  3838                           
  3839                           ;doprnt.c: 1239: vd %= 10;
  3840  06E5  3000               	movlw	0
  3841  06E6  00F3               	movwf	___llmod@divisor+3
  3842  06E7  3000               	movlw	0
  3843  06E8  00F2               	movwf	___llmod@divisor+2
  3844  06E9  3000               	movlw	0
  3845  06EA  00F1               	movwf	___llmod@divisor+1
  3846  06EB  300A               	movlw	10
  3847  06EC  00F0               	movwf	___llmod@divisor
  3848  06ED  082F               	movf	(sprintf@vd_146+3)^(0+128),w
  3849  06EE  00F7               	movwf	___llmod@dividend+3
  3850  06EF  082E               	movf	(sprintf@vd_146+2)^(0+128),w
  3851  06F0  00F6               	movwf	___llmod@dividend+2
  3852  06F1  082D               	movf	(sprintf@vd_146+1)^(0+128),w
  3853  06F2  00F5               	movwf	___llmod@dividend+1
  3854  06F3  082C               	movf	sprintf@vd_146^(0+128),w
  3855  06F4  00F4               	movwf	___llmod@dividend
  3856  06F5  160A  158A  2343  120A  118A  	fcall	___llmod
  3857  06FA  0873               	movf	?___llmod+3,w
  3858  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  3859  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  3860  06FD  00AF               	movwf	(sprintf@vd_146+3)^(0+128)
  3861  06FE  0872               	movf	?___llmod+2,w
  3862  06FF  00AE               	movwf	(sprintf@vd_146+2)^(0+128)
  3863  0700  0871               	movf	?___llmod+1,w
  3864  0701  00AD               	movwf	(sprintf@vd_146+1)^(0+128)
  3865  0702  0870               	movf	?___llmod,w
  3866  0703  00AC               	movwf	sprintf@vd_146^(0+128)
  3867                           
  3868                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  3869  0704  082C               	movf	sprintf@vd_146^(0+128),w
  3870  0705  3E30               	addlw	48
  3871  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3872  0707  1303               	bcf	3,6	;RP1=0, select bank0
  3873  0708  00DE               	movwf	??_sprintf
  3874  0709  1683               	bsf	3,5	;RP0=1, select bank1
  3875  070A  1303               	bcf	3,6	;RP1=0, select bank1
  3876  070B  083B               	movf	sprintf@sp^(0+128),w
  3877  070C  0084               	movwf	4
  3878  070D  1283               	bcf	3,5	;RP0=0, select bank0
  3879  070E  1303               	bcf	3,6	;RP1=0, select bank0
  3880  070F  085E               	movf	??_sprintf,w
  3881  0710  1783               	bsf	3,7	;select IRP bank2
  3882  0711  0080               	movwf	0
  3883  0712  3001               	movlw	1
  3884  0713  00DE               	movwf	??_sprintf
  3885  0714  085E               	movf	??_sprintf,w
  3886  0715  1683               	bsf	3,5	;RP0=1, select bank1
  3887  0716  1303               	bcf	3,6	;RP1=0, select bank1
  3888  0717  07BB               	addwf	sprintf@sp^(0+128),f
  3889                           
  3890                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  3891  0718  0841               	movf	sprintf@c^(0+128),w
  3892  0719  1283               	bcf	3,5	;RP0=0, select bank0
  3893  071A  1303               	bcf	3,6	;RP1=0, select bank0
  3894  071B  00DE               	movwf	??_sprintf
  3895  071C  3001               	movlw	1
  3896  071D                     u4215:	
  3897  071D  1003               	clrc
  3898  071E  0DDE               	rlf	??_sprintf,f
  3899  071F  3EFF               	addlw	-1
  3900  0720  1D03               	skipz
  3901  0721  2F1D               	goto	u4215
  3902  0722  1003               	clrc
  3903  0723  0D5E               	rlf	??_sprintf,w
  3904  0724  3E01               	addlw	low (_dpowers-__stringbase)
  3905  0725  0084               	movwf	4
  3906  0726  160A  118A  200A  120A  118A  	fcall	stringdir
  3907  072B  00F0               	movwf	___llmod@divisor
  3908  072C  160A  118A  200A  120A  118A  	fcall	stringdir
  3909  0731  00F1               	movwf	___llmod@divisor+1
  3910  0732  160A  118A  200A  120A  118A  	fcall	stringdir
  3911  0737  00F2               	movwf	___llmod@divisor+2
  3912  0738  160A  118A  200A  120A  118A  	fcall	stringdir
  3913  073D  00F3               	movwf	___llmod@divisor+3
  3914  073E  1683               	bsf	3,5	;RP0=1, select bank1
  3915  073F  1303               	bcf	3,6	;RP1=0, select bank1
  3916  0740  0838               	movf	(sprintf@_val+3)^(0+128),w
  3917  0741  00F7               	movwf	___llmod@dividend+3
  3918  0742  0837               	movf	(sprintf@_val+2)^(0+128),w
  3919  0743  00F6               	movwf	___llmod@dividend+2
  3920  0744  0836               	movf	(sprintf@_val+1)^(0+128),w
  3921  0745  00F5               	movwf	___llmod@dividend+1
  3922  0746  0835               	movf	sprintf@_val^(0+128),w
  3923  0747  00F4               	movwf	___llmod@dividend
  3924  0748  160A  158A  2343  120A  118A  	fcall	___llmod
  3925  074D  0873               	movf	?___llmod+3,w
  3926  074E  1683               	bsf	3,5	;RP0=1, select bank1
  3927  074F  1303               	bcf	3,6	;RP1=0, select bank1
  3928  0750  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3929  0751  0872               	movf	?___llmod+2,w
  3930  0752  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3931  0753  0871               	movf	?___llmod+1,w
  3932  0754  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3933  0755  0870               	movf	?___llmod,w
  3934  0756  2E99               	goto	L6
  3935  0757                     l3070:	
  3936                           ;doprnt.c: 1242: }
  3937                           ;doprnt.c: 1244: while(prec) {
  3938                           
  3939                           
  3940                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  3941  0757  3030               	movlw	48
  3942  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3943  0759  1303               	bcf	3,6	;RP1=0, select bank0
  3944  075A  00DE               	movwf	??_sprintf
  3945  075B  1683               	bsf	3,5	;RP0=1, select bank1
  3946  075C  1303               	bcf	3,6	;RP1=0, select bank1
  3947  075D  083B               	movf	sprintf@sp^(0+128),w
  3948  075E  0084               	movwf	4
  3949  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3950  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3951  0761  085E               	movf	??_sprintf,w
  3952  0762  1783               	bsf	3,7	;select IRP bank2
  3953  0763  0080               	movwf	0
  3954  0764  3001               	movlw	1
  3955  0765  00DE               	movwf	??_sprintf
  3956  0766  085E               	movf	??_sprintf,w
  3957  0767  1683               	bsf	3,5	;RP0=1, select bank1
  3958  0768  1303               	bcf	3,6	;RP1=0, select bank1
  3959  0769  07BB               	addwf	sprintf@sp^(0+128),f
  3960                           
  3961                           ;doprnt.c: 1246: prec--;
  3962  076A  30FF               	movlw	255
  3963  076B  07BC               	addwf	sprintf@prec^(0+128),f
  3964  076C  1803               	skipnc
  3965  076D  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3966  076E  30FF               	movlw	255
  3967  076F  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  3968  0770                     l3076:	
  3969  0770  083D               	movf	(sprintf@prec+1)^(0+128),w
  3970  0771  043C               	iorwf	sprintf@prec^(0+128),w
  3971  0772  1903               	btfsc	3,2
  3972  0773  29AB               	goto	l3096
  3973  0774  2F57               	goto	l3070
  3974  0775                     l3078:	
  3975                           ;doprnt.c: 1247: }
  3976                           ;doprnt.c: 1254: continue;
  3977                           
  3978                           
  3979                           ;doprnt.c: 1255: }
  3980                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  3981  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3982  0776  1303               	bcf	3,6	;RP1=0, select bank1
  3983  0777  083D               	movf	(sprintf@prec+1)^(0+128),w
  3984  0778  043C               	iorwf	sprintf@prec^(0+128),w
  3985  0779  1D03               	skipz
  3986  077A  2F87               	goto	l165
  3987  077B  0838               	movf	(sprintf@_val+3)^(0+128),w
  3988  077C  0437               	iorwf	(sprintf@_val+2)^(0+128),w
  3989  077D  0436               	iorwf	(sprintf@_val+1)^(0+128),w
  3990  077E  0435               	iorwf	sprintf@_val^(0+128),w
  3991  077F  1D03               	skipz
  3992  0780  2F87               	goto	l165
  3993                           
  3994                           ;doprnt.c: 1300: prec++;
  3995  0781  3001               	movlw	1
  3996  0782  07BC               	addwf	sprintf@prec^(0+128),f
  3997  0783  1803               	skipnc
  3998  0784  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  3999  0785  3000               	movlw	0
  4000  0786  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  4001  0787                     l165:	
  4002                           
  4003                           ;doprnt.c: 1348: if(c < prec)
  4004  0787  0841               	movf	sprintf@c^(0+128),w
  4005  0788  1283               	bcf	3,5	;RP0=0, select bank0
  4006  0789  1303               	bcf	3,6	;RP1=0, select bank0
  4007  078A  00DE               	movwf	??_sprintf
  4008  078B  01DF               	clrf	??_sprintf+1
  4009  078C  1BDE               	btfsc	??_sprintf,7
  4010  078D  03DF               	decf	??_sprintf+1,f
  4011  078E  085F               	movf	??_sprintf+1,w
  4012  078F  3A80               	xorlw	128
  4013  0790  00E0               	movwf	??_sprintf+2
  4014  0791  1683               	bsf	3,5	;RP0=1, select bank1
  4015  0792  1303               	bcf	3,6	;RP1=0, select bank1
  4016  0793  083D               	movf	(sprintf@prec+1)^(0+128),w
  4017  0794  3A80               	xorlw	128
  4018  0795  1283               	bcf	3,5	;RP0=0, select bank0
  4019  0796  1303               	bcf	3,6	;RP1=0, select bank0
  4020  0797  0260               	subwf	??_sprintf+2,w
  4021  0798  1D03               	skipz
  4022  0799  2FA0               	goto	u4265
  4023  079A  1683               	bsf	3,5	;RP0=1, select bank1
  4024  079B  1303               	bcf	3,6	;RP1=0, select bank1
  4025  079C  083C               	movf	sprintf@prec^(0+128),w
  4026  079D  1283               	bcf	3,5	;RP0=0, select bank0
  4027  079E  1303               	bcf	3,6	;RP1=0, select bank0
  4028  079F  025E               	subwf	??_sprintf,w
  4029  07A0                     u4265:	
  4030  07A0  1803               	skipnc
  4031  07A1  2FAD               	goto	l3086
  4032                           
  4033                           ;doprnt.c: 1349: c = prec;
  4034  07A2  1683               	bsf	3,5	;RP0=1, select bank1
  4035  07A3  1303               	bcf	3,6	;RP1=0, select bank1
  4036  07A4  083C               	movf	sprintf@prec^(0+128),w
  4037  07A5  1283               	bcf	3,5	;RP0=0, select bank0
  4038  07A6  1303               	bcf	3,6	;RP1=0, select bank0
  4039  07A7  00DE               	movwf	??_sprintf
  4040  07A8  085E               	movf	??_sprintf,w
  4041  07A9  1683               	bsf	3,5	;RP0=1, select bank1
  4042  07AA  1303               	bcf	3,6	;RP1=0, select bank1
  4043  07AB  00C1               	movwf	sprintf@c^(0+128)
  4044  07AC  2FCF               	goto	l3090
  4045  07AD                     l3086:	
  4046                           
  4047                           ;doprnt.c: 1350: else if(prec < c)
  4048  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  4049  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  4050  07AF  0841               	movf	sprintf@c^(0+128),w
  4051  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  4052  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  4053  07B2  00DE               	movwf	??_sprintf
  4054  07B3  01DF               	clrf	??_sprintf+1
  4055  07B4  1BDE               	btfsc	??_sprintf,7
  4056  07B5  03DF               	decf	??_sprintf+1,f
  4057  07B6  1683               	bsf	3,5	;RP0=1, select bank1
  4058  07B7  1303               	bcf	3,6	;RP1=0, select bank1
  4059  07B8  083D               	movf	(sprintf@prec+1)^(0+128),w
  4060  07B9  3A80               	xorlw	128
  4061  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  4062  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  4063  07BC  00E0               	movwf	??_sprintf+2
  4064  07BD  085F               	movf	??_sprintf+1,w
  4065  07BE  3A80               	xorlw	128
  4066  07BF  0260               	subwf	??_sprintf+2,w
  4067  07C0  1D03               	skipz
  4068  07C1  2FC6               	goto	u4275
  4069  07C2  085E               	movf	??_sprintf,w
  4070  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  4071  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  4072  07C5  023C               	subwf	sprintf@prec^(0+128),w
  4073  07C6                     u4275:	
  4074  07C6  1803               	skipnc
  4075  07C7  2FCF               	goto	l3090
  4076                           
  4077                           ;doprnt.c: 1351: prec = c;
  4078  07C8  1683               	bsf	3,5	;RP0=1, select bank1
  4079  07C9  1303               	bcf	3,6	;RP1=0, select bank1
  4080  07CA  0841               	movf	sprintf@c^(0+128),w
  4081  07CB  00BC               	movwf	sprintf@prec^(0+128)
  4082  07CC  01BD               	clrf	(sprintf@prec+1)^(0+128)
  4083  07CD  1BBC               	btfsc	sprintf@prec^(0+128),7
  4084  07CE  03BD               	decf	(sprintf@prec+1)^(0+128),f
  4085  07CF                     l3090:	
  4086                           
  4087                           ;doprnt.c: 1431: {
  4088                           ;doprnt.c: 1447: if(flag & 0x03)
  4089  07CF  3003               	movlw	3
  4090  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  4091  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  4092  07D2  0530               	andwf	sprintf@flag^(0+128),w
  4093  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  4094  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  4095  07D5  00DE               	movwf	??_sprintf
  4096  07D6  3000               	movlw	0
  4097  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  4098  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  4099  07D9  0531               	andwf	(sprintf@flag+1)^(0+128),w
  4100  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  4101  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  4102  07DC  00DF               	movwf	??_sprintf+1
  4103  07DD  085F               	movf	??_sprintf+1,w
  4104  07DE  045E               	iorwf	??_sprintf,w
  4105  07DF  1903               	skipnz
  4106  07E0  29AB               	goto	l3096
  4107                           
  4108                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  4109  07E1  302D               	movlw	45
  4110  07E2                     L7:	
  4111  07E2  00DE               	movwf	??_sprintf
  4112  07E3  1683               	bsf	3,5	;RP0=1, select bank1
  4113  07E4  1303               	bcf	3,6	;RP1=0, select bank1
  4114  07E5  083B               	movf	sprintf@sp^(0+128),w
  4115  07E6  0084               	movwf	4
  4116  07E7  1283               	bcf	3,5	;RP0=0, select bank0
  4117  07E8  1303               	bcf	3,6	;RP1=0, select bank0
  4118  07E9  085E               	movf	??_sprintf,w
  4119  07EA  1783               	bsf	3,7	;select IRP bank2
  4120  07EB  0080               	movwf	0
  4121  07EC  3001               	movlw	1
  4122  07ED  00DE               	movwf	??_sprintf
  4123  07EE  085E               	movf	??_sprintf,w
  4124  07EF  1683               	bsf	3,5	;RP0=1, select bank1
  4125  07F0  1303               	bcf	3,6	;RP1=0, select bank1
  4126  07F1  07BB               	addwf	sprintf@sp^(0+128),f
  4127  07F2  29AB               	goto	l3096
  4128  07F3                     l3098:	
  4129                           ;doprnt.c: 1478: }
  4130                           ;doprnt.c: 1542: }
  4131                           ;doprnt.c: 1544: alldone:
  4132                           
  4133                           
  4134                           ;doprnt.c: 1547: *sp = 0;
  4135  07F3  083B               	movf	sprintf@sp^(0+128),w
  4136  07F4  0084               	movwf	4
  4137  07F5  1783               	bsf	3,7	;select IRP bank2
  4138  07F6  0180               	clrf	0
  4139  07F7  0008               	return
  4140  07F8                     __end_of_sprintf:	
  4141                           ;doprnt.c: 1549: return 0;
  4142                           ;	Return value of _sprintf is never used
  4143                           
  4144                           
  4145                           	psect	text2
  4146  08CE                     __ptext2:	
  4147 ;; *************** function _scale *****************
  4148 ;; Defined at:
  4149 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  scl             1    wreg     char 
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;  scl             1   31[BANK0 ] char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  3   23[BANK0 ] char 
  4156 ;; Registers used:
  4157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4163 ;;      Params:         0       3       0       0       0
  4164 ;;      Locals:         0       4       0       0       0
  4165 ;;      Temps:          0       2       0       0       0
  4166 ;;      Totals:         0       9       0       0       0
  4167 ;;Total ram usage:        9 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:    2
  4170 ;; This function calls:
  4171 ;;		___awdiv
  4172 ;;		___awmod
  4173 ;;		___bmul
  4174 ;;		___ftmul
  4175 ;; This function is called by:
  4176 ;;		_sprintf
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           
  4181                           ;psect for function _scale
  4182  08CE                     _scale:	
  4183                           
  4184                           ;incstack = 0
  4185                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4186                           ;scale@scl stored from wreg
  4187  08CE  1283               	bcf	3,5	;RP0=0, select bank0
  4188  08CF  1303               	bcf	3,6	;RP1=0, select bank0
  4189  08D0  00BF               	movwf	scale@scl
  4190                           
  4191                           ;doprnt.c: 428: if(scl < 0) {
  4192  08D1  1FBF               	btfss	scale@scl,7
  4193  08D2  2A21               	goto	l2548
  4194                           
  4195                           ;doprnt.c: 429: scl = -scl;
  4196  08D3  09BF               	comf	scale@scl,f
  4197  08D4  0ABF               	incf	scale@scl,f
  4198                           
  4199                           ;doprnt.c: 430: if(scl>=110)
  4200  08D5  083F               	movf	scale@scl,w
  4201  08D6  3A80               	xorlw	128
  4202  08D7  3E12               	addlw	-238
  4203  08D8  1C03               	skipc
  4204  08D9  2994               	goto	l2538
  4205                           
  4206                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4207  08DA  3003               	movlw	3
  4208  08DB  00BA               	movwf	??_scale
  4209  08DC  083A               	movf	??_scale,w
  4210  08DD  00A4               	movwf	___bmul@multiplicand
  4211  08DE  300A               	movlw	10
  4212  08DF  00F7               	movwf	___awdiv@divisor
  4213  08E0  3000               	movlw	0
  4214  08E1  00F8               	movwf	___awdiv@divisor+1
  4215  08E2  083F               	movf	scale@scl,w
  4216  08E3  00F2               	movwf	___awmod@dividend
  4217  08E4  01F3               	clrf	___awmod@dividend+1
  4218  08E5  1BF2               	btfsc	___awmod@dividend,7
  4219  08E6  03F3               	decf	___awmod@dividend+1,f
  4220  08E7  3064               	movlw	100
  4221  08E8  00F0               	movwf	___awmod@divisor
  4222  08E9  3000               	movlw	0
  4223  08EA  00F1               	movwf	___awmod@divisor+1
  4224  08EB  160A  118A  20F8  120A  158A  	fcall	___awmod
  4225  08F0  0871               	movf	?___awmod+1,w
  4226  08F1  01FA               	clrf	___awdiv@dividend+1
  4227  08F2  07FA               	addwf	___awdiv@dividend+1,f
  4228  08F3  0870               	movf	?___awmod,w
  4229  08F4  01F9               	clrf	___awdiv@dividend
  4230  08F5  07F9               	addwf	___awdiv@dividend,f
  4231  08F6  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4232  08FB  0877               	movf	?___awdiv,w
  4233  08FC  3E09               	addlw	9
  4234  08FD  160A  158A  21AA  120A  158A  	fcall	___bmul
  4235  0902  3E29               	addlw	low (__npowers_-__stringbase)
  4236  0903  0084               	movwf	4
  4237  0904  160A  118A  200A  120A  158A  	fcall	stringdir
  4238  0909  1283               	bcf	3,5	;RP0=0, select bank0
  4239  090A  1303               	bcf	3,6	;RP1=0, select bank0
  4240  090B  00A7               	movwf	___ftmul@f1
  4241  090C  160A  118A  200A  120A  158A  	fcall	stringdir
  4242  0911  00A8               	movwf	___ftmul@f1+1
  4243  0912  160A  118A  200A  120A  158A  	fcall	stringdir
  4244  0917  00A9               	movwf	___ftmul@f1+2
  4245  0918  3003               	movlw	3
  4246  0919  00BB               	movwf	??_scale+1
  4247  091A  083B               	movf	??_scale+1,w
  4248  091B  00A4               	movwf	___bmul@multiplicand
  4249  091C  3064               	movlw	100
  4250  091D  00F7               	movwf	___awdiv@divisor
  4251  091E  3000               	movlw	0
  4252  091F  00F8               	movwf	___awdiv@divisor+1
  4253  0920  083F               	movf	scale@scl,w
  4254  0921  00F9               	movwf	___awdiv@dividend
  4255  0922  01FA               	clrf	___awdiv@dividend+1
  4256  0923  1BF9               	btfsc	___awdiv@dividend,7
  4257  0924  03FA               	decf	___awdiv@dividend+1,f
  4258  0925  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4259  092A  0877               	movf	?___awdiv,w
  4260  092B  3E12               	addlw	18
  4261  092C  160A  158A  21AA  120A  158A  	fcall	___bmul
  4262  0931  3E29               	addlw	low (__npowers_-__stringbase)
  4263  0932  0084               	movwf	4
  4264  0933  160A  118A  200A  120A  158A  	fcall	stringdir
  4265  0938  1283               	bcf	3,5	;RP0=0, select bank0
  4266  0939  1303               	bcf	3,6	;RP1=0, select bank0
  4267  093A  00AA               	movwf	___ftmul@f2
  4268  093B  160A  118A  200A  120A  158A  	fcall	stringdir
  4269  0940  00AB               	movwf	___ftmul@f2+1
  4270  0941  160A  118A  200A  120A  158A  	fcall	stringdir
  4271  0946  00AC               	movwf	___ftmul@f2+2
  4272  0947  160A  118A  2215  120A  158A  	fcall	___ftmul
  4273  094C  1283               	bcf	3,5	;RP0=0, select bank0
  4274  094D  1303               	bcf	3,6	;RP1=0, select bank0
  4275  094E  0827               	movf	?___ftmul,w
  4276  094F  00BC               	movwf	_scale$665
  4277  0950  0828               	movf	?___ftmul+1,w
  4278  0951  00BD               	movwf	_scale$665+1
  4279  0952  0829               	movf	?___ftmul+2,w
  4280  0953  00BE               	movwf	_scale$665+2
  4281                           
  4282                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  4283  0954  3003               	movlw	3
  4284  0955  00BA               	movwf	??_scale
  4285  0956  083A               	movf	??_scale,w
  4286  0957  00A4               	movwf	___bmul@multiplicand
  4287  0958  083F               	movf	scale@scl,w
  4288  0959  00F2               	movwf	___awmod@dividend
  4289  095A  01F3               	clrf	___awmod@dividend+1
  4290  095B  1BF2               	btfsc	___awmod@dividend,7
  4291  095C  03F3               	decf	___awmod@dividend+1,f
  4292  095D  300A               	movlw	10
  4293  095E  00F0               	movwf	___awmod@divisor
  4294  095F  3000               	movlw	0
  4295  0960  00F1               	movwf	___awmod@divisor+1
  4296  0961  160A  118A  20F8  120A  158A  	fcall	___awmod
  4297  0966  0870               	movf	?___awmod,w
  4298  0967  160A  158A  21AA  120A  158A  	fcall	___bmul
  4299  096C  3E29               	addlw	low (__npowers_-__stringbase)
  4300  096D  0084               	movwf	4
  4301  096E  160A  118A  200A  120A  158A  	fcall	stringdir
  4302  0973  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0974  1303               	bcf	3,6	;RP1=0, select bank0
  4304  0975  00A7               	movwf	___ftmul@f1
  4305  0976  160A  118A  200A  120A  158A  	fcall	stringdir
  4306  097B  00A8               	movwf	___ftmul@f1+1
  4307  097C  160A  118A  200A  120A  158A  	fcall	stringdir
  4308  0981  00A9               	movwf	___ftmul@f1+2
  4309  0982  083C               	movf	_scale$665,w
  4310  0983  00AA               	movwf	___ftmul@f2
  4311  0984  083D               	movf	_scale$665+1,w
  4312  0985  00AB               	movwf	___ftmul@f2+1
  4313  0986  083E               	movf	_scale$665+2,w
  4314  0987  00AC               	movwf	___ftmul@f2+2
  4315  0988  160A  118A  2215   	fcall	___ftmul
  4316  098B  1283               	bcf	3,5	;RP0=0, select bank0
  4317  098C  1303               	bcf	3,6	;RP1=0, select bank0
  4318  098D  0827               	movf	?___ftmul,w
  4319  098E  00B7               	movwf	?_scale
  4320  098F  0828               	movf	?___ftmul+1,w
  4321  0990  00B8               	movwf	?_scale+1
  4322  0991  0829               	movf	?___ftmul+2,w
  4323  0992  00B9               	movwf	?_scale+2
  4324  0993  0008               	return
  4325  0994                     l2538:	
  4326                           
  4327                           ;doprnt.c: 432: else if(scl > 10)
  4328  0994  083F               	movf	scale@scl,w
  4329  0995  3A80               	xorlw	128
  4330  0996  3E75               	addlw	-139
  4331  0997  1C03               	skipc
  4332  0998  2A02               	goto	l2544
  4333                           
  4334                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  4335  0999  3003               	movlw	3
  4336  099A  00BA               	movwf	??_scale
  4337  099B  083A               	movf	??_scale,w
  4338  099C  00A4               	movwf	___bmul@multiplicand
  4339  099D  083F               	movf	scale@scl,w
  4340  099E  00F2               	movwf	___awmod@dividend
  4341  099F  01F3               	clrf	___awmod@dividend+1
  4342  09A0  1BF2               	btfsc	___awmod@dividend,7
  4343  09A1  03F3               	decf	___awmod@dividend+1,f
  4344  09A2  300A               	movlw	10
  4345  09A3  00F0               	movwf	___awmod@divisor
  4346  09A4  3000               	movlw	0
  4347  09A5  00F1               	movwf	___awmod@divisor+1
  4348  09A6  160A  118A  20F8  120A  158A  	fcall	___awmod
  4349  09AB  0870               	movf	?___awmod,w
  4350  09AC  160A  158A  21AA  120A  158A  	fcall	___bmul
  4351  09B1  3E29               	addlw	low (__npowers_-__stringbase)
  4352  09B2  0084               	movwf	4
  4353  09B3  160A  118A  200A  120A  158A  	fcall	stringdir
  4354  09B8  1283               	bcf	3,5	;RP0=0, select bank0
  4355  09B9  1303               	bcf	3,6	;RP1=0, select bank0
  4356  09BA  00A7               	movwf	___ftmul@f1
  4357  09BB  160A  118A  200A  120A  158A  	fcall	stringdir
  4358  09C0  00A8               	movwf	___ftmul@f1+1
  4359  09C1  160A  118A  200A  120A  158A  	fcall	stringdir
  4360  09C6  00A9               	movwf	___ftmul@f1+2
  4361  09C7  3003               	movlw	3
  4362  09C8  00BB               	movwf	??_scale+1
  4363  09C9  083B               	movf	??_scale+1,w
  4364  09CA  00A4               	movwf	___bmul@multiplicand
  4365  09CB  300A               	movlw	10
  4366  09CC  00F7               	movwf	___awdiv@divisor
  4367  09CD  3000               	movlw	0
  4368  09CE  00F8               	movwf	___awdiv@divisor+1
  4369  09CF  083F               	movf	scale@scl,w
  4370  09D0  00F9               	movwf	___awdiv@dividend
  4371  09D1  01FA               	clrf	___awdiv@dividend+1
  4372  09D2  1BF9               	btfsc	___awdiv@dividend,7
  4373  09D3  03FA               	decf	___awdiv@dividend+1,f
  4374  09D4  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4375  09D9  0877               	movf	?___awdiv,w
  4376  09DA  3E09               	addlw	9
  4377  09DB  160A  158A  21AA  120A  158A  	fcall	___bmul
  4378  09E0  3E29               	addlw	low (__npowers_-__stringbase)
  4379  09E1  0084               	movwf	4
  4380  09E2  160A  118A  200A  120A  158A  	fcall	stringdir
  4381  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  4382  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  4383  09E9  00AA               	movwf	___ftmul@f2
  4384  09EA  160A  118A  200A  120A  158A  	fcall	stringdir
  4385  09EF  00AB               	movwf	___ftmul@f2+1
  4386  09F0  160A  118A  200A  120A  158A  	fcall	stringdir
  4387  09F5  00AC               	movwf	___ftmul@f2+2
  4388  09F6  160A  118A  2215   	fcall	___ftmul
  4389  09F9  1283               	bcf	3,5	;RP0=0, select bank0
  4390  09FA  1303               	bcf	3,6	;RP1=0, select bank0
  4391  09FB  0827               	movf	?___ftmul,w
  4392  09FC  00B7               	movwf	?_scale
  4393  09FD  0828               	movf	?___ftmul+1,w
  4394  09FE  00B8               	movwf	?_scale+1
  4395  09FF  0829               	movf	?___ftmul+2,w
  4396  0A00  00B9               	movwf	?_scale+2
  4397  0A01  0008               	return
  4398  0A02                     l2544:	
  4399                           
  4400                           ;doprnt.c: 434: return _npowers_[scl];
  4401  0A02  3003               	movlw	3
  4402  0A03  00BA               	movwf	??_scale
  4403  0A04  083A               	movf	??_scale,w
  4404  0A05  00A4               	movwf	___bmul@multiplicand
  4405  0A06  083F               	movf	scale@scl,w
  4406  0A07  160A  158A  21AA  120A  158A  	fcall	___bmul
  4407  0A0C  3E29               	addlw	low (__npowers_-__stringbase)
  4408  0A0D  0084               	movwf	4
  4409  0A0E  160A  118A  200A  120A  158A  	fcall	stringdir
  4410  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  4411  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  4412  0A15  00B7               	movwf	?_scale
  4413  0A16  160A  118A  200A  120A  158A  	fcall	stringdir
  4414  0A1B  00B8               	movwf	?_scale+1
  4415  0A1C  160A  118A  200A   	fcall	stringdir
  4416  0A1F  00B9               	movwf	?_scale+2
  4417  0A20  0008               	return
  4418  0A21                     l2548:	
  4419                           
  4420                           ;doprnt.c: 435: }
  4421                           ;doprnt.c: 436: if(scl>=110)
  4422  0A21  083F               	movf	scale@scl,w
  4423  0A22  3A80               	xorlw	128
  4424  0A23  3E12               	addlw	-238
  4425  0A24  1C03               	skipc
  4426  0A25  2AE0               	goto	l2556
  4427                           
  4428                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4429  0A26  3003               	movlw	3
  4430  0A27  00BA               	movwf	??_scale
  4431  0A28  083A               	movf	??_scale,w
  4432  0A29  00A4               	movwf	___bmul@multiplicand
  4433  0A2A  300A               	movlw	10
  4434  0A2B  00F7               	movwf	___awdiv@divisor
  4435  0A2C  3000               	movlw	0
  4436  0A2D  00F8               	movwf	___awdiv@divisor+1
  4437  0A2E  083F               	movf	scale@scl,w
  4438  0A2F  00F2               	movwf	___awmod@dividend
  4439  0A30  01F3               	clrf	___awmod@dividend+1
  4440  0A31  1BF2               	btfsc	___awmod@dividend,7
  4441  0A32  03F3               	decf	___awmod@dividend+1,f
  4442  0A33  3064               	movlw	100
  4443  0A34  00F0               	movwf	___awmod@divisor
  4444  0A35  3000               	movlw	0
  4445  0A36  00F1               	movwf	___awmod@divisor+1
  4446  0A37  160A  118A  20F8  120A  158A  	fcall	___awmod
  4447  0A3C  0871               	movf	?___awmod+1,w
  4448  0A3D  01FA               	clrf	___awdiv@dividend+1
  4449  0A3E  07FA               	addwf	___awdiv@dividend+1,f
  4450  0A3F  0870               	movf	?___awmod,w
  4451  0A40  01F9               	clrf	___awdiv@dividend
  4452  0A41  07F9               	addwf	___awdiv@dividend,f
  4453  0A42  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4454  0A47  0877               	movf	?___awdiv,w
  4455  0A48  3E09               	addlw	9
  4456  0A49  160A  158A  21AA  120A  158A  	fcall	___bmul
  4457  0A4E  3E50               	addlw	low (__powers_-__stringbase)
  4458  0A4F  0084               	movwf	4
  4459  0A50  160A  118A  200A  120A  158A  	fcall	stringdir
  4460  0A55  1283               	bcf	3,5	;RP0=0, select bank0
  4461  0A56  1303               	bcf	3,6	;RP1=0, select bank0
  4462  0A57  00A7               	movwf	___ftmul@f1
  4463  0A58  160A  118A  200A  120A  158A  	fcall	stringdir
  4464  0A5D  00A8               	movwf	___ftmul@f1+1
  4465  0A5E  160A  118A  200A  120A  158A  	fcall	stringdir
  4466  0A63  00A9               	movwf	___ftmul@f1+2
  4467  0A64  3003               	movlw	3
  4468  0A65  00BB               	movwf	??_scale+1
  4469  0A66  083B               	movf	??_scale+1,w
  4470  0A67  00A4               	movwf	___bmul@multiplicand
  4471  0A68  3064               	movlw	100
  4472  0A69  00F7               	movwf	___awdiv@divisor
  4473  0A6A  3000               	movlw	0
  4474  0A6B  00F8               	movwf	___awdiv@divisor+1
  4475  0A6C  083F               	movf	scale@scl,w
  4476  0A6D  00F9               	movwf	___awdiv@dividend
  4477  0A6E  01FA               	clrf	___awdiv@dividend+1
  4478  0A6F  1BF9               	btfsc	___awdiv@dividend,7
  4479  0A70  03FA               	decf	___awdiv@dividend+1,f
  4480  0A71  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4481  0A76  0877               	movf	?___awdiv,w
  4482  0A77  3E12               	addlw	18
  4483  0A78  160A  158A  21AA  120A  158A  	fcall	___bmul
  4484  0A7D  3E50               	addlw	low (__powers_-__stringbase)
  4485  0A7E  0084               	movwf	4
  4486  0A7F  160A  118A  200A  120A  158A  	fcall	stringdir
  4487  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  4488  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  4489  0A86  00AA               	movwf	___ftmul@f2
  4490  0A87  160A  118A  200A  120A  158A  	fcall	stringdir
  4491  0A8C  00AB               	movwf	___ftmul@f2+1
  4492  0A8D  160A  118A  200A  120A  158A  	fcall	stringdir
  4493  0A92  00AC               	movwf	___ftmul@f2+2
  4494  0A93  160A  118A  2215  120A  158A  	fcall	___ftmul
  4495  0A98  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0A99  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0A9A  0827               	movf	?___ftmul,w
  4498  0A9B  00BC               	movwf	_scale$665
  4499  0A9C  0828               	movf	?___ftmul+1,w
  4500  0A9D  00BD               	movwf	_scale$665+1
  4501  0A9E  0829               	movf	?___ftmul+2,w
  4502  0A9F  00BE               	movwf	_scale$665+2
  4503                           
  4504                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  4505  0AA0  3003               	movlw	3
  4506  0AA1  00BA               	movwf	??_scale
  4507  0AA2  083A               	movf	??_scale,w
  4508  0AA3  00A4               	movwf	___bmul@multiplicand
  4509  0AA4  083F               	movf	scale@scl,w
  4510  0AA5  00F2               	movwf	___awmod@dividend
  4511  0AA6  01F3               	clrf	___awmod@dividend+1
  4512  0AA7  1BF2               	btfsc	___awmod@dividend,7
  4513  0AA8  03F3               	decf	___awmod@dividend+1,f
  4514  0AA9  300A               	movlw	10
  4515  0AAA  00F0               	movwf	___awmod@divisor
  4516  0AAB  3000               	movlw	0
  4517  0AAC  00F1               	movwf	___awmod@divisor+1
  4518  0AAD  160A  118A  20F8  120A  158A  	fcall	___awmod
  4519  0AB2  0870               	movf	?___awmod,w
  4520  0AB3  160A  158A  21AA  120A  158A  	fcall	___bmul
  4521  0AB8  3E50               	addlw	low (__powers_-__stringbase)
  4522  0AB9  0084               	movwf	4
  4523  0ABA  160A  118A  200A  120A  158A  	fcall	stringdir
  4524  0ABF  1283               	bcf	3,5	;RP0=0, select bank0
  4525  0AC0  1303               	bcf	3,6	;RP1=0, select bank0
  4526  0AC1  00A7               	movwf	___ftmul@f1
  4527  0AC2  160A  118A  200A  120A  158A  	fcall	stringdir
  4528  0AC7  00A8               	movwf	___ftmul@f1+1
  4529  0AC8  160A  118A  200A  120A  158A  	fcall	stringdir
  4530  0ACD  00A9               	movwf	___ftmul@f1+2
  4531  0ACE  083C               	movf	_scale$665,w
  4532  0ACF  00AA               	movwf	___ftmul@f2
  4533  0AD0  083D               	movf	_scale$665+1,w
  4534  0AD1  00AB               	movwf	___ftmul@f2+1
  4535  0AD2  083E               	movf	_scale$665+2,w
  4536  0AD3  00AC               	movwf	___ftmul@f2+2
  4537  0AD4  160A  118A  2215   	fcall	___ftmul
  4538  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  4539  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  4540  0AD9  0827               	movf	?___ftmul,w
  4541  0ADA  00B7               	movwf	?_scale
  4542  0ADB  0828               	movf	?___ftmul+1,w
  4543  0ADC  00B8               	movwf	?_scale+1
  4544  0ADD  0829               	movf	?___ftmul+2,w
  4545  0ADE  00B9               	movwf	?_scale+2
  4546  0ADF  0008               	return
  4547  0AE0                     l2556:	
  4548                           
  4549                           ;doprnt.c: 438: else if(scl > 10)
  4550  0AE0  083F               	movf	scale@scl,w
  4551  0AE1  3A80               	xorlw	128
  4552  0AE2  3E75               	addlw	-139
  4553  0AE3  1C03               	skipc
  4554  0AE4  2B4E               	goto	l2562
  4555                           
  4556                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4557  0AE5  3003               	movlw	3
  4558  0AE6  00BA               	movwf	??_scale
  4559  0AE7  083A               	movf	??_scale,w
  4560  0AE8  00A4               	movwf	___bmul@multiplicand
  4561  0AE9  083F               	movf	scale@scl,w
  4562  0AEA  00F2               	movwf	___awmod@dividend
  4563  0AEB  01F3               	clrf	___awmod@dividend+1
  4564  0AEC  1BF2               	btfsc	___awmod@dividend,7
  4565  0AED  03F3               	decf	___awmod@dividend+1,f
  4566  0AEE  300A               	movlw	10
  4567  0AEF  00F0               	movwf	___awmod@divisor
  4568  0AF0  3000               	movlw	0
  4569  0AF1  00F1               	movwf	___awmod@divisor+1
  4570  0AF2  160A  118A  20F8  120A  158A  	fcall	___awmod
  4571  0AF7  0870               	movf	?___awmod,w
  4572  0AF8  160A  158A  21AA  120A  158A  	fcall	___bmul
  4573  0AFD  3E50               	addlw	low (__powers_-__stringbase)
  4574  0AFE  0084               	movwf	4
  4575  0AFF  160A  118A  200A  120A  158A  	fcall	stringdir
  4576  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0B05  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0B06  00A7               	movwf	___ftmul@f1
  4579  0B07  160A  118A  200A  120A  158A  	fcall	stringdir
  4580  0B0C  00A8               	movwf	___ftmul@f1+1
  4581  0B0D  160A  118A  200A  120A  158A  	fcall	stringdir
  4582  0B12  00A9               	movwf	___ftmul@f1+2
  4583  0B13  3003               	movlw	3
  4584  0B14  00BB               	movwf	??_scale+1
  4585  0B15  083B               	movf	??_scale+1,w
  4586  0B16  00A4               	movwf	___bmul@multiplicand
  4587  0B17  300A               	movlw	10
  4588  0B18  00F7               	movwf	___awdiv@divisor
  4589  0B19  3000               	movlw	0
  4590  0B1A  00F8               	movwf	___awdiv@divisor+1
  4591  0B1B  083F               	movf	scale@scl,w
  4592  0B1C  00F9               	movwf	___awdiv@dividend
  4593  0B1D  01FA               	clrf	___awdiv@dividend+1
  4594  0B1E  1BF9               	btfsc	___awdiv@dividend,7
  4595  0B1F  03FA               	decf	___awdiv@dividend+1,f
  4596  0B20  160A  158A  23EC  120A  158A  	fcall	___awdiv
  4597  0B25  0877               	movf	?___awdiv,w
  4598  0B26  3E09               	addlw	9
  4599  0B27  160A  158A  21AA  120A  158A  	fcall	___bmul
  4600  0B2C  3E50               	addlw	low (__powers_-__stringbase)
  4601  0B2D  0084               	movwf	4
  4602  0B2E  160A  118A  200A  120A  158A  	fcall	stringdir
  4603  0B33  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0B34  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0B35  00AA               	movwf	___ftmul@f2
  4606  0B36  160A  118A  200A  120A  158A  	fcall	stringdir
  4607  0B3B  00AB               	movwf	___ftmul@f2+1
  4608  0B3C  160A  118A  200A  120A  158A  	fcall	stringdir
  4609  0B41  00AC               	movwf	___ftmul@f2+2
  4610  0B42  160A  118A  2215   	fcall	___ftmul
  4611  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  4612  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  4613  0B47  0827               	movf	?___ftmul,w
  4614  0B48  00B7               	movwf	?_scale
  4615  0B49  0828               	movf	?___ftmul+1,w
  4616  0B4A  00B8               	movwf	?_scale+1
  4617  0B4B  0829               	movf	?___ftmul+2,w
  4618  0B4C  00B9               	movwf	?_scale+2
  4619  0B4D  0008               	return
  4620  0B4E                     l2562:	
  4621                           
  4622                           ;doprnt.c: 440: return _powers_[scl];
  4623  0B4E  3003               	movlw	3
  4624  0B4F  00BA               	movwf	??_scale
  4625  0B50  083A               	movf	??_scale,w
  4626  0B51  00A4               	movwf	___bmul@multiplicand
  4627  0B52  083F               	movf	scale@scl,w
  4628  0B53  160A  158A  21AA  120A  158A  	fcall	___bmul
  4629  0B58  3E50               	addlw	low (__powers_-__stringbase)
  4630  0B59  0084               	movwf	4
  4631  0B5A  160A  118A  200A  120A  158A  	fcall	stringdir
  4632  0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  4633  0B60  1303               	bcf	3,6	;RP1=0, select bank0
  4634  0B61  00B7               	movwf	?_scale
  4635  0B62  160A  118A  200A  120A  158A  	fcall	stringdir
  4636  0B67  00B8               	movwf	?_scale+1
  4637  0B68  160A  118A  200A   	fcall	stringdir
  4638  0B6B  00B9               	movwf	?_scale+2
  4639  0B6C  0008               	return
  4640  0B6D                     __end_of_scale:	
  4641                           
  4642                           	psect	text3
  4643  197A                     __ptext3:	
  4644 ;; *************** function _isdigit *****************
  4645 ;; Defined at:
  4646 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  c               1    wreg     unsigned char 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  c               1    1[COMMON] unsigned char 
  4651 ;; Return value:  Size  Location     Type
  4652 ;;		None               void
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4660 ;;      Params:         0       0       0       0       0
  4661 ;;      Locals:         2       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0
  4663 ;;      Totals:         2       0       0       0       0
  4664 ;;Total ram usage:        2 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_sprintf
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           
  4674                           ;psect for function _isdigit
  4675  197A                     _isdigit:	
  4676                           
  4677                           ;incstack = 0
  4678                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4679                           ;isdigit@c stored from wreg
  4680  197A  00F1               	movwf	isdigit@c
  4681  197B  01F0               	clrf	_isdigit$344
  4682  197C  303A               	movlw	58
  4683  197D  0271               	subwf	isdigit@c,w
  4684  197E  1803               	skipnc
  4685  197F  2986               	goto	l2574
  4686  1980  3030               	movlw	48
  4687  1981  0271               	subwf	isdigit@c,w
  4688  1982  1C03               	skipc
  4689  1983  2986               	goto	l2574
  4690  1984  01F0               	clrf	_isdigit$344
  4691  1985  0AF0               	incf	_isdigit$344,f
  4692  1986                     l2574:	
  4693  1986  0C70               	rrf	_isdigit$344,w
  4694  1987  0008               	return
  4695  1988                     __end_of_isdigit:	
  4696                           
  4697                           	psect	text4
  4698  0004                     __ptext4:	
  4699 ;; *************** function _fround *****************
  4700 ;; Defined at:
  4701 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  prec            1    wreg     unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  prec            1   38[BANK0 ] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  3   23[BANK0 ] unsigned char 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4715 ;;      Params:         0       3       0       0       0
  4716 ;;      Locals:         0       7       0       0       0
  4717 ;;      Temps:          0       6       0       0       0
  4718 ;;      Totals:         0      16       0       0       0
  4719 ;;Total ram usage:       16 bytes
  4720 ;; Hardware stack levels used:    1
  4721 ;; Hardware stack levels required when called:    2
  4722 ;; This function calls:
  4723 ;;		___awdiv
  4724 ;;		___awmod
  4725 ;;		___bmul
  4726 ;;		___ftmul
  4727 ;; This function is called by:
  4728 ;;		_sprintf
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           
  4733                           ;psect for function _fround
  4734  0004                     _fround:	
  4735                           
  4736                           ;incstack = 0
  4737                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4738                           ;fround@prec stored from wreg
  4739  0004  1283               	bcf	3,5	;RP0=0, select bank0
  4740  0005  1303               	bcf	3,6	;RP1=0, select bank0
  4741  0006  00C6               	movwf	fround@prec
  4742                           
  4743                           ;doprnt.c: 413: if(prec>=110)
  4744  0007  306E               	movlw	110
  4745  0008  0246               	subwf	fround@prec,w
  4746  0009  1C03               	skipc
  4747  000A  28E4               	goto	l2514
  4748                           
  4749                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4750  000B  3003               	movlw	3
  4751  000C  00BA               	movwf	??_fround
  4752  000D  083A               	movf	??_fround,w
  4753  000E  00A4               	movwf	___bmul@multiplicand
  4754  000F  300A               	movlw	10
  4755  0010  00F7               	movwf	___awdiv@divisor
  4756  0011  3000               	movlw	0
  4757  0012  00F8               	movwf	___awdiv@divisor+1
  4758  0013  0846               	movf	fround@prec,w
  4759  0014  00BB               	movwf	??_fround+1
  4760  0015  01BC               	clrf	??_fround+2
  4761  0016  083B               	movf	??_fround+1,w
  4762  0017  00F2               	movwf	___awmod@dividend
  4763  0018  083C               	movf	??_fround+2,w
  4764  0019  00F3               	movwf	___awmod@dividend+1
  4765  001A  3064               	movlw	100
  4766  001B  00F0               	movwf	___awmod@divisor
  4767  001C  3000               	movlw	0
  4768  001D  00F1               	movwf	___awmod@divisor+1
  4769  001E  160A  118A  20F8  120A  118A  	fcall	___awmod
  4770  0023  0871               	movf	?___awmod+1,w
  4771  0024  01FA               	clrf	___awdiv@dividend+1
  4772  0025  07FA               	addwf	___awdiv@dividend+1,f
  4773  0026  0870               	movf	?___awmod,w
  4774  0027  01F9               	clrf	___awdiv@dividend
  4775  0028  07F9               	addwf	___awdiv@dividend,f
  4776  0029  160A  158A  23EC  120A  118A  	fcall	___awdiv
  4777  002E  0877               	movf	?___awdiv,w
  4778  002F  3E09               	addlw	9
  4779  0030  160A  158A  21AA  120A  118A  	fcall	___bmul
  4780  0035  3E29               	addlw	low (__npowers_-__stringbase)
  4781  0036  0084               	movwf	4
  4782  0037  160A  118A  200A  120A  118A  	fcall	stringdir
  4783  003C  1283               	bcf	3,5	;RP0=0, select bank0
  4784  003D  1303               	bcf	3,6	;RP1=0, select bank0
  4785  003E  00A7               	movwf	___ftmul@f1
  4786  003F  160A  118A  200A  120A  118A  	fcall	stringdir
  4787  0044  00A8               	movwf	___ftmul@f1+1
  4788  0045  160A  118A  200A  120A  118A  	fcall	stringdir
  4789  004A  00A9               	movwf	___ftmul@f1+2
  4790  004B  3003               	movlw	3
  4791  004C  00BD               	movwf	??_fround+3
  4792  004D  083D               	movf	??_fround+3,w
  4793  004E  00A4               	movwf	___bmul@multiplicand
  4794  004F  3064               	movlw	100
  4795  0050  00F7               	movwf	___awdiv@divisor
  4796  0051  3000               	movlw	0
  4797  0052  00F8               	movwf	___awdiv@divisor+1
  4798  0053  0846               	movf	fround@prec,w
  4799  0054  00BE               	movwf	??_fround+4
  4800  0055  01BF               	clrf	??_fround+5
  4801  0056  083E               	movf	??_fround+4,w
  4802  0057  00F9               	movwf	___awdiv@dividend
  4803  0058  083F               	movf	??_fround+5,w
  4804  0059  00FA               	movwf	___awdiv@dividend+1
  4805  005A  160A  158A  23EC  120A  118A  	fcall	___awdiv
  4806  005F  0877               	movf	?___awdiv,w
  4807  0060  3E12               	addlw	18
  4808  0061  160A  158A  21AA  120A  118A  	fcall	___bmul
  4809  0066  3E29               	addlw	low (__npowers_-__stringbase)
  4810  0067  0084               	movwf	4
  4811  0068  160A  118A  200A  120A  118A  	fcall	stringdir
  4812  006D  1283               	bcf	3,5	;RP0=0, select bank0
  4813  006E  1303               	bcf	3,6	;RP1=0, select bank0
  4814  006F  00AA               	movwf	___ftmul@f2
  4815  0070  160A  118A  200A  120A  118A  	fcall	stringdir
  4816  0075  00AB               	movwf	___ftmul@f2+1
  4817  0076  160A  118A  200A  120A  118A  	fcall	stringdir
  4818  007B  00AC               	movwf	___ftmul@f2+2
  4819  007C  160A  118A  2215  120A  118A  	fcall	___ftmul
  4820  0081  1283               	bcf	3,5	;RP0=0, select bank0
  4821  0082  1303               	bcf	3,6	;RP1=0, select bank0
  4822  0083  0827               	movf	?___ftmul,w
  4823  0084  00C3               	movwf	_fround$663
  4824  0085  0828               	movf	?___ftmul+1,w
  4825  0086  00C4               	movwf	_fround$663+1
  4826  0087  0829               	movf	?___ftmul+2,w
  4827  0088  00C5               	movwf	_fround$663+2
  4828                           
  4829                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4830  0089  3003               	movlw	3
  4831  008A  00BA               	movwf	??_fround
  4832  008B  083A               	movf	??_fround,w
  4833  008C  00A4               	movwf	___bmul@multiplicand
  4834  008D  0846               	movf	fround@prec,w
  4835  008E  00BB               	movwf	??_fround+1
  4836  008F  01BC               	clrf	??_fround+2
  4837  0090  083B               	movf	??_fround+1,w
  4838  0091  00F2               	movwf	___awmod@dividend
  4839  0092  083C               	movf	??_fround+2,w
  4840  0093  00F3               	movwf	___awmod@dividend+1
  4841  0094  300A               	movlw	10
  4842  0095  00F0               	movwf	___awmod@divisor
  4843  0096  3000               	movlw	0
  4844  0097  00F1               	movwf	___awmod@divisor+1
  4845  0098  160A  118A  20F8  120A  118A  	fcall	___awmod
  4846  009D  0870               	movf	?___awmod,w
  4847  009E  160A  158A  21AA  120A  118A  	fcall	___bmul
  4848  00A3  3E29               	addlw	low (__npowers_-__stringbase)
  4849  00A4  0084               	movwf	4
  4850  00A5  160A  118A  200A  120A  118A  	fcall	stringdir
  4851  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  4852  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  4853  00AC  00A7               	movwf	___ftmul@f1
  4854  00AD  160A  118A  200A  120A  118A  	fcall	stringdir
  4855  00B2  00A8               	movwf	___ftmul@f1+1
  4856  00B3  160A  118A  200A  120A  118A  	fcall	stringdir
  4857  00B8  00A9               	movwf	___ftmul@f1+2
  4858  00B9  0843               	movf	_fround$663,w
  4859  00BA  00AA               	movwf	___ftmul@f2
  4860  00BB  0844               	movf	_fround$663+1,w
  4861  00BC  00AB               	movwf	___ftmul@f2+1
  4862  00BD  0845               	movf	_fround$663+2,w
  4863  00BE  00AC               	movwf	___ftmul@f2+2
  4864  00BF  160A  118A  2215  120A  118A  	fcall	___ftmul
  4865  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  4866  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  4867  00C6  0827               	movf	?___ftmul,w
  4868  00C7  00C0               	movwf	_fround$664
  4869  00C8  0828               	movf	?___ftmul+1,w
  4870  00C9  00C1               	movwf	_fround$664+1
  4871  00CA  0829               	movf	?___ftmul+2,w
  4872  00CB  00C2               	movwf	_fround$664+2
  4873                           
  4874                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4875  00CC  3000               	movlw	0
  4876  00CD  00A7               	movwf	___ftmul@f1
  4877  00CE  3000               	movlw	0
  4878  00CF  00A8               	movwf	___ftmul@f1+1
  4879  00D0  303F               	movlw	63
  4880  00D1  00A9               	movwf	___ftmul@f1+2
  4881  00D2  0840               	movf	_fround$664,w
  4882  00D3  00AA               	movwf	___ftmul@f2
  4883  00D4  0841               	movf	_fround$664+1,w
  4884  00D5  00AB               	movwf	___ftmul@f2+1
  4885  00D6  0842               	movf	_fround$664+2,w
  4886  00D7  00AC               	movwf	___ftmul@f2+2
  4887  00D8  160A  118A  2215   	fcall	___ftmul
  4888  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  4889  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  4890  00DD  0827               	movf	?___ftmul,w
  4891  00DE  00B7               	movwf	?_fround
  4892  00DF  0828               	movf	?___ftmul+1,w
  4893  00E0  00B8               	movwf	?_fround+1
  4894  00E1  0829               	movf	?___ftmul+2,w
  4895  00E2  00B9               	movwf	?_fround+2
  4896  00E3  0008               	return
  4897  00E4                     l2514:	
  4898                           
  4899                           ;doprnt.c: 415: else if(prec > 10)
  4900  00E4  300B               	movlw	11
  4901  00E5  0246               	subwf	fround@prec,w
  4902  00E6  1C03               	skipc
  4903  00E7  296E               	goto	l2522
  4904                           
  4905                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4906  00E8  3003               	movlw	3
  4907  00E9  00BA               	movwf	??_fround
  4908  00EA  083A               	movf	??_fround,w
  4909  00EB  00A4               	movwf	___bmul@multiplicand
  4910  00EC  0846               	movf	fround@prec,w
  4911  00ED  00BB               	movwf	??_fround+1
  4912  00EE  01BC               	clrf	??_fround+2
  4913  00EF  083B               	movf	??_fround+1,w
  4914  00F0  00F2               	movwf	___awmod@dividend
  4915  00F1  083C               	movf	??_fround+2,w
  4916  00F2  00F3               	movwf	___awmod@dividend+1
  4917  00F3  300A               	movlw	10
  4918  00F4  00F0               	movwf	___awmod@divisor
  4919  00F5  3000               	movlw	0
  4920  00F6  00F1               	movwf	___awmod@divisor+1
  4921  00F7  160A  118A  20F8  120A  118A  	fcall	___awmod
  4922  00FC  0870               	movf	?___awmod,w
  4923  00FD  160A  158A  21AA  120A  118A  	fcall	___bmul
  4924  0102  3E29               	addlw	low (__npowers_-__stringbase)
  4925  0103  0084               	movwf	4
  4926  0104  160A  118A  200A  120A  118A  	fcall	stringdir
  4927  0109  1283               	bcf	3,5	;RP0=0, select bank0
  4928  010A  1303               	bcf	3,6	;RP1=0, select bank0
  4929  010B  00A7               	movwf	___ftmul@f1
  4930  010C  160A  118A  200A  120A  118A  	fcall	stringdir
  4931  0111  00A8               	movwf	___ftmul@f1+1
  4932  0112  160A  118A  200A  120A  118A  	fcall	stringdir
  4933  0117  00A9               	movwf	___ftmul@f1+2
  4934  0118  3003               	movlw	3
  4935  0119  00BD               	movwf	??_fround+3
  4936  011A  083D               	movf	??_fround+3,w
  4937  011B  00A4               	movwf	___bmul@multiplicand
  4938  011C  300A               	movlw	10
  4939  011D  00F7               	movwf	___awdiv@divisor
  4940  011E  3000               	movlw	0
  4941  011F  00F8               	movwf	___awdiv@divisor+1
  4942  0120  0846               	movf	fround@prec,w
  4943  0121  00BE               	movwf	??_fround+4
  4944  0122  01BF               	clrf	??_fround+5
  4945  0123  083E               	movf	??_fround+4,w
  4946  0124  00F9               	movwf	___awdiv@dividend
  4947  0125  083F               	movf	??_fround+5,w
  4948  0126  00FA               	movwf	___awdiv@dividend+1
  4949  0127  160A  158A  23EC  120A  118A  	fcall	___awdiv
  4950  012C  0877               	movf	?___awdiv,w
  4951  012D  3E09               	addlw	9
  4952  012E  160A  158A  21AA  120A  118A  	fcall	___bmul
  4953  0133  3E29               	addlw	low (__npowers_-__stringbase)
  4954  0134  0084               	movwf	4
  4955  0135  160A  118A  200A  120A  118A  	fcall	stringdir
  4956  013A  1283               	bcf	3,5	;RP0=0, select bank0
  4957  013B  1303               	bcf	3,6	;RP1=0, select bank0
  4958  013C  00AA               	movwf	___ftmul@f2
  4959  013D  160A  118A  200A  120A  118A  	fcall	stringdir
  4960  0142  00AB               	movwf	___ftmul@f2+1
  4961  0143  160A  118A  200A  120A  118A  	fcall	stringdir
  4962  0148  00AC               	movwf	___ftmul@f2+2
  4963  0149  160A  118A  2215  120A  118A  	fcall	___ftmul
  4964  014E  1283               	bcf	3,5	;RP0=0, select bank0
  4965  014F  1303               	bcf	3,6	;RP1=0, select bank0
  4966  0150  0827               	movf	?___ftmul,w
  4967  0151  00C3               	movwf	_fround$663
  4968  0152  0828               	movf	?___ftmul+1,w
  4969  0153  00C4               	movwf	_fround$663+1
  4970  0154  0829               	movf	?___ftmul+2,w
  4971  0155  00C5               	movwf	_fround$663+2
  4972                           
  4973                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4974  0156  3000               	movlw	0
  4975  0157  00A7               	movwf	___ftmul@f1
  4976  0158  3000               	movlw	0
  4977  0159  00A8               	movwf	___ftmul@f1+1
  4978  015A  303F               	movlw	63
  4979  015B  00A9               	movwf	___ftmul@f1+2
  4980  015C  0843               	movf	_fround$663,w
  4981  015D  00AA               	movwf	___ftmul@f2
  4982  015E  0844               	movf	_fround$663+1,w
  4983  015F  00AB               	movwf	___ftmul@f2+1
  4984  0160  0845               	movf	_fround$663+2,w
  4985  0161  00AC               	movwf	___ftmul@f2+2
  4986  0162  160A  118A  2215   	fcall	___ftmul
  4987  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4988  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4989  0167  0827               	movf	?___ftmul,w
  4990  0168  00B7               	movwf	?_fround
  4991  0169  0828               	movf	?___ftmul+1,w
  4992  016A  00B8               	movwf	?_fround+1
  4993  016B  0829               	movf	?___ftmul+2,w
  4994  016C  00B9               	movwf	?_fround+2
  4995  016D  0008               	return
  4996  016E                     l2522:	
  4997                           
  4998                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4999  016E  3000               	movlw	0
  5000  016F  00A7               	movwf	___ftmul@f1
  5001  0170  3000               	movlw	0
  5002  0171  00A8               	movwf	___ftmul@f1+1
  5003  0172  303F               	movlw	63
  5004  0173  00A9               	movwf	___ftmul@f1+2
  5005  0174  3003               	movlw	3
  5006  0175  00BA               	movwf	??_fround
  5007  0176  083A               	movf	??_fround,w
  5008  0177  00A4               	movwf	___bmul@multiplicand
  5009  0178  0846               	movf	fround@prec,w
  5010  0179  160A  158A  21AA  120A  118A  	fcall	___bmul
  5011  017E  3E29               	addlw	low (__npowers_-__stringbase)
  5012  017F  0084               	movwf	4
  5013  0180  160A  118A  200A  120A  118A  	fcall	stringdir
  5014  0185  1283               	bcf	3,5	;RP0=0, select bank0
  5015  0186  1303               	bcf	3,6	;RP1=0, select bank0
  5016  0187  00AA               	movwf	___ftmul@f2
  5017  0188  160A  118A  200A  120A  118A  	fcall	stringdir
  5018  018D  00AB               	movwf	___ftmul@f2+1
  5019  018E  160A  118A  200A  120A  118A  	fcall	stringdir
  5020  0193  00AC               	movwf	___ftmul@f2+2
  5021  0194  160A  118A  2215   	fcall	___ftmul
  5022  0197  1283               	bcf	3,5	;RP0=0, select bank0
  5023  0198  1303               	bcf	3,6	;RP1=0, select bank0
  5024  0199  0827               	movf	?___ftmul,w
  5025  019A  00B7               	movwf	?_fround
  5026  019B  0828               	movf	?___ftmul+1,w
  5027  019C  00B8               	movwf	?_fround+1
  5028  019D  0829               	movf	?___ftmul+2,w
  5029  019E  00B9               	movwf	?_fround+2
  5030  019F  0008               	return
  5031  01A0                     __end_of_fround:	
  5032                           
  5033                           	psect	text5
  5034  10F8                     __ptext5:	
  5035 ;; *************** function ___awmod *****************
  5036 ;; Defined at:
  5037 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;  divisor         2    0[COMMON] int 
  5040 ;;  dividend        2    2[COMMON] int 
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;  sign            1    6[COMMON] unsigned char 
  5043 ;;  counter         1    5[COMMON] unsigned char 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  2    0[COMMON] int 
  5046 ;; Registers used:
  5047 ;;		wreg, status,2, status,0
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5053 ;;      Params:         4       0       0       0       0
  5054 ;;      Locals:         2       0       0       0       0
  5055 ;;      Temps:          1       0       0       0       0
  5056 ;;      Totals:         7       0       0       0       0
  5057 ;;Total ram usage:        7 bytes
  5058 ;; Hardware stack levels used:    1
  5059 ;; This function calls:
  5060 ;;		Nothing
  5061 ;; This function is called by:
  5062 ;;		_fround
  5063 ;;		_scale
  5064 ;; This function uses a non-reentrant model
  5065 ;;
  5066                           
  5067                           
  5068                           ;psect for function ___awmod
  5069  10F8                     ___awmod:	
  5070                           
  5071                           ;incstack = 0
  5072                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5073  10F8  01F6               	clrf	___awmod@sign
  5074  10F9  1FF3               	btfss	___awmod@dividend+1,7
  5075  10FA  2902               	goto	l2310
  5076  10FB  09F2               	comf	___awmod@dividend,f
  5077  10FC  09F3               	comf	___awmod@dividend+1,f
  5078  10FD  0AF2               	incf	___awmod@dividend,f
  5079  10FE  1903               	skipnz
  5080  10FF  0AF3               	incf	___awmod@dividend+1,f
  5081  1100  01F6               	clrf	___awmod@sign
  5082  1101  0AF6               	incf	___awmod@sign,f
  5083  1102                     l2310:	
  5084  1102  1FF1               	btfss	___awmod@divisor+1,7
  5085  1103  2909               	goto	l2314
  5086  1104  09F0               	comf	___awmod@divisor,f
  5087  1105  09F1               	comf	___awmod@divisor+1,f
  5088  1106  0AF0               	incf	___awmod@divisor,f
  5089  1107  1903               	skipnz
  5090  1108  0AF1               	incf	___awmod@divisor+1,f
  5091  1109                     l2314:	
  5092  1109  0871               	movf	___awmod@divisor+1,w
  5093  110A  0470               	iorwf	___awmod@divisor,w
  5094  110B  1903               	skipnz
  5095  110C  2936               	goto	l2332
  5096  110D  01F5               	clrf	___awmod@counter
  5097  110E  0AF5               	incf	___awmod@counter,f
  5098  110F                     l2322:	
  5099  110F  1BF1               	btfsc	___awmod@divisor+1,7
  5100  1110  291D               	goto	l2324
  5101  1111  3001               	movlw	1
  5102  1112                     u3005:	
  5103  1112  1003               	clrc
  5104  1113  0DF0               	rlf	___awmod@divisor,f
  5105  1114  0DF1               	rlf	___awmod@divisor+1,f
  5106  1115  3EFF               	addlw	-1
  5107  1116  1D03               	skipz
  5108  1117  2912               	goto	u3005
  5109  1118  3001               	movlw	1
  5110  1119  00F4               	movwf	??___awmod
  5111  111A  0874               	movf	??___awmod,w
  5112  111B  07F5               	addwf	___awmod@counter,f
  5113  111C  290F               	goto	l2322
  5114  111D                     l2324:	
  5115  111D  0871               	movf	___awmod@divisor+1,w
  5116  111E  0273               	subwf	___awmod@dividend+1,w
  5117  111F  1D03               	skipz
  5118  1120  2923               	goto	u3025
  5119  1121  0870               	movf	___awmod@divisor,w
  5120  1122  0272               	subwf	___awmod@dividend,w
  5121  1123                     u3025:	
  5122  1123  1C03               	skipc
  5123  1124  292B               	goto	l2328
  5124  1125  0870               	movf	___awmod@divisor,w
  5125  1126  02F2               	subwf	___awmod@dividend,f
  5126  1127  0871               	movf	___awmod@divisor+1,w
  5127  1128  1C03               	skipc
  5128  1129  03F3               	decf	___awmod@dividend+1,f
  5129  112A  02F3               	subwf	___awmod@dividend+1,f
  5130  112B                     l2328:	
  5131  112B  3001               	movlw	1
  5132  112C                     u3035:	
  5133  112C  1003               	clrc
  5134  112D  0CF1               	rrf	___awmod@divisor+1,f
  5135  112E  0CF0               	rrf	___awmod@divisor,f
  5136  112F  3EFF               	addlw	-1
  5137  1130  1D03               	skipz
  5138  1131  292C               	goto	u3035
  5139  1132  3001               	movlw	1
  5140  1133  02F5               	subwf	___awmod@counter,f
  5141  1134  1D03               	btfss	3,2
  5142  1135  291D               	goto	l2324
  5143  1136                     l2332:	
  5144  1136  0876               	movf	___awmod@sign,w
  5145  1137  1903               	btfsc	3,2
  5146  1138  293E               	goto	l2336
  5147  1139  09F2               	comf	___awmod@dividend,f
  5148  113A  09F3               	comf	___awmod@dividend+1,f
  5149  113B  0AF2               	incf	___awmod@dividend,f
  5150  113C  1903               	skipnz
  5151  113D  0AF3               	incf	___awmod@dividend+1,f
  5152  113E                     l2336:	
  5153  113E  0873               	movf	___awmod@dividend+1,w
  5154  113F  01F1               	clrf	?___awmod+1
  5155  1140  07F1               	addwf	?___awmod+1,f
  5156  1141  0872               	movf	___awmod@dividend,w
  5157  1142  01F0               	clrf	?___awmod
  5158  1143  07F0               	addwf	?___awmod,f
  5159  1144  0008               	return
  5160  1145                     __end_of___awmod:	
  5161                           
  5162                           	psect	text6
  5163  1BEC                     __ptext6:	
  5164 ;; *************** function ___awdiv *****************
  5165 ;; Defined at:
  5166 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;  divisor         2    7[COMMON] int 
  5169 ;;  dividend        2    9[COMMON] int 
  5170 ;; Auto vars:     Size  Location     Type
  5171 ;;  quotient        2    2[BANK0 ] int 
  5172 ;;  sign            1    1[BANK0 ] unsigned char 
  5173 ;;  counter         1    0[BANK0 ] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;                  2    7[COMMON] int 
  5176 ;; Registers used:
  5177 ;;		wreg, status,2, status,0
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5183 ;;      Params:         4       0       0       0       0
  5184 ;;      Locals:         0       4       0       0       0
  5185 ;;      Temps:          1       0       0       0       0
  5186 ;;      Totals:         5       4       0       0       0
  5187 ;;Total ram usage:        9 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_fround
  5193 ;;		_scale
  5194 ;;		_sprintf
  5195 ;; This function uses a non-reentrant model
  5196 ;;
  5197                           
  5198                           
  5199                           ;psect for function ___awdiv
  5200  1BEC                     ___awdiv:	
  5201                           
  5202                           ;incstack = 0
  5203                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5204  1BEC  1283               	bcf	3,5	;RP0=0, select bank0
  5205  1BED  1303               	bcf	3,6	;RP1=0, select bank0
  5206  1BEE  01A1               	clrf	___awdiv@sign
  5207  1BEF  1FF8               	btfss	___awdiv@divisor+1,7
  5208  1BF0  2BF8               	goto	l2266
  5209  1BF1  09F7               	comf	___awdiv@divisor,f
  5210  1BF2  09F8               	comf	___awdiv@divisor+1,f
  5211  1BF3  0AF7               	incf	___awdiv@divisor,f
  5212  1BF4  1903               	skipnz
  5213  1BF5  0AF8               	incf	___awdiv@divisor+1,f
  5214  1BF6  01A1               	clrf	___awdiv@sign
  5215  1BF7  0AA1               	incf	___awdiv@sign,f
  5216  1BF8                     l2266:	
  5217  1BF8  1FFA               	btfss	___awdiv@dividend+1,7
  5218  1BF9  2C03               	goto	l2272
  5219  1BFA  09F9               	comf	___awdiv@dividend,f
  5220  1BFB  09FA               	comf	___awdiv@dividend+1,f
  5221  1BFC  0AF9               	incf	___awdiv@dividend,f
  5222  1BFD  1903               	skipnz
  5223  1BFE  0AFA               	incf	___awdiv@dividend+1,f
  5224  1BFF  3001               	movlw	1
  5225  1C00  00FB               	movwf	??___awdiv
  5226  1C01  087B               	movf	??___awdiv,w
  5227  1C02  06A1               	xorwf	___awdiv@sign,f
  5228  1C03                     l2272:	
  5229  1C03  01A2               	clrf	___awdiv@quotient
  5230  1C04  01A3               	clrf	___awdiv@quotient+1
  5231  1C05  0878               	movf	___awdiv@divisor+1,w
  5232  1C06  0477               	iorwf	___awdiv@divisor,w
  5233  1C07  1903               	skipnz
  5234  1C08  2C3A               	goto	l2294
  5235  1C09  01A0               	clrf	___awdiv@counter
  5236  1C0A  0AA0               	incf	___awdiv@counter,f
  5237  1C0B                     l2282:	
  5238  1C0B  1BF8               	btfsc	___awdiv@divisor+1,7
  5239  1C0C  2C19               	goto	l2284
  5240  1C0D  3001               	movlw	1
  5241  1C0E                     u2905:	
  5242  1C0E  1003               	clrc
  5243  1C0F  0DF7               	rlf	___awdiv@divisor,f
  5244  1C10  0DF8               	rlf	___awdiv@divisor+1,f
  5245  1C11  3EFF               	addlw	-1
  5246  1C12  1D03               	skipz
  5247  1C13  2C0E               	goto	u2905
  5248  1C14  3001               	movlw	1
  5249  1C15  00FB               	movwf	??___awdiv
  5250  1C16  087B               	movf	??___awdiv,w
  5251  1C17  07A0               	addwf	___awdiv@counter,f
  5252  1C18  2C0B               	goto	l2282
  5253  1C19                     l2284:	
  5254  1C19  3001               	movlw	1
  5255  1C1A                     u2925:	
  5256  1C1A  1003               	clrc
  5257  1C1B  0DA2               	rlf	___awdiv@quotient,f
  5258  1C1C  0DA3               	rlf	___awdiv@quotient+1,f
  5259  1C1D  3EFF               	addlw	-1
  5260  1C1E  1D03               	skipz
  5261  1C1F  2C1A               	goto	u2925
  5262  1C20  0878               	movf	___awdiv@divisor+1,w
  5263  1C21  027A               	subwf	___awdiv@dividend+1,w
  5264  1C22  1D03               	skipz
  5265  1C23  2C26               	goto	u2935
  5266  1C24  0877               	movf	___awdiv@divisor,w
  5267  1C25  0279               	subwf	___awdiv@dividend,w
  5268  1C26                     u2935:	
  5269  1C26  1C03               	skipc
  5270  1C27  2C2F               	goto	l2290
  5271  1C28  0877               	movf	___awdiv@divisor,w
  5272  1C29  02F9               	subwf	___awdiv@dividend,f
  5273  1C2A  0878               	movf	___awdiv@divisor+1,w
  5274  1C2B  1C03               	skipc
  5275  1C2C  03FA               	decf	___awdiv@dividend+1,f
  5276  1C2D  02FA               	subwf	___awdiv@dividend+1,f
  5277  1C2E  1422               	bsf	___awdiv@quotient,0
  5278  1C2F                     l2290:	
  5279  1C2F  3001               	movlw	1
  5280  1C30                     u2945:	
  5281  1C30  1003               	clrc
  5282  1C31  0CF8               	rrf	___awdiv@divisor+1,f
  5283  1C32  0CF7               	rrf	___awdiv@divisor,f
  5284  1C33  3EFF               	addlw	-1
  5285  1C34  1D03               	skipz
  5286  1C35  2C30               	goto	u2945
  5287  1C36  3001               	movlw	1
  5288  1C37  02A0               	subwf	___awdiv@counter,f
  5289  1C38  1D03               	btfss	3,2
  5290  1C39  2C19               	goto	l2284
  5291  1C3A                     l2294:	
  5292  1C3A  0821               	movf	___awdiv@sign,w
  5293  1C3B  1903               	btfsc	3,2
  5294  1C3C  2C42               	goto	l2298
  5295  1C3D  09A2               	comf	___awdiv@quotient,f
  5296  1C3E  09A3               	comf	___awdiv@quotient+1,f
  5297  1C3F  0AA2               	incf	___awdiv@quotient,f
  5298  1C40  1903               	skipnz
  5299  1C41  0AA3               	incf	___awdiv@quotient+1,f
  5300  1C42                     l2298:	
  5301  1C42  0823               	movf	___awdiv@quotient+1,w
  5302  1C43  01F8               	clrf	?___awdiv+1
  5303  1C44  07F8               	addwf	?___awdiv+1,f
  5304  1C45  0822               	movf	___awdiv@quotient,w
  5305  1C46  01F7               	clrf	?___awdiv
  5306  1C47  07F7               	addwf	?___awdiv,f
  5307  1C48  0008               	return
  5308  1C49                     __end_of___awdiv:	
  5309                           
  5310                           	psect	text7
  5311  080B                     __ptext7:	
  5312 ;; *************** function __tdiv_to_l_ *****************
  5313 ;; Defined at:
  5314 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  f1              3    0[COMMON] float 
  5317 ;;  f2              3    3[COMMON] float 
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  quot            4    0[BANK0 ] unsigned long 
  5320 ;;  exp1            1    5[BANK0 ] unsigned char 
  5321 ;;  cntr            1    4[BANK0 ] unsigned char 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  4    0[COMMON] unsigned long 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5331 ;;      Params:         6       0       0       0       0
  5332 ;;      Locals:         0       6       0       0       0
  5333 ;;      Temps:          4       0       0       0       0
  5334 ;;      Totals:        10       6       0       0       0
  5335 ;;Total ram usage:       16 bytes
  5336 ;; Hardware stack levels used:    1
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_sprintf
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           
  5345                           ;psect for function __tdiv_to_l_
  5346  080B                     __tdiv_to_l_:	
  5347                           
  5348                           ;incstack = 0
  5349                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5350  080B  0870               	movf	__tdiv_to_l_@f1,w
  5351  080C  00F6               	movwf	??__tdiv_to_l_
  5352  080D  0871               	movf	__tdiv_to_l_@f1+1,w
  5353  080E  00F7               	movwf	??__tdiv_to_l_+1
  5354  080F  0872               	movf	__tdiv_to_l_@f1+2,w
  5355  0810  00F8               	movwf	??__tdiv_to_l_+2
  5356  0811  1003               	clrc
  5357  0812  0D77               	rlf	??__tdiv_to_l_+1,w
  5358  0813  0D78               	rlf	??__tdiv_to_l_+2,w
  5359  0814  00F9               	movwf	??__tdiv_to_l_+3
  5360  0815  0879               	movf	??__tdiv_to_l_+3,w
  5361  0816  1283               	bcf	3,5	;RP0=0, select bank0
  5362  0817  1303               	bcf	3,6	;RP1=0, select bank0
  5363  0818  00A5               	movwf	__tdiv_to_l_@exp1
  5364  0819  08A5               	movf	__tdiv_to_l_@exp1,f
  5365  081A  1D03               	skipz
  5366  081B  2825               	goto	l2584
  5367  081C  3000               	movlw	0
  5368  081D  00F3               	movwf	?__tdiv_to_l_+3
  5369  081E  3000               	movlw	0
  5370  081F  00F2               	movwf	?__tdiv_to_l_+2
  5371  0820  3000               	movlw	0
  5372  0821  00F1               	movwf	?__tdiv_to_l_+1
  5373  0822  3000               	movlw	0
  5374  0823  00F0               	movwf	?__tdiv_to_l_
  5375  0824  0008               	return
  5376  0825                     l2584:	
  5377  0825  0873               	movf	__tdiv_to_l_@f2,w
  5378  0826  00F6               	movwf	??__tdiv_to_l_
  5379  0827  0874               	movf	__tdiv_to_l_@f2+1,w
  5380  0828  00F7               	movwf	??__tdiv_to_l_+1
  5381  0829  0875               	movf	__tdiv_to_l_@f2+2,w
  5382  082A  00F8               	movwf	??__tdiv_to_l_+2
  5383  082B  1003               	clrc
  5384  082C  0D77               	rlf	??__tdiv_to_l_+1,w
  5385  082D  0D78               	rlf	??__tdiv_to_l_+2,w
  5386  082E  00F9               	movwf	??__tdiv_to_l_+3
  5387  082F  0879               	movf	??__tdiv_to_l_+3,w
  5388  0830  00A4               	movwf	__tdiv_to_l_@cntr
  5389  0831  08A4               	movf	__tdiv_to_l_@cntr,f
  5390  0832  1D03               	skipz
  5391  0833  283D               	goto	l488
  5392  0834  3000               	movlw	0
  5393  0835  00F3               	movwf	?__tdiv_to_l_+3
  5394  0836  3000               	movlw	0
  5395  0837  00F2               	movwf	?__tdiv_to_l_+2
  5396  0838  3000               	movlw	0
  5397  0839  00F1               	movwf	?__tdiv_to_l_+1
  5398  083A  3000               	movlw	0
  5399  083B  00F0               	movwf	?__tdiv_to_l_
  5400  083C  0008               	return
  5401  083D                     l488:	
  5402  083D  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5403  083E  30FF               	movlw	255
  5404  083F  05F0               	andwf	__tdiv_to_l_@f1,f
  5405  0840  30FF               	movlw	255
  5406  0841  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5407  0842  3000               	movlw	0
  5408  0843  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5409  0844  17F4               	bsf	__tdiv_to_l_@f2+1,7
  5410  0845  30FF               	movlw	255
  5411  0846  05F3               	andwf	__tdiv_to_l_@f2,f
  5412  0847  30FF               	movlw	255
  5413  0848  05F4               	andwf	__tdiv_to_l_@f2+1,f
  5414  0849  3000               	movlw	0
  5415  084A  05F5               	andwf	__tdiv_to_l_@f2+2,f
  5416  084B  3000               	movlw	0
  5417  084C  00A3               	movwf	__tdiv_to_l_@quot+3
  5418  084D  3000               	movlw	0
  5419  084E  00A2               	movwf	__tdiv_to_l_@quot+2
  5420  084F  3000               	movlw	0
  5421  0850  00A1               	movwf	__tdiv_to_l_@quot+1
  5422  0851  3000               	movlw	0
  5423  0852  00A0               	movwf	__tdiv_to_l_@quot
  5424  0853  307F               	movlw	127
  5425  0854  02A5               	subwf	__tdiv_to_l_@exp1,f
  5426  0855  3098               	movlw	152
  5427  0856  0724               	addwf	__tdiv_to_l_@cntr,w
  5428  0857  00F6               	movwf	??__tdiv_to_l_
  5429  0858  0876               	movf	??__tdiv_to_l_,w
  5430  0859  02A5               	subwf	__tdiv_to_l_@exp1,f
  5431  085A  3018               	movlw	24
  5432  085B  00F6               	movwf	??__tdiv_to_l_
  5433  085C  0876               	movf	??__tdiv_to_l_,w
  5434  085D  00A4               	movwf	__tdiv_to_l_@cntr
  5435  085E                     l2598:	
  5436  085E  3001               	movlw	1
  5437  085F  00F6               	movwf	??__tdiv_to_l_
  5438  0860                     u3355:	
  5439  0860  1003               	clrc
  5440  0861  0DA0               	rlf	__tdiv_to_l_@quot,f
  5441  0862  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5442  0863  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5443  0864  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5444  0865  0BF6               	decfsz	??__tdiv_to_l_,f
  5445  0866  2860               	goto	u3355
  5446  0867  0875               	movf	__tdiv_to_l_@f2+2,w
  5447  0868  0272               	subwf	__tdiv_to_l_@f1+2,w
  5448  0869  1D03               	skipz
  5449  086A  2871               	goto	u3365
  5450  086B  0874               	movf	__tdiv_to_l_@f2+1,w
  5451  086C  0271               	subwf	__tdiv_to_l_@f1+1,w
  5452  086D  1D03               	skipz
  5453  086E  2871               	goto	u3365
  5454  086F  0873               	movf	__tdiv_to_l_@f2,w
  5455  0870  0270               	subwf	__tdiv_to_l_@f1,w
  5456  0871                     u3365:	
  5457  0871  1C03               	skipc
  5458  0872  287E               	goto	l2606
  5459  0873  0873               	movf	__tdiv_to_l_@f2,w
  5460  0874  02F0               	subwf	__tdiv_to_l_@f1,f
  5461  0875  0874               	movf	__tdiv_to_l_@f2+1,w
  5462  0876  1C03               	skipc
  5463  0877  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  5464  0878  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5465  0879  0875               	movf	__tdiv_to_l_@f2+2,w
  5466  087A  1C03               	skipc
  5467  087B  0A75               	incf	__tdiv_to_l_@f2+2,w
  5468  087C  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5469  087D  1420               	bsf	__tdiv_to_l_@quot,0
  5470  087E                     l2606:	
  5471  087E  3001               	movlw	1
  5472  087F                     u3375:	
  5473  087F  1003               	clrc
  5474  0880  0DF0               	rlf	__tdiv_to_l_@f1,f
  5475  0881  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5476  0882  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5477  0883  3EFF               	addlw	-1
  5478  0884  1D03               	skipz
  5479  0885  287F               	goto	u3375
  5480  0886  3001               	movlw	1
  5481  0887  02A4               	subwf	__tdiv_to_l_@cntr,f
  5482  0888  1D03               	btfss	3,2
  5483  0889  285E               	goto	l2598
  5484  088A  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5485  088B  28AA               	goto	l2618
  5486  088C  0825               	movf	__tdiv_to_l_@exp1,w
  5487  088D  3A80               	xorlw	128
  5488  088E  3E97               	addlw	151
  5489  088F  1803               	skipnc
  5490  0890  289A               	goto	l2616
  5491  0891  3000               	movlw	0
  5492  0892  00F3               	movwf	?__tdiv_to_l_+3
  5493  0893  3000               	movlw	0
  5494  0894  00F2               	movwf	?__tdiv_to_l_+2
  5495  0895  3000               	movlw	0
  5496  0896  00F1               	movwf	?__tdiv_to_l_+1
  5497  0897  3000               	movlw	0
  5498  0898  00F0               	movwf	?__tdiv_to_l_
  5499  0899  0008               	return
  5500  089A                     l2616:	
  5501  089A  3001               	movlw	1
  5502  089B                     u3415:	
  5503  089B  1003               	clrc
  5504  089C  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5505  089D  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5506  089E  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5507  089F  0CA0               	rrf	__tdiv_to_l_@quot,f
  5508  08A0  3EFF               	addlw	-1
  5509  08A1  1D03               	skipz
  5510  08A2  289B               	goto	u3415
  5511  08A3  3001               	movlw	1
  5512  08A4  00F6               	movwf	??__tdiv_to_l_
  5513  08A5  0876               	movf	??__tdiv_to_l_,w
  5514  08A6  07A5               	addwf	__tdiv_to_l_@exp1,f
  5515  08A7  1903               	btfsc	3,2
  5516  08A8  28C5               	goto	l2628
  5517  08A9  289A               	goto	l2616
  5518  08AA                     l2618:	
  5519  08AA  3018               	movlw	24
  5520  08AB  0225               	subwf	__tdiv_to_l_@exp1,w
  5521  08AC  1C03               	skipc
  5522  08AD  28C2               	goto	l2626
  5523  08AE  3000               	movlw	0
  5524  08AF  00F3               	movwf	?__tdiv_to_l_+3
  5525  08B0  3000               	movlw	0
  5526  08B1  00F2               	movwf	?__tdiv_to_l_+2
  5527  08B2  3000               	movlw	0
  5528  08B3  00F1               	movwf	?__tdiv_to_l_+1
  5529  08B4  3000               	movlw	0
  5530  08B5  00F0               	movwf	?__tdiv_to_l_
  5531  08B6  0008               	return
  5532  08B7                     l2624:	
  5533  08B7  3001               	movlw	1
  5534  08B8  00F6               	movwf	??__tdiv_to_l_
  5535  08B9                     u3445:	
  5536  08B9  1003               	clrc
  5537  08BA  0DA0               	rlf	__tdiv_to_l_@quot,f
  5538  08BB  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5539  08BC  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5540  08BD  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5541  08BE  0BF6               	decfsz	??__tdiv_to_l_,f
  5542  08BF  28B9               	goto	u3445
  5543  08C0  3001               	movlw	1
  5544  08C1  02A5               	subwf	__tdiv_to_l_@exp1,f
  5545  08C2                     l2626:	
  5546  08C2  08A5               	movf	__tdiv_to_l_@exp1,f
  5547  08C3  1D03               	skipz
  5548  08C4  28B7               	goto	l2624
  5549  08C5                     l2628:	
  5550  08C5  0823               	movf	__tdiv_to_l_@quot+3,w
  5551  08C6  00F3               	movwf	?__tdiv_to_l_+3
  5552  08C7  0822               	movf	__tdiv_to_l_@quot+2,w
  5553  08C8  00F2               	movwf	?__tdiv_to_l_+2
  5554  08C9  0821               	movf	__tdiv_to_l_@quot+1,w
  5555  08CA  00F1               	movwf	?__tdiv_to_l_+1
  5556  08CB  0820               	movf	__tdiv_to_l_@quot,w
  5557  08CC  00F0               	movwf	?__tdiv_to_l_
  5558  08CD  0008               	return
  5559  08CE                     __end_of__tdiv_to_l_:	
  5560                           
  5561                           	psect	text8
  5562  13F1                     __ptext8:	
  5563 ;; *************** function __div_to_l_ *****************
  5564 ;; Defined at:
  5565 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  f1              3    0[COMMON] unsigned long 
  5568 ;;  f2              3    3[COMMON] unsigned long 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;  quot            4    0[BANK0 ] unsigned long 
  5571 ;;  exp1            1    5[BANK0 ] unsigned char 
  5572 ;;  cntr            1    4[BANK0 ] unsigned char 
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  4    0[COMMON] unsigned long 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5582 ;;      Params:         6       0       0       0       0
  5583 ;;      Locals:         0       6       0       0       0
  5584 ;;      Temps:          8       0       0       0       0
  5585 ;;      Totals:        14       6       0       0       0
  5586 ;;Total ram usage:       20 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; This function calls:
  5589 ;;		Nothing
  5590 ;; This function is called by:
  5591 ;;		_sprintf
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function __div_to_l_
  5597  13F1                     __div_to_l_:	
  5598                           
  5599                           ;incstack = 0
  5600                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5601  13F1  3070               	movlw	low __div_to_l_@f1
  5602  13F2  0084               	movwf	4
  5603  13F3  0800               	movf	0,w
  5604  13F4  00F6               	movwf	??__div_to_l_
  5605  13F5  0A84               	incf	4,f
  5606  13F6  0800               	movf	0,w
  5607  13F7  00F7               	movwf	??__div_to_l_+1
  5608  13F8  0A84               	incf	4,f
  5609  13F9  0800               	movf	0,w
  5610  13FA  00F8               	movwf	??__div_to_l_+2
  5611  13FB  0A84               	incf	4,f
  5612  13FC  0800               	movf	0,w
  5613  13FD  00F9               	movwf	??__div_to_l_+3
  5614  13FE  1003               	clrc
  5615  13FF  0D78               	rlf	??__div_to_l_+2,w
  5616  1400  0D79               	rlf	??__div_to_l_+3,w
  5617  1401  00FA               	movwf	??__div_to_l_+4
  5618  1402  087A               	movf	??__div_to_l_+4,w
  5619  1403  1283               	bcf	3,5	;RP0=0, select bank0
  5620  1404  1303               	bcf	3,6	;RP1=0, select bank0
  5621  1405  00A5               	movwf	__div_to_l_@exp1
  5622  1406  08A5               	movf	__div_to_l_@exp1,f
  5623  1407  1D03               	skipz
  5624  1408  2C12               	goto	l2638
  5625  1409  3000               	movlw	0
  5626  140A  00F3               	movwf	?__div_to_l_+3
  5627  140B  3000               	movlw	0
  5628  140C  00F2               	movwf	?__div_to_l_+2
  5629  140D  3000               	movlw	0
  5630  140E  00F1               	movwf	?__div_to_l_+1
  5631  140F  3000               	movlw	0
  5632  1410  00F0               	movwf	?__div_to_l_
  5633  1411  0008               	return
  5634  1412                     l2638:	
  5635  1412  3073               	movlw	low __div_to_l_@f2
  5636  1413  0084               	movwf	4
  5637  1414  0800               	movf	0,w
  5638  1415  00F6               	movwf	??__div_to_l_
  5639  1416  0A84               	incf	4,f
  5640  1417  0800               	movf	0,w
  5641  1418  00F7               	movwf	??__div_to_l_+1
  5642  1419  0A84               	incf	4,f
  5643  141A  0800               	movf	0,w
  5644  141B  00F8               	movwf	??__div_to_l_+2
  5645  141C  0A84               	incf	4,f
  5646  141D  0800               	movf	0,w
  5647  141E  00F9               	movwf	??__div_to_l_+3
  5648  141F  1003               	clrc
  5649  1420  0D78               	rlf	??__div_to_l_+2,w
  5650  1421  0D79               	rlf	??__div_to_l_+3,w
  5651  1422  00FA               	movwf	??__div_to_l_+4
  5652  1423  087A               	movf	??__div_to_l_+4,w
  5653  1424  00A4               	movwf	__div_to_l_@cntr
  5654  1425  08A4               	movf	__div_to_l_@cntr,f
  5655  1426  1D03               	skipz
  5656  1427  2C31               	goto	l2644
  5657  1428  3000               	movlw	0
  5658  1429  00F3               	movwf	?__div_to_l_+3
  5659  142A  3000               	movlw	0
  5660  142B  00F2               	movwf	?__div_to_l_+2
  5661  142C  3000               	movlw	0
  5662  142D  00F1               	movwf	?__div_to_l_+1
  5663  142E  3000               	movlw	0
  5664  142F  00F0               	movwf	?__div_to_l_
  5665  1430  0008               	return
  5666  1431                     l2644:	
  5667  1431  3070               	movlw	low __div_to_l_@f1
  5668  1432  0084               	movwf	4
  5669  1433  3000               	movlw	0
  5670  1434  0480               	iorwf	0,f
  5671  1435  0A84               	incf	4,f
  5672  1436  3000               	movlw	0
  5673  1437  0480               	iorwf	0,f
  5674  1438  0A84               	incf	4,f
  5675  1439  3080               	movlw	128
  5676  143A  0480               	iorwf	0,f
  5677  143B  0A84               	incf	4,f
  5678  143C  3000               	movlw	0
  5679  143D  0480               	iorwf	0,f
  5680  143E  3070               	movlw	low __div_to_l_@f1
  5681  143F  0084               	movwf	4
  5682  1440  30FF               	movlw	255
  5683  1441  0580               	andwf	0,f
  5684  1442  0A84               	incf	4,f
  5685  1443  30FF               	movlw	255
  5686  1444  0580               	andwf	0,f
  5687  1445  0A84               	incf	4,f
  5688  1446  30FF               	movlw	255
  5689  1447  0580               	andwf	0,f
  5690  1448  0A84               	incf	4,f
  5691  1449  3000               	movlw	0
  5692  144A  0580               	andwf	0,f
  5693  144B  3073               	movlw	low __div_to_l_@f2
  5694  144C  0084               	movwf	4
  5695  144D  3000               	movlw	0
  5696  144E  0480               	iorwf	0,f
  5697  144F  0A84               	incf	4,f
  5698  1450  3000               	movlw	0
  5699  1451  0480               	iorwf	0,f
  5700  1452  0A84               	incf	4,f
  5701  1453  3080               	movlw	128
  5702  1454  0480               	iorwf	0,f
  5703  1455  0A84               	incf	4,f
  5704  1456  3000               	movlw	0
  5705  1457  0480               	iorwf	0,f
  5706  1458  3073               	movlw	low __div_to_l_@f2
  5707  1459  0084               	movwf	4
  5708  145A  30FF               	movlw	255
  5709  145B  0580               	andwf	0,f
  5710  145C  0A84               	incf	4,f
  5711  145D  30FF               	movlw	255
  5712  145E  0580               	andwf	0,f
  5713  145F  0A84               	incf	4,f
  5714  1460  30FF               	movlw	255
  5715  1461  0580               	andwf	0,f
  5716  1462  0A84               	incf	4,f
  5717  1463  3000               	movlw	0
  5718  1464  0580               	andwf	0,f
  5719  1465  3000               	movlw	0
  5720  1466  00A3               	movwf	__div_to_l_@quot+3
  5721  1467  3000               	movlw	0
  5722  1468  00A2               	movwf	__div_to_l_@quot+2
  5723  1469  3000               	movlw	0
  5724  146A  00A1               	movwf	__div_to_l_@quot+1
  5725  146B  3000               	movlw	0
  5726  146C  00A0               	movwf	__div_to_l_@quot
  5727  146D  307F               	movlw	127
  5728  146E  02A5               	subwf	__div_to_l_@exp1,f
  5729  146F  30A0               	movlw	160
  5730  1470  0724               	addwf	__div_to_l_@cntr,w
  5731  1471  00F6               	movwf	??__div_to_l_
  5732  1472  0876               	movf	??__div_to_l_,w
  5733  1473  02A5               	subwf	__div_to_l_@exp1,f
  5734  1474  3020               	movlw	32
  5735  1475  00F6               	movwf	??__div_to_l_
  5736  1476  0876               	movf	??__div_to_l_,w
  5737  1477  00A4               	movwf	__div_to_l_@cntr
  5738  1478                     l2654:	
  5739  1478  3001               	movlw	1
  5740  1479  00F6               	movwf	??__div_to_l_
  5741  147A                     u3485:	
  5742  147A  1003               	clrc
  5743  147B  0DA0               	rlf	__div_to_l_@quot,f
  5744  147C  0DA1               	rlf	__div_to_l_@quot+1,f
  5745  147D  0DA2               	rlf	__div_to_l_@quot+2,f
  5746  147E  0DA3               	rlf	__div_to_l_@quot+3,f
  5747  147F  0BF6               	decfsz	??__div_to_l_,f
  5748  1480  2C7A               	goto	u3485
  5749  1481  3073               	movlw	low __div_to_l_@f2
  5750  1482  0084               	movwf	4
  5751  1483  0800               	movf	0,w
  5752  1484  00F6               	movwf	??__div_to_l_
  5753  1485  0A84               	incf	4,f
  5754  1486  0800               	movf	0,w
  5755  1487  00F7               	movwf	??__div_to_l_+1
  5756  1488  0A84               	incf	4,f
  5757  1489  0800               	movf	0,w
  5758  148A  00F8               	movwf	??__div_to_l_+2
  5759  148B  0A84               	incf	4,f
  5760  148C  0800               	movf	0,w
  5761  148D  00F9               	movwf	??__div_to_l_+3
  5762  148E  3070               	movlw	low __div_to_l_@f1
  5763  148F  0084               	movwf	4
  5764  1490  0800               	movf	0,w
  5765  1491  00FA               	movwf	??__div_to_l_+4
  5766  1492  0A84               	incf	4,f
  5767  1493  0800               	movf	0,w
  5768  1494  00FB               	movwf	??__div_to_l_+5
  5769  1495  0A84               	incf	4,f
  5770  1496  0800               	movf	0,w
  5771  1497  00FC               	movwf	??__div_to_l_+6
  5772  1498  0A84               	incf	4,f
  5773  1499  0800               	movf	0,w
  5774  149A  00FD               	movwf	??__div_to_l_+7
  5775  149B  0879               	movf	??__div_to_l_+3,w
  5776  149C  027D               	subwf	??__div_to_l_+7,w
  5777  149D  1D03               	skipz
  5778  149E  2CA9               	goto	u3495
  5779  149F  0878               	movf	??__div_to_l_+2,w
  5780  14A0  027C               	subwf	??__div_to_l_+6,w
  5781  14A1  1D03               	skipz
  5782  14A2  2CA9               	goto	u3495
  5783  14A3  0877               	movf	??__div_to_l_+1,w
  5784  14A4  027B               	subwf	??__div_to_l_+5,w
  5785  14A5  1D03               	skipz
  5786  14A6  2CA9               	goto	u3495
  5787  14A7  0876               	movf	??__div_to_l_,w
  5788  14A8  027A               	subwf	??__div_to_l_+4,w
  5789  14A9                     u3495:	
  5790  14A9  1C03               	skipc
  5791  14AA  2CCE               	goto	l413
  5792  14AB  3073               	movlw	low __div_to_l_@f2
  5793  14AC  0084               	movwf	4
  5794  14AD  0800               	movf	0,w
  5795  14AE  00F6               	movwf	??__div_to_l_
  5796  14AF  0A84               	incf	4,f
  5797  14B0  0800               	movf	0,w
  5798  14B1  00F7               	movwf	??__div_to_l_+1
  5799  14B2  0A84               	incf	4,f
  5800  14B3  0800               	movf	0,w
  5801  14B4  00F8               	movwf	??__div_to_l_+2
  5802  14B5  0A84               	incf	4,f
  5803  14B6  0800               	movf	0,w
  5804  14B7  00F9               	movwf	??__div_to_l_+3
  5805  14B8  3070               	movlw	low __div_to_l_@f1
  5806  14B9  0084               	movwf	4
  5807  14BA  0876               	movf	??__div_to_l_,w
  5808  14BB  0280               	subwf	0,f
  5809  14BC  0A84               	incf	4,f
  5810  14BD  0877               	movf	??__div_to_l_+1,w
  5811  14BE  1C03               	skipc
  5812  14BF  0F77               	incfsz	??__div_to_l_+1,w
  5813  14C0  0280               	subwf	0,f
  5814  14C1  0A84               	incf	4,f
  5815  14C2  0878               	movf	??__div_to_l_+2,w
  5816  14C3  1C03               	skipc
  5817  14C4  0F78               	incfsz	??__div_to_l_+2,w
  5818  14C5  0280               	subwf	0,f
  5819  14C6  0A84               	incf	4,f
  5820  14C7  0879               	movf	??__div_to_l_+3,w
  5821  14C8  1C03               	skipc
  5822  14C9  0A79               	incf	??__div_to_l_+3,w
  5823  14CA  0280               	subwf	0,f
  5824  14CB  3003               	movlw	3
  5825  14CC  0284               	subwf	4,f
  5826  14CD  1420               	bsf	__div_to_l_@quot,0
  5827  14CE                     l413:	
  5828  14CE  3070               	movlw	low __div_to_l_@f1
  5829  14CF  0084               	movwf	4
  5830  14D0  1003               	clrc
  5831  14D1  0D80               	rlf	0,f
  5832  14D2  0A84               	incf	4,f
  5833  14D3  0D80               	rlf	0,f
  5834  14D4  0A84               	incf	4,f
  5835  14D5  0D80               	rlf	0,f
  5836  14D6  0A84               	incf	4,f
  5837  14D7  0D80               	rlf	0,f
  5838  14D8  0384               	decf	4,f
  5839  14D9  0384               	decf	4,f
  5840  14DA  0384               	decf	4,f
  5841  14DB  3001               	movlw	1
  5842  14DC  02A4               	subwf	__div_to_l_@cntr,f
  5843  14DD  1D03               	btfss	3,2
  5844  14DE  2C78               	goto	l2654
  5845  14DF  1FA5               	btfss	__div_to_l_@exp1,7
  5846  14E0  2CFF               	goto	l2672
  5847  14E1  0825               	movf	__div_to_l_@exp1,w
  5848  14E2  3A80               	xorlw	128
  5849  14E3  3E9F               	addlw	159
  5850  14E4  1803               	skipnc
  5851  14E5  2CEF               	goto	l2670
  5852  14E6  3000               	movlw	0
  5853  14E7  00F3               	movwf	?__div_to_l_+3
  5854  14E8  3000               	movlw	0
  5855  14E9  00F2               	movwf	?__div_to_l_+2
  5856  14EA  3000               	movlw	0
  5857  14EB  00F1               	movwf	?__div_to_l_+1
  5858  14EC  3000               	movlw	0
  5859  14ED  00F0               	movwf	?__div_to_l_
  5860  14EE  0008               	return
  5861  14EF                     l2670:	
  5862  14EF  3001               	movlw	1
  5863  14F0                     u3535:	
  5864  14F0  1003               	clrc
  5865  14F1  0CA3               	rrf	__div_to_l_@quot+3,f
  5866  14F2  0CA2               	rrf	__div_to_l_@quot+2,f
  5867  14F3  0CA1               	rrf	__div_to_l_@quot+1,f
  5868  14F4  0CA0               	rrf	__div_to_l_@quot,f
  5869  14F5  3EFF               	addlw	-1
  5870  14F6  1D03               	skipz
  5871  14F7  2CF0               	goto	u3535
  5872  14F8  3001               	movlw	1
  5873  14F9  00F6               	movwf	??__div_to_l_
  5874  14FA  0876               	movf	??__div_to_l_,w
  5875  14FB  07A5               	addwf	__div_to_l_@exp1,f
  5876  14FC  1903               	btfsc	3,2
  5877  14FD  2D1A               	goto	l2682
  5878  14FE  2CEF               	goto	l2670
  5879  14FF                     l2672:	
  5880  14FF  3020               	movlw	32
  5881  1500  0225               	subwf	__div_to_l_@exp1,w
  5882  1501  1C03               	skipc
  5883  1502  2D17               	goto	l2680
  5884  1503  3000               	movlw	0
  5885  1504  00F3               	movwf	?__div_to_l_+3
  5886  1505  3000               	movlw	0
  5887  1506  00F2               	movwf	?__div_to_l_+2
  5888  1507  3000               	movlw	0
  5889  1508  00F1               	movwf	?__div_to_l_+1
  5890  1509  3000               	movlw	0
  5891  150A  00F0               	movwf	?__div_to_l_
  5892  150B  0008               	return
  5893  150C                     l2678:	
  5894  150C  3001               	movlw	1
  5895  150D  00F6               	movwf	??__div_to_l_
  5896  150E                     u3565:	
  5897  150E  1003               	clrc
  5898  150F  0DA0               	rlf	__div_to_l_@quot,f
  5899  1510  0DA1               	rlf	__div_to_l_@quot+1,f
  5900  1511  0DA2               	rlf	__div_to_l_@quot+2,f
  5901  1512  0DA3               	rlf	__div_to_l_@quot+3,f
  5902  1513  0BF6               	decfsz	??__div_to_l_,f
  5903  1514  2D0E               	goto	u3565
  5904  1515  3001               	movlw	1
  5905  1516  02A5               	subwf	__div_to_l_@exp1,f
  5906  1517                     l2680:	
  5907  1517  08A5               	movf	__div_to_l_@exp1,f
  5908  1518  1D03               	skipz
  5909  1519  2D0C               	goto	l2678
  5910  151A                     l2682:	
  5911  151A  0823               	movf	__div_to_l_@quot+3,w
  5912  151B  00F3               	movwf	?__div_to_l_+3
  5913  151C  0822               	movf	__div_to_l_@quot+2,w
  5914  151D  00F2               	movwf	?__div_to_l_+2
  5915  151E  0821               	movf	__div_to_l_@quot+1,w
  5916  151F  00F1               	movwf	?__div_to_l_+1
  5917  1520  0820               	movf	__div_to_l_@quot,w
  5918  1521  00F0               	movwf	?__div_to_l_
  5919  1522  0008               	return
  5920  1523                     __end_of__div_to_l_:	
  5921                           
  5922                           	psect	text9
  5923  1A3F                     __ptext9:	
  5924 ;; *************** function ___wmul *****************
  5925 ;; Defined at:
  5926 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  multiplier      2    0[COMMON] unsigned int 
  5929 ;;  multiplicand    2    2[COMMON] unsigned int 
  5930 ;; Auto vars:     Size  Location     Type
  5931 ;;  product         2    4[COMMON] unsigned int 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  2    0[COMMON] unsigned int 
  5934 ;; Registers used:
  5935 ;;		wreg, status,2, status,0
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5941 ;;      Params:         4       0       0       0       0
  5942 ;;      Locals:         2       0       0       0       0
  5943 ;;      Temps:          0       0       0       0       0
  5944 ;;      Totals:         6       0       0       0       0
  5945 ;;Total ram usage:        6 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; This function calls:
  5948 ;;		Nothing
  5949 ;; This function is called by:
  5950 ;;		_sprintf
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           
  5955                           ;psect for function ___wmul
  5956  1A3F                     ___wmul:	
  5957                           
  5958                           ;incstack = 0
  5959                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5960  1A3F  01F4               	clrf	___wmul@product
  5961  1A40  01F5               	clrf	___wmul@product+1
  5962  1A41                     l2688:	
  5963  1A41  1C70               	btfss	___wmul@multiplier,0
  5964  1A42  2A49               	goto	l255
  5965  1A43  0872               	movf	___wmul@multiplicand,w
  5966  1A44  07F4               	addwf	___wmul@product,f
  5967  1A45  1803               	skipnc
  5968  1A46  0AF5               	incf	___wmul@product+1,f
  5969  1A47  0873               	movf	___wmul@multiplicand+1,w
  5970  1A48  07F5               	addwf	___wmul@product+1,f
  5971  1A49                     l255:	
  5972  1A49  3001               	movlw	1
  5973  1A4A                     u3595:	
  5974  1A4A  1003               	clrc
  5975  1A4B  0DF2               	rlf	___wmul@multiplicand,f
  5976  1A4C  0DF3               	rlf	___wmul@multiplicand+1,f
  5977  1A4D  3EFF               	addlw	-1
  5978  1A4E  1D03               	skipz
  5979  1A4F  2A4A               	goto	u3595
  5980  1A50  3001               	movlw	1
  5981  1A51                     u3605:	
  5982  1A51  1003               	clrc
  5983  1A52  0CF1               	rrf	___wmul@multiplier+1,f
  5984  1A53  0CF0               	rrf	___wmul@multiplier,f
  5985  1A54  3EFF               	addlw	-1
  5986  1A55  1D03               	skipz
  5987  1A56  2A51               	goto	u3605
  5988  1A57  0871               	movf	___wmul@multiplier+1,w
  5989  1A58  0470               	iorwf	___wmul@multiplier,w
  5990  1A59  1D03               	skipz
  5991  1A5A  2A41               	goto	l2688
  5992  1A5B  0875               	movf	___wmul@product+1,w
  5993  1A5C  01F1               	clrf	?___wmul+1
  5994  1A5D  07F1               	addwf	?___wmul+1,f
  5995  1A5E  0874               	movf	___wmul@product,w
  5996  1A5F  01F0               	clrf	?___wmul
  5997  1A60  07F0               	addwf	?___wmul,f
  5998  1A61  0008               	return
  5999  1A62                     __end_of___wmul:	
  6000                           
  6001                           	psect	text10
  6002  1B43                     __ptext10:	
  6003 ;; *************** function ___llmod *****************
  6004 ;; Defined at:
  6005 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  divisor         4    0[COMMON] unsigned long 
  6008 ;;  dividend        4    4[COMMON] unsigned long 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  counter         1    9[COMMON] unsigned char 
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  4    0[COMMON] unsigned long 
  6013 ;; Registers used:
  6014 ;;		wreg, status,2, status,0
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6020 ;;      Params:         8       0       0       0       0
  6021 ;;      Locals:         1       0       0       0       0
  6022 ;;      Temps:          1       0       0       0       0
  6023 ;;      Totals:        10       0       0       0       0
  6024 ;;Total ram usage:       10 bytes
  6025 ;; Hardware stack levels used:    1
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_sprintf
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           
  6034                           ;psect for function ___llmod
  6035  1B43                     ___llmod:	
  6036                           
  6037                           ;incstack = 0
  6038                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6039  1B43  0873               	movf	___llmod@divisor+3,w
  6040  1B44  0472               	iorwf	___llmod@divisor+2,w
  6041  1B45  0471               	iorwf	___llmod@divisor+1,w
  6042  1B46  0470               	iorwf	___llmod@divisor,w
  6043  1B47  1903               	skipnz
  6044  1B48  2B86               	goto	l2738
  6045  1B49  01F9               	clrf	___llmod@counter
  6046  1B4A  0AF9               	incf	___llmod@counter,f
  6047  1B4B                     l2728:	
  6048  1B4B  1BF3               	btfsc	___llmod@divisor+3,7
  6049  1B4C  2B5B               	goto	l2730
  6050  1B4D  3001               	movlw	1
  6051  1B4E  00F8               	movwf	??___llmod
  6052  1B4F                     u3705:	
  6053  1B4F  1003               	clrc
  6054  1B50  0DF0               	rlf	___llmod@divisor,f
  6055  1B51  0DF1               	rlf	___llmod@divisor+1,f
  6056  1B52  0DF2               	rlf	___llmod@divisor+2,f
  6057  1B53  0DF3               	rlf	___llmod@divisor+3,f
  6058  1B54  0BF8               	decfsz	??___llmod,f
  6059  1B55  2B4F               	goto	u3705
  6060  1B56  3001               	movlw	1
  6061  1B57  00F8               	movwf	??___llmod
  6062  1B58  0878               	movf	??___llmod,w
  6063  1B59  07F9               	addwf	___llmod@counter,f
  6064  1B5A  2B4B               	goto	l2728
  6065  1B5B                     l2730:	
  6066  1B5B  0873               	movf	___llmod@divisor+3,w
  6067  1B5C  0277               	subwf	___llmod@dividend+3,w
  6068  1B5D  1D03               	skipz
  6069  1B5E  2B69               	goto	u3725
  6070  1B5F  0872               	movf	___llmod@divisor+2,w
  6071  1B60  0276               	subwf	___llmod@dividend+2,w
  6072  1B61  1D03               	skipz
  6073  1B62  2B69               	goto	u3725
  6074  1B63  0871               	movf	___llmod@divisor+1,w
  6075  1B64  0275               	subwf	___llmod@dividend+1,w
  6076  1B65  1D03               	skipz
  6077  1B66  2B69               	goto	u3725
  6078  1B67  0870               	movf	___llmod@divisor,w
  6079  1B68  0274               	subwf	___llmod@dividend,w
  6080  1B69                     u3725:	
  6081  1B69  1C03               	skipc
  6082  1B6A  2B79               	goto	l2734
  6083  1B6B  0870               	movf	___llmod@divisor,w
  6084  1B6C  02F4               	subwf	___llmod@dividend,f
  6085  1B6D  0871               	movf	___llmod@divisor+1,w
  6086  1B6E  1C03               	skipc
  6087  1B6F  0F71               	incfsz	___llmod@divisor+1,w
  6088  1B70  02F5               	subwf	___llmod@dividend+1,f
  6089  1B71  0872               	movf	___llmod@divisor+2,w
  6090  1B72  1C03               	skipc
  6091  1B73  0F72               	incfsz	___llmod@divisor+2,w
  6092  1B74  02F6               	subwf	___llmod@dividend+2,f
  6093  1B75  0873               	movf	___llmod@divisor+3,w
  6094  1B76  1C03               	skipc
  6095  1B77  0F73               	incfsz	___llmod@divisor+3,w
  6096  1B78  02F7               	subwf	___llmod@dividend+3,f
  6097  1B79                     l2734:	
  6098  1B79  3001               	movlw	1
  6099  1B7A                     u3735:	
  6100  1B7A  1003               	clrc
  6101  1B7B  0CF3               	rrf	___llmod@divisor+3,f
  6102  1B7C  0CF2               	rrf	___llmod@divisor+2,f
  6103  1B7D  0CF1               	rrf	___llmod@divisor+1,f
  6104  1B7E  0CF0               	rrf	___llmod@divisor,f
  6105  1B7F  3EFF               	addlw	-1
  6106  1B80  1D03               	skipz
  6107  1B81  2B7A               	goto	u3735
  6108  1B82  3001               	movlw	1
  6109  1B83  02F9               	subwf	___llmod@counter,f
  6110  1B84  1D03               	btfss	3,2
  6111  1B85  2B5B               	goto	l2730
  6112  1B86                     l2738:	
  6113  1B86  0877               	movf	___llmod@dividend+3,w
  6114  1B87  00F3               	movwf	?___llmod+3
  6115  1B88  0876               	movf	___llmod@dividend+2,w
  6116  1B89  00F2               	movwf	?___llmod+2
  6117  1B8A  0875               	movf	___llmod@dividend+1,w
  6118  1B8B  00F1               	movwf	?___llmod+1
  6119  1B8C  0874               	movf	___llmod@dividend,w
  6120  1B8D  00F0               	movwf	?___llmod
  6121  1B8E  0008               	return
  6122  1B8F                     __end_of___llmod:	
  6123                           
  6124                           	psect	text11
  6125  1C49                     __ptext11:	
  6126 ;; *************** function ___lldiv *****************
  6127 ;; Defined at:
  6128 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;  divisor         4    0[COMMON] unsigned long 
  6131 ;;  dividend        4    4[COMMON] unsigned long 
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  quotient        4    9[COMMON] unsigned long 
  6134 ;;  counter         1   13[COMMON] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  4    0[COMMON] unsigned long 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6144 ;;      Params:         8       0       0       0       0
  6145 ;;      Locals:         5       0       0       0       0
  6146 ;;      Temps:          1       0       0       0       0
  6147 ;;      Totals:        14       0       0       0       0
  6148 ;;Total ram usage:       14 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_sprintf
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           
  6158                           ;psect for function ___lldiv
  6159  1C49                     ___lldiv:	
  6160                           
  6161                           ;incstack = 0
  6162                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6163  1C49  3000               	movlw	0
  6164  1C4A  00FC               	movwf	___lldiv@quotient+3
  6165  1C4B  3000               	movlw	0
  6166  1C4C  00FB               	movwf	___lldiv@quotient+2
  6167  1C4D  3000               	movlw	0
  6168  1C4E  00FA               	movwf	___lldiv@quotient+1
  6169  1C4F  3000               	movlw	0
  6170  1C50  00F9               	movwf	___lldiv@quotient
  6171  1C51  0873               	movf	___lldiv@divisor+3,w
  6172  1C52  0472               	iorwf	___lldiv@divisor+2,w
  6173  1C53  0471               	iorwf	___lldiv@divisor+1,w
  6174  1C54  0470               	iorwf	___lldiv@divisor,w
  6175  1C55  1903               	skipnz
  6176  1C56  2C9E               	goto	l2718
  6177  1C57  01FD               	clrf	___lldiv@counter
  6178  1C58  0AFD               	incf	___lldiv@counter,f
  6179  1C59                     l2704:	
  6180  1C59  1BF3               	btfsc	___lldiv@divisor+3,7
  6181  1C5A  2C69               	goto	l2706
  6182  1C5B  3001               	movlw	1
  6183  1C5C  00F8               	movwf	??___lldiv
  6184  1C5D                     u3635:	
  6185  1C5D  1003               	clrc
  6186  1C5E  0DF0               	rlf	___lldiv@divisor,f
  6187  1C5F  0DF1               	rlf	___lldiv@divisor+1,f
  6188  1C60  0DF2               	rlf	___lldiv@divisor+2,f
  6189  1C61  0DF3               	rlf	___lldiv@divisor+3,f
  6190  1C62  0BF8               	decfsz	??___lldiv,f
  6191  1C63  2C5D               	goto	u3635
  6192  1C64  3001               	movlw	1
  6193  1C65  00F8               	movwf	??___lldiv
  6194  1C66  0878               	movf	??___lldiv,w
  6195  1C67  07FD               	addwf	___lldiv@counter,f
  6196  1C68  2C59               	goto	l2704
  6197  1C69                     l2706:	
  6198  1C69  3001               	movlw	1
  6199  1C6A  00F8               	movwf	??___lldiv
  6200  1C6B                     u3655:	
  6201  1C6B  1003               	clrc
  6202  1C6C  0DF9               	rlf	___lldiv@quotient,f
  6203  1C6D  0DFA               	rlf	___lldiv@quotient+1,f
  6204  1C6E  0DFB               	rlf	___lldiv@quotient+2,f
  6205  1C6F  0DFC               	rlf	___lldiv@quotient+3,f
  6206  1C70  0BF8               	decfsz	??___lldiv,f
  6207  1C71  2C6B               	goto	u3655
  6208  1C72  0873               	movf	___lldiv@divisor+3,w
  6209  1C73  0277               	subwf	___lldiv@dividend+3,w
  6210  1C74  1D03               	skipz
  6211  1C75  2C80               	goto	u3665
  6212  1C76  0872               	movf	___lldiv@divisor+2,w
  6213  1C77  0276               	subwf	___lldiv@dividend+2,w
  6214  1C78  1D03               	skipz
  6215  1C79  2C80               	goto	u3665
  6216  1C7A  0871               	movf	___lldiv@divisor+1,w
  6217  1C7B  0275               	subwf	___lldiv@dividend+1,w
  6218  1C7C  1D03               	skipz
  6219  1C7D  2C80               	goto	u3665
  6220  1C7E  0870               	movf	___lldiv@divisor,w
  6221  1C7F  0274               	subwf	___lldiv@dividend,w
  6222  1C80                     u3665:	
  6223  1C80  1C03               	skipc
  6224  1C81  2C91               	goto	l2714
  6225  1C82  0870               	movf	___lldiv@divisor,w
  6226  1C83  02F4               	subwf	___lldiv@dividend,f
  6227  1C84  0871               	movf	___lldiv@divisor+1,w
  6228  1C85  1C03               	skipc
  6229  1C86  0F71               	incfsz	___lldiv@divisor+1,w
  6230  1C87  02F5               	subwf	___lldiv@dividend+1,f
  6231  1C88  0872               	movf	___lldiv@divisor+2,w
  6232  1C89  1C03               	skipc
  6233  1C8A  0F72               	incfsz	___lldiv@divisor+2,w
  6234  1C8B  02F6               	subwf	___lldiv@dividend+2,f
  6235  1C8C  0873               	movf	___lldiv@divisor+3,w
  6236  1C8D  1C03               	skipc
  6237  1C8E  0F73               	incfsz	___lldiv@divisor+3,w
  6238  1C8F  02F7               	subwf	___lldiv@dividend+3,f
  6239  1C90  1479               	bsf	___lldiv@quotient,0
  6240  1C91                     l2714:	
  6241  1C91  3001               	movlw	1
  6242  1C92                     u3675:	
  6243  1C92  1003               	clrc
  6244  1C93  0CF3               	rrf	___lldiv@divisor+3,f
  6245  1C94  0CF2               	rrf	___lldiv@divisor+2,f
  6246  1C95  0CF1               	rrf	___lldiv@divisor+1,f
  6247  1C96  0CF0               	rrf	___lldiv@divisor,f
  6248  1C97  3EFF               	addlw	-1
  6249  1C98  1D03               	skipz
  6250  1C99  2C92               	goto	u3675
  6251  1C9A  3001               	movlw	1
  6252  1C9B  02FD               	subwf	___lldiv@counter,f
  6253  1C9C  1D03               	btfss	3,2
  6254  1C9D  2C69               	goto	l2706
  6255  1C9E                     l2718:	
  6256  1C9E  087C               	movf	___lldiv@quotient+3,w
  6257  1C9F  00F3               	movwf	?___lldiv+3
  6258  1CA0  087B               	movf	___lldiv@quotient+2,w
  6259  1CA1  00F2               	movwf	?___lldiv+2
  6260  1CA2  087A               	movf	___lldiv@quotient+1,w
  6261  1CA3  00F1               	movwf	?___lldiv+1
  6262  1CA4  0879               	movf	___lldiv@quotient,w
  6263  1CA5  00F0               	movwf	?___lldiv
  6264  1CA6  0008               	return
  6265  1CA7                     __end_of___lldiv:	
  6266                           
  6267                           	psect	text12
  6268  1A8D                     __ptext12:	
  6269 ;; *************** function _readADC *****************
  6270 ;; Defined at:
  6271 ;;		line 80 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\main.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  temp            2    4[COMMON] int 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  2    0[COMMON] int 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0, btemp+1
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6285 ;;      Params:         2       0       0       0       0
  6286 ;;      Locals:         2       0       0       0       0
  6287 ;;      Temps:          2       0       0       0       0
  6288 ;;      Totals:         6       0       0       0       0
  6289 ;;Total ram usage:        6 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_main
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _readADC
  6300  1A8D                     _readADC:	
  6301                           
  6302                           ;main.c: 82: int temp = 0;
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in _readADC: [wreg+status,2+status,0+btemp+1]
  6306  1A8D  01F4               	clrf	readADC@temp
  6307  1A8E  01F5               	clrf	readADC@temp+1
  6308                           
  6309                           ;main.c: 83: _delay((unsigned long)((20)*(4000000/4000.0)));
  6310  1A8F  301A               	movlw	26
  6311  1A90  00F3               	movwf	??_readADC+1
  6312  1A91  30F8               	movlw	248
  6313  1A92  00F2               	movwf	??_readADC
  6314  1A93                     u4327:	
  6315  1A93  0BF2               	decfsz	??_readADC,f
  6316  1A94  2A93               	goto	u4327
  6317  1A95  0BF3               	decfsz	??_readADC+1,f
  6318  1A96  2A93               	goto	u4327
  6319  1A97  0000               	nop
  6320                           
  6321                           ;main.c: 84: GO = 1;
  6322  1A98  1283               	bcf	3,5	;RP0=0, select bank0
  6323  1A99  1303               	bcf	3,6	;RP1=0, select bank0
  6324  1A9A  151F               	bsf	31,2	;volatile
  6325  1A9B                     l75:	
  6326                           ;main.c: 86: ;
  6327                           
  6328                           ;main.c: 85: while (GO_DONE == 1)
  6329                           
  6330  1A9B  191F               	btfsc	31,2	;volatile
  6331  1A9C  2A9B               	goto	l75
  6332                           
  6333                           ;main.c: 87: temp = ADRESH;
  6334  1A9D  081E               	movf	30,w	;volatile
  6335  1A9E  00F2               	movwf	??_readADC
  6336  1A9F  01F3               	clrf	??_readADC+1
  6337  1AA0  0872               	movf	??_readADC,w
  6338  1AA1  00F4               	movwf	readADC@temp
  6339  1AA2  0873               	movf	??_readADC+1,w
  6340  1AA3  00F5               	movwf	readADC@temp+1
  6341                           
  6342                           ;main.c: 88: temp = temp << 8;
  6343  1AA4  0875               	movf	readADC@temp+1,w
  6344  1AA5  00F3               	movwf	??_readADC+1
  6345  1AA6  0874               	movf	readADC@temp,w
  6346  1AA7  00F2               	movwf	??_readADC
  6347  1AA8  0872               	movf	??_readADC,w
  6348  1AA9  00F3               	movwf	??_readADC+1
  6349  1AAA  01F2               	clrf	??_readADC
  6350  1AAB  0872               	movf	??_readADC,w
  6351  1AAC  00F4               	movwf	readADC@temp
  6352  1AAD  0873               	movf	??_readADC+1,w
  6353  1AAE  00F5               	movwf	readADC@temp+1
  6354                           
  6355                           ;main.c: 89: temp = temp | ADRESL;
  6356  1AAF  0874               	movf	readADC@temp,w
  6357  1AB0  1683               	bsf	3,5	;RP0=1, select bank1
  6358  1AB1  1303               	bcf	3,6	;RP1=0, select bank1
  6359  1AB2  041E               	iorwf	30,w	;volatile
  6360  1AB3  00F2               	movwf	??_readADC
  6361  1AB4  0875               	movf	readADC@temp+1,w
  6362  1AB5  00F3               	movwf	??_readADC+1
  6363  1AB6  0872               	movf	??_readADC,w
  6364  1AB7  00F4               	movwf	readADC@temp
  6365  1AB8  0873               	movf	??_readADC+1,w
  6366  1AB9  00F5               	movwf	readADC@temp+1
  6367                           
  6368                           ;main.c: 90: return temp;
  6369  1ABA  0875               	movf	readADC@temp+1,w
  6370  1ABB  01F1               	clrf	?_readADC+1
  6371  1ABC  07F1               	addwf	?_readADC+1,f
  6372  1ABD  0874               	movf	readADC@temp,w
  6373  1ABE  01F0               	clrf	?_readADC
  6374  1ABF  07F0               	addwf	?_readADC,f
  6375  1AC0  0008               	return
  6376  1AC1                     __end_of_readADC:	
  6377                           
  6378                           	psect	text13
  6379  1A1C                     __ptext13:	
  6380 ;; *************** function _printToLCD *****************
  6381 ;; Defined at:
  6382 ;;		line 47 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\lcd_functions.h"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  STR             2    2[COMMON] PTR const unsigned char 
  6385 ;;		 -> STR_3(18), STR_2(18), main@buffer(16), 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;		None               void
  6390 ;; Registers used:
  6391 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6397 ;;      Params:         2       0       0       0       0
  6398 ;;      Locals:         0       0       0       0       0
  6399 ;;      Temps:          0       0       0       0       0
  6400 ;;      Totals:         2       0       0       0       0
  6401 ;;Total ram usage:        2 bytes
  6402 ;; Hardware stack levels used:    1
  6403 ;; Hardware stack levels required when called:    1
  6404 ;; This function calls:
  6405 ;;		_dataCTRL
  6406 ;; This function is called by:
  6407 ;;		_main
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           
  6412                           ;psect for function _printToLCD
  6413  1A1C                     _printToLCD:	
  6414  1A1C                     l2846:	
  6415                           ;lcd_functions.h: 49: while (*STR != '\0')
  6416                           
  6417                           ;incstack = 0
  6418                           ; Regs used in _printToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6419                           
  6420  1A1C  0873               	movf	printToLCD@STR+1,w
  6421  1A1D  1283               	bcf	3,5	;RP0=0, select bank0
  6422  1A1E  1303               	bcf	3,6	;RP1=0, select bank0
  6423  1A1F  00FF               	movwf	127
  6424  1A20  0872               	movf	printToLCD@STR,w
  6425  1A21  0084               	movwf	4
  6426  1A22  160A  118A  2000  160A  158A  	fcall	stringtab
  6427  1A27  3800               	iorlw	0
  6428  1A28  1903               	btfsc	3,2
  6429  1A29  0008               	return
  6430                           
  6431                           ;lcd_functions.h: 50: {
  6432                           ;lcd_functions.h: 51: dataCTRL(*STR);
  6433  1A2A  0873               	movf	printToLCD@STR+1,w
  6434  1A2B  1283               	bcf	3,5	;RP0=0, select bank0
  6435  1A2C  1303               	bcf	3,6	;RP1=0, select bank0
  6436  1A2D  00FF               	movwf	127
  6437  1A2E  0872               	movf	printToLCD@STR,w
  6438  1A2F  0084               	movwf	4
  6439  1A30  160A  118A  2000  160A  158A  	fcall	stringtab
  6440  1A35  160A  158A  2199  160A  158A  	fcall	_dataCTRL
  6441                           
  6442                           ;lcd_functions.h: 52: STR++;
  6443  1A3A  3001               	movlw	1
  6444  1A3B  07F2               	addwf	printToLCD@STR,f
  6445  1A3C  1803               	skipnc
  6446  1A3D  0AF3               	incf	printToLCD@STR+1,f
  6447  1A3E  2A1C               	goto	l2846
  6448  1A3F                     __end_of_printToLCD:	
  6449                           
  6450                           	psect	text14
  6451  1999                     __ptext14:	
  6452 ;; *************** function _dataCTRL *****************
  6453 ;; Defined at:
  6454 ;;		line 27 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\lcd_functions.h"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  DAT             1    wreg     unsigned char 
  6457 ;; Auto vars:     Size  Location     Type
  6458 ;;  DAT             1    1[COMMON] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;		None               void
  6461 ;; Registers used:
  6462 ;;		wreg
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6468 ;;      Params:         0       0       0       0       0
  6469 ;;      Locals:         1       0       0       0       0
  6470 ;;      Temps:          1       0       0       0       0
  6471 ;;      Totals:         2       0       0       0       0
  6472 ;;Total ram usage:        2 bytes
  6473 ;; Hardware stack levels used:    1
  6474 ;; This function calls:
  6475 ;;		Nothing
  6476 ;; This function is called by:
  6477 ;;		_printToLCD
  6478 ;; This function uses a non-reentrant model
  6479 ;;
  6480                           
  6481                           
  6482                           ;psect for function _dataCTRL
  6483  1999                     _dataCTRL:	
  6484                           
  6485                           ;incstack = 0
  6486                           ; Regs used in _dataCTRL: [wreg]
  6487                           ;dataCTRL@DAT stored from wreg
  6488  1999  00F1               	movwf	dataCTRL@DAT
  6489                           
  6490                           ;lcd_functions.h: 29: PORTD = DAT;
  6491  199A  0871               	movf	dataCTRL@DAT,w
  6492  199B  1283               	bcf	3,5	;RP0=0, select bank0
  6493  199C  1303               	bcf	3,6	;RP1=0, select bank0
  6494  199D  0088               	movwf	8	;volatile
  6495                           
  6496                           ;lcd_functions.h: 30: RB5 = 1;
  6497  199E  1686               	bsf	6,5	;volatile
  6498                           
  6499                           ;lcd_functions.h: 31: RB6 = 0;
  6500  199F  1306               	bcf	6,6	;volatile
  6501                           
  6502                           ;lcd_functions.h: 32: RB7 = 1;
  6503  19A0  1786               	bsf	6,7	;volatile
  6504                           
  6505                           ;lcd_functions.h: 33: _delay((unsigned long)((50)*(4000000/4000000.0)));
  6506  19A1  3010               	movlw	16
  6507  19A2  00F0               	movwf	??_dataCTRL
  6508  19A3                     u4337:	
  6509  19A3  0BF0               	decfsz	??_dataCTRL,f
  6510  19A4  29A3               	goto	u4337
  6511  19A5  0000               	nop
  6512                           
  6513                           ;lcd_functions.h: 34: RB7 = 0;
  6514  19A6  1283               	bcf	3,5	;RP0=0, select bank0
  6515  19A7  1303               	bcf	3,6	;RP1=0, select bank0
  6516  19A8  1386               	bcf	6,7	;volatile
  6517  19A9  0008               	return
  6518  19AA                     __end_of_dataCTRL:	
  6519                           
  6520                           	psect	text15
  6521  1523                     __ptext15:	
  6522 ;; *************** function _pow *****************
  6523 ;; Defined at:
  6524 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\pow.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  x               3    9[BANK1 ] unsigned char 
  6527 ;;  y               3   12[BANK1 ] unsigned char 
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  yi              4   22[BANK1 ] unsigned long 
  6530 ;;  sign            1   21[BANK1 ] unsigned char 
  6531 ;; Return value:  Size  Location     Type
  6532 ;;                  3    9[BANK1 ] unsigned char 
  6533 ;; Registers used:
  6534 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6535 ;; Tracked objects:
  6536 ;;		On entry : 0/0
  6537 ;;		On exit  : 0/0
  6538 ;;		Unchanged: 0/0
  6539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6540 ;;      Params:         0       0       6       0       0
  6541 ;;      Locals:         0       0      11       0       0
  6542 ;;      Temps:          0       1       0       0       0
  6543 ;;      Totals:         0       1      17       0       0
  6544 ;;Total ram usage:       18 bytes
  6545 ;; Hardware stack levels used:    1
  6546 ;; Hardware stack levels required when called:    4
  6547 ;; This function calls:
  6548 ;;		___ftge
  6549 ;;		___ftmul
  6550 ;;		___ftneg
  6551 ;;		___fttol
  6552 ;;		___lltoft
  6553 ;;		_exp
  6554 ;;		_log
  6555 ;; This function is called by:
  6556 ;;		_main
  6557 ;; This function uses a non-reentrant model
  6558 ;;
  6559                           
  6560                           
  6561                           ;psect for function _pow
  6562  1523                     _pow:	
  6563                           
  6564                           ;incstack = 0
  6565                           ; Regs used in _pow: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6566  1523  1683               	bsf	3,5	;RP0=1, select bank1
  6567  1524  1303               	bcf	3,6	;RP1=0, select bank1
  6568  1525  01B5               	clrf	pow@sign^(0+128)
  6569  1526  082B               	movf	(pow@x+2)^(0+128),w
  6570  1527  042A               	iorwf	(pow@x+1)^(0+128),w
  6571  1528  0429               	iorwf	pow@x^(0+128),w
  6572  1529  1D03               	skipz
  6573  152A  2D4D               	goto	l2874
  6574  152B  3000               	movlw	0
  6575  152C  00F0               	movwf	___ftge@ff1
  6576  152D  3000               	movlw	0
  6577  152E  00F1               	movwf	___ftge@ff1+1
  6578  152F  3000               	movlw	0
  6579  1530  00F2               	movwf	___ftge@ff1+2
  6580  1531  082C               	movf	pow@y^(0+128),w
  6581  1532  00F3               	movwf	___ftge@ff2
  6582  1533  082D               	movf	(pow@y+1)^(0+128),w
  6583  1534  00F4               	movwf	___ftge@ff2+1
  6584  1535  082E               	movf	(pow@y+2)^(0+128),w
  6585  1536  00F5               	movwf	___ftge@ff2+2
  6586  1537  160A  158A  238F  160A  118A  	fcall	___ftge
  6587  153C  1C03               	btfss	3,0
  6588  153D  2D44               	goto	l655
  6589  153E  3021               	movlw	33
  6590  153F  1683               	bsf	3,5	;RP0=1, select bank1
  6591  1540  1303               	bcf	3,6	;RP1=0, select bank1
  6592  1541  00C2               	movwf	_errno^(0+128)
  6593  1542  3000               	movlw	0
  6594  1543  00C3               	movwf	(_errno^(0+128)+1)
  6595  1544                     l655:	
  6596  1544  3000               	movlw	0
  6597  1545  1683               	bsf	3,5	;RP0=1, select bank1
  6598  1546  1303               	bcf	3,6	;RP1=0, select bank1
  6599  1547  00A9               	movwf	?_pow^(0+128)
  6600  1548  3000               	movlw	0
  6601  1549  00AA               	movwf	(?_pow+1)^(0+128)
  6602  154A  3000               	movlw	0
  6603  154B  00AB               	movwf	(?_pow+2)^(0+128)
  6604  154C  0008               	return
  6605  154D                     l2874:	
  6606  154D  082E               	movf	(pow@y+2)^(0+128),w
  6607  154E  042D               	iorwf	(pow@y+1)^(0+128),w
  6608  154F  042C               	iorwf	pow@y^(0+128),w
  6609  1550  1D03               	skipz
  6610  1551  2D59               	goto	l2880
  6611  1552  3000               	movlw	0
  6612  1553  00A9               	movwf	?_pow^(0+128)
  6613  1554  3080               	movlw	128
  6614  1555  00AA               	movwf	(?_pow+1)^(0+128)
  6615  1556  303F               	movlw	63
  6616  1557  00AB               	movwf	(?_pow+2)^(0+128)
  6617  1558  0008               	return
  6618  1559                     l2880:	
  6619  1559  0829               	movf	pow@x^(0+128),w
  6620  155A  00F0               	movwf	___ftge@ff1
  6621  155B  082A               	movf	(pow@x+1)^(0+128),w
  6622  155C  00F1               	movwf	___ftge@ff1+1
  6623  155D  082B               	movf	(pow@x+2)^(0+128),w
  6624  155E  00F2               	movwf	___ftge@ff1+2
  6625  155F  3000               	movlw	0
  6626  1560  00F3               	movwf	___ftge@ff2
  6627  1561  3000               	movlw	0
  6628  1562  00F4               	movwf	___ftge@ff2+1
  6629  1563  3000               	movlw	0
  6630  1564  00F5               	movwf	___ftge@ff2+2
  6631  1565  160A  158A  238F  160A  118A  	fcall	___ftge
  6632  156A  1803               	btfsc	3,0
  6633  156B  2DDD               	goto	l2892
  6634  156C  1683               	bsf	3,5	;RP0=1, select bank1
  6635  156D  1303               	bcf	3,6	;RP1=0, select bank1
  6636  156E  082C               	movf	pow@y^(0+128),w
  6637  156F  1283               	bcf	3,5	;RP0=0, select bank0
  6638  1570  1303               	bcf	3,6	;RP1=0, select bank0
  6639  1571  00C0               	movwf	___fttol@f1
  6640  1572  1683               	bsf	3,5	;RP0=1, select bank1
  6641  1573  1303               	bcf	3,6	;RP1=0, select bank1
  6642  1574  082D               	movf	(pow@y+1)^(0+128),w
  6643  1575  1283               	bcf	3,5	;RP0=0, select bank0
  6644  1576  1303               	bcf	3,6	;RP1=0, select bank0
  6645  1577  00C1               	movwf	___fttol@f1+1
  6646  1578  1683               	bsf	3,5	;RP0=1, select bank1
  6647  1579  1303               	bcf	3,6	;RP1=0, select bank1
  6648  157A  082E               	movf	(pow@y+2)^(0+128),w
  6649  157B  1283               	bcf	3,5	;RP0=0, select bank0
  6650  157C  1303               	bcf	3,6	;RP1=0, select bank0
  6651  157D  00C2               	movwf	___fttol@f1+2
  6652  157E  160A  158A  2588  160A  118A  	fcall	___fttol
  6653  1583  1283               	bcf	3,5	;RP0=0, select bank0
  6654  1584  1303               	bcf	3,6	;RP1=0, select bank0
  6655  1585  0843               	movf	?___fttol+3,w
  6656  1586  1683               	bsf	3,5	;RP0=1, select bank1
  6657  1587  1303               	bcf	3,6	;RP1=0, select bank1
  6658  1588  00B9               	movwf	(pow@yi+3)^(0+128)
  6659  1589  1283               	bcf	3,5	;RP0=0, select bank0
  6660  158A  1303               	bcf	3,6	;RP1=0, select bank0
  6661  158B  0842               	movf	?___fttol+2,w
  6662  158C  1683               	bsf	3,5	;RP0=1, select bank1
  6663  158D  1303               	bcf	3,6	;RP1=0, select bank1
  6664  158E  00B8               	movwf	(pow@yi+2)^(0+128)
  6665  158F  1283               	bcf	3,5	;RP0=0, select bank0
  6666  1590  1303               	bcf	3,6	;RP1=0, select bank0
  6667  1591  0841               	movf	?___fttol+1,w
  6668  1592  1683               	bsf	3,5	;RP0=1, select bank1
  6669  1593  1303               	bcf	3,6	;RP1=0, select bank1
  6670  1594  00B7               	movwf	(pow@yi+1)^(0+128)
  6671  1595  1283               	bcf	3,5	;RP0=0, select bank0
  6672  1596  1303               	bcf	3,6	;RP1=0, select bank0
  6673  1597  0840               	movf	?___fttol,w
  6674  1598  1683               	bsf	3,5	;RP0=1, select bank1
  6675  1599  1303               	bcf	3,6	;RP1=0, select bank1
  6676  159A  00B6               	movwf	pow@yi^(0+128)
  6677  159B  0839               	movf	(pow@yi+3)^(0+128),w
  6678  159C  00FB               	movwf	___lltoft@c+3
  6679  159D  0838               	movf	(pow@yi+2)^(0+128),w
  6680  159E  00FA               	movwf	___lltoft@c+2
  6681  159F  0837               	movf	(pow@yi+1)^(0+128),w
  6682  15A0  00F9               	movwf	___lltoft@c+1
  6683  15A1  0836               	movf	pow@yi^(0+128),w
  6684  15A2  00F8               	movwf	___lltoft@c
  6685  15A3  160A  158A  2262  160A  118A  	fcall	___lltoft
  6686  15A8  1683               	bsf	3,5	;RP0=1, select bank1
  6687  15A9  1303               	bcf	3,6	;RP1=0, select bank1
  6688  15AA  082E               	movf	(pow@y+2)^(0+128),w
  6689  15AB  067A               	xorwf	?___lltoft+2,w
  6690  15AC  1D03               	skipz
  6691  15AD  2DB4               	goto	u3915
  6692  15AE  082D               	movf	(pow@y+1)^(0+128),w
  6693  15AF  0679               	xorwf	?___lltoft+1,w
  6694  15B0  1D03               	skipz
  6695  15B1  2DB4               	goto	u3915
  6696  15B2  082C               	movf	pow@y^(0+128),w
  6697  15B3  0678               	xorwf	?___lltoft,w
  6698  15B4                     u3915:	
  6699  15B4  1903               	skipnz
  6700  15B5  2DC1               	goto	l2888
  6701  15B6  3021               	movlw	33
  6702  15B7  00C2               	movwf	_errno^(0+128)
  6703  15B8  3000               	movlw	0
  6704  15B9  00C3               	movwf	(_errno^(0+128)+1)
  6705  15BA  3000               	movlw	0
  6706  15BB  00A9               	movwf	?_pow^(0+128)
  6707  15BC  3000               	movlw	0
  6708  15BD  00AA               	movwf	(?_pow+1)^(0+128)
  6709  15BE  3000               	movlw	0
  6710  15BF  00AB               	movwf	(?_pow+2)^(0+128)
  6711  15C0  0008               	return
  6712  15C1                     l2888:	
  6713  15C1  0836               	movf	pow@yi^(0+128),w
  6714  15C2  3901               	andlw	1
  6715  15C3  1283               	bcf	3,5	;RP0=0, select bank0
  6716  15C4  1303               	bcf	3,6	;RP1=0, select bank0
  6717  15C5  00EC               	movwf	??_pow
  6718  15C6  086C               	movf	??_pow,w
  6719  15C7  1683               	bsf	3,5	;RP0=1, select bank1
  6720  15C8  1303               	bcf	3,6	;RP1=0, select bank1
  6721  15C9  00B5               	movwf	pow@sign^(0+128)
  6722  15CA  0829               	movf	pow@x^(0+128),w
  6723  15CB  00F0               	movwf	___ftneg@f1
  6724  15CC  082A               	movf	(pow@x+1)^(0+128),w
  6725  15CD  00F1               	movwf	___ftneg@f1+1
  6726  15CE  082B               	movf	(pow@x+2)^(0+128),w
  6727  15CF  00F2               	movwf	___ftneg@f1+2
  6728  15D0  120A  158A  2003  160A  118A  	fcall	___ftneg
  6729  15D5  0870               	movf	?___ftneg,w
  6730  15D6  1683               	bsf	3,5	;RP0=1, select bank1
  6731  15D7  1303               	bcf	3,6	;RP1=0, select bank1
  6732  15D8  00A9               	movwf	pow@x^(0+128)
  6733  15D9  0871               	movf	?___ftneg+1,w
  6734  15DA  00AA               	movwf	(pow@x+1)^(0+128)
  6735  15DB  0872               	movf	?___ftneg+2,w
  6736  15DC  00AB               	movwf	(pow@x+2)^(0+128)
  6737  15DD                     l2892:	
  6738  15DD  1683               	bsf	3,5	;RP0=1, select bank1
  6739  15DE  1303               	bcf	3,6	;RP1=0, select bank1
  6740  15DF  0829               	movf	pow@x^(0+128),w
  6741  15E0  1283               	bcf	3,5	;RP0=0, select bank0
  6742  15E1  1303               	bcf	3,6	;RP1=0, select bank0
  6743  15E2  00DE               	movwf	log@x
  6744  15E3  1683               	bsf	3,5	;RP0=1, select bank1
  6745  15E4  1303               	bcf	3,6	;RP1=0, select bank1
  6746  15E5  082A               	movf	(pow@x+1)^(0+128),w
  6747  15E6  1283               	bcf	3,5	;RP0=0, select bank0
  6748  15E7  1303               	bcf	3,6	;RP1=0, select bank0
  6749  15E8  00DF               	movwf	log@x+1
  6750  15E9  1683               	bsf	3,5	;RP0=1, select bank1
  6751  15EA  1303               	bcf	3,6	;RP1=0, select bank1
  6752  15EB  082B               	movf	(pow@x+2)^(0+128),w
  6753  15EC  1283               	bcf	3,5	;RP0=0, select bank0
  6754  15ED  1303               	bcf	3,6	;RP1=0, select bank0
  6755  15EE  00E0               	movwf	log@x+2
  6756  15EF  160A  118A  2145  160A  118A  	fcall	_log
  6757  15F4  1283               	bcf	3,5	;RP0=0, select bank0
  6758  15F5  1303               	bcf	3,6	;RP1=0, select bank0
  6759  15F6  085E               	movf	?_log,w
  6760  15F7  1683               	bsf	3,5	;RP0=1, select bank1
  6761  15F8  1303               	bcf	3,6	;RP1=0, select bank1
  6762  15F9  00AF               	movwf	_pow$667^(0+128)
  6763  15FA  1283               	bcf	3,5	;RP0=0, select bank0
  6764  15FB  1303               	bcf	3,6	;RP1=0, select bank0
  6765  15FC  085F               	movf	?_log+1,w
  6766  15FD  1683               	bsf	3,5	;RP0=1, select bank1
  6767  15FE  1303               	bcf	3,6	;RP1=0, select bank1
  6768  15FF  00B0               	movwf	(_pow$667+1)^(0+128)
  6769  1600  1283               	bcf	3,5	;RP0=0, select bank0
  6770  1601  1303               	bcf	3,6	;RP1=0, select bank0
  6771  1602  0860               	movf	?_log+2,w
  6772  1603  1683               	bsf	3,5	;RP0=1, select bank1
  6773  1604  1303               	bcf	3,6	;RP1=0, select bank1
  6774  1605  00B1               	movwf	(_pow$667+2)^(0+128)
  6775  1606  082C               	movf	pow@y^(0+128),w
  6776  1607  1283               	bcf	3,5	;RP0=0, select bank0
  6777  1608  1303               	bcf	3,6	;RP1=0, select bank0
  6778  1609  00A7               	movwf	___ftmul@f1
  6779  160A  1683               	bsf	3,5	;RP0=1, select bank1
  6780  160B  1303               	bcf	3,6	;RP1=0, select bank1
  6781  160C  082D               	movf	(pow@y+1)^(0+128),w
  6782  160D  1283               	bcf	3,5	;RP0=0, select bank0
  6783  160E  1303               	bcf	3,6	;RP1=0, select bank0
  6784  160F  00A8               	movwf	___ftmul@f1+1
  6785  1610  1683               	bsf	3,5	;RP0=1, select bank1
  6786  1611  1303               	bcf	3,6	;RP1=0, select bank1
  6787  1612  082E               	movf	(pow@y+2)^(0+128),w
  6788  1613  1283               	bcf	3,5	;RP0=0, select bank0
  6789  1614  1303               	bcf	3,6	;RP1=0, select bank0
  6790  1615  00A9               	movwf	___ftmul@f1+2
  6791  1616  1683               	bsf	3,5	;RP0=1, select bank1
  6792  1617  1303               	bcf	3,6	;RP1=0, select bank1
  6793  1618  082F               	movf	_pow$667^(0+128),w
  6794  1619  1283               	bcf	3,5	;RP0=0, select bank0
  6795  161A  1303               	bcf	3,6	;RP1=0, select bank0
  6796  161B  00AA               	movwf	___ftmul@f2
  6797  161C  1683               	bsf	3,5	;RP0=1, select bank1
  6798  161D  1303               	bcf	3,6	;RP1=0, select bank1
  6799  161E  0830               	movf	(_pow$667+1)^(0+128),w
  6800  161F  1283               	bcf	3,5	;RP0=0, select bank0
  6801  1620  1303               	bcf	3,6	;RP1=0, select bank0
  6802  1621  00AB               	movwf	___ftmul@f2+1
  6803  1622  1683               	bsf	3,5	;RP0=1, select bank1
  6804  1623  1303               	bcf	3,6	;RP1=0, select bank1
  6805  1624  0831               	movf	(_pow$667+2)^(0+128),w
  6806  1625  1283               	bcf	3,5	;RP0=0, select bank0
  6807  1626  1303               	bcf	3,6	;RP1=0, select bank0
  6808  1627  00AC               	movwf	___ftmul@f2+2
  6809  1628  160A  118A  2215  160A  118A  	fcall	___ftmul
  6810  162D  1283               	bcf	3,5	;RP0=0, select bank0
  6811  162E  1303               	bcf	3,6	;RP1=0, select bank0
  6812  162F  0827               	movf	?___ftmul,w
  6813  1630  1683               	bsf	3,5	;RP0=1, select bank1
  6814  1631  1303               	bcf	3,6	;RP1=0, select bank1
  6815  1632  00B2               	movwf	_pow$668^(0+128)
  6816  1633  1283               	bcf	3,5	;RP0=0, select bank0
  6817  1634  1303               	bcf	3,6	;RP1=0, select bank0
  6818  1635  0828               	movf	?___ftmul+1,w
  6819  1636  1683               	bsf	3,5	;RP0=1, select bank1
  6820  1637  1303               	bcf	3,6	;RP1=0, select bank1
  6821  1638  00B3               	movwf	(_pow$668+1)^(0+128)
  6822  1639  1283               	bcf	3,5	;RP0=0, select bank0
  6823  163A  1303               	bcf	3,6	;RP1=0, select bank0
  6824  163B  0829               	movf	?___ftmul+2,w
  6825  163C  1683               	bsf	3,5	;RP0=1, select bank1
  6826  163D  1303               	bcf	3,6	;RP1=0, select bank1
  6827  163E  00B4               	movwf	(_pow$668+2)^(0+128)
  6828  163F  0832               	movf	_pow$668^(0+128),w
  6829  1640  1283               	bcf	3,5	;RP0=0, select bank0
  6830  1641  1303               	bcf	3,6	;RP1=0, select bank0
  6831  1642  00E8               	movwf	exp@x
  6832  1643  1683               	bsf	3,5	;RP0=1, select bank1
  6833  1644  1303               	bcf	3,6	;RP1=0, select bank1
  6834  1645  0833               	movf	(_pow$668+1)^(0+128),w
  6835  1646  1283               	bcf	3,5	;RP0=0, select bank0
  6836  1647  1303               	bcf	3,6	;RP1=0, select bank0
  6837  1648  00E9               	movwf	exp@x+1
  6838  1649  1683               	bsf	3,5	;RP0=1, select bank1
  6839  164A  1303               	bcf	3,6	;RP1=0, select bank1
  6840  164B  0834               	movf	(_pow$668+2)^(0+128),w
  6841  164C  1283               	bcf	3,5	;RP0=0, select bank0
  6842  164D  1303               	bcf	3,6	;RP1=0, select bank0
  6843  164E  00EA               	movwf	exp@x+2
  6844  164F  160A  118A  267B  160A  118A  	fcall	_exp
  6845  1654  1283               	bcf	3,5	;RP0=0, select bank0
  6846  1655  1303               	bcf	3,6	;RP1=0, select bank0
  6847  1656  0868               	movf	?_exp,w
  6848  1657  1683               	bsf	3,5	;RP0=1, select bank1
  6849  1658  1303               	bcf	3,6	;RP1=0, select bank1
  6850  1659  00A9               	movwf	pow@x^(0+128)
  6851  165A  1283               	bcf	3,5	;RP0=0, select bank0
  6852  165B  1303               	bcf	3,6	;RP1=0, select bank0
  6853  165C  0869               	movf	?_exp+1,w
  6854  165D  1683               	bsf	3,5	;RP0=1, select bank1
  6855  165E  1303               	bcf	3,6	;RP1=0, select bank1
  6856  165F  00AA               	movwf	(pow@x+1)^(0+128)
  6857  1660  1283               	bcf	3,5	;RP0=0, select bank0
  6858  1661  1303               	bcf	3,6	;RP1=0, select bank0
  6859  1662  086A               	movf	?_exp+2,w
  6860  1663  1683               	bsf	3,5	;RP0=1, select bank1
  6861  1664  1303               	bcf	3,6	;RP1=0, select bank1
  6862  1665  00AB               	movwf	(pow@x+2)^(0+128)
  6863  1666  0835               	movf	pow@sign^(0+128),w
  6864  1667  1903               	btfsc	3,2
  6865  1668  0008               	return
  6866  1669  0829               	movf	pow@x^(0+128),w
  6867  166A  00F0               	movwf	___ftneg@f1
  6868  166B  082A               	movf	(pow@x+1)^(0+128),w
  6869  166C  00F1               	movwf	___ftneg@f1+1
  6870  166D  082B               	movf	(pow@x+2)^(0+128),w
  6871  166E  00F2               	movwf	___ftneg@f1+2
  6872  166F  120A  158A  2003   	fcall	___ftneg
  6873  1672  0870               	movf	?___ftneg,w
  6874  1673  1683               	bsf	3,5	;RP0=1, select bank1
  6875  1674  1303               	bcf	3,6	;RP1=0, select bank1
  6876  1675  00A9               	movwf	?_pow^(0+128)
  6877  1676  0871               	movf	?___ftneg+1,w
  6878  1677  00AA               	movwf	(?_pow+1)^(0+128)
  6879  1678  0872               	movf	?___ftneg+2,w
  6880  1679  00AB               	movwf	(?_pow+2)^(0+128)
  6881  167A  0008               	return
  6882  167B                     __end_of_pow:	
  6883                           
  6884                           	psect	text16
  6885  1145                     __ptext16:	
  6886 ;; *************** function _log *****************
  6887 ;; Defined at:
  6888 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\log.c"
  6889 ;; Parameters:    Size  Location     Type
  6890 ;;  x               3   62[BANK0 ] unsigned char 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  exponent        2   66[BANK0 ] int 
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  3   62[BANK0 ] int 
  6895 ;; Registers used:
  6896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6897 ;; Tracked objects:
  6898 ;;		On entry : 0/0
  6899 ;;		On exit  : 0/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6902 ;;      Params:         0       3       0       0       0
  6903 ;;      Locals:         0       2       0       0       0
  6904 ;;      Temps:          0       1       0       0       0
  6905 ;;      Totals:         0       6       0       0       0
  6906 ;;Total ram usage:        6 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:    3
  6909 ;; This function calls:
  6910 ;;		___awtoft
  6911 ;;		___ftadd
  6912 ;;		___ftge
  6913 ;;		___ftmul
  6914 ;;		_eval_poly
  6915 ;;		_frexp
  6916 ;; This function is called by:
  6917 ;;		_pow
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           
  6921                           
  6922                           ;psect for function _log
  6923  1145                     _log:	
  6924                           
  6925                           ;incstack = 0
  6926                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6927  1145  1283               	bcf	3,5	;RP0=0, select bank0
  6928  1146  1303               	bcf	3,6	;RP1=0, select bank0
  6929  1147  085E               	movf	log@x,w
  6930  1148  00F0               	movwf	___ftge@ff1
  6931  1149  085F               	movf	log@x+1,w
  6932  114A  00F1               	movwf	___ftge@ff1+1
  6933  114B  0860               	movf	log@x+2,w
  6934  114C  00F2               	movwf	___ftge@ff1+2
  6935  114D  3000               	movlw	0
  6936  114E  00F3               	movwf	___ftge@ff2
  6937  114F  3000               	movlw	0
  6938  1150  00F4               	movwf	___ftge@ff2+1
  6939  1151  3000               	movlw	0
  6940  1152  00F5               	movwf	___ftge@ff2+2
  6941  1153  160A  158A  238F  160A  118A  	fcall	___ftge
  6942  1158  1803               	btfsc	3,0
  6943  1159  2969               	goto	l2758
  6944  115A  3021               	movlw	33
  6945  115B  1683               	bsf	3,5	;RP0=1, select bank1
  6946  115C  1303               	bcf	3,6	;RP1=0, select bank1
  6947  115D  00C2               	movwf	_errno^(0+128)
  6948  115E  3000               	movlw	0
  6949  115F  00C3               	movwf	(_errno^(0+128)+1)
  6950  1160  3000               	movlw	0
  6951  1161  1283               	bcf	3,5	;RP0=0, select bank0
  6952  1162  1303               	bcf	3,6	;RP1=0, select bank0
  6953  1163  00DE               	movwf	?_log
  6954  1164  3000               	movlw	0
  6955  1165  00DF               	movwf	?_log+1
  6956  1166  3000               	movlw	0
  6957  1167  00E0               	movwf	?_log+2
  6958  1168  0008               	return
  6959  1169                     l2758:	
  6960  1169  1283               	bcf	3,5	;RP0=0, select bank0
  6961  116A  1303               	bcf	3,6	;RP1=0, select bank0
  6962  116B  0860               	movf	log@x+2,w
  6963  116C  045F               	iorwf	log@x+1,w
  6964  116D  045E               	iorwf	log@x,w
  6965  116E  1D03               	skipz
  6966  116F  297F               	goto	l2764
  6967  1170  3022               	movlw	34
  6968  1171  1683               	bsf	3,5	;RP0=1, select bank1
  6969  1172  1303               	bcf	3,6	;RP1=0, select bank1
  6970  1173  00C2               	movwf	_errno^(0+128)
  6971  1174  3000               	movlw	0
  6972  1175  00C3               	movwf	(_errno^(0+128)+1)
  6973  1176  3000               	movlw	0
  6974  1177  1283               	bcf	3,5	;RP0=0, select bank0
  6975  1178  1303               	bcf	3,6	;RP1=0, select bank0
  6976  1179  00DE               	movwf	?_log
  6977  117A  3000               	movlw	0
  6978  117B  00DF               	movwf	?_log+1
  6979  117C  3000               	movlw	0
  6980  117D  00E0               	movwf	?_log+2
  6981  117E  0008               	return
  6982  117F                     l2764:	
  6983  117F  3000               	movlw	0
  6984  1180  00C7               	movwf	___ftadd@f1
  6985  1181  3080               	movlw	128
  6986  1182  00C8               	movwf	___ftadd@f1+1
  6987  1183  30BF               	movlw	191
  6988  1184  00C9               	movwf	___ftadd@f1+2
  6989  1185  3000               	movlw	0
  6990  1186  00A7               	movwf	___ftmul@f1
  6991  1187  3000               	movlw	0
  6992  1188  00A8               	movwf	___ftmul@f1+1
  6993  1189  3040               	movlw	64
  6994  118A  00A9               	movwf	___ftmul@f1+2
  6995  118B  3062               	movlw	log@exponent& (0+255)
  6996  118C  00E1               	movwf	??_log
  6997  118D  0861               	movf	??_log,w
  6998  118E  00F3               	movwf	frexp@eptr
  6999  118F  085E               	movf	log@x,w
  7000  1190  00F0               	movwf	frexp@value
  7001  1191  085F               	movf	log@x+1,w
  7002  1192  00F1               	movwf	frexp@value+1
  7003  1193  0860               	movf	log@x+2,w
  7004  1194  00F2               	movwf	frexp@value+2
  7005  1195  160A  158A  22C1  160A  118A  	fcall	_frexp
  7006  119A  0870               	movf	?_frexp,w
  7007  119B  1283               	bcf	3,5	;RP0=0, select bank0
  7008  119C  1303               	bcf	3,6	;RP1=0, select bank0
  7009  119D  00AA               	movwf	___ftmul@f2
  7010  119E  0871               	movf	?_frexp+1,w
  7011  119F  00AB               	movwf	___ftmul@f2+1
  7012  11A0  0872               	movf	?_frexp+2,w
  7013  11A1  00AC               	movwf	___ftmul@f2+2
  7014  11A2  160A  118A  2215  160A  118A  	fcall	___ftmul
  7015  11A7  1283               	bcf	3,5	;RP0=0, select bank0
  7016  11A8  1303               	bcf	3,6	;RP1=0, select bank0
  7017  11A9  0827               	movf	?___ftmul,w
  7018  11AA  00CA               	movwf	___ftadd@f2
  7019  11AB  0828               	movf	?___ftmul+1,w
  7020  11AC  00CB               	movwf	___ftadd@f2+1
  7021  11AD  0829               	movf	?___ftmul+2,w
  7022  11AE  00CC               	movwf	___ftadd@f2+2
  7023  11AF  160A  118A  22E8  160A  118A  	fcall	___ftadd
  7024  11B4  1283               	bcf	3,5	;RP0=0, select bank0
  7025  11B5  1303               	bcf	3,6	;RP1=0, select bank0
  7026  11B6  0847               	movf	?___ftadd,w
  7027  11B7  00DE               	movwf	log@x
  7028  11B8  0848               	movf	?___ftadd+1,w
  7029  11B9  00DF               	movwf	log@x+1
  7030  11BA  0849               	movf	?___ftadd+2,w
  7031  11BB  00E0               	movwf	log@x+2
  7032  11BC  30FF               	movlw	255
  7033  11BD  07E2               	addwf	log@exponent,f
  7034  11BE  1803               	skipnc
  7035  11BF  0AE3               	incf	log@exponent+1,f
  7036  11C0  30FF               	movlw	255
  7037  11C1  07E3               	addwf	log@exponent+1,f
  7038  11C2  085E               	movf	log@x,w
  7039  11C3  00D4               	movwf	eval_poly@x
  7040  11C4  085F               	movf	log@x+1,w
  7041  11C5  00D5               	movwf	eval_poly@x+1
  7042  11C6  0860               	movf	log@x+2,w
  7043  11C7  00D6               	movwf	eval_poly@x+2
  7044  11C8  3095               	movlw	(log@coeff-__stringbase)& (0+255)
  7045  11C9  00E1               	movwf	??_log
  7046  11CA  0861               	movf	??_log,w
  7047  11CB  00D7               	movwf	eval_poly@d
  7048  11CC  3008               	movlw	8
  7049  11CD  00D8               	movwf	eval_poly@n
  7050  11CE  3000               	movlw	0
  7051  11CF  00D9               	movwf	eval_poly@n+1
  7052  11D0  160A  158A  250F  160A  118A  	fcall	_eval_poly
  7053  11D5  1283               	bcf	3,5	;RP0=0, select bank0
  7054  11D6  1303               	bcf	3,6	;RP1=0, select bank0
  7055  11D7  0854               	movf	?_eval_poly,w
  7056  11D8  00DE               	movwf	log@x
  7057  11D9  0855               	movf	?_eval_poly+1,w
  7058  11DA  00DF               	movwf	log@x+1
  7059  11DB  0856               	movf	?_eval_poly+2,w
  7060  11DC  00E0               	movwf	log@x+2
  7061  11DD  085E               	movf	log@x,w
  7062  11DE  00C7               	movwf	___ftadd@f1
  7063  11DF  085F               	movf	log@x+1,w
  7064  11E0  00C8               	movwf	___ftadd@f1+1
  7065  11E1  0860               	movf	log@x+2,w
  7066  11E2  00C9               	movwf	___ftadd@f1+2
  7067  11E3  3072               	movlw	114
  7068  11E4  00A7               	movwf	___ftmul@f1
  7069  11E5  3031               	movlw	49
  7070  11E6  00A8               	movwf	___ftmul@f1+1
  7071  11E7  303F               	movlw	63
  7072  11E8  00A9               	movwf	___ftmul@f1+2
  7073  11E9  0863               	movf	log@exponent+1,w
  7074  11EA  01F9               	clrf	___awtoft@c+1
  7075  11EB  07F9               	addwf	___awtoft@c+1,f
  7076  11EC  0862               	movf	log@exponent,w
  7077  11ED  01F8               	clrf	___awtoft@c
  7078  11EE  07F8               	addwf	___awtoft@c,f
  7079  11EF  160A  158A  21D9  160A  118A  	fcall	___awtoft
  7080  11F4  0878               	movf	?___awtoft,w
  7081  11F5  1283               	bcf	3,5	;RP0=0, select bank0
  7082  11F6  1303               	bcf	3,6	;RP1=0, select bank0
  7083  11F7  00AA               	movwf	___ftmul@f2
  7084  11F8  0879               	movf	?___awtoft+1,w
  7085  11F9  00AB               	movwf	___ftmul@f2+1
  7086  11FA  087A               	movf	?___awtoft+2,w
  7087  11FB  00AC               	movwf	___ftmul@f2+2
  7088  11FC  160A  118A  2215  160A  118A  	fcall	___ftmul
  7089  1201  1283               	bcf	3,5	;RP0=0, select bank0
  7090  1202  1303               	bcf	3,6	;RP1=0, select bank0
  7091  1203  0827               	movf	?___ftmul,w
  7092  1204  00CA               	movwf	___ftadd@f2
  7093  1205  0828               	movf	?___ftmul+1,w
  7094  1206  00CB               	movwf	___ftadd@f2+1
  7095  1207  0829               	movf	?___ftmul+2,w
  7096  1208  00CC               	movwf	___ftadd@f2+2
  7097  1209  160A  118A  22E8   	fcall	___ftadd
  7098  120C  1283               	bcf	3,5	;RP0=0, select bank0
  7099  120D  1303               	bcf	3,6	;RP1=0, select bank0
  7100  120E  0847               	movf	?___ftadd,w
  7101  120F  00DE               	movwf	?_log
  7102  1210  0848               	movf	?___ftadd+1,w
  7103  1211  00DF               	movwf	?_log+1
  7104  1212  0849               	movf	?___ftadd+2,w
  7105  1213  00E0               	movwf	?_log+2
  7106  1214  0008               	return
  7107  1215                     __end_of_log:	
  7108                           
  7109                           	psect	text17
  7110  167B                     __ptext17:	
  7111 ;; *************** function _exp *****************
  7112 ;; Defined at:
  7113 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\exp.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  x               3   72[BANK0 ] int 
  7116 ;; Auto vars:     Size  Location     Type
  7117 ;;  exponent        2    6[BANK1 ] int 
  7118 ;;  sign            1    8[BANK1 ] unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  3   72[BANK0 ] unsigned char 
  7121 ;; Registers used:
  7122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7128 ;;      Params:         0       3       0       0       0
  7129 ;;      Locals:         0       0       9       0       0
  7130 ;;      Temps:          0       1       0       0       0
  7131 ;;      Totals:         0       4       9       0       0
  7132 ;;Total ram usage:       13 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    3
  7135 ;; This function calls:
  7136 ;;		___awtoft
  7137 ;;		___ftdiv
  7138 ;;		___ftge
  7139 ;;		___ftmul
  7140 ;;		___ftneg
  7141 ;;		___ftsub
  7142 ;;		___fttol
  7143 ;;		_eval_poly
  7144 ;;		_floor
  7145 ;;		_ldexp
  7146 ;; This function is called by:
  7147 ;;		_pow
  7148 ;; This function uses a non-reentrant model
  7149 ;;
  7150                           
  7151                           
  7152                           ;psect for function _exp
  7153  167B                     _exp:	
  7154                           
  7155                           ;incstack = 0
  7156                           ; Regs used in _exp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7157  167B  1283               	bcf	3,5	;RP0=0, select bank0
  7158  167C  1303               	bcf	3,6	;RP1=0, select bank0
  7159  167D  086A               	movf	exp@x+2,w
  7160  167E  0469               	iorwf	exp@x+1,w
  7161  167F  0468               	iorwf	exp@x,w
  7162  1680  1D03               	skipz
  7163  1681  2E89               	goto	l2780
  7164  1682  3000               	movlw	0
  7165  1683  00E8               	movwf	?_exp
  7166  1684  3080               	movlw	128
  7167  1685  00E9               	movwf	?_exp+1
  7168  1686  303F               	movlw	63
  7169  1687  00EA               	movwf	?_exp+2
  7170  1688  0008               	return
  7171  1689                     l2780:	
  7172  1689  3072               	movlw	114
  7173  168A  00F0               	movwf	___ftge@ff1
  7174  168B  3031               	movlw	49
  7175  168C  00F1               	movwf	___ftge@ff1+1
  7176  168D  3044               	movlw	68
  7177  168E  00F2               	movwf	___ftge@ff1+2
  7178  168F  0868               	movf	exp@x,w
  7179  1690  00F3               	movwf	___ftge@ff2
  7180  1691  0869               	movf	exp@x+1,w
  7181  1692  00F4               	movwf	___ftge@ff2+1
  7182  1693  086A               	movf	exp@x+2,w
  7183  1694  00F5               	movwf	___ftge@ff2+2
  7184  1695  160A  158A  238F  160A  118A  	fcall	___ftge
  7185  169A  1803               	btfsc	3,0
  7186  169B  2EAA               	goto	l2790
  7187  169C  3022               	movlw	34
  7188  169D  1683               	bsf	3,5	;RP0=1, select bank1
  7189  169E  1303               	bcf	3,6	;RP1=0, select bank1
  7190  169F  00C2               	movwf	_errno^(0+128)
  7191  16A0  3000               	movlw	0
  7192  16A1  00C3               	movwf	(_errno^(0+128)+1)
  7193  16A2  30FF               	movlw	255
  7194  16A3  1283               	bcf	3,5	;RP0=0, select bank0
  7195  16A4  00E8               	movwf	?_exp
  7196  16A5  307F               	movlw	127
  7197  16A6  00E9               	movwf	?_exp+1
  7198  16A7  307F               	movlw	127
  7199  16A8  00EA               	movwf	?_exp+2
  7200  16A9  0008               	return
  7201  16AA                     l2790:	
  7202  16AA  1283               	bcf	3,5	;RP0=0, select bank0
  7203  16AB  1303               	bcf	3,6	;RP1=0, select bank0
  7204  16AC  0868               	movf	exp@x,w
  7205  16AD  00F0               	movwf	___ftge@ff1
  7206  16AE  0869               	movf	exp@x+1,w
  7207  16AF  00F1               	movwf	___ftge@ff1+1
  7208  16B0  086A               	movf	exp@x+2,w
  7209  16B1  00F2               	movwf	___ftge@ff1+2
  7210  16B2  3049               	movlw	73
  7211  16B3  00F3               	movwf	___ftge@ff2
  7212  16B4  303A               	movlw	58
  7213  16B5  00F4               	movwf	___ftge@ff2+1
  7214  16B6  30C4               	movlw	196
  7215  16B7  00F5               	movwf	___ftge@ff2+2
  7216  16B8  160A  158A  238F  160A  118A  	fcall	___ftge
  7217  16BD  1803               	btfsc	3,0
  7218  16BE  2ECE               	goto	l2796
  7219  16BF  3022               	movlw	34
  7220  16C0  1683               	bsf	3,5	;RP0=1, select bank1
  7221  16C1  1303               	bcf	3,6	;RP1=0, select bank1
  7222  16C2  00C2               	movwf	_errno^(0+128)
  7223  16C3  3000               	movlw	0
  7224  16C4  00C3               	movwf	(_errno^(0+128)+1)
  7225  16C5  3000               	movlw	0
  7226  16C6  1283               	bcf	3,5	;RP0=0, select bank0
  7227  16C7  1303               	bcf	3,6	;RP1=0, select bank0
  7228  16C8  00E8               	movwf	?_exp
  7229  16C9  3000               	movlw	0
  7230  16CA  00E9               	movwf	?_exp+1
  7231  16CB  3000               	movlw	0
  7232  16CC  00EA               	movwf	?_exp+2
  7233  16CD  0008               	return
  7234  16CE                     l2796:	
  7235  16CE  1283               	bcf	3,5	;RP0=0, select bank0
  7236  16CF  1303               	bcf	3,6	;RP1=0, select bank0
  7237  16D0  0868               	movf	exp@x,w
  7238  16D1  00F0               	movwf	___ftge@ff1
  7239  16D2  0869               	movf	exp@x+1,w
  7240  16D3  00F1               	movwf	___ftge@ff1+1
  7241  16D4  086A               	movf	exp@x+2,w
  7242  16D5  00F2               	movwf	___ftge@ff1+2
  7243  16D6  3000               	movlw	0
  7244  16D7  00F3               	movwf	___ftge@ff2
  7245  16D8  3000               	movlw	0
  7246  16D9  00F4               	movwf	___ftge@ff2+1
  7247  16DA  3000               	movlw	0
  7248  16DB  00F5               	movwf	___ftge@ff2+2
  7249  16DC  160A  158A  238F  160A  118A  	fcall	___ftge
  7250  16E1  3000               	movlw	0
  7251  16E2  1C03               	btfss	3,0
  7252  16E3  3001               	movlw	1
  7253  16E4  1283               	bcf	3,5	;RP0=0, select bank0
  7254  16E5  1303               	bcf	3,6	;RP1=0, select bank0
  7255  16E6  00EB               	movwf	??_exp
  7256  16E7  086B               	movf	??_exp,w
  7257  16E8  1683               	bsf	3,5	;RP0=1, select bank1
  7258  16E9  1303               	bcf	3,6	;RP1=0, select bank1
  7259  16EA  00A8               	movwf	exp@sign^(0+128)
  7260  16EB  0828               	movf	exp@sign^(0+128),w
  7261  16EC  1903               	btfsc	3,2
  7262  16ED  2F05               	goto	l2802
  7263  16EE  1283               	bcf	3,5	;RP0=0, select bank0
  7264  16EF  1303               	bcf	3,6	;RP1=0, select bank0
  7265  16F0  0868               	movf	exp@x,w
  7266  16F1  00F0               	movwf	___ftneg@f1
  7267  16F2  0869               	movf	exp@x+1,w
  7268  16F3  00F1               	movwf	___ftneg@f1+1
  7269  16F4  086A               	movf	exp@x+2,w
  7270  16F5  00F2               	movwf	___ftneg@f1+2
  7271  16F6  120A  158A  2003  160A  118A  	fcall	___ftneg
  7272  16FB  0870               	movf	?___ftneg,w
  7273  16FC  1283               	bcf	3,5	;RP0=0, select bank0
  7274  16FD  1303               	bcf	3,6	;RP1=0, select bank0
  7275  16FE  00E8               	movwf	exp@x
  7276  16FF  0871               	movf	?___ftneg+1,w
  7277  1700  00E9               	movwf	exp@x+1
  7278  1701  0872               	movf	?___ftneg+2,w
  7279  1702  00EA               	movwf	exp@x+2
  7280  1703  1683               	bsf	3,5	;RP0=1, select bank1
  7281  1704  1303               	bcf	3,6	;RP1=0, select bank1
  7282  1705                     l2802:	
  7283  1705  30AA               	movlw	170
  7284  1706  1283               	bcf	3,5	;RP0=0, select bank0
  7285  1707  00A7               	movwf	___ftmul@f1
  7286  1708  30B8               	movlw	184
  7287  1709  00A8               	movwf	___ftmul@f1+1
  7288  170A  303F               	movlw	63
  7289  170B  00A9               	movwf	___ftmul@f1+2
  7290  170C  0868               	movf	exp@x,w
  7291  170D  00AA               	movwf	___ftmul@f2
  7292  170E  0869               	movf	exp@x+1,w
  7293  170F  00AB               	movwf	___ftmul@f2+1
  7294  1710  086A               	movf	exp@x+2,w
  7295  1711  00AC               	movwf	___ftmul@f2+2
  7296  1712  160A  118A  2215  160A  118A  	fcall	___ftmul
  7297  1717  1283               	bcf	3,5	;RP0=0, select bank0
  7298  1718  1303               	bcf	3,6	;RP1=0, select bank0
  7299  1719  0827               	movf	?___ftmul,w
  7300  171A  00E8               	movwf	exp@x
  7301  171B  0828               	movf	?___ftmul+1,w
  7302  171C  00E9               	movwf	exp@x+1
  7303  171D  0829               	movf	?___ftmul+2,w
  7304  171E  00EA               	movwf	exp@x+2
  7305  171F  0868               	movf	exp@x,w
  7306  1720  00D6               	movwf	floor@x
  7307  1721  0869               	movf	exp@x+1,w
  7308  1722  00D7               	movwf	floor@x+1
  7309  1723  086A               	movf	exp@x+2,w
  7310  1724  00D8               	movwf	floor@x+2
  7311  1725  160A  158A  2616  160A  118A  	fcall	_floor
  7312  172A  1283               	bcf	3,5	;RP0=0, select bank0
  7313  172B  1303               	bcf	3,6	;RP1=0, select bank0
  7314  172C  0856               	movf	?_floor,w
  7315  172D  1683               	bsf	3,5	;RP0=1, select bank1
  7316  172E  1303               	bcf	3,6	;RP1=0, select bank1
  7317  172F  00A0               	movwf	_exp$669^(0+128)
  7318  1730  1283               	bcf	3,5	;RP0=0, select bank0
  7319  1731  1303               	bcf	3,6	;RP1=0, select bank0
  7320  1732  0857               	movf	?_floor+1,w
  7321  1733  1683               	bsf	3,5	;RP0=1, select bank1
  7322  1734  1303               	bcf	3,6	;RP1=0, select bank1
  7323  1735  00A1               	movwf	(_exp$669+1)^(0+128)
  7324  1736  1283               	bcf	3,5	;RP0=0, select bank0
  7325  1737  1303               	bcf	3,6	;RP1=0, select bank0
  7326  1738  0858               	movf	?_floor+2,w
  7327  1739  1683               	bsf	3,5	;RP0=1, select bank1
  7328  173A  1303               	bcf	3,6	;RP1=0, select bank1
  7329  173B  00A2               	movwf	(_exp$669+2)^(0+128)
  7330  173C  0820               	movf	_exp$669^(0+128),w
  7331  173D  1283               	bcf	3,5	;RP0=0, select bank0
  7332  173E  1303               	bcf	3,6	;RP1=0, select bank0
  7333  173F  00C0               	movwf	___fttol@f1
  7334  1740  1683               	bsf	3,5	;RP0=1, select bank1
  7335  1741  1303               	bcf	3,6	;RP1=0, select bank1
  7336  1742  0821               	movf	(_exp$669+1)^(0+128),w
  7337  1743  1283               	bcf	3,5	;RP0=0, select bank0
  7338  1744  1303               	bcf	3,6	;RP1=0, select bank0
  7339  1745  00C1               	movwf	___fttol@f1+1
  7340  1746  1683               	bsf	3,5	;RP0=1, select bank1
  7341  1747  1303               	bcf	3,6	;RP1=0, select bank1
  7342  1748  0822               	movf	(_exp$669+2)^(0+128),w
  7343  1749  1283               	bcf	3,5	;RP0=0, select bank0
  7344  174A  1303               	bcf	3,6	;RP1=0, select bank0
  7345  174B  00C2               	movwf	___fttol@f1+2
  7346  174C  160A  158A  2588  160A  118A  	fcall	___fttol
  7347  1751  1283               	bcf	3,5	;RP0=0, select bank0
  7348  1752  1303               	bcf	3,6	;RP1=0, select bank0
  7349  1753  0841               	movf	?___fttol+1,w
  7350  1754  1683               	bsf	3,5	;RP0=1, select bank1
  7351  1755  1303               	bcf	3,6	;RP1=0, select bank1
  7352  1756  01A7               	clrf	(exp@exponent+1)^(0+128)
  7353  1757  07A7               	addwf	(exp@exponent+1)^(0+128),f
  7354  1758  1283               	bcf	3,5	;RP0=0, select bank0
  7355  1759  1303               	bcf	3,6	;RP1=0, select bank0
  7356  175A  0840               	movf	?___fttol,w
  7357  175B  1683               	bsf	3,5	;RP0=1, select bank1
  7358  175C  1303               	bcf	3,6	;RP1=0, select bank1
  7359  175D  01A6               	clrf	exp@exponent^(0+128)
  7360  175E  07A6               	addwf	exp@exponent^(0+128),f
  7361  175F  0827               	movf	(exp@exponent+1)^(0+128),w
  7362  1760  01F9               	clrf	___awtoft@c+1
  7363  1761  07F9               	addwf	___awtoft@c+1,f
  7364  1762  0826               	movf	exp@exponent^(0+128),w
  7365  1763  01F8               	clrf	___awtoft@c
  7366  1764  07F8               	addwf	___awtoft@c,f
  7367  1765  160A  158A  21D9  160A  118A  	fcall	___awtoft
  7368  176A  0878               	movf	?___awtoft,w
  7369  176B  1283               	bcf	3,5	;RP0=0, select bank0
  7370  176C  1303               	bcf	3,6	;RP1=0, select bank0
  7371  176D  00D4               	movwf	___ftsub@f2
  7372  176E  0879               	movf	?___awtoft+1,w
  7373  176F  00D5               	movwf	___ftsub@f2+1
  7374  1770  087A               	movf	?___awtoft+2,w
  7375  1771  00D6               	movwf	___ftsub@f2+2
  7376  1772  0868               	movf	exp@x,w
  7377  1773  00D7               	movwf	___ftsub@f1
  7378  1774  0869               	movf	exp@x+1,w
  7379  1775  00D8               	movwf	___ftsub@f1+1
  7380  1776  086A               	movf	exp@x+2,w
  7381  1777  00D9               	movwf	___ftsub@f1+2
  7382  1778  160A  158A  21BD  160A  118A  	fcall	___ftsub
  7383  177D  1283               	bcf	3,5	;RP0=0, select bank0
  7384  177E  1303               	bcf	3,6	;RP1=0, select bank0
  7385  177F  0854               	movf	?___ftsub,w
  7386  1780  00E8               	movwf	exp@x
  7387  1781  0855               	movf	?___ftsub+1,w
  7388  1782  00E9               	movwf	exp@x+1
  7389  1783  0856               	movf	?___ftsub+2,w
  7390  1784  00EA               	movwf	exp@x+2
  7391  1785  0868               	movf	exp@x,w
  7392  1786  00D4               	movwf	eval_poly@x
  7393  1787  0869               	movf	exp@x+1,w
  7394  1788  00D5               	movwf	eval_poly@x+1
  7395  1789  086A               	movf	exp@x+2,w
  7396  178A  00D6               	movwf	eval_poly@x+2
  7397  178B  3077               	movlw	(exp@coeff-__stringbase)& (0+255)
  7398  178C  00EB               	movwf	??_exp
  7399  178D  086B               	movf	??_exp,w
  7400  178E  00D7               	movwf	eval_poly@d
  7401  178F  3009               	movlw	9
  7402  1790  00D8               	movwf	eval_poly@n
  7403  1791  3000               	movlw	0
  7404  1792  00D9               	movwf	eval_poly@n+1
  7405  1793  160A  158A  250F  160A  118A  	fcall	_eval_poly
  7406  1798  1283               	bcf	3,5	;RP0=0, select bank0
  7407  1799  1303               	bcf	3,6	;RP1=0, select bank0
  7408  179A  0854               	movf	?_eval_poly,w
  7409  179B  00DE               	movwf	ldexp@value
  7410  179C  0855               	movf	?_eval_poly+1,w
  7411  179D  00DF               	movwf	ldexp@value+1
  7412  179E  0856               	movf	?_eval_poly+2,w
  7413  179F  00E0               	movwf	ldexp@value+2
  7414  17A0  1683               	bsf	3,5	;RP0=1, select bank1
  7415  17A1  1303               	bcf	3,6	;RP1=0, select bank1
  7416  17A2  0827               	movf	(exp@exponent+1)^(0+128),w
  7417  17A3  1283               	bcf	3,5	;RP0=0, select bank0
  7418  17A4  1303               	bcf	3,6	;RP1=0, select bank0
  7419  17A5  01E2               	clrf	ldexp@newexp+1
  7420  17A6  07E2               	addwf	ldexp@newexp+1,f
  7421  17A7  1683               	bsf	3,5	;RP0=1, select bank1
  7422  17A8  1303               	bcf	3,6	;RP1=0, select bank1
  7423  17A9  0826               	movf	exp@exponent^(0+128),w
  7424  17AA  1283               	bcf	3,5	;RP0=0, select bank0
  7425  17AB  1303               	bcf	3,6	;RP1=0, select bank0
  7426  17AC  01E1               	clrf	ldexp@newexp
  7427  17AD  07E1               	addwf	ldexp@newexp,f
  7428  17AE  160A  158A  26AF  160A  118A  	fcall	_ldexp
  7429  17B3  1283               	bcf	3,5	;RP0=0, select bank0
  7430  17B4  1303               	bcf	3,6	;RP1=0, select bank0
  7431  17B5  085E               	movf	?_ldexp,w
  7432  17B6  00E8               	movwf	exp@x
  7433  17B7  085F               	movf	?_ldexp+1,w
  7434  17B8  00E9               	movwf	exp@x+1
  7435  17B9  0860               	movf	?_ldexp+2,w
  7436  17BA  00EA               	movwf	exp@x+2
  7437  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  7438  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  7439  17BD  0828               	movf	exp@sign^(0+128),w
  7440  17BE  1903               	btfsc	3,2
  7441  17BF  0008               	return
  7442  17C0  30FF               	movlw	255
  7443  17C1  00A3               	movwf	_exp$438^(0+128)
  7444  17C2  307F               	movlw	127
  7445  17C3  00A4               	movwf	(_exp$438+1)^(0+128)
  7446  17C4  307F               	movlw	127
  7447  17C5  00A5               	movwf	(_exp$438+2)^(0+128)
  7448  17C6  1283               	bcf	3,5	;RP0=0, select bank0
  7449  17C7  1303               	bcf	3,6	;RP1=0, select bank0
  7450  17C8  086A               	movf	exp@x+2,w
  7451  17C9  1683               	bsf	3,5	;RP0=1, select bank1
  7452  17CA  1303               	bcf	3,6	;RP1=0, select bank1
  7453  17CB  0625               	xorwf	(_exp$438+2)^(0+128),w
  7454  17CC  1D03               	skipz
  7455  17CD  2FDC               	goto	u3845
  7456  17CE  1283               	bcf	3,5	;RP0=0, select bank0
  7457  17CF  1303               	bcf	3,6	;RP1=0, select bank0
  7458  17D0  0869               	movf	exp@x+1,w
  7459  17D1  1683               	bsf	3,5	;RP0=1, select bank1
  7460  17D2  1303               	bcf	3,6	;RP1=0, select bank1
  7461  17D3  0624               	xorwf	(_exp$438+1)^(0+128),w
  7462  17D4  1D03               	skipz
  7463  17D5  2FDC               	goto	u3845
  7464  17D6  1283               	bcf	3,5	;RP0=0, select bank0
  7465  17D7  1303               	bcf	3,6	;RP1=0, select bank0
  7466  17D8  0868               	movf	exp@x,w
  7467  17D9  1683               	bsf	3,5	;RP0=1, select bank1
  7468  17DA  1303               	bcf	3,6	;RP1=0, select bank1
  7469  17DB  0623               	xorwf	_exp$438^(0+128),w
  7470  17DC                     u3845:	
  7471  17DC  1D03               	skipz
  7472  17DD  2FE7               	goto	l2824
  7473  17DE  3000               	movlw	0
  7474  17DF  1283               	bcf	3,5	;RP0=0, select bank0
  7475  17E0  1303               	bcf	3,6	;RP1=0, select bank0
  7476  17E1  00E8               	movwf	?_exp
  7477  17E2  3000               	movlw	0
  7478  17E3  00E9               	movwf	?_exp+1
  7479  17E4  3000               	movlw	0
  7480  17E5  00EA               	movwf	?_exp+2
  7481  17E6  0008               	return
  7482  17E7                     l2824:	
  7483  17E7  1283               	bcf	3,5	;RP0=0, select bank0
  7484  17E8  0868               	movf	exp@x,w
  7485  17E9  00B7               	movwf	___ftdiv@f2
  7486  17EA  0869               	movf	exp@x+1,w
  7487  17EB  00B8               	movwf	___ftdiv@f2+1
  7488  17EC  086A               	movf	exp@x+2,w
  7489  17ED  00B9               	movwf	___ftdiv@f2+2
  7490  17EE  3000               	movlw	0
  7491  17EF  00BA               	movwf	___ftdiv@f1
  7492  17F0  3080               	movlw	128
  7493  17F1  00BB               	movwf	___ftdiv@f1+1
  7494  17F2  303F               	movlw	63
  7495  17F3  00BC               	movwf	___ftdiv@f1+2
  7496  17F4  160A  158A  2748   	fcall	___ftdiv
  7497  17F7  1283               	bcf	3,5	;RP0=0, select bank0
  7498  17F8  1303               	bcf	3,6	;RP1=0, select bank0
  7499  17F9  0837               	movf	?___ftdiv,w
  7500  17FA  00E8               	movwf	?_exp
  7501  17FB  0838               	movf	?___ftdiv+1,w
  7502  17FC  00E9               	movwf	?_exp+1
  7503  17FD  0839               	movf	?___ftdiv+2,w
  7504  17FE  00EA               	movwf	?_exp+2
  7505  17FF  0008               	return
  7506  1800                     __end_of_exp:	
  7507                           
  7508                           	psect	text18
  7509  1EAF                     __ptext18:	
  7510 ;; *************** function _ldexp *****************
  7511 ;; Defined at:
  7512 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  7513 ;; Parameters:    Size  Location     Type
  7514 ;;  value           3   62[BANK0 ] unsigned char 
  7515 ;;  newexp          2   65[BANK0 ] int 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;		None
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  3   62[BANK0 ] int 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7527 ;;      Params:         0       5       0       0       0
  7528 ;;      Locals:         0       3       0       0       0
  7529 ;;      Temps:          0       2       0       0       0
  7530 ;;      Totals:         0      10       0       0       0
  7531 ;;Total ram usage:       10 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; Hardware stack levels required when called:    1
  7534 ;; This function calls:
  7535 ;;		___ftge
  7536 ;;		___ftneg
  7537 ;; This function is called by:
  7538 ;;		_exp
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           
  7543                           ;psect for function _ldexp
  7544  1EAF                     _ldexp:	
  7545                           
  7546                           ;incstack = 0
  7547                           ; Regs used in _ldexp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7548  1EAF  1283               	bcf	3,5	;RP0=0, select bank0
  7549  1EB0  1303               	bcf	3,6	;RP1=0, select bank0
  7550  1EB1  0860               	movf	ldexp@value+2,w
  7551  1EB2  045F               	iorwf	ldexp@value+1,w
  7552  1EB3  045E               	iorwf	ldexp@value,w
  7553  1EB4  1D03               	skipz
  7554  1EB5  2EBD               	goto	l2444
  7555  1EB6  3000               	movlw	0
  7556  1EB7  00DE               	movwf	?_ldexp
  7557  1EB8  3000               	movlw	0
  7558  1EB9  00DF               	movwf	?_ldexp+1
  7559  1EBA  3000               	movlw	0
  7560  1EBB  00E0               	movwf	?_ldexp+2
  7561  1EBC  0008               	return
  7562  1EBD                     l2444:	
  7563  1EBD  0860               	movf	ldexp@value+2,w
  7564  1EBE  397F               	andlw	127
  7565  1EBF  00E3               	movwf	??_ldexp
  7566  1EC0  01E4               	clrf	??_ldexp+1
  7567  1EC1  1003               	clrc
  7568  1EC2  0DE3               	rlf	??_ldexp,f
  7569  1EC3  0DE4               	rlf	??_ldexp+1,f
  7570  1EC4  0863               	movf	??_ldexp,w
  7571  1EC5  07E1               	addwf	ldexp@newexp,f
  7572  1EC6  1803               	skipnc
  7573  1EC7  0AE2               	incf	ldexp@newexp+1,f
  7574  1EC8  0864               	movf	??_ldexp+1,w
  7575  1EC9  07E2               	addwf	ldexp@newexp+1,f
  7576  1ECA  0D5F               	rlf	ldexp@value+1,w
  7577  1ECB  0D5F               	rlf	ldexp@value+1,w
  7578  1ECC  3901               	andlw	1
  7579  1ECD  00E3               	movwf	??_ldexp
  7580  1ECE  01E4               	clrf	??_ldexp+1
  7581  1ECF  0863               	movf	??_ldexp,w
  7582  1ED0  07E1               	addwf	ldexp@newexp,f
  7583  1ED1  1803               	skipnc
  7584  1ED2  0AE2               	incf	ldexp@newexp+1,f
  7585  1ED3  0864               	movf	??_ldexp+1,w
  7586  1ED4  07E2               	addwf	ldexp@newexp+1,f
  7587  1ED5  1FE2               	btfss	ldexp@newexp+1,7
  7588  1ED6  2EE6               	goto	l2454
  7589  1ED7  3022               	movlw	34
  7590  1ED8  1683               	bsf	3,5	;RP0=1, select bank1
  7591  1ED9  1303               	bcf	3,6	;RP1=0, select bank1
  7592  1EDA  00C2               	movwf	_errno^(0+128)
  7593  1EDB  3000               	movlw	0
  7594  1EDC  00C3               	movwf	(_errno^(0+128)+1)
  7595  1EDD  3000               	movlw	0
  7596  1EDE  1283               	bcf	3,5	;RP0=0, select bank0
  7597  1EDF  1303               	bcf	3,6	;RP1=0, select bank0
  7598  1EE0  00DE               	movwf	?_ldexp
  7599  1EE1  3000               	movlw	0
  7600  1EE2  00DF               	movwf	?_ldexp+1
  7601  1EE3  3000               	movlw	0
  7602  1EE4  00E0               	movwf	?_ldexp+2
  7603  1EE5  0008               	return
  7604  1EE6                     l2454:	
  7605  1EE6  0862               	movf	ldexp@newexp+1,w
  7606  1EE7  3A80               	xorlw	128
  7607  1EE8  00FF               	movwf	127
  7608  1EE9  3081               	movlw	129
  7609  1EEA  027F               	subwf	127,w
  7610  1EEB  1D03               	skipz
  7611  1EEC  2EEF               	goto	u3225
  7612  1EED  3000               	movlw	0
  7613  1EEE  0261               	subwf	ldexp@newexp,w
  7614  1EEF                     u3225:	
  7615  1EEF  1C03               	skipc
  7616  1EF0  2F2F               	goto	l2478
  7617  1EF1  3022               	movlw	34
  7618  1EF2  1683               	bsf	3,5	;RP0=1, select bank1
  7619  1EF3  1303               	bcf	3,6	;RP1=0, select bank1
  7620  1EF4  00C2               	movwf	_errno^(0+128)
  7621  1EF5  3000               	movlw	0
  7622  1EF6  00C3               	movwf	(_errno^(0+128)+1)
  7623  1EF7  1283               	bcf	3,5	;RP0=0, select bank0
  7624  1EF8  1303               	bcf	3,6	;RP1=0, select bank0
  7625  1EF9  085E               	movf	ldexp@value,w
  7626  1EFA  00F0               	movwf	___ftge@ff1
  7627  1EFB  085F               	movf	ldexp@value+1,w
  7628  1EFC  00F1               	movwf	___ftge@ff1+1
  7629  1EFD  0860               	movf	ldexp@value+2,w
  7630  1EFE  00F2               	movwf	___ftge@ff1+2
  7631  1EFF  3000               	movlw	0
  7632  1F00  00F3               	movwf	___ftge@ff2
  7633  1F01  3000               	movlw	0
  7634  1F02  00F4               	movwf	___ftge@ff2+1
  7635  1F03  3000               	movlw	0
  7636  1F04  00F5               	movwf	___ftge@ff2+2
  7637  1F05  160A  158A  238F  160A  158A  	fcall	___ftge
  7638  1F0A  1803               	btfsc	3,0
  7639  1F0B  2F26               	goto	l2474
  7640  1F0C  30FF               	movlw	255
  7641  1F0D  1283               	bcf	3,5	;RP0=0, select bank0
  7642  1F0E  1303               	bcf	3,6	;RP1=0, select bank0
  7643  1F0F  00E5               	movwf	_ldexp$475
  7644  1F10  307F               	movlw	127
  7645  1F11  00E6               	movwf	_ldexp$475+1
  7646  1F12  307F               	movlw	127
  7647  1F13  00E7               	movwf	_ldexp$475+2
  7648  1F14  0865               	movf	_ldexp$475,w
  7649  1F15  00F0               	movwf	___ftneg@f1
  7650  1F16  0866               	movf	_ldexp$475+1,w
  7651  1F17  00F1               	movwf	___ftneg@f1+1
  7652  1F18  0867               	movf	_ldexp$475+2,w
  7653  1F19  00F2               	movwf	___ftneg@f1+2
  7654  1F1A  120A  158A  2003   	fcall	___ftneg
  7655  1F1D  0870               	movf	?___ftneg,w
  7656  1F1E  1283               	bcf	3,5	;RP0=0, select bank0
  7657  1F1F  1303               	bcf	3,6	;RP1=0, select bank0
  7658  1F20  00DE               	movwf	?_ldexp
  7659  1F21  0871               	movf	?___ftneg+1,w
  7660  1F22  00DF               	movwf	?_ldexp+1
  7661  1F23  0872               	movf	?___ftneg+2,w
  7662  1F24  00E0               	movwf	?_ldexp+2
  7663  1F25  0008               	return
  7664  1F26                     l2474:	
  7665  1F26  30FF               	movlw	255
  7666  1F27  1283               	bcf	3,5	;RP0=0, select bank0
  7667  1F28  1303               	bcf	3,6	;RP1=0, select bank0
  7668  1F29  00DE               	movwf	?_ldexp
  7669  1F2A  307F               	movlw	127
  7670  1F2B  00DF               	movwf	?_ldexp+1
  7671  1F2C  307F               	movlw	127
  7672  1F2D  00E0               	movwf	?_ldexp+2
  7673  1F2E  0008               	return
  7674  1F2F                     l2478:	
  7675  1F2F  1283               	bcf	3,5	;RP0=0, select bank0
  7676  1F30  1303               	bcf	3,6	;RP1=0, select bank0
  7677  1F31  0862               	movf	ldexp@newexp+1,w
  7678  1F32  00E4               	movwf	??_ldexp+1
  7679  1F33  0861               	movf	ldexp@newexp,w
  7680  1F34  00E3               	movwf	??_ldexp
  7681  1F35  0D64               	rlf	??_ldexp+1,w
  7682  1F36  0CE4               	rrf	??_ldexp+1,f
  7683  1F37  0CE3               	rrf	??_ldexp,f
  7684  1F38  0860               	movf	ldexp@value+2,w
  7685  1F39  0663               	xorwf	??_ldexp,w
  7686  1F3A  3980               	andlw	-128
  7687  1F3B  0663               	xorwf	??_ldexp,w
  7688  1F3C  00E0               	movwf	ldexp@value+2
  7689  1F3D  0861               	movf	ldexp@newexp,w
  7690  1F3E  3901               	andlw	1
  7691  1F3F  00E3               	movwf	??_ldexp
  7692  1F40  0CE3               	rrf	??_ldexp,f
  7693  1F41  0CE3               	rrf	??_ldexp,f
  7694  1F42  085F               	movf	ldexp@value+1,w
  7695  1F43  0663               	xorwf	??_ldexp,w
  7696  1F44  397F               	andlw	-129
  7697  1F45  0663               	xorwf	??_ldexp,w
  7698  1F46  00DF               	movwf	ldexp@value+1
  7699  1F47  0008               	return
  7700  1F48                     __end_of_ldexp:	
  7701                           
  7702                           	psect	text19
  7703  0803                     __ptext19:	
  7704 ;; *************** function ___ftneg *****************
  7705 ;; Defined at:
  7706 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  f1              3    0[COMMON] float 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  3    0[COMMON] float 
  7713 ;; Registers used:
  7714 ;;		wreg
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7720 ;;      Params:         3       0       0       0       0
  7721 ;;      Locals:         0       0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0
  7723 ;;      Totals:         3       0       0       0       0
  7724 ;;Total ram usage:        3 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; This function calls:
  7727 ;;		Nothing
  7728 ;; This function is called by:
  7729 ;;		_sprintf
  7730 ;;		_pow
  7731 ;;		_exp
  7732 ;;		_ldexp
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           
  7737                           ;psect for function ___ftneg
  7738  0803                     ___ftneg:	
  7739                           
  7740                           ;incstack = 0
  7741                           ; Regs used in ___ftneg: [wreg]
  7742  0803  0872               	movf	___ftneg@f1+2,w
  7743  0804  0471               	iorwf	___ftneg@f1+1,w
  7744  0805  0470               	iorwf	___ftneg@f1,w
  7745  0806  1903               	skipnz
  7746  0807  0008               	return
  7747  0808  3080               	movlw	128
  7748  0809  06F2               	xorwf	___ftneg@f1+2,f
  7749  080A  0008               	return
  7750  080B                     __end_of___ftneg:	
  7751                           
  7752                           	psect	text20
  7753  1E16                     __ptext20:	
  7754 ;; *************** function _floor *****************
  7755 ;; Defined at:
  7756 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\floor.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  x               3   54[BANK0 ] float 
  7759 ;; Auto vars:     Size  Location     Type
  7760 ;;  i               3   58[BANK0 ] float 
  7761 ;;  expon           2   61[BANK0 ] int 
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  3   54[BANK0 ] int 
  7764 ;; Registers used:
  7765 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7771 ;;      Params:         0       3       0       0       0
  7772 ;;      Locals:         0       5       0       0       0
  7773 ;;      Temps:          0       1       0       0       0
  7774 ;;      Totals:         0       9       0       0       0
  7775 ;;Total ram usage:        9 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:    2
  7778 ;; This function calls:
  7779 ;;		___altoft
  7780 ;;		___ftadd
  7781 ;;		___ftge
  7782 ;;		___fttol
  7783 ;;		_frexp
  7784 ;; This function is called by:
  7785 ;;		_exp
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           
  7790                           ;psect for function _floor
  7791  1E16                     _floor:	
  7792                           
  7793                           ;incstack = 0
  7794                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7795  1E16  1283               	bcf	3,5	;RP0=0, select bank0
  7796  1E17  1303               	bcf	3,6	;RP1=0, select bank0
  7797  1E18  0856               	movf	floor@x,w
  7798  1E19  00F0               	movwf	frexp@value
  7799  1E1A  0857               	movf	floor@x+1,w
  7800  1E1B  00F1               	movwf	frexp@value+1
  7801  1E1C  0858               	movf	floor@x+2,w
  7802  1E1D  00F2               	movwf	frexp@value+2
  7803  1E1E  305D               	movlw	floor@expon& (0+255)
  7804  1E1F  00D9               	movwf	??_floor
  7805  1E20  0859               	movf	??_floor,w
  7806  1E21  00F3               	movwf	frexp@eptr
  7807  1E22  160A  158A  22C1  160A  158A  	fcall	_frexp
  7808  1E27  1283               	bcf	3,5	;RP0=0, select bank0
  7809  1E28  1303               	bcf	3,6	;RP1=0, select bank0
  7810  1E29  1FDE               	btfss	floor@expon+1,7
  7811  1E2A  2E50               	goto	l2414
  7812  1E2B  0856               	movf	floor@x,w
  7813  1E2C  00F0               	movwf	___ftge@ff1
  7814  1E2D  0857               	movf	floor@x+1,w
  7815  1E2E  00F1               	movwf	___ftge@ff1+1
  7816  1E2F  0858               	movf	floor@x+2,w
  7817  1E30  00F2               	movwf	___ftge@ff1+2
  7818  1E31  3000               	movlw	0
  7819  1E32  00F3               	movwf	___ftge@ff2
  7820  1E33  3000               	movlw	0
  7821  1E34  00F4               	movwf	___ftge@ff2+1
  7822  1E35  3000               	movlw	0
  7823  1E36  00F5               	movwf	___ftge@ff2+2
  7824  1E37  160A  158A  238F  160A  158A  	fcall	___ftge
  7825  1E3C  1803               	btfsc	3,0
  7826  1E3D  2E47               	goto	l2410
  7827  1E3E  3000               	movlw	0
  7828  1E3F  1283               	bcf	3,5	;RP0=0, select bank0
  7829  1E40  1303               	bcf	3,6	;RP1=0, select bank0
  7830  1E41  00D6               	movwf	?_floor
  7831  1E42  3080               	movlw	128
  7832  1E43  00D7               	movwf	?_floor+1
  7833  1E44  30BF               	movlw	191
  7834  1E45  00D8               	movwf	?_floor+2
  7835  1E46  0008               	return
  7836  1E47                     l2410:	
  7837  1E47  3000               	movlw	0
  7838  1E48  1283               	bcf	3,5	;RP0=0, select bank0
  7839  1E49  1303               	bcf	3,6	;RP1=0, select bank0
  7840  1E4A  00D6               	movwf	?_floor
  7841  1E4B  3000               	movlw	0
  7842  1E4C  00D7               	movwf	?_floor+1
  7843  1E4D  3000               	movlw	0
  7844  1E4E  00D8               	movwf	?_floor+2
  7845  1E4F  0008               	return
  7846  1E50                     l2414:	
  7847  1E50  3000               	movlw	0
  7848  1E51  025E               	subwf	floor@expon+1,w
  7849  1E52  3015               	movlw	21
  7850  1E53  1903               	skipnz
  7851  1E54  025D               	subwf	floor@expon,w
  7852  1E55  1803               	btfsc	3,0
  7853  1E56  0008               	return
  7854  1E57  0856               	movf	floor@x,w
  7855  1E58  00C0               	movwf	___fttol@f1
  7856  1E59  0857               	movf	floor@x+1,w
  7857  1E5A  00C1               	movwf	___fttol@f1+1
  7858  1E5B  0858               	movf	floor@x+2,w
  7859  1E5C  00C2               	movwf	___fttol@f1+2
  7860  1E5D  160A  158A  2588  160A  158A  	fcall	___fttol
  7861  1E62  1283               	bcf	3,5	;RP0=0, select bank0
  7862  1E63  1303               	bcf	3,6	;RP1=0, select bank0
  7863  1E64  0843               	movf	?___fttol+3,w
  7864  1E65  00D1               	movwf	___altoft@c+3
  7865  1E66  0842               	movf	?___fttol+2,w
  7866  1E67  00D0               	movwf	___altoft@c+2
  7867  1E68  0841               	movf	?___fttol+1,w
  7868  1E69  00CF               	movwf	___altoft@c+1
  7869  1E6A  0840               	movf	?___fttol,w
  7870  1E6B  00CE               	movwf	___altoft@c
  7871  1E6C  160A  158A  2301  160A  158A  	fcall	___altoft
  7872  1E71  1283               	bcf	3,5	;RP0=0, select bank0
  7873  1E72  1303               	bcf	3,6	;RP1=0, select bank0
  7874  1E73  084E               	movf	?___altoft,w
  7875  1E74  00DA               	movwf	floor@i
  7876  1E75  084F               	movf	?___altoft+1,w
  7877  1E76  00DB               	movwf	floor@i+1
  7878  1E77  0850               	movf	?___altoft+2,w
  7879  1E78  00DC               	movwf	floor@i+2
  7880  1E79  0856               	movf	floor@x,w
  7881  1E7A  00F0               	movwf	___ftge@ff1
  7882  1E7B  0857               	movf	floor@x+1,w
  7883  1E7C  00F1               	movwf	___ftge@ff1+1
  7884  1E7D  0858               	movf	floor@x+2,w
  7885  1E7E  00F2               	movwf	___ftge@ff1+2
  7886  1E7F  085A               	movf	floor@i,w
  7887  1E80  00F3               	movwf	___ftge@ff2
  7888  1E81  085B               	movf	floor@i+1,w
  7889  1E82  00F4               	movwf	___ftge@ff2+1
  7890  1E83  085C               	movf	floor@i+2,w
  7891  1E84  00F5               	movwf	___ftge@ff2+2
  7892  1E85  160A  158A  238F  160A  158A  	fcall	___ftge
  7893  1E8A  1803               	btfsc	3,0
  7894  1E8B  2EA6               	goto	l2424
  7895  1E8C  3000               	movlw	0
  7896  1E8D  1283               	bcf	3,5	;RP0=0, select bank0
  7897  1E8E  1303               	bcf	3,6	;RP1=0, select bank0
  7898  1E8F  00C7               	movwf	___ftadd@f1
  7899  1E90  3080               	movlw	128
  7900  1E91  00C8               	movwf	___ftadd@f1+1
  7901  1E92  30BF               	movlw	191
  7902  1E93  00C9               	movwf	___ftadd@f1+2
  7903  1E94  085A               	movf	floor@i,w
  7904  1E95  00CA               	movwf	___ftadd@f2
  7905  1E96  085B               	movf	floor@i+1,w
  7906  1E97  00CB               	movwf	___ftadd@f2+1
  7907  1E98  085C               	movf	floor@i+2,w
  7908  1E99  00CC               	movwf	___ftadd@f2+2
  7909  1E9A  160A  118A  22E8   	fcall	___ftadd
  7910  1E9D  1283               	bcf	3,5	;RP0=0, select bank0
  7911  1E9E  1303               	bcf	3,6	;RP1=0, select bank0
  7912  1E9F  0847               	movf	?___ftadd,w
  7913  1EA0  00D6               	movwf	?_floor
  7914  1EA1  0848               	movf	?___ftadd+1,w
  7915  1EA2  00D7               	movwf	?_floor+1
  7916  1EA3  0849               	movf	?___ftadd+2,w
  7917  1EA4  00D8               	movwf	?_floor+2
  7918  1EA5  0008               	return
  7919  1EA6                     l2424:	
  7920  1EA6  1283               	bcf	3,5	;RP0=0, select bank0
  7921  1EA7  1303               	bcf	3,6	;RP1=0, select bank0
  7922  1EA8  085A               	movf	floor@i,w
  7923  1EA9  00D6               	movwf	?_floor
  7924  1EAA  085B               	movf	floor@i+1,w
  7925  1EAB  00D7               	movwf	?_floor+1
  7926  1EAC  085C               	movf	floor@i+2,w
  7927  1EAD  00D8               	movwf	?_floor+2
  7928  1EAE  0008               	return
  7929  1EAF                     __end_of_floor:	
  7930                           
  7931                           	psect	text21
  7932  1AC1                     __ptext21:	
  7933 ;; *************** function _frexp *****************
  7934 ;; Defined at:
  7935 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  7936 ;; Parameters:    Size  Location     Type
  7937 ;;  value           3    0[COMMON] int 
  7938 ;;  eptr            1    3[COMMON] PTR int 
  7939 ;;		 -> log@exponent(2), floor@expon(2), 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;		None
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  3    0[COMMON] PTR int 
  7944 ;; Registers used:
  7945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7951 ;;      Params:         4       0       0       0       0
  7952 ;;      Locals:         0       0       0       0       0
  7953 ;;      Temps:          2       0       0       0       0
  7954 ;;      Totals:         6       0       0       0       0
  7955 ;;Total ram usage:        6 bytes
  7956 ;; Hardware stack levels used:    1
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_floor
  7961 ;;		_log
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           
  7966                           ;psect for function _frexp
  7967  1AC1                     _frexp:	
  7968                           
  7969                           ;incstack = 0
  7970                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  7971  1AC1  0872               	movf	frexp@value+2,w
  7972  1AC2  0471               	iorwf	frexp@value+1,w
  7973  1AC3  0470               	iorwf	frexp@value,w
  7974  1AC4  1D03               	skipz
  7975  1AC5  2AD3               	goto	l2246
  7976  1AC6  0873               	movf	frexp@eptr,w
  7977  1AC7  0084               	movwf	4
  7978  1AC8  1383               	bcf	3,7	;select IRP bank0
  7979  1AC9  0180               	clrf	0
  7980  1ACA  0A84               	incf	4,f
  7981  1ACB  0180               	clrf	0
  7982  1ACC  3000               	movlw	0
  7983  1ACD  00F0               	movwf	?_frexp
  7984  1ACE  3000               	movlw	0
  7985  1ACF  00F1               	movwf	?_frexp+1
  7986  1AD0  3000               	movlw	0
  7987  1AD1  00F2               	movwf	?_frexp+2
  7988  1AD2  0008               	return
  7989  1AD3                     l2246:	
  7990  1AD3  0872               	movf	frexp@value+2,w
  7991  1AD4  397F               	andlw	127
  7992  1AD5  00F4               	movwf	??_frexp
  7993  1AD6  01F5               	clrf	??_frexp+1
  7994  1AD7  1003               	clrc
  7995  1AD8  0DF4               	rlf	??_frexp,f
  7996  1AD9  0DF5               	rlf	??_frexp+1,f
  7997  1ADA  0873               	movf	frexp@eptr,w
  7998  1ADB  0084               	movwf	4
  7999  1ADC  0874               	movf	??_frexp,w
  8000  1ADD  1383               	bcf	3,7	;select IRP bank0
  8001  1ADE  0080               	movwf	0
  8002  1ADF  0A84               	incf	4,f
  8003  1AE0  0875               	movf	??_frexp+1,w
  8004  1AE1  0080               	movwf	0
  8005  1AE2  0D71               	rlf	frexp@value+1,w
  8006  1AE3  0D71               	rlf	frexp@value+1,w
  8007  1AE4  3901               	andlw	1
  8008  1AE5  00F4               	movwf	??_frexp
  8009  1AE6  01F5               	clrf	??_frexp+1
  8010  1AE7  0873               	movf	frexp@eptr,w
  8011  1AE8  0084               	movwf	4
  8012  1AE9  0874               	movf	??_frexp,w
  8013  1AEA  0480               	iorwf	0,f
  8014  1AEB  0A84               	incf	4,f
  8015  1AEC  0875               	movf	??_frexp+1,w
  8016  1AED  0480               	iorwf	0,f
  8017  1AEE  0873               	movf	frexp@eptr,w
  8018  1AEF  0084               	movwf	4
  8019  1AF0  3082               	movlw	130
  8020  1AF1  0780               	addwf	0,f
  8021  1AF2  0F84               	incfsz	4,f
  8022  1AF3  0800               	movf	0,w
  8023  1AF4  1803               	skipnc
  8024  1AF5  0A00               	incf	0,w
  8025  1AF6  00FF               	movwf	127
  8026  1AF7  30FF               	movlw	255
  8027  1AF8  077F               	addwf	127,w
  8028  1AF9  0080               	movwf	0
  8029  1AFA  0384               	decf	4,f
  8030  1AFB  0872               	movf	frexp@value+2,w
  8031  1AFC  3980               	andlw	-128
  8032  1AFD  383F               	iorlw	63
  8033  1AFE  00F2               	movwf	frexp@value+2
  8034  1AFF  13F1               	bcf	frexp@value+1,7
  8035  1B00  0008               	return
  8036  1B01                     __end_of_frexp:	
  8037                           
  8038                           	psect	text22
  8039  1D88                     __ptext22:	
  8040 ;; *************** function ___fttol *****************
  8041 ;; Defined at:
  8042 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  8043 ;; Parameters:    Size  Location     Type
  8044 ;;  f1              3   32[BANK0 ] float 
  8045 ;; Auto vars:     Size  Location     Type
  8046 ;;  lval            4   41[BANK0 ] unsigned long 
  8047 ;;  exp1            1   45[BANK0 ] unsigned char 
  8048 ;;  sign1           1   40[BANK0 ] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;                  4   32[BANK0 ] long 
  8051 ;; Registers used:
  8052 ;;		wreg, status,2, status,0
  8053 ;; Tracked objects:
  8054 ;;		On entry : 0/0
  8055 ;;		On exit  : 0/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8058 ;;      Params:         0       4       0       0       0
  8059 ;;      Locals:         0       6       0       0       0
  8060 ;;      Temps:          0       4       0       0       0
  8061 ;;      Totals:         0      14       0       0       0
  8062 ;;Total ram usage:       14 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; This function calls:
  8065 ;;		Nothing
  8066 ;; This function is called by:
  8067 ;;		_sprintf
  8068 ;;		_pow
  8069 ;;		_exp
  8070 ;;		_floor
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           
  8075                           ;psect for function ___fttol
  8076  1D88                     ___fttol:	
  8077                           
  8078                           ;incstack = 0
  8079                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  8080  1D88  1283               	bcf	3,5	;RP0=0, select bank0
  8081  1D89  1303               	bcf	3,6	;RP1=0, select bank0
  8082  1D8A  0840               	movf	___fttol@f1,w
  8083  1D8B  00C4               	movwf	??___fttol
  8084  1D8C  0841               	movf	___fttol@f1+1,w
  8085  1D8D  00C5               	movwf	??___fttol+1
  8086  1D8E  0842               	movf	___fttol@f1+2,w
  8087  1D8F  00C6               	movwf	??___fttol+2
  8088  1D90  1003               	clrc
  8089  1D91  0D45               	rlf	??___fttol+1,w
  8090  1D92  0D46               	rlf	??___fttol+2,w
  8091  1D93  00C7               	movwf	??___fttol+3
  8092  1D94  0847               	movf	??___fttol+3,w
  8093  1D95  00CD               	movwf	___fttol@exp1
  8094  1D96  08CD               	movf	___fttol@exp1,f
  8095  1D97  1D03               	skipz
  8096  1D98  2DA2               	goto	l2200
  8097  1D99  3000               	movlw	0
  8098  1D9A  00C3               	movwf	?___fttol+3
  8099  1D9B  3000               	movlw	0
  8100  1D9C  00C2               	movwf	?___fttol+2
  8101  1D9D  3000               	movlw	0
  8102  1D9E  00C1               	movwf	?___fttol+1
  8103  1D9F  3000               	movlw	0
  8104  1DA0  00C0               	movwf	?___fttol
  8105  1DA1  0008               	return
  8106  1DA2                     l2200:	
  8107  1DA2  0840               	movf	___fttol@f1,w
  8108  1DA3  00C4               	movwf	??___fttol
  8109  1DA4  0841               	movf	___fttol@f1+1,w
  8110  1DA5  00C5               	movwf	??___fttol+1
  8111  1DA6  0842               	movf	___fttol@f1+2,w
  8112  1DA7  00C6               	movwf	??___fttol+2
  8113  1DA8  3017               	movlw	23
  8114  1DA9                     u2775:	
  8115  1DA9  1003               	clrc
  8116  1DAA  0CC6               	rrf	??___fttol+2,f
  8117  1DAB  0CC5               	rrf	??___fttol+1,f
  8118  1DAC  0CC4               	rrf	??___fttol,f
  8119  1DAD  3EFF               	addlw	-1
  8120  1DAE  1D03               	skipz
  8121  1DAF  2DA9               	goto	u2775
  8122  1DB0  0844               	movf	??___fttol,w
  8123  1DB1  00C7               	movwf	??___fttol+3
  8124  1DB2  0847               	movf	??___fttol+3,w
  8125  1DB3  00C8               	movwf	___fttol@sign1
  8126  1DB4  17C1               	bsf	___fttol@f1+1,7
  8127  1DB5  30FF               	movlw	255
  8128  1DB6  05C0               	andwf	___fttol@f1,f
  8129  1DB7  30FF               	movlw	255
  8130  1DB8  05C1               	andwf	___fttol@f1+1,f
  8131  1DB9  3000               	movlw	0
  8132  1DBA  05C2               	andwf	___fttol@f1+2,f
  8133  1DBB  0840               	movf	___fttol@f1,w
  8134  1DBC  00C9               	movwf	___fttol@lval
  8135  1DBD  0841               	movf	___fttol@f1+1,w
  8136  1DBE  00CA               	movwf	___fttol@lval+1
  8137  1DBF  0842               	movf	___fttol@f1+2,w
  8138  1DC0  00CB               	movwf	___fttol@lval+2
  8139  1DC1  01CC               	clrf	___fttol@lval+3
  8140  1DC2  308E               	movlw	142
  8141  1DC3  02CD               	subwf	___fttol@exp1,f
  8142  1DC4  1FCD               	btfss	___fttol@exp1,7
  8143  1DC5  2DE4               	goto	l2220
  8144  1DC6  084D               	movf	___fttol@exp1,w
  8145  1DC7  3A80               	xorlw	128
  8146  1DC8  3E8F               	addlw	143
  8147  1DC9  1803               	skipnc
  8148  1DCA  2DD4               	goto	l2218
  8149  1DCB  3000               	movlw	0
  8150  1DCC  00C3               	movwf	?___fttol+3
  8151  1DCD  3000               	movlw	0
  8152  1DCE  00C2               	movwf	?___fttol+2
  8153  1DCF  3000               	movlw	0
  8154  1DD0  00C1               	movwf	?___fttol+1
  8155  1DD1  3000               	movlw	0
  8156  1DD2  00C0               	movwf	?___fttol
  8157  1DD3  0008               	return
  8158  1DD4                     l2218:	
  8159  1DD4  3001               	movlw	1
  8160  1DD5                     u2805:	
  8161  1DD5  1003               	clrc
  8162  1DD6  0CCC               	rrf	___fttol@lval+3,f
  8163  1DD7  0CCB               	rrf	___fttol@lval+2,f
  8164  1DD8  0CCA               	rrf	___fttol@lval+1,f
  8165  1DD9  0CC9               	rrf	___fttol@lval,f
  8166  1DDA  3EFF               	addlw	-1
  8167  1DDB  1D03               	skipz
  8168  1DDC  2DD5               	goto	u2805
  8169  1DDD  3001               	movlw	1
  8170  1DDE  00C4               	movwf	??___fttol
  8171  1DDF  0844               	movf	??___fttol,w
  8172  1DE0  07CD               	addwf	___fttol@exp1,f
  8173  1DE1  1903               	btfsc	3,2
  8174  1DE2  2DFF               	goto	l2230
  8175  1DE3  2DD4               	goto	l2218
  8176  1DE4                     l2220:	
  8177  1DE4  3018               	movlw	24
  8178  1DE5  024D               	subwf	___fttol@exp1,w
  8179  1DE6  1C03               	skipc
  8180  1DE7  2DFC               	goto	l2228
  8181  1DE8  3000               	movlw	0
  8182  1DE9  00C3               	movwf	?___fttol+3
  8183  1DEA  3000               	movlw	0
  8184  1DEB  00C2               	movwf	?___fttol+2
  8185  1DEC  3000               	movlw	0
  8186  1DED  00C1               	movwf	?___fttol+1
  8187  1DEE  3000               	movlw	0
  8188  1DEF  00C0               	movwf	?___fttol
  8189  1DF0  0008               	return
  8190  1DF1                     l2226:	
  8191  1DF1  3001               	movlw	1
  8192  1DF2  00C4               	movwf	??___fttol
  8193  1DF3                     u2835:	
  8194  1DF3  1003               	clrc
  8195  1DF4  0DC9               	rlf	___fttol@lval,f
  8196  1DF5  0DCA               	rlf	___fttol@lval+1,f
  8197  1DF6  0DCB               	rlf	___fttol@lval+2,f
  8198  1DF7  0DCC               	rlf	___fttol@lval+3,f
  8199  1DF8  0BC4               	decfsz	??___fttol,f
  8200  1DF9  2DF3               	goto	u2835
  8201  1DFA  3001               	movlw	1
  8202  1DFB  02CD               	subwf	___fttol@exp1,f
  8203  1DFC                     l2228:	
  8204  1DFC  08CD               	movf	___fttol@exp1,f
  8205  1DFD  1D03               	skipz
  8206  1DFE  2DF1               	goto	l2226
  8207  1DFF                     l2230:	
  8208  1DFF  0848               	movf	___fttol@sign1,w
  8209  1E00  1903               	btfsc	3,2
  8210  1E01  2E0D               	goto	l2234
  8211  1E02  09C9               	comf	___fttol@lval,f
  8212  1E03  09CA               	comf	___fttol@lval+1,f
  8213  1E04  09CB               	comf	___fttol@lval+2,f
  8214  1E05  09CC               	comf	___fttol@lval+3,f
  8215  1E06  0AC9               	incf	___fttol@lval,f
  8216  1E07  1903               	skipnz
  8217  1E08  0ACA               	incf	___fttol@lval+1,f
  8218  1E09  1903               	skipnz
  8219  1E0A  0ACB               	incf	___fttol@lval+2,f
  8220  1E0B  1903               	skipnz
  8221  1E0C  0ACC               	incf	___fttol@lval+3,f
  8222  1E0D                     l2234:	
  8223  1E0D  084C               	movf	___fttol@lval+3,w
  8224  1E0E  00C3               	movwf	?___fttol+3
  8225  1E0F  084B               	movf	___fttol@lval+2,w
  8226  1E10  00C2               	movwf	?___fttol+2
  8227  1E11  084A               	movf	___fttol@lval+1,w
  8228  1E12  00C1               	movwf	?___fttol+1
  8229  1E13  0849               	movf	___fttol@lval,w
  8230  1E14  00C0               	movwf	?___fttol
  8231  1E15  0008               	return
  8232  1E16                     __end_of___fttol:	
  8233                           
  8234                           	psect	text23
  8235  1B8F                     __ptext23:	
  8236 ;; *************** function ___ftge *****************
  8237 ;; Defined at:
  8238 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  8239 ;; Parameters:    Size  Location     Type
  8240 ;;  ff1             3    0[COMMON] float 
  8241 ;;  ff2             3    3[COMMON] float 
  8242 ;; Auto vars:     Size  Location     Type
  8243 ;;		None
  8244 ;; Return value:  Size  Location     Type
  8245 ;;		None               void
  8246 ;; Registers used:
  8247 ;;		wreg, status,2, status,0
  8248 ;; Tracked objects:
  8249 ;;		On entry : 0/0
  8250 ;;		On exit  : 0/0
  8251 ;;		Unchanged: 0/0
  8252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8253 ;;      Params:         6       0       0       0       0
  8254 ;;      Locals:         0       0       0       0       0
  8255 ;;      Temps:          6       0       0       0       0
  8256 ;;      Totals:        12       0       0       0       0
  8257 ;;Total ram usage:       12 bytes
  8258 ;; Hardware stack levels used:    1
  8259 ;; This function calls:
  8260 ;;		Nothing
  8261 ;; This function is called by:
  8262 ;;		_main
  8263 ;;		_sprintf
  8264 ;;		_pow
  8265 ;;		_exp
  8266 ;;		_floor
  8267 ;;		_ldexp
  8268 ;;		_log
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           
  8273                           ;psect for function ___ftge
  8274  1B8F                     ___ftge:	
  8275                           
  8276                           ;incstack = 0
  8277                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  8278  1B8F  1FF2               	btfss	___ftge@ff1+2,7
  8279  1B90  2BB6               	goto	l2120
  8280  1B91  3000               	movlw	0
  8281  1B92  00F6               	movwf	??___ftge
  8282  1B93  3000               	movlw	0
  8283  1B94  00F7               	movwf	??___ftge+1
  8284  1B95  3080               	movlw	128
  8285  1B96  00F8               	movwf	??___ftge+2
  8286  1B97  0970               	comf	___ftge@ff1,w
  8287  1B98  00F9               	movwf	??___ftge+3
  8288  1B99  0971               	comf	___ftge@ff1+1,w
  8289  1B9A  00FA               	movwf	??___ftge+4
  8290  1B9B  0972               	comf	___ftge@ff1+2,w
  8291  1B9C  00FB               	movwf	??___ftge+5
  8292  1B9D  0AF9               	incf	??___ftge+3,f
  8293  1B9E  1903               	skipnz
  8294  1B9F  0AFA               	incf	??___ftge+4,f
  8295  1BA0  1903               	skipnz
  8296  1BA1  0AFB               	incf	??___ftge+5,f
  8297  1BA2  0879               	movf	??___ftge+3,w
  8298  1BA3  07F6               	addwf	??___ftge,f
  8299  1BA4  087A               	movf	??___ftge+4,w
  8300  1BA5  1803               	skipnc
  8301  1BA6  0F7A               	incfsz	??___ftge+4,w
  8302  1BA7  2BA9               	goto	u2571
  8303  1BA8  2BAA               	goto	u2572
  8304  1BA9                     u2571:	
  8305  1BA9  07F7               	addwf	??___ftge+1,f
  8306  1BAA                     u2572:	
  8307  1BAA  087B               	movf	??___ftge+5,w
  8308  1BAB  1803               	skipnc
  8309  1BAC  0F7B               	incfsz	??___ftge+5,w
  8310  1BAD  2BAF               	goto	u2573
  8311  1BAE  2BB0               	goto	u2574
  8312  1BAF                     u2573:	
  8313  1BAF  07F8               	addwf	??___ftge+2,f
  8314  1BB0                     u2574:	
  8315  1BB0  0876               	movf	??___ftge,w
  8316  1BB1  00F0               	movwf	___ftge@ff1
  8317  1BB2  0877               	movf	??___ftge+1,w
  8318  1BB3  00F1               	movwf	___ftge@ff1+1
  8319  1BB4  0878               	movf	??___ftge+2,w
  8320  1BB5  00F2               	movwf	___ftge@ff1+2
  8321  1BB6                     l2120:	
  8322  1BB6  1FF5               	btfss	___ftge@ff2+2,7
  8323  1BB7  2BDD               	goto	l2124
  8324  1BB8  3000               	movlw	0
  8325  1BB9  00F6               	movwf	??___ftge
  8326  1BBA  3000               	movlw	0
  8327  1BBB  00F7               	movwf	??___ftge+1
  8328  1BBC  3080               	movlw	128
  8329  1BBD  00F8               	movwf	??___ftge+2
  8330  1BBE  0973               	comf	___ftge@ff2,w
  8331  1BBF  00F9               	movwf	??___ftge+3
  8332  1BC0  0974               	comf	___ftge@ff2+1,w
  8333  1BC1  00FA               	movwf	??___ftge+4
  8334  1BC2  0975               	comf	___ftge@ff2+2,w
  8335  1BC3  00FB               	movwf	??___ftge+5
  8336  1BC4  0AF9               	incf	??___ftge+3,f
  8337  1BC5  1903               	skipnz
  8338  1BC6  0AFA               	incf	??___ftge+4,f
  8339  1BC7  1903               	skipnz
  8340  1BC8  0AFB               	incf	??___ftge+5,f
  8341  1BC9  0879               	movf	??___ftge+3,w
  8342  1BCA  07F6               	addwf	??___ftge,f
  8343  1BCB  087A               	movf	??___ftge+4,w
  8344  1BCC  1803               	skipnc
  8345  1BCD  0F7A               	incfsz	??___ftge+4,w
  8346  1BCE  2BD0               	goto	u2591
  8347  1BCF  2BD1               	goto	u2592
  8348  1BD0                     u2591:	
  8349  1BD0  07F7               	addwf	??___ftge+1,f
  8350  1BD1                     u2592:	
  8351  1BD1  087B               	movf	??___ftge+5,w
  8352  1BD2  1803               	skipnc
  8353  1BD3  0F7B               	incfsz	??___ftge+5,w
  8354  1BD4  2BD6               	goto	u2593
  8355  1BD5  2BD7               	goto	u2594
  8356  1BD6                     u2593:	
  8357  1BD6  07F8               	addwf	??___ftge+2,f
  8358  1BD7                     u2594:	
  8359  1BD7  0876               	movf	??___ftge,w
  8360  1BD8  00F3               	movwf	___ftge@ff2
  8361  1BD9  0877               	movf	??___ftge+1,w
  8362  1BDA  00F4               	movwf	___ftge@ff2+1
  8363  1BDB  0878               	movf	??___ftge+2,w
  8364  1BDC  00F5               	movwf	___ftge@ff2+2
  8365  1BDD                     l2124:	
  8366  1BDD  3080               	movlw	128
  8367  1BDE  06F2               	xorwf	___ftge@ff1+2,f
  8368  1BDF  3080               	movlw	128
  8369  1BE0  06F5               	xorwf	___ftge@ff2+2,f
  8370  1BE1  0875               	movf	___ftge@ff2+2,w
  8371  1BE2  0272               	subwf	___ftge@ff1+2,w
  8372  1BE3  1D03               	skipz
  8373  1BE4  0008               	return
  8374  1BE5  0874               	movf	___ftge@ff2+1,w
  8375  1BE6  0271               	subwf	___ftge@ff1+1,w
  8376  1BE7  1D03               	skipz
  8377  1BE8  0008               	return
  8378  1BE9  0873               	movf	___ftge@ff2,w
  8379  1BEA  0270               	subwf	___ftge@ff1,w
  8380  1BEB  0008               	return
  8381  1BEC                     __end_of___ftge:	
  8382                           
  8383                           	psect	text24
  8384  1B01                     __ptext24:	
  8385 ;; *************** function ___altoft *****************
  8386 ;; Defined at:
  8387 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\altoft.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;  c               4   46[BANK0 ] long 
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;  sign            1   53[BANK0 ] unsigned char 
  8392 ;;  exp             1   52[BANK0 ] unsigned char 
  8393 ;; Return value:  Size  Location     Type
  8394 ;;                  3   46[BANK0 ] float 
  8395 ;; Registers used:
  8396 ;;		wreg, status,2, status,0, pclath, cstack
  8397 ;; Tracked objects:
  8398 ;;		On entry : 0/0
  8399 ;;		On exit  : 0/0
  8400 ;;		Unchanged: 0/0
  8401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8402 ;;      Params:         0       4       0       0       0
  8403 ;;      Locals:         0       2       0       0       0
  8404 ;;      Temps:          0       2       0       0       0
  8405 ;;      Totals:         0       8       0       0       0
  8406 ;;Total ram usage:        8 bytes
  8407 ;; Hardware stack levels used:    1
  8408 ;; Hardware stack levels required when called:    1
  8409 ;; This function calls:
  8410 ;;		___ftpack
  8411 ;; This function is called by:
  8412 ;;		_floor
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           
  8417                           ;psect for function ___altoft
  8418  1B01                     ___altoft:	
  8419                           
  8420                           ;incstack = 0
  8421                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  8422  1B01  1283               	bcf	3,5	;RP0=0, select bank0
  8423  1B02  1303               	bcf	3,6	;RP1=0, select bank0
  8424  1B03  01D5               	clrf	___altoft@sign
  8425  1B04  308E               	movlw	142
  8426  1B05  00D2               	movwf	??___altoft
  8427  1B06  0852               	movf	??___altoft,w
  8428  1B07  00D4               	movwf	___altoft@exp
  8429  1B08  1FD1               	btfss	___altoft@c+3,7
  8430  1B09  2B17               	goto	l2038
  8431  1B0A  09CE               	comf	___altoft@c,f
  8432  1B0B  09CF               	comf	___altoft@c+1,f
  8433  1B0C  09D0               	comf	___altoft@c+2,f
  8434  1B0D  09D1               	comf	___altoft@c+3,f
  8435  1B0E  0ACE               	incf	___altoft@c,f
  8436  1B0F  1903               	skipnz
  8437  1B10  0ACF               	incf	___altoft@c+1,f
  8438  1B11  1903               	skipnz
  8439  1B12  0AD0               	incf	___altoft@c+2,f
  8440  1B13  1903               	skipnz
  8441  1B14  0AD1               	incf	___altoft@c+3,f
  8442  1B15  01D5               	clrf	___altoft@sign
  8443  1B16  0AD5               	incf	___altoft@sign,f
  8444  1B17                     l2038:	
  8445  1B17  30FF               	movlw	255
  8446  1B18  0551               	andwf	___altoft@c+3,w
  8447  1B19  1903               	btfsc	3,2
  8448  1B1A  2B29               	goto	l2040
  8449  1B1B  3001               	movlw	1
  8450  1B1C                     u2305:	
  8451  1B1C  1003               	clrc
  8452  1B1D  0CD1               	rrf	___altoft@c+3,f
  8453  1B1E  0CD0               	rrf	___altoft@c+2,f
  8454  1B1F  0CCF               	rrf	___altoft@c+1,f
  8455  1B20  0CCE               	rrf	___altoft@c,f
  8456  1B21  3EFF               	addlw	-1
  8457  1B22  1D03               	skipz
  8458  1B23  2B1C               	goto	u2305
  8459  1B24  3001               	movlw	1
  8460  1B25  00D2               	movwf	??___altoft
  8461  1B26  0852               	movf	??___altoft,w
  8462  1B27  07D4               	addwf	___altoft@exp,f
  8463  1B28  2B17               	goto	l2038
  8464  1B29                     l2040:	
  8465  1B29  084E               	movf	___altoft@c,w
  8466  1B2A  00F0               	movwf	___ftpack@arg
  8467  1B2B  084F               	movf	___altoft@c+1,w
  8468  1B2C  00F1               	movwf	___ftpack@arg+1
  8469  1B2D  0850               	movf	___altoft@c+2,w
  8470  1B2E  00F2               	movwf	___ftpack@arg+2
  8471  1B2F  0854               	movf	___altoft@exp,w
  8472  1B30  00D2               	movwf	??___altoft
  8473  1B31  0852               	movf	??___altoft,w
  8474  1B32  00F3               	movwf	___ftpack@exp
  8475  1B33  0855               	movf	___altoft@sign,w
  8476  1B34  00D3               	movwf	??___altoft+1
  8477  1B35  0853               	movf	??___altoft+1,w
  8478  1B36  00F4               	movwf	___ftpack@sign
  8479  1B37  160A  158A  24A7   	fcall	___ftpack
  8480  1B3A  0870               	movf	?___ftpack,w
  8481  1B3B  1283               	bcf	3,5	;RP0=0, select bank0
  8482  1B3C  1303               	bcf	3,6	;RP1=0, select bank0
  8483  1B3D  00CE               	movwf	?___altoft
  8484  1B3E  0871               	movf	?___ftpack+1,w
  8485  1B3F  00CF               	movwf	?___altoft+1
  8486  1B40  0872               	movf	?___ftpack+2,w
  8487  1B41  00D0               	movwf	?___altoft+2
  8488  1B42  0008               	return
  8489  1B43                     __end_of___altoft:	
  8490                           
  8491                           	psect	text25
  8492  1D0F                     __ptext25:	
  8493 ;; *************** function _eval_poly *****************
  8494 ;; Defined at:
  8495 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\evalpoly.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  x               3   52[BANK0 ] float 
  8498 ;;  d               1   55[BANK0 ] PTR const 
  8499 ;;		 -> log@coeff(27), exp@coeff(30), 
  8500 ;;  n               2   56[BANK0 ] int 
  8501 ;; Auto vars:     Size  Location     Type
  8502 ;;  res             3   59[BANK0 ] int 
  8503 ;; Return value:  Size  Location     Type
  8504 ;;                  3   52[BANK0 ] int 
  8505 ;; Registers used:
  8506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8507 ;; Tracked objects:
  8508 ;;		On entry : 0/0
  8509 ;;		On exit  : 0/0
  8510 ;;		Unchanged: 0/0
  8511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8512 ;;      Params:         0       6       0       0       0
  8513 ;;      Locals:         0       3       0       0       0
  8514 ;;      Temps:          0       1       0       0       0
  8515 ;;      Totals:         0      10       0       0       0
  8516 ;;Total ram usage:       10 bytes
  8517 ;; Hardware stack levels used:    1
  8518 ;; Hardware stack levels required when called:    2
  8519 ;; This function calls:
  8520 ;;		___bmul
  8521 ;;		___ftadd
  8522 ;;		___ftmul
  8523 ;; This function is called by:
  8524 ;;		_exp
  8525 ;;		_log
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           
  8530                           ;psect for function _eval_poly
  8531  1D0F                     _eval_poly:	
  8532                           
  8533                           ;incstack = 0
  8534                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8535  1D0F  3003               	movlw	3
  8536  1D10  1283               	bcf	3,5	;RP0=0, select bank0
  8537  1D11  1303               	bcf	3,6	;RP1=0, select bank0
  8538  1D12  00DA               	movwf	??_eval_poly
  8539  1D13  085A               	movf	??_eval_poly,w
  8540  1D14  00A4               	movwf	___bmul@multiplicand
  8541  1D15  0858               	movf	eval_poly@n,w
  8542  1D16  160A  158A  21AA  160A  158A  	fcall	___bmul
  8543  1D1B  1283               	bcf	3,5	;RP0=0, select bank0
  8544  1D1C  1303               	bcf	3,6	;RP1=0, select bank0
  8545  1D1D  0757               	addwf	eval_poly@d,w
  8546  1D1E  0084               	movwf	4
  8547  1D1F  160A  118A  200A  160A  158A  	fcall	stringdir
  8548  1D24  00DB               	movwf	eval_poly@res
  8549  1D25  160A  118A  200A  160A  158A  	fcall	stringdir
  8550  1D2A  00DC               	movwf	eval_poly@res+1
  8551  1D2B  160A  118A  200A  160A  158A  	fcall	stringdir
  8552  1D30                     L10:	
  8553  1D30  00DD               	movwf	eval_poly@res+2
  8554  1D31  0859               	movf	eval_poly@n+1,w
  8555  1D32  0458               	iorwf	eval_poly@n,w
  8556  1D33  1903               	btfsc	3,2
  8557  1D34  2D81               	goto	l2434
  8558  1D35  3003               	movlw	3
  8559  1D36  00DA               	movwf	??_eval_poly
  8560  1D37  085A               	movf	??_eval_poly,w
  8561  1D38  00A4               	movwf	___bmul@multiplicand
  8562  1D39  30FF               	movlw	255
  8563  1D3A  07D8               	addwf	eval_poly@n,f
  8564  1D3B  1803               	skipnc
  8565  1D3C  0AD9               	incf	eval_poly@n+1,f
  8566  1D3D  30FF               	movlw	255
  8567  1D3E  07D9               	addwf	eval_poly@n+1,f
  8568  1D3F  0858               	movf	eval_poly@n,w
  8569  1D40  160A  158A  21AA  160A  158A  	fcall	___bmul
  8570  1D45  1283               	bcf	3,5	;RP0=0, select bank0
  8571  1D46  1303               	bcf	3,6	;RP1=0, select bank0
  8572  1D47  0757               	addwf	eval_poly@d,w
  8573  1D48  0084               	movwf	4
  8574  1D49  160A  118A  200A  160A  158A  	fcall	stringdir
  8575  1D4E  00C7               	movwf	___ftadd@f1
  8576  1D4F  160A  118A  200A  160A  158A  	fcall	stringdir
  8577  1D54  00C8               	movwf	___ftadd@f1+1
  8578  1D55  160A  118A  200A  160A  158A  	fcall	stringdir
  8579  1D5A  00C9               	movwf	___ftadd@f1+2
  8580  1D5B  085B               	movf	eval_poly@res,w
  8581  1D5C  00A7               	movwf	___ftmul@f1
  8582  1D5D  085C               	movf	eval_poly@res+1,w
  8583  1D5E  00A8               	movwf	___ftmul@f1+1
  8584  1D5F  085D               	movf	eval_poly@res+2,w
  8585  1D60  00A9               	movwf	___ftmul@f1+2
  8586  1D61  0854               	movf	eval_poly@x,w
  8587  1D62  00AA               	movwf	___ftmul@f2
  8588  1D63  0855               	movf	eval_poly@x+1,w
  8589  1D64  00AB               	movwf	___ftmul@f2+1
  8590  1D65  0856               	movf	eval_poly@x+2,w
  8591  1D66  00AC               	movwf	___ftmul@f2+2
  8592  1D67  160A  118A  2215  160A  158A  	fcall	___ftmul
  8593  1D6C  1283               	bcf	3,5	;RP0=0, select bank0
  8594  1D6D  1303               	bcf	3,6	;RP1=0, select bank0
  8595  1D6E  0827               	movf	?___ftmul,w
  8596  1D6F  00CA               	movwf	___ftadd@f2
  8597  1D70  0828               	movf	?___ftmul+1,w
  8598  1D71  00CB               	movwf	___ftadd@f2+1
  8599  1D72  0829               	movf	?___ftmul+2,w
  8600  1D73  00CC               	movwf	___ftadd@f2+2
  8601  1D74  160A  118A  22E8  160A  158A  	fcall	___ftadd
  8602  1D79  1283               	bcf	3,5	;RP0=0, select bank0
  8603  1D7A  1303               	bcf	3,6	;RP1=0, select bank0
  8604  1D7B  0847               	movf	?___ftadd,w
  8605  1D7C  00DB               	movwf	eval_poly@res
  8606  1D7D  0848               	movf	?___ftadd+1,w
  8607  1D7E  00DC               	movwf	eval_poly@res+1
  8608  1D7F  0849               	movf	?___ftadd+2,w
  8609  1D80  2D30               	goto	L10
  8610  1D81                     l2434:	
  8611  1D81  085B               	movf	eval_poly@res,w
  8612  1D82  00D4               	movwf	?_eval_poly
  8613  1D83  085C               	movf	eval_poly@res+1,w
  8614  1D84  00D5               	movwf	?_eval_poly+1
  8615  1D85  085D               	movf	eval_poly@res+2,w
  8616  1D86  00D6               	movwf	?_eval_poly+2
  8617  1D87  0008               	return
  8618  1D88                     __end_of_eval_poly:	
  8619                           
  8620                           	psect	text26
  8621  1215                     __ptext26:	
  8622 ;; *************** function ___ftmul *****************
  8623 ;; Defined at:
  8624 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  8625 ;; Parameters:    Size  Location     Type
  8626 ;;  f1              3    7[BANK0 ] float 
  8627 ;;  f2              3   10[BANK0 ] float 
  8628 ;; Auto vars:     Size  Location     Type
  8629 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  8630 ;;  sign            1   22[BANK0 ] unsigned char 
  8631 ;;  cntr            1   21[BANK0 ] unsigned char 
  8632 ;;  exp             1   17[BANK0 ] unsigned char 
  8633 ;; Return value:  Size  Location     Type
  8634 ;;                  3    7[BANK0 ] float 
  8635 ;; Registers used:
  8636 ;;		wreg, status,2, status,0, pclath, cstack
  8637 ;; Tracked objects:
  8638 ;;		On entry : 0/0
  8639 ;;		On exit  : 0/0
  8640 ;;		Unchanged: 0/0
  8641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8642 ;;      Params:         0       6       0       0       0
  8643 ;;      Locals:         0       6       0       0       0
  8644 ;;      Temps:          0       4       0       0       0
  8645 ;;      Totals:         0      16       0       0       0
  8646 ;;Total ram usage:       16 bytes
  8647 ;; Hardware stack levels used:    1
  8648 ;; Hardware stack levels required when called:    1
  8649 ;; This function calls:
  8650 ;;		___ftpack
  8651 ;; This function is called by:
  8652 ;;		_main
  8653 ;;		_fround
  8654 ;;		_scale
  8655 ;;		_sprintf
  8656 ;;		_pow
  8657 ;;		_exp
  8658 ;;		_log
  8659 ;;		_eval_poly
  8660 ;; This function uses a non-reentrant model
  8661 ;;
  8662                           
  8663                           
  8664                           ;psect for function ___ftmul
  8665  1215                     ___ftmul:	
  8666                           
  8667                           ;incstack = 0
  8668                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  8669  1215  1283               	bcf	3,5	;RP0=0, select bank0
  8670  1216  1303               	bcf	3,6	;RP1=0, select bank0
  8671  1217  0827               	movf	___ftmul@f1,w
  8672  1218  00AD               	movwf	??___ftmul
  8673  1219  0828               	movf	___ftmul@f1+1,w
  8674  121A  00AE               	movwf	??___ftmul+1
  8675  121B  0829               	movf	___ftmul@f1+2,w
  8676  121C  00AF               	movwf	??___ftmul+2
  8677  121D  1003               	clrc
  8678  121E  0D2E               	rlf	??___ftmul+1,w
  8679  121F  0D2F               	rlf	??___ftmul+2,w
  8680  1220  00B0               	movwf	??___ftmul+3
  8681  1221  0830               	movf	??___ftmul+3,w
  8682  1222  00B1               	movwf	___ftmul@exp
  8683  1223  08B1               	movf	___ftmul@exp,f
  8684  1224  1D03               	skipz
  8685  1225  2A2D               	goto	l2142
  8686  1226  3000               	movlw	0
  8687  1227  00A7               	movwf	?___ftmul
  8688  1228  3000               	movlw	0
  8689  1229  00A8               	movwf	?___ftmul+1
  8690  122A  3000               	movlw	0
  8691  122B  00A9               	movwf	?___ftmul+2
  8692  122C  0008               	return
  8693  122D                     l2142:	
  8694  122D  082A               	movf	___ftmul@f2,w
  8695  122E  00AD               	movwf	??___ftmul
  8696  122F  082B               	movf	___ftmul@f2+1,w
  8697  1230  00AE               	movwf	??___ftmul+1
  8698  1231  082C               	movf	___ftmul@f2+2,w
  8699  1232  00AF               	movwf	??___ftmul+2
  8700  1233  1003               	clrc
  8701  1234  0D2E               	rlf	??___ftmul+1,w
  8702  1235  0D2F               	rlf	??___ftmul+2,w
  8703  1236  00B0               	movwf	??___ftmul+3
  8704  1237  0830               	movf	??___ftmul+3,w
  8705  1238  00B6               	movwf	___ftmul@sign
  8706  1239  08B6               	movf	___ftmul@sign,f
  8707  123A  1D03               	skipz
  8708  123B  2A43               	goto	l2148
  8709  123C  3000               	movlw	0
  8710  123D  00A7               	movwf	?___ftmul
  8711  123E  3000               	movlw	0
  8712  123F  00A8               	movwf	?___ftmul+1
  8713  1240  3000               	movlw	0
  8714  1241  00A9               	movwf	?___ftmul+2
  8715  1242  0008               	return
  8716  1243                     l2148:	
  8717  1243  0836               	movf	___ftmul@sign,w
  8718  1244  3E7B               	addlw	123
  8719  1245  00AD               	movwf	??___ftmul
  8720  1246  082D               	movf	??___ftmul,w
  8721  1247  07B1               	addwf	___ftmul@exp,f
  8722  1248  0827               	movf	___ftmul@f1,w
  8723  1249  00AD               	movwf	??___ftmul
  8724  124A  0828               	movf	___ftmul@f1+1,w
  8725  124B  00AE               	movwf	??___ftmul+1
  8726  124C  0829               	movf	___ftmul@f1+2,w
  8727  124D  00AF               	movwf	??___ftmul+2
  8728  124E  3010               	movlw	16
  8729  124F                     u2635:	
  8730  124F  1003               	clrc
  8731  1250  0CAF               	rrf	??___ftmul+2,f
  8732  1251  0CAE               	rrf	??___ftmul+1,f
  8733  1252  0CAD               	rrf	??___ftmul,f
  8734  1253  3EFF               	addlw	-1
  8735  1254  1D03               	skipz
  8736  1255  2A4F               	goto	u2635
  8737  1256  082D               	movf	??___ftmul,w
  8738  1257  00B0               	movwf	??___ftmul+3
  8739  1258  0830               	movf	??___ftmul+3,w
  8740  1259  00B6               	movwf	___ftmul@sign
  8741  125A  082A               	movf	___ftmul@f2,w
  8742  125B  00AD               	movwf	??___ftmul
  8743  125C  082B               	movf	___ftmul@f2+1,w
  8744  125D  00AE               	movwf	??___ftmul+1
  8745  125E  082C               	movf	___ftmul@f2+2,w
  8746  125F  00AF               	movwf	??___ftmul+2
  8747  1260  3010               	movlw	16
  8748  1261                     u2645:	
  8749  1261  1003               	clrc
  8750  1262  0CAF               	rrf	??___ftmul+2,f
  8751  1263  0CAE               	rrf	??___ftmul+1,f
  8752  1264  0CAD               	rrf	??___ftmul,f
  8753  1265  3EFF               	addlw	-1
  8754  1266  1D03               	skipz
  8755  1267  2A61               	goto	u2645
  8756  1268  082D               	movf	??___ftmul,w
  8757  1269  00B0               	movwf	??___ftmul+3
  8758  126A  0830               	movf	??___ftmul+3,w
  8759  126B  06B6               	xorwf	___ftmul@sign,f
  8760  126C  3080               	movlw	128
  8761  126D  00AD               	movwf	??___ftmul
  8762  126E  082D               	movf	??___ftmul,w
  8763  126F  05B6               	andwf	___ftmul@sign,f
  8764  1270  17A8               	bsf	___ftmul@f1+1,7
  8765  1271  17AB               	bsf	___ftmul@f2+1,7
  8766  1272  30FF               	movlw	255
  8767  1273  05AA               	andwf	___ftmul@f2,f
  8768  1274  30FF               	movlw	255
  8769  1275  05AB               	andwf	___ftmul@f2+1,f
  8770  1276  3000               	movlw	0
  8771  1277  05AC               	andwf	___ftmul@f2+2,f
  8772  1278  3000               	movlw	0
  8773  1279  00B2               	movwf	___ftmul@f3_as_product
  8774  127A  3000               	movlw	0
  8775  127B  00B3               	movwf	___ftmul@f3_as_product+1
  8776  127C  3000               	movlw	0
  8777  127D  00B4               	movwf	___ftmul@f3_as_product+2
  8778  127E  3007               	movlw	7
  8779  127F  00AD               	movwf	??___ftmul
  8780  1280  082D               	movf	??___ftmul,w
  8781  1281  00B5               	movwf	___ftmul@cntr
  8782  1282                     l2160:	
  8783  1282  1C27               	btfss	___ftmul@f1,0
  8784  1283  2A92               	goto	l2164
  8785  1284  082A               	movf	___ftmul@f2,w
  8786  1285  07B2               	addwf	___ftmul@f3_as_product,f
  8787  1286  082B               	movf	___ftmul@f2+1,w
  8788  1287  1103               	clrz
  8789  1288  1803               	skipnc
  8790  1289  0A2B               	incf	___ftmul@f2+1,w
  8791  128A  1D03               	btfss	3,2
  8792  128B  07B3               	addwf	___ftmul@f3_as_product+1,f
  8793  128C  082C               	movf	___ftmul@f2+2,w
  8794  128D  1103               	clrz
  8795  128E  1803               	skipnc
  8796  128F  0A2C               	incf	___ftmul@f2+2,w
  8797  1290  1D03               	btfss	3,2
  8798  1291  07B4               	addwf	___ftmul@f3_as_product+2,f
  8799  1292                     l2164:	
  8800  1292  3001               	movlw	1
  8801  1293                     u2675:	
  8802  1293  1003               	clrc
  8803  1294  0CA9               	rrf	___ftmul@f1+2,f
  8804  1295  0CA8               	rrf	___ftmul@f1+1,f
  8805  1296  0CA7               	rrf	___ftmul@f1,f
  8806  1297  3EFF               	addlw	-1
  8807  1298  1D03               	skipz
  8808  1299  2A93               	goto	u2675
  8809  129A  3001               	movlw	1
  8810  129B                     u2685:	
  8811  129B  1003               	clrc
  8812  129C  0DAA               	rlf	___ftmul@f2,f
  8813  129D  0DAB               	rlf	___ftmul@f2+1,f
  8814  129E  0DAC               	rlf	___ftmul@f2+2,f
  8815  129F  3EFF               	addlw	-1
  8816  12A0  1D03               	skipz
  8817  12A1  2A9B               	goto	u2685
  8818  12A2  3001               	movlw	1
  8819  12A3  02B5               	subwf	___ftmul@cntr,f
  8820  12A4  1D03               	btfss	3,2
  8821  12A5  2A82               	goto	l2160
  8822  12A6  3009               	movlw	9
  8823  12A7  00AD               	movwf	??___ftmul
  8824  12A8  082D               	movf	??___ftmul,w
  8825  12A9  00B5               	movwf	___ftmul@cntr
  8826  12AA                     l2172:	
  8827  12AA  1C27               	btfss	___ftmul@f1,0
  8828  12AB  2ABA               	goto	l2176
  8829  12AC  082A               	movf	___ftmul@f2,w
  8830  12AD  07B2               	addwf	___ftmul@f3_as_product,f
  8831  12AE  082B               	movf	___ftmul@f2+1,w
  8832  12AF  1103               	clrz
  8833  12B0  1803               	skipnc
  8834  12B1  0A2B               	incf	___ftmul@f2+1,w
  8835  12B2  1D03               	btfss	3,2
  8836  12B3  07B3               	addwf	___ftmul@f3_as_product+1,f
  8837  12B4  082C               	movf	___ftmul@f2+2,w
  8838  12B5  1103               	clrz
  8839  12B6  1803               	skipnc
  8840  12B7  0A2C               	incf	___ftmul@f2+2,w
  8841  12B8  1D03               	btfss	3,2
  8842  12B9  07B4               	addwf	___ftmul@f3_as_product+2,f
  8843  12BA                     l2176:	
  8844  12BA  3001               	movlw	1
  8845  12BB                     u2725:	
  8846  12BB  1003               	clrc
  8847  12BC  0CA9               	rrf	___ftmul@f1+2,f
  8848  12BD  0CA8               	rrf	___ftmul@f1+1,f
  8849  12BE  0CA7               	rrf	___ftmul@f1,f
  8850  12BF  3EFF               	addlw	-1
  8851  12C0  1D03               	skipz
  8852  12C1  2ABB               	goto	u2725
  8853  12C2  3001               	movlw	1
  8854  12C3                     u2735:	
  8855  12C3  1003               	clrc
  8856  12C4  0CB4               	rrf	___ftmul@f3_as_product+2,f
  8857  12C5  0CB3               	rrf	___ftmul@f3_as_product+1,f
  8858  12C6  0CB2               	rrf	___ftmul@f3_as_product,f
  8859  12C7  3EFF               	addlw	-1
  8860  12C8  1D03               	skipz
  8861  12C9  2AC3               	goto	u2735
  8862  12CA  3001               	movlw	1
  8863  12CB  02B5               	subwf	___ftmul@cntr,f
  8864  12CC  1D03               	btfss	3,2
  8865  12CD  2AAA               	goto	l2172
  8866  12CE  0832               	movf	___ftmul@f3_as_product,w
  8867  12CF  00F0               	movwf	___ftpack@arg
  8868  12D0  0833               	movf	___ftmul@f3_as_product+1,w
  8869  12D1  00F1               	movwf	___ftpack@arg+1
  8870  12D2  0834               	movf	___ftmul@f3_as_product+2,w
  8871  12D3  00F2               	movwf	___ftpack@arg+2
  8872  12D4  0831               	movf	___ftmul@exp,w
  8873  12D5  00AD               	movwf	??___ftmul
  8874  12D6  082D               	movf	??___ftmul,w
  8875  12D7  00F3               	movwf	___ftpack@exp
  8876  12D8  0836               	movf	___ftmul@sign,w
  8877  12D9  00AE               	movwf	??___ftmul+1
  8878  12DA  082E               	movf	??___ftmul+1,w
  8879  12DB  00F4               	movwf	___ftpack@sign
  8880  12DC  160A  158A  24A7   	fcall	___ftpack
  8881  12DF  0870               	movf	?___ftpack,w
  8882  12E0  1283               	bcf	3,5	;RP0=0, select bank0
  8883  12E1  1303               	bcf	3,6	;RP1=0, select bank0
  8884  12E2  00A7               	movwf	?___ftmul
  8885  12E3  0871               	movf	?___ftpack+1,w
  8886  12E4  00A8               	movwf	?___ftmul+1
  8887  12E5  0872               	movf	?___ftpack+2,w
  8888  12E6  00A9               	movwf	?___ftmul+2
  8889  12E7  0008               	return
  8890  12E8                     __end_of___ftmul:	
  8891                           
  8892                           	psect	text27
  8893  19AA                     __ptext27:	
  8894 ;; *************** function ___bmul *****************
  8895 ;; Defined at:
  8896 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  8897 ;; Parameters:    Size  Location     Type
  8898 ;;  multiplier      1    wreg     unsigned char 
  8899 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  8900 ;; Auto vars:     Size  Location     Type
  8901 ;;  multiplier      1    6[BANK0 ] unsigned char 
  8902 ;;  product         1    5[BANK0 ] unsigned char 
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      unsigned char 
  8905 ;; Registers used:
  8906 ;;		wreg, status,2, status,0
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8912 ;;      Params:         0       1       0       0       0
  8913 ;;      Locals:         0       2       0       0       0
  8914 ;;      Temps:          1       0       0       0       0
  8915 ;;      Totals:         1       3       0       0       0
  8916 ;;Total ram usage:        4 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; This function calls:
  8919 ;;		Nothing
  8920 ;; This function is called by:
  8921 ;;		_fround
  8922 ;;		_scale
  8923 ;;		_eval_poly
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           
  8928                           ;psect for function ___bmul
  8929  19AA                     ___bmul:	
  8930                           
  8931                           ;incstack = 0
  8932                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8933                           ;___bmul@multiplier stored from wreg
  8934  19AA  1283               	bcf	3,5	;RP0=0, select bank0
  8935  19AB  1303               	bcf	3,6	;RP1=0, select bank0
  8936  19AC  00A6               	movwf	___bmul@multiplier
  8937  19AD  01A5               	clrf	___bmul@product
  8938  19AE                     l2014:	
  8939  19AE  1C26               	btfss	___bmul@multiplier,0
  8940  19AF  29B4               	goto	l2018
  8941  19B0  0824               	movf	___bmul@multiplicand,w
  8942  19B1  00FC               	movwf	??___bmul
  8943  19B2  087C               	movf	??___bmul,w
  8944  19B3  07A5               	addwf	___bmul@product,f
  8945  19B4                     l2018:	
  8946  19B4  1003               	clrc
  8947  19B5  0DA4               	rlf	___bmul@multiplicand,f
  8948  19B6  1003               	clrc
  8949  19B7  0CA6               	rrf	___bmul@multiplier,f
  8950  19B8  08A6               	movf	___bmul@multiplier,f
  8951  19B9  1D03               	skipz
  8952  19BA  29AE               	goto	l2014
  8953  19BB  0825               	movf	___bmul@product,w
  8954  19BC  0008               	return
  8955  19BD                     __end_of___bmul:	
  8956                           
  8957                           	psect	text28
  8958  19BD                     __ptext28:	
  8959 ;; *************** function ___ftsub *****************
  8960 ;; Defined at:
  8961 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;  f2              3   52[BANK0 ] float 
  8964 ;;  f1              3   55[BANK0 ] float 
  8965 ;; Auto vars:     Size  Location     Type
  8966 ;;		None
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  3   52[BANK0 ] float 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0, pclath, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 0/0
  8973 ;;		On exit  : 0/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8976 ;;      Params:         0       6       0       0       0
  8977 ;;      Locals:         0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0
  8979 ;;      Totals:         0       6       0       0       0
  8980 ;;Total ram usage:        6 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    2
  8983 ;; This function calls:
  8984 ;;		___ftadd
  8985 ;; This function is called by:
  8986 ;;		_sprintf
  8987 ;;		_exp
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991                           
  8992                           ;psect for function ___ftsub
  8993  19BD                     ___ftsub:	
  8994                           
  8995                           ;incstack = 0
  8996                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  8997  19BD  3080               	movlw	128
  8998  19BE  1283               	bcf	3,5	;RP0=0, select bank0
  8999  19BF  1303               	bcf	3,6	;RP1=0, select bank0
  9000  19C0  06D6               	xorwf	___ftsub@f2+2,f
  9001  19C1  0857               	movf	___ftsub@f1,w
  9002  19C2  00C7               	movwf	___ftadd@f1
  9003  19C3  0858               	movf	___ftsub@f1+1,w
  9004  19C4  00C8               	movwf	___ftadd@f1+1
  9005  19C5  0859               	movf	___ftsub@f1+2,w
  9006  19C6  00C9               	movwf	___ftadd@f1+2
  9007  19C7  0854               	movf	___ftsub@f2,w
  9008  19C8  00CA               	movwf	___ftadd@f2
  9009  19C9  0855               	movf	___ftsub@f2+1,w
  9010  19CA  00CB               	movwf	___ftadd@f2+1
  9011  19CB  0856               	movf	___ftsub@f2+2,w
  9012  19CC  00CC               	movwf	___ftadd@f2+2
  9013  19CD  160A  118A  22E8   	fcall	___ftadd
  9014  19D0  1283               	bcf	3,5	;RP0=0, select bank0
  9015  19D1  1303               	bcf	3,6	;RP1=0, select bank0
  9016  19D2  0847               	movf	?___ftadd,w
  9017  19D3  00D4               	movwf	?___ftsub
  9018  19D4  0848               	movf	?___ftadd+1,w
  9019  19D5  00D5               	movwf	?___ftsub+1
  9020  19D6  0849               	movf	?___ftadd+2,w
  9021  19D7  00D6               	movwf	?___ftsub+2
  9022  19D8  0008               	return
  9023  19D9                     __end_of___ftsub:	
  9024                           
  9025                           	psect	text29
  9026  12E8                     __ptext29:	
  9027 ;; *************** function ___ftadd *****************
  9028 ;; Defined at:
  9029 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;  f1              3   39[BANK0 ] float 
  9032 ;;  f2              3   42[BANK0 ] float 
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;  exp1            1   51[BANK0 ] unsigned char 
  9035 ;;  exp2            1   50[BANK0 ] unsigned char 
  9036 ;;  sign            1   49[BANK0 ] unsigned char 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  3   39[BANK0 ] float 
  9039 ;; Registers used:
  9040 ;;		wreg, status,2, status,0, pclath, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9046 ;;      Params:         0       6       0       0       0
  9047 ;;      Locals:         0       3       0       0       0
  9048 ;;      Temps:          0       4       0       0       0
  9049 ;;      Totals:         0      13       0       0       0
  9050 ;;Total ram usage:       13 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    1
  9053 ;; This function calls:
  9054 ;;		___ftpack
  9055 ;; This function is called by:
  9056 ;;		_main
  9057 ;;		_sprintf
  9058 ;;		___ftsub
  9059 ;;		_floor
  9060 ;;		_log
  9061 ;;		_eval_poly
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           
  9066                           ;psect for function ___ftadd
  9067  12E8                     ___ftadd:	
  9068                           
  9069                           ;incstack = 0
  9070                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  9071  12E8  1283               	bcf	3,5	;RP0=0, select bank0
  9072  12E9  1303               	bcf	3,6	;RP1=0, select bank0
  9073  12EA  0847               	movf	___ftadd@f1,w
  9074  12EB  00CD               	movwf	??___ftadd
  9075  12EC  0848               	movf	___ftadd@f1+1,w
  9076  12ED  00CE               	movwf	??___ftadd+1
  9077  12EE  0849               	movf	___ftadd@f1+2,w
  9078  12EF  00CF               	movwf	??___ftadd+2
  9079  12F0  1003               	clrc
  9080  12F1  0D4E               	rlf	??___ftadd+1,w
  9081  12F2  0D4F               	rlf	??___ftadd+2,w
  9082  12F3  00D0               	movwf	??___ftadd+3
  9083  12F4  0850               	movf	??___ftadd+3,w
  9084  12F5  00D3               	movwf	___ftadd@exp1
  9085  12F6  084A               	movf	___ftadd@f2,w
  9086  12F7  00CD               	movwf	??___ftadd
  9087  12F8  084B               	movf	___ftadd@f2+1,w
  9088  12F9  00CE               	movwf	??___ftadd+1
  9089  12FA  084C               	movf	___ftadd@f2+2,w
  9090  12FB  00CF               	movwf	??___ftadd+2
  9091  12FC  1003               	clrc
  9092  12FD  0D4E               	rlf	??___ftadd+1,w
  9093  12FE  0D4F               	rlf	??___ftadd+2,w
  9094  12FF  00D0               	movwf	??___ftadd+3
  9095  1300  0850               	movf	??___ftadd+3,w
  9096  1301  00D2               	movwf	___ftadd@exp2
  9097  1302  0853               	movf	___ftadd@exp1,w
  9098  1303  1903               	btfsc	3,2
  9099  1304  2B11               	goto	l2052
  9100  1305  0852               	movf	___ftadd@exp2,w
  9101  1306  0253               	subwf	___ftadd@exp1,w
  9102  1307  1803               	skipnc
  9103  1308  2B18               	goto	l2056
  9104  1309  0353               	decf	___ftadd@exp1,w
  9105  130A  3AFF               	xorlw	255
  9106  130B  0752               	addwf	___ftadd@exp2,w
  9107  130C  00CD               	movwf	??___ftadd
  9108  130D  3019               	movlw	25
  9109  130E  024D               	subwf	??___ftadd,w
  9110  130F  1C03               	skipc
  9111  1310  2B18               	goto	l2056
  9112  1311                     l2052:	
  9113  1311  084A               	movf	___ftadd@f2,w
  9114  1312  00C7               	movwf	?___ftadd
  9115  1313  084B               	movf	___ftadd@f2+1,w
  9116  1314  00C8               	movwf	?___ftadd+1
  9117  1315  084C               	movf	___ftadd@f2+2,w
  9118  1316  00C9               	movwf	?___ftadd+2
  9119  1317  0008               	return
  9120  1318                     l2056:	
  9121  1318  0852               	movf	___ftadd@exp2,w
  9122  1319  1903               	btfsc	3,2
  9123  131A  0008               	return
  9124  131B  0853               	movf	___ftadd@exp1,w
  9125  131C  0252               	subwf	___ftadd@exp2,w
  9126  131D  1803               	skipnc
  9127  131E  2B27               	goto	l2062
  9128  131F  0352               	decf	___ftadd@exp2,w
  9129  1320  3AFF               	xorlw	255
  9130  1321  0753               	addwf	___ftadd@exp1,w
  9131  1322  00CD               	movwf	??___ftadd
  9132  1323  3019               	movlw	25
  9133  1324  024D               	subwf	??___ftadd,w
  9134  1325  1803               	btfsc	3,0
  9135  1326  0008               	return
  9136  1327                     l2062:	
  9137  1327  3006               	movlw	6
  9138  1328  00CD               	movwf	??___ftadd
  9139  1329  084D               	movf	??___ftadd,w
  9140  132A  00D1               	movwf	___ftadd@sign
  9141  132B  1BC9               	btfsc	___ftadd@f1+2,7
  9142  132C  17D1               	bsf	___ftadd@sign,7
  9143  132D  1BCC               	btfsc	___ftadd@f2+2,7
  9144  132E  1751               	bsf	___ftadd@sign,6
  9145  132F  17C8               	bsf	___ftadd@f1+1,7
  9146  1330  30FF               	movlw	255
  9147  1331  05C7               	andwf	___ftadd@f1,f
  9148  1332  30FF               	movlw	255
  9149  1333  05C8               	andwf	___ftadd@f1+1,f
  9150  1334  3000               	movlw	0
  9151  1335  05C9               	andwf	___ftadd@f1+2,f
  9152  1336  17CB               	bsf	___ftadd@f2+1,7
  9153  1337  30FF               	movlw	255
  9154  1338  05CA               	andwf	___ftadd@f2,f
  9155  1339  30FF               	movlw	255
  9156  133A  05CB               	andwf	___ftadd@f2+1,f
  9157  133B  3000               	movlw	0
  9158  133C  05CC               	andwf	___ftadd@f2+2,f
  9159  133D  0852               	movf	___ftadd@exp2,w
  9160  133E  0253               	subwf	___ftadd@exp1,w
  9161  133F  1803               	skipnc
  9162  1340  2B67               	goto	l2084
  9163  1341                     l2074:	
  9164  1341  3001               	movlw	1
  9165  1342                     u2415:	
  9166  1342  1003               	clrc
  9167  1343  0DCA               	rlf	___ftadd@f2,f
  9168  1344  0DCB               	rlf	___ftadd@f2+1,f
  9169  1345  0DCC               	rlf	___ftadd@f2+2,f
  9170  1346  3EFF               	addlw	-1
  9171  1347  1D03               	skipz
  9172  1348  2B42               	goto	u2415
  9173  1349  3001               	movlw	1
  9174  134A  02D2               	subwf	___ftadd@exp2,f
  9175  134B  0852               	movf	___ftadd@exp2,w
  9176  134C  0653               	xorwf	___ftadd@exp1,w
  9177  134D  1903               	skipnz
  9178  134E  2B62               	goto	l2082
  9179  134F  3001               	movlw	1
  9180  1350  02D1               	subwf	___ftadd@sign,f
  9181  1351  0851               	movf	___ftadd@sign,w
  9182  1352  3907               	andlw	7
  9183  1353  1903               	btfsc	3,2
  9184  1354  2B62               	goto	l2082
  9185  1355  2B41               	goto	l2074
  9186  1356                     l2080:	
  9187  1356  3001               	movlw	1
  9188  1357                     u2445:	
  9189  1357  1003               	clrc
  9190  1358  0CC9               	rrf	___ftadd@f1+2,f
  9191  1359  0CC8               	rrf	___ftadd@f1+1,f
  9192  135A  0CC7               	rrf	___ftadd@f1,f
  9193  135B  3EFF               	addlw	-1
  9194  135C  1D03               	skipz
  9195  135D  2B57               	goto	u2445
  9196  135E  3001               	movlw	1
  9197  135F  00CD               	movwf	??___ftadd
  9198  1360  084D               	movf	??___ftadd,w
  9199  1361  07D3               	addwf	___ftadd@exp1,f
  9200  1362                     l2082:	
  9201  1362  0853               	movf	___ftadd@exp1,w
  9202  1363  0652               	xorwf	___ftadd@exp2,w
  9203  1364  1903               	btfsc	3,2
  9204  1365  2B90               	goto	l462
  9205  1366  2B56               	goto	l2080
  9206  1367                     l2084:	
  9207  1367  0853               	movf	___ftadd@exp1,w
  9208  1368  0252               	subwf	___ftadd@exp2,w
  9209  1369  1803               	skipnc
  9210  136A  2B90               	goto	l462
  9211  136B                     l2086:	
  9212  136B  3001               	movlw	1
  9213  136C                     u2475:	
  9214  136C  1003               	clrc
  9215  136D  0DC7               	rlf	___ftadd@f1,f
  9216  136E  0DC8               	rlf	___ftadd@f1+1,f
  9217  136F  0DC9               	rlf	___ftadd@f1+2,f
  9218  1370  3EFF               	addlw	-1
  9219  1371  1D03               	skipz
  9220  1372  2B6C               	goto	u2475
  9221  1373  3001               	movlw	1
  9222  1374  02D3               	subwf	___ftadd@exp1,f
  9223  1375  0852               	movf	___ftadd@exp2,w
  9224  1376  0653               	xorwf	___ftadd@exp1,w
  9225  1377  1903               	skipnz
  9226  1378  2B8C               	goto	l2094
  9227  1379  3001               	movlw	1
  9228  137A  02D1               	subwf	___ftadd@sign,f
  9229  137B  0851               	movf	___ftadd@sign,w
  9230  137C  3907               	andlw	7
  9231  137D  1903               	btfsc	3,2
  9232  137E  2B8C               	goto	l2094
  9233  137F  2B6B               	goto	l2086
  9234  1380                     l2092:	
  9235  1380  3001               	movlw	1
  9236  1381                     u2505:	
  9237  1381  1003               	clrc
  9238  1382  0CCC               	rrf	___ftadd@f2+2,f
  9239  1383  0CCB               	rrf	___ftadd@f2+1,f
  9240  1384  0CCA               	rrf	___ftadd@f2,f
  9241  1385  3EFF               	addlw	-1
  9242  1386  1D03               	skipz
  9243  1387  2B81               	goto	u2505
  9244  1388  3001               	movlw	1
  9245  1389  00CD               	movwf	??___ftadd
  9246  138A  084D               	movf	??___ftadd,w
  9247  138B  07D2               	addwf	___ftadd@exp2,f
  9248  138C                     l2094:	
  9249  138C  0853               	movf	___ftadd@exp1,w
  9250  138D  0652               	xorwf	___ftadd@exp2,w
  9251  138E  1D03               	skipz
  9252  138F  2B80               	goto	l2092
  9253  1390                     l462:	
  9254  1390  1FD1               	btfss	___ftadd@sign,7
  9255  1391  2BA2               	goto	l2098
  9256  1392  30FF               	movlw	255
  9257  1393  06C7               	xorwf	___ftadd@f1,f
  9258  1394  30FF               	movlw	255
  9259  1395  06C8               	xorwf	___ftadd@f1+1,f
  9260  1396  30FF               	movlw	255
  9261  1397  06C9               	xorwf	___ftadd@f1+2,f
  9262  1398  3001               	movlw	1
  9263  1399  07C7               	addwf	___ftadd@f1,f
  9264  139A  3000               	movlw	0
  9265  139B  1803               	skipnc
  9266  139C  3001               	movlw	1
  9267  139D  07C8               	addwf	___ftadd@f1+1,f
  9268  139E  3000               	movlw	0
  9269  139F  1803               	skipnc
  9270  13A0  3001               	movlw	1
  9271  13A1  07C9               	addwf	___ftadd@f1+2,f
  9272  13A2                     l2098:	
  9273  13A2  1F51               	btfss	___ftadd@sign,6
  9274  13A3  2BB4               	goto	l2102
  9275  13A4  30FF               	movlw	255
  9276  13A5  06CA               	xorwf	___ftadd@f2,f
  9277  13A6  30FF               	movlw	255
  9278  13A7  06CB               	xorwf	___ftadd@f2+1,f
  9279  13A8  30FF               	movlw	255
  9280  13A9  06CC               	xorwf	___ftadd@f2+2,f
  9281  13AA  3001               	movlw	1
  9282  13AB  07CA               	addwf	___ftadd@f2,f
  9283  13AC  3000               	movlw	0
  9284  13AD  1803               	skipnc
  9285  13AE  3001               	movlw	1
  9286  13AF  07CB               	addwf	___ftadd@f2+1,f
  9287  13B0  3000               	movlw	0
  9288  13B1  1803               	skipnc
  9289  13B2  3001               	movlw	1
  9290  13B3  07CC               	addwf	___ftadd@f2+2,f
  9291  13B4                     l2102:	
  9292  13B4  01D1               	clrf	___ftadd@sign
  9293  13B5  0847               	movf	___ftadd@f1,w
  9294  13B6  07CA               	addwf	___ftadd@f2,f
  9295  13B7  0848               	movf	___ftadd@f1+1,w
  9296  13B8  1103               	clrz
  9297  13B9  1803               	skipnc
  9298  13BA  0A48               	incf	___ftadd@f1+1,w
  9299  13BB  1D03               	btfss	3,2
  9300  13BC  07CB               	addwf	___ftadd@f2+1,f
  9301  13BD  0849               	movf	___ftadd@f1+2,w
  9302  13BE  1103               	clrz
  9303  13BF  1803               	skipnc
  9304  13C0  0A49               	incf	___ftadd@f1+2,w
  9305  13C1  1D03               	btfss	3,2
  9306  13C2  07CC               	addwf	___ftadd@f2+2,f
  9307  13C3  1FCC               	btfss	___ftadd@f2+2,7
  9308  13C4  2BD7               	goto	l2112
  9309  13C5  30FF               	movlw	255
  9310  13C6  06CA               	xorwf	___ftadd@f2,f
  9311  13C7  30FF               	movlw	255
  9312  13C8  06CB               	xorwf	___ftadd@f2+1,f
  9313  13C9  30FF               	movlw	255
  9314  13CA  06CC               	xorwf	___ftadd@f2+2,f
  9315  13CB  3001               	movlw	1
  9316  13CC  07CA               	addwf	___ftadd@f2,f
  9317  13CD  3000               	movlw	0
  9318  13CE  1803               	skipnc
  9319  13CF  3001               	movlw	1
  9320  13D0  07CB               	addwf	___ftadd@f2+1,f
  9321  13D1  3000               	movlw	0
  9322  13D2  1803               	skipnc
  9323  13D3  3001               	movlw	1
  9324  13D4  07CC               	addwf	___ftadd@f2+2,f
  9325  13D5  01D1               	clrf	___ftadd@sign
  9326  13D6  0AD1               	incf	___ftadd@sign,f
  9327  13D7                     l2112:	
  9328  13D7  084A               	movf	___ftadd@f2,w
  9329  13D8  00F0               	movwf	___ftpack@arg
  9330  13D9  084B               	movf	___ftadd@f2+1,w
  9331  13DA  00F1               	movwf	___ftpack@arg+1
  9332  13DB  084C               	movf	___ftadd@f2+2,w
  9333  13DC  00F2               	movwf	___ftpack@arg+2
  9334  13DD  0853               	movf	___ftadd@exp1,w
  9335  13DE  00CD               	movwf	??___ftadd
  9336  13DF  084D               	movf	??___ftadd,w
  9337  13E0  00F3               	movwf	___ftpack@exp
  9338  13E1  0851               	movf	___ftadd@sign,w
  9339  13E2  00CE               	movwf	??___ftadd+1
  9340  13E3  084E               	movf	??___ftadd+1,w
  9341  13E4  00F4               	movwf	___ftpack@sign
  9342  13E5  160A  158A  24A7   	fcall	___ftpack
  9343  13E8  0870               	movf	?___ftpack,w
  9344  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  9345  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  9346  13EB  00C7               	movwf	?___ftadd
  9347  13EC  0871               	movf	?___ftpack+1,w
  9348  13ED  00C8               	movwf	?___ftadd+1
  9349  13EE  0872               	movf	?___ftpack+2,w
  9350  13EF  00C9               	movwf	?___ftadd+2
  9351  13F0  0008               	return
  9352  13F1                     __end_of___ftadd:	
  9353                           
  9354                           	psect	text30
  9355  1F48                     __ptext30:	
  9356 ;; *************** function ___ftdiv *****************
  9357 ;; Defined at:
  9358 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  9359 ;; Parameters:    Size  Location     Type
  9360 ;;  f2              3   23[BANK0 ] float 
  9361 ;;  f1              3   26[BANK0 ] float 
  9362 ;; Auto vars:     Size  Location     Type
  9363 ;;  f3              3   34[BANK0 ] float 
  9364 ;;  sign            1   38[BANK0 ] unsigned char 
  9365 ;;  exp             1   37[BANK0 ] unsigned char 
  9366 ;;  cntr            1   33[BANK0 ] unsigned char 
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  3   23[BANK0 ] float 
  9369 ;; Registers used:
  9370 ;;		wreg, status,2, status,0, pclath, cstack
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/0
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9376 ;;      Params:         0       6       0       0       0
  9377 ;;      Locals:         0       6       0       0       0
  9378 ;;      Temps:          0       4       0       0       0
  9379 ;;      Totals:         0      16       0       0       0
  9380 ;;Total ram usage:       16 bytes
  9381 ;; Hardware stack levels used:    1
  9382 ;; Hardware stack levels required when called:    1
  9383 ;; This function calls:
  9384 ;;		___ftpack
  9385 ;; This function is called by:
  9386 ;;		_main
  9387 ;;		_exp
  9388 ;; This function uses a non-reentrant model
  9389 ;;
  9390                           
  9391                           
  9392                           ;psect for function ___ftdiv
  9393  1F48                     ___ftdiv:	
  9394                           
  9395                           ;incstack = 0
  9396                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  9397  1F48  1283               	bcf	3,5	;RP0=0, select bank0
  9398  1F49  1303               	bcf	3,6	;RP1=0, select bank0
  9399  1F4A  083A               	movf	___ftdiv@f1,w
  9400  1F4B  00BD               	movwf	??___ftdiv
  9401  1F4C  083B               	movf	___ftdiv@f1+1,w
  9402  1F4D  00BE               	movwf	??___ftdiv+1
  9403  1F4E  083C               	movf	___ftdiv@f1+2,w
  9404  1F4F  00BF               	movwf	??___ftdiv+2
  9405  1F50  1003               	clrc
  9406  1F51  0D3E               	rlf	??___ftdiv+1,w
  9407  1F52  0D3F               	rlf	??___ftdiv+2,w
  9408  1F53  00C0               	movwf	??___ftdiv+3
  9409  1F54  0840               	movf	??___ftdiv+3,w
  9410  1F55  00C5               	movwf	___ftdiv@exp
  9411  1F56  08C5               	movf	___ftdiv@exp,f
  9412  1F57  1D03               	skipz
  9413  1F58  2F60               	goto	l2358
  9414  1F59  3000               	movlw	0
  9415  1F5A  00B7               	movwf	?___ftdiv
  9416  1F5B  3000               	movlw	0
  9417  1F5C  00B8               	movwf	?___ftdiv+1
  9418  1F5D  3000               	movlw	0
  9419  1F5E  00B9               	movwf	?___ftdiv+2
  9420  1F5F  0008               	return
  9421  1F60                     l2358:	
  9422  1F60  0837               	movf	___ftdiv@f2,w
  9423  1F61  00BD               	movwf	??___ftdiv
  9424  1F62  0838               	movf	___ftdiv@f2+1,w
  9425  1F63  00BE               	movwf	??___ftdiv+1
  9426  1F64  0839               	movf	___ftdiv@f2+2,w
  9427  1F65  00BF               	movwf	??___ftdiv+2
  9428  1F66  1003               	clrc
  9429  1F67  0D3E               	rlf	??___ftdiv+1,w
  9430  1F68  0D3F               	rlf	??___ftdiv+2,w
  9431  1F69  00C0               	movwf	??___ftdiv+3
  9432  1F6A  0840               	movf	??___ftdiv+3,w
  9433  1F6B  00C6               	movwf	___ftdiv@sign
  9434  1F6C  08C6               	movf	___ftdiv@sign,f
  9435  1F6D  1D03               	skipz
  9436  1F6E  2F76               	goto	l2364
  9437  1F6F  3000               	movlw	0
  9438  1F70  00B7               	movwf	?___ftdiv
  9439  1F71  3000               	movlw	0
  9440  1F72  00B8               	movwf	?___ftdiv+1
  9441  1F73  3000               	movlw	0
  9442  1F74  00B9               	movwf	?___ftdiv+2
  9443  1F75  0008               	return
  9444  1F76                     l2364:	
  9445  1F76  3000               	movlw	0
  9446  1F77  00C2               	movwf	___ftdiv@f3
  9447  1F78  3000               	movlw	0
  9448  1F79  00C3               	movwf	___ftdiv@f3+1
  9449  1F7A  3000               	movlw	0
  9450  1F7B  00C4               	movwf	___ftdiv@f3+2
  9451  1F7C  3089               	movlw	137
  9452  1F7D  0746               	addwf	___ftdiv@sign,w
  9453  1F7E  00BD               	movwf	??___ftdiv
  9454  1F7F  083D               	movf	??___ftdiv,w
  9455  1F80  02C5               	subwf	___ftdiv@exp,f
  9456  1F81  083A               	movf	___ftdiv@f1,w
  9457  1F82  00BD               	movwf	??___ftdiv
  9458  1F83  083B               	movf	___ftdiv@f1+1,w
  9459  1F84  00BE               	movwf	??___ftdiv+1
  9460  1F85  083C               	movf	___ftdiv@f1+2,w
  9461  1F86  00BF               	movwf	??___ftdiv+2
  9462  1F87  3010               	movlw	16
  9463  1F88                     u3095:	
  9464  1F88  1003               	clrc
  9465  1F89  0CBF               	rrf	??___ftdiv+2,f
  9466  1F8A  0CBE               	rrf	??___ftdiv+1,f
  9467  1F8B  0CBD               	rrf	??___ftdiv,f
  9468  1F8C  3EFF               	addlw	-1
  9469  1F8D  1D03               	skipz
  9470  1F8E  2F88               	goto	u3095
  9471  1F8F  083D               	movf	??___ftdiv,w
  9472  1F90  00C0               	movwf	??___ftdiv+3
  9473  1F91  0840               	movf	??___ftdiv+3,w
  9474  1F92  00C6               	movwf	___ftdiv@sign
  9475  1F93  0837               	movf	___ftdiv@f2,w
  9476  1F94  00BD               	movwf	??___ftdiv
  9477  1F95  0838               	movf	___ftdiv@f2+1,w
  9478  1F96  00BE               	movwf	??___ftdiv+1
  9479  1F97  0839               	movf	___ftdiv@f2+2,w
  9480  1F98  00BF               	movwf	??___ftdiv+2
  9481  1F99  3010               	movlw	16
  9482  1F9A                     u3105:	
  9483  1F9A  1003               	clrc
  9484  1F9B  0CBF               	rrf	??___ftdiv+2,f
  9485  1F9C  0CBE               	rrf	??___ftdiv+1,f
  9486  1F9D  0CBD               	rrf	??___ftdiv,f
  9487  1F9E  3EFF               	addlw	-1
  9488  1F9F  1D03               	skipz
  9489  1FA0  2F9A               	goto	u3105
  9490  1FA1  083D               	movf	??___ftdiv,w
  9491  1FA2  00C0               	movwf	??___ftdiv+3
  9492  1FA3  0840               	movf	??___ftdiv+3,w
  9493  1FA4  06C6               	xorwf	___ftdiv@sign,f
  9494  1FA5  3080               	movlw	128
  9495  1FA6  00BD               	movwf	??___ftdiv
  9496  1FA7  083D               	movf	??___ftdiv,w
  9497  1FA8  05C6               	andwf	___ftdiv@sign,f
  9498  1FA9  17BB               	bsf	___ftdiv@f1+1,7
  9499  1FAA  30FF               	movlw	255
  9500  1FAB  05BA               	andwf	___ftdiv@f1,f
  9501  1FAC  30FF               	movlw	255
  9502  1FAD  05BB               	andwf	___ftdiv@f1+1,f
  9503  1FAE  3000               	movlw	0
  9504  1FAF  05BC               	andwf	___ftdiv@f1+2,f
  9505  1FB0  17B8               	bsf	___ftdiv@f2+1,7
  9506  1FB1  30FF               	movlw	255
  9507  1FB2  05B7               	andwf	___ftdiv@f2,f
  9508  1FB3  30FF               	movlw	255
  9509  1FB4  05B8               	andwf	___ftdiv@f2+1,f
  9510  1FB5  3000               	movlw	0
  9511  1FB6  05B9               	andwf	___ftdiv@f2+2,f
  9512  1FB7  3018               	movlw	24
  9513  1FB8  00BD               	movwf	??___ftdiv
  9514  1FB9  083D               	movf	??___ftdiv,w
  9515  1FBA  00C1               	movwf	___ftdiv@cntr
  9516  1FBB                     l2378:	
  9517  1FBB  3001               	movlw	1
  9518  1FBC                     u3115:	
  9519  1FBC  1003               	clrc
  9520  1FBD  0DC2               	rlf	___ftdiv@f3,f
  9521  1FBE  0DC3               	rlf	___ftdiv@f3+1,f
  9522  1FBF  0DC4               	rlf	___ftdiv@f3+2,f
  9523  1FC0  3EFF               	addlw	-1
  9524  1FC1  1D03               	skipz
  9525  1FC2  2FBC               	goto	u3115
  9526  1FC3  0839               	movf	___ftdiv@f2+2,w
  9527  1FC4  023C               	subwf	___ftdiv@f1+2,w
  9528  1FC5  1D03               	skipz
  9529  1FC6  2FCD               	goto	u3125
  9530  1FC7  0838               	movf	___ftdiv@f2+1,w
  9531  1FC8  023B               	subwf	___ftdiv@f1+1,w
  9532  1FC9  1D03               	skipz
  9533  1FCA  2FCD               	goto	u3125
  9534  1FCB  0837               	movf	___ftdiv@f2,w
  9535  1FCC  023A               	subwf	___ftdiv@f1,w
  9536  1FCD                     u3125:	
  9537  1FCD  1C03               	skipc
  9538  1FCE  2FDA               	goto	l2386
  9539  1FCF  0837               	movf	___ftdiv@f2,w
  9540  1FD0  02BA               	subwf	___ftdiv@f1,f
  9541  1FD1  0838               	movf	___ftdiv@f2+1,w
  9542  1FD2  1C03               	skipc
  9543  1FD3  0F38               	incfsz	___ftdiv@f2+1,w
  9544  1FD4  02BB               	subwf	___ftdiv@f1+1,f
  9545  1FD5  0839               	movf	___ftdiv@f2+2,w
  9546  1FD6  1C03               	skipc
  9547  1FD7  0A39               	incf	___ftdiv@f2+2,w
  9548  1FD8  02BC               	subwf	___ftdiv@f1+2,f
  9549  1FD9  1442               	bsf	___ftdiv@f3,0
  9550  1FDA                     l2386:	
  9551  1FDA  3001               	movlw	1
  9552  1FDB                     u3135:	
  9553  1FDB  1003               	clrc
  9554  1FDC  0DBA               	rlf	___ftdiv@f1,f
  9555  1FDD  0DBB               	rlf	___ftdiv@f1+1,f
  9556  1FDE  0DBC               	rlf	___ftdiv@f1+2,f
  9557  1FDF  3EFF               	addlw	-1
  9558  1FE0  1D03               	skipz
  9559  1FE1  2FDB               	goto	u3135
  9560  1FE2  3001               	movlw	1
  9561  1FE3  02C1               	subwf	___ftdiv@cntr,f
  9562  1FE4  1D03               	btfss	3,2
  9563  1FE5  2FBB               	goto	l2378
  9564  1FE6  0842               	movf	___ftdiv@f3,w
  9565  1FE7  00F0               	movwf	___ftpack@arg
  9566  1FE8  0843               	movf	___ftdiv@f3+1,w
  9567  1FE9  00F1               	movwf	___ftpack@arg+1
  9568  1FEA  0844               	movf	___ftdiv@f3+2,w
  9569  1FEB  00F2               	movwf	___ftpack@arg+2
  9570  1FEC  0845               	movf	___ftdiv@exp,w
  9571  1FED  00BD               	movwf	??___ftdiv
  9572  1FEE  083D               	movf	??___ftdiv,w
  9573  1FEF  00F3               	movwf	___ftpack@exp
  9574  1FF0  0846               	movf	___ftdiv@sign,w
  9575  1FF1  00BE               	movwf	??___ftdiv+1
  9576  1FF2  083E               	movf	??___ftdiv+1,w
  9577  1FF3  00F4               	movwf	___ftpack@sign
  9578  1FF4  160A  158A  24A7   	fcall	___ftpack
  9579  1FF7  0870               	movf	?___ftpack,w
  9580  1FF8  1283               	bcf	3,5	;RP0=0, select bank0
  9581  1FF9  1303               	bcf	3,6	;RP1=0, select bank0
  9582  1FFA  00B7               	movwf	?___ftdiv
  9583  1FFB  0871               	movf	?___ftpack+1,w
  9584  1FFC  00B8               	movwf	?___ftdiv+1
  9585  1FFD  0872               	movf	?___ftpack+2,w
  9586  1FFE  00B9               	movwf	?___ftdiv+2
  9587  1FFF  0008               	return
  9588  2000                     __end_of___ftdiv:	
  9589                           
  9590                           	psect	text31
  9591  19D9                     __ptext31:	
  9592 ;; *************** function ___awtoft *****************
  9593 ;; Defined at:
  9594 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;  c               2    8[COMMON] int 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  sign            1   13[COMMON] unsigned char 
  9599 ;; Return value:  Size  Location     Type
  9600 ;;                  3    8[COMMON] float 
  9601 ;; Registers used:
  9602 ;;		wreg, status,2, status,0, pclath, cstack
  9603 ;; Tracked objects:
  9604 ;;		On entry : 0/0
  9605 ;;		On exit  : 0/0
  9606 ;;		Unchanged: 0/0
  9607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9608 ;;      Params:         3       0       0       0       0
  9609 ;;      Locals:         1       0       0       0       0
  9610 ;;      Temps:          2       0       0       0       0
  9611 ;;      Totals:         6       0       0       0       0
  9612 ;;Total ram usage:        6 bytes
  9613 ;; Hardware stack levels used:    1
  9614 ;; Hardware stack levels required when called:    1
  9615 ;; This function calls:
  9616 ;;		___ftpack
  9617 ;; This function is called by:
  9618 ;;		_main
  9619 ;;		_exp
  9620 ;;		_log
  9621 ;; This function uses a non-reentrant model
  9622 ;;
  9623                           
  9624                           
  9625                           ;psect for function ___awtoft
  9626  19D9                     ___awtoft:	
  9627                           
  9628                           ;incstack = 0
  9629                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  9630  19D9  01FD               	clrf	___awtoft@sign
  9631  19DA  1FF9               	btfss	___awtoft@c+1,7
  9632  19DB  29E3               	goto	l2348
  9633  19DC  09F8               	comf	___awtoft@c,f
  9634  19DD  09F9               	comf	___awtoft@c+1,f
  9635  19DE  0AF8               	incf	___awtoft@c,f
  9636  19DF  1903               	skipnz
  9637  19E0  0AF9               	incf	___awtoft@c+1,f
  9638  19E1  01FD               	clrf	___awtoft@sign
  9639  19E2  0AFD               	incf	___awtoft@sign,f
  9640  19E3                     l2348:	
  9641  19E3  0878               	movf	___awtoft@c,w
  9642  19E4  00F0               	movwf	___ftpack@arg
  9643  19E5  0879               	movf	___awtoft@c+1,w
  9644  19E6  00F1               	movwf	___ftpack@arg+1
  9645  19E7  01F2               	clrf	___ftpack@arg+2
  9646  19E8  308E               	movlw	142
  9647  19E9  00FB               	movwf	??___awtoft
  9648  19EA  087B               	movf	??___awtoft,w
  9649  19EB  00F3               	movwf	___ftpack@exp
  9650  19EC  087D               	movf	___awtoft@sign,w
  9651  19ED  00FC               	movwf	??___awtoft+1
  9652  19EE  087C               	movf	??___awtoft+1,w
  9653  19EF  00F4               	movwf	___ftpack@sign
  9654  19F0  160A  158A  24A7   	fcall	___ftpack
  9655  19F3  0870               	movf	?___ftpack,w
  9656  19F4  00F8               	movwf	?___awtoft
  9657  19F5  0871               	movf	?___ftpack+1,w
  9658  19F6  00F9               	movwf	?___awtoft+1
  9659  19F7  0872               	movf	?___ftpack+2,w
  9660  19F8  00FA               	movwf	?___awtoft+2
  9661  19F9  0008               	return
  9662  19FA                     __end_of___awtoft:	
  9663                           
  9664                           	psect	text32
  9665  1A62                     __ptext32:	
  9666 ;; *************** function ___lltoft *****************
  9667 ;; Defined at:
  9668 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;  c               4    8[COMMON] unsigned long 
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;  exp             1   13[COMMON] unsigned char 
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  3    8[COMMON] float 
  9675 ;; Registers used:
  9676 ;;		wreg, status,2, status,0, pclath, cstack
  9677 ;; Tracked objects:
  9678 ;;		On entry : 0/0
  9679 ;;		On exit  : 0/0
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9682 ;;      Params:         4       0       0       0       0
  9683 ;;      Locals:         1       0       0       0       0
  9684 ;;      Temps:          1       0       0       0       0
  9685 ;;      Totals:         6       0       0       0       0
  9686 ;;Total ram usage:        6 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; Hardware stack levels required when called:    1
  9689 ;; This function calls:
  9690 ;;		___ftpack
  9691 ;; This function is called by:
  9692 ;;		_sprintf
  9693 ;;		_pow
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           
  9698                           ;psect for function ___lltoft
  9699  1A62                     ___lltoft:	
  9700                           
  9701                           ;incstack = 0
  9702                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  9703  1A62  308E               	movlw	142
  9704  1A63  00FC               	movwf	??___lltoft
  9705  1A64  087C               	movf	??___lltoft,w
  9706  1A65  00FD               	movwf	___lltoft@exp
  9707  1A66                     l2746:	
  9708  1A66  30FF               	movlw	255
  9709  1A67  057B               	andwf	___lltoft@c+3,w
  9710  1A68  1903               	btfsc	3,2
  9711  1A69  2A78               	goto	l2748
  9712  1A6A  3001               	movlw	1
  9713  1A6B                     u3755:	
  9714  1A6B  1003               	clrc
  9715  1A6C  0CFB               	rrf	___lltoft@c+3,f
  9716  1A6D  0CFA               	rrf	___lltoft@c+2,f
  9717  1A6E  0CF9               	rrf	___lltoft@c+1,f
  9718  1A6F  0CF8               	rrf	___lltoft@c,f
  9719  1A70  3EFF               	addlw	-1
  9720  1A71  1D03               	skipz
  9721  1A72  2A6B               	goto	u3755
  9722  1A73  3001               	movlw	1
  9723  1A74  00FC               	movwf	??___lltoft
  9724  1A75  087C               	movf	??___lltoft,w
  9725  1A76  07FD               	addwf	___lltoft@exp,f
  9726  1A77  2A66               	goto	l2746
  9727  1A78                     l2748:	
  9728  1A78  0878               	movf	___lltoft@c,w
  9729  1A79  00F0               	movwf	___ftpack@arg
  9730  1A7A  0879               	movf	___lltoft@c+1,w
  9731  1A7B  00F1               	movwf	___ftpack@arg+1
  9732  1A7C  087A               	movf	___lltoft@c+2,w
  9733  1A7D  00F2               	movwf	___ftpack@arg+2
  9734  1A7E  087D               	movf	___lltoft@exp,w
  9735  1A7F  00FC               	movwf	??___lltoft
  9736  1A80  087C               	movf	??___lltoft,w
  9737  1A81  00F3               	movwf	___ftpack@exp
  9738  1A82  01F4               	clrf	___ftpack@sign
  9739  1A83  160A  158A  24A7   	fcall	___ftpack
  9740  1A86  0870               	movf	?___ftpack,w
  9741  1A87  00F8               	movwf	?___lltoft
  9742  1A88  0871               	movf	?___ftpack+1,w
  9743  1A89  00F9               	movwf	?___lltoft+1
  9744  1A8A  0872               	movf	?___ftpack+2,w
  9745  1A8B  00FA               	movwf	?___lltoft+2
  9746  1A8C  0008               	return
  9747  1A8D                     __end_of___lltoft:	
  9748                           
  9749                           	psect	text33
  9750  1CA7                     __ptext33:	
  9751 ;; *************** function ___ftpack *****************
  9752 ;; Defined at:
  9753 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  arg             3    0[COMMON] unsigned um
  9756 ;;  exp             1    3[COMMON] unsigned char 
  9757 ;;  sign            1    4[COMMON] unsigned char 
  9758 ;; Auto vars:     Size  Location     Type
  9759 ;;		None
  9760 ;; Return value:  Size  Location     Type
  9761 ;;                  3    0[COMMON] float 
  9762 ;; Registers used:
  9763 ;;		wreg, status,2, status,0
  9764 ;; Tracked objects:
  9765 ;;		On entry : 0/0
  9766 ;;		On exit  : 0/0
  9767 ;;		Unchanged: 0/0
  9768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9769 ;;      Params:         5       0       0       0       0
  9770 ;;      Locals:         0       0       0       0       0
  9771 ;;      Temps:          3       0       0       0       0
  9772 ;;      Totals:         8       0       0       0       0
  9773 ;;Total ram usage:        8 bytes
  9774 ;; Hardware stack levels used:    1
  9775 ;; This function calls:
  9776 ;;		Nothing
  9777 ;; This function is called by:
  9778 ;;		___altoft
  9779 ;;		___awtoft
  9780 ;;		___ftadd
  9781 ;;		___ftdiv
  9782 ;;		___ftmul
  9783 ;;		___lltoft
  9784 ;; This function uses a non-reentrant model
  9785 ;;
  9786                           
  9787                           
  9788                           ;psect for function ___ftpack
  9789  1CA7                     ___ftpack:	
  9790                           
  9791                           ;incstack = 0
  9792                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  9793  1CA7  0873               	movf	___ftpack@exp,w
  9794  1CA8  1903               	btfsc	3,2
  9795  1CA9  2CAF               	goto	l1986
  9796  1CAA  0872               	movf	___ftpack@arg+2,w
  9797  1CAB  0471               	iorwf	___ftpack@arg+1,w
  9798  1CAC  0470               	iorwf	___ftpack@arg,w
  9799  1CAD  1D03               	skipz
  9800  1CAE  2CC2               	goto	l1992
  9801  1CAF                     l1986:	
  9802  1CAF  3000               	movlw	0
  9803  1CB0  00F0               	movwf	?___ftpack
  9804  1CB1  3000               	movlw	0
  9805  1CB2  00F1               	movwf	?___ftpack+1
  9806  1CB3  3000               	movlw	0
  9807  1CB4  00F2               	movwf	?___ftpack+2
  9808  1CB5  0008               	return
  9809  1CB6                     l1990:	
  9810  1CB6  3001               	movlw	1
  9811  1CB7  00F5               	movwf	??___ftpack
  9812  1CB8  0875               	movf	??___ftpack,w
  9813  1CB9  07F3               	addwf	___ftpack@exp,f
  9814  1CBA  3001               	movlw	1
  9815  1CBB                     u2185:	
  9816  1CBB  1003               	clrc
  9817  1CBC  0CF2               	rrf	___ftpack@arg+2,f
  9818  1CBD  0CF1               	rrf	___ftpack@arg+1,f
  9819  1CBE  0CF0               	rrf	___ftpack@arg,f
  9820  1CBF  3EFF               	addlw	-1
  9821  1CC0  1D03               	skipz
  9822  1CC1  2CBB               	goto	u2185
  9823  1CC2                     l1992:	
  9824  1CC2  30FE               	movlw	254
  9825  1CC3  0572               	andwf	___ftpack@arg+2,w
  9826  1CC4  1903               	btfsc	3,2
  9827  1CC5  2CDD               	goto	l433
  9828  1CC6  2CB6               	goto	l1990
  9829  1CC7                     l1994:	
  9830  1CC7  3001               	movlw	1
  9831  1CC8  00F5               	movwf	??___ftpack
  9832  1CC9  0875               	movf	??___ftpack,w
  9833  1CCA  07F3               	addwf	___ftpack@exp,f
  9834  1CCB  3001               	movlw	1
  9835  1CCC  07F0               	addwf	___ftpack@arg,f
  9836  1CCD  3000               	movlw	0
  9837  1CCE  1803               	skipnc
  9838  1CCF  3001               	movlw	1
  9839  1CD0  07F1               	addwf	___ftpack@arg+1,f
  9840  1CD1  3000               	movlw	0
  9841  1CD2  1803               	skipnc
  9842  1CD3  3001               	movlw	1
  9843  1CD4  07F2               	addwf	___ftpack@arg+2,f
  9844  1CD5  3001               	movlw	1
  9845  1CD6                     u2205:	
  9846  1CD6  1003               	clrc
  9847  1CD7  0CF2               	rrf	___ftpack@arg+2,f
  9848  1CD8  0CF1               	rrf	___ftpack@arg+1,f
  9849  1CD9  0CF0               	rrf	___ftpack@arg,f
  9850  1CDA  3EFF               	addlw	-1
  9851  1CDB  1D03               	skipz
  9852  1CDC  2CD6               	goto	u2205
  9853  1CDD                     l433:	
  9854  1CDD  30FF               	movlw	255
  9855  1CDE  0572               	andwf	___ftpack@arg+2,w
  9856  1CDF  1903               	btfsc	3,2
  9857  1CE0  2CEC               	goto	l2002
  9858  1CE1  2CC7               	goto	l1994
  9859  1CE2                     l2000:	
  9860  1CE2  3001               	movlw	1
  9861  1CE3  02F3               	subwf	___ftpack@exp,f
  9862  1CE4  3001               	movlw	1
  9863  1CE5                     u2225:	
  9864  1CE5  1003               	clrc
  9865  1CE6  0DF0               	rlf	___ftpack@arg,f
  9866  1CE7  0DF1               	rlf	___ftpack@arg+1,f
  9867  1CE8  0DF2               	rlf	___ftpack@arg+2,f
  9868  1CE9  3EFF               	addlw	-1
  9869  1CEA  1D03               	skipz
  9870  1CEB  2CE5               	goto	u2225
  9871  1CEC                     l2002:	
  9872  1CEC  1FF1               	btfss	___ftpack@arg+1,7
  9873  1CED  2CE2               	goto	l2000
  9874  1CEE  1873               	btfsc	___ftpack@exp,0
  9875  1CEF  2CF6               	goto	l439
  9876  1CF0  30FF               	movlw	255
  9877  1CF1  05F0               	andwf	___ftpack@arg,f
  9878  1CF2  307F               	movlw	127
  9879  1CF3  05F1               	andwf	___ftpack@arg+1,f
  9880  1CF4  30FF               	movlw	255
  9881  1CF5  05F2               	andwf	___ftpack@arg+2,f
  9882  1CF6                     l439:	
  9883  1CF6  1003               	clrc
  9884  1CF7  0CF3               	rrf	___ftpack@exp,f
  9885  1CF8  0873               	movf	___ftpack@exp,w
  9886  1CF9  00F5               	movwf	??___ftpack
  9887  1CFA  01F6               	clrf	??___ftpack+1
  9888  1CFB  01F7               	clrf	??___ftpack+2
  9889  1CFC  3010               	movlw	16
  9890  1CFD                     u2255:	
  9891  1CFD  1003               	clrc
  9892  1CFE  0DF5               	rlf	??___ftpack,f
  9893  1CFF  0DF6               	rlf	??___ftpack+1,f
  9894  1D00  0DF7               	rlf	??___ftpack+2,f
  9895  1D01  3EFF               	addlw	-1
  9896  1D02  1D03               	skipz
  9897  1D03  2CFD               	goto	u2255
  9898  1D04  0875               	movf	??___ftpack,w
  9899  1D05  04F0               	iorwf	___ftpack@arg,f
  9900  1D06  0876               	movf	??___ftpack+1,w
  9901  1D07  04F1               	iorwf	___ftpack@arg+1,f
  9902  1D08  0877               	movf	??___ftpack+2,w
  9903  1D09  04F2               	iorwf	___ftpack@arg+2,f
  9904  1D0A  0874               	movf	___ftpack@sign,w
  9905  1D0B  1903               	btfsc	3,2
  9906  1D0C  0008               	return
  9907  1D0D  17F2               	bsf	___ftpack@arg+2,7
  9908  1D0E  0008               	return
  9909  1D0F                     __end_of___ftpack:	
  9910                           
  9911                           	psect	text34
  9912  19FA                     __ptext34:	
  9913 ;; *************** function _initLCD *****************
  9914 ;; Defined at:
  9915 ;;		line 37 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\lcd_functions.h"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;		None
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;		None
  9920 ;; Return value:  Size  Location     Type
  9921 ;;		None               void
  9922 ;; Registers used:
  9923 ;;		wreg, status,2, status,0, pclath, cstack
  9924 ;; Tracked objects:
  9925 ;;		On entry : 0/0
  9926 ;;		On exit  : 0/0
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9929 ;;      Params:         0       0       0       0       0
  9930 ;;      Locals:         0       0       0       0       0
  9931 ;;      Temps:          1       0       0       0       0
  9932 ;;      Totals:         1       0       0       0       0
  9933 ;;Total ram usage:        1 bytes
  9934 ;; Hardware stack levels used:    1
  9935 ;; Hardware stack levels required when called:    1
  9936 ;; This function calls:
  9937 ;;		_instCTRL
  9938 ;; This function is called by:
  9939 ;;		_main
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           
  9944                           ;psect for function _initLCD
  9945  19FA                     _initLCD:	
  9946                           
  9947                           ;lcd_functions.h: 39: instCTRL(0x3C);
  9948                           
  9949                           ;incstack = 0
  9950                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  9951  19FA  303C               	movlw	60
  9952  19FB  160A  158A  2188  160A  158A  	fcall	_instCTRL
  9953                           
  9954                           ;lcd_functions.h: 40: _delay((unsigned long)((50)*(4000000/4000000.0)));
  9955  1A00  3010               	movlw	16
  9956  1A01  00F2               	movwf	??_initLCD
  9957  1A02                     u4347:	
  9958  1A02  0BF2               	decfsz	??_initLCD,f
  9959  1A03  2A02               	goto	u4347
  9960  1A04  0000               	nop
  9961                           
  9962                           ;lcd_functions.h: 41: instCTRL(0x0C);
  9963  1A05  300C               	movlw	12
  9964  1A06  160A  158A  2188  160A  158A  	fcall	_instCTRL
  9965                           
  9966                           ;lcd_functions.h: 42: instCTRL(0x01);
  9967  1A0B  3001               	movlw	1
  9968  1A0C  160A  158A  2188  160A  158A  	fcall	_instCTRL
  9969                           
  9970                           ;lcd_functions.h: 43: instCTRL(0x06);
  9971  1A11  3006               	movlw	6
  9972  1A12  160A  158A  2188  160A  158A  	fcall	_instCTRL
  9973                           
  9974                           ;lcd_functions.h: 44: instCTRL(0x0F);
  9975  1A17  300F               	movlw	15
  9976  1A18  160A  158A  2188   	fcall	_instCTRL
  9977  1A1B  0008               	return
  9978  1A1C                     __end_of_initLCD:	
  9979                           
  9980                           	psect	text35
  9981  1988                     __ptext35:	
  9982 ;; *************** function _instCTRL *****************
  9983 ;; Defined at:
  9984 ;;		line 17 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\mplab\MQ135_Demo\lcd_functions.h"
  9985 ;; Parameters:    Size  Location     Type
  9986 ;;  CMD             1    wreg     unsigned char 
  9987 ;; Auto vars:     Size  Location     Type
  9988 ;;  CMD             1    1[COMMON] unsigned char 
  9989 ;; Return value:  Size  Location     Type
  9990 ;;		None               void
  9991 ;; Registers used:
  9992 ;;		wreg
  9993 ;; Tracked objects:
  9994 ;;		On entry : 0/0
  9995 ;;		On exit  : 0/0
  9996 ;;		Unchanged: 0/0
  9997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9998 ;;      Params:         0       0       0       0       0
  9999 ;;      Locals:         1       0       0       0       0
 10000 ;;      Temps:          1       0       0       0       0
 10001 ;;      Totals:         2       0       0       0       0
 10002 ;;Total ram usage:        2 bytes
 10003 ;; Hardware stack levels used:    1
 10004 ;; This function calls:
 10005 ;;		Nothing
 10006 ;; This function is called by:
 10007 ;;		_initLCD
 10008 ;;		_main
 10009 ;; This function uses a non-reentrant model
 10010 ;;
 10011                           
 10012                           
 10013                           ;psect for function _instCTRL
 10014  1988                     _instCTRL:	
 10015                           
 10016                           ;incstack = 0
 10017                           ; Regs used in _instCTRL: [wreg]
 10018                           ;instCTRL@CMD stored from wreg
 10019  1988  00F1               	movwf	instCTRL@CMD
 10020                           
 10021                           ;lcd_functions.h: 19: PORTD = CMD;
 10022  1989  0871               	movf	instCTRL@CMD,w
 10023  198A  1283               	bcf	3,5	;RP0=0, select bank0
 10024  198B  1303               	bcf	3,6	;RP1=0, select bank0
 10025  198C  0088               	movwf	8	;volatile
 10026                           
 10027                           ;lcd_functions.h: 20: RB5 = 0;
 10028  198D  1286               	bcf	6,5	;volatile
 10029                           
 10030                           ;lcd_functions.h: 21: RB6 = 0;
 10031  198E  1306               	bcf	6,6	;volatile
 10032                           
 10033                           ;lcd_functions.h: 22: RB7 = 1;
 10034  198F  1786               	bsf	6,7	;volatile
 10035                           
 10036                           ;lcd_functions.h: 23: _delay((unsigned long)((50)*(4000000/4000000.0)));
 10037  1990  3010               	movlw	16
 10038  1991  00F0               	movwf	??_instCTRL
 10039  1992                     u4357:	
 10040  1992  0BF0               	decfsz	??_instCTRL,f
 10041  1993  2992               	goto	u4357
 10042  1994  0000               	nop
 10043                           
 10044                           ;lcd_functions.h: 24: RB7 = 0;
 10045  1995  1283               	bcf	3,5	;RP0=0, select bank0
 10046  1996  1303               	bcf	3,6	;RP1=0, select bank0
 10047  1997  1386               	bcf	6,7	;volatile
 10048  1998  0008               	return
 10049  1999                     __end_of_instCTRL:	
 10050  007E                     btemp	set	126	;btemp
 10051  007E                     wtemp	set	126
 10052  007E                     wtemp0	set	126
 10053  0080                     wtemp1	set	128
 10054  0082                     wtemp2	set	130
 10055  0084                     wtemp3	set	132
 10056  0086                     wtemp4	set	134
 10057  0088                     wtemp5	set	136
 10058  007F                     wtemp6	set	127
 10059  007E                     ttemp	set	126
 10060  007E                     ttemp0	set	126
 10061  0081                     ttemp1	set	129
 10062  0084                     ttemp2	set	132
 10063  0087                     ttemp3	set	135
 10064  007F                     ttemp4	set	127
 10065  007E                     ltemp	set	126
 10066  007E                     ltemp0	set	126
 10067  0082                     ltemp1	set	130
 10068  0086                     ltemp2	set	134
 10069  0080                     ltemp3	set	128


Data Sizes:
    Strings     52
    Constant    175
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     34      36
    BANK3            96     63      63
    BANK2            96      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(1) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 16
		 -> main@buffer(BANK3[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S131$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    printToLCD@STR	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_3(CODE[18]), STR_2(CODE[18]), main@buffer(BANK3[16]), 


Critical Paths under _main in COMMON

    _main->___awtoft
    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    _printToLCD->_dataCTRL
    _pow->___lltoft
    _log->___awtoft
    _exp->___awtoft
    ___ftmul->___awtoft
    ___bmul->___awdiv
    ___ftsub->___awtoft
    ___ftsub->___lltoft
    ___ftadd->___awtoft
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _initLCD->_instCTRL

Critical Paths under _main in BANK0

    _main->_pow
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->_scale
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___ftmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _pow->_exp

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                68    68      0  129759
                                             77 BANK0      2     2      0
                                              0 BANK3     63    63      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            _initLCD
                           _instCTRL
                                _pow
                         _printToLCD
                            _readADC
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    46      4   41696
                                             58 BANK0     10     6      4
                                              0 BANK1     34    34      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    8864
                                             23 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    8666
                                             23 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2      70
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _printToLCD                                           2     0      2     226
                                              2 COMMON     2     0      2
                           _dataCTRL
 ---------------------------------------------------------------------------------
 (2) _dataCTRL                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _pow                                                 18    12      6   71955
                                             76 BANK0      1     1      0
                                              9 BANK1     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (2) _log                                                  6     3      3   23475
                                             62 BANK0      6     3      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _exp                                                 13    10      3   37910
                                             72 BANK0      4     1      3
                                              0 BANK1      9     9      0
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (3) _ldexp                                               10     5      5    2308
                                             62 BANK0     10     5      5
                             ___ftge
                            ___ftneg
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     310
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    8759
                                             54 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _frexp                                                6     2      4     436
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     570
                                             32 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6    1620
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    1954
                                             46 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     4      6   10136
                                             52 BANK0     10     4      6
                             ___bmul
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    5137
                                              7 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                             ___bmul (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     628
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    4132
                                             52 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3875
                                             39 BANK0     13     7      6
                           ___awtoft (ARG)
                             ___bmul (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                              _frexp (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2467
                                             23 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2013
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1938
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1763
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      22
                                              2 COMMON     1     1      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (1) _instCTRL                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftpack (ARG)
     _frexp (ARG)
   _initLCD
     _instCTRL
   _instCTRL
   _pow
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     ___lltoft
       ___ftpack
     _exp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___ftsub
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       _eval_poly
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _floor
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftge
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         _frexp
       _ldexp
         ___ftge
         ___ftneg
         _eval_poly (ARG)
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___bmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___bmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp
     _log
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _eval_poly
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___bmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___bmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               ___ftpack (ARG)
               _frexp (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
       _frexp
   _printToLCD
     _dataCTRL
   _readADC
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       _frexp (ARG)
     ___ftneg
     ___ftsub
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             _frexp (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           _frexp (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         _frexp (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      C0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     22      24       7       45.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     3F      3F       9       65.6%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      C0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu May 02 17:30:30 2024

           ___altoft@exp 0054                        pc 0002           ___bmul@product 0025  
            __CFG_CP$OFF 0000            ___altoft@sign 0055                       l75 1A9B  
                     _GO 00FA             ___awdiv@sign 0021                       fsr 0004  
    ___wmul@multiplicand 0072             ___ftadd@exp1 0053             ___ftadd@exp2 0052  
           ___ftadd@sign 0051                      l124 022C                      l150 0562  
                    l413 14CE                      l165 0787                      l255 1A49  
                    l433 1CDD                      l462 1390                      l439 1CF6  
                    l655 1544                      l488 083D                      _GIE 005F  
                    _RB5 0035                      _RB6 0036                      _RB7 0037  
           __CFG_CPD$OFF 0000                      _exp 167B                      _log 1145  
                    _pow 1523                      fsr0 0004                      indf 0000  
           ___awmod@sign 0076            printToLCD@STR 0072             __CFG_FOSC$HS 0000  
            _sprintf$144 00A3              _sprintf$666 00A0             __CFG_LVP$OFF 0000  
           ___ftdiv@cntr 0041             ___ftdiv@sign 0046                     l2000 1CE2  
                   l2002 1CEC                     l2102 13B4                     l2014 19AE  
                   l2112 13D7                     l2040 1B29                     l2120 1BB6  
                   l2200 1DA2                     l2018 19B4                     l2052 1311  
                   l2124 1BDD                     l2220 1DE4                     l3012 04EB  
                   l2062 1327                     l2142 122D                     l2038 1B17  
                   l2230 1DFF                     l2310 1102                     l2080 1356  
                   l2056 1318                     l2160 1282                     l3008 047C  
                   l2082 1362                     l2074 1341                     l2234 1E0D  
                   l2226 1DF1                     l2218 1DD4                     l2410 1E47  
                   l2322 110F                     l2314 1109                     l3050 0603  
                   l3026 0541                     l3018 04F1                     l2092 1380  
                   l2084 1367                     l2172 12AA                     l2164 1292  
                   l2148 1243                     l2228 1DFC                     l2324 111D  
                   l2332 1136                     l3044 05E9                     l3124 0B89  
                   l2094 138C                     l2086 136B                     l2246 1AD3  
                   l2414 1E50                     l3070 0757                     l3038 05D0  
                   l2176 12BA                     l2424 1EA6                     l2272 1C03  
                   l2336 113E                     l2328 112B                     l3056 0636  
                   l2098 13A2                     l2434 1D81                     l2290 1C2F  
                   l2282 1C0B                     l2266 1BF8                     l2522 016E  
                   l2514 00E4                     l3090 07CF                     l2348 19E3  
                   l2364 1F76                     l2444 1EBD                     l2284 1C19  
                   l3076 0770                     l3172 0FE5                     l2358 1F60  
                   l2454 1EE6                     l2606 087E                     l2294 1C3A  
                   l3086 07AD                     l3078 0775                     l2704 1C59  
                   l2624 08B7                     l2616 089A                     l2544 0A02  
                   l3096 01AB                     l2386 1FDA                     l2378 1FBB  
                   l2474 1F26                     l2802 1705                     l2714 1C91  
                   l2706 1C69                     l2730 1B5B                     l2626 08C2  
                   l2618 08AA                     l2298 1C42                     l2562 0B4E  
                   l2538 0994                     l3098 07F3                     l2644 1431  
                   l2628 08C5                     l2556 0AE0                     l2548 0A21  
                   l2478 1F2F                     l2718 1C9E                     l2734 1B79  
                   l2670 14EF                     l2654 1478                     l2638 1412  
                   l2574 1986                     l2824 17E7                     l2728 1B4B  
                   l2680 1517                     l2672 14FF                     l2584 0825  
                   l2912 01C6                     l2746 1A66                     l2738 1B86  
                   l2682 151A                     l2748 1A78                     l2780 1689  
                   l2764 117F                     l1990 1CB6                     l2790 16AA  
                   l2758 1169                     l2846 1A1C                     l2678 150C  
                   l2598 085E                     l2942 025C                     l2934 022E  
                   l2926 01E1                     l1992 1CC2                     l2880 1559  
                   l2688 1A41                     l2952 029B                     l2936 0244  
                   l2928 0226                     l1994 1CC7                     l1986 1CAF  
                   l2874 154D                     l2796 16CE                     l2892 15DD  
                   l2980 0397                     l2888 15C1                     l2992 041B  
                   l2984 03DD                     l2976 037A                     l2968 030D  
                   l2996 0432                     ?_exp 0068                     ?_log 005E  
                   ?_pow 00A9                     STR_1 10E3                     STR_2 10BF  
                   STR_3 10D1                     u2205 1CD6                     u3005 1112  
                   u2225 1CE5                     u3105 1F9A                     u2305 1B1C  
                   u3025 1123                     u3115 1FBC                     u3035 112C  
                   u3125 1FCD                     u4005 02B5                     u2255 1CFD  
                   u3135 1FDB                     u2415 1342                     u2185 1CBB  
                   u2505 1381                     u3225 1EEF                     u4115 04F6  
                   u2445 1357                     u4205 06AB                     u4125 0533  
                   u4045 03A2                     u3095 1F88                     u3415 089B  
                   u4215 071D                     u4055 03E8                     u2475 136C  
                   u2635 124F                     u2571 1BA9                     u3355 0860  
                   u4155 0572                     u2572 1BAA                     u2725 12BB  
                   u2645 1261                     u2573 1BAF                     u2805 1DD5  
                   u3605 1A51                     u3445 08B9                     u3365 0871  
                   u4085 0419                     u4317 0FFA                     u2574 1BB0  
                   u2735 12C3                     u2591 1BD0                     u4327 1A93  
                   u3535 14F0                     u3375 087F                     u4175 05F2  
                   u2592 1BD1                     u2593 1BD6                     u4337 19A3  
                   u3705 1B4F                     u2905 1C0E                     u4265 07A0  
                   u4185 05FF                     u2594 1BD7                     u4347 1A02  
                   u2675 1293                     u2835 1DF3                     u3635 1C5D  
                   u4275 07C6                     _PEIE 005E                     u4357 1992  
                   u2685 129B                     u3725 1B69                     u3565 150E  
                   u3485 147A                     u2925 1C1A                     _INTE 005C  
                   _INTF 0059                     u2775 1DA9                     u3655 1C6B  
                   u3735 1B7A                     u3495 14A9                     u2935 1C26  
                   u3665 1C80                     u2945 1C30                     u3755 1A6B  
                   u3915 15B4                     u3675 1C92                     u3595 1A4A  
                   u3845 17DC             __CFG_WRT$OFF 0000                     _main 0B6D  
           ___ftpack@arg 0070             ___ftpack@exp 0073                     btemp 007E  
                   exp@x 0068                     log@x 005E            __CFG_BOREN$ON 0000  
           main@adcValue 01C1                     ltemp 007E                     pow@x 00A9  
                   pow@y 00AC                     start 0000                     ttemp 007E  
                   wtemp 007E              main@voltage 01C3        ___bmul@multiplier 0026  
           ___ftmul@cntr 0035             ___ftmul@sign 0036             ___fttol@exp1 004D  
                  ??_exp 006B                    ??_log 0061             ___fttol@lval 0049  
                  ??_pow 006C                    ?_main 0070          __end_of___awdiv 1C49  
        __end_of___ftadd 13F1            __CFG_WDTE$OFF 0000          __end_of___awmod 1145  
        __end_of___ftdiv 2000          __end_of___ftneg 080B          __end_of___lldiv 1CA7  
        __end_of___ftmul 12E8          ___awdiv@divisor 0077          __end_of___llmod 1B8F  
        __end_of___ftsub 19D9          __end_of___fttol 1E16          ___awdiv@counter 0020  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088             ___lltoft@exp 007D          __end_of_readADC 1AC1  
        __end_of_initLCD 1A1C            ___awtoft@sign 007D              readADC@temp 0074  
        __end_of_dpowers 1038                    _floor 1E16                    _ldexp 1EAF  
                  _frexp 1AC1                    _errno 00C2                    _scale 08CE  
        __end_of_isdigit 1988            ___ftpack@sign 0074                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    pow@yi 00B6                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __end_of_sprintf 07F8              exp@exponent 00A6              ldexp@newexp 0061  
        __initialization 07F8              log@exponent 0062             __end_of_main 1000  
                 ??_main 006D            ___fttol@sign1 0048     __size_of__tdiv_to_l_ 00C3  
                 _ADCON0 001F                   _ADCON1 009F                   ?_floor 0056  
                 ?_ldexp 005E                   ?_frexp 0070         __end_of___altoft 1B43  
       ___llmod@dividend 0074                   ?_scale 0037                   _ADRESH 001E  
                 _ADRESL 009E         ___awdiv@dividend 0079         __end_of___awtoft 19FA  
       __end_of___ftpack 1D0F         __end_of___lltoft 1A8D                   _INTEDG 040E  
       __end_of_dataCTRL 19AA                   _TMR0IE 005D                   _TMR0IF 005A  
            instCTRL@CMD 0071           __CFG_PWRTE$OFF 0000         __end_of__powers_ 1086  
                 ___bmul 19AA                   ___ftge 1B8F                   ___wmul 1A3F  
              ??___awdiv 007B                ??___ftadd 004D                ??___awmod 0074  
              ??___ftdiv 003D                ??___ftneg 0073                ??___lldiv 0078  
              ??___ftmul 002D                ??___llmod 0078                ??___ftsub 007E  
              ??___fttol 0044         __end_of_instCTRL 1999                   _fround 0004  
       ___awdiv@quotient 0022          ___awmod@divisor 0070          ___awmod@counter 0075  
                 floor@i 005A                   floor@x 0056    ___ftmul@f3_as_product 0032  
              ??_readADC 0072                ??_initLCD 0072                ??_isdigit 0070  
              ??_sprintf 005E         __end_ofexp@coeff 10A4         __end_oflog@coeff 10BF  
__end_of__initialization 07FC               ___altoft@c 004E               ___ftadd@f1 0047  
             ___ftadd@f2 004A               ___ftge@ff1 0070               ___ftge@ff2 0073  
           eval_poly@res 005B               ___ftdiv@f1 003A               ___ftdiv@f2 0037  
             ___ftdiv@f3 0042               ___ftneg@f1 0070               ___awtoft@c 0078  
    ___bmul@multiplicand 0024               ___ftmul@f1 0027               ___ftmul@f2 002A  
             ___ftsub@f1 0057               ___ftsub@f2 0054               ___fttol@f1 0040  
         __pcstackCOMMON 0070               ___lltoft@c 0078            __end_of_floor 1EAF  
          __end_of_ldexp 1F48            __end_of_frexp 1B01            __end_of_scale 0B6D  
             __div_to_l_ 13F1          __div_to_l_@exp1 0025                  ??_floor 0059  
                ??_ldexp 0063          __div_to_l_@cntr 0024             sprintf@integ 00B2  
                ??_frexp 0074                  ??_scale 003A          __div_to_l_@quot 0020  
             __pbssBANK1 00C2       __size_of_eval_poly 0079            __div_to_l_@f1 0070  
          __div_to_l_@f2 0073               __pmaintext 0B6D                  ?___bmul 0024  
                ?___ftge 0070                  ?___wmul 0070                ?___altoft 004E  
                ?_fround 0037                ?___awtoft 0078                ?___ftpack 0070  
              ?___lltoft 0078                ?_dataCTRL 0070                  _GO_DONE 00FA  
             __stringtab 1000                ?_instCTRL 0070        __end_of__npowers_ 105F  
        __size_of___bmul 0013          __size_of___ftge 005D                  ___awdiv 1BEC  
                ___ftadd 12E8                  ___awmod 10F8                  ___ftdiv 1F48  
                ___ftneg 0803                  ___lldiv 1C49          __size_of___wmul 0023  
                ___ftmul 1215                  ___llmod 1B43                  ___ftsub 19BD  
                ___fttol 1D88               _fround$663 0043               _fround$664 0040  
             ??___altoft 0052                  _exp$438 00A3                  _exp$669 00A0  
             ??___awtoft 007B               ??___ftpack 0075        __end_of_eval_poly 1D88  
        __size_of_fround 019C               ??___lltoft 007C                  __ptext1 01A0  
                __ptext2 08CE                  __ptext3 197A                  __ptext4 0004  
                __ptext5 10F8                  __ptext6 1BEC                  __ptext7 080B  
                __ptext8 13F1                  __ptext9 1A3F                  _pow$667 00AF  
                _pow$668 00B2               ??_dataCTRL 0070                  _readADC 1A8D  
                _initLCD 19FA              ?__div_to_l_ 0070                  _dpowers 1010  
           __size_of_exp 0185             __size_of_log 00D0                  _isdigit 197A  
           __size_of_pow 0158         ___awmod@dividend 0072                  main@co2 01C9  
                _sprintf 01A0                  main@ppm 0190     end_of_initialization 07FC  
                exp@sign 00A8               ??_instCTRL 0070          ___lldiv@divisor 0070  
                pow@sign 00B5          ___lldiv@counter 007D           __tdiv_to_l_@f1 0070  
         __tdiv_to_l_@f2 0073            ??__tdiv_to_l_ 0076               _printToLCD 1A1C  
            ___ftdiv@exp 0045               main@buffer 0193      __size_of__div_to_l_ 0132  
            ___ftmul@exp 0031           __end_of___bmul 19BD           __end_of___ftge 1BEC  
         __end_of___wmul 1A62           __end_of_fround 01A0               floor@expon 005D  
    start_initialization 07F8               eval_poly@d 0057               eval_poly@n 0058  
             eval_poly@x 0054               ldexp@value 005E      __end_of__tdiv_to_l_ 08CE  
            __end_of_exp 1800              __end_of_log 1215              __end_of_pow 167B  
             frexp@value 0070          ___llmod@divisor 0070          ___llmod@counter 0079  
               ??___bmul 007C                 ??___ftge 0076                 ??___wmul 0074  
          sprintf@vd_146 00AC                 ??_fround 003A              ?_printToLCD 0072  
      __size_of___altoft 0042               fround@prec 0046        __size_of___awtoft 0021  
      __size_of___ftpack 0068        __size_of___lltoft 002B                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK3 0190  
      __size_of_dataCTRL 0011      __end_of__stringdata 10F3              sprintf@_val 00B5  
            sprintf@flag 00B0              sprintf@fval 00BE              sprintf@prec 00BC  
      __size_of_instCTRL 0011                 ?___awdiv 0077                 ?___ftadd 0047  
               ?___awmod 0070                 ?___ftdiv 0037                 ?___ftneg 0070  
               ?___lldiv 0070                 ?___ftmul 0027                 ?___llmod 0070  
               ?___ftsub 0054                __npowers_ 1038                 ?___fttol 0040  
              __pstrings 1000              __tdiv_to_l_ 080B                _ldexp$475 0065  
           ??__div_to_l_ 0076                 ?_readADC 0070                 ?_initLCD 0070  
               ?_isdigit 0070                _eval_poly 1D0F                _scale$665 003C  
               ?_sprintf 005A           __size_of_floor 0099           __size_of_ldexp 0099  
         __size_of_frexp 0040           __size_of_scale 029F           ___wmul@product 0074  
    __size_of_printToLCD 0023              dataCTRL@DAT 0071       __end_of__div_to_l_ 1523  
            __stringbase 100F              __stringdata 10BF        ___wmul@multiplier 0070  
             ?_eval_poly 0054                main@ratio 01CC                frexp@eptr 0073  
       __size_of___awdiv 005D         __size_of___ftadd 0109         __size_of___awmod 004D  
       __size_of___ftdiv 00B8         __size_of___ftneg 0008         __size_of___lldiv 005E  
               ___altoft 1B01         __size_of___ftmul 00D3         __size_of___llmod 004C  
       __size_of___ftsub 001C         __size_of___fttol 008E                 ___awtoft 19D9  
               ___ftpack 1CA7       __end_of__stringtab 1010                 ___lltoft 1A62  
            _isdigit$344 0070                 _dataCTRL 1999               sprintf@exp 00B9  
       __size_of_readADC 0034         __size_of_initLCD 0022         __size_of_isdigit 000E  
               _main$660 01B8                 _main$652 01A3                 _main$653 01C6  
               _main$661 01BB                 _main$662 01BE                 _main$654 01A6  
               _main$655 01A9                 _main$656 01AC                 _main$657 01AF  
               _main$658 01B2                 _main$659 01B5                 __ptext10 1B43  
               __ptext11 1C49                 __ptext20 1E16                 __ptext12 1A8D  
               __ptext21 1AC1                 __ptext13 1A1C                 __ptext30 1F48  
               __ptext22 1D88                 __ptext14 1999                 __ptext31 19D9  
               __ptext23 1B8F                 __ptext15 1523                 __ptext32 1A62  
               __ptext24 1B01                 __ptext16 1145                 __ptext33 1CA7  
               __ptext25 1D0F                 __ptext17 167B                 __ptext34 19FA  
               __ptext26 1215                 __ptext18 1EAF                 __ptext35 1988  
               __ptext27 19AA                 __ptext19 0803                 __ptext28 19BD  
               __ptext29 12E8                 __powers_ 105F         __size_of_sprintf 0658  
               _instCTRL 1988            __size_of_main 0493             ??_printToLCD 0074  
               exp@coeff 1086                 log@coeff 10A4              ??_eval_poly 005A  
               isdigit@c 0071                 scale@scl 003F                sprintf@ap 00A7  
       __tdiv_to_l_@exp1 0025                sprintf@vd 00A8         __tdiv_to_l_@cntr 0024  
              sprintf@sp 00BB         __tdiv_to_l_@quot 0020         ___lldiv@dividend 0074  
     __end_of_printToLCD 1A3F                stringcode 100A             ?__tdiv_to_l_ 0070  
             _OPTION_REG 0081                 sprintf@c 00C1                 sprintf@f 005A  
       ___lldiv@quotient 0079                 stringdir 100A                 stringtab 1000  
