

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon May 06 17:33:08 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,inline,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107                           
   108                           	psect	idataCOMMON
   109  07FF                     __pidataCOMMON:	
   110                           
   111                           ;initializer for _lastMode
   112  07FF  34FF               	retlw	255
   113                           
   114                           	psect	idataBANK0
   115  07FD                     __pidataBANK0:	
   116                           
   117                           ;initializer for _DEF_HOURS
   118  07FD  3408               	retlw	8
   119  07FE  3400               	retlw	0
   120                           
   121                           	psect	strings
   122  0800                     __pstrings:	
   123  0800                     stringtab:	
   124  0800                     __stringtab:	
   125                           
   126                           ;	String table - string pointers are 1 byte each
   127  0800  1BFF               	btfsc	btemp+1,7
   128  0801  280A               	ljmp	stringcode
   129  0802  1383               	bcf	3,7
   130  0803  187F               	btfsc	btemp+1,0
   131  0804  1783               	bsf	3,7
   132  0805  0800               	movf	0,w
   133  0806  0A84               	incf	4,f
   134  0807  1903               	skipnz
   135  0808  0AFF               	incf	btemp+1,f
   136  0809  0008               	return
   137  080A                     stringcode:	
   138  080A                     stringdir:	
   139  080A  3008               	movlw	high stringdir
   140  080B  008A               	movwf	10
   141  080C  0804               	movf	4,w
   142  080D  0A84               	incf	4,f
   143  080E  0782               	addwf	2,f
   144  080F                     __stringbase:	
   145  080F  3400               	retlw	0
   146  0810                     __end_of__stringtab:	
   147  0810                     _dpowers:	
   148  0810  3401               	retlw	1
   149  0811  3400               	retlw	0
   150  0812  340A               	retlw	10
   151  0813  3400               	retlw	0
   152  0814  3464               	retlw	100
   153  0815  3400               	retlw	0
   154  0816  34E8               	retlw	232
   155  0817  3403               	retlw	3
   156  0818  3410               	retlw	16
   157  0819  3427               	retlw	39
   158  081A                     __end_of_dpowers:	
   159  001F                     _ADCON0	set	31
   160  001E                     _ADRESH	set	30
   161  0008                     _PORTD	set	8
   162  005F                     _GIE	set	95
   163  00FA                     _GO_DONE	set	250
   164  005C                     _INTE	set	92
   165  0059                     _INTF	set	89
   166  0038                     _RC0	set	56
   167  0039                     _RC1	set	57
   168  003A                     _RC2	set	58
   169  009F                     _ADCON1	set	159
   170  009E                     _ADRESL	set	158
   171  0081                     _OPTION_REG	set	129
   172  0085                     _TRISA	set	133
   173  0086                     _TRISB	set	134
   174  0087                     _TRISC	set	135
   175  0088                     _TRISD	set	136
   176  040E                     _INTEDG	set	1038
   177  081A                     __stringdata:	
   178  081A                     STR_2:	
   179  081A  344D               	retlw	77	;'M'
   180  081B  344F               	retlw	79	;'O'
   181  081C  3444               	retlw	68	;'D'
   182  081D  3445               	retlw	69	;'E'
   183  081E  343A               	retlw	58	;':'
   184  081F  3420               	retlw	32	;' '
   185  0820  3453               	retlw	83	;'S'
   186  0821  3445               	retlw	69	;'E'
   187  0822  3454               	retlw	84	;'T'
   188  0823  3420               	retlw	32	;' '
   189  0824  3441               	retlw	65	;'A'
   190  0825  3443               	retlw	67	;'C'
   191  0826  3454               	retlw	84	;'T'
   192  0827  3449               	retlw	73	;'I'
   193  0828  3456               	retlw	86	;'V'
   194  0829  3445               	retlw	69	;'E'
   195  082A  3420               	retlw	32	;' '
   196  082B  3448               	retlw	72	;'H'
   197  082C  3452               	retlw	82	;'R'
   198  082D  3453               	retlw	83	;'S'
   199  082E  3400               	retlw	0
   200  082F                     STR_7:	
   201  082F  3454               	retlw	84	;'T'
   202  0830  3469               	retlw	105	;'i'
   203  0831  346D               	retlw	109	;'m'
   204  0832  3465               	retlw	101	;'e'
   205  0833  343A               	retlw	58	;':'
   206  0834  3420               	retlw	32	;' '
   207  0835  3425               	retlw	37	;'%'
   208  0836  3430               	retlw	48	;'0'
   209  0837  3432               	retlw	50	;'2'
   210  0838  3464               	retlw	100	;'d'
   211  0839  343A               	retlw	58	;':'
   212  083A  3425               	retlw	37	;'%'
   213  083B  3430               	retlw	48	;'0'
   214  083C  3432               	retlw	50	;'2'
   215  083D  3464               	retlw	100	;'d'
   216  083E  3420               	retlw	32	;' '
   217  083F  3420               	retlw	32	;' '
   218  0840  3420               	retlw	32	;' '
   219  0841  3420               	retlw	32	;' '
   220  0842  3400               	retlw	0
   221  0843                     STR_1:	
   222  0843  344D               	retlw	77	;'M'
   223  0844  344F               	retlw	79	;'O'
   224  0845  3444               	retlw	68	;'D'
   225  0846  3445               	retlw	69	;'E'
   226  0847  343A               	retlw	58	;':'
   227  0848  3420               	retlw	32	;' '
   228  0849  3444               	retlw	68	;'D'
   229  084A  3449               	retlw	73	;'I'
   230  084B  3453               	retlw	83	;'S'
   231  084C  3450               	retlw	80	;'P'
   232  084D  3420               	retlw	32	;' '
   233  084E  3453               	retlw	83	;'S'
   234  084F  3454               	retlw	84	;'T'
   235  0850  3441               	retlw	65	;'A'
   236  0851  3454               	retlw	84	;'T'
   237  0852  3453               	retlw	83	;'S'
   238  0853  3400               	retlw	0
   239  0854                     STR_3:	
   240  0854  3441               	retlw	65	;'A'
   241  0855  3444               	retlw	68	;'D'
   242  0856  3443               	retlw	67	;'C'
   243  0857  343A               	retlw	58	;':'
   244  0858  3420               	retlw	32	;' '
   245  0859  3425               	retlw	37	;'%'
   246  085A  3464               	retlw	100	;'d'
   247  085B  3420               	retlw	32	;' '
   248  085C  3420               	retlw	32	;' '
   249  085D  3420               	retlw	32	;' '
   250  085E  3400               	retlw	0
   251  085F                     STR_6:	
   252  085F  3425               	retlw	37	;'%'
   253  0860  3464               	retlw	100	;'d'
   254  0861  3420               	retlw	32	;' '
   255  0862  3470               	retlw	112	;'p'
   256  0863  3470               	retlw	112	;'p'
   257  0864  346D               	retlw	109	;'m'
   258  0865  3420               	retlw	32	;' '
   259  0866  3420               	retlw	32	;' '
   260  0867  3400               	retlw	0
   261  0868                     STR_4:	
   262  0868  3443               	retlw	67	;'C'
   263  0869  344F               	retlw	79	;'O'
   264  086A  3432               	retlw	50	;'2'
   265  086B  343A               	retlw	58	;':'
   266  086C  3420               	retlw	32	;' '
   267  086D  3400               	retlw	0
   268  086E                     STR_5:	
   269  086E  3425               	retlw	37	;'%'
   270  086F  3464               	retlw	100	;'d'
   271  0870  3400               	retlw	0
   272  0871                     __end_of__stringdata:	
   273                           
   274                           ; #config settings
   275  0000                     
   276                           	psect	cinit
   277  0015                     start_initialization:	
   278  0015                     __initialization:	
   279                           
   280                           ; Clear objects allocated to COMMON
   281  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   282                           
   283                           ; Clear objects allocated to BANK0
   284  0016  01E9               	clrf	__pbssBANK0& (0+127)
   285  0017  01EA               	clrf	(__pbssBANK0+1)& (0+127)
   286  0018  01EB               	clrf	(__pbssBANK0+2)& (0+127)
   287  0019  01EC               	clrf	(__pbssBANK0+3)& (0+127)
   288                           
   289                           ; Clear objects allocated to BANK1
   290  001A  1683               	bsf	3,5	;RP0=1, select bank1
   291  001B  1303               	bcf	3,6	;RP1=0, select bank1
   292  001C  01C7               	clrf	__pbssBANK1& (0+127)
   293  001D  01C8               	clrf	(__pbssBANK1+1)& (0+127)
   294                           
   295                           ; Initialize objects allocated to BANK0
   296  001E  1283               	bcf	3,5	;RP0=0, select bank0
   297  001F  1303               	bcf	3,6	;RP1=0, select bank0
   298  0020  120A  118A  27FD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   299  0025  00ED               	movwf	__pdataBANK0& (0+127)
   300  0026  120A  118A  27FE  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   301  002B  00EE               	movwf	(__pdataBANK0+1)& (0+127)
   302                           
   303                           ; Initialize objects allocated to COMMON
   304  002C  120A  118A  27FF   	fcall	__pidataCOMMON	;fetch initializer
   305  002F  00FD               	movwf	__pdataCOMMON& (0+127)
   306  0030                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309  0030                     __end_of__initialization:	
   310  0030  0183               	clrf	3
   311  0031  120A  158A  2C1C   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssCOMMON
   314  007C                     __pbssCOMMON:	
   315  007C                     _mode:	
   316  007C                     	ds	1
   317                           
   318                           	psect	dataCOMMON
   319  007D                     __pdataCOMMON:	
   320  007D                     _lastMode:	
   321  007D                     	ds	1
   322                           
   323                           	psect	bssBANK0
   324  0069                     __pbssBANK0:	
   325  0069                     _ACTV_HOURS:	
   326  0069                     	ds	2
   327  006B                     _DEF_MINUTES:	
   328  006B                     	ds	2
   329                           
   330                           	psect	dataBANK0
   331  006D                     __pdataBANK0:	
   332  006D                     _DEF_HOURS:	
   333  006D                     	ds	2
   334                           
   335                           	psect	bssBANK1
   336  00C7                     __pbssBANK1:	
   337  00C7                     _ACTV_MINS:	
   338  00C7                     	ds	2
   339                           
   340                           	psect	cstackBANK3
   341  0190                     __pcstackBANK3:	
   342  0190                     displayPPM@strBuffer:	
   343                           
   344                           ; 50 bytes @ 0x0
   345  0190                     	ds	50
   346  01C2                     displayPPM@PPM:	
   347                           
   348                           ; 3 bytes @ 0x32
   349  01C2                     	ds	3
   350  01C5                     displayPPM@ppmWhole:	
   351                           
   352                           ; 2 bytes @ 0x35
   353  01C5                     	ds	2
   354  01C7                     displayPPM@ppmFraction:	
   355                           
   356                           ; 2 bytes @ 0x37
   357  01C7                     	ds	2
   358  01C9                     displayPPM@bufPtr:	
   359                           
   360                           ; 1 bytes @ 0x39
   361  01C9                     	ds	1
   362                           
   363                           	psect	cstackBANK1
   364  00A0                     __pcstackBANK1:	
   365  00A0                     CalcMQ135@voltage:	
   366                           
   367                           ; 3 bytes @ 0x0
   368  00A0                     	ds	3
   369  00A3                     CalcMQ135@ratio6:	
   370                           
   371                           ; 3 bytes @ 0x3
   372  00A3                     	ds	3
   373  00A6                     _CalcMQ135$587:	
   374                           
   375                           ; 3 bytes @ 0x6
   376  00A6                     	ds	3
   377  00A9                     _CalcMQ135$588:	
   378                           
   379                           ; 3 bytes @ 0x9
   380  00A9                     	ds	3
   381  00AC                     _CalcMQ135$589:	
   382                           
   383                           ; 3 bytes @ 0xC
   384  00AC                     	ds	3
   385  00AF                     _CalcMQ135$590:	
   386                           
   387                           ; 3 bytes @ 0xF
   388  00AF                     	ds	3
   389  00B2                     _CalcMQ135$591:	
   390                           
   391                           ; 3 bytes @ 0x12
   392  00B2                     	ds	3
   393  00B5                     CalcMQ135@ratio2:	
   394                           
   395                           ; 3 bytes @ 0x15
   396  00B5                     	ds	3
   397  00B8                     CalcMQ135@ratio3:	
   398                           
   399                           ; 3 bytes @ 0x18
   400  00B8                     	ds	3
   401  00BB                     CalcMQ135@ratio4:	
   402                           
   403                           ; 3 bytes @ 0x1B
   404  00BB                     	ds	3
   405  00BE                     CalcMQ135@ratio5:	
   406                           
   407                           ; 3 bytes @ 0x1E
   408  00BE                     	ds	3
   409  00C1                     CalcMQ135@co2:	
   410                           
   411                           ; 3 bytes @ 0x21
   412  00C1                     	ds	3
   413  00C4                     CalcMQ135@ratio:	
   414                           
   415                           ; 3 bytes @ 0x24
   416  00C4                     	ds	3
   417                           
   418                           	psect	cstackCOMMON
   419  0070                     __pcstackCOMMON:	
   420  0070                     ?_initADC:	
   421  0070                     ?_initLCD:	
   422                           ; 0 bytes @ 0x0
   423                           
   424  0070                     ?_initInterrupt:	
   425                           ; 0 bytes @ 0x0
   426                           
   427  0070                     ?_checkMode:	
   428                           ; 0 bytes @ 0x0
   429                           
   430  0070                     ?_runTime:	
   431                           ; 0 bytes @ 0x0
   432                           
   433  0070                     ?_updateDisplay:	
   434                           ; 0 bytes @ 0x0
   435                           
   436  0070                     ?_instCTRL:	
   437                           ; 0 bytes @ 0x0
   438                           
   439  0070                     ?_displayPPM:	
   440                           ; 0 bytes @ 0x0
   441                           
   442  0070                     ?_displayTime:	
   443                           ; 0 bytes @ 0x0
   444                           
   445  0070                     ?_isdigit:	
   446                           ; 0 bytes @ 0x0
   447                           
   448  0070                     ?_main:	
   449                           ; 1 bit 
   450                           
   451  0070                     ?_ISR:	
   452                           ; 0 bytes @ 0x0
   453                           
   454  0070                     ?_dataCTRL:	
   455                           ; 0 bytes @ 0x0
   456                           
   457  0070                     ?___awmod:	
   458                           ; 0 bytes @ 0x0
   459                           
   460  0070                     ___awmod@divisor:	
   461                           ; 2 bytes @ 0x0
   462                           
   463                           
   464                           ; 2 bytes @ 0x0
   465  0070                     	ds	2
   466  0072                     ___awmod@dividend:	
   467                           
   468                           ; 2 bytes @ 0x2
   469  0072                     	ds	2
   470  0074                     ??___awmod:	
   471                           
   472                           ; 0 bytes @ 0x4
   473  0074                     	ds	1
   474  0075                     ___awmod@counter:	
   475                           
   476                           ; 1 bytes @ 0x5
   477  0075                     	ds	1
   478  0076                     ___awmod@sign:	
   479                           
   480                           ; 1 bytes @ 0x6
   481  0076                     	ds	1
   482  0077                     ??_ISR:	
   483                           
   484                           ; 0 bytes @ 0x7
   485  0077                     	ds	5
   486                           
   487                           	psect	cstackBANK0
   488  0020                     __pcstackBANK0:	
   489  0020                     ??_initADC:	
   490  0020                     ??_initInterrupt:	
   491                           ; 0 bytes @ 0x0
   492                           
   493  0020                     ??_runTime:	
   494                           ; 0 bytes @ 0x0
   495                           
   496  0020                     ??_instCTRL:	
   497                           ; 0 bytes @ 0x0
   498                           
   499  0020                     ??_isdigit:	
   500                           ; 0 bytes @ 0x0
   501                           
   502  0020                     ??_dataCTRL:	
   503                           ; 0 bytes @ 0x0
   504                           
   505  0020                     ?_Read_ADC_MQ135:	
   506                           ; 0 bytes @ 0x0
   507                           
   508  0020                     ?___wmul:	
   509                           ; 2 bytes @ 0x0
   510                           
   511  0020                     ?___lwdiv:	
   512                           ; 2 bytes @ 0x0
   513                           
   514  0020                     ?___ftpack:	
   515                           ; 2 bytes @ 0x0
   516                           
   517  0020                     _isdigit$373:	
   518                           ; 3 bytes @ 0x0
   519                           
   520  0020                     ___wmul@multiplier:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0020                     ___lwdiv@divisor:	
   524                           ; 2 bytes @ 0x0
   525                           
   526  0020                     ___ftpack@arg:	
   527                           ; 2 bytes @ 0x0
   528                           
   529                           
   530                           ; 3 bytes @ 0x0
   531  0020                     	ds	1
   532  0021                     instCTRL@CMD:	
   533  0021                     dataCTRL@DAT:	
   534                           ; 1 bytes @ 0x1
   535                           
   536  0021                     isdigit@c:	
   537                           ; 1 bytes @ 0x1
   538                           
   539                           
   540                           ; 1 bytes @ 0x1
   541  0021                     	ds	1
   542  0022                     ??_initLCD:	
   543  0022                     ??_checkMode:	
   544                           ; 0 bytes @ 0x2
   545                           
   546  0022                     ?_printToLCD:	
   547                           ; 0 bytes @ 0x2
   548                           
   549  0022                     ??_Read_ADC_MQ135:	
   550                           ; 0 bytes @ 0x2
   551                           
   552  0022                     printToLCD@str:	
   553                           ; 0 bytes @ 0x2
   554                           
   555  0022                     ___wmul@multiplicand:	
   556                           ; 2 bytes @ 0x2
   557                           
   558  0022                     ___lwdiv@dividend:	
   559                           ; 2 bytes @ 0x2
   560                           
   561                           
   562                           ; 2 bytes @ 0x2
   563  0022                     	ds	1
   564  0023                     ___ftpack@exp:	
   565                           
   566                           ; 1 bytes @ 0x3
   567  0023                     	ds	1
   568  0024                     ??_printToLCD:	
   569  0024                     ??___wmul:	
   570                           ; 0 bytes @ 0x4
   571                           
   572  0024                     ??___lwdiv:	
   573                           ; 0 bytes @ 0x4
   574                           
   575  0024                     ___ftpack@sign:	
   576                           ; 0 bytes @ 0x4
   577                           
   578  0024                     ___wmul@product:	
   579                           ; 1 bytes @ 0x4
   580                           
   581                           
   582                           ; 2 bytes @ 0x4
   583  0024                     	ds	1
   584  0025                     ??___ftpack:	
   585  0025                     ___lwdiv@quotient:	
   586                           ; 0 bytes @ 0x5
   587                           
   588                           
   589                           ; 2 bytes @ 0x5
   590  0025                     	ds	2
   591  0027                     ___lwdiv@counter:	
   592                           
   593                           ; 1 bytes @ 0x7
   594  0027                     	ds	1
   595  0028                     ?___lwmod:	
   596  0028                     ?___awtoft:	
   597                           ; 2 bytes @ 0x8
   598                           
   599  0028                     ___awtoft@c:	
   600                           ; 3 bytes @ 0x8
   601                           
   602  0028                     ___lwmod@divisor:	
   603                           ; 2 bytes @ 0x8
   604                           
   605                           
   606                           ; 2 bytes @ 0x8
   607  0028                     	ds	2
   608  002A                     ___lwmod@dividend:	
   609                           
   610                           ; 2 bytes @ 0xA
   611  002A                     	ds	1
   612  002B                     ??___awtoft:	
   613                           
   614                           ; 0 bytes @ 0xB
   615  002B                     	ds	1
   616  002C                     ??___lwmod:	
   617                           
   618                           ; 0 bytes @ 0xC
   619  002C                     	ds	1
   620  002D                     ___awtoft@sign:	
   621  002D                     ___lwmod@counter:	
   622                           ; 1 bytes @ 0xD
   623                           
   624                           
   625                           ; 1 bytes @ 0xD
   626  002D                     	ds	1
   627  002E                     ?_sprintf:	
   628  002E                     ?___ftneg:	
   629                           ; 2 bytes @ 0xE
   630                           
   631  002E                     sprintf@sp:	
   632                           ; 3 bytes @ 0xE
   633                           
   634  002E                     ___ftneg@f1:	
   635                           ; 2 bytes @ 0xE
   636                           
   637                           
   638                           ; 3 bytes @ 0xE
   639  002E                     	ds	2
   640  0030                     sprintf@f:	
   641                           
   642                           ; 1 bytes @ 0x10
   643  0030                     	ds	1
   644  0031                     ??___ftneg:	
   645  0031                     ?___ftadd:	
   646                           ; 0 bytes @ 0x11
   647                           
   648  0031                     ___ftadd@f1:	
   649                           ; 3 bytes @ 0x11
   650                           
   651                           
   652                           ; 3 bytes @ 0x11
   653  0031                     	ds	3
   654  0034                     ___ftadd@f2:	
   655                           
   656                           ; 3 bytes @ 0x14
   657  0034                     	ds	1
   658  0035                     ??_sprintf:	
   659                           
   660                           ; 0 bytes @ 0x15
   661  0035                     	ds	2
   662  0037                     ??___ftadd:	
   663                           
   664                           ; 0 bytes @ 0x17
   665  0037                     	ds	1
   666  0038                     sprintf@ap:	
   667                           
   668                           ; 1 bytes @ 0x18
   669  0038                     	ds	1
   670  0039                     sprintf@prec:	
   671                           
   672                           ; 1 bytes @ 0x19
   673  0039                     	ds	1
   674  003A                     sprintf@ccnt:	
   675                           
   676                           ; 2 bytes @ 0x1A
   677  003A                     	ds	1
   678  003B                     ___ftadd@sign:	
   679                           
   680                           ; 1 bytes @ 0x1B
   681  003B                     	ds	1
   682  003C                     ___ftadd@exp2:	
   683  003C                     sprintf@_val:	
   684                           ; 1 bytes @ 0x1C
   685                           
   686                           
   687                           ; 4 bytes @ 0x1C
   688  003C                     	ds	1
   689  003D                     ___ftadd@exp1:	
   690                           
   691                           ; 1 bytes @ 0x1D
   692  003D                     	ds	1
   693  003E                     ?___ftmul:	
   694  003E                     ___ftmul@f1:	
   695                           ; 3 bytes @ 0x1E
   696                           
   697                           
   698                           ; 3 bytes @ 0x1E
   699  003E                     	ds	2
   700  0040                     sprintf@flag:	
   701                           
   702                           ; 1 bytes @ 0x20
   703  0040                     	ds	1
   704  0041                     sprintf@width:	
   705  0041                     ___ftmul@f2:	
   706                           ; 2 bytes @ 0x21
   707                           
   708                           
   709                           ; 3 bytes @ 0x21
   710  0041                     	ds	2
   711  0043                     sprintf@c:	
   712                           
   713                           ; 1 bytes @ 0x23
   714  0043                     	ds	1
   715  0044                     ??_displayTime:	
   716  0044                     ??___ftmul:	
   717                           ; 0 bytes @ 0x24
   718                           
   719                           
   720                           ; 0 bytes @ 0x24
   721  0044                     	ds	1
   722  0045                     displayTime@time:	
   723                           
   724                           ; 20 bytes @ 0x25
   725  0045                     	ds	3
   726  0048                     ___ftmul@exp:	
   727                           
   728                           ; 1 bytes @ 0x28
   729  0048                     	ds	1
   730  0049                     ___ftmul@f3_as_product:	
   731                           
   732                           ; 3 bytes @ 0x29
   733  0049                     	ds	3
   734  004C                     ___ftmul@cntr:	
   735                           
   736                           ; 1 bytes @ 0x2C
   737  004C                     	ds	1
   738  004D                     ___ftmul@sign:	
   739                           
   740                           ; 1 bytes @ 0x2D
   741  004D                     	ds	1
   742  004E                     ?___ftdiv:	
   743  004E                     ?___fttol:	
   744                           ; 3 bytes @ 0x2E
   745                           
   746  004E                     ___ftdiv@f2:	
   747                           ; 4 bytes @ 0x2E
   748                           
   749  004E                     ___fttol@f1:	
   750                           ; 3 bytes @ 0x2E
   751                           
   752                           
   753                           ; 3 bytes @ 0x2E
   754  004E                     	ds	3
   755  0051                     ___ftdiv@f1:	
   756                           
   757                           ; 3 bytes @ 0x31
   758  0051                     	ds	1
   759  0052                     ??___fttol:	
   760                           
   761                           ; 0 bytes @ 0x32
   762  0052                     	ds	2
   763  0054                     ??___ftdiv:	
   764                           
   765                           ; 0 bytes @ 0x34
   766  0054                     	ds	2
   767  0056                     ___fttol@sign1:	
   768                           
   769                           ; 1 bytes @ 0x36
   770  0056                     	ds	1
   771  0057                     ___fttol@lval:	
   772                           
   773                           ; 4 bytes @ 0x37
   774  0057                     	ds	1
   775  0058                     ___ftdiv@cntr:	
   776                           
   777                           ; 1 bytes @ 0x38
   778  0058                     	ds	1
   779  0059                     ___ftdiv@f3:	
   780                           
   781                           ; 3 bytes @ 0x39
   782  0059                     	ds	2
   783  005B                     ___fttol@exp1:	
   784                           
   785                           ; 1 bytes @ 0x3B
   786  005B                     	ds	1
   787  005C                     ___ftdiv@exp:	
   788                           
   789                           ; 1 bytes @ 0x3C
   790  005C                     	ds	1
   791  005D                     ___ftdiv@sign:	
   792                           
   793                           ; 1 bytes @ 0x3D
   794  005D                     	ds	1
   795  005E                     ?_CalcMQ135:	
   796  005E                     CalcMQ135@RAW_ADC:	
   797                           ; 3 bytes @ 0x3E
   798                           
   799                           
   800                           ; 2 bytes @ 0x3E
   801  005E                     	ds	3
   802  0061                     ??_displayPPM:	
   803  0061                     ??_CalcMQ135:	
   804                           ; 0 bytes @ 0x41
   805                           
   806                           
   807                           ; 0 bytes @ 0x41
   808  0061                     	ds	2
   809  0063                     ??_updateDisplay:	
   810                           
   811                           ; 0 bytes @ 0x43
   812  0063                     	ds	3
   813  0066                     ??_main:	
   814                           
   815                           ; 0 bytes @ 0x46
   816  0066                     	ds	3
   817                           
   818                           	psect	maintext
   819  0C1C                     __pmaintext:	
   820 ;;
   821 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   822 ;;
   823 ;; *************** function _main *****************
   824 ;; Defined at:
   825 ;;		line 13 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;		None               void
   832 ;; Registers used:
   833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   834 ;; Tracked objects:
   835 ;;		On entry : 17F/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   839 ;;      Params:         0       0       0       0       0
   840 ;;      Locals:         0       0       0       0       0
   841 ;;      Temps:          0       3       0       0       0
   842 ;;      Totals:         0       3       0       0       0
   843 ;;Total ram usage:        3 bytes
   844 ;; Hardware stack levels required when called:    7
   845 ;; This function calls:
   846 ;;		_checkMode
   847 ;;		_initADC
   848 ;;		_initInterrupt
   849 ;;		_initLCD
   850 ;;		_runTime
   851 ;;		_updateDisplay
   852 ;; This function is called by:
   853 ;;		Startup code after reset
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function _main
   859  0C1C                     _main:	
   860                           
   861                           ;main.c: 15: TRISA = 0xFF;
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   865  0C1C  30FF               	movlw	255
   866  0C1D  1683               	bsf	3,5	;RP0=1, select bank1
   867  0C1E  1303               	bcf	3,6	;RP1=0, select bank1
   868  0C1F  0085               	movwf	5	;volatile
   869                           
   870                           ;main.c: 16: TRISB = 0x03;
   871  0C20  3003               	movlw	3
   872  0C21  0086               	movwf	6	;volatile
   873                           
   874                           ;main.c: 17: TRISC = 0x00;
   875  0C22  0187               	clrf	7	;volatile
   876                           
   877                           ;main.c: 18: TRISD = 0x00;
   878  0C23  0188               	clrf	8	;volatile
   879                           
   880                           ;main.c: 19: OPTION_REG = 0b11000000;
   881  0C24  30C0               	movlw	192
   882  0C25  0081               	movwf	1	;volatile
   883                           
   884                           ;main.c: 21: initADC();
   885  0C26  120A  158A  2261  120A  158A  	fcall	_initADC
   886                           
   887                           ;main.c: 22: initLCD();
   888  0C2B  120A  158A  22CA  120A  158A  	fcall	_initLCD
   889                           
   890                           ;main.c: 23: initInterrupt();
   891  0C30  120A  158A  225A  120A  158A  	fcall	_initInterrupt
   892                           
   893                           ;main.c: 24: _delay((unsigned long)((250)*(4000000/4000.0)));
   894  0C35  3002               	movlw	2
   895  0C36  1283               	bcf	3,5	;RP0=0, select bank0
   896  0C37  1303               	bcf	3,6	;RP1=0, select bank0
   897  0C38  00E8               	movwf	??_main+2
   898  0C39  3045               	movlw	69
   899  0C3A  00E7               	movwf	??_main+1
   900  0C3B  30A9               	movlw	169
   901  0C3C  00E6               	movwf	??_main
   902  0C3D                     u2457:	
   903  0C3D  0BE6               	decfsz	??_main,f
   904  0C3E  2C3D               	goto	u2457
   905  0C3F  0BE7               	decfsz	??_main+1,f
   906  0C40  2C3D               	goto	u2457
   907  0C41  0BE8               	decfsz	??_main+2,f
   908  0C42  2C3D               	goto	u2457
   909  0C43  2C44               	nop2
   910  0C44                     l1926:	
   911                           ;main.c: 25: while (1)
   912                           
   913                           
   914                           ;main.c: 26: {
   915                           ;main.c: 27: checkMode();
   916  0C44  120A  158A  22AA  120A  158A  	fcall	_checkMode
   917                           
   918                           ;main.c: 28: runTime();
   919  0C49  120A  158A  23E4  120A  158A  	fcall	_runTime
   920                           
   921                           ;main.c: 29: updateDisplay();
   922  0C4E  120A  158A  24E1  120A  158A  	fcall	_updateDisplay
   923  0C53  2C44               	goto	l1926
   924  0C54                     __end_of_main:	
   925                           
   926                           	psect	text1
   927  0CE1                     __ptext1:	
   928 ;; *************** function _updateDisplay *****************
   929 ;; Defined at:
   930 ;;		line 59 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;		None
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;		None               void
   937 ;; Registers used:
   938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   944 ;;      Params:         0       0       0       0       0
   945 ;;      Locals:         0       0       0       0       0
   946 ;;      Temps:          0       3       0       0       0
   947 ;;      Totals:         0       3       0       0       0
   948 ;;Total ram usage:        3 bytes
   949 ;; Hardware stack levels used:    1
   950 ;; Hardware stack levels required when called:    6
   951 ;; This function calls:
   952 ;;		_displayPPM
   953 ;;		_displayTime
   954 ;;		_instCTRL
   955 ;;		_printToLCD
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           
   962                           ;psect for function _updateDisplay
   963  0CE1                     _updateDisplay:	
   964                           
   965                           ;main.c: 61: _delay((unsigned long)((50)*(4000000/4000.0)));
   966                           
   967                           ;incstack = 0
   968                           ; Regs used in _updateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   969  0CE1  3041               	movlw	65
   970  0CE2  1283               	bcf	3,5	;RP0=0, select bank0
   971  0CE3  1303               	bcf	3,6	;RP1=0, select bank0
   972  0CE4  00E4               	movwf	??_updateDisplay+1
   973  0CE5  30EE               	movlw	238
   974  0CE6  00E3               	movwf	??_updateDisplay
   975  0CE7                     u2467:	
   976  0CE7  0BE3               	decfsz	??_updateDisplay,f
   977  0CE8  2CE7               	goto	u2467
   978  0CE9  0BE4               	decfsz	??_updateDisplay+1,f
   979  0CEA  2CE7               	goto	u2467
   980  0CEB  0000               	nop
   981                           
   982                           ;main.c: 62: instCTRL(0x80);
   983  0CEC  3080               	movlw	128
   984  0CED  120A  158A  2284  120A  158A  	fcall	_instCTRL
   985                           
   986                           ;main.c: 63: instCTRL(0x0C);
   987  0CF2  300C               	movlw	12
   988  0CF3  120A  158A  2284  120A  158A  	fcall	_instCTRL
   989                           
   990                           ;main.c: 64: if (mode == DISP_CMN)
   991  0CF8  08FC               	movf	_mode,f	;volatile
   992  0CF9  1D03               	skipz
   993  0CFA  2D1D               	goto	l1902
   994                           
   995                           ;main.c: 65: {
   996                           ;main.c: 66: printToLCD("MODE: DISP STATS");
   997  0CFB  3034               	movlw	low (STR_1-__stringbase)
   998  0CFC  1283               	bcf	3,5	;RP0=0, select bank0
   999  0CFD  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0CFE  00A2               	movwf	printToLCD@str
  1001  0CFF  3080               	movlw	128
  1002  0D00  00A3               	movwf	printToLCD@str+1
  1003  0D01  120A  158A  2383  120A  158A  	fcall	_printToLCD
  1004                           
  1005                           ;main.c: 67: instCTRL(0xC0);
  1006  0D06  30C0               	movlw	192
  1007  0D07  120A  158A  2284  120A  158A  	fcall	_instCTRL
  1008                           
  1009                           ;main.c: 69: displayPPM();
  1010  0D0C  120A  118A  25BF  120A  158A  	fcall	_displayPPM
  1011                           
  1012                           ;main.c: 70: instCTRL(0x94);
  1013  0D11  3094               	movlw	148
  1014  0D12  120A  158A  2284  120A  158A  	fcall	_instCTRL
  1015                           
  1016                           ;main.c: 71: displayTime();
  1017  0D17  120A  158A  2338  120A  158A  	fcall	_displayTime
  1018                           
  1019                           ;main.c: 72: }
  1020  0D1C  2D37               	goto	l1910
  1021  0D1D                     l1902:	
  1022                           
  1023                           ;main.c: 73: else if (mode == SET_ACTV)
  1024  0D1D  087C               	movf	_mode,w	;volatile
  1025  0D1E  3A01               	xorlw	1
  1026  0D1F  1D03               	skipz
  1027  0D20  2D37               	goto	l1910
  1028                           
  1029                           ;main.c: 74: {
  1030                           ;main.c: 75: printToLCD("MODE: SET ACTIVE HRS");
  1031  0D21  300B               	movlw	low (STR_2-__stringbase)
  1032  0D22  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0D23  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0D24  00A2               	movwf	printToLCD@str
  1035  0D25  3080               	movlw	128
  1036  0D26  00A3               	movwf	printToLCD@str+1
  1037  0D27  120A  158A  2383  120A  158A  	fcall	_printToLCD
  1038                           
  1039                           ;main.c: 76: instCTRL(0xC0);
  1040  0D2C  30C0               	movlw	192
  1041  0D2D  120A  158A  2284  120A  158A  	fcall	_instCTRL
  1042                           
  1043                           ;main.c: 77: displayPPM();
  1044  0D32  120A  118A  25BF  120A  158A  	fcall	_displayPPM
  1045  0D37                     l1910:	
  1046                           
  1047                           ;main.c: 78: }
  1048                           ;main.c: 79: _delay((unsigned long)((500)*(4000000/4000.0)));
  1049  0D37  3003               	movlw	3
  1050  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  1051  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  1052  0D3A  00E5               	movwf	??_updateDisplay+2
  1053  0D3B  308A               	movlw	138
  1054  0D3C  00E4               	movwf	??_updateDisplay+1
  1055  0D3D  3056               	movlw	86
  1056  0D3E  00E3               	movwf	??_updateDisplay
  1057  0D3F                     u2477:	
  1058  0D3F  0BE3               	decfsz	??_updateDisplay,f
  1059  0D40  2D3F               	goto	u2477
  1060  0D41  0BE4               	decfsz	??_updateDisplay+1,f
  1061  0D42  2D3F               	goto	u2477
  1062  0D43  0BE5               	decfsz	??_updateDisplay+2,f
  1063  0D44  2D3F               	goto	u2477
  1064  0D45  2D46               	nop2
  1065  0D46  0008               	return
  1066  0D47                     __end_of_updateDisplay:	
  1067                           
  1068                           	psect	text2
  1069  0B38                     __ptext2:	
  1070 ;; *************** function _displayTime *****************
  1071 ;; Defined at:
  1072 ;;		line 215 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  time           20   37[BANK0 ] unsigned char [20]
  1077 ;; Return value:  Size  Location     Type
  1078 ;;		None               void
  1079 ;; Registers used:
  1080 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1086 ;;      Params:         0       0       0       0       0
  1087 ;;      Locals:         0      20       0       0       0
  1088 ;;      Temps:          0       1       0       0       0
  1089 ;;      Totals:         0      21       0       0       0
  1090 ;;Total ram usage:       21 bytes
  1091 ;; Hardware stack levels used:    1
  1092 ;; Hardware stack levels required when called:    4
  1093 ;; This function calls:
  1094 ;;		_printToLCD
  1095 ;;		_sprintf
  1096 ;; This function is called by:
  1097 ;;		_updateDisplay
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           
  1102                           ;psect for function _displayTime
  1103  0B38                     _displayTime:	
  1104                           
  1105                           ;main.c: 217: char time[20];
  1106                           ;main.c: 218: sprintf(time, "Time: %02d:%02d    ", DEF_HOURS, DEF_MINUTES);
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _displayTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1110  0B38  3045               	movlw	displayTime@time& (0+255)
  1111  0B39  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0B3A  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0B3B  00AE               	movwf	sprintf@sp
  1114  0B3C  3000               	movlw	0
  1115  0B3D  00AF               	movwf	sprintf@sp+1
  1116  0B3E  3020               	movlw	(STR_7-__stringbase)& (0+255)
  1117  0B3F  00C4               	movwf	??_displayTime
  1118  0B40  0844               	movf	??_displayTime,w
  1119  0B41  00B0               	movwf	sprintf@f
  1120  0B42  086E               	movf	_DEF_HOURS+1,w
  1121  0B43  01B2               	clrf	?_sprintf+4
  1122  0B44  07B2               	addwf	?_sprintf+4,f
  1123  0B45  086D               	movf	_DEF_HOURS,w
  1124  0B46  01B1               	clrf	?_sprintf+3
  1125  0B47  07B1               	addwf	?_sprintf+3,f
  1126  0B48  086C               	movf	_DEF_MINUTES+1,w
  1127  0B49  01B4               	clrf	?_sprintf+6
  1128  0B4A  07B4               	addwf	?_sprintf+6,f
  1129  0B4B  086B               	movf	_DEF_MINUTES,w
  1130  0B4C  01B3               	clrf	?_sprintf+5
  1131  0B4D  07B3               	addwf	?_sprintf+5,f
  1132  0B4E  120A  118A  23DB  120A  158A  	fcall	_sprintf
  1133                           
  1134                           ;main.c: 219: printToLCD(time);
  1135  0B53  3045               	movlw	displayTime@time& (0+255)
  1136  0B54  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0B55  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0B56  00A2               	movwf	printToLCD@str
  1139  0B57  3000               	movlw	0
  1140  0B58  00A3               	movwf	printToLCD@str+1
  1141  0B59  120A  158A  2383   	fcall	_printToLCD
  1142  0B5C  0008               	return
  1143  0B5D                     __end_of_displayTime:	
  1144                           
  1145                           	psect	text3
  1146  05BF                     __ptext3:	
  1147 ;; *************** function _displayPPM *****************
  1148 ;; Defined at:
  1149 ;;		line 175 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  strBuffer      50    0[BANK3 ] unsigned char [50]
  1154 ;;  PPM             3   50[BANK3 ] float 
  1155 ;;  ppmFraction     2   55[BANK3 ] int 
  1156 ;;  ppmWhole        2   53[BANK3 ] int 
  1157 ;;  bufPtr          1   57[BANK3 ] PTR unsigned char 
  1158 ;;		 -> displayPPM@strBuffer(50), 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;		None               void
  1161 ;; Registers used:
  1162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         0       0       0      58       0
  1170 ;;      Temps:          0       2       0       0       0
  1171 ;;      Totals:         0       2       0      58       0
  1172 ;;Total ram usage:       60 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    5
  1175 ;; This function calls:
  1176 ;;		_CalcMQ135
  1177 ;;		_Read_ADC_MQ135
  1178 ;;		___awtoft
  1179 ;;		___ftadd
  1180 ;;		___ftmul
  1181 ;;		___ftneg
  1182 ;;		___fttol
  1183 ;;		_printToLCD
  1184 ;;		_sprintf
  1185 ;; This function is called by:
  1186 ;;		_updateDisplay
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _displayPPM
  1192  05BF                     _displayPPM:	
  1193                           
  1194                           ;main.c: 177: char strBuffer[50];
  1195                           ;main.c: 178: float PPM = CalcMQ135(Read_ADC_MQ135());
  1196                           
  1197                           ;incstack = 0
  1198                           ; Regs used in _displayPPM: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1199  05BF  120A  118A  27E2  120A  118A  	fcall	_Read_ADC_MQ135
  1200  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  1201  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  1202  05C6  0821               	movf	?_Read_ADC_MQ135+1,w
  1203  05C7  01DF               	clrf	CalcMQ135@RAW_ADC+1
  1204  05C8  07DF               	addwf	CalcMQ135@RAW_ADC+1,f
  1205  05C9  0820               	movf	?_Read_ADC_MQ135,w
  1206  05CA  01DE               	clrf	CalcMQ135@RAW_ADC
  1207  05CB  07DE               	addwf	CalcMQ135@RAW_ADC,f
  1208  05CC  120A  118A  2034  120A  118A  	fcall	_CalcMQ135
  1209  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  1210  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  1211  05D3  085E               	movf	?_CalcMQ135,w
  1212  05D4  1683               	bsf	3,5	;RP0=1, select bank3
  1213  05D5  1703               	bsf	3,6	;RP1=1, select bank3
  1214  05D6  00C2               	movwf	displayPPM@PPM^(0+384)
  1215  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1216  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1217  05D9  085F               	movf	?_CalcMQ135+1,w
  1218  05DA  1683               	bsf	3,5	;RP0=1, select bank3
  1219  05DB  1703               	bsf	3,6	;RP1=1, select bank3
  1220  05DC  00C3               	movwf	(displayPPM@PPM+1)^(0+384)
  1221  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  1222  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  1223  05DF  0860               	movf	?_CalcMQ135+2,w
  1224  05E0  1683               	bsf	3,5	;RP0=1, select bank3
  1225  05E1  1703               	bsf	3,6	;RP1=1, select bank3
  1226  05E2  00C4               	movwf	(displayPPM@PPM+2)^(0+384)
  1227                           
  1228                           ;main.c: 179: int ppmWhole = (int)PPM;
  1229  05E3  0842               	movf	displayPPM@PPM^(0+384),w
  1230  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  1231  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  1232  05E6  00CE               	movwf	___fttol@f1
  1233  05E7  1683               	bsf	3,5	;RP0=1, select bank3
  1234  05E8  1703               	bsf	3,6	;RP1=1, select bank3
  1235  05E9  0843               	movf	(displayPPM@PPM+1)^(0+384),w
  1236  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  1237  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  1238  05EC  00CF               	movwf	___fttol@f1+1
  1239  05ED  1683               	bsf	3,5	;RP0=1, select bank3
  1240  05EE  1703               	bsf	3,6	;RP1=1, select bank3
  1241  05EF  0844               	movf	(displayPPM@PPM+2)^(0+384),w
  1242  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  1243  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  1244  05F2  00D0               	movwf	___fttol@f1+2
  1245  05F3  120A  158A  25B1  120A  118A  	fcall	___fttol
  1246  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  1247  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  1248  05FA  084F               	movf	?___fttol+1,w
  1249  05FB  1683               	bsf	3,5	;RP0=1, select bank3
  1250  05FC  1703               	bsf	3,6	;RP1=1, select bank3
  1251  05FD  01C6               	clrf	(displayPPM@ppmWhole+1)^(0+384)
  1252  05FE  07C6               	addwf	(displayPPM@ppmWhole+1)^(0+384),f
  1253  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1254  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1255  0601  084E               	movf	?___fttol,w
  1256  0602  1683               	bsf	3,5	;RP0=1, select bank3
  1257  0603  1703               	bsf	3,6	;RP1=1, select bank3
  1258  0604  01C5               	clrf	displayPPM@ppmWhole^(0+384)
  1259  0605  07C5               	addwf	displayPPM@ppmWhole^(0+384),f
  1260                           
  1261                           ;main.c: 180: int ppmFraction = (int)((PPM - ppmWhole) * 100);
  1262  0606  0846               	movf	(displayPPM@ppmWhole+1)^(0+384),w
  1263  0607  1283               	bcf	3,5	;RP0=0, select bank0
  1264  0608  1303               	bcf	3,6	;RP1=0, select bank0
  1265  0609  01A9               	clrf	___awtoft@c+1
  1266  060A  07A9               	addwf	___awtoft@c+1,f
  1267  060B  1683               	bsf	3,5	;RP0=1, select bank3
  1268  060C  1703               	bsf	3,6	;RP1=1, select bank3
  1269  060D  0845               	movf	displayPPM@ppmWhole^(0+384),w
  1270  060E  1283               	bcf	3,5	;RP0=0, select bank0
  1271  060F  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0610  01A8               	clrf	___awtoft@c
  1273  0611  07A8               	addwf	___awtoft@c,f
  1274  0612  120A  158A  22EE  120A  118A  	fcall	___awtoft
  1275  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0619  0828               	movf	?___awtoft,w
  1278  061A  00AE               	movwf	___ftneg@f1
  1279  061B  0829               	movf	?___awtoft+1,w
  1280  061C  00AF               	movwf	___ftneg@f1+1
  1281  061D  082A               	movf	?___awtoft+2,w
  1282  061E  00B0               	movwf	___ftneg@f1+2
  1283  061F  120A  158A  226A  120A  118A  	fcall	___ftneg
  1284  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1285  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1286  0626  082E               	movf	?___ftneg,w
  1287  0627  00B4               	movwf	___ftadd@f2
  1288  0628  082F               	movf	?___ftneg+1,w
  1289  0629  00B5               	movwf	___ftadd@f2+1
  1290  062A  0830               	movf	?___ftneg+2,w
  1291  062B  00B6               	movwf	___ftadd@f2+2
  1292  062C  1683               	bsf	3,5	;RP0=1, select bank3
  1293  062D  1703               	bsf	3,6	;RP1=1, select bank3
  1294  062E  0842               	movf	displayPPM@PPM^(0+384),w
  1295  062F  1283               	bcf	3,5	;RP0=0, select bank0
  1296  0630  1303               	bcf	3,6	;RP1=0, select bank0
  1297  0631  00B1               	movwf	___ftadd@f1
  1298  0632  1683               	bsf	3,5	;RP0=1, select bank3
  1299  0633  1703               	bsf	3,6	;RP1=1, select bank3
  1300  0634  0843               	movf	(displayPPM@PPM+1)^(0+384),w
  1301  0635  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0636  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0637  00B2               	movwf	___ftadd@f1+1
  1304  0638  1683               	bsf	3,5	;RP0=1, select bank3
  1305  0639  1703               	bsf	3,6	;RP1=1, select bank3
  1306  063A  0844               	movf	(displayPPM@PPM+2)^(0+384),w
  1307  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1308  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1309  063D  00B3               	movwf	___ftadd@f1+2
  1310  063E  120A  158A  26F7  120A  118A  	fcall	___ftadd
  1311  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0645  0831               	movf	?___ftadd,w
  1314  0646  00C1               	movwf	___ftmul@f2
  1315  0647  0832               	movf	?___ftadd+1,w
  1316  0648  00C2               	movwf	___ftmul@f2+1
  1317  0649  0833               	movf	?___ftadd+2,w
  1318  064A  00C3               	movwf	___ftmul@f2+2
  1319  064B  3000               	movlw	0
  1320  064C  00BE               	movwf	___ftmul@f1
  1321  064D  30C8               	movlw	200
  1322  064E  00BF               	movwf	___ftmul@f1+1
  1323  064F  3042               	movlw	66
  1324  0650  00C0               	movwf	___ftmul@f1+2
  1325  0651  120A  118A  270F  120A  118A  	fcall	___ftmul
  1326  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1327  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1328  0658  083E               	movf	?___ftmul,w
  1329  0659  00CE               	movwf	___fttol@f1
  1330  065A  083F               	movf	?___ftmul+1,w
  1331  065B  00CF               	movwf	___fttol@f1+1
  1332  065C  0840               	movf	?___ftmul+2,w
  1333  065D  00D0               	movwf	___fttol@f1+2
  1334  065E  120A  158A  25B1  120A  118A  	fcall	___fttol
  1335  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0665  084F               	movf	?___fttol+1,w
  1338  0666  1683               	bsf	3,5	;RP0=1, select bank3
  1339  0667  1703               	bsf	3,6	;RP1=1, select bank3
  1340  0668  01C8               	clrf	(displayPPM@ppmFraction+1)^(0+384)
  1341  0669  07C8               	addwf	(displayPPM@ppmFraction+1)^(0+384),f
  1342  066A  1283               	bcf	3,5	;RP0=0, select bank0
  1343  066B  1303               	bcf	3,6	;RP1=0, select bank0
  1344  066C  084E               	movf	?___fttol,w
  1345  066D  1683               	bsf	3,5	;RP0=1, select bank3
  1346  066E  1703               	bsf	3,6	;RP1=1, select bank3
  1347  066F  01C7               	clrf	displayPPM@ppmFraction^(0+384)
  1348  0670  07C7               	addwf	displayPPM@ppmFraction^(0+384),f
  1349                           
  1350                           ;main.c: 183: char *bufPtr = strBuffer;
  1351  0671  3090               	movlw	displayPPM@strBuffer& (0+255)
  1352  0672  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0673  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0674  00E1               	movwf	??_displayPPM
  1355  0675  0861               	movf	??_displayPPM,w
  1356  0676  1683               	bsf	3,5	;RP0=1, select bank3
  1357  0677  1703               	bsf	3,6	;RP1=1, select bank3
  1358  0678  00C9               	movwf	displayPPM@bufPtr^(0+384)
  1359                           
  1360                           ;main.c: 184: bufPtr += sprintf(bufPtr, "CO2: ");
  1361  0679  0849               	movf	displayPPM@bufPtr^(0+384),w
  1362  067A  1283               	bcf	3,5	;RP0=0, select bank0
  1363  067B  1303               	bcf	3,6	;RP1=0, select bank0
  1364  067C  00AE               	movwf	sprintf@sp
  1365  067D  3001               	movlw	1
  1366  067E  00AF               	movwf	sprintf@sp+1
  1367  067F  3059               	movlw	(STR_4-__stringbase)& (0+255)
  1368  0680  00E1               	movwf	??_displayPPM
  1369  0681  0861               	movf	??_displayPPM,w
  1370  0682  00B0               	movwf	sprintf@f
  1371  0683  120A  118A  23DB  120A  118A  	fcall	_sprintf
  1372  0688  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0689  1303               	bcf	3,6	;RP1=0, select bank0
  1374  068A  082E               	movf	?_sprintf,w
  1375  068B  00E2               	movwf	??_displayPPM+1
  1376  068C  0862               	movf	??_displayPPM+1,w
  1377  068D  1683               	bsf	3,5	;RP0=1, select bank3
  1378  068E  1703               	bsf	3,6	;RP1=1, select bank3
  1379  068F  07C9               	addwf	displayPPM@bufPtr^(0+384),f
  1380                           
  1381                           ;main.c: 185: bufPtr += sprintf(bufPtr, "%d", ppmWhole);
  1382  0690  0849               	movf	displayPPM@bufPtr^(0+384),w
  1383  0691  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0692  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0693  00AE               	movwf	sprintf@sp
  1386  0694  3001               	movlw	1
  1387  0695  00AF               	movwf	sprintf@sp+1
  1388  0696  305F               	movlw	(STR_5-__stringbase)& (0+255)
  1389  0697  00E1               	movwf	??_displayPPM
  1390  0698  0861               	movf	??_displayPPM,w
  1391  0699  00B0               	movwf	sprintf@f
  1392  069A  1683               	bsf	3,5	;RP0=1, select bank3
  1393  069B  1703               	bsf	3,6	;RP1=1, select bank3
  1394  069C  0846               	movf	(displayPPM@ppmWhole+1)^(0+384),w
  1395  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1396  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1397  069F  01B2               	clrf	?_sprintf+4
  1398  06A0  07B2               	addwf	?_sprintf+4,f
  1399  06A1  1683               	bsf	3,5	;RP0=1, select bank3
  1400  06A2  1703               	bsf	3,6	;RP1=1, select bank3
  1401  06A3  0845               	movf	displayPPM@ppmWhole^(0+384),w
  1402  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1403  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1404  06A6  01B1               	clrf	?_sprintf+3
  1405  06A7  07B1               	addwf	?_sprintf+3,f
  1406  06A8  120A  118A  23DB  120A  118A  	fcall	_sprintf
  1407  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1408  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1409  06AF  082E               	movf	?_sprintf,w
  1410  06B0  00E2               	movwf	??_displayPPM+1
  1411  06B1  0862               	movf	??_displayPPM+1,w
  1412  06B2  1683               	bsf	3,5	;RP0=1, select bank3
  1413  06B3  1703               	bsf	3,6	;RP1=1, select bank3
  1414  06B4  07C9               	addwf	displayPPM@bufPtr^(0+384),f
  1415                           
  1416                           ;main.c: 186: *bufPtr++ = '.';
  1417  06B5  302E               	movlw	46
  1418  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1419  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1420  06B8  00E1               	movwf	??_displayPPM
  1421  06B9  1683               	bsf	3,5	;RP0=1, select bank3
  1422  06BA  1703               	bsf	3,6	;RP1=1, select bank3
  1423  06BB  0849               	movf	displayPPM@bufPtr^(0+384),w
  1424  06BC  0084               	movwf	4
  1425  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  1426  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  1427  06BF  0861               	movf	??_displayPPM,w
  1428  06C0  1783               	bsf	3,7	;select IRP bank2
  1429  06C1  0080               	movwf	0
  1430  06C2  3001               	movlw	1
  1431  06C3  00E1               	movwf	??_displayPPM
  1432  06C4  0861               	movf	??_displayPPM,w
  1433  06C5  1683               	bsf	3,5	;RP0=1, select bank3
  1434  06C6  1703               	bsf	3,6	;RP1=1, select bank3
  1435  06C7  07C9               	addwf	displayPPM@bufPtr^(0+384),f
  1436                           
  1437                           ;main.c: 187: if (ppmFraction < 10)
  1438  06C8  0848               	movf	(displayPPM@ppmFraction+1)^(0+384),w
  1439  06C9  3A80               	xorlw	128
  1440  06CA  00FF               	movwf	127
  1441  06CB  3080               	movlw	128
  1442  06CC  027F               	subwf	127,w
  1443  06CD  1D03               	skipz
  1444  06CE  2ED1               	goto	u2375
  1445  06CF  300A               	movlw	10
  1446  06D0  0247               	subwf	displayPPM@ppmFraction^(0+384),w
  1447  06D1                     u2375:	
  1448  06D1  1803               	skipnc
  1449  06D2  2EE6               	goto	l1842
  1450                           
  1451                           ;main.c: 188: *bufPtr++ = '0';
  1452  06D3  3030               	movlw	48
  1453  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  1454  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  1455  06D6  00E1               	movwf	??_displayPPM
  1456  06D7  1683               	bsf	3,5	;RP0=1, select bank3
  1457  06D8  1703               	bsf	3,6	;RP1=1, select bank3
  1458  06D9  0849               	movf	displayPPM@bufPtr^(0+384),w
  1459  06DA  0084               	movwf	4
  1460  06DB  1283               	bcf	3,5	;RP0=0, select bank0
  1461  06DC  1303               	bcf	3,6	;RP1=0, select bank0
  1462  06DD  0861               	movf	??_displayPPM,w
  1463  06DE  1783               	bsf	3,7	;select IRP bank2
  1464  06DF  0080               	movwf	0
  1465  06E0  3001               	movlw	1
  1466  06E1  00E1               	movwf	??_displayPPM
  1467  06E2  0861               	movf	??_displayPPM,w
  1468  06E3  1683               	bsf	3,5	;RP0=1, select bank3
  1469  06E4  1703               	bsf	3,6	;RP1=1, select bank3
  1470  06E5  07C9               	addwf	displayPPM@bufPtr^(0+384),f
  1471  06E6                     l1842:	
  1472                           
  1473                           ;main.c: 189: sprintf(bufPtr, "%d ppm  ", ppmFraction);
  1474  06E6  1683               	bsf	3,5	;RP0=1, select bank3
  1475  06E7  1703               	bsf	3,6	;RP1=1, select bank3
  1476  06E8  0849               	movf	displayPPM@bufPtr^(0+384),w
  1477  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  1478  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  1479  06EB  00AE               	movwf	sprintf@sp
  1480  06EC  3001               	movlw	1
  1481  06ED  00AF               	movwf	sprintf@sp+1
  1482  06EE  3050               	movlw	(STR_6-__stringbase)& (0+255)
  1483  06EF  00E1               	movwf	??_displayPPM
  1484  06F0  0861               	movf	??_displayPPM,w
  1485  06F1  00B0               	movwf	sprintf@f
  1486  06F2  1683               	bsf	3,5	;RP0=1, select bank3
  1487  06F3  1703               	bsf	3,6	;RP1=1, select bank3
  1488  06F4  0848               	movf	(displayPPM@ppmFraction+1)^(0+384),w
  1489  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1490  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1491  06F7  01B2               	clrf	?_sprintf+4
  1492  06F8  07B2               	addwf	?_sprintf+4,f
  1493  06F9  1683               	bsf	3,5	;RP0=1, select bank3
  1494  06FA  1703               	bsf	3,6	;RP1=1, select bank3
  1495  06FB  0847               	movf	displayPPM@ppmFraction^(0+384),w
  1496  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  1497  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  1498  06FE  01B1               	clrf	?_sprintf+3
  1499  06FF  07B1               	addwf	?_sprintf+3,f
  1500  0700  120A  118A  23DB  120A  118A  	fcall	_sprintf
  1501                           
  1502                           ;main.c: 191: printToLCD(strBuffer);
  1503  0705  3090               	movlw	displayPPM@strBuffer& (0+255)
  1504  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0708  00A2               	movwf	printToLCD@str
  1507  0709  3001               	movlw	1
  1508  070A  00A3               	movwf	printToLCD@str+1
  1509  070B  120A  158A  2383   	fcall	_printToLCD
  1510  070E  0008               	return
  1511  070F                     __end_of_displayPPM:	
  1512                           
  1513                           	psect	text4
  1514  03DB                     __ptext4:	
  1515 ;; *************** function _sprintf *****************
  1516 ;; Defined at:
  1517 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  sp              2   14[BANK0 ] PTR unsigned char 
  1520 ;;		 -> displayTime@time(20), displayPPM@strBuffer(50), displayRawADC@buffer(30), 
  1521 ;;  f               1   16[BANK0 ] PTR const unsigned char 
  1522 ;;		 -> STR_7(20), STR_6(9), STR_5(3), STR_4(6), 
  1523 ;;		 -> STR_3(11), 
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;  _val            4   28[BANK0 ] struct .
  1526 ;;  width           2   33[BANK0 ] int 
  1527 ;;  ccnt            2   26[BANK0 ] int 
  1528 ;;  c               1   35[BANK0 ] char 
  1529 ;;  flag            1   32[BANK0 ] unsigned char 
  1530 ;;  prec            1   25[BANK0 ] char 
  1531 ;;  ap              1   24[BANK0 ] PTR void [1]
  1532 ;;		 -> ?_sprintf(2), 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  2   14[BANK0 ] int 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       7       0       0       0
  1543 ;;      Locals:         0      12       0       0       0
  1544 ;;      Temps:          0       3       0       0       0
  1545 ;;      Totals:         0      22       0       0       0
  1546 ;;Total ram usage:       22 bytes
  1547 ;; Hardware stack levels used:    1
  1548 ;; Hardware stack levels required when called:    3
  1549 ;; This function calls:
  1550 ;;		___lwdiv
  1551 ;;		___lwmod
  1552 ;;		___wmul
  1553 ;;		_isdigit
  1554 ;; This function is called by:
  1555 ;;		_displayPPM
  1556 ;;		_displayTime
  1557 ;;		_displayRawADC
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           
  1562                           ;psect for function _sprintf
  1563  03DB                     _sprintf:	
  1564                           
  1565                           ;doprnt.c: 494: va_list ap;
  1566                           ;doprnt.c: 499: signed char c;
  1567                           ;doprnt.c: 501: int width;
  1568                           ;doprnt.c: 506: signed char prec;
  1569                           ;doprnt.c: 508: unsigned char flag;
  1570                           ;doprnt.c: 510: int ccnt = 0;
  1571                           
  1572                           ;incstack = 0
  1573                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1574  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1575  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1576  03DD  01BA               	clrf	sprintf@ccnt
  1577  03DE  01BB               	clrf	sprintf@ccnt+1
  1578                           
  1579                           ;doprnt.c: 527: union {
  1580                           ;doprnt.c: 528: unsigned int _val;
  1581                           ;doprnt.c: 529: struct {
  1582                           ;doprnt.c: 530: const char * _cp;
  1583                           ;doprnt.c: 531: unsigned _len;
  1584                           ;doprnt.c: 532: } _str;
  1585                           ;doprnt.c: 533: } _val;
  1586                           ;doprnt.c: 542: *ap = __va_start();
  1587  03DF  3031               	movlw	(?_sprintf+3)& (0+255)
  1588  03E0  00B5               	movwf	??_sprintf
  1589  03E1  0835               	movf	??_sprintf,w
  1590  03E2  00B8               	movwf	sprintf@ap
  1591  03E3                     l1758:	
  1592                           ;doprnt.c: 545: while(c = *f++) {
  1593                           
  1594  03E3  3001               	movlw	1
  1595  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1596  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1597  03E6  07B0               	addwf	sprintf@f,f
  1598  03E7  30FF               	movlw	-1
  1599  03E8  0730               	addwf	sprintf@f,w
  1600  03E9  0084               	movwf	4
  1601  03EA  120A  158A  200A  120A  118A  	fcall	stringdir
  1602  03EF  00B5               	movwf	??_sprintf
  1603  03F0  0835               	movf	??_sprintf,w
  1604  03F1  00C3               	movwf	sprintf@c
  1605  03F2  08C3               	movf	sprintf@c,f
  1606  03F3  1903               	btfsc	3,2
  1607  03F4  2DB0               	goto	l1760
  1608                           
  1609                           ;doprnt.c: 547: if(c != '%')
  1610  03F5  0843               	movf	sprintf@c,w
  1611  03F6  3A25               	xorlw	37
  1612  03F7  1903               	skipnz
  1613  03F8  2C0B               	goto	l1652
  1614                           
  1615                           ;doprnt.c: 549: {
  1616                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
  1617  03F9  082E               	movf	sprintf@sp,w
  1618  03FA  0084               	movwf	4
  1619  03FB  1383               	bcf	3,7
  1620  03FC  182F               	btfsc	sprintf@sp+1,0
  1621  03FD  1783               	bsf	3,7
  1622  03FE  0843               	movf	sprintf@c,w
  1623  03FF  0080               	movwf	0
  1624  0400  3001               	movlw	1
  1625  0401  07AE               	addwf	sprintf@sp,f
  1626  0402  1803               	skipnc
  1627  0403  0AAF               	incf	sprintf@sp+1,f
  1628  0404  3001               	movlw	1
  1629  0405  07BA               	addwf	sprintf@ccnt,f
  1630  0406  1803               	skipnc
  1631  0407  0ABB               	incf	sprintf@ccnt+1,f
  1632  0408  3000               	movlw	0
  1633  0409  07BB               	addwf	sprintf@ccnt+1,f
  1634                           
  1635                           ;doprnt.c: 551: continue;
  1636  040A  2BE3               	goto	l1758
  1637  040B                     l1652:	
  1638                           
  1639                           ;doprnt.c: 552: }
  1640                           ;doprnt.c: 555: width = 0;
  1641  040B  01C1               	clrf	sprintf@width
  1642  040C  01C2               	clrf	sprintf@width+1
  1643                           
  1644                           ;doprnt.c: 557: flag = 0;
  1645  040D  01C0               	clrf	sprintf@flag
  1646                           
  1647                           ;doprnt.c: 560: switch(*f) {
  1648                           
  1649                           ;doprnt.c: 559: for(;;) {
  1650  040E  2C14               	goto	l1658
  1651  040F                     l163:	
  1652                           ;doprnt.c: 588: case '0':
  1653                           
  1654                           
  1655                           ;doprnt.c: 589: flag |= 0x04;
  1656  040F  1540               	bsf	sprintf@flag,2
  1657                           
  1658                           ;doprnt.c: 590: f++;
  1659  0410  3001               	movlw	1
  1660  0411  00B5               	movwf	??_sprintf
  1661  0412  0835               	movf	??_sprintf,w
  1662  0413  07B0               	addwf	sprintf@f,f
  1663  0414                     l1658:	
  1664                           ;doprnt.c: 593: }
  1665                           
  1666                           ;doprnt.c: 591: continue;
  1667                           
  1668  0414  0830               	movf	sprintf@f,w
  1669  0415  0084               	movwf	4
  1670  0416  120A  158A  200A  120A  118A  	fcall	stringdir
  1671                           
  1672                           ; Switch size 1, requested type "space"
  1673                           ; Number of cases is 1, Range of values is 48 to 48
  1674                           ; switch strategies available:
  1675                           ; Name         Instructions Cycles
  1676                           ; simple_byte            4     3 (average)
  1677                           ; direct_byte           14    11 (fixed)
  1678                           ; jumptable            263     9 (fixed)
  1679                           ;	Chosen strategy is simple_byte
  1680  041B  3A30               	xorlw	48	; case 48
  1681  041C  1903               	skipnz
  1682  041D  2C0F               	goto	l163
  1683  041E  2C1F               	goto	l1660
  1684  041F                     l1660:	
  1685                           ;doprnt.c: 595: }
  1686                           
  1687                           ;doprnt.c: 594: break;
  1688                           
  1689                           
  1690                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  1691  041F  0830               	movf	sprintf@f,w
  1692  0420  0084               	movwf	4
  1693  0421  120A  158A  200A  120A  118A  	fcall	stringdir
  1694  0426  120A  158A  2274  120A  118A  	fcall	_isdigit
  1695  042B  1C03               	btfss	3,0
  1696  042C  2C6F               	goto	l1674
  1697                           
  1698                           ;doprnt.c: 607: width = 0;
  1699  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1700  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1701  042F  01C1               	clrf	sprintf@width
  1702  0430  01C2               	clrf	sprintf@width+1
  1703  0431                     l1664:	
  1704                           ;doprnt.c: 608: do {
  1705                           
  1706                           
  1707                           ;doprnt.c: 609: width *= 10;
  1708  0431  300A               	movlw	10
  1709  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0434  00A0               	movwf	___wmul@multiplier
  1712  0435  3000               	movlw	0
  1713  0436  00A1               	movwf	___wmul@multiplier+1
  1714  0437  0842               	movf	sprintf@width+1,w
  1715  0438  01A3               	clrf	___wmul@multiplicand+1
  1716  0439  07A3               	addwf	___wmul@multiplicand+1,f
  1717  043A  0841               	movf	sprintf@width,w
  1718  043B  01A2               	clrf	___wmul@multiplicand
  1719  043C  07A2               	addwf	___wmul@multiplicand,f
  1720  043D  120A  158A  2313  120A  118A  	fcall	___wmul
  1721  0442  1283               	bcf	3,5	;RP0=0, select bank0
  1722  0443  1303               	bcf	3,6	;RP1=0, select bank0
  1723  0444  0821               	movf	?___wmul+1,w
  1724  0445  01C2               	clrf	sprintf@width+1
  1725  0446  07C2               	addwf	sprintf@width+1,f
  1726  0447  0820               	movf	?___wmul,w
  1727  0448  01C1               	clrf	sprintf@width
  1728  0449  07C1               	addwf	sprintf@width,f
  1729                           
  1730                           ;doprnt.c: 610: width += *f++ - '0';
  1731  044A  0830               	movf	sprintf@f,w
  1732  044B  0084               	movwf	4
  1733  044C  120A  158A  200A  120A  118A  	fcall	stringdir
  1734  0451  3ED0               	addlw	208
  1735  0452  00B5               	movwf	??_sprintf
  1736  0453  30FF               	movlw	255
  1737  0454  1803               	skipnc
  1738  0455  3000               	movlw	0
  1739  0456  00B6               	movwf	??_sprintf+1
  1740  0457  0835               	movf	??_sprintf,w
  1741  0458  07C1               	addwf	sprintf@width,f
  1742  0459  1803               	skipnc
  1743  045A  0AC2               	incf	sprintf@width+1,f
  1744  045B  0836               	movf	??_sprintf+1,w
  1745  045C  07C2               	addwf	sprintf@width+1,f
  1746  045D  3001               	movlw	1
  1747  045E  00B5               	movwf	??_sprintf
  1748  045F  0835               	movf	??_sprintf,w
  1749  0460  07B0               	addwf	sprintf@f,f
  1750                           
  1751                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  1752  0461  0830               	movf	sprintf@f,w
  1753  0462  0084               	movwf	4
  1754  0463  120A  158A  200A  120A  118A  	fcall	stringdir
  1755  0468  120A  158A  2274  120A  118A  	fcall	_isdigit
  1756  046D  1803               	btfsc	3,0
  1757  046E  2C31               	goto	l1664
  1758  046F                     l1674:	
  1759                           ;doprnt.c: 831: }
  1760                           
  1761                           ;doprnt.c: 822: continue;
  1762                           
  1763                           ;doprnt.c: 811: default:
  1764                           
  1765                           ;doprnt.c: 707: case 'i':
  1766                           ;doprnt.c: 708: break;
  1767                           
  1768                           ;doprnt.c: 706: case 'd':
  1769                           
  1770                           ;doprnt.c: 647: goto alldone;
  1771                           
  1772                           ;doprnt.c: 646: case 0:
  1773                           
  1774                           ;doprnt.c: 617: }
  1775                           ;doprnt.c: 644: switch(c = *f++) {
  1776                           
  1777  046F  3001               	movlw	1
  1778  0470  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0471  1303               	bcf	3,6	;RP1=0, select bank0
  1780  0472  07B0               	addwf	sprintf@f,f
  1781  0473  30FF               	movlw	-1
  1782  0474  0730               	addwf	sprintf@f,w
  1783  0475  0084               	movwf	4
  1784  0476  120A  158A  200A  120A  118A  	fcall	stringdir
  1785  047B  00C3               	movwf	sprintf@c
  1786                           
  1787                           ; Switch size 1, requested type "space"
  1788                           ; Number of cases is 3, Range of values is 0 to 105
  1789                           ; switch strategies available:
  1790                           ; Name         Instructions Cycles
  1791                           ; simple_byte           10     6 (average)
  1792                           ; jumptable            260     6 (fixed)
  1793                           ;	Chosen strategy is simple_byte
  1794  047C  3A00               	xorlw	0	; case 0
  1795  047D  1903               	skipnz
  1796  047E  2DB0               	goto	l1760
  1797  047F  3A64               	xorlw	100	; case 100
  1798  0480  1903               	skipnz
  1799  0481  2C86               	goto	l1676
  1800  0482  3A0D               	xorlw	13	; case 105
  1801  0483  1903               	skipnz
  1802  0484  2C86               	goto	l1676
  1803  0485  2BE3               	goto	l1758
  1804  0486                     l1676:	
  1805                           
  1806                           ;doprnt.c: 1262: {
  1807                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1808  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1809  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1810  0488  0838               	movf	sprintf@ap,w
  1811  0489  0084               	movwf	4
  1812  048A  1383               	bcf	3,7	;select IRP bank0
  1813  048B  0800               	movf	0,w
  1814  048C  00BC               	movwf	sprintf@_val
  1815  048D  0A84               	incf	4,f
  1816  048E  0800               	movf	0,w
  1817  048F  00BD               	movwf	sprintf@_val+1
  1818  0490  3002               	movlw	2
  1819  0491  00B5               	movwf	??_sprintf
  1820  0492  0835               	movf	??_sprintf,w
  1821  0493  07B8               	addwf	sprintf@ap,f
  1822                           
  1823                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  1824  0494  1FBD               	btfss	sprintf@_val+1,7
  1825  0495  2C9F               	goto	l1686
  1826                           
  1827                           ;doprnt.c: 1271: flag |= 0x03;
  1828  0496  3003               	movlw	3
  1829  0497  00B5               	movwf	??_sprintf
  1830  0498  0835               	movf	??_sprintf,w
  1831  0499  04C0               	iorwf	sprintf@flag,f
  1832                           
  1833                           ;doprnt.c: 1272: _val._val = -_val._val;
  1834  049A  09BC               	comf	sprintf@_val,f
  1835  049B  09BD               	comf	sprintf@_val+1,f
  1836  049C  0ABC               	incf	sprintf@_val,f
  1837  049D  1903               	skipnz
  1838  049E  0ABD               	incf	sprintf@_val+1,f
  1839  049F                     l1686:	
  1840                           
  1841                           ;doprnt.c: 1273: }
  1842                           ;doprnt.c: 1275: }
  1843                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1844  049F  01C3               	clrf	sprintf@c
  1845  04A0  0AC3               	incf	sprintf@c,f
  1846  04A1  0843               	movf	sprintf@c,w
  1847  04A2  3A05               	xorlw	5
  1848  04A3  1903               	btfsc	3,2
  1849  04A4  2CC6               	goto	l1698
  1850  04A5                     l1690:	
  1851                           
  1852                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  1853  04A5  0843               	movf	sprintf@c,w
  1854  04A6  00B5               	movwf	??_sprintf
  1855  04A7  0735               	addwf	??_sprintf,w
  1856  04A8  3E01               	addlw	low (_dpowers-__stringbase)
  1857  04A9  0084               	movwf	4
  1858  04AA  120A  158A  200A  120A  118A  	fcall	stringdir
  1859  04AF  00B6               	movwf	??_sprintf+1
  1860  04B0  120A  158A  200A  120A  118A  	fcall	stringdir
  1861  04B5  00B7               	movwf	??_sprintf+2
  1862  04B6  0837               	movf	??_sprintf+2,w
  1863  04B7  023D               	subwf	sprintf@_val+1,w
  1864  04B8  1D03               	skipz
  1865  04B9  2CBC               	goto	u2125
  1866  04BA  0836               	movf	??_sprintf+1,w
  1867  04BB  023C               	subwf	sprintf@_val,w
  1868  04BC                     u2125:	
  1869  04BC  1C03               	btfss	3,0
  1870  04BD  2CC6               	goto	l1698
  1871                           
  1872                           ;doprnt.c: 1316: break;
  1873  04BE  3001               	movlw	1
  1874  04BF  00B5               	movwf	??_sprintf
  1875  04C0  0835               	movf	??_sprintf,w
  1876  04C1  07C3               	addwf	sprintf@c,f
  1877  04C2  0843               	movf	sprintf@c,w
  1878  04C3  3A05               	xorlw	5
  1879  04C4  1D03               	skipz
  1880  04C5  2CA5               	goto	l1690
  1881  04C6                     l1698:	
  1882                           
  1883                           ;doprnt.c: 1354: if(width && flag & 0x03)
  1884  04C6  0842               	movf	sprintf@width+1,w
  1885  04C7  0441               	iorwf	sprintf@width,w
  1886  04C8  1903               	skipnz
  1887  04C9  2CD4               	goto	l181
  1888  04CA  0840               	movf	sprintf@flag,w
  1889  04CB  3903               	andlw	3
  1890  04CC  1903               	btfsc	3,2
  1891  04CD  2CD4               	goto	l181
  1892                           
  1893                           ;doprnt.c: 1355: width--;
  1894  04CE  30FF               	movlw	255
  1895  04CF  07C1               	addwf	sprintf@width,f
  1896  04D0  1803               	skipnc
  1897  04D1  0AC2               	incf	sprintf@width+1,f
  1898  04D2  30FF               	movlw	255
  1899  04D3  07C2               	addwf	sprintf@width+1,f
  1900  04D4                     l181:	
  1901                           
  1902                           ;doprnt.c: 1390: if(width > c)
  1903  04D4  0843               	movf	sprintf@c,w
  1904  04D5  00B5               	movwf	??_sprintf
  1905  04D6  01B6               	clrf	??_sprintf+1
  1906  04D7  1BB5               	btfsc	??_sprintf,7
  1907  04D8  03B6               	decf	??_sprintf+1,f
  1908  04D9  0836               	movf	??_sprintf+1,w
  1909  04DA  3A80               	xorlw	128
  1910  04DB  00B7               	movwf	??_sprintf+2
  1911  04DC  0842               	movf	sprintf@width+1,w
  1912  04DD  3A80               	xorlw	128
  1913  04DE  0237               	subwf	??_sprintf+2,w
  1914  04DF  1D03               	skipz
  1915  04E0  2CE3               	goto	u2165
  1916  04E1  0841               	movf	sprintf@width,w
  1917  04E2  0235               	subwf	??_sprintf,w
  1918  04E3                     u2165:	
  1919  04E3  1803               	skipnc
  1920  04E4  2CF3               	goto	l1706
  1921                           
  1922                           ;doprnt.c: 1391: width -= c;
  1923  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  1924  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  1925  04E7  0843               	movf	sprintf@c,w
  1926  04E8  00B5               	movwf	??_sprintf
  1927  04E9  01B6               	clrf	??_sprintf+1
  1928  04EA  1BB5               	btfsc	??_sprintf,7
  1929  04EB  03B6               	decf	??_sprintf+1,f
  1930  04EC  0835               	movf	??_sprintf,w
  1931  04ED  02C1               	subwf	sprintf@width,f
  1932  04EE  0836               	movf	??_sprintf+1,w
  1933  04EF  1C03               	skipc
  1934  04F0  03C2               	decf	sprintf@width+1,f
  1935  04F1  02C2               	subwf	sprintf@width+1,f
  1936  04F2  2CF7               	goto	l1708
  1937  04F3                     l1706:	
  1938                           
  1939                           ;doprnt.c: 1392: else
  1940                           ;doprnt.c: 1393: width = 0;
  1941  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1942  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1943  04F5  01C1               	clrf	sprintf@width
  1944  04F6  01C2               	clrf	sprintf@width+1
  1945  04F7                     l1708:	
  1946                           
  1947                           ;doprnt.c: 1396: if(flag & 0x04) {
  1948  04F7  1D40               	btfss	sprintf@flag,2
  1949  04F8  2D2A               	goto	l1728
  1950                           
  1951                           ;doprnt.c: 1401: if(flag & 0x03)
  1952  04F9  0840               	movf	sprintf@flag,w
  1953  04FA  3903               	andlw	3
  1954  04FB  1903               	btfsc	3,2
  1955  04FC  2D0E               	goto	l1718
  1956                           
  1957                           ;doprnt.c: 1402: ((*sp++ = ('-')),(++ccnt));
  1958  04FD  082E               	movf	sprintf@sp,w
  1959  04FE  0084               	movwf	4
  1960  04FF  1383               	bcf	3,7
  1961  0500  182F               	btfsc	sprintf@sp+1,0
  1962  0501  1783               	bsf	3,7
  1963  0502  302D               	movlw	45
  1964  0503  0080               	movwf	0
  1965  0504  3001               	movlw	1
  1966  0505  07AE               	addwf	sprintf@sp,f
  1967  0506  1803               	skipnc
  1968  0507  0AAF               	incf	sprintf@sp+1,f
  1969  0508  3001               	movlw	1
  1970  0509  07BA               	addwf	sprintf@ccnt,f
  1971  050A  1803               	skipnc
  1972  050B  0ABB               	incf	sprintf@ccnt+1,f
  1973  050C  3000               	movlw	0
  1974  050D  07BB               	addwf	sprintf@ccnt+1,f
  1975  050E                     l1718:	
  1976                           
  1977                           ;doprnt.c: 1424: if(width)
  1978  050E  0842               	movf	sprintf@width+1,w
  1979  050F  0441               	iorwf	sprintf@width,w
  1980  0510  1903               	skipnz
  1981  0511  2D5E               	goto	l1746
  1982                           
  1983                           ;doprnt.c: 1426: ((*sp++ = ('0')),(++ccnt));
  1984                           
  1985                           ;doprnt.c: 1425: do
  1986  0512  082E               	movf	sprintf@sp,w
  1987  0513  0084               	movwf	4
  1988  0514  1383               	bcf	3,7
  1989  0515  182F               	btfsc	sprintf@sp+1,0
  1990  0516  1783               	bsf	3,7
  1991  0517  3030               	movlw	48
  1992  0518  0080               	movwf	0
  1993  0519  3001               	movlw	1
  1994  051A  07AE               	addwf	sprintf@sp,f
  1995  051B  1803               	skipnc
  1996  051C  0AAF               	incf	sprintf@sp+1,f
  1997  051D  3001               	movlw	1
  1998  051E  07BA               	addwf	sprintf@ccnt,f
  1999  051F  1803               	skipnc
  2000  0520  0ABB               	incf	sprintf@ccnt+1,f
  2001  0521  3000               	movlw	0
  2002  0522  07BB               	addwf	sprintf@ccnt+1,f
  2003                           
  2004                           ;doprnt.c: 1427: while(--width);
  2005  0523  30FF               	movlw	255
  2006  0524  07C1               	addwf	sprintf@width,f
  2007  0525  1803               	skipnc
  2008  0526  0AC2               	incf	sprintf@width+1,f
  2009  0527  30FF               	movlw	255
  2010  0528  07C2               	addwf	sprintf@width+1,f
  2011  0529  2D0E               	goto	l1718
  2012  052A                     l1728:	
  2013                           ;doprnt.c: 1429: } else
  2014                           
  2015                           
  2016                           ;doprnt.c: 1431: {
  2017                           ;doprnt.c: 1433: if(width
  2018                           ;doprnt.c: 1437: )
  2019  052A  0842               	movf	sprintf@width+1,w
  2020  052B  0441               	iorwf	sprintf@width,w
  2021  052C  1903               	skipnz
  2022  052D  2D49               	goto	l1738
  2023  052E                     l1730:	
  2024                           ;doprnt.c: 1438: do
  2025                           
  2026                           
  2027                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
  2028  052E  082E               	movf	sprintf@sp,w
  2029  052F  0084               	movwf	4
  2030  0530  1383               	bcf	3,7
  2031  0531  182F               	btfsc	sprintf@sp+1,0
  2032  0532  1783               	bsf	3,7
  2033  0533  3020               	movlw	32
  2034  0534  0080               	movwf	0
  2035  0535  3001               	movlw	1
  2036  0536  07AE               	addwf	sprintf@sp,f
  2037  0537  1803               	skipnc
  2038  0538  0AAF               	incf	sprintf@sp+1,f
  2039  0539  3001               	movlw	1
  2040  053A  07BA               	addwf	sprintf@ccnt,f
  2041  053B  1803               	skipnc
  2042  053C  0ABB               	incf	sprintf@ccnt+1,f
  2043  053D  3000               	movlw	0
  2044  053E  07BB               	addwf	sprintf@ccnt+1,f
  2045                           
  2046                           ;doprnt.c: 1440: while(--width);
  2047  053F  30FF               	movlw	255
  2048  0540  07C1               	addwf	sprintf@width,f
  2049  0541  1803               	skipnc
  2050  0542  0AC2               	incf	sprintf@width+1,f
  2051  0543  30FF               	movlw	255
  2052  0544  07C2               	addwf	sprintf@width+1,f
  2053  0545  0842               	movf	sprintf@width+1,w
  2054  0546  0441               	iorwf	sprintf@width,w
  2055  0547  1D03               	skipz
  2056  0548  2D2E               	goto	l1730
  2057  0549                     l1738:	
  2058                           
  2059                           ;doprnt.c: 1447: if(flag & 0x03)
  2060  0549  0840               	movf	sprintf@flag,w
  2061  054A  3903               	andlw	3
  2062  054B  1903               	btfsc	3,2
  2063  054C  2D5E               	goto	l1746
  2064                           
  2065                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
  2066  054D  082E               	movf	sprintf@sp,w
  2067  054E  0084               	movwf	4
  2068  054F  1383               	bcf	3,7
  2069  0550  182F               	btfsc	sprintf@sp+1,0
  2070  0551  1783               	bsf	3,7
  2071  0552  302D               	movlw	45
  2072  0553  0080               	movwf	0
  2073  0554  3001               	movlw	1
  2074  0555  07AE               	addwf	sprintf@sp,f
  2075  0556  1803               	skipnc
  2076  0557  0AAF               	incf	sprintf@sp+1,f
  2077  0558  3001               	movlw	1
  2078  0559  07BA               	addwf	sprintf@ccnt,f
  2079  055A  1803               	skipnc
  2080  055B  0ABB               	incf	sprintf@ccnt+1,f
  2081  055C  3000               	movlw	0
  2082  055D  07BB               	addwf	sprintf@ccnt+1,f
  2083  055E                     l1746:	
  2084                           
  2085                           ;doprnt.c: 1478: }
  2086                           ;doprnt.c: 1481: prec = c;
  2087  055E  0843               	movf	sprintf@c,w
  2088  055F  00B5               	movwf	??_sprintf
  2089  0560  0835               	movf	??_sprintf,w
  2090  0561  00B9               	movwf	sprintf@prec
  2091  0562                     l1756:	
  2092                           ;doprnt.c: 1483: while(prec--) {
  2093                           
  2094  0562  30FF               	movlw	-1
  2095  0563  00B5               	movwf	??_sprintf
  2096  0564  0835               	movf	??_sprintf,w
  2097  0565  07B9               	addwf	sprintf@prec,f
  2098  0566  0839               	movf	sprintf@prec,w
  2099  0567  3AFF               	xorlw	-1
  2100  0568  1903               	btfsc	3,2
  2101  0569  2BE3               	goto	l1758
  2102                           
  2103                           ;doprnt.c: 1487: {
  2104                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2105  056A  300A               	movlw	10
  2106  056B  00A8               	movwf	___lwmod@divisor
  2107  056C  3000               	movlw	0
  2108  056D  00A9               	movwf	___lwmod@divisor+1
  2109  056E  0839               	movf	sprintf@prec,w
  2110  056F  00B5               	movwf	??_sprintf
  2111  0570  0735               	addwf	??_sprintf,w
  2112  0571  3E01               	addlw	low (_dpowers-__stringbase)
  2113  0572  0084               	movwf	4
  2114  0573  120A  158A  200A  120A  118A  	fcall	stringdir
  2115  0578  00A0               	movwf	___lwdiv@divisor
  2116  0579  120A  158A  200A  120A  118A  	fcall	stringdir
  2117  057E  00A1               	movwf	___lwdiv@divisor+1
  2118  057F  083D               	movf	sprintf@_val+1,w
  2119  0580  01A3               	clrf	___lwdiv@dividend+1
  2120  0581  07A3               	addwf	___lwdiv@dividend+1,f
  2121  0582  083C               	movf	sprintf@_val,w
  2122  0583  01A2               	clrf	___lwdiv@dividend
  2123  0584  07A2               	addwf	___lwdiv@dividend,f
  2124  0585  120A  158A  2454  120A  118A  	fcall	___lwdiv
  2125  058A  1283               	bcf	3,5	;RP0=0, select bank0
  2126  058B  1303               	bcf	3,6	;RP1=0, select bank0
  2127  058C  0821               	movf	?___lwdiv+1,w
  2128  058D  01AB               	clrf	___lwmod@dividend+1
  2129  058E  07AB               	addwf	___lwmod@dividend+1,f
  2130  058F  0820               	movf	?___lwdiv,w
  2131  0590  01AA               	clrf	___lwmod@dividend
  2132  0591  07AA               	addwf	___lwmod@dividend,f
  2133  0592  120A  158A  23AE  120A  118A  	fcall	___lwmod
  2134  0597  1283               	bcf	3,5	;RP0=0, select bank0
  2135  0598  1303               	bcf	3,6	;RP1=0, select bank0
  2136  0599  0828               	movf	?___lwmod,w
  2137  059A  3E30               	addlw	48
  2138  059B  00B6               	movwf	??_sprintf+1
  2139  059C  0836               	movf	??_sprintf+1,w
  2140  059D  00C3               	movwf	sprintf@c
  2141                           
  2142                           ;doprnt.c: 1532: }
  2143                           ;doprnt.c: 1533: ((*sp++ = (c)),(++ccnt));
  2144  059E  082E               	movf	sprintf@sp,w
  2145  059F  0084               	movwf	4
  2146  05A0  1383               	bcf	3,7
  2147  05A1  182F               	btfsc	sprintf@sp+1,0
  2148  05A2  1783               	bsf	3,7
  2149  05A3  0843               	movf	sprintf@c,w
  2150  05A4  0080               	movwf	0
  2151  05A5  3001               	movlw	1
  2152  05A6  07AE               	addwf	sprintf@sp,f
  2153  05A7  1803               	skipnc
  2154  05A8  0AAF               	incf	sprintf@sp+1,f
  2155  05A9  3001               	movlw	1
  2156  05AA  07BA               	addwf	sprintf@ccnt,f
  2157  05AB  1803               	skipnc
  2158  05AC  0ABB               	incf	sprintf@ccnt+1,f
  2159  05AD  3000               	movlw	0
  2160  05AE  07BB               	addwf	sprintf@ccnt+1,f
  2161  05AF  2D62               	goto	l1756
  2162  05B0                     l1760:	
  2163                           ;doprnt.c: 1534: }
  2164                           ;doprnt.c: 1542: }
  2165                           ;doprnt.c: 1544: alldone:
  2166                           
  2167                           
  2168                           ;doprnt.c: 1547: *sp = 0;
  2169  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  2170  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  2171  05B2  082E               	movf	sprintf@sp,w
  2172  05B3  0084               	movwf	4
  2173  05B4  1783               	bsf	3,7
  2174  05B5  1C2F               	btfss	sprintf@sp+1,0
  2175  05B6  1383               	bcf	3,7
  2176  05B7  0180               	clrf	0
  2177                           
  2178                           ;doprnt.c: 1549: return ccnt;
  2179  05B8  083B               	movf	sprintf@ccnt+1,w
  2180  05B9  01AF               	clrf	?_sprintf+1
  2181  05BA  07AF               	addwf	?_sprintf+1,f
  2182  05BB  083A               	movf	sprintf@ccnt,w
  2183  05BC  01AE               	clrf	?_sprintf
  2184  05BD  07AE               	addwf	?_sprintf,f
  2185  05BE  0008               	return
  2186  05BF                     __end_of_sprintf:	
  2187                           
  2188                           	psect	text5
  2189  0A74                     __ptext5:	
  2190 ;; *************** function _isdigit *****************
  2191 ;; Defined at:
  2192 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  c               1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  c               1    1[BANK0 ] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;		None               void
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2206 ;;      Params:         0       0       0       0       0
  2207 ;;      Locals:         0       2       0       0       0
  2208 ;;      Temps:          0       0       0       0       0
  2209 ;;      Totals:         0       2       0       0       0
  2210 ;;Total ram usage:        2 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    2
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_sprintf
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _isdigit
  2222  0A74                     _isdigit:	
  2223                           
  2224                           ;incstack = 0
  2225                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2226                           ;isdigit@c stored from wreg
  2227  0A74  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0A75  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0A76  00A1               	movwf	isdigit@c
  2230  0A77  01A0               	clrf	_isdigit$373
  2231  0A78  303A               	movlw	58
  2232  0A79  0221               	subwf	isdigit@c,w
  2233  0A7A  1803               	skipnc
  2234  0A7B  2A82               	goto	l1384
  2235  0A7C  3030               	movlw	48
  2236  0A7D  0221               	subwf	isdigit@c,w
  2237  0A7E  1C03               	skipc
  2238  0A7F  2A82               	goto	l1384
  2239  0A80  01A0               	clrf	_isdigit$373
  2240  0A81  0AA0               	incf	_isdigit$373,f
  2241  0A82                     l1384:	
  2242  0A82  0C20               	rrf	_isdigit$373,w
  2243  0A83  0008               	return
  2244  0A84                     __end_of_isdigit:	
  2245                           
  2246                           	psect	text6
  2247  0B13                     __ptext6:	
  2248 ;; *************** function ___wmul *****************
  2249 ;; Defined at:
  2250 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2253 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  product         2    4[BANK0 ] unsigned int 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  2    0[BANK0 ] unsigned int 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2265 ;;      Params:         0       4       0       0       0
  2266 ;;      Locals:         0       2       0       0       0
  2267 ;;      Temps:          0       0       0       0       0
  2268 ;;      Totals:         0       6       0       0       0
  2269 ;;Total ram usage:        6 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    2
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_sprintf
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           
  2280                           ;psect for function ___wmul
  2281  0B13                     ___wmul:	
  2282                           
  2283                           ;incstack = 0
  2284                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2285  0B13  1283               	bcf	3,5	;RP0=0, select bank0
  2286  0B14  1303               	bcf	3,6	;RP1=0, select bank0
  2287  0B15  01A4               	clrf	___wmul@product
  2288  0B16  01A5               	clrf	___wmul@product+1
  2289  0B17                     l1390:	
  2290  0B17  1C20               	btfss	___wmul@multiplier,0
  2291  0B18  2B1F               	goto	l282
  2292  0B19  0822               	movf	___wmul@multiplicand,w
  2293  0B1A  07A4               	addwf	___wmul@product,f
  2294  0B1B  1803               	skipnc
  2295  0B1C  0AA5               	incf	___wmul@product+1,f
  2296  0B1D  0823               	movf	___wmul@multiplicand+1,w
  2297  0B1E  07A5               	addwf	___wmul@product+1,f
  2298  0B1F                     l282:	
  2299  0B1F  3001               	movlw	1
  2300  0B20                     u1425:	
  2301  0B20  1003               	clrc
  2302  0B21  0DA2               	rlf	___wmul@multiplicand,f
  2303  0B22  0DA3               	rlf	___wmul@multiplicand+1,f
  2304  0B23  3EFF               	addlw	-1
  2305  0B24  1D03               	skipz
  2306  0B25  2B20               	goto	u1425
  2307  0B26  3001               	movlw	1
  2308  0B27                     u1435:	
  2309  0B27  1003               	clrc
  2310  0B28  0CA1               	rrf	___wmul@multiplier+1,f
  2311  0B29  0CA0               	rrf	___wmul@multiplier,f
  2312  0B2A  3EFF               	addlw	-1
  2313  0B2B  1D03               	skipz
  2314  0B2C  2B27               	goto	u1435
  2315  0B2D  0821               	movf	___wmul@multiplier+1,w
  2316  0B2E  0420               	iorwf	___wmul@multiplier,w
  2317  0B2F  1D03               	skipz
  2318  0B30  2B17               	goto	l1390
  2319  0B31  0825               	movf	___wmul@product+1,w
  2320  0B32  01A1               	clrf	?___wmul+1
  2321  0B33  07A1               	addwf	?___wmul+1,f
  2322  0B34  0824               	movf	___wmul@product,w
  2323  0B35  01A0               	clrf	?___wmul
  2324  0B36  07A0               	addwf	?___wmul,f
  2325  0B37  0008               	return
  2326  0B38                     __end_of___wmul:	
  2327                           
  2328                           	psect	text7
  2329  0BAE                     __ptext7:	
  2330 ;; *************** function ___lwmod *****************
  2331 ;; Defined at:
  2332 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  divisor         2    8[BANK0 ] unsigned int 
  2335 ;;  dividend        2   10[BANK0 ] unsigned int 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  counter         1   13[BANK0 ] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  2    8[BANK0 ] unsigned int 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2347 ;;      Params:         0       4       0       0       0
  2348 ;;      Locals:         0       1       0       0       0
  2349 ;;      Temps:          0       1       0       0       0
  2350 ;;      Totals:         0       6       0       0       0
  2351 ;;Total ram usage:        6 bytes
  2352 ;; Hardware stack levels used:    1
  2353 ;; Hardware stack levels required when called:    2
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_sprintf
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function ___lwmod
  2363  0BAE                     ___lwmod:	
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2367  0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0BB0  0829               	movf	___lwmod@divisor+1,w
  2370  0BB1  0428               	iorwf	___lwmod@divisor,w
  2371  0BB2  1903               	skipnz
  2372  0BB3  2BDD               	goto	l1620
  2373  0BB4  01AD               	clrf	___lwmod@counter
  2374  0BB5  0AAD               	incf	___lwmod@counter,f
  2375  0BB6                     l1610:	
  2376  0BB6  1BA9               	btfsc	___lwmod@divisor+1,7
  2377  0BB7  2BC4               	goto	l1612
  2378  0BB8  3001               	movlw	1
  2379  0BB9                     u2005:	
  2380  0BB9  1003               	clrc
  2381  0BBA  0DA8               	rlf	___lwmod@divisor,f
  2382  0BBB  0DA9               	rlf	___lwmod@divisor+1,f
  2383  0BBC  3EFF               	addlw	-1
  2384  0BBD  1D03               	skipz
  2385  0BBE  2BB9               	goto	u2005
  2386  0BBF  3001               	movlw	1
  2387  0BC0  00AC               	movwf	??___lwmod
  2388  0BC1  082C               	movf	??___lwmod,w
  2389  0BC2  07AD               	addwf	___lwmod@counter,f
  2390  0BC3  2BB6               	goto	l1610
  2391  0BC4                     l1612:	
  2392  0BC4  0829               	movf	___lwmod@divisor+1,w
  2393  0BC5  022B               	subwf	___lwmod@dividend+1,w
  2394  0BC6  1D03               	skipz
  2395  0BC7  2BCA               	goto	u2025
  2396  0BC8  0828               	movf	___lwmod@divisor,w
  2397  0BC9  022A               	subwf	___lwmod@dividend,w
  2398  0BCA                     u2025:	
  2399  0BCA  1C03               	skipc
  2400  0BCB  2BD2               	goto	l1616
  2401  0BCC  0828               	movf	___lwmod@divisor,w
  2402  0BCD  02AA               	subwf	___lwmod@dividend,f
  2403  0BCE  0829               	movf	___lwmod@divisor+1,w
  2404  0BCF  1C03               	skipc
  2405  0BD0  03AB               	decf	___lwmod@dividend+1,f
  2406  0BD1  02AB               	subwf	___lwmod@dividend+1,f
  2407  0BD2                     l1616:	
  2408  0BD2  3001               	movlw	1
  2409  0BD3                     u2035:	
  2410  0BD3  1003               	clrc
  2411  0BD4  0CA9               	rrf	___lwmod@divisor+1,f
  2412  0BD5  0CA8               	rrf	___lwmod@divisor,f
  2413  0BD6  3EFF               	addlw	-1
  2414  0BD7  1D03               	skipz
  2415  0BD8  2BD3               	goto	u2035
  2416  0BD9  3001               	movlw	1
  2417  0BDA  02AD               	subwf	___lwmod@counter,f
  2418  0BDB  1D03               	btfss	3,2
  2419  0BDC  2BC4               	goto	l1612
  2420  0BDD                     l1620:	
  2421  0BDD  082B               	movf	___lwmod@dividend+1,w
  2422  0BDE  01A9               	clrf	?___lwmod+1
  2423  0BDF  07A9               	addwf	?___lwmod+1,f
  2424  0BE0  082A               	movf	___lwmod@dividend,w
  2425  0BE1  01A8               	clrf	?___lwmod
  2426  0BE2  07A8               	addwf	?___lwmod,f
  2427  0BE3  0008               	return
  2428  0BE4                     __end_of___lwmod:	
  2429                           
  2430                           	psect	text8
  2431  0C54                     __ptext8:	
  2432 ;; *************** function ___lwdiv *****************
  2433 ;; Defined at:
  2434 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  divisor         2    0[BANK0 ] unsigned int 
  2437 ;;  dividend        2    2[BANK0 ] unsigned int 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  quotient        2    5[BANK0 ] unsigned int 
  2440 ;;  counter         1    7[BANK0 ] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  2    0[BANK0 ] unsigned int 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2450 ;;      Params:         0       4       0       0       0
  2451 ;;      Locals:         0       3       0       0       0
  2452 ;;      Temps:          0       1       0       0       0
  2453 ;;      Totals:         0       8       0       0       0
  2454 ;;Total ram usage:        8 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    2
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_sprintf
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function ___lwdiv
  2466  0C54                     ___lwdiv:	
  2467                           
  2468                           ;incstack = 0
  2469                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2470  0C54  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0C55  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0C56  01A5               	clrf	___lwdiv@quotient
  2473  0C57  01A6               	clrf	___lwdiv@quotient+1
  2474  0C58  0821               	movf	___lwdiv@divisor+1,w
  2475  0C59  0420               	iorwf	___lwdiv@divisor,w
  2476  0C5A  1903               	skipnz
  2477  0C5B  2C8D               	goto	l1598
  2478  0C5C  01A7               	clrf	___lwdiv@counter
  2479  0C5D  0AA7               	incf	___lwdiv@counter,f
  2480  0C5E                     l1586:	
  2481  0C5E  1BA1               	btfsc	___lwdiv@divisor+1,7
  2482  0C5F  2C6C               	goto	l1588
  2483  0C60  3001               	movlw	1
  2484  0C61                     u1935:	
  2485  0C61  1003               	clrc
  2486  0C62  0DA0               	rlf	___lwdiv@divisor,f
  2487  0C63  0DA1               	rlf	___lwdiv@divisor+1,f
  2488  0C64  3EFF               	addlw	-1
  2489  0C65  1D03               	skipz
  2490  0C66  2C61               	goto	u1935
  2491  0C67  3001               	movlw	1
  2492  0C68  00A4               	movwf	??___lwdiv
  2493  0C69  0824               	movf	??___lwdiv,w
  2494  0C6A  07A7               	addwf	___lwdiv@counter,f
  2495  0C6B  2C5E               	goto	l1586
  2496  0C6C                     l1588:	
  2497  0C6C  3001               	movlw	1
  2498  0C6D                     u1955:	
  2499  0C6D  1003               	clrc
  2500  0C6E  0DA5               	rlf	___lwdiv@quotient,f
  2501  0C6F  0DA6               	rlf	___lwdiv@quotient+1,f
  2502  0C70  3EFF               	addlw	-1
  2503  0C71  1D03               	skipz
  2504  0C72  2C6D               	goto	u1955
  2505  0C73  0821               	movf	___lwdiv@divisor+1,w
  2506  0C74  0223               	subwf	___lwdiv@dividend+1,w
  2507  0C75  1D03               	skipz
  2508  0C76  2C79               	goto	u1965
  2509  0C77  0820               	movf	___lwdiv@divisor,w
  2510  0C78  0222               	subwf	___lwdiv@dividend,w
  2511  0C79                     u1965:	
  2512  0C79  1C03               	skipc
  2513  0C7A  2C82               	goto	l1594
  2514  0C7B  0820               	movf	___lwdiv@divisor,w
  2515  0C7C  02A2               	subwf	___lwdiv@dividend,f
  2516  0C7D  0821               	movf	___lwdiv@divisor+1,w
  2517  0C7E  1C03               	skipc
  2518  0C7F  03A3               	decf	___lwdiv@dividend+1,f
  2519  0C80  02A3               	subwf	___lwdiv@dividend+1,f
  2520  0C81  1425               	bsf	___lwdiv@quotient,0
  2521  0C82                     l1594:	
  2522  0C82  3001               	movlw	1
  2523  0C83                     u1975:	
  2524  0C83  1003               	clrc
  2525  0C84  0CA1               	rrf	___lwdiv@divisor+1,f
  2526  0C85  0CA0               	rrf	___lwdiv@divisor,f
  2527  0C86  3EFF               	addlw	-1
  2528  0C87  1D03               	skipz
  2529  0C88  2C83               	goto	u1975
  2530  0C89  3001               	movlw	1
  2531  0C8A  02A7               	subwf	___lwdiv@counter,f
  2532  0C8B  1D03               	btfss	3,2
  2533  0C8C  2C6C               	goto	l1588
  2534  0C8D                     l1598:	
  2535  0C8D  0826               	movf	___lwdiv@quotient+1,w
  2536  0C8E  01A1               	clrf	?___lwdiv+1
  2537  0C8F  07A1               	addwf	?___lwdiv+1,f
  2538  0C90  0825               	movf	___lwdiv@quotient,w
  2539  0C91  01A0               	clrf	?___lwdiv
  2540  0C92  07A0               	addwf	?___lwdiv,f
  2541  0C93  0008               	return
  2542  0C94                     __end_of___lwdiv:	
  2543                           
  2544                           	psect	text9
  2545  0B83                     __ptext9:	
  2546 ;; *************** function _printToLCD *****************
  2547 ;; Defined at:
  2548 ;;		line 135 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;  str             2    2[BANK0 ] PTR const unsigned char 
  2551 ;;		 -> displayTime@time(20), displayPPM@strBuffer(50), displayRawADC@buffer(30), STR_2(21), 
  2552 ;;		 -> STR_1(17), 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;		None               void
  2557 ;; Registers used:
  2558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         0       2       0       0       0
  2565 ;;      Locals:         0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0
  2567 ;;      Totals:         0       2       0       0       0
  2568 ;;Total ram usage:        2 bytes
  2569 ;; Hardware stack levels used:    1
  2570 ;; Hardware stack levels required when called:    3
  2571 ;; This function calls:
  2572 ;;		_dataCTRL
  2573 ;;		_instCTRL
  2574 ;; This function is called by:
  2575 ;;		_updateDisplay
  2576 ;;		_displayPPM
  2577 ;;		_displayTime
  2578 ;;		_displayRawADC
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _printToLCD
  2584  0B83                     _printToLCD:	
  2585                           
  2586                           ;main.c: 137: instCTRL(0x0C);
  2587                           
  2588                           ;incstack = 0
  2589                           ; Regs used in _printToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2590  0B83  300C               	movlw	12
  2591  0B84  120A  158A  2284  120A  158A  	fcall	_instCTRL
  2592  0B89                     l1630:	
  2593                           ;main.c: 138: while (*str)
  2594                           
  2595  0B89  1283               	bcf	3,5	;RP0=0, select bank0
  2596  0B8A  1303               	bcf	3,6	;RP1=0, select bank0
  2597  0B8B  0823               	movf	printToLCD@str+1,w
  2598  0B8C  00FF               	movwf	127
  2599  0B8D  0822               	movf	printToLCD@str,w
  2600  0B8E  0084               	movwf	4
  2601  0B8F  120A  158A  2000  120A  158A  	fcall	stringtab
  2602  0B94  3800               	iorlw	0
  2603  0B95  1903               	btfsc	3,2
  2604  0B96  0008               	return
  2605                           
  2606                           ;main.c: 139: {
  2607                           ;main.c: 140: dataCTRL(*str);
  2608  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  2609  0B98  1303               	bcf	3,6	;RP1=0, select bank0
  2610  0B99  0823               	movf	printToLCD@str+1,w
  2611  0B9A  00FF               	movwf	127
  2612  0B9B  0822               	movf	printToLCD@str,w
  2613  0B9C  0084               	movwf	4
  2614  0B9D  120A  158A  2000  120A  158A  	fcall	stringtab
  2615  0BA2  120A  158A  2297  120A  158A  	fcall	_dataCTRL
  2616                           
  2617                           ;main.c: 141: str++;
  2618  0BA7  3001               	movlw	1
  2619  0BA8  1283               	bcf	3,5	;RP0=0, select bank0
  2620  0BA9  1303               	bcf	3,6	;RP1=0, select bank0
  2621  0BAA  07A2               	addwf	printToLCD@str,f
  2622  0BAB  1803               	skipnc
  2623  0BAC  0AA3               	incf	printToLCD@str+1,f
  2624  0BAD  2B89               	goto	l1630
  2625  0BAE                     __end_of_printToLCD:	
  2626                           
  2627                           	psect	text10
  2628  0A97                     __ptext10:	
  2629 ;; *************** function _dataCTRL *****************
  2630 ;; Defined at:
  2631 ;;		line 115 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  DAT             1    wreg     unsigned char 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;  DAT             1    1[BANK0 ] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;		None               void
  2638 ;; Registers used:
  2639 ;;		wreg
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2645 ;;      Params:         0       0       0       0       0
  2646 ;;      Locals:         0       1       0       0       0
  2647 ;;      Temps:          0       1       0       0       0
  2648 ;;      Totals:         0       2       0       0       0
  2649 ;;Total ram usage:        2 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    2
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_printToLCD
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function _dataCTRL
  2661  0A97                     _dataCTRL:	
  2662                           
  2663                           ;incstack = 0
  2664                           ; Regs used in _dataCTRL: [wreg]
  2665                           ;dataCTRL@DAT stored from wreg
  2666  0A97  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0A98  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0A99  00A1               	movwf	dataCTRL@DAT
  2669                           
  2670                           ;main.c: 117: PORTD = DAT;
  2671  0A9A  0821               	movf	dataCTRL@DAT,w
  2672  0A9B  0088               	movwf	8	;volatile
  2673                           
  2674                           ;main.c: 118: RC0 = 1;
  2675  0A9C  1407               	bsf	7,0	;volatile
  2676                           
  2677                           ;main.c: 119: RC1 = 0;
  2678  0A9D  1087               	bcf	7,1	;volatile
  2679                           
  2680                           ;main.c: 120: RC2 = 1;
  2681  0A9E  1507               	bsf	7,2	;volatile
  2682                           
  2683                           ;main.c: 121: _delay((unsigned long)((1)*(4000000/4000.0)));
  2684  0A9F  30F9               	movlw	249
  2685  0AA0  00A0               	movwf	??_dataCTRL
  2686  0AA1                     u2487:	
  2687  0AA1  0000               	nop
  2688  0AA2  0BA0               	decfsz	??_dataCTRL,f
  2689  0AA3  2AA1               	goto	u2487
  2690  0AA4  2AA5               	nop2	;nop
  2691  0AA5  0000               	nop
  2692                           
  2693                           ;main.c: 122: RC2 = 0;
  2694  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  2695  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  2696  0AA8  1107               	bcf	7,2	;volatile
  2697  0AA9  0008               	return
  2698  0AAA                     __end_of_dataCTRL:	
  2699                           
  2700                           	psect	text11
  2701  0DB1                     __ptext11:	
  2702 ;; *************** function ___fttol *****************
  2703 ;; Defined at:
  2704 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  f1              3   46[BANK0 ] float 
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;  lval            4   55[BANK0 ] unsigned long 
  2709 ;;  exp1            1   59[BANK0 ] unsigned char 
  2710 ;;  sign1           1   54[BANK0 ] unsigned char 
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  4   46[BANK0 ] long 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2720 ;;      Params:         0       4       0       0       0
  2721 ;;      Locals:         0       6       0       0       0
  2722 ;;      Temps:          0       4       0       0       0
  2723 ;;      Totals:         0      14       0       0       0
  2724 ;;Total ram usage:       14 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    2
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_displayPPM
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           
  2735                           ;psect for function ___fttol
  2736  0DB1                     ___fttol:	
  2737                           
  2738                           ;incstack = 0
  2739                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2740  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  2741  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  2742  0DB3  084E               	movf	___fttol@f1,w
  2743  0DB4  00D2               	movwf	??___fttol
  2744  0DB5  084F               	movf	___fttol@f1+1,w
  2745  0DB6  00D3               	movwf	??___fttol+1
  2746  0DB7  0850               	movf	___fttol@f1+2,w
  2747  0DB8  00D4               	movwf	??___fttol+2
  2748  0DB9  1003               	clrc
  2749  0DBA  0D53               	rlf	??___fttol+1,w
  2750  0DBB  0D54               	rlf	??___fttol+2,w
  2751  0DBC  00D5               	movwf	??___fttol+3
  2752  0DBD  0855               	movf	??___fttol+3,w
  2753  0DBE  00DB               	movwf	___fttol@exp1
  2754  0DBF  08DB               	movf	___fttol@exp1,f
  2755  0DC0  1D03               	skipz
  2756  0DC1  2DCB               	goto	l1786
  2757  0DC2  3000               	movlw	0
  2758  0DC3  00D1               	movwf	?___fttol+3
  2759  0DC4  3000               	movlw	0
  2760  0DC5  00D0               	movwf	?___fttol+2
  2761  0DC6  3000               	movlw	0
  2762  0DC7  00CF               	movwf	?___fttol+1
  2763  0DC8  3000               	movlw	0
  2764  0DC9  00CE               	movwf	?___fttol
  2765  0DCA  0008               	return
  2766  0DCB                     l1786:	
  2767  0DCB  084E               	movf	___fttol@f1,w
  2768  0DCC  00D2               	movwf	??___fttol
  2769  0DCD  084F               	movf	___fttol@f1+1,w
  2770  0DCE  00D3               	movwf	??___fttol+1
  2771  0DCF  0850               	movf	___fttol@f1+2,w
  2772  0DD0  00D4               	movwf	??___fttol+2
  2773  0DD1  3017               	movlw	23
  2774  0DD2                     u2285:	
  2775  0DD2  1003               	clrc
  2776  0DD3  0CD4               	rrf	??___fttol+2,f
  2777  0DD4  0CD3               	rrf	??___fttol+1,f
  2778  0DD5  0CD2               	rrf	??___fttol,f
  2779  0DD6  3EFF               	addlw	-1
  2780  0DD7  1D03               	skipz
  2781  0DD8  2DD2               	goto	u2285
  2782  0DD9  0852               	movf	??___fttol,w
  2783  0DDA  00D5               	movwf	??___fttol+3
  2784  0DDB  0855               	movf	??___fttol+3,w
  2785  0DDC  00D6               	movwf	___fttol@sign1
  2786  0DDD  17CF               	bsf	___fttol@f1+1,7
  2787  0DDE  30FF               	movlw	255
  2788  0DDF  05CE               	andwf	___fttol@f1,f
  2789  0DE0  30FF               	movlw	255
  2790  0DE1  05CF               	andwf	___fttol@f1+1,f
  2791  0DE2  3000               	movlw	0
  2792  0DE3  05D0               	andwf	___fttol@f1+2,f
  2793  0DE4  084E               	movf	___fttol@f1,w
  2794  0DE5  00D7               	movwf	___fttol@lval
  2795  0DE6  084F               	movf	___fttol@f1+1,w
  2796  0DE7  00D8               	movwf	___fttol@lval+1
  2797  0DE8  0850               	movf	___fttol@f1+2,w
  2798  0DE9  00D9               	movwf	___fttol@lval+2
  2799  0DEA  01DA               	clrf	___fttol@lval+3
  2800  0DEB  308E               	movlw	142
  2801  0DEC  02DB               	subwf	___fttol@exp1,f
  2802  0DED  1FDB               	btfss	___fttol@exp1,7
  2803  0DEE  2E0D               	goto	l1806
  2804  0DEF  085B               	movf	___fttol@exp1,w
  2805  0DF0  3A80               	xorlw	128
  2806  0DF1  3E8F               	addlw	143
  2807  0DF2  1803               	skipnc
  2808  0DF3  2DFD               	goto	l1804
  2809  0DF4  3000               	movlw	0
  2810  0DF5  00D1               	movwf	?___fttol+3
  2811  0DF6  3000               	movlw	0
  2812  0DF7  00D0               	movwf	?___fttol+2
  2813  0DF8  3000               	movlw	0
  2814  0DF9  00CF               	movwf	?___fttol+1
  2815  0DFA  3000               	movlw	0
  2816  0DFB  00CE               	movwf	?___fttol
  2817  0DFC  0008               	return
  2818  0DFD                     l1804:	
  2819  0DFD  3001               	movlw	1
  2820  0DFE                     u2315:	
  2821  0DFE  1003               	clrc
  2822  0DFF  0CDA               	rrf	___fttol@lval+3,f
  2823  0E00  0CD9               	rrf	___fttol@lval+2,f
  2824  0E01  0CD8               	rrf	___fttol@lval+1,f
  2825  0E02  0CD7               	rrf	___fttol@lval,f
  2826  0E03  3EFF               	addlw	-1
  2827  0E04  1D03               	skipz
  2828  0E05  2DFE               	goto	u2315
  2829  0E06  3001               	movlw	1
  2830  0E07  00D2               	movwf	??___fttol
  2831  0E08  0852               	movf	??___fttol,w
  2832  0E09  07DB               	addwf	___fttol@exp1,f
  2833  0E0A  1903               	btfsc	3,2
  2834  0E0B  2E28               	goto	l1816
  2835  0E0C  2DFD               	goto	l1804
  2836  0E0D                     l1806:	
  2837  0E0D  3018               	movlw	24
  2838  0E0E  025B               	subwf	___fttol@exp1,w
  2839  0E0F  1C03               	skipc
  2840  0E10  2E25               	goto	l1814
  2841  0E11  3000               	movlw	0
  2842  0E12  00D1               	movwf	?___fttol+3
  2843  0E13  3000               	movlw	0
  2844  0E14  00D0               	movwf	?___fttol+2
  2845  0E15  3000               	movlw	0
  2846  0E16  00CF               	movwf	?___fttol+1
  2847  0E17  3000               	movlw	0
  2848  0E18  00CE               	movwf	?___fttol
  2849  0E19  0008               	return
  2850  0E1A                     l1812:	
  2851  0E1A  3001               	movlw	1
  2852  0E1B  00D2               	movwf	??___fttol
  2853  0E1C                     u2345:	
  2854  0E1C  1003               	clrc
  2855  0E1D  0DD7               	rlf	___fttol@lval,f
  2856  0E1E  0DD8               	rlf	___fttol@lval+1,f
  2857  0E1F  0DD9               	rlf	___fttol@lval+2,f
  2858  0E20  0DDA               	rlf	___fttol@lval+3,f
  2859  0E21  0BD2               	decfsz	??___fttol,f
  2860  0E22  2E1C               	goto	u2345
  2861  0E23  3001               	movlw	1
  2862  0E24  02DB               	subwf	___fttol@exp1,f
  2863  0E25                     l1814:	
  2864  0E25  08DB               	movf	___fttol@exp1,f
  2865  0E26  1D03               	skipz
  2866  0E27  2E1A               	goto	l1812
  2867  0E28                     l1816:	
  2868  0E28  0856               	movf	___fttol@sign1,w
  2869  0E29  1903               	btfsc	3,2
  2870  0E2A  2E36               	goto	l1820
  2871  0E2B  09D7               	comf	___fttol@lval,f
  2872  0E2C  09D8               	comf	___fttol@lval+1,f
  2873  0E2D  09D9               	comf	___fttol@lval+2,f
  2874  0E2E  09DA               	comf	___fttol@lval+3,f
  2875  0E2F  0AD7               	incf	___fttol@lval,f
  2876  0E30  1903               	skipnz
  2877  0E31  0AD8               	incf	___fttol@lval+1,f
  2878  0E32  1903               	skipnz
  2879  0E33  0AD9               	incf	___fttol@lval+2,f
  2880  0E34  1903               	skipnz
  2881  0E35  0ADA               	incf	___fttol@lval+3,f
  2882  0E36                     l1820:	
  2883  0E36  085A               	movf	___fttol@lval+3,w
  2884  0E37  00D1               	movwf	?___fttol+3
  2885  0E38  0859               	movf	___fttol@lval+2,w
  2886  0E39  00D0               	movwf	?___fttol+2
  2887  0E3A  0858               	movf	___fttol@lval+1,w
  2888  0E3B  00CF               	movwf	?___fttol+1
  2889  0E3C  0857               	movf	___fttol@lval,w
  2890  0E3D  00CE               	movwf	?___fttol
  2891  0E3E  0008               	return
  2892  0E3F                     __end_of___fttol:	
  2893                           
  2894                           	psect	text12
  2895  0A6A                     __ptext12:	
  2896 ;; *************** function ___ftneg *****************
  2897 ;; Defined at:
  2898 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  2899 ;; Parameters:    Size  Location     Type
  2900 ;;  f1              3   14[BANK0 ] float 
  2901 ;; Auto vars:     Size  Location     Type
  2902 ;;		None
  2903 ;; Return value:  Size  Location     Type
  2904 ;;                  3   14[BANK0 ] float 
  2905 ;; Registers used:
  2906 ;;		wreg
  2907 ;; Tracked objects:
  2908 ;;		On entry : 0/0
  2909 ;;		On exit  : 0/0
  2910 ;;		Unchanged: 0/0
  2911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2912 ;;      Params:         0       3       0       0       0
  2913 ;;      Locals:         0       0       0       0       0
  2914 ;;      Temps:          0       0       0       0       0
  2915 ;;      Totals:         0       3       0       0       0
  2916 ;;Total ram usage:        3 bytes
  2917 ;; Hardware stack levels used:    1
  2918 ;; Hardware stack levels required when called:    2
  2919 ;; This function calls:
  2920 ;;		Nothing
  2921 ;; This function is called by:
  2922 ;;		_displayPPM
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function ___ftneg
  2928  0A6A                     ___ftneg:	
  2929                           
  2930                           ;incstack = 0
  2931                           ; Regs used in ___ftneg: [wreg]
  2932  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0A6C  0830               	movf	___ftneg@f1+2,w
  2935  0A6D  042F               	iorwf	___ftneg@f1+1,w
  2936  0A6E  042E               	iorwf	___ftneg@f1,w
  2937  0A6F  1903               	skipnz
  2938  0A70  0008               	return
  2939  0A71  3080               	movlw	128
  2940  0A72  06B0               	xorwf	___ftneg@f1+2,f
  2941  0A73  0008               	return
  2942  0A74                     __end_of___ftneg:	
  2943                           
  2944                           	psect	text13
  2945  07E2                     __ptext13:	
  2946 ;; *************** function _Read_ADC_MQ135 *****************
  2947 ;; Defined at:
  2948 ;;		line 147 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;		None
  2951 ;; Auto vars:     Size  Location     Type
  2952 ;;		None
  2953 ;; Return value:  Size  Location     Type
  2954 ;;                  2    0[BANK0 ] int 
  2955 ;; Registers used:
  2956 ;;		wreg, status,2, status,0
  2957 ;; Tracked objects:
  2958 ;;		On entry : 0/0
  2959 ;;		On exit  : 0/0
  2960 ;;		Unchanged: 0/0
  2961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2962 ;;      Params:         0       2       0       0       0
  2963 ;;      Locals:         0       0       0       0       0
  2964 ;;      Temps:          0       2       0       0       0
  2965 ;;      Totals:         0       4       0       0       0
  2966 ;;Total ram usage:        4 bytes
  2967 ;; Hardware stack levels used:    1
  2968 ;; Hardware stack levels required when called:    2
  2969 ;; This function calls:
  2970 ;;		Nothing
  2971 ;; This function is called by:
  2972 ;;		_displayPPM
  2973 ;;		_displayRawADC
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           
  2978                           ;psect for function _Read_ADC_MQ135
  2979  07E2                     _Read_ADC_MQ135:	
  2980                           
  2981                           ;main.c: 149: _delay((unsigned long)((100)*(4000000/4000.0)));
  2982                           
  2983                           ;incstack = 0
  2984                           ; Regs used in _Read_ADC_MQ135: [wreg+status,2+status,0]
  2985  07E2  3082               	movlw	130
  2986  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  2987  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  2988  07E5  00A3               	movwf	??_Read_ADC_MQ135+1
  2989  07E6  30DD               	movlw	221
  2990  07E7  00A2               	movwf	??_Read_ADC_MQ135
  2991  07E8                     u2497:	
  2992  07E8  0BA2               	decfsz	??_Read_ADC_MQ135,f
  2993  07E9  2FE8               	goto	u2497
  2994  07EA  0BA3               	decfsz	??_Read_ADC_MQ135+1,f
  2995  07EB  2FE8               	goto	u2497
  2996  07EC  2FED               	nop2
  2997                           
  2998                           ;main.c: 150: GO_DONE = 1;
  2999  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  3000  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  3001  07EF  151F               	bsf	31,2	;volatile
  3002  07F0                     l121:	
  3003                           ;main.c: 151: while (GO_DONE);
  3004                           
  3005  07F0  191F               	btfsc	31,2	;volatile
  3006  07F1  2FF0               	goto	l121
  3007                           
  3008                           ;main.c: 152: return ((ADRESH << 8) + ADRESL);
  3009  07F2  081E               	movf	30,w	;volatile
  3010  07F3  01A1               	clrf	?_Read_ADC_MQ135+1
  3011  07F4  07A1               	addwf	?_Read_ADC_MQ135+1,f
  3012  07F5  1683               	bsf	3,5	;RP0=1, select bank1
  3013  07F6  1303               	bcf	3,6	;RP1=0, select bank1
  3014  07F7  081E               	movf	30,w	;volatile
  3015  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  3016  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  3017  07FA  01A0               	clrf	?_Read_ADC_MQ135
  3018  07FB  07A0               	addwf	?_Read_ADC_MQ135,f
  3019  07FC  0008               	return
  3020  07FD                     __end_of_Read_ADC_MQ135:	
  3021                           
  3022                           	psect	text14
  3023  0034                     __ptext14:	
  3024 ;; *************** function _CalcMQ135 *****************
  3025 ;; Defined at:
  3026 ;;		line 155 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;  RAW_ADC         2   62[BANK0 ] int 
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;  ratio           3   36[BANK1 ] float 
  3031 ;;  co2             3   33[BANK1 ] float 
  3032 ;;  ratio5          3   30[BANK1 ] float 
  3033 ;;  ratio4          3   27[BANK1 ] float 
  3034 ;;  ratio3          3   24[BANK1 ] float 
  3035 ;;  ratio2          3   21[BANK1 ] float 
  3036 ;;  ratio6          3    3[BANK1 ] float 
  3037 ;;  voltage         3    0[BANK1 ] float 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  3   62[BANK0 ] float 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       3       0       0       0
  3048 ;;      Locals:         0       0      39       0       0
  3049 ;;      Temps:          0       0       0       0       0
  3050 ;;      Totals:         0       3      39       0       0
  3051 ;;Total ram usage:       42 bytes
  3052 ;; Hardware stack levels used:    1
  3053 ;; Hardware stack levels required when called:    4
  3054 ;; This function calls:
  3055 ;;		___awtoft
  3056 ;;		___ftadd
  3057 ;;		___ftdiv
  3058 ;;		___ftmul
  3059 ;; This function is called by:
  3060 ;;		_displayPPM
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           
  3065                           ;psect for function _CalcMQ135
  3066  0034                     _CalcMQ135:	
  3067                           
  3068                           ;main.c: 157: float voltage = (RAW_ADC * 5.0) / 1023.0;
  3069                           
  3070                           ;incstack = 0
  3071                           ; Regs used in _CalcMQ135: [wreg+status,2+status,0+pclath+cstack]
  3072  0034  30C0               	movlw	192
  3073  0035  1283               	bcf	3,5	;RP0=0, select bank0
  3074  0036  1303               	bcf	3,6	;RP1=0, select bank0
  3075  0037  00CE               	movwf	___ftdiv@f2
  3076  0038  307F               	movlw	127
  3077  0039  00CF               	movwf	___ftdiv@f2+1
  3078  003A  3044               	movlw	68
  3079  003B  00D0               	movwf	___ftdiv@f2+2
  3080  003C  3000               	movlw	0
  3081  003D  00BE               	movwf	___ftmul@f1
  3082  003E  30A0               	movlw	160
  3083  003F  00BF               	movwf	___ftmul@f1+1
  3084  0040  3040               	movlw	64
  3085  0041  00C0               	movwf	___ftmul@f1+2
  3086  0042  085F               	movf	CalcMQ135@RAW_ADC+1,w
  3087  0043  01A9               	clrf	___awtoft@c+1
  3088  0044  07A9               	addwf	___awtoft@c+1,f
  3089  0045  085E               	movf	CalcMQ135@RAW_ADC,w
  3090  0046  01A8               	clrf	___awtoft@c
  3091  0047  07A8               	addwf	___awtoft@c,f
  3092  0048  120A  158A  22EE  120A  118A  	fcall	___awtoft
  3093  004D  1283               	bcf	3,5	;RP0=0, select bank0
  3094  004E  1303               	bcf	3,6	;RP1=0, select bank0
  3095  004F  0828               	movf	?___awtoft,w
  3096  0050  00C1               	movwf	___ftmul@f2
  3097  0051  0829               	movf	?___awtoft+1,w
  3098  0052  00C2               	movwf	___ftmul@f2+1
  3099  0053  082A               	movf	?___awtoft+2,w
  3100  0054  00C3               	movwf	___ftmul@f2+2
  3101  0055  120A  118A  270F  120A  118A  	fcall	___ftmul
  3102  005A  1283               	bcf	3,5	;RP0=0, select bank0
  3103  005B  1303               	bcf	3,6	;RP1=0, select bank0
  3104  005C  083E               	movf	?___ftmul,w
  3105  005D  00D1               	movwf	___ftdiv@f1
  3106  005E  083F               	movf	?___ftmul+1,w
  3107  005F  00D2               	movwf	___ftdiv@f1+1
  3108  0060  0840               	movf	?___ftmul+2,w
  3109  0061  00D3               	movwf	___ftdiv@f1+2
  3110  0062  120A  158A  263F  120A  118A  	fcall	___ftdiv
  3111  0067  1283               	bcf	3,5	;RP0=0, select bank0
  3112  0068  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0069  084E               	movf	?___ftdiv,w
  3114  006A  1683               	bsf	3,5	;RP0=1, select bank1
  3115  006B  1303               	bcf	3,6	;RP1=0, select bank1
  3116  006C  00A0               	movwf	CalcMQ135@voltage^(0+128)
  3117  006D  1283               	bcf	3,5	;RP0=0, select bank0
  3118  006E  1303               	bcf	3,6	;RP1=0, select bank0
  3119  006F  084F               	movf	?___ftdiv+1,w
  3120  0070  1683               	bsf	3,5	;RP0=1, select bank1
  3121  0071  1303               	bcf	3,6	;RP1=0, select bank1
  3122  0072  00A1               	movwf	(CalcMQ135@voltage+1)^(0+128)
  3123  0073  1283               	bcf	3,5	;RP0=0, select bank0
  3124  0074  1303               	bcf	3,6	;RP1=0, select bank0
  3125  0075  0850               	movf	?___ftdiv+2,w
  3126  0076  1683               	bsf	3,5	;RP0=1, select bank1
  3127  0077  1303               	bcf	3,6	;RP1=0, select bank1
  3128  0078  00A2               	movwf	(CalcMQ135@voltage+2)^(0+128)
  3129                           
  3130                           ;main.c: 158: float ratio = voltage / 5.0;
  3131  0079  3000               	movlw	0
  3132  007A  1283               	bcf	3,5	;RP0=0, select bank0
  3133  007B  1303               	bcf	3,6	;RP1=0, select bank0
  3134  007C  00CE               	movwf	___ftdiv@f2
  3135  007D  30A0               	movlw	160
  3136  007E  00CF               	movwf	___ftdiv@f2+1
  3137  007F  3040               	movlw	64
  3138  0080  00D0               	movwf	___ftdiv@f2+2
  3139  0081  1683               	bsf	3,5	;RP0=1, select bank1
  3140  0082  1303               	bcf	3,6	;RP1=0, select bank1
  3141  0083  0820               	movf	CalcMQ135@voltage^(0+128),w
  3142  0084  1283               	bcf	3,5	;RP0=0, select bank0
  3143  0085  1303               	bcf	3,6	;RP1=0, select bank0
  3144  0086  00D1               	movwf	___ftdiv@f1
  3145  0087  1683               	bsf	3,5	;RP0=1, select bank1
  3146  0088  1303               	bcf	3,6	;RP1=0, select bank1
  3147  0089  0821               	movf	(CalcMQ135@voltage+1)^(0+128),w
  3148  008A  1283               	bcf	3,5	;RP0=0, select bank0
  3149  008B  1303               	bcf	3,6	;RP1=0, select bank0
  3150  008C  00D2               	movwf	___ftdiv@f1+1
  3151  008D  1683               	bsf	3,5	;RP0=1, select bank1
  3152  008E  1303               	bcf	3,6	;RP1=0, select bank1
  3153  008F  0822               	movf	(CalcMQ135@voltage+2)^(0+128),w
  3154  0090  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0091  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0092  00D3               	movwf	___ftdiv@f1+2
  3157  0093  120A  158A  263F  120A  118A  	fcall	___ftdiv
  3158  0098  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0099  1303               	bcf	3,6	;RP1=0, select bank0
  3160  009A  084E               	movf	?___ftdiv,w
  3161  009B  1683               	bsf	3,5	;RP0=1, select bank1
  3162  009C  1303               	bcf	3,6	;RP1=0, select bank1
  3163  009D  00C4               	movwf	CalcMQ135@ratio^(0+128)
  3164  009E  1283               	bcf	3,5	;RP0=0, select bank0
  3165  009F  1303               	bcf	3,6	;RP1=0, select bank0
  3166  00A0  084F               	movf	?___ftdiv+1,w
  3167  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  3168  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  3169  00A3  00C5               	movwf	(CalcMQ135@ratio+1)^(0+128)
  3170  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  3171  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  3172  00A6  0850               	movf	?___ftdiv+2,w
  3173  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  3174  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  3175  00A9  00C6               	movwf	(CalcMQ135@ratio+2)^(0+128)
  3176                           
  3177                           ;main.c: 161: float ratio2 = ratio * ratio;
  3178  00AA  0844               	movf	CalcMQ135@ratio^(0+128),w
  3179  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  3180  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  3181  00AD  00BE               	movwf	___ftmul@f1
  3182  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  3183  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  3184  00B0  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3185  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  3186  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  3187  00B3  00BF               	movwf	___ftmul@f1+1
  3188  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  3189  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  3190  00B6  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3191  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  3192  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  3193  00B9  00C0               	movwf	___ftmul@f1+2
  3194  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  3195  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  3196  00BC  0844               	movf	CalcMQ135@ratio^(0+128),w
  3197  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  3198  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  3199  00BF  00C1               	movwf	___ftmul@f2
  3200  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  3201  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  3202  00C2  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3203  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  3204  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  3205  00C5  00C2               	movwf	___ftmul@f2+1
  3206  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  3207  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  3208  00C8  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3209  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  3210  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  3211  00CB  00C3               	movwf	___ftmul@f2+2
  3212  00CC  120A  118A  270F  120A  118A  	fcall	___ftmul
  3213  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  3214  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  3215  00D3  083E               	movf	?___ftmul,w
  3216  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  3217  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  3218  00D6  00B5               	movwf	CalcMQ135@ratio2^(0+128)
  3219  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  3220  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  3221  00D9  083F               	movf	?___ftmul+1,w
  3222  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  3223  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  3224  00DC  00B6               	movwf	(CalcMQ135@ratio2+1)^(0+128)
  3225  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  3226  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  3227  00DF  0840               	movf	?___ftmul+2,w
  3228  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  3229  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  3230  00E2  00B7               	movwf	(CalcMQ135@ratio2+2)^(0+128)
  3231                           
  3232                           ;main.c: 162: float ratio3 = ratio2 * ratio;
  3233  00E3  0844               	movf	CalcMQ135@ratio^(0+128),w
  3234  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  3235  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  3236  00E6  00BE               	movwf	___ftmul@f1
  3237  00E7  1683               	bsf	3,5	;RP0=1, select bank1
  3238  00E8  1303               	bcf	3,6	;RP1=0, select bank1
  3239  00E9  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3240  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  3241  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  3242  00EC  00BF               	movwf	___ftmul@f1+1
  3243  00ED  1683               	bsf	3,5	;RP0=1, select bank1
  3244  00EE  1303               	bcf	3,6	;RP1=0, select bank1
  3245  00EF  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3246  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  3247  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  3248  00F2  00C0               	movwf	___ftmul@f1+2
  3249  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  3250  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  3251  00F5  0835               	movf	CalcMQ135@ratio2^(0+128),w
  3252  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  3253  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  3254  00F8  00C1               	movwf	___ftmul@f2
  3255  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  3256  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  3257  00FB  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  3258  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  3259  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  3260  00FE  00C2               	movwf	___ftmul@f2+1
  3261  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  3262  0100  1303               	bcf	3,6	;RP1=0, select bank1
  3263  0101  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  3264  0102  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0103  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0104  00C3               	movwf	___ftmul@f2+2
  3267  0105  120A  118A  270F  120A  118A  	fcall	___ftmul
  3268  010A  1283               	bcf	3,5	;RP0=0, select bank0
  3269  010B  1303               	bcf	3,6	;RP1=0, select bank0
  3270  010C  083E               	movf	?___ftmul,w
  3271  010D  1683               	bsf	3,5	;RP0=1, select bank1
  3272  010E  1303               	bcf	3,6	;RP1=0, select bank1
  3273  010F  00B8               	movwf	CalcMQ135@ratio3^(0+128)
  3274  0110  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0111  1303               	bcf	3,6	;RP1=0, select bank0
  3276  0112  083F               	movf	?___ftmul+1,w
  3277  0113  1683               	bsf	3,5	;RP0=1, select bank1
  3278  0114  1303               	bcf	3,6	;RP1=0, select bank1
  3279  0115  00B9               	movwf	(CalcMQ135@ratio3+1)^(0+128)
  3280  0116  1283               	bcf	3,5	;RP0=0, select bank0
  3281  0117  1303               	bcf	3,6	;RP1=0, select bank0
  3282  0118  0840               	movf	?___ftmul+2,w
  3283  0119  1683               	bsf	3,5	;RP0=1, select bank1
  3284  011A  1303               	bcf	3,6	;RP1=0, select bank1
  3285  011B  00BA               	movwf	(CalcMQ135@ratio3+2)^(0+128)
  3286                           
  3287                           ;main.c: 163: float ratio4 = ratio3 * ratio;
  3288  011C  0844               	movf	CalcMQ135@ratio^(0+128),w
  3289  011D  1283               	bcf	3,5	;RP0=0, select bank0
  3290  011E  1303               	bcf	3,6	;RP1=0, select bank0
  3291  011F  00BE               	movwf	___ftmul@f1
  3292  0120  1683               	bsf	3,5	;RP0=1, select bank1
  3293  0121  1303               	bcf	3,6	;RP1=0, select bank1
  3294  0122  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3295  0123  1283               	bcf	3,5	;RP0=0, select bank0
  3296  0124  1303               	bcf	3,6	;RP1=0, select bank0
  3297  0125  00BF               	movwf	___ftmul@f1+1
  3298  0126  1683               	bsf	3,5	;RP0=1, select bank1
  3299  0127  1303               	bcf	3,6	;RP1=0, select bank1
  3300  0128  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3301  0129  1283               	bcf	3,5	;RP0=0, select bank0
  3302  012A  1303               	bcf	3,6	;RP1=0, select bank0
  3303  012B  00C0               	movwf	___ftmul@f1+2
  3304  012C  1683               	bsf	3,5	;RP0=1, select bank1
  3305  012D  1303               	bcf	3,6	;RP1=0, select bank1
  3306  012E  0838               	movf	CalcMQ135@ratio3^(0+128),w
  3307  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0130  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0131  00C1               	movwf	___ftmul@f2
  3310  0132  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0133  1303               	bcf	3,6	;RP1=0, select bank1
  3312  0134  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  3313  0135  1283               	bcf	3,5	;RP0=0, select bank0
  3314  0136  1303               	bcf	3,6	;RP1=0, select bank0
  3315  0137  00C2               	movwf	___ftmul@f2+1
  3316  0138  1683               	bsf	3,5	;RP0=1, select bank1
  3317  0139  1303               	bcf	3,6	;RP1=0, select bank1
  3318  013A  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  3319  013B  1283               	bcf	3,5	;RP0=0, select bank0
  3320  013C  1303               	bcf	3,6	;RP1=0, select bank0
  3321  013D  00C3               	movwf	___ftmul@f2+2
  3322  013E  120A  118A  270F  120A  118A  	fcall	___ftmul
  3323  0143  1283               	bcf	3,5	;RP0=0, select bank0
  3324  0144  1303               	bcf	3,6	;RP1=0, select bank0
  3325  0145  083E               	movf	?___ftmul,w
  3326  0146  1683               	bsf	3,5	;RP0=1, select bank1
  3327  0147  1303               	bcf	3,6	;RP1=0, select bank1
  3328  0148  00BB               	movwf	CalcMQ135@ratio4^(0+128)
  3329  0149  1283               	bcf	3,5	;RP0=0, select bank0
  3330  014A  1303               	bcf	3,6	;RP1=0, select bank0
  3331  014B  083F               	movf	?___ftmul+1,w
  3332  014C  1683               	bsf	3,5	;RP0=1, select bank1
  3333  014D  1303               	bcf	3,6	;RP1=0, select bank1
  3334  014E  00BC               	movwf	(CalcMQ135@ratio4+1)^(0+128)
  3335  014F  1283               	bcf	3,5	;RP0=0, select bank0
  3336  0150  1303               	bcf	3,6	;RP1=0, select bank0
  3337  0151  0840               	movf	?___ftmul+2,w
  3338  0152  1683               	bsf	3,5	;RP0=1, select bank1
  3339  0153  1303               	bcf	3,6	;RP1=0, select bank1
  3340  0154  00BD               	movwf	(CalcMQ135@ratio4+2)^(0+128)
  3341                           
  3342                           ;main.c: 164: float ratio5 = ratio4 * ratio;
  3343  0155  0844               	movf	CalcMQ135@ratio^(0+128),w
  3344  0156  1283               	bcf	3,5	;RP0=0, select bank0
  3345  0157  1303               	bcf	3,6	;RP1=0, select bank0
  3346  0158  00BE               	movwf	___ftmul@f1
  3347  0159  1683               	bsf	3,5	;RP0=1, select bank1
  3348  015A  1303               	bcf	3,6	;RP1=0, select bank1
  3349  015B  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3350  015C  1283               	bcf	3,5	;RP0=0, select bank0
  3351  015D  1303               	bcf	3,6	;RP1=0, select bank0
  3352  015E  00BF               	movwf	___ftmul@f1+1
  3353  015F  1683               	bsf	3,5	;RP0=1, select bank1
  3354  0160  1303               	bcf	3,6	;RP1=0, select bank1
  3355  0161  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3356  0162  1283               	bcf	3,5	;RP0=0, select bank0
  3357  0163  1303               	bcf	3,6	;RP1=0, select bank0
  3358  0164  00C0               	movwf	___ftmul@f1+2
  3359  0165  1683               	bsf	3,5	;RP0=1, select bank1
  3360  0166  1303               	bcf	3,6	;RP1=0, select bank1
  3361  0167  083B               	movf	CalcMQ135@ratio4^(0+128),w
  3362  0168  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0169  1303               	bcf	3,6	;RP1=0, select bank0
  3364  016A  00C1               	movwf	___ftmul@f2
  3365  016B  1683               	bsf	3,5	;RP0=1, select bank1
  3366  016C  1303               	bcf	3,6	;RP1=0, select bank1
  3367  016D  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  3368  016E  1283               	bcf	3,5	;RP0=0, select bank0
  3369  016F  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0170  00C2               	movwf	___ftmul@f2+1
  3371  0171  1683               	bsf	3,5	;RP0=1, select bank1
  3372  0172  1303               	bcf	3,6	;RP1=0, select bank1
  3373  0173  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  3374  0174  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0175  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0176  00C3               	movwf	___ftmul@f2+2
  3377  0177  120A  118A  270F  120A  118A  	fcall	___ftmul
  3378  017C  1283               	bcf	3,5	;RP0=0, select bank0
  3379  017D  1303               	bcf	3,6	;RP1=0, select bank0
  3380  017E  083E               	movf	?___ftmul,w
  3381  017F  1683               	bsf	3,5	;RP0=1, select bank1
  3382  0180  1303               	bcf	3,6	;RP1=0, select bank1
  3383  0181  00BE               	movwf	CalcMQ135@ratio5^(0+128)
  3384  0182  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0183  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0184  083F               	movf	?___ftmul+1,w
  3387  0185  1683               	bsf	3,5	;RP0=1, select bank1
  3388  0186  1303               	bcf	3,6	;RP1=0, select bank1
  3389  0187  00BF               	movwf	(CalcMQ135@ratio5+1)^(0+128)
  3390  0188  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0189  1303               	bcf	3,6	;RP1=0, select bank0
  3392  018A  0840               	movf	?___ftmul+2,w
  3393  018B  1683               	bsf	3,5	;RP0=1, select bank1
  3394  018C  1303               	bcf	3,6	;RP1=0, select bank1
  3395  018D  00C0               	movwf	(CalcMQ135@ratio5+2)^(0+128)
  3396                           
  3397                           ;main.c: 165: float ratio6 = ratio5 * ratio;
  3398  018E  0844               	movf	CalcMQ135@ratio^(0+128),w
  3399  018F  1283               	bcf	3,5	;RP0=0, select bank0
  3400  0190  1303               	bcf	3,6	;RP1=0, select bank0
  3401  0191  00BE               	movwf	___ftmul@f1
  3402  0192  1683               	bsf	3,5	;RP0=1, select bank1
  3403  0193  1303               	bcf	3,6	;RP1=0, select bank1
  3404  0194  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3405  0195  1283               	bcf	3,5	;RP0=0, select bank0
  3406  0196  1303               	bcf	3,6	;RP1=0, select bank0
  3407  0197  00BF               	movwf	___ftmul@f1+1
  3408  0198  1683               	bsf	3,5	;RP0=1, select bank1
  3409  0199  1303               	bcf	3,6	;RP1=0, select bank1
  3410  019A  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3411  019B  1283               	bcf	3,5	;RP0=0, select bank0
  3412  019C  1303               	bcf	3,6	;RP1=0, select bank0
  3413  019D  00C0               	movwf	___ftmul@f1+2
  3414  019E  1683               	bsf	3,5	;RP0=1, select bank1
  3415  019F  1303               	bcf	3,6	;RP1=0, select bank1
  3416  01A0  083E               	movf	CalcMQ135@ratio5^(0+128),w
  3417  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  3418  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  3419  01A3  00C1               	movwf	___ftmul@f2
  3420  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  3421  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  3422  01A6  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  3423  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  3424  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  3425  01A9  00C2               	movwf	___ftmul@f2+1
  3426  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  3427  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  3428  01AC  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  3429  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  3430  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  3431  01AF  00C3               	movwf	___ftmul@f2+2
  3432  01B0  120A  118A  270F  120A  118A  	fcall	___ftmul
  3433  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  3434  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  3435  01B7  083E               	movf	?___ftmul,w
  3436  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  3437  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  3438  01BA  00A3               	movwf	CalcMQ135@ratio6^(0+128)
  3439  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  3440  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  3441  01BD  083F               	movf	?___ftmul+1,w
  3442  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  3443  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  3444  01C0  00A4               	movwf	(CalcMQ135@ratio6+1)^(0+128)
  3445  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  3446  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  3447  01C3  0840               	movf	?___ftmul+2,w
  3448  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  3449  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  3450  01C6  00A5               	movwf	(CalcMQ135@ratio6+2)^(0+128)
  3451                           
  3452                           ;main.c: 168: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  3453                           ;main.c: 169: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  3454  01C7  309C               	movlw	156
  3455  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  3456  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  3457  01CA  00BE               	movwf	___ftmul@f1
  3458  01CB  30B2               	movlw	178
  3459  01CC  00BF               	movwf	___ftmul@f1+1
  3460  01CD  303F               	movlw	63
  3461  01CE  00C0               	movwf	___ftmul@f1+2
  3462  01CF  1683               	bsf	3,5	;RP0=1, select bank1
  3463  01D0  1303               	bcf	3,6	;RP1=0, select bank1
  3464  01D1  0835               	movf	CalcMQ135@ratio2^(0+128),w
  3465  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  3466  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  3467  01D4  00C1               	movwf	___ftmul@f2
  3468  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  3469  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  3470  01D7  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  3471  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  3472  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  3473  01DA  00C2               	movwf	___ftmul@f2+1
  3474  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  3475  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  3476  01DD  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  3477  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  3478  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  3479  01E0  00C3               	movwf	___ftmul@f2+2
  3480  01E1  120A  118A  270F  120A  118A  	fcall	___ftmul
  3481  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  3482  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  3483  01E8  083E               	movf	?___ftmul,w
  3484  01E9  00B1               	movwf	___ftadd@f1
  3485  01EA  083F               	movf	?___ftmul+1,w
  3486  01EB  00B2               	movwf	___ftadd@f1+1
  3487  01EC  0840               	movf	?___ftmul+2,w
  3488  01ED  00B3               	movwf	___ftadd@f1+2
  3489  01EE  30A9               	movlw	169
  3490  01EF  00BE               	movwf	___ftmul@f1
  3491  01F0  30DE               	movlw	222
  3492  01F1  00BF               	movwf	___ftmul@f1+1
  3493  01F2  303C               	movlw	60
  3494  01F3  00C0               	movwf	___ftmul@f1+2
  3495  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  3496  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  3497  01F6  0844               	movf	CalcMQ135@ratio^(0+128),w
  3498  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3499  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3500  01F9  00C1               	movwf	___ftmul@f2
  3501  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  3502  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  3503  01FC  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3504  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  3505  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  3506  01FF  00C2               	movwf	___ftmul@f2+1
  3507  0200  1683               	bsf	3,5	;RP0=1, select bank1
  3508  0201  1303               	bcf	3,6	;RP1=0, select bank1
  3509  0202  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3510  0203  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0204  1303               	bcf	3,6	;RP1=0, select bank0
  3512  0205  00C3               	movwf	___ftmul@f2+2
  3513  0206  120A  118A  270F  120A  118A  	fcall	___ftmul
  3514  020B  1283               	bcf	3,5	;RP0=0, select bank0
  3515  020C  1303               	bcf	3,6	;RP1=0, select bank0
  3516  020D  083E               	movf	?___ftmul,w
  3517  020E  00B4               	movwf	___ftadd@f2
  3518  020F  083F               	movf	?___ftmul+1,w
  3519  0210  00B5               	movwf	___ftadd@f2+1
  3520  0211  0840               	movf	?___ftmul+2,w
  3521  0212  00B6               	movwf	___ftadd@f2+2
  3522  0213  120A  158A  26F7  120A  118A  	fcall	___ftadd
  3523  0218  1283               	bcf	3,5	;RP0=0, select bank0
  3524  0219  1303               	bcf	3,6	;RP1=0, select bank0
  3525  021A  0831               	movf	?___ftadd,w
  3526  021B  1683               	bsf	3,5	;RP0=1, select bank1
  3527  021C  1303               	bcf	3,6	;RP1=0, select bank1
  3528  021D  00A6               	movwf	_CalcMQ135$587^(0+128)
  3529  021E  1283               	bcf	3,5	;RP0=0, select bank0
  3530  021F  1303               	bcf	3,6	;RP1=0, select bank0
  3531  0220  0832               	movf	?___ftadd+1,w
  3532  0221  1683               	bsf	3,5	;RP0=1, select bank1
  3533  0222  1303               	bcf	3,6	;RP1=0, select bank1
  3534  0223  00A7               	movwf	(_CalcMQ135$587+1)^(0+128)
  3535  0224  1283               	bcf	3,5	;RP0=0, select bank0
  3536  0225  1303               	bcf	3,6	;RP1=0, select bank0
  3537  0226  0833               	movf	?___ftadd+2,w
  3538  0227  1683               	bsf	3,5	;RP0=1, select bank1
  3539  0228  1303               	bcf	3,6	;RP1=0, select bank1
  3540  0229  00A8               	movwf	(_CalcMQ135$587+2)^(0+128)
  3541                           
  3542                           ;main.c: 168: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  3543                           ;main.c: 169: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  3544  022A  30EE               	movlw	238
  3545  022B  1283               	bcf	3,5	;RP0=0, select bank0
  3546  022C  1303               	bcf	3,6	;RP1=0, select bank0
  3547  022D  00BE               	movwf	___ftmul@f1
  3548  022E  30EB               	movlw	235
  3549  022F  00BF               	movwf	___ftmul@f1+1
  3550  0230  303A               	movlw	58
  3551  0231  00C0               	movwf	___ftmul@f1+2
  3552  0232  1683               	bsf	3,5	;RP0=1, select bank1
  3553  0233  1303               	bcf	3,6	;RP1=0, select bank1
  3554  0234  0838               	movf	CalcMQ135@ratio3^(0+128),w
  3555  0235  1283               	bcf	3,5	;RP0=0, select bank0
  3556  0236  1303               	bcf	3,6	;RP1=0, select bank0
  3557  0237  00C1               	movwf	___ftmul@f2
  3558  0238  1683               	bsf	3,5	;RP0=1, select bank1
  3559  0239  1303               	bcf	3,6	;RP1=0, select bank1
  3560  023A  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  3561  023B  1283               	bcf	3,5	;RP0=0, select bank0
  3562  023C  1303               	bcf	3,6	;RP1=0, select bank0
  3563  023D  00C2               	movwf	___ftmul@f2+1
  3564  023E  1683               	bsf	3,5	;RP0=1, select bank1
  3565  023F  1303               	bcf	3,6	;RP1=0, select bank1
  3566  0240  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  3567  0241  1283               	bcf	3,5	;RP0=0, select bank0
  3568  0242  1303               	bcf	3,6	;RP1=0, select bank0
  3569  0243  00C3               	movwf	___ftmul@f2+2
  3570  0244  120A  118A  270F  120A  118A  	fcall	___ftmul
  3571  0249  1283               	bcf	3,5	;RP0=0, select bank0
  3572  024A  1303               	bcf	3,6	;RP1=0, select bank0
  3573  024B  083E               	movf	?___ftmul,w
  3574  024C  00B1               	movwf	___ftadd@f1
  3575  024D  083F               	movf	?___ftmul+1,w
  3576  024E  00B2               	movwf	___ftadd@f1+1
  3577  024F  0840               	movf	?___ftmul+2,w
  3578  0250  00B3               	movwf	___ftadd@f1+2
  3579  0251  1683               	bsf	3,5	;RP0=1, select bank1
  3580  0252  1303               	bcf	3,6	;RP1=0, select bank1
  3581  0253  0826               	movf	_CalcMQ135$587^(0+128),w
  3582  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3584  0256  00B4               	movwf	___ftadd@f2
  3585  0257  1683               	bsf	3,5	;RP0=1, select bank1
  3586  0258  1303               	bcf	3,6	;RP1=0, select bank1
  3587  0259  0827               	movf	(_CalcMQ135$587+1)^(0+128),w
  3588  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3589  025B  1303               	bcf	3,6	;RP1=0, select bank0
  3590  025C  00B5               	movwf	___ftadd@f2+1
  3591  025D  1683               	bsf	3,5	;RP0=1, select bank1
  3592  025E  1303               	bcf	3,6	;RP1=0, select bank1
  3593  025F  0828               	movf	(_CalcMQ135$587+2)^(0+128),w
  3594  0260  1283               	bcf	3,5	;RP0=0, select bank0
  3595  0261  1303               	bcf	3,6	;RP1=0, select bank0
  3596  0262  00B6               	movwf	___ftadd@f2+2
  3597  0263  120A  158A  26F7  120A  118A  	fcall	___ftadd
  3598  0268  1283               	bcf	3,5	;RP0=0, select bank0
  3599  0269  1303               	bcf	3,6	;RP1=0, select bank0
  3600  026A  0831               	movf	?___ftadd,w
  3601  026B  1683               	bsf	3,5	;RP0=1, select bank1
  3602  026C  1303               	bcf	3,6	;RP1=0, select bank1
  3603  026D  00A9               	movwf	_CalcMQ135$588^(0+128)
  3604  026E  1283               	bcf	3,5	;RP0=0, select bank0
  3605  026F  1303               	bcf	3,6	;RP1=0, select bank0
  3606  0270  0832               	movf	?___ftadd+1,w
  3607  0271  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0272  1303               	bcf	3,6	;RP1=0, select bank1
  3609  0273  00AA               	movwf	(_CalcMQ135$588+1)^(0+128)
  3610  0274  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0275  1303               	bcf	3,6	;RP1=0, select bank0
  3612  0276  0833               	movf	?___ftadd+2,w
  3613  0277  1683               	bsf	3,5	;RP0=1, select bank1
  3614  0278  1303               	bcf	3,6	;RP1=0, select bank1
  3615  0279  00AB               	movwf	(_CalcMQ135$588+2)^(0+128)
  3616                           
  3617                           ;main.c: 168: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  3618                           ;main.c: 169: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  3619  027A  3074               	movlw	116
  3620  027B  1283               	bcf	3,5	;RP0=0, select bank0
  3621  027C  1303               	bcf	3,6	;RP1=0, select bank0
  3622  027D  00BE               	movwf	___ftmul@f1
  3623  027E  305A               	movlw	90
  3624  027F  00BF               	movwf	___ftmul@f1+1
  3625  0280  30BB               	movlw	187
  3626  0281  00C0               	movwf	___ftmul@f1+2
  3627  0282  1683               	bsf	3,5	;RP0=1, select bank1
  3628  0283  1303               	bcf	3,6	;RP1=0, select bank1
  3629  0284  083B               	movf	CalcMQ135@ratio4^(0+128),w
  3630  0285  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0286  1303               	bcf	3,6	;RP1=0, select bank0
  3632  0287  00C1               	movwf	___ftmul@f2
  3633  0288  1683               	bsf	3,5	;RP0=1, select bank1
  3634  0289  1303               	bcf	3,6	;RP1=0, select bank1
  3635  028A  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  3636  028B  1283               	bcf	3,5	;RP0=0, select bank0
  3637  028C  1303               	bcf	3,6	;RP1=0, select bank0
  3638  028D  00C2               	movwf	___ftmul@f2+1
  3639  028E  1683               	bsf	3,5	;RP0=1, select bank1
  3640  028F  1303               	bcf	3,6	;RP1=0, select bank1
  3641  0290  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  3642  0291  1283               	bcf	3,5	;RP0=0, select bank0
  3643  0292  1303               	bcf	3,6	;RP1=0, select bank0
  3644  0293  00C3               	movwf	___ftmul@f2+2
  3645  0294  120A  118A  270F  120A  118A  	fcall	___ftmul
  3646  0299  1283               	bcf	3,5	;RP0=0, select bank0
  3647  029A  1303               	bcf	3,6	;RP1=0, select bank0
  3648  029B  083E               	movf	?___ftmul,w
  3649  029C  00B1               	movwf	___ftadd@f1
  3650  029D  083F               	movf	?___ftmul+1,w
  3651  029E  00B2               	movwf	___ftadd@f1+1
  3652  029F  0840               	movf	?___ftmul+2,w
  3653  02A0  00B3               	movwf	___ftadd@f1+2
  3654  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  3655  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  3656  02A3  0829               	movf	_CalcMQ135$588^(0+128),w
  3657  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  3658  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  3659  02A6  00B4               	movwf	___ftadd@f2
  3660  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  3661  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  3662  02A9  082A               	movf	(_CalcMQ135$588+1)^(0+128),w
  3663  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3664  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  3665  02AC  00B5               	movwf	___ftadd@f2+1
  3666  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  3667  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  3668  02AF  082B               	movf	(_CalcMQ135$588+2)^(0+128),w
  3669  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3670  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3671  02B2  00B6               	movwf	___ftadd@f2+2
  3672  02B3  120A  158A  26F7  120A  118A  	fcall	___ftadd
  3673  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  3674  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  3675  02BA  0831               	movf	?___ftadd,w
  3676  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  3677  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  3678  02BD  00AC               	movwf	_CalcMQ135$589^(0+128)
  3679  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  3680  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  3681  02C0  0832               	movf	?___ftadd+1,w
  3682  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  3683  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  3684  02C3  00AD               	movwf	(_CalcMQ135$589+1)^(0+128)
  3685  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  3686  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  3687  02C6  0833               	movf	?___ftadd+2,w
  3688  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  3689  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  3690  02C9  00AE               	movwf	(_CalcMQ135$589+2)^(0+128)
  3691                           
  3692                           ;main.c: 168: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  3693                           ;main.c: 169: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  3694  02CA  3010               	movlw	16
  3695  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  3696  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  3697  02CD  00BE               	movwf	___ftmul@f1
  3698  02CE  30FC               	movlw	252
  3699  02CF  00BF               	movwf	___ftmul@f1+1
  3700  02D0  30BA               	movlw	186
  3701  02D1  00C0               	movwf	___ftmul@f1+2
  3702  02D2  1683               	bsf	3,5	;RP0=1, select bank1
  3703  02D3  1303               	bcf	3,6	;RP1=0, select bank1
  3704  02D4  083E               	movf	CalcMQ135@ratio5^(0+128),w
  3705  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  3706  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  3707  02D7  00C1               	movwf	___ftmul@f2
  3708  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  3709  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  3710  02DA  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  3711  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  3712  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  3713  02DD  00C2               	movwf	___ftmul@f2+1
  3714  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  3715  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  3716  02E0  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  3717  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  3718  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  3719  02E3  00C3               	movwf	___ftmul@f2+2
  3720  02E4  120A  118A  270F  120A  118A  	fcall	___ftmul
  3721  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  3722  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  3723  02EB  083E               	movf	?___ftmul,w
  3724  02EC  00B1               	movwf	___ftadd@f1
  3725  02ED  083F               	movf	?___ftmul+1,w
  3726  02EE  00B2               	movwf	___ftadd@f1+1
  3727  02EF  0840               	movf	?___ftmul+2,w
  3728  02F0  00B3               	movwf	___ftadd@f1+2
  3729  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  3730  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  3731  02F3  082C               	movf	_CalcMQ135$589^(0+128),w
  3732  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  3733  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  3734  02F6  00B4               	movwf	___ftadd@f2
  3735  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  3736  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  3737  02F9  082D               	movf	(_CalcMQ135$589+1)^(0+128),w
  3738  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  3739  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  3740  02FC  00B5               	movwf	___ftadd@f2+1
  3741  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  3742  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  3743  02FF  082E               	movf	(_CalcMQ135$589+2)^(0+128),w
  3744  0300  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0301  1303               	bcf	3,6	;RP1=0, select bank0
  3746  0302  00B6               	movwf	___ftadd@f2+2
  3747  0303  120A  158A  26F7  120A  118A  	fcall	___ftadd
  3748  0308  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0309  1303               	bcf	3,6	;RP1=0, select bank0
  3750  030A  0831               	movf	?___ftadd,w
  3751  030B  1683               	bsf	3,5	;RP0=1, select bank1
  3752  030C  1303               	bcf	3,6	;RP1=0, select bank1
  3753  030D  00AF               	movwf	_CalcMQ135$590^(0+128)
  3754  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3755  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0310  0832               	movf	?___ftadd+1,w
  3757  0311  1683               	bsf	3,5	;RP0=1, select bank1
  3758  0312  1303               	bcf	3,6	;RP1=0, select bank1
  3759  0313  00B0               	movwf	(_CalcMQ135$590+1)^(0+128)
  3760  0314  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0315  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0316  0833               	movf	?___ftadd+2,w
  3763  0317  1683               	bsf	3,5	;RP0=1, select bank1
  3764  0318  1303               	bcf	3,6	;RP1=0, select bank1
  3765  0319  00B1               	movwf	(_CalcMQ135$590+2)^(0+128)
  3766                           
  3767                           ;main.c: 168: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  3768                           ;main.c: 169: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  3769  031A  30A8               	movlw	168
  3770  031B  1283               	bcf	3,5	;RP0=0, select bank0
  3771  031C  1303               	bcf	3,6	;RP1=0, select bank0
  3772  031D  00BE               	movwf	___ftmul@f1
  3773  031E  3090               	movlw	144
  3774  031F  00BF               	movwf	___ftmul@f1+1
  3775  0320  303F               	movlw	63
  3776  0321  00C0               	movwf	___ftmul@f1+2
  3777  0322  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0323  1303               	bcf	3,6	;RP1=0, select bank1
  3779  0324  0823               	movf	CalcMQ135@ratio6^(0+128),w
  3780  0325  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0326  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0327  00C1               	movwf	___ftmul@f2
  3783  0328  1683               	bsf	3,5	;RP0=1, select bank1
  3784  0329  1303               	bcf	3,6	;RP1=0, select bank1
  3785  032A  0824               	movf	(CalcMQ135@ratio6+1)^(0+128),w
  3786  032B  1283               	bcf	3,5	;RP0=0, select bank0
  3787  032C  1303               	bcf	3,6	;RP1=0, select bank0
  3788  032D  00C2               	movwf	___ftmul@f2+1
  3789  032E  1683               	bsf	3,5	;RP0=1, select bank1
  3790  032F  1303               	bcf	3,6	;RP1=0, select bank1
  3791  0330  0825               	movf	(CalcMQ135@ratio6+2)^(0+128),w
  3792  0331  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0332  1303               	bcf	3,6	;RP1=0, select bank0
  3794  0333  00C3               	movwf	___ftmul@f2+2
  3795  0334  120A  118A  270F  120A  118A  	fcall	___ftmul
  3796  0339  1283               	bcf	3,5	;RP0=0, select bank0
  3797  033A  1303               	bcf	3,6	;RP1=0, select bank0
  3798  033B  083E               	movf	?___ftmul,w
  3799  033C  00B1               	movwf	___ftadd@f1
  3800  033D  083F               	movf	?___ftmul+1,w
  3801  033E  00B2               	movwf	___ftadd@f1+1
  3802  033F  0840               	movf	?___ftmul+2,w
  3803  0340  00B3               	movwf	___ftadd@f1+2
  3804  0341  1683               	bsf	3,5	;RP0=1, select bank1
  3805  0342  1303               	bcf	3,6	;RP1=0, select bank1
  3806  0343  082F               	movf	_CalcMQ135$590^(0+128),w
  3807  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0346  00B4               	movwf	___ftadd@f2
  3810  0347  1683               	bsf	3,5	;RP0=1, select bank1
  3811  0348  1303               	bcf	3,6	;RP1=0, select bank1
  3812  0349  0830               	movf	(_CalcMQ135$590+1)^(0+128),w
  3813  034A  1283               	bcf	3,5	;RP0=0, select bank0
  3814  034B  1303               	bcf	3,6	;RP1=0, select bank0
  3815  034C  00B5               	movwf	___ftadd@f2+1
  3816  034D  1683               	bsf	3,5	;RP0=1, select bank1
  3817  034E  1303               	bcf	3,6	;RP1=0, select bank1
  3818  034F  0831               	movf	(_CalcMQ135$590+2)^(0+128),w
  3819  0350  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0351  1303               	bcf	3,6	;RP1=0, select bank0
  3821  0352  00B6               	movwf	___ftadd@f2+2
  3822  0353  120A  158A  26F7  120A  118A  	fcall	___ftadd
  3823  0358  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0359  1303               	bcf	3,6	;RP1=0, select bank0
  3825  035A  0831               	movf	?___ftadd,w
  3826  035B  1683               	bsf	3,5	;RP0=1, select bank1
  3827  035C  1303               	bcf	3,6	;RP1=0, select bank1
  3828  035D  00B2               	movwf	_CalcMQ135$591^(0+128)
  3829  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3830  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0360  0832               	movf	?___ftadd+1,w
  3832  0361  1683               	bsf	3,5	;RP0=1, select bank1
  3833  0362  1303               	bcf	3,6	;RP1=0, select bank1
  3834  0363  00B3               	movwf	(_CalcMQ135$591+1)^(0+128)
  3835  0364  1283               	bcf	3,5	;RP0=0, select bank0
  3836  0365  1303               	bcf	3,6	;RP1=0, select bank0
  3837  0366  0833               	movf	?___ftadd+2,w
  3838  0367  1683               	bsf	3,5	;RP0=1, select bank1
  3839  0368  1303               	bcf	3,6	;RP1=0, select bank1
  3840  0369  00B4               	movwf	(_CalcMQ135$591+2)^(0+128)
  3841                           
  3842                           ;main.c: 168: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  3843                           ;main.c: 169: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  3844  036A  3080               	movlw	128
  3845  036B  1283               	bcf	3,5	;RP0=0, select bank0
  3846  036C  1303               	bcf	3,6	;RP1=0, select bank0
  3847  036D  00B1               	movwf	___ftadd@f1
  3848  036E  30B7               	movlw	183
  3849  036F  00B2               	movwf	___ftadd@f1+1
  3850  0370  3039               	movlw	57
  3851  0371  00B3               	movwf	___ftadd@f1+2
  3852  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3853  0373  1303               	bcf	3,6	;RP1=0, select bank1
  3854  0374  0832               	movf	_CalcMQ135$591^(0+128),w
  3855  0375  1283               	bcf	3,5	;RP0=0, select bank0
  3856  0376  1303               	bcf	3,6	;RP1=0, select bank0
  3857  0377  00B4               	movwf	___ftadd@f2
  3858  0378  1683               	bsf	3,5	;RP0=1, select bank1
  3859  0379  1303               	bcf	3,6	;RP1=0, select bank1
  3860  037A  0833               	movf	(_CalcMQ135$591+1)^(0+128),w
  3861  037B  1283               	bcf	3,5	;RP0=0, select bank0
  3862  037C  1303               	bcf	3,6	;RP1=0, select bank0
  3863  037D  00B5               	movwf	___ftadd@f2+1
  3864  037E  1683               	bsf	3,5	;RP0=1, select bank1
  3865  037F  1303               	bcf	3,6	;RP1=0, select bank1
  3866  0380  0834               	movf	(_CalcMQ135$591+2)^(0+128),w
  3867  0381  1283               	bcf	3,5	;RP0=0, select bank0
  3868  0382  1303               	bcf	3,6	;RP1=0, select bank0
  3869  0383  00B6               	movwf	___ftadd@f2+2
  3870  0384  120A  158A  26F7  120A  118A  	fcall	___ftadd
  3871  0389  1283               	bcf	3,5	;RP0=0, select bank0
  3872  038A  1303               	bcf	3,6	;RP1=0, select bank0
  3873  038B  0831               	movf	?___ftadd,w
  3874  038C  1683               	bsf	3,5	;RP0=1, select bank1
  3875  038D  1303               	bcf	3,6	;RP1=0, select bank1
  3876  038E  00C1               	movwf	CalcMQ135@co2^(0+128)
  3877  038F  1283               	bcf	3,5	;RP0=0, select bank0
  3878  0390  1303               	bcf	3,6	;RP1=0, select bank0
  3879  0391  0832               	movf	?___ftadd+1,w
  3880  0392  1683               	bsf	3,5	;RP0=1, select bank1
  3881  0393  1303               	bcf	3,6	;RP1=0, select bank1
  3882  0394  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  3883  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3884  0396  1303               	bcf	3,6	;RP1=0, select bank0
  3885  0397  0833               	movf	?___ftadd+2,w
  3886  0398  1683               	bsf	3,5	;RP0=1, select bank1
  3887  0399  1303               	bcf	3,6	;RP1=0, select bank1
  3888  039A  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  3889                           
  3890                           ;main.c: 171: co2 *= 415.58;
  3891  039B  30CA               	movlw	202
  3892  039C  1283               	bcf	3,5	;RP0=0, select bank0
  3893  039D  1303               	bcf	3,6	;RP1=0, select bank0
  3894  039E  00BE               	movwf	___ftmul@f1
  3895  039F  30CF               	movlw	207
  3896  03A0  00BF               	movwf	___ftmul@f1+1
  3897  03A1  3043               	movlw	67
  3898  03A2  00C0               	movwf	___ftmul@f1+2
  3899  03A3  1683               	bsf	3,5	;RP0=1, select bank1
  3900  03A4  1303               	bcf	3,6	;RP1=0, select bank1
  3901  03A5  0841               	movf	CalcMQ135@co2^(0+128),w
  3902  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  3903  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  3904  03A8  00C1               	movwf	___ftmul@f2
  3905  03A9  1683               	bsf	3,5	;RP0=1, select bank1
  3906  03AA  1303               	bcf	3,6	;RP1=0, select bank1
  3907  03AB  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  3908  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3909  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3910  03AE  00C2               	movwf	___ftmul@f2+1
  3911  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  3912  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  3913  03B1  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  3914  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  3915  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  3916  03B4  00C3               	movwf	___ftmul@f2+2
  3917  03B5  120A  118A  270F   	fcall	___ftmul
  3918  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3919  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3920  03BA  083E               	movf	?___ftmul,w
  3921  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  3922  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  3923  03BD  00C1               	movwf	CalcMQ135@co2^(0+128)
  3924  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  3925  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  3926  03C0  083F               	movf	?___ftmul+1,w
  3927  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  3928  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  3929  03C3  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  3930  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  3931  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  3932  03C6  0840               	movf	?___ftmul+2,w
  3933  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  3934  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  3935  03C9  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  3936                           
  3937                           ;main.c: 172: return co2;
  3938  03CA  0841               	movf	CalcMQ135@co2^(0+128),w
  3939  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  3940  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  3941  03CD  00DE               	movwf	?_CalcMQ135
  3942  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  3943  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  3944  03D0  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  3945  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3946  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3947  03D3  00DF               	movwf	?_CalcMQ135+1
  3948  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3949  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3950  03D6  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  3951  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3952  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3953  03D9  00E0               	movwf	?_CalcMQ135+2
  3954  03DA  0008               	return
  3955  03DB                     __end_of_CalcMQ135:	
  3956                           
  3957                           	psect	text15
  3958  070F                     __ptext15:	
  3959 ;; *************** function ___ftmul *****************
  3960 ;; Defined at:
  3961 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3962 ;; Parameters:    Size  Location     Type
  3963 ;;  f1              3   30[BANK0 ] float 
  3964 ;;  f2              3   33[BANK0 ] float 
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;  f3_as_produc    3   41[BANK0 ] unsigned um
  3967 ;;  sign            1   45[BANK0 ] unsigned char 
  3968 ;;  cntr            1   44[BANK0 ] unsigned char 
  3969 ;;  exp             1   40[BANK0 ] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  3   30[BANK0 ] float 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0, pclath, cstack
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3979 ;;      Params:         0       6       0       0       0
  3980 ;;      Locals:         0       6       0       0       0
  3981 ;;      Temps:          0       4       0       0       0
  3982 ;;      Totals:         0      16       0       0       0
  3983 ;;Total ram usage:       16 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:    3
  3986 ;; This function calls:
  3987 ;;		___ftpack
  3988 ;; This function is called by:
  3989 ;;		_CalcMQ135
  3990 ;;		_displayPPM
  3991 ;; This function uses a non-reentrant model
  3992 ;;
  3993                           
  3994                           
  3995                           ;psect for function ___ftmul
  3996  070F                     ___ftmul:	
  3997                           
  3998                           ;incstack = 0
  3999                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4000  070F  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0710  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0711  083E               	movf	___ftmul@f1,w
  4003  0712  00C4               	movwf	??___ftmul
  4004  0713  083F               	movf	___ftmul@f1+1,w
  4005  0714  00C5               	movwf	??___ftmul+1
  4006  0715  0840               	movf	___ftmul@f1+2,w
  4007  0716  00C6               	movwf	??___ftmul+2
  4008  0717  1003               	clrc
  4009  0718  0D45               	rlf	??___ftmul+1,w
  4010  0719  0D46               	rlf	??___ftmul+2,w
  4011  071A  00C7               	movwf	??___ftmul+3
  4012  071B  0847               	movf	??___ftmul+3,w
  4013  071C  00C8               	movwf	___ftmul@exp
  4014  071D  08C8               	movf	___ftmul@exp,f
  4015  071E  1D03               	skipz
  4016  071F  2F27               	goto	l1532
  4017  0720  3000               	movlw	0
  4018  0721  00BE               	movwf	?___ftmul
  4019  0722  3000               	movlw	0
  4020  0723  00BF               	movwf	?___ftmul+1
  4021  0724  3000               	movlw	0
  4022  0725  00C0               	movwf	?___ftmul+2
  4023  0726  0008               	return
  4024  0727                     l1532:	
  4025  0727  0841               	movf	___ftmul@f2,w
  4026  0728  00C4               	movwf	??___ftmul
  4027  0729  0842               	movf	___ftmul@f2+1,w
  4028  072A  00C5               	movwf	??___ftmul+1
  4029  072B  0843               	movf	___ftmul@f2+2,w
  4030  072C  00C6               	movwf	??___ftmul+2
  4031  072D  1003               	clrc
  4032  072E  0D45               	rlf	??___ftmul+1,w
  4033  072F  0D46               	rlf	??___ftmul+2,w
  4034  0730  00C7               	movwf	??___ftmul+3
  4035  0731  0847               	movf	??___ftmul+3,w
  4036  0732  00CD               	movwf	___ftmul@sign
  4037  0733  08CD               	movf	___ftmul@sign,f
  4038  0734  1D03               	skipz
  4039  0735  2F3D               	goto	l1538
  4040  0736  3000               	movlw	0
  4041  0737  00BE               	movwf	?___ftmul
  4042  0738  3000               	movlw	0
  4043  0739  00BF               	movwf	?___ftmul+1
  4044  073A  3000               	movlw	0
  4045  073B  00C0               	movwf	?___ftmul+2
  4046  073C  0008               	return
  4047  073D                     l1538:	
  4048  073D  084D               	movf	___ftmul@sign,w
  4049  073E  3E7B               	addlw	123
  4050  073F  00C4               	movwf	??___ftmul
  4051  0740  0844               	movf	??___ftmul,w
  4052  0741  07C8               	addwf	___ftmul@exp,f
  4053  0742  083E               	movf	___ftmul@f1,w
  4054  0743  00C4               	movwf	??___ftmul
  4055  0744  083F               	movf	___ftmul@f1+1,w
  4056  0745  00C5               	movwf	??___ftmul+1
  4057  0746  0840               	movf	___ftmul@f1+2,w
  4058  0747  00C6               	movwf	??___ftmul+2
  4059  0748  3010               	movlw	16
  4060  0749                     u1805:	
  4061  0749  1003               	clrc
  4062  074A  0CC6               	rrf	??___ftmul+2,f
  4063  074B  0CC5               	rrf	??___ftmul+1,f
  4064  074C  0CC4               	rrf	??___ftmul,f
  4065  074D  3EFF               	addlw	-1
  4066  074E  1D03               	skipz
  4067  074F  2F49               	goto	u1805
  4068  0750  0844               	movf	??___ftmul,w
  4069  0751  00C7               	movwf	??___ftmul+3
  4070  0752  0847               	movf	??___ftmul+3,w
  4071  0753  00CD               	movwf	___ftmul@sign
  4072  0754  0841               	movf	___ftmul@f2,w
  4073  0755  00C4               	movwf	??___ftmul
  4074  0756  0842               	movf	___ftmul@f2+1,w
  4075  0757  00C5               	movwf	??___ftmul+1
  4076  0758  0843               	movf	___ftmul@f2+2,w
  4077  0759  00C6               	movwf	??___ftmul+2
  4078  075A  3010               	movlw	16
  4079  075B                     u1815:	
  4080  075B  1003               	clrc
  4081  075C  0CC6               	rrf	??___ftmul+2,f
  4082  075D  0CC5               	rrf	??___ftmul+1,f
  4083  075E  0CC4               	rrf	??___ftmul,f
  4084  075F  3EFF               	addlw	-1
  4085  0760  1D03               	skipz
  4086  0761  2F5B               	goto	u1815
  4087  0762  0844               	movf	??___ftmul,w
  4088  0763  00C7               	movwf	??___ftmul+3
  4089  0764  0847               	movf	??___ftmul+3,w
  4090  0765  06CD               	xorwf	___ftmul@sign,f
  4091  0766  3080               	movlw	128
  4092  0767  00C4               	movwf	??___ftmul
  4093  0768  0844               	movf	??___ftmul,w
  4094  0769  05CD               	andwf	___ftmul@sign,f
  4095  076A  17BF               	bsf	___ftmul@f1+1,7
  4096  076B  17C2               	bsf	___ftmul@f2+1,7
  4097  076C  30FF               	movlw	255
  4098  076D  05C1               	andwf	___ftmul@f2,f
  4099  076E  30FF               	movlw	255
  4100  076F  05C2               	andwf	___ftmul@f2+1,f
  4101  0770  3000               	movlw	0
  4102  0771  05C3               	andwf	___ftmul@f2+2,f
  4103  0772  3000               	movlw	0
  4104  0773  00C9               	movwf	___ftmul@f3_as_product
  4105  0774  3000               	movlw	0
  4106  0775  00CA               	movwf	___ftmul@f3_as_product+1
  4107  0776  3000               	movlw	0
  4108  0777  00CB               	movwf	___ftmul@f3_as_product+2
  4109  0778  3007               	movlw	7
  4110  0779  00C4               	movwf	??___ftmul
  4111  077A  0844               	movf	??___ftmul,w
  4112  077B  00CC               	movwf	___ftmul@cntr
  4113  077C                     l1550:	
  4114  077C  1C3E               	btfss	___ftmul@f1,0
  4115  077D  2F8C               	goto	l1554
  4116  077E  0841               	movf	___ftmul@f2,w
  4117  077F  07C9               	addwf	___ftmul@f3_as_product,f
  4118  0780  0842               	movf	___ftmul@f2+1,w
  4119  0781  1103               	clrz
  4120  0782  1803               	skipnc
  4121  0783  0A42               	incf	___ftmul@f2+1,w
  4122  0784  1D03               	btfss	3,2
  4123  0785  07CA               	addwf	___ftmul@f3_as_product+1,f
  4124  0786  0843               	movf	___ftmul@f2+2,w
  4125  0787  1103               	clrz
  4126  0788  1803               	skipnc
  4127  0789  0A43               	incf	___ftmul@f2+2,w
  4128  078A  1D03               	btfss	3,2
  4129  078B  07CB               	addwf	___ftmul@f3_as_product+2,f
  4130  078C                     l1554:	
  4131  078C  3001               	movlw	1
  4132  078D                     u1845:	
  4133  078D  1003               	clrc
  4134  078E  0CC0               	rrf	___ftmul@f1+2,f
  4135  078F  0CBF               	rrf	___ftmul@f1+1,f
  4136  0790  0CBE               	rrf	___ftmul@f1,f
  4137  0791  3EFF               	addlw	-1
  4138  0792  1D03               	skipz
  4139  0793  2F8D               	goto	u1845
  4140  0794  3001               	movlw	1
  4141  0795                     u1855:	
  4142  0795  1003               	clrc
  4143  0796  0DC1               	rlf	___ftmul@f2,f
  4144  0797  0DC2               	rlf	___ftmul@f2+1,f
  4145  0798  0DC3               	rlf	___ftmul@f2+2,f
  4146  0799  3EFF               	addlw	-1
  4147  079A  1D03               	skipz
  4148  079B  2F95               	goto	u1855
  4149  079C  3001               	movlw	1
  4150  079D  02CC               	subwf	___ftmul@cntr,f
  4151  079E  1D03               	btfss	3,2
  4152  079F  2F7C               	goto	l1550
  4153  07A0  3009               	movlw	9
  4154  07A1  00C4               	movwf	??___ftmul
  4155  07A2  0844               	movf	??___ftmul,w
  4156  07A3  00CC               	movwf	___ftmul@cntr
  4157  07A4                     l1562:	
  4158  07A4  1C3E               	btfss	___ftmul@f1,0
  4159  07A5  2FB4               	goto	l1566
  4160  07A6  0841               	movf	___ftmul@f2,w
  4161  07A7  07C9               	addwf	___ftmul@f3_as_product,f
  4162  07A8  0842               	movf	___ftmul@f2+1,w
  4163  07A9  1103               	clrz
  4164  07AA  1803               	skipnc
  4165  07AB  0A42               	incf	___ftmul@f2+1,w
  4166  07AC  1D03               	btfss	3,2
  4167  07AD  07CA               	addwf	___ftmul@f3_as_product+1,f
  4168  07AE  0843               	movf	___ftmul@f2+2,w
  4169  07AF  1103               	clrz
  4170  07B0  1803               	skipnc
  4171  07B1  0A43               	incf	___ftmul@f2+2,w
  4172  07B2  1D03               	btfss	3,2
  4173  07B3  07CB               	addwf	___ftmul@f3_as_product+2,f
  4174  07B4                     l1566:	
  4175  07B4  3001               	movlw	1
  4176  07B5                     u1895:	
  4177  07B5  1003               	clrc
  4178  07B6  0CC0               	rrf	___ftmul@f1+2,f
  4179  07B7  0CBF               	rrf	___ftmul@f1+1,f
  4180  07B8  0CBE               	rrf	___ftmul@f1,f
  4181  07B9  3EFF               	addlw	-1
  4182  07BA  1D03               	skipz
  4183  07BB  2FB5               	goto	u1895
  4184  07BC  3001               	movlw	1
  4185  07BD                     u1905:	
  4186  07BD  1003               	clrc
  4187  07BE  0CCB               	rrf	___ftmul@f3_as_product+2,f
  4188  07BF  0CCA               	rrf	___ftmul@f3_as_product+1,f
  4189  07C0  0CC9               	rrf	___ftmul@f3_as_product,f
  4190  07C1  3EFF               	addlw	-1
  4191  07C2  1D03               	skipz
  4192  07C3  2FBD               	goto	u1905
  4193  07C4  3001               	movlw	1
  4194  07C5  02CC               	subwf	___ftmul@cntr,f
  4195  07C6  1D03               	btfss	3,2
  4196  07C7  2FA4               	goto	l1562
  4197  07C8  0849               	movf	___ftmul@f3_as_product,w
  4198  07C9  00A0               	movwf	___ftpack@arg
  4199  07CA  084A               	movf	___ftmul@f3_as_product+1,w
  4200  07CB  00A1               	movwf	___ftpack@arg+1
  4201  07CC  084B               	movf	___ftmul@f3_as_product+2,w
  4202  07CD  00A2               	movwf	___ftpack@arg+2
  4203  07CE  0848               	movf	___ftmul@exp,w
  4204  07CF  00C4               	movwf	??___ftmul
  4205  07D0  0844               	movf	??___ftmul,w
  4206  07D1  00A3               	movwf	___ftpack@exp
  4207  07D2  084D               	movf	___ftmul@sign,w
  4208  07D3  00C5               	movwf	??___ftmul+1
  4209  07D4  0845               	movf	??___ftmul+1,w
  4210  07D5  00A4               	movwf	___ftpack@sign
  4211  07D6  120A  158A  2547   	fcall	___ftpack
  4212  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  4213  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  4214  07DB  0820               	movf	?___ftpack,w
  4215  07DC  00BE               	movwf	?___ftmul
  4216  07DD  0821               	movf	?___ftpack+1,w
  4217  07DE  00BF               	movwf	?___ftmul+1
  4218  07DF  0822               	movf	?___ftpack+2,w
  4219  07E0  00C0               	movwf	?___ftmul+2
  4220  07E1  0008               	return
  4221  07E2                     __end_of___ftmul:	
  4222                           
  4223                           	psect	text16
  4224  0E3F                     __ptext16:	
  4225 ;; *************** function ___ftdiv *****************
  4226 ;; Defined at:
  4227 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  f2              3   46[BANK0 ] float 
  4230 ;;  f1              3   49[BANK0 ] float 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  f3              3   57[BANK0 ] float 
  4233 ;;  sign            1   61[BANK0 ] unsigned char 
  4234 ;;  exp             1   60[BANK0 ] unsigned char 
  4235 ;;  cntr            1   56[BANK0 ] unsigned char 
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  3   46[BANK0 ] float 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0, pclath, cstack
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4245 ;;      Params:         0       6       0       0       0
  4246 ;;      Locals:         0       6       0       0       0
  4247 ;;      Temps:          0       4       0       0       0
  4248 ;;      Totals:         0      16       0       0       0
  4249 ;;Total ram usage:       16 bytes
  4250 ;; Hardware stack levels used:    1
  4251 ;; Hardware stack levels required when called:    3
  4252 ;; This function calls:
  4253 ;;		___ftpack
  4254 ;; This function is called by:
  4255 ;;		_CalcMQ135
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           
  4260                           ;psect for function ___ftdiv
  4261  0E3F                     ___ftdiv:	
  4262                           
  4263                           ;incstack = 0
  4264                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4265  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  4266  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  4267  0E41  0851               	movf	___ftdiv@f1,w
  4268  0E42  00D4               	movwf	??___ftdiv
  4269  0E43  0852               	movf	___ftdiv@f1+1,w
  4270  0E44  00D5               	movwf	??___ftdiv+1
  4271  0E45  0853               	movf	___ftdiv@f1+2,w
  4272  0E46  00D6               	movwf	??___ftdiv+2
  4273  0E47  1003               	clrc
  4274  0E48  0D55               	rlf	??___ftdiv+1,w
  4275  0E49  0D56               	rlf	??___ftdiv+2,w
  4276  0E4A  00D7               	movwf	??___ftdiv+3
  4277  0E4B  0857               	movf	??___ftdiv+3,w
  4278  0E4C  00DC               	movwf	___ftdiv@exp
  4279  0E4D  08DC               	movf	___ftdiv@exp,f
  4280  0E4E  1D03               	skipz
  4281  0E4F  2E57               	goto	l1490
  4282  0E50  3000               	movlw	0
  4283  0E51  00CE               	movwf	?___ftdiv
  4284  0E52  3000               	movlw	0
  4285  0E53  00CF               	movwf	?___ftdiv+1
  4286  0E54  3000               	movlw	0
  4287  0E55  00D0               	movwf	?___ftdiv+2
  4288  0E56  0008               	return
  4289  0E57                     l1490:	
  4290  0E57  084E               	movf	___ftdiv@f2,w
  4291  0E58  00D4               	movwf	??___ftdiv
  4292  0E59  084F               	movf	___ftdiv@f2+1,w
  4293  0E5A  00D5               	movwf	??___ftdiv+1
  4294  0E5B  0850               	movf	___ftdiv@f2+2,w
  4295  0E5C  00D6               	movwf	??___ftdiv+2
  4296  0E5D  1003               	clrc
  4297  0E5E  0D55               	rlf	??___ftdiv+1,w
  4298  0E5F  0D56               	rlf	??___ftdiv+2,w
  4299  0E60  00D7               	movwf	??___ftdiv+3
  4300  0E61  0857               	movf	??___ftdiv+3,w
  4301  0E62  00DD               	movwf	___ftdiv@sign
  4302  0E63  08DD               	movf	___ftdiv@sign,f
  4303  0E64  1D03               	skipz
  4304  0E65  2E6D               	goto	l1496
  4305  0E66  3000               	movlw	0
  4306  0E67  00CE               	movwf	?___ftdiv
  4307  0E68  3000               	movlw	0
  4308  0E69  00CF               	movwf	?___ftdiv+1
  4309  0E6A  3000               	movlw	0
  4310  0E6B  00D0               	movwf	?___ftdiv+2
  4311  0E6C  0008               	return
  4312  0E6D                     l1496:	
  4313  0E6D  3000               	movlw	0
  4314  0E6E  00D9               	movwf	___ftdiv@f3
  4315  0E6F  3000               	movlw	0
  4316  0E70  00DA               	movwf	___ftdiv@f3+1
  4317  0E71  3000               	movlw	0
  4318  0E72  00DB               	movwf	___ftdiv@f3+2
  4319  0E73  3089               	movlw	137
  4320  0E74  075D               	addwf	___ftdiv@sign,w
  4321  0E75  00D4               	movwf	??___ftdiv
  4322  0E76  0854               	movf	??___ftdiv,w
  4323  0E77  02DC               	subwf	___ftdiv@exp,f
  4324  0E78  0851               	movf	___ftdiv@f1,w
  4325  0E79  00D4               	movwf	??___ftdiv
  4326  0E7A  0852               	movf	___ftdiv@f1+1,w
  4327  0E7B  00D5               	movwf	??___ftdiv+1
  4328  0E7C  0853               	movf	___ftdiv@f1+2,w
  4329  0E7D  00D6               	movwf	??___ftdiv+2
  4330  0E7E  3010               	movlw	16
  4331  0E7F                     u1725:	
  4332  0E7F  1003               	clrc
  4333  0E80  0CD6               	rrf	??___ftdiv+2,f
  4334  0E81  0CD5               	rrf	??___ftdiv+1,f
  4335  0E82  0CD4               	rrf	??___ftdiv,f
  4336  0E83  3EFF               	addlw	-1
  4337  0E84  1D03               	skipz
  4338  0E85  2E7F               	goto	u1725
  4339  0E86  0854               	movf	??___ftdiv,w
  4340  0E87  00D7               	movwf	??___ftdiv+3
  4341  0E88  0857               	movf	??___ftdiv+3,w
  4342  0E89  00DD               	movwf	___ftdiv@sign
  4343  0E8A  084E               	movf	___ftdiv@f2,w
  4344  0E8B  00D4               	movwf	??___ftdiv
  4345  0E8C  084F               	movf	___ftdiv@f2+1,w
  4346  0E8D  00D5               	movwf	??___ftdiv+1
  4347  0E8E  0850               	movf	___ftdiv@f2+2,w
  4348  0E8F  00D6               	movwf	??___ftdiv+2
  4349  0E90  3010               	movlw	16
  4350  0E91                     u1735:	
  4351  0E91  1003               	clrc
  4352  0E92  0CD6               	rrf	??___ftdiv+2,f
  4353  0E93  0CD5               	rrf	??___ftdiv+1,f
  4354  0E94  0CD4               	rrf	??___ftdiv,f
  4355  0E95  3EFF               	addlw	-1
  4356  0E96  1D03               	skipz
  4357  0E97  2E91               	goto	u1735
  4358  0E98  0854               	movf	??___ftdiv,w
  4359  0E99  00D7               	movwf	??___ftdiv+3
  4360  0E9A  0857               	movf	??___ftdiv+3,w
  4361  0E9B  06DD               	xorwf	___ftdiv@sign,f
  4362  0E9C  3080               	movlw	128
  4363  0E9D  00D4               	movwf	??___ftdiv
  4364  0E9E  0854               	movf	??___ftdiv,w
  4365  0E9F  05DD               	andwf	___ftdiv@sign,f
  4366  0EA0  17D2               	bsf	___ftdiv@f1+1,7
  4367  0EA1  30FF               	movlw	255
  4368  0EA2  05D1               	andwf	___ftdiv@f1,f
  4369  0EA3  30FF               	movlw	255
  4370  0EA4  05D2               	andwf	___ftdiv@f1+1,f
  4371  0EA5  3000               	movlw	0
  4372  0EA6  05D3               	andwf	___ftdiv@f1+2,f
  4373  0EA7  17CF               	bsf	___ftdiv@f2+1,7
  4374  0EA8  30FF               	movlw	255
  4375  0EA9  05CE               	andwf	___ftdiv@f2,f
  4376  0EAA  30FF               	movlw	255
  4377  0EAB  05CF               	andwf	___ftdiv@f2+1,f
  4378  0EAC  3000               	movlw	0
  4379  0EAD  05D0               	andwf	___ftdiv@f2+2,f
  4380  0EAE  3018               	movlw	24
  4381  0EAF  00D4               	movwf	??___ftdiv
  4382  0EB0  0854               	movf	??___ftdiv,w
  4383  0EB1  00D8               	movwf	___ftdiv@cntr
  4384  0EB2                     l1510:	
  4385  0EB2  3001               	movlw	1
  4386  0EB3                     u1745:	
  4387  0EB3  1003               	clrc
  4388  0EB4  0DD9               	rlf	___ftdiv@f3,f
  4389  0EB5  0DDA               	rlf	___ftdiv@f3+1,f
  4390  0EB6  0DDB               	rlf	___ftdiv@f3+2,f
  4391  0EB7  3EFF               	addlw	-1
  4392  0EB8  1D03               	skipz
  4393  0EB9  2EB3               	goto	u1745
  4394  0EBA  0850               	movf	___ftdiv@f2+2,w
  4395  0EBB  0253               	subwf	___ftdiv@f1+2,w
  4396  0EBC  1D03               	skipz
  4397  0EBD  2EC4               	goto	u1755
  4398  0EBE  084F               	movf	___ftdiv@f2+1,w
  4399  0EBF  0252               	subwf	___ftdiv@f1+1,w
  4400  0EC0  1D03               	skipz
  4401  0EC1  2EC4               	goto	u1755
  4402  0EC2  084E               	movf	___ftdiv@f2,w
  4403  0EC3  0251               	subwf	___ftdiv@f1,w
  4404  0EC4                     u1755:	
  4405  0EC4  1C03               	skipc
  4406  0EC5  2ED1               	goto	l1518
  4407  0EC6  084E               	movf	___ftdiv@f2,w
  4408  0EC7  02D1               	subwf	___ftdiv@f1,f
  4409  0EC8  084F               	movf	___ftdiv@f2+1,w
  4410  0EC9  1C03               	skipc
  4411  0ECA  0F4F               	incfsz	___ftdiv@f2+1,w
  4412  0ECB  02D2               	subwf	___ftdiv@f1+1,f
  4413  0ECC  0850               	movf	___ftdiv@f2+2,w
  4414  0ECD  1C03               	skipc
  4415  0ECE  0A50               	incf	___ftdiv@f2+2,w
  4416  0ECF  02D3               	subwf	___ftdiv@f1+2,f
  4417  0ED0  1459               	bsf	___ftdiv@f3,0
  4418  0ED1                     l1518:	
  4419  0ED1  3001               	movlw	1
  4420  0ED2                     u1765:	
  4421  0ED2  1003               	clrc
  4422  0ED3  0DD1               	rlf	___ftdiv@f1,f
  4423  0ED4  0DD2               	rlf	___ftdiv@f1+1,f
  4424  0ED5  0DD3               	rlf	___ftdiv@f1+2,f
  4425  0ED6  3EFF               	addlw	-1
  4426  0ED7  1D03               	skipz
  4427  0ED8  2ED2               	goto	u1765
  4428  0ED9  3001               	movlw	1
  4429  0EDA  02D8               	subwf	___ftdiv@cntr,f
  4430  0EDB  1D03               	btfss	3,2
  4431  0EDC  2EB2               	goto	l1510
  4432  0EDD  0859               	movf	___ftdiv@f3,w
  4433  0EDE  00A0               	movwf	___ftpack@arg
  4434  0EDF  085A               	movf	___ftdiv@f3+1,w
  4435  0EE0  00A1               	movwf	___ftpack@arg+1
  4436  0EE1  085B               	movf	___ftdiv@f3+2,w
  4437  0EE2  00A2               	movwf	___ftpack@arg+2
  4438  0EE3  085C               	movf	___ftdiv@exp,w
  4439  0EE4  00D4               	movwf	??___ftdiv
  4440  0EE5  0854               	movf	??___ftdiv,w
  4441  0EE6  00A3               	movwf	___ftpack@exp
  4442  0EE7  085D               	movf	___ftdiv@sign,w
  4443  0EE8  00D5               	movwf	??___ftdiv+1
  4444  0EE9  0855               	movf	??___ftdiv+1,w
  4445  0EEA  00A4               	movwf	___ftpack@sign
  4446  0EEB  120A  158A  2547   	fcall	___ftpack
  4447  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  4448  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  4449  0EF0  0820               	movf	?___ftpack,w
  4450  0EF1  00CE               	movwf	?___ftdiv
  4451  0EF2  0821               	movf	?___ftpack+1,w
  4452  0EF3  00CF               	movwf	?___ftdiv+1
  4453  0EF4  0822               	movf	?___ftpack+2,w
  4454  0EF5  00D0               	movwf	?___ftdiv+2
  4455  0EF6  0008               	return
  4456  0EF7                     __end_of___ftdiv:	
  4457                           
  4458                           	psect	text17
  4459  0EF7                     __ptext17:	
  4460 ;; *************** function ___ftadd *****************
  4461 ;; Defined at:
  4462 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  f1              3   17[BANK0 ] float 
  4465 ;;  f2              3   20[BANK0 ] float 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  exp1            1   29[BANK0 ] unsigned char 
  4468 ;;  exp2            1   28[BANK0 ] unsigned char 
  4469 ;;  sign            1   27[BANK0 ] unsigned char 
  4470 ;; Return value:  Size  Location     Type
  4471 ;;                  3   17[BANK0 ] float 
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0, pclath, cstack
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4479 ;;      Params:         0       6       0       0       0
  4480 ;;      Locals:         0       3       0       0       0
  4481 ;;      Temps:          0       4       0       0       0
  4482 ;;      Totals:         0      13       0       0       0
  4483 ;;Total ram usage:       13 bytes
  4484 ;; Hardware stack levels used:    1
  4485 ;; Hardware stack levels required when called:    3
  4486 ;; This function calls:
  4487 ;;		___ftpack
  4488 ;; This function is called by:
  4489 ;;		_CalcMQ135
  4490 ;;		_displayPPM
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           
  4495                           ;psect for function ___ftadd
  4496  0EF7                     ___ftadd:	
  4497                           
  4498                           ;incstack = 0
  4499                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4500  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0EF9  0831               	movf	___ftadd@f1,w
  4503  0EFA  00B7               	movwf	??___ftadd
  4504  0EFB  0832               	movf	___ftadd@f1+1,w
  4505  0EFC  00B8               	movwf	??___ftadd+1
  4506  0EFD  0833               	movf	___ftadd@f1+2,w
  4507  0EFE  00B9               	movwf	??___ftadd+2
  4508  0EFF  1003               	clrc
  4509  0F00  0D38               	rlf	??___ftadd+1,w
  4510  0F01  0D39               	rlf	??___ftadd+2,w
  4511  0F02  00BA               	movwf	??___ftadd+3
  4512  0F03  083A               	movf	??___ftadd+3,w
  4513  0F04  00BD               	movwf	___ftadd@exp1
  4514  0F05  0834               	movf	___ftadd@f2,w
  4515  0F06  00B7               	movwf	??___ftadd
  4516  0F07  0835               	movf	___ftadd@f2+1,w
  4517  0F08  00B8               	movwf	??___ftadd+1
  4518  0F09  0836               	movf	___ftadd@f2+2,w
  4519  0F0A  00B9               	movwf	??___ftadd+2
  4520  0F0B  1003               	clrc
  4521  0F0C  0D38               	rlf	??___ftadd+1,w
  4522  0F0D  0D39               	rlf	??___ftadd+2,w
  4523  0F0E  00BA               	movwf	??___ftadd+3
  4524  0F0F  083A               	movf	??___ftadd+3,w
  4525  0F10  00BC               	movwf	___ftadd@exp2
  4526  0F11  083D               	movf	___ftadd@exp1,w
  4527  0F12  1903               	btfsc	3,2
  4528  0F13  2F20               	goto	l1420
  4529  0F14  083C               	movf	___ftadd@exp2,w
  4530  0F15  023D               	subwf	___ftadd@exp1,w
  4531  0F16  1803               	skipnc
  4532  0F17  2F27               	goto	l1424
  4533  0F18  033D               	decf	___ftadd@exp1,w
  4534  0F19  3AFF               	xorlw	255
  4535  0F1A  073C               	addwf	___ftadd@exp2,w
  4536  0F1B  00B7               	movwf	??___ftadd
  4537  0F1C  3019               	movlw	25
  4538  0F1D  0237               	subwf	??___ftadd,w
  4539  0F1E  1C03               	skipc
  4540  0F1F  2F27               	goto	l1424
  4541  0F20                     l1420:	
  4542  0F20  0834               	movf	___ftadd@f2,w
  4543  0F21  00B1               	movwf	?___ftadd
  4544  0F22  0835               	movf	___ftadd@f2+1,w
  4545  0F23  00B2               	movwf	?___ftadd+1
  4546  0F24  0836               	movf	___ftadd@f2+2,w
  4547  0F25  00B3               	movwf	?___ftadd+2
  4548  0F26  0008               	return
  4549  0F27                     l1424:	
  4550  0F27  083C               	movf	___ftadd@exp2,w
  4551  0F28  1903               	btfsc	3,2
  4552  0F29  0008               	return
  4553  0F2A  083D               	movf	___ftadd@exp1,w
  4554  0F2B  023C               	subwf	___ftadd@exp2,w
  4555  0F2C  1803               	skipnc
  4556  0F2D  2F36               	goto	l1430
  4557  0F2E  033C               	decf	___ftadd@exp2,w
  4558  0F2F  3AFF               	xorlw	255
  4559  0F30  073D               	addwf	___ftadd@exp1,w
  4560  0F31  00B7               	movwf	??___ftadd
  4561  0F32  3019               	movlw	25
  4562  0F33  0237               	subwf	??___ftadd,w
  4563  0F34  1803               	btfsc	3,0
  4564  0F35  0008               	return
  4565  0F36                     l1430:	
  4566  0F36  3006               	movlw	6
  4567  0F37  00B7               	movwf	??___ftadd
  4568  0F38  0837               	movf	??___ftadd,w
  4569  0F39  00BB               	movwf	___ftadd@sign
  4570  0F3A  1BB3               	btfsc	___ftadd@f1+2,7
  4571  0F3B  17BB               	bsf	___ftadd@sign,7
  4572  0F3C  1BB6               	btfsc	___ftadd@f2+2,7
  4573  0F3D  173B               	bsf	___ftadd@sign,6
  4574  0F3E  17B2               	bsf	___ftadd@f1+1,7
  4575  0F3F  30FF               	movlw	255
  4576  0F40  05B1               	andwf	___ftadd@f1,f
  4577  0F41  30FF               	movlw	255
  4578  0F42  05B2               	andwf	___ftadd@f1+1,f
  4579  0F43  3000               	movlw	0
  4580  0F44  05B3               	andwf	___ftadd@f1+2,f
  4581  0F45  17B5               	bsf	___ftadd@f2+1,7
  4582  0F46  30FF               	movlw	255
  4583  0F47  05B4               	andwf	___ftadd@f2,f
  4584  0F48  30FF               	movlw	255
  4585  0F49  05B5               	andwf	___ftadd@f2+1,f
  4586  0F4A  3000               	movlw	0
  4587  0F4B  05B6               	andwf	___ftadd@f2+2,f
  4588  0F4C  083C               	movf	___ftadd@exp2,w
  4589  0F4D  023D               	subwf	___ftadd@exp1,w
  4590  0F4E  1803               	skipnc
  4591  0F4F  2F76               	goto	l1452
  4592  0F50                     l1442:	
  4593  0F50  3001               	movlw	1
  4594  0F51                     u1555:	
  4595  0F51  1003               	clrc
  4596  0F52  0DB4               	rlf	___ftadd@f2,f
  4597  0F53  0DB5               	rlf	___ftadd@f2+1,f
  4598  0F54  0DB6               	rlf	___ftadd@f2+2,f
  4599  0F55  3EFF               	addlw	-1
  4600  0F56  1D03               	skipz
  4601  0F57  2F51               	goto	u1555
  4602  0F58  3001               	movlw	1
  4603  0F59  02BC               	subwf	___ftadd@exp2,f
  4604  0F5A  083C               	movf	___ftadd@exp2,w
  4605  0F5B  063D               	xorwf	___ftadd@exp1,w
  4606  0F5C  1903               	skipnz
  4607  0F5D  2F71               	goto	l1450
  4608  0F5E  3001               	movlw	1
  4609  0F5F  02BB               	subwf	___ftadd@sign,f
  4610  0F60  083B               	movf	___ftadd@sign,w
  4611  0F61  3907               	andlw	7
  4612  0F62  1903               	btfsc	3,2
  4613  0F63  2F71               	goto	l1450
  4614  0F64  2F50               	goto	l1442
  4615  0F65                     l1448:	
  4616  0F65  3001               	movlw	1
  4617  0F66                     u1585:	
  4618  0F66  1003               	clrc
  4619  0F67  0CB3               	rrf	___ftadd@f1+2,f
  4620  0F68  0CB2               	rrf	___ftadd@f1+1,f
  4621  0F69  0CB1               	rrf	___ftadd@f1,f
  4622  0F6A  3EFF               	addlw	-1
  4623  0F6B  1D03               	skipz
  4624  0F6C  2F66               	goto	u1585
  4625  0F6D  3001               	movlw	1
  4626  0F6E  00B7               	movwf	??___ftadd
  4627  0F6F  0837               	movf	??___ftadd,w
  4628  0F70  07BD               	addwf	___ftadd@exp1,f
  4629  0F71                     l1450:	
  4630  0F71  083D               	movf	___ftadd@exp1,w
  4631  0F72  063C               	xorwf	___ftadd@exp2,w
  4632  0F73  1903               	btfsc	3,2
  4633  0F74  2F9F               	goto	l472
  4634  0F75  2F65               	goto	l1448
  4635  0F76                     l1452:	
  4636  0F76  083D               	movf	___ftadd@exp1,w
  4637  0F77  023C               	subwf	___ftadd@exp2,w
  4638  0F78  1803               	skipnc
  4639  0F79  2F9F               	goto	l472
  4640  0F7A                     l1454:	
  4641  0F7A  3001               	movlw	1
  4642  0F7B                     u1615:	
  4643  0F7B  1003               	clrc
  4644  0F7C  0DB1               	rlf	___ftadd@f1,f
  4645  0F7D  0DB2               	rlf	___ftadd@f1+1,f
  4646  0F7E  0DB3               	rlf	___ftadd@f1+2,f
  4647  0F7F  3EFF               	addlw	-1
  4648  0F80  1D03               	skipz
  4649  0F81  2F7B               	goto	u1615
  4650  0F82  3001               	movlw	1
  4651  0F83  02BD               	subwf	___ftadd@exp1,f
  4652  0F84  083C               	movf	___ftadd@exp2,w
  4653  0F85  063D               	xorwf	___ftadd@exp1,w
  4654  0F86  1903               	skipnz
  4655  0F87  2F9B               	goto	l1462
  4656  0F88  3001               	movlw	1
  4657  0F89  02BB               	subwf	___ftadd@sign,f
  4658  0F8A  083B               	movf	___ftadd@sign,w
  4659  0F8B  3907               	andlw	7
  4660  0F8C  1903               	btfsc	3,2
  4661  0F8D  2F9B               	goto	l1462
  4662  0F8E  2F7A               	goto	l1454
  4663  0F8F                     l1460:	
  4664  0F8F  3001               	movlw	1
  4665  0F90                     u1645:	
  4666  0F90  1003               	clrc
  4667  0F91  0CB6               	rrf	___ftadd@f2+2,f
  4668  0F92  0CB5               	rrf	___ftadd@f2+1,f
  4669  0F93  0CB4               	rrf	___ftadd@f2,f
  4670  0F94  3EFF               	addlw	-1
  4671  0F95  1D03               	skipz
  4672  0F96  2F90               	goto	u1645
  4673  0F97  3001               	movlw	1
  4674  0F98  00B7               	movwf	??___ftadd
  4675  0F99  0837               	movf	??___ftadd,w
  4676  0F9A  07BC               	addwf	___ftadd@exp2,f
  4677  0F9B                     l1462:	
  4678  0F9B  083D               	movf	___ftadd@exp1,w
  4679  0F9C  063C               	xorwf	___ftadd@exp2,w
  4680  0F9D  1D03               	skipz
  4681  0F9E  2F8F               	goto	l1460
  4682  0F9F                     l472:	
  4683  0F9F  1FBB               	btfss	___ftadd@sign,7
  4684  0FA0  2FB1               	goto	l1466
  4685  0FA1  30FF               	movlw	255
  4686  0FA2  06B1               	xorwf	___ftadd@f1,f
  4687  0FA3  30FF               	movlw	255
  4688  0FA4  06B2               	xorwf	___ftadd@f1+1,f
  4689  0FA5  30FF               	movlw	255
  4690  0FA6  06B3               	xorwf	___ftadd@f1+2,f
  4691  0FA7  3001               	movlw	1
  4692  0FA8  07B1               	addwf	___ftadd@f1,f
  4693  0FA9  3000               	movlw	0
  4694  0FAA  1803               	skipnc
  4695  0FAB  3001               	movlw	1
  4696  0FAC  07B2               	addwf	___ftadd@f1+1,f
  4697  0FAD  3000               	movlw	0
  4698  0FAE  1803               	skipnc
  4699  0FAF  3001               	movlw	1
  4700  0FB0  07B3               	addwf	___ftadd@f1+2,f
  4701  0FB1                     l1466:	
  4702  0FB1  1F3B               	btfss	___ftadd@sign,6
  4703  0FB2  2FC3               	goto	l1470
  4704  0FB3  30FF               	movlw	255
  4705  0FB4  06B4               	xorwf	___ftadd@f2,f
  4706  0FB5  30FF               	movlw	255
  4707  0FB6  06B5               	xorwf	___ftadd@f2+1,f
  4708  0FB7  30FF               	movlw	255
  4709  0FB8  06B6               	xorwf	___ftadd@f2+2,f
  4710  0FB9  3001               	movlw	1
  4711  0FBA  07B4               	addwf	___ftadd@f2,f
  4712  0FBB  3000               	movlw	0
  4713  0FBC  1803               	skipnc
  4714  0FBD  3001               	movlw	1
  4715  0FBE  07B5               	addwf	___ftadd@f2+1,f
  4716  0FBF  3000               	movlw	0
  4717  0FC0  1803               	skipnc
  4718  0FC1  3001               	movlw	1
  4719  0FC2  07B6               	addwf	___ftadd@f2+2,f
  4720  0FC3                     l1470:	
  4721  0FC3  01BB               	clrf	___ftadd@sign
  4722  0FC4  0831               	movf	___ftadd@f1,w
  4723  0FC5  07B4               	addwf	___ftadd@f2,f
  4724  0FC6  0832               	movf	___ftadd@f1+1,w
  4725  0FC7  1103               	clrz
  4726  0FC8  1803               	skipnc
  4727  0FC9  0A32               	incf	___ftadd@f1+1,w
  4728  0FCA  1D03               	btfss	3,2
  4729  0FCB  07B5               	addwf	___ftadd@f2+1,f
  4730  0FCC  0833               	movf	___ftadd@f1+2,w
  4731  0FCD  1103               	clrz
  4732  0FCE  1803               	skipnc
  4733  0FCF  0A33               	incf	___ftadd@f1+2,w
  4734  0FD0  1D03               	btfss	3,2
  4735  0FD1  07B6               	addwf	___ftadd@f2+2,f
  4736  0FD2  1FB6               	btfss	___ftadd@f2+2,7
  4737  0FD3  2FE6               	goto	l1480
  4738  0FD4  30FF               	movlw	255
  4739  0FD5  06B4               	xorwf	___ftadd@f2,f
  4740  0FD6  30FF               	movlw	255
  4741  0FD7  06B5               	xorwf	___ftadd@f2+1,f
  4742  0FD8  30FF               	movlw	255
  4743  0FD9  06B6               	xorwf	___ftadd@f2+2,f
  4744  0FDA  3001               	movlw	1
  4745  0FDB  07B4               	addwf	___ftadd@f2,f
  4746  0FDC  3000               	movlw	0
  4747  0FDD  1803               	skipnc
  4748  0FDE  3001               	movlw	1
  4749  0FDF  07B5               	addwf	___ftadd@f2+1,f
  4750  0FE0  3000               	movlw	0
  4751  0FE1  1803               	skipnc
  4752  0FE2  3001               	movlw	1
  4753  0FE3  07B6               	addwf	___ftadd@f2+2,f
  4754  0FE4  01BB               	clrf	___ftadd@sign
  4755  0FE5  0ABB               	incf	___ftadd@sign,f
  4756  0FE6                     l1480:	
  4757  0FE6  0834               	movf	___ftadd@f2,w
  4758  0FE7  00A0               	movwf	___ftpack@arg
  4759  0FE8  0835               	movf	___ftadd@f2+1,w
  4760  0FE9  00A1               	movwf	___ftpack@arg+1
  4761  0FEA  0836               	movf	___ftadd@f2+2,w
  4762  0FEB  00A2               	movwf	___ftpack@arg+2
  4763  0FEC  083D               	movf	___ftadd@exp1,w
  4764  0FED  00B7               	movwf	??___ftadd
  4765  0FEE  0837               	movf	??___ftadd,w
  4766  0FEF  00A3               	movwf	___ftpack@exp
  4767  0FF0  083B               	movf	___ftadd@sign,w
  4768  0FF1  00B8               	movwf	??___ftadd+1
  4769  0FF2  0838               	movf	??___ftadd+1,w
  4770  0FF3  00A4               	movwf	___ftpack@sign
  4771  0FF4  120A  158A  2547   	fcall	___ftpack
  4772  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  4773  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  4774  0FF9  0820               	movf	?___ftpack,w
  4775  0FFA  00B1               	movwf	?___ftadd
  4776  0FFB  0821               	movf	?___ftpack+1,w
  4777  0FFC  00B2               	movwf	?___ftadd+1
  4778  0FFD  0822               	movf	?___ftpack+2,w
  4779  0FFE  00B3               	movwf	?___ftadd+2
  4780  0FFF  0008               	return
  4781  1000                     __end_of___ftadd:	
  4782                           
  4783                           	psect	text18
  4784  0AEE                     __ptext18:	
  4785 ;; *************** function ___awtoft *****************
  4786 ;; Defined at:
  4787 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  c               2    8[BANK0 ] int 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;  sign            1   13[BANK0 ] unsigned char 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  3    8[BANK0 ] float 
  4794 ;; Registers used:
  4795 ;;		wreg, status,2, status,0, pclath, cstack
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4801 ;;      Params:         0       3       0       0       0
  4802 ;;      Locals:         0       1       0       0       0
  4803 ;;      Temps:          0       2       0       0       0
  4804 ;;      Totals:         0       6       0       0       0
  4805 ;;Total ram usage:        6 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    3
  4808 ;; This function calls:
  4809 ;;		___ftpack
  4810 ;; This function is called by:
  4811 ;;		_CalcMQ135
  4812 ;;		_displayPPM
  4813 ;; This function uses a non-reentrant model
  4814 ;;
  4815                           
  4816                           
  4817                           ;psect for function ___awtoft
  4818  0AEE                     ___awtoft:	
  4819                           
  4820                           ;incstack = 0
  4821                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4822  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  4823  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  4824  0AF0  01AD               	clrf	___awtoft@sign
  4825  0AF1  1FA9               	btfss	___awtoft@c+1,7
  4826  0AF2  2AFA               	goto	l1408
  4827  0AF3  09A8               	comf	___awtoft@c,f
  4828  0AF4  09A9               	comf	___awtoft@c+1,f
  4829  0AF5  0AA8               	incf	___awtoft@c,f
  4830  0AF6  1903               	skipnz
  4831  0AF7  0AA9               	incf	___awtoft@c+1,f
  4832  0AF8  01AD               	clrf	___awtoft@sign
  4833  0AF9  0AAD               	incf	___awtoft@sign,f
  4834  0AFA                     l1408:	
  4835  0AFA  0828               	movf	___awtoft@c,w
  4836  0AFB  00A0               	movwf	___ftpack@arg
  4837  0AFC  0829               	movf	___awtoft@c+1,w
  4838  0AFD  00A1               	movwf	___ftpack@arg+1
  4839  0AFE  01A2               	clrf	___ftpack@arg+2
  4840  0AFF  308E               	movlw	142
  4841  0B00  00AB               	movwf	??___awtoft
  4842  0B01  082B               	movf	??___awtoft,w
  4843  0B02  00A3               	movwf	___ftpack@exp
  4844  0B03  082D               	movf	___awtoft@sign,w
  4845  0B04  00AC               	movwf	??___awtoft+1
  4846  0B05  082C               	movf	??___awtoft+1,w
  4847  0B06  00A4               	movwf	___ftpack@sign
  4848  0B07  120A  158A  2547   	fcall	___ftpack
  4849  0B0A  1283               	bcf	3,5	;RP0=0, select bank0
  4850  0B0B  1303               	bcf	3,6	;RP1=0, select bank0
  4851  0B0C  0820               	movf	?___ftpack,w
  4852  0B0D  00A8               	movwf	?___awtoft
  4853  0B0E  0821               	movf	?___ftpack+1,w
  4854  0B0F  00A9               	movwf	?___awtoft+1
  4855  0B10  0822               	movf	?___ftpack+2,w
  4856  0B11  00AA               	movwf	?___awtoft+2
  4857  0B12  0008               	return
  4858  0B13                     __end_of___awtoft:	
  4859                           
  4860                           	psect	text19
  4861  0D47                     __ptext19:	
  4862 ;; *************** function ___ftpack *****************
  4863 ;; Defined at:
  4864 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  arg             3    0[BANK0 ] unsigned um
  4867 ;;  exp             1    3[BANK0 ] unsigned char 
  4868 ;;  sign            1    4[BANK0 ] unsigned char 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;		None
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  3    0[BANK0 ] float 
  4873 ;; Registers used:
  4874 ;;		wreg, status,2, status,0
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4880 ;;      Params:         0       5       0       0       0
  4881 ;;      Locals:         0       0       0       0       0
  4882 ;;      Temps:          0       3       0       0       0
  4883 ;;      Totals:         0       8       0       0       0
  4884 ;;Total ram usage:        8 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    2
  4887 ;; This function calls:
  4888 ;;		Nothing
  4889 ;; This function is called by:
  4890 ;;		___awtoft
  4891 ;;		___ftadd
  4892 ;;		___ftdiv
  4893 ;;		___ftmul
  4894 ;; This function uses a non-reentrant model
  4895 ;;
  4896                           
  4897                           
  4898                           ;psect for function ___ftpack
  4899  0D47                     ___ftpack:	
  4900                           
  4901                           ;incstack = 0
  4902                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4903  0D47  1283               	bcf	3,5	;RP0=0, select bank0
  4904  0D48  1303               	bcf	3,6	;RP1=0, select bank0
  4905  0D49  0823               	movf	___ftpack@exp,w
  4906  0D4A  1903               	btfsc	3,2
  4907  0D4B  2D51               	goto	l1330
  4908  0D4C  0822               	movf	___ftpack@arg+2,w
  4909  0D4D  0421               	iorwf	___ftpack@arg+1,w
  4910  0D4E  0420               	iorwf	___ftpack@arg,w
  4911  0D4F  1D03               	skipz
  4912  0D50  2D64               	goto	l1336
  4913  0D51                     l1330:	
  4914  0D51  3000               	movlw	0
  4915  0D52  00A0               	movwf	?___ftpack
  4916  0D53  3000               	movlw	0
  4917  0D54  00A1               	movwf	?___ftpack+1
  4918  0D55  3000               	movlw	0
  4919  0D56  00A2               	movwf	?___ftpack+2
  4920  0D57  0008               	return
  4921  0D58                     l1334:	
  4922  0D58  3001               	movlw	1
  4923  0D59  00A5               	movwf	??___ftpack
  4924  0D5A  0825               	movf	??___ftpack,w
  4925  0D5B  07A3               	addwf	___ftpack@exp,f
  4926  0D5C  3001               	movlw	1
  4927  0D5D                     u1305:	
  4928  0D5D  1003               	clrc
  4929  0D5E  0CA2               	rrf	___ftpack@arg+2,f
  4930  0D5F  0CA1               	rrf	___ftpack@arg+1,f
  4931  0D60  0CA0               	rrf	___ftpack@arg,f
  4932  0D61  3EFF               	addlw	-1
  4933  0D62  1D03               	skipz
  4934  0D63  2D5D               	goto	u1305
  4935  0D64                     l1336:	
  4936  0D64  30FE               	movlw	254
  4937  0D65  0522               	andwf	___ftpack@arg+2,w
  4938  0D66  1903               	btfsc	3,2
  4939  0D67  2D7F               	goto	l443
  4940  0D68  2D58               	goto	l1334
  4941  0D69                     l1338:	
  4942  0D69  3001               	movlw	1
  4943  0D6A  00A5               	movwf	??___ftpack
  4944  0D6B  0825               	movf	??___ftpack,w
  4945  0D6C  07A3               	addwf	___ftpack@exp,f
  4946  0D6D  3001               	movlw	1
  4947  0D6E  07A0               	addwf	___ftpack@arg,f
  4948  0D6F  3000               	movlw	0
  4949  0D70  1803               	skipnc
  4950  0D71  3001               	movlw	1
  4951  0D72  07A1               	addwf	___ftpack@arg+1,f
  4952  0D73  3000               	movlw	0
  4953  0D74  1803               	skipnc
  4954  0D75  3001               	movlw	1
  4955  0D76  07A2               	addwf	___ftpack@arg+2,f
  4956  0D77  3001               	movlw	1
  4957  0D78                     u1325:	
  4958  0D78  1003               	clrc
  4959  0D79  0CA2               	rrf	___ftpack@arg+2,f
  4960  0D7A  0CA1               	rrf	___ftpack@arg+1,f
  4961  0D7B  0CA0               	rrf	___ftpack@arg,f
  4962  0D7C  3EFF               	addlw	-1
  4963  0D7D  1D03               	skipz
  4964  0D7E  2D78               	goto	u1325
  4965  0D7F                     l443:	
  4966  0D7F  30FF               	movlw	255
  4967  0D80  0522               	andwf	___ftpack@arg+2,w
  4968  0D81  1903               	btfsc	3,2
  4969  0D82  2D8E               	goto	l1346
  4970  0D83  2D69               	goto	l1338
  4971  0D84                     l1344:	
  4972  0D84  3001               	movlw	1
  4973  0D85  02A3               	subwf	___ftpack@exp,f
  4974  0D86  3001               	movlw	1
  4975  0D87                     u1345:	
  4976  0D87  1003               	clrc
  4977  0D88  0DA0               	rlf	___ftpack@arg,f
  4978  0D89  0DA1               	rlf	___ftpack@arg+1,f
  4979  0D8A  0DA2               	rlf	___ftpack@arg+2,f
  4980  0D8B  3EFF               	addlw	-1
  4981  0D8C  1D03               	skipz
  4982  0D8D  2D87               	goto	u1345
  4983  0D8E                     l1346:	
  4984  0D8E  1FA1               	btfss	___ftpack@arg+1,7
  4985  0D8F  2D84               	goto	l1344
  4986  0D90  1823               	btfsc	___ftpack@exp,0
  4987  0D91  2D98               	goto	l449
  4988  0D92  30FF               	movlw	255
  4989  0D93  05A0               	andwf	___ftpack@arg,f
  4990  0D94  307F               	movlw	127
  4991  0D95  05A1               	andwf	___ftpack@arg+1,f
  4992  0D96  30FF               	movlw	255
  4993  0D97  05A2               	andwf	___ftpack@arg+2,f
  4994  0D98                     l449:	
  4995  0D98  1003               	clrc
  4996  0D99  0CA3               	rrf	___ftpack@exp,f
  4997  0D9A  0823               	movf	___ftpack@exp,w
  4998  0D9B  00A5               	movwf	??___ftpack
  4999  0D9C  01A6               	clrf	??___ftpack+1
  5000  0D9D  01A7               	clrf	??___ftpack+2
  5001  0D9E  3010               	movlw	16
  5002  0D9F                     u1375:	
  5003  0D9F  1003               	clrc
  5004  0DA0  0DA5               	rlf	??___ftpack,f
  5005  0DA1  0DA6               	rlf	??___ftpack+1,f
  5006  0DA2  0DA7               	rlf	??___ftpack+2,f
  5007  0DA3  3EFF               	addlw	-1
  5008  0DA4  1D03               	skipz
  5009  0DA5  2D9F               	goto	u1375
  5010  0DA6  0825               	movf	??___ftpack,w
  5011  0DA7  04A0               	iorwf	___ftpack@arg,f
  5012  0DA8  0826               	movf	??___ftpack+1,w
  5013  0DA9  04A1               	iorwf	___ftpack@arg+1,f
  5014  0DAA  0827               	movf	??___ftpack+2,w
  5015  0DAB  04A2               	iorwf	___ftpack@arg+2,f
  5016  0DAC  0824               	movf	___ftpack@sign,w
  5017  0DAD  1903               	btfsc	3,2
  5018  0DAE  0008               	return
  5019  0DAF  17A2               	bsf	___ftpack@arg+2,7
  5020  0DB0  0008               	return
  5021  0DB1                     __end_of___ftpack:	
  5022                           
  5023                           	psect	text20
  5024  0BE4                     __ptext20:	
  5025 ;; *************** function _runTime *****************
  5026 ;; Defined at:
  5027 ;;		line 222 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5028 ;; Parameters:    Size  Location     Type
  5029 ;;		None
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;		None
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, btemp+1
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5041 ;;      Params:         0       0       0       0       0
  5042 ;;      Locals:         0       0       0       0       0
  5043 ;;      Temps:          0       2       0       0       0
  5044 ;;      Totals:         0       2       0       0       0
  5045 ;;Total ram usage:        2 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    2
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_main
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _runTime
  5057  0BE4                     _runTime:	
  5058                           
  5059                           ;main.c: 224: DEF_MINUTES++;
  5060                           
  5061                           ;incstack = 0
  5062                           ; Regs used in _runTime: [wreg+status,2+btemp+1]
  5063  0BE4  3001               	movlw	1
  5064  0BE5  1283               	bcf	3,5	;RP0=0, select bank0
  5065  0BE6  1303               	bcf	3,6	;RP1=0, select bank0
  5066  0BE7  07EB               	addwf	_DEF_MINUTES,f
  5067  0BE8  1803               	skipnc
  5068  0BE9  0AEC               	incf	_DEF_MINUTES+1,f
  5069  0BEA  3000               	movlw	0
  5070  0BEB  07EC               	addwf	_DEF_MINUTES+1,f
  5071                           
  5072                           ;main.c: 225: if (DEF_MINUTES >= 60)
  5073  0BEC  086C               	movf	_DEF_MINUTES+1,w
  5074  0BED  3A80               	xorlw	128
  5075  0BEE  00FF               	movwf	127
  5076  0BEF  3080               	movlw	128
  5077  0BF0  027F               	subwf	127,w
  5078  0BF1  1D03               	skipz
  5079  0BF2  2BF5               	goto	u2395
  5080  0BF3  303C               	movlw	60
  5081  0BF4  026B               	subwf	_DEF_MINUTES,w
  5082  0BF5                     u2395:	
  5083  0BF5  1C03               	skipc
  5084  0BF6  0008               	return
  5085                           
  5086                           ;main.c: 226: {
  5087                           ;main.c: 227: DEF_MINUTES = 0;
  5088  0BF7  1283               	bcf	3,5	;RP0=0, select bank0
  5089  0BF8  1303               	bcf	3,6	;RP1=0, select bank0
  5090  0BF9  01EB               	clrf	_DEF_MINUTES
  5091  0BFA  01EC               	clrf	_DEF_MINUTES+1
  5092                           
  5093                           ;main.c: 228: DEF_HOURS++;
  5094  0BFB  3001               	movlw	1
  5095  0BFC  07ED               	addwf	_DEF_HOURS,f
  5096  0BFD  1803               	skipnc
  5097  0BFE  0AEE               	incf	_DEF_HOURS+1,f
  5098  0BFF  3000               	movlw	0
  5099  0C00  07EE               	addwf	_DEF_HOURS+1,f
  5100                           
  5101                           ;main.c: 229: if (DEF_HOURS >= 24)
  5102  0C01  086E               	movf	_DEF_HOURS+1,w
  5103  0C02  3A80               	xorlw	128
  5104  0C03  00FF               	movwf	127
  5105  0C04  3080               	movlw	128
  5106  0C05  027F               	subwf	127,w
  5107  0C06  1D03               	skipz
  5108  0C07  2C0A               	goto	u2405
  5109  0C08  3018               	movlw	24
  5110  0C09  026D               	subwf	_DEF_HOURS,w
  5111  0C0A                     u2405:	
  5112  0C0A  1C03               	skipc
  5113  0C0B  2C10               	goto	l1884
  5114                           
  5115                           ;main.c: 230: {
  5116                           ;main.c: 231: DEF_HOURS = 0;
  5117  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  5118  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  5119  0C0E  01ED               	clrf	_DEF_HOURS
  5120  0C0F  01EE               	clrf	_DEF_HOURS+1
  5121  0C10                     l1884:	
  5122                           
  5123                           ;main.c: 232: }
  5124                           ;main.c: 233: _delay((unsigned long)((50)*(4000000/4000.0)));
  5125  0C10  3041               	movlw	65
  5126  0C11  1283               	bcf	3,5	;RP0=0, select bank0
  5127  0C12  1303               	bcf	3,6	;RP1=0, select bank0
  5128  0C13  00A1               	movwf	??_runTime+1
  5129  0C14  30EE               	movlw	238
  5130  0C15  00A0               	movwf	??_runTime
  5131  0C16                     u2507:	
  5132  0C16  0BA0               	decfsz	??_runTime,f
  5133  0C17  2C16               	goto	u2507
  5134  0C18  0BA1               	decfsz	??_runTime+1,f
  5135  0C19  2C16               	goto	u2507
  5136  0C1A  0000               	nop
  5137  0C1B  0008               	return
  5138  0C1C                     __end_of_runTime:	
  5139                           
  5140                           	psect	text21
  5141  0ACA                     __ptext21:	
  5142 ;; *************** function _initLCD *****************
  5143 ;; Defined at:
  5144 ;;		line 125 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;		None
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;		None
  5149 ;; Return value:  Size  Location     Type
  5150 ;;		None               void
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0, pclath, cstack
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5158 ;;      Params:         0       0       0       0       0
  5159 ;;      Locals:         0       0       0       0       0
  5160 ;;      Temps:          0       1       0       0       0
  5161 ;;      Totals:         0       1       0       0       0
  5162 ;;Total ram usage:        1 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    3
  5165 ;; This function calls:
  5166 ;;		_instCTRL
  5167 ;; This function is called by:
  5168 ;;		_main
  5169 ;; This function uses a non-reentrant model
  5170 ;;
  5171                           
  5172                           
  5173                           ;psect for function _initLCD
  5174  0ACA                     _initLCD:	
  5175                           
  5176                           ;main.c: 127: instCTRL(0x38);
  5177                           
  5178                           ;incstack = 0
  5179                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5180  0ACA  3038               	movlw	56
  5181  0ACB  120A  158A  2284  120A  158A  	fcall	_instCTRL
  5182                           
  5183                           ;main.c: 128: _delay((unsigned long)((50)*(4000000/4000000.0)));
  5184  0AD0  3010               	movlw	16
  5185  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  5186  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  5187  0AD3  00A2               	movwf	??_initLCD
  5188  0AD4                     u2517:	
  5189  0AD4  0BA2               	decfsz	??_initLCD,f
  5190  0AD5  2AD4               	goto	u2517
  5191  0AD6  0000               	nop
  5192                           
  5193                           ;main.c: 129: instCTRL(0x0C);
  5194  0AD7  300C               	movlw	12
  5195  0AD8  120A  158A  2284  120A  158A  	fcall	_instCTRL
  5196                           
  5197                           ;main.c: 130: instCTRL(0x01);
  5198  0ADD  3001               	movlw	1
  5199  0ADE  120A  158A  2284  120A  158A  	fcall	_instCTRL
  5200                           
  5201                           ;main.c: 131: instCTRL(0x06);
  5202  0AE3  3006               	movlw	6
  5203  0AE4  120A  158A  2284  120A  158A  	fcall	_instCTRL
  5204                           
  5205                           ;main.c: 132: instCTRL(0x0F);
  5206  0AE9  300F               	movlw	15
  5207  0AEA  120A  158A  2284   	fcall	_instCTRL
  5208  0AED  0008               	return
  5209  0AEE                     __end_of_initLCD:	
  5210                           
  5211                           	psect	text22
  5212  0A5A                     __ptext22:	
  5213 ;; *************** function _initInterrupt *****************
  5214 ;; Defined at:
  5215 ;;		line 40 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;		None               void
  5222 ;; Registers used:
  5223 ;;		None
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5229 ;;      Params:         0       0       0       0       0
  5230 ;;      Locals:         0       0       0       0       0
  5231 ;;      Temps:          0       0       0       0       0
  5232 ;;      Totals:         0       0       0       0       0
  5233 ;;Total ram usage:        0 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    2
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_main
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           
  5244                           ;psect for function _initInterrupt
  5245  0A5A                     _initInterrupt:	
  5246                           
  5247                           ;main.c: 42: GIE = 1;
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in _initInterrupt: []
  5251  0A5A  178B               	bsf	11,7	;volatile
  5252                           
  5253                           ;main.c: 43: INTE = 1;
  5254  0A5B  160B               	bsf	11,4	;volatile
  5255                           
  5256                           ;main.c: 44: INTF = 0;
  5257  0A5C  108B               	bcf	11,1	;volatile
  5258                           
  5259                           ;main.c: 45: INTEDG = 0;
  5260  0A5D  1683               	bsf	3,5	;RP0=1, select bank1
  5261  0A5E  1303               	bcf	3,6	;RP1=0, select bank1
  5262  0A5F  1301               	bcf	1,6	;volatile
  5263  0A60  0008               	return
  5264  0A61                     __end_of_initInterrupt:	
  5265                           
  5266                           	psect	text23
  5267  0A61                     __ptext23:	
  5268 ;; *************** function _initADC *****************
  5269 ;; Defined at:
  5270 ;;		line 34 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;		None
  5273 ;; Auto vars:     Size  Location     Type
  5274 ;;		None
  5275 ;; Return value:  Size  Location     Type
  5276 ;;		None               void
  5277 ;; Registers used:
  5278 ;;		wreg
  5279 ;; Tracked objects:
  5280 ;;		On entry : 0/0
  5281 ;;		On exit  : 0/0
  5282 ;;		Unchanged: 0/0
  5283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5284 ;;      Params:         0       0       0       0       0
  5285 ;;      Locals:         0       0       0       0       0
  5286 ;;      Temps:          0       0       0       0       0
  5287 ;;      Totals:         0       0       0       0       0
  5288 ;;Total ram usage:        0 bytes
  5289 ;; Hardware stack levels used:    1
  5290 ;; Hardware stack levels required when called:    2
  5291 ;; This function calls:
  5292 ;;		Nothing
  5293 ;; This function is called by:
  5294 ;;		_main
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function _initADC
  5300  0A61                     _initADC:	
  5301                           
  5302                           ;main.c: 36: ADCON1 = 0x80;
  5303                           
  5304                           ;incstack = 0
  5305                           ; Regs used in _initADC: [wreg]
  5306  0A61  3080               	movlw	128
  5307  0A62  1683               	bsf	3,5	;RP0=1, select bank1
  5308  0A63  1303               	bcf	3,6	;RP1=0, select bank1
  5309  0A64  009F               	movwf	31	;volatile
  5310                           
  5311                           ;main.c: 37: ADCON0 = 0x01;
  5312  0A65  3001               	movlw	1
  5313  0A66  1283               	bcf	3,5	;RP0=0, select bank0
  5314  0A67  1303               	bcf	3,6	;RP1=0, select bank0
  5315  0A68  009F               	movwf	31	;volatile
  5316  0A69  0008               	return
  5317  0A6A                     __end_of_initADC:	
  5318                           
  5319                           	psect	text24
  5320  0AAA                     __ptext24:	
  5321 ;; *************** function _checkMode *****************
  5322 ;; Defined at:
  5323 ;;		line 82 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;		None
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;		None
  5328 ;; Return value:  Size  Location     Type
  5329 ;;		None               void
  5330 ;; Registers used:
  5331 ;;		wreg, status,2, status,0, pclath, cstack
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5337 ;;      Params:         0       0       0       0       0
  5338 ;;      Locals:         0       0       0       0       0
  5339 ;;      Temps:          0       2       0       0       0
  5340 ;;      Totals:         0       2       0       0       0
  5341 ;;Total ram usage:        2 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    3
  5344 ;; This function calls:
  5345 ;;		_instCTRL
  5346 ;; This function is called by:
  5347 ;;		_main
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           
  5352                           ;psect for function _checkMode
  5353  0AAA                     _checkMode:	
  5354                           
  5355                           ;main.c: 84: if (lastMode != mode)
  5356                           
  5357                           ;incstack = 0
  5358                           ; Regs used in _checkMode: [wreg+status,2+status,0+pclath+cstack]
  5359  0AAA  087D               	movf	_lastMode,w	;volatile
  5360  0AAB  067C               	xorwf	_mode,w	;volatile
  5361  0AAC  1903               	skipnz
  5362  0AAD  0008               	return
  5363                           
  5364                           ;main.c: 85: {
  5365                           ;main.c: 86: instCTRL(0x01);
  5366  0AAE  3001               	movlw	1
  5367  0AAF  120A  158A  2284  120A  158A  	fcall	_instCTRL
  5368                           
  5369                           ;main.c: 87: _delay((unsigned long)((50)*(4000000/4000.0)));
  5370  0AB4  3041               	movlw	65
  5371  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  5372  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  5373  0AB7  00A3               	movwf	??_checkMode+1
  5374  0AB8  30EE               	movlw	238
  5375  0AB9  00A2               	movwf	??_checkMode
  5376  0ABA                     u2527:	
  5377  0ABA  0BA2               	decfsz	??_checkMode,f
  5378  0ABB  2ABA               	goto	u2527
  5379  0ABC  0BA3               	decfsz	??_checkMode+1,f
  5380  0ABD  2ABA               	goto	u2527
  5381  0ABE  0000               	nop
  5382                           
  5383                           ;main.c: 88: instCTRL(0x80);
  5384  0ABF  3080               	movlw	128
  5385  0AC0  120A  158A  2284   	fcall	_instCTRL
  5386                           
  5387                           ;main.c: 89: lastMode = mode;
  5388  0AC3  087C               	movf	_mode,w	;volatile
  5389  0AC4  1283               	bcf	3,5	;RP0=0, select bank0
  5390  0AC5  1303               	bcf	3,6	;RP1=0, select bank0
  5391  0AC6  00A2               	movwf	??_checkMode
  5392  0AC7  0822               	movf	??_checkMode,w
  5393  0AC8  00FD               	movwf	_lastMode	;volatile
  5394  0AC9  0008               	return
  5395  0ACA                     __end_of_checkMode:	
  5396                           
  5397                           	psect	text25
  5398  0A84                     __ptext25:	
  5399 ;; *************** function _instCTRL *****************
  5400 ;; Defined at:
  5401 ;;		line 105 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5402 ;; Parameters:    Size  Location     Type
  5403 ;;  CMD             1    wreg     unsigned char 
  5404 ;; Auto vars:     Size  Location     Type
  5405 ;;  CMD             1    1[BANK0 ] unsigned char 
  5406 ;; Return value:  Size  Location     Type
  5407 ;;		None               void
  5408 ;; Registers used:
  5409 ;;		wreg
  5410 ;; Tracked objects:
  5411 ;;		On entry : 0/0
  5412 ;;		On exit  : 0/0
  5413 ;;		Unchanged: 0/0
  5414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5415 ;;      Params:         0       0       0       0       0
  5416 ;;      Locals:         0       1       0       0       0
  5417 ;;      Temps:          0       1       0       0       0
  5418 ;;      Totals:         0       2       0       0       0
  5419 ;;Total ram usage:        2 bytes
  5420 ;; Hardware stack levels used:    1
  5421 ;; Hardware stack levels required when called:    2
  5422 ;; This function calls:
  5423 ;;		Nothing
  5424 ;; This function is called by:
  5425 ;;		_updateDisplay
  5426 ;;		_checkMode
  5427 ;;		_initLCD
  5428 ;;		_printToLCD
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           
  5433                           ;psect for function _instCTRL
  5434  0A84                     _instCTRL:	
  5435                           
  5436                           ;incstack = 0
  5437                           ; Regs used in _instCTRL: [wreg]
  5438                           ;instCTRL@CMD stored from wreg
  5439  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  5440  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  5441  0A86  00A1               	movwf	instCTRL@CMD
  5442                           
  5443                           ;main.c: 107: PORTD = CMD;
  5444  0A87  0821               	movf	instCTRL@CMD,w
  5445  0A88  0088               	movwf	8	;volatile
  5446                           
  5447                           ;main.c: 108: RC0 = 0;
  5448  0A89  1007               	bcf	7,0	;volatile
  5449                           
  5450                           ;main.c: 109: RC1 = 0;
  5451  0A8A  1087               	bcf	7,1	;volatile
  5452                           
  5453                           ;main.c: 110: RC2 = 1;
  5454  0A8B  1507               	bsf	7,2	;volatile
  5455                           
  5456                           ;main.c: 111: _delay((unsigned long)((1)*(4000000/4000.0)));
  5457  0A8C  30F9               	movlw	249
  5458  0A8D  00A0               	movwf	??_instCTRL
  5459  0A8E                     u2537:	
  5460  0A8E  0000               	nop
  5461  0A8F  0BA0               	decfsz	??_instCTRL,f
  5462  0A90  2A8E               	goto	u2537
  5463  0A91  2A92               	nop2	;nop
  5464  0A92  0000               	nop
  5465                           
  5466                           ;main.c: 112: RC2 = 0;
  5467  0A93  1283               	bcf	3,5	;RP0=0, select bank0
  5468  0A94  1303               	bcf	3,6	;RP1=0, select bank0
  5469  0A95  1107               	bcf	7,2	;volatile
  5470  0A96  0008               	return
  5471  0A97                     __end_of_instCTRL:	
  5472                           
  5473                           	psect	text26
  5474  0B5D                     __ptext26:	
  5475 ;; *************** function _ISR *****************
  5476 ;; Defined at:
  5477 ;;		line 48 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5478 ;; Parameters:    Size  Location     Type
  5479 ;;		None
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;		None
  5482 ;; Return value:  Size  Location     Type
  5483 ;;		None               void
  5484 ;; Registers used:
  5485 ;;		wreg, status,2, status,0, pclath, cstack
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5491 ;;      Params:         0       0       0       0       0
  5492 ;;      Locals:         0       0       0       0       0
  5493 ;;      Temps:          5       0       0       0       0
  5494 ;;      Totals:         5       0       0       0       0
  5495 ;;Total ram usage:        5 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; Hardware stack levels required when called:    1
  5498 ;; This function calls:
  5499 ;;		___awmod
  5500 ;; This function is called by:
  5501 ;;		Interrupt level 1
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           
  5506                           ;psect for function _ISR
  5507  0B5D                     _ISR:	
  5508                           
  5509                           ;main.c: 50: GIE = 0;
  5510  0B5D  138B               	bcf	11,7	;volatile
  5511                           
  5512                           ;main.c: 51: if (INTF == 1)
  5513  0B5E  1C8B               	btfss	11,1	;volatile
  5514  0B5F  2B75               	goto	i1l1310
  5515                           
  5516                           ;main.c: 52: {
  5517                           ;main.c: 53: INTF = 0;
  5518  0B60  108B               	bcf	11,1	;volatile
  5519                           
  5520                           ;main.c: 54: mode = (mode + 1) % 3;
  5521  0B61  3003               	movlw	3
  5522  0B62  00F0               	movwf	___awmod@divisor
  5523  0B63  3000               	movlw	0
  5524  0B64  00F1               	movwf	___awmod@divisor+1
  5525  0B65  087C               	movf	_mode,w	;volatile
  5526  0B66  3E01               	addlw	1
  5527  0B67  00F2               	movwf	___awmod@dividend
  5528  0B68  3000               	movlw	0
  5529  0B69  1803               	skipnc
  5530  0B6A  3001               	movlw	1
  5531  0B6B  00F3               	movwf	___awmod@dividend+1
  5532  0B6C  120A  158A  2494  120A  158A  	fcall	___awmod
  5533  0B71  0870               	movf	?___awmod,w
  5534  0B72  00F7               	movwf	??_ISR
  5535  0B73  0877               	movf	??_ISR,w
  5536  0B74  00FC               	movwf	_mode	;volatile
  5537  0B75                     i1l1310:	
  5538                           
  5539                           ;main.c: 55: }
  5540                           ;main.c: 56: GIE = 1;
  5541  0B75  178B               	bsf	11,7	;volatile
  5542  0B76  087B               	movf	??_ISR+4,w
  5543  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  5544  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  5545  0B79  00FF               	movwf	127
  5546  0B7A  087A               	movf	??_ISR+3,w
  5547  0B7B  008A               	movwf	10
  5548  0B7C  0879               	movf	??_ISR+2,w
  5549  0B7D  0084               	movwf	4
  5550  0B7E  0E78               	swapf	(??_ISR+1)^(0+-128),w
  5551  0B7F  0083               	movwf	3
  5552  0B80  0EFE               	swapf	126,f
  5553  0B81  0E7E               	swapf	126,w
  5554  0B82  0009               	retfie
  5555  0B83                     __end_of_ISR:	
  5556                           
  5557                           	psect	intentry
  5558  0004                     __pintentry:	
  5559                           ;incstack = 0
  5560                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  5561                           
  5562  0004                     interrupt_function:	
  5563  007E                     saved_w	set	btemp
  5564  0004  00FE               	movwf	btemp
  5565  0005  0E03               	swapf	3,w
  5566  0006  00F8               	movwf	??_ISR+1
  5567  0007  0804               	movf	4,w
  5568  0008  00F9               	movwf	??_ISR+2
  5569  0009  080A               	movf	10,w
  5570  000A  00FA               	movwf	??_ISR+3
  5571  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5572  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5573  000D  087F               	movf	btemp+1,w
  5574  000E  00FB               	movwf	??_ISR+4
  5575  000F  120A  158A  2B5D   	ljmp	_ISR
  5576                           
  5577                           	psect	text27
  5578  0C94                     __ptext27:	
  5579 ;; *************** function ___awmod *****************
  5580 ;; Defined at:
  5581 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;  divisor         2    0[COMMON] int 
  5584 ;;  dividend        2    2[COMMON] int 
  5585 ;; Auto vars:     Size  Location     Type
  5586 ;;  sign            1    6[COMMON] unsigned char 
  5587 ;;  counter         1    5[COMMON] unsigned char 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  2    0[COMMON] int 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5597 ;;      Params:         4       0       0       0       0
  5598 ;;      Locals:         2       0       0       0       0
  5599 ;;      Temps:          1       0       0       0       0
  5600 ;;      Totals:         7       0       0       0       0
  5601 ;;Total ram usage:        7 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; This function calls:
  5604 ;;		Nothing
  5605 ;; This function is called by:
  5606 ;;		_ISR
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           
  5611                           ;psect for function ___awmod
  5612  0C94                     ___awmod:	
  5613                           
  5614                           ;incstack = 0
  5615                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5616  0C94  01F6               	clrf	___awmod@sign
  5617  0C95  1FF3               	btfss	___awmod@dividend+1,7
  5618  0C96  2C9E               	goto	i1l1254
  5619  0C97  09F2               	comf	___awmod@dividend,f
  5620  0C98  09F3               	comf	___awmod@dividend+1,f
  5621  0C99  0AF2               	incf	___awmod@dividend,f
  5622  0C9A  1903               	skipnz
  5623  0C9B  0AF3               	incf	___awmod@dividend+1,f
  5624  0C9C  01F6               	clrf	___awmod@sign
  5625  0C9D  0AF6               	incf	___awmod@sign,f
  5626  0C9E                     i1l1254:	
  5627  0C9E  1FF1               	btfss	___awmod@divisor+1,7
  5628  0C9F  2CA5               	goto	i1l1258
  5629  0CA0  09F0               	comf	___awmod@divisor,f
  5630  0CA1  09F1               	comf	___awmod@divisor+1,f
  5631  0CA2  0AF0               	incf	___awmod@divisor,f
  5632  0CA3  1903               	skipnz
  5633  0CA4  0AF1               	incf	___awmod@divisor+1,f
  5634  0CA5                     i1l1258:	
  5635  0CA5  0871               	movf	___awmod@divisor+1,w
  5636  0CA6  0470               	iorwf	___awmod@divisor,w
  5637  0CA7  1903               	skipnz
  5638  0CA8  2CD2               	goto	i1l1276
  5639  0CA9  01F5               	clrf	___awmod@counter
  5640  0CAA  0AF5               	incf	___awmod@counter,f
  5641  0CAB                     i1l1266:	
  5642  0CAB  1BF1               	btfsc	___awmod@divisor+1,7
  5643  0CAC  2CB9               	goto	i1l1268
  5644  0CAD  3001               	movlw	1
  5645  0CAE                     u119_25:	
  5646  0CAE  1003               	clrc
  5647  0CAF  0DF0               	rlf	___awmod@divisor,f
  5648  0CB0  0DF1               	rlf	___awmod@divisor+1,f
  5649  0CB1  3EFF               	addlw	-1
  5650  0CB2  1D03               	skipz
  5651  0CB3  2CAE               	goto	u119_25
  5652  0CB4  3001               	movlw	1
  5653  0CB5  00F4               	movwf	??___awmod
  5654  0CB6  0874               	movf	??___awmod,w
  5655  0CB7  07F5               	addwf	___awmod@counter,f
  5656  0CB8  2CAB               	goto	i1l1266
  5657  0CB9                     i1l1268:	
  5658  0CB9  0871               	movf	___awmod@divisor+1,w
  5659  0CBA  0273               	subwf	___awmod@dividend+1,w
  5660  0CBB  1D03               	skipz
  5661  0CBC  2CBF               	goto	u121_25
  5662  0CBD  0870               	movf	___awmod@divisor,w
  5663  0CBE  0272               	subwf	___awmod@dividend,w
  5664  0CBF                     u121_25:	
  5665  0CBF  1C03               	skipc
  5666  0CC0  2CC7               	goto	i1l1272
  5667  0CC1  0870               	movf	___awmod@divisor,w
  5668  0CC2  02F2               	subwf	___awmod@dividend,f
  5669  0CC3  0871               	movf	___awmod@divisor+1,w
  5670  0CC4  1C03               	skipc
  5671  0CC5  03F3               	decf	___awmod@dividend+1,f
  5672  0CC6  02F3               	subwf	___awmod@dividend+1,f
  5673  0CC7                     i1l1272:	
  5674  0CC7  3001               	movlw	1
  5675  0CC8                     u122_25:	
  5676  0CC8  1003               	clrc
  5677  0CC9  0CF1               	rrf	___awmod@divisor+1,f
  5678  0CCA  0CF0               	rrf	___awmod@divisor,f
  5679  0CCB  3EFF               	addlw	-1
  5680  0CCC  1D03               	skipz
  5681  0CCD  2CC8               	goto	u122_25
  5682  0CCE  3001               	movlw	1
  5683  0CCF  02F5               	subwf	___awmod@counter,f
  5684  0CD0  1D03               	btfss	3,2
  5685  0CD1  2CB9               	goto	i1l1268
  5686  0CD2                     i1l1276:	
  5687  0CD2  0876               	movf	___awmod@sign,w
  5688  0CD3  1903               	btfsc	3,2
  5689  0CD4  2CDA               	goto	i1l1280
  5690  0CD5  09F2               	comf	___awmod@dividend,f
  5691  0CD6  09F3               	comf	___awmod@dividend+1,f
  5692  0CD7  0AF2               	incf	___awmod@dividend,f
  5693  0CD8  1903               	skipnz
  5694  0CD9  0AF3               	incf	___awmod@dividend+1,f
  5695  0CDA                     i1l1280:	
  5696  0CDA  0873               	movf	___awmod@dividend+1,w
  5697  0CDB  01F1               	clrf	?___awmod+1
  5698  0CDC  07F1               	addwf	?___awmod+1,f
  5699  0CDD  0872               	movf	___awmod@dividend,w
  5700  0CDE  01F0               	clrf	?___awmod
  5701  0CDF  07F0               	addwf	?___awmod,f
  5702  0CE0  0008               	return
  5703  0CE1                     __end_of___awmod:	
  5704  007E                     btemp	set	126	;btemp
  5705  007E                     wtemp	set	126
  5706  007E                     wtemp0	set	126
  5707  0080                     wtemp1	set	128
  5708  0082                     wtemp2	set	130
  5709  0084                     wtemp3	set	132
  5710  0086                     wtemp4	set	134
  5711  0088                     wtemp5	set	136
  5712  007F                     wtemp6	set	127
  5713  007E                     ttemp	set	126
  5714  007E                     ttemp0	set	126
  5715  0081                     ttemp1	set	129
  5716  0084                     ttemp2	set	132
  5717  0087                     ttemp3	set	135
  5718  007F                     ttemp4	set	127
  5719  007E                     ltemp	set	126
  5720  007E                     ltemp0	set	126
  5721  0082                     ltemp1	set	130
  5722  0086                     ltemp2	set	134
  5723  0080                     ltemp3	set	128


Data Sizes:
    Strings     87
    Constant    10
    Data        3
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     73      79
    BANK1            80     39      41
    BANK3            96     58      58
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_7(CODE[20]), STR_6(CODE[9]), STR_5(CODE[3]), STR_4(CODE[6]), 
		 -> STR_3(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> displayTime@time(BANK0[20]), displayPPM@strBuffer(BANK3[50]), displayRawADC@buffer(BANK0[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S177$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    displayPPM@bufPtr	PTR unsigned char  size(1) Largest target is 50
		 -> displayPPM@strBuffer(BANK3[50]), 

    printToLCD@str	PTR const unsigned char  size(2) Largest target is 50
		 -> displayTime@time(BANK0[20]), displayPPM@strBuffer(BANK3[50]), displayRawADC@buffer(BANK0[30]), STR_2(CODE[21]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awmod

Critical Paths under _main in BANK0

    _main->_updateDisplay
    _updateDisplay->_displayPPM
    _displayTime->_sprintf
    _displayPPM->_CalcMQ135
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _printToLCD->_dataCTRL
    _printToLCD->_instCTRL
    ___fttol->___ftmul
    ___ftneg->___awtoft
    _CalcMQ135->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _initLCD->_instCTRL
    _checkMode->_instCTRL

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _displayPPM->_CalcMQ135

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _updateDisplay->_displayPPM

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   26512
                                             70 BANK0      3     3      0
                          _checkMode
                            _initADC
                      _initInterrupt
                            _initLCD
                            _runTime
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (1) _updateDisplay                                        3     3      0   26468
                                             67 BANK0      3     3      0
                         _displayPPM
                        _displayTime
                           _instCTRL
                         _printToLCD
 ---------------------------------------------------------------------------------
 (2) _displayTime                                         21    21      0    2570
                                             36 BANK0     21    21      0
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _displayPPM                                          60    60      0   23522
                                             65 BANK0      2     2      0
                                              0 BANK3     58    58      0
                          _CalcMQ135
                     _Read_ADC_MQ135
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    15      7    2156
                                             14 BANK0     22    15      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     198
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     268
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _printToLCD                                           2     0      2     354
                                              2 BANK0      2     0      2
                           _dataCTRL
                           _instCTRL
 ---------------------------------------------------------------------------------
 (3) _dataCTRL                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     358
                                             46 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3      98
                                             14 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) _Read_ADC_MQ135                                       4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _CalcMQ135                                           42    39      3   11518
                                             62 BANK0      3     0      3
                                              0 BANK1     39    39      0
                     _Read_ADC_MQ135 (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3495
                                             30 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             16    10      6    2177
                                             46 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3347
                                             17 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1882
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1685
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _runTime                                              2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      22
                                              2 BANK0      1     1      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (1) _initInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkMode                                            2     2      0      22
                                              2 BANK0      2     2      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (3) _instCTRL                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  5     5      0     281
                                              7 COMMON     5     5      0
                            ___awmod
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              7     3      4     281
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkMode
     _instCTRL
   _initADC
   _initInterrupt
   _initLCD
     _instCTRL
   _runTime
   _updateDisplay
     _displayPPM
       _CalcMQ135
         _Read_ADC_MQ135 (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
       _Read_ADC_MQ135
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
       _printToLCD
         _dataCTRL
         _instCTRL
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _displayTime
       _printToLCD
         _dataCTRL
         _instCTRL
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _instCTRL
     _printToLCD
       _dataCTRL
       _instCTRL

 _ISR (ROOT)
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     3A      3A       9       60.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     27      29       7       51.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     49      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C0      12        0.0%
ABS                  0      0      C0       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon May 06 17:33:08 2024

                      pc 0002             ?_displayTime 0070              __CFG_CP$OFF 0000  
                     fsr 0004      ___wmul@multiplicand 0022             ___ftadd@exp1 003D  
           ___ftadd@exp2 003C             ___ftadd@sign 003B                      l121 07F0  
                    l163 040F                      l181 04D4                      l282 0B1F  
                    l443 0D7F                      l472 0F9F                      l449 0D98  
                    _GIE 005F                      _RC0 0038                      _RC1 0039  
                    _RC2 003A             __CFG_CPD$OFF 0000                      _ISR 0B5D  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
           __CFG_FOSC$HS 0000            printToLCD@str 0022           _Read_ADC_MQ135 07E2  
           __CFG_LVP$OFF 0000                     ?_ISR 0070             ___ftdiv@cntr 0058  
           ___ftdiv@sign 005D                     l1330 0D51                     l1420 0F20  
                   l1334 0D58                     l1430 0F36                     l1510 0EB2  
                   l1344 0D84                     l1336 0D64                     l1408 0AFA  
                   l1424 0F27                     l1346 0D8E                     l1338 0D69  
                   l1450 0F71                     l1442 0F50                     l1610 0BB6  
                   l1460 0F8F                     l1452 0F76                     l1532 0727  
                   l1612 0BC4                     l1620 0BDD                     l1470 0FC3  
                   l1462 0F9B                     l1454 0F7A                     l1518 0ED1  
                   l1550 077C                     l1630 0B89                     l1390 0B17  
                   l1480 0FE6                     l1448 0F65                     l1616 0BD2  
                   l1384 0A82                     l1466 0FB1                     l1490 0E57  
                   l1562 07A4                     l1554 078C                     l1538 073D  
                   l1730 052E                     l1706 04F3                     l1820 0E36  
                   l1812 0E1A                     l1804 0DFD                     l1708 04F7  
                   l1660 041F                     l1652 040B                     l1566 07B4  
                   l1814 0E25                     l1806 0E0D                     l1718 050E  
                   l1910 0D37                     l1902 0D1D                     l1496 0E6D  
                   l1816 0E28                     l1728 052A                     l1760 05B0  
                   l1664 0431                     l1594 0C82                     l1586 0C5E  
                   l1738 0549                     l1746 055E                     l1690 04A5  
                   l1674 046F                     l1658 0414                     l1842 06E6  
                   l1588 0C6C                     l1756 0562                     l1676 0486  
                   l1598 0C8D                     l1686 049F                     l1758 03E3  
                   l1926 0C44                     l1786 0DCB                     l1698 04C6  
                   l1884 0C10                     STR_1 0843                     STR_2 081A  
                   STR_3 0854                     STR_4 0868                     STR_5 086E  
                   STR_6 085F                     STR_7 082F                     u2005 0BB9  
                   u1305 0D5D                     u2025 0BCA                     u2035 0BD3  
                   u1325 0D78                     u2125 04BC                     u1345 0D87  
                   u1425 0B20                     u2315 0DFE                     u1435 0B27  
                   u2405 0C0A                     u2165 04E3                     u1375 0D9F  
                   u1615 0F7B                     u2345 0E1C                     u2507 0C16  
                   u1555 0F51                     u2517 0AD4                     u1645 0F90  
                   u1725 0E7F                     u1805 0749                     u2285 0DD2  
                   u2527 0ABA                     u1735 0E91                     u1815 075B  
                   u2375 06D1                     u2537 0A8E                     u1585 0F66  
                   u1745 0EB3                     u1905 07BD                     u2457 0C3D  
                   u2395 0BF5                     u1755 0EC4                     u2467 0CE7  
                   u1765 0ED2                     u1845 078D                     u2477 0D3F  
                   u1855 0795                     u2487 0AA1                     u1935 0C61  
                   u2497 07E8                     u1955 0C6D                     u1965 0C79  
                   _INTE 005C                     _INTF 0059                     u1895 07B5  
                   u1975 0C83           ?_updateDisplay 0070             __CFG_WRT$OFF 0000  
                   _main 0C1C             ___ftpack@arg 0020                     _mode 007C  
           ___ftpack@exp 0023                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0012                     ttemp 007E  
                   wtemp 007E    displayPPM@ppmFraction 01C7             ___ftmul@cntr 004C  
           ___ftmul@sign 004D                    ??_ISR 0077             ___fttol@exp1 005B  
           ___fttol@lval 0057                    ?_main 0070          __end_of___ftadd 1000  
          __CFG_WDTE$OFF 0000          __end_of___awmod 0CE1          __end_of___ftdiv 0EF7  
        __end_of___ftneg 0A74          __end_of___ftmul 07E2          __end_of___fttol 0E3F  
        __end_of___lwdiv 0C94          __end_of___lwmod 0BE4   __end_of_Read_ADC_MQ135 07FD  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088             CalcMQ135@co2 00C1  
        __end_of_initADC 0A6A          __end_of_initLCD 0AEE            ___awtoft@sign 002D  
        __end_of_dpowers 081A          __end_of_isdigit 0A84            ___ftpack@sign 0024  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080       __size_of_CalcMQ135 03A7  
        __end_of_runTime 0C1C                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __end_of_sprintf 05BF  
        __initialization 0015       displayPPM@ppmWhole 01C5   __size_of_initInterrupt 0007  
           __end_of_main 0C54                   ??_main 0066            ___fttol@sign1 0056  
        ?_Read_ADC_MQ135 0020                   _ADCON0 001F                   _ADCON1 009F  
        ??_updateDisplay 0063                   _ADRESH 001E                   _ADRESL 009E  
       __end_of___awtoft 0B13         __end_of___ftpack 0DB1                   i1l1310 0B75  
                 i1l1254 0C9E                   i1l1280 0CDA                   i1l1272 0CC7  
                 i1l1266 0CAB                   i1l1258 0CA5                   i1l1268 0CB9  
                 i1l1276 0CD2                   u121_25 0CBF                   u122_25 0CC8  
                 _INTEDG 040E                   u119_25 0CAE         __end_of_dataCTRL 0AAA  
          displayPPM@PPM 01C2              instCTRL@CMD 0021           __CFG_PWRTE$OFF 0000  
                 ___wmul 0B13                ??___ftadd 0037                ??___awmod 0074  
              ??___ftdiv 0054                ??___ftneg 0031                ??___ftmul 0044  
              ??___fttol 0052                ??___lwdiv 0024                ??___lwmod 002C  
       __end_of_instCTRL 0A97          ___awmod@divisor 0070          ___awmod@counter 0075  
      __end_of_CalcMQ135 03DB     __size_of_displayTime 0025                ??_initADC 0020  
  ___ftmul@f3_as_product 0049                ??_initLCD 0022             __pdataCOMMON 007D  
              ??_isdigit 0020                   saved_w 007E            _initInterrupt 0A5A  
              ??_runTime 0020                ??_sprintf 0035  __end_of__initialization 0030  
             ___ftadd@f1 0031               ___ftadd@f2 0034               ___ftdiv@f1 0051  
             ___ftdiv@f2 004E               ___ftdiv@f3 0059               ___ftneg@f1 002E  
             ___awtoft@c 0028               ___ftmul@f1 003E               ___ftmul@f2 0041  
             ___fttol@f1 004E           __pcstackCOMMON 0070             __pidataBANK0 07FD  
     __size_of_checkMode 0020      displayPPM@strBuffer 0190           ?_initInterrupt 0070  
           sprintf@width 0041               __pbssBANK0 0069               __pbssBANK1 00C7  
             __pmaintext 0C1C                  ?___wmul 0020               __pintentry 0004  
              ?___awtoft 0028                ?___ftpack 0020                ?_dataCTRL 0070  
                _GO_DONE 00FA               _displayPPM 05BF        __end_of_checkMode 0ACA  
             __stringtab 0800                ?_instCTRL 0070           CalcMQ135@ratio 00C4  
              _ACTV_MINS 00C7                _DEF_HOURS 006D                  ___ftadd 0EF7  
                ___awmod 0C94                  ___ftdiv 0E3F                  ___ftneg 0A6A  
        __size_of___wmul 0025                  ___ftmul 070F                  ___fttol 0DB1  
                ___lwdiv 0C54                  ___lwmod 0BAE         ??_Read_ADC_MQ135 0022  
             ??___awtoft 002B               ??___ftpack 0025                  __ptext1 0CE1  
                __ptext2 0B38                  __ptext3 05BF                  __ptext4 03DB  
                __ptext5 0A74                  __ptext6 0B13                  __ptext7 0BAE  
                __ptext8 0C54                  __ptext9 0B83                  _initADC 0A61  
             ??_dataCTRL 0020                  _initLCD 0ACA             __size_of_ISR 0026  
        ??_initInterrupt 0020                  _dpowers 0810                  _isdigit 0A74  
       ___awmod@dividend 0072                  _runTime 0BE4                  _sprintf 03DB  
   end_of_initialization 0030               ??_instCTRL 0020               _printToLCD 0B83  
              _CalcMQ135 0034              ?_displayPPM 0070    __end_of_updateDisplay 0D47  
            ___ftdiv@exp 005C         displayPPM@bufPtr 01C9         CalcMQ135@RAW_ADC 005E  
            ___ftmul@exp 0048            ??_displayTime 0044           __end_of___wmul 0B38  
          __pidataCOMMON 07FF      start_initialization 0015               ?_CalcMQ135 005E  
            __end_of_ISR 0B83         CalcMQ135@voltage 00A0                 ??___wmul 0024  
    __size_of_displayPPM 0150              __pdataBANK0 006D              _DEF_MINUTES 006B  
            ?_printToLCD 0022        __size_of___awtoft 0025        __size_of___ftpack 006A  
    __end_of_displayTime 0B5D              __pbssCOMMON 007C                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK3 0190  
      __size_of_dataCTRL 0013      __end_of__stringdata 0871              sprintf@ccnt 003A  
            sprintf@_val 003C              sprintf@flag 0040              sprintf@prec 0039  
              _checkMode 0AAA        __size_of_instCTRL 0013         ___lwdiv@dividend 0022  
               ?___ftadd 0031                 ?___awmod 0070                 ?___ftdiv 004E  
               ?___ftneg 002E                 ?___ftmul 003E                 ?___fttol 004E  
               ?___lwdiv 0020                 ?___lwmod 0028                __pstrings 0800  
               ?_initADC 0070                 ?_initLCD 0070                 ?_isdigit 0070  
            ??_CalcMQ135 0061                 ?_runTime 0070         ___lwdiv@quotient 0025  
               ?_sprintf 002E        interrupt_function 0004           ___wmul@product 0024  
             ?_checkMode 0070      __size_of_printToLCD 002B              dataCTRL@DAT 0021  
            _displayTime 0B38              __stringbase 080F              __stringdata 081A  
      ___wmul@multiplier 0020    __end_of_initInterrupt 0A61             ??_displayPPM 0061  
        CalcMQ135@ratio2 00B5          CalcMQ135@ratio3 00B8          CalcMQ135@ratio4 00BB  
        CalcMQ135@ratio5 00BE          CalcMQ135@ratio6 00A3               _ACTV_HOURS 0069  
     __end_of_displayPPM 070F         __size_of___ftadd 0109         __size_of___awmod 004D  
       __size_of___ftdiv 00B8         __size_of___ftneg 000A         __size_of___ftmul 00D3  
       __size_of___fttol 008E         __size_of___lwdiv 0040         __size_of___lwmod 0036  
               ___awtoft 0AEE                 ___ftpack 0D47       __end_of__stringtab 0810  
            _isdigit$373 0020                 _dataCTRL 0A97         __size_of_initADC 0009  
       __size_of_initLCD 0024         __size_of_isdigit 0010          ___lwdiv@divisor 0020  
__size_of_Read_ADC_MQ135 001B          ___lwdiv@counter 0027                 __ptext10 0A97  
               __ptext11 0DB1                 __ptext20 0BE4                 __ptext12 0A6A  
               __ptext21 0ACA                 __ptext13 07E2                 __ptext22 0A5A  
               __ptext14 0034                 __ptext23 0A61                 __ptext15 070F  
               __ptext24 0AAA                 __ptext16 0E3F                 __ptext25 0A84  
               __ptext17 0EF7                 __ptext26 0B5D                 __ptext18 0AEE  
               __ptext27 0C94                 __ptext19 0D47         __size_of_runTime 0038  
       __size_of_sprintf 01E4                 _lastMode 007D                 _instCTRL 0A84  
          __size_of_main 0038              ??_checkMode 0022          displayTime@time 0045  
           ??_printToLCD 0024   __size_of_updateDisplay 0066                 isdigit@c 0021  
               intlevel1 0000                sprintf@ap 0038                sprintf@sp 002E  
       ___lwmod@dividend 002A       __end_of_printToLCD 0BAE                stringcode 080A  
          _CalcMQ135$590 00AF            _CalcMQ135$591 00B2            _CalcMQ135$587 00A6  
          _CalcMQ135$588 00A9            _CalcMQ135$589 00AC               _OPTION_REG 0081  
               sprintf@c 0043                 sprintf@f 0030          ___lwmod@divisor 0028  
        ___lwmod@counter 002D                 stringdir 080A                 stringtab 0800  
          _updateDisplay 0CE1  
