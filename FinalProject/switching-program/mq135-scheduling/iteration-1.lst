

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri May 10 19:05:51 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	dabs	1,0x7E,2
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109                           
   110                           	psect	idataCOMMON
   111  09B6                     __pidataCOMMON:	
   112                           
   113                           ;initializer for _lastMode
   114  09B6  34FF               	retlw	255
   115                           
   116                           ;initializer for _lastSel
   117  09B7  34FF               	retlw	255
   118                           
   119                           	psect	idataBANK0
   120  09B8                     __pidataBANK0:	
   121                           
   122                           ;initializer for _ACTV_HOURS
   123  09B8  3408               	retlw	8
   124  09B9  3400               	retlw	0
   125                           
   126                           ;initializer for _DEF_HOURS
   127  09BA  3408               	retlw	8
   128  09BB  3400               	retlw	0
   129                           
   130                           ;initializer for _lastSelButtonState
   131  09BC  3401               	retlw	1
   132                           
   133                           	psect	strings
   134  0800                     __pstrings:	
   135  0800                     stringtab:	
   136  0800                     __stringtab:	
   137                           
   138                           ;	String table - string pointers are 1 byte each
   139  0800  1BFF               	btfsc	btemp+1,7
   140  0801  280A               	ljmp	stringcode
   141  0802  1383               	bcf	3,7
   142  0803  187F               	btfsc	btemp+1,0
   143  0804  1783               	bsf	3,7
   144  0805  0800               	movf	0,w
   145  0806  0A84               	incf	4,f
   146  0807  1903               	skipnz
   147  0808  0AFF               	incf	btemp+1,f
   148  0809  0008               	return
   149  080A                     stringcode:	
   150  080A                     stringdir:	
   151  080A  3008               	movlw	high stringdir
   152  080B  008A               	movwf	10
   153  080C  0804               	movf	4,w
   154  080D  0A84               	incf	4,f
   155  080E  0782               	addwf	2,f
   156  080F                     __stringbase:	
   157  080F  3400               	retlw	0
   158  0810                     __end_of__stringtab:	
   159  0810                     _dpowers:	
   160  0810  3401               	retlw	1
   161  0811  3400               	retlw	0
   162  0812  340A               	retlw	10
   163  0813  3400               	retlw	0
   164  0814  3464               	retlw	100
   165  0815  3400               	retlw	0
   166  0816  34E8               	retlw	232
   167  0817  3403               	retlw	3
   168  0818  3410               	retlw	16
   169  0819  3427               	retlw	39
   170  081A                     __end_of_dpowers:	
   171  001F                     _ADCON0	set	31
   172  001E                     _ADRESH	set	30
   173  0005                     _PORTA	set	5
   174  0006                     _PORTB	set	6
   175  0007                     _PORTC	set	7
   176  0008                     _PORTD	set	8
   177  005F                     _GIE	set	95
   178  00FA                     _GO_DONE	set	250
   179  005C                     _INTE	set	92
   180  0059                     _INTF	set	89
   181  0031                     _RB1	set	49
   182  0032                     _RB2	set	50
   183  0038                     _RC0	set	56
   184  0039                     _RC1	set	57
   185  003A                     _RC2	set	58
   186  009F                     _ADCON1	set	159
   187  009E                     _ADRESL	set	158
   188  0081                     _OPTION_REG	set	129
   189  0085                     _TRISA	set	133
   190  0086                     _TRISB	set	134
   191  0087                     _TRISC	set	135
   192  0088                     _TRISD	set	136
   193  040E                     _INTEDG	set	1038
   194  081A                     __stringdata:	
   195  081A                     STR_3:	
   196  081A  344D               	retlw	77	;'M'
   197  081B  344F               	retlw	79	;'O'
   198  081C  3444               	retlw	68	;'D'
   199  081D  3445               	retlw	69	;'E'
   200  081E  343A               	retlw	58	;':'
   201  081F  3420               	retlw	32	;' '
   202  0820  3441               	retlw	65	;'A'
   203  0821  3444               	retlw	68	;'D'
   204  0822  3444               	retlw	68	;'D'
   205  0823  3449               	retlw	73	;'I'
   206  0824  3454               	retlw	84	;'T'
   207  0825  3449               	retlw	73	;'I'
   208  0826  344F               	retlw	79	;'O'
   209  0827  344E               	retlw	78	;'N'
   210  0828  3441               	retlw	65	;'A'
   211  0829  344C               	retlw	76	;'L'
   212  082A  3420               	retlw	32	;' '
   213  082B  3449               	retlw	73	;'I'
   214  082C  344E               	retlw	78	;'N'
   215  082D  3446               	retlw	70	;'F'
   216  082E  344F               	retlw	79	;'O'
   217  082F  3400               	retlw	0
   218  0830                     STR_4:	
   219  0830  344D               	retlw	77	;'M'
   220  0831  344F               	retlw	79	;'O'
   221  0832  3444               	retlw	68	;'D'
   222  0833  3445               	retlw	69	;'E'
   223  0834  343A               	retlw	58	;':'
   224  0835  3420               	retlw	32	;' '
   225  0836  3453               	retlw	83	;'S'
   226  0837  3445               	retlw	69	;'E'
   227  0838  3454               	retlw	84	;'T'
   228  0839  3420               	retlw	32	;' '
   229  083A  3441               	retlw	65	;'A'
   230  083B  3443               	retlw	67	;'C'
   231  083C  3454               	retlw	84	;'T'
   232  083D  3449               	retlw	73	;'I'
   233  083E  3456               	retlw	86	;'V'
   234  083F  3445               	retlw	69	;'E'
   235  0840  3420               	retlw	32	;' '
   236  0841  3448               	retlw	72	;'H'
   237  0842  3452               	retlw	82	;'R'
   238  0843  3453               	retlw	83	;'S'
   239  0844  3400               	retlw	0
   240  0845                     STR_12:	
   241  0845  3454               	retlw	84	;'T'
   242  0846  3469               	retlw	105	;'i'
   243  0847  346D               	retlw	109	;'m'
   244  0848  3465               	retlw	101	;'e'
   245  0849  343A               	retlw	58	;':'
   246  084A  3420               	retlw	32	;' '
   247  084B  3425               	retlw	37	;'%'
   248  084C  3430               	retlw	48	;'0'
   249  084D  3432               	retlw	50	;'2'
   250  084E  3464               	retlw	100	;'d'
   251  084F  343A               	retlw	58	;':'
   252  0850  3425               	retlw	37	;'%'
   253  0851  3430               	retlw	48	;'0'
   254  0852  3432               	retlw	50	;'2'
   255  0853  3464               	retlw	100	;'d'
   256  0854  3420               	retlw	32	;' '
   257  0855  3420               	retlw	32	;' '
   258  0856  3420               	retlw	32	;' '
   259  0857  3420               	retlw	32	;' '
   260  0858  3400               	retlw	0
   261  0859                     STR_2:	
   262  0859  344D               	retlw	77	;'M'
   263  085A  344F               	retlw	79	;'O'
   264  085B  3444               	retlw	68	;'D'
   265  085C  3445               	retlw	69	;'E'
   266  085D  343A               	retlw	58	;':'
   267  085E  3420               	retlw	32	;' '
   268  085F  3444               	retlw	68	;'D'
   269  0860  3449               	retlw	73	;'I'
   270  0861  3453               	retlw	83	;'S'
   271  0862  3450               	retlw	80	;'P'
   272  0863  344C               	retlw	76	;'L'
   273  0864  3441               	retlw	65	;'A'
   274  0865  3459               	retlw	89	;'Y'
   275  0866  3420               	retlw	32	;' '
   276  0867  3453               	retlw	83	;'S'
   277  0868  3454               	retlw	84	;'T'
   278  0869  3441               	retlw	65	;'A'
   279  086A  3454               	retlw	84	;'T'
   280  086B  3400               	retlw	0
   281  086C                     STR_1:	
   282  086C  3449               	retlw	73	;'I'
   283  086D  344E               	retlw	78	;'N'
   284  086E  3449               	retlw	73	;'I'
   285  086F  3454               	retlw	84	;'T'
   286  0870  3449               	retlw	73	;'I'
   287  0871  3441               	retlw	65	;'A'
   288  0872  344C               	retlw	76	;'L'
   289  0873  3449               	retlw	73	;'I'
   290  0874  345A               	retlw	90	;'Z'
   291  0875  3449               	retlw	73	;'I'
   292  0876  344E               	retlw	78	;'N'
   293  0877  3447               	retlw	71	;'G'
   294  0878  342E               	retlw	46	;'.'
   295  0879  342E               	retlw	46	;'.'
   296  087A  342E               	retlw	46	;'.'
   297  087B  3400               	retlw	0
   298  087C                     STR_6:	
   299  087C  3441               	retlw	65	;'A'
   300  087D  3444               	retlw	68	;'D'
   301  087E  3443               	retlw	67	;'C'
   302  087F  343A               	retlw	58	;':'
   303  0880  3420               	retlw	32	;' '
   304  0881  3425               	retlw	37	;'%'
   305  0882  3464               	retlw	100	;'d'
   306  0883  3420               	retlw	32	;' '
   307  0884  3420               	retlw	32	;' '
   308  0885  3420               	retlw	32	;' '
   309  0886  3400               	retlw	0
   310  0887                     STR_7:	
   311  0887  3450               	retlw	80	;'P'
   312  0888  3450               	retlw	80	;'P'
   313  0889  344D               	retlw	77	;'M'
   314  088A  3420               	retlw	32	;' '
   315  088B  3448               	retlw	72	;'H'
   316  088C  3449               	retlw	73	;'I'
   317  088D  3447               	retlw	71	;'G'
   318  088E  3448               	retlw	72	;'H'
   319  088F  3421               	retlw	33	;'!'
   320  0890  3420               	retlw	32	;' '
   321  0891  3400               	retlw	0
   322  0892                     STR_8:	
   323  0892  3445               	retlw	69	;'E'
   324  0893  344E               	retlw	78	;'N'
   325  0894  3456               	retlw	86	;'V'
   326  0895  3420               	retlw	32	;' '
   327  0896  3453               	retlw	83	;'S'
   328  0897  3454               	retlw	84	;'T'
   329  0898  3441               	retlw	65	;'A'
   330  0899  3442               	retlw	66	;'B'
   331  089A  344C               	retlw	76	;'L'
   332  089B  3445               	retlw	69	;'E'
   333  089C  3400               	retlw	0
   334  089D                     STR_11:	
   335  089D  3425               	retlw	37	;'%'
   336  089E  3464               	retlw	100	;'d'
   337  089F  3420               	retlw	32	;' '
   338  08A0  3470               	retlw	112	;'p'
   339  08A1  3470               	retlw	112	;'p'
   340  08A2  346D               	retlw	109	;'m'
   341  08A3  3420               	retlw	32	;' '
   342  08A4  3420               	retlw	32	;' '
   343  08A5  3400               	retlw	0
   344  08A6                     STR_5:	
   345  08A6  3445               	retlw	69	;'E'
   346  08A7  3452               	retlw	82	;'R'
   347  08A8  3452               	retlw	82	;'R'
   348  08A9  344F               	retlw	79	;'O'
   349  08AA  3452               	retlw	82	;'R'
   350  08AB  3421               	retlw	33	;'!'
   351  08AC  3400               	retlw	0
   352  08AD                     STR_9:	
   353  08AD  3443               	retlw	67	;'C'
   354  08AE  344F               	retlw	79	;'O'
   355  08AF  3432               	retlw	50	;'2'
   356  08B0  343A               	retlw	58	;':'
   357  08B1  3420               	retlw	32	;' '
   358  08B2  3400               	retlw	0
   359  08B3                     STR_10:	
   360  08B3  3425               	retlw	37	;'%'
   361  08B4  3464               	retlw	100	;'d'
   362  08B5  3400               	retlw	0
   363  08B6                     __end_of__stringdata:	
   364                           
   365                           ; #config settings
   366  0000                     
   367                           	psect	cinit
   368  0015                     start_initialization:	
   369  0015                     __initialization:	
   370                           
   371                           ; Clear objects allocated to COMMON
   372  0015  01F5               	clrf	__pbssCOMMON& (0+127)
   373  0016  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   374  0017  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   375                           
   376                           ; Clear objects allocated to BANK0
   377  0018  01EC               	clrf	__pbssBANK0& (0+127)
   378  0019  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   379  001A  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   380  001B  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   381                           
   382                           ; Clear objects allocated to BANK1
   383  001C  1683               	bsf	3,5	;RP0=1, select bank1
   384  001D  1303               	bcf	3,6	;RP1=0, select bank1
   385  001E  01CA               	clrf	__pbssBANK1& (0+127)
   386  001F  01CB               	clrf	(__pbssBANK1+1)& (0+127)
   387                           
   388                           ; Initialize objects allocated to BANK0
   389  0020  1283               	bcf	3,5	;RP0=0, select bank0
   390  0021  1303               	bcf	3,6	;RP1=0, select bank0
   391  0022  120A  158A  21B8  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   392  0027  00E7               	movwf	__pdataBANK0& (0+127)
   393  0028  120A  158A  21B9  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   394  002D  00E8               	movwf	(__pdataBANK0+1)& (0+127)
   395  002E  120A  158A  21BA  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   396  0033  00E9               	movwf	(__pdataBANK0+2)& (0+127)
   397  0034  120A  158A  21BB  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   398  0039  00EA               	movwf	(__pdataBANK0+3)& (0+127)
   399  003A  120A  158A  21BC  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   400  003F  00EB               	movwf	(__pdataBANK0+4)& (0+127)
   401                           
   402                           ; Initialize objects allocated to COMMON
   403  0040  120A  158A  21B6  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   404  0045  00F8               	movwf	__pdataCOMMON& (0+127)
   405  0046  120A  158A  21B7   	fcall	__pidataCOMMON+1	;fetch initializer
   406  0049  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
   407  004A                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  004A                     __end_of__initialization:	
   411  004A  0183               	clrf	3
   412  004B  120A  158A  2C08   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssCOMMON
   415  0075                     __pbssCOMMON:	
   416  0075                     _PPM:	
   417  0075                     	ds	3
   418                           
   419                           	psect	dataCOMMON
   420  0078                     __pdataCOMMON:	
   421  0078                     _lastMode:	
   422  0078                     	ds	1
   423  0079                     _lastSel:	
   424  0079                     	ds	1
   425                           
   426                           	psect	bssBANK0
   427  006C                     __pbssBANK0:	
   428  006C                     _DEF_MINUTES:	
   429  006C                     	ds	2
   430  006E                     _mode:	
   431  006E                     	ds	1
   432  006F                     _sel:	
   433  006F                     	ds	1
   434                           
   435                           	psect	dataBANK0
   436  0067                     __pdataBANK0:	
   437  0067                     _ACTV_HOURS:	
   438  0067                     	ds	2
   439  0069                     _DEF_HOURS:	
   440  0069                     	ds	2
   441  006B                     _lastSelButtonState:	
   442  006B                     	ds	1
   443                           
   444                           	psect	bssBANK1
   445  00CA                     __pbssBANK1:	
   446  00CA                     _ACTV_MINS:	
   447  00CA                     	ds	2
   448                           
   449                           	psect	cstackBANK3
   450  0190                     __pcstackBANK3:	
   451  0190                     displayPPM@strBuffer:	
   452                           
   453                           ; 50 bytes @ 0x0
   454  0190                     	ds	50
   455  01C2                     displayPPM@ppmWhole:	
   456                           
   457                           ; 2 bytes @ 0x32
   458  01C2                     	ds	2
   459  01C4                     displayPPM@ppmFraction:	
   460                           
   461                           ; 2 bytes @ 0x34
   462  01C4                     	ds	2
   463  01C6                     displayPPM@bufPtr:	
   464                           
   465                           ; 1 bytes @ 0x36
   466  01C6                     	ds	1
   467                           
   468                           	psect	cstackBANK1
   469  00A0                     __pcstackBANK1:	
   470  00A0                     CalcMQ135@voltage:	
   471                           
   472                           ; 3 bytes @ 0x0
   473  00A0                     	ds	3
   474  00A3                     CalcMQ135@ratio6:	
   475                           
   476                           ; 3 bytes @ 0x3
   477  00A3                     	ds	3
   478  00A6                     _CalcMQ135$616:	
   479                           
   480                           ; 3 bytes @ 0x6
   481  00A6                     	ds	3
   482  00A9                     _CalcMQ135$617:	
   483                           
   484                           ; 3 bytes @ 0x9
   485  00A9                     	ds	3
   486  00AC                     _CalcMQ135$618:	
   487                           
   488                           ; 3 bytes @ 0xC
   489  00AC                     	ds	3
   490  00AF                     _CalcMQ135$619:	
   491                           
   492                           ; 3 bytes @ 0xF
   493  00AF                     	ds	3
   494  00B2                     _CalcMQ135$620:	
   495                           
   496                           ; 3 bytes @ 0x12
   497  00B2                     	ds	3
   498  00B5                     CalcMQ135@ratio2:	
   499                           
   500                           ; 3 bytes @ 0x15
   501  00B5                     	ds	3
   502  00B8                     CalcMQ135@ratio3:	
   503                           
   504                           ; 3 bytes @ 0x18
   505  00B8                     	ds	3
   506  00BB                     CalcMQ135@ratio4:	
   507                           
   508                           ; 3 bytes @ 0x1B
   509  00BB                     	ds	3
   510  00BE                     CalcMQ135@ratio5:	
   511                           
   512                           ; 3 bytes @ 0x1E
   513  00BE                     	ds	3
   514  00C1                     CalcMQ135@co2:	
   515                           
   516                           ; 3 bytes @ 0x21
   517  00C1                     	ds	3
   518  00C4                     CalcMQ135@ratio:	
   519                           
   520                           ; 3 bytes @ 0x24
   521  00C4                     	ds	3
   522  00C7                     ??_main:	
   523                           
   524                           ; 0 bytes @ 0x27
   525  00C7                     	ds	3
   526                           
   527                           	psect	cstackCOMMON
   528  0070                     __pcstackCOMMON:	
   529  0070                     ?_initADC:	
   530  0070                     ?_initLCD:	
   531                           ; 0 bytes @ 0x0
   532                           
   533  0070                     ?_initInterrupt:	
   534                           ; 0 bytes @ 0x0
   535                           
   536  0070                     ?_instCTRL:	
   537                           ; 0 bytes @ 0x0
   538                           
   539  0070                     ?_checkMode:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ?_checkSelButton:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ?_runTime:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ?_displayPPM:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ?_displayTime:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0070                     ?_checkSensors:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0070                     ?_isdigit:	
   558                           ; 0 bytes @ 0x0
   559                           
   560  0070                     ?_main:	
   561                           ; 1 bit 
   562                           
   563  0070                     ?_ISR:	
   564                           ; 0 bytes @ 0x0
   565                           
   566  0070                     ??_ISR:	
   567                           ; 0 bytes @ 0x0
   568                           
   569  0070                     ?_updateDisplay:	
   570                           ; 0 bytes @ 0x0
   571                           
   572  0070                     ?_dataCTRL:	
   573                           ; 0 bytes @ 0x0
   574                           
   575                           
   576                           ; 0 bytes @ 0x0
   577  0070                     	ds	5
   578                           
   579                           	psect	cstackBANK0
   580  0020                     __pcstackBANK0:	
   581  0020                     ??_initADC:	
   582  0020                     ??_initInterrupt:	
   583                           ; 0 bytes @ 0x0
   584                           
   585  0020                     ??_instCTRL:	
   586                           ; 0 bytes @ 0x0
   587                           
   588  0020                     ??_runTime:	
   589                           ; 0 bytes @ 0x0
   590                           
   591  0020                     ??_isdigit:	
   592                           ; 0 bytes @ 0x0
   593                           
   594  0020                     ??_dataCTRL:	
   595                           ; 0 bytes @ 0x0
   596                           
   597  0020                     ?___ftge:	
   598                           ; 0 bytes @ 0x0
   599                           
   600  0020                     ?_Read_ADC_MQ135:	
   601                           ; 1 bit 
   602                           
   603  0020                     ?___wmul:	
   604                           ; 2 bytes @ 0x0
   605                           
   606  0020                     ?___lwdiv:	
   607                           ; 2 bytes @ 0x0
   608                           
   609  0020                     ?___ftpack:	
   610                           ; 2 bytes @ 0x0
   611                           
   612  0020                     _isdigit$397:	
   613                           ; 3 bytes @ 0x0
   614                           
   615  0020                     ___wmul@multiplier:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0020                     ___lwdiv@divisor:	
   619                           ; 2 bytes @ 0x0
   620                           
   621  0020                     ___ftpack@arg:	
   622                           ; 2 bytes @ 0x0
   623                           
   624  0020                     ___ftge@ff1:	
   625                           ; 3 bytes @ 0x0
   626                           
   627                           
   628                           ; 3 bytes @ 0x0
   629  0020                     	ds	1
   630  0021                     instCTRL@CMD:	
   631  0021                     dataCTRL@DAT:	
   632                           ; 1 bytes @ 0x1
   633                           
   634  0021                     isdigit@c:	
   635                           ; 1 bytes @ 0x1
   636                           
   637                           
   638                           ; 1 bytes @ 0x1
   639  0021                     	ds	1
   640  0022                     ??_initLCD:	
   641  0022                     ?_printToLCD:	
   642                           ; 0 bytes @ 0x2
   643                           
   644  0022                     ??_checkMode:	
   645                           ; 0 bytes @ 0x2
   646                           
   647  0022                     ??_Read_ADC_MQ135:	
   648                           ; 0 bytes @ 0x2
   649                           
   650  0022                     printToLCD@str:	
   651                           ; 0 bytes @ 0x2
   652                           
   653  0022                     ___wmul@multiplicand:	
   654                           ; 2 bytes @ 0x2
   655                           
   656  0022                     ___lwdiv@dividend:	
   657                           ; 2 bytes @ 0x2
   658                           
   659                           
   660                           ; 2 bytes @ 0x2
   661  0022                     	ds	1
   662  0023                     ___ftpack@exp:	
   663  0023                     ___ftge@ff2:	
   664                           ; 1 bytes @ 0x3
   665                           
   666                           
   667                           ; 3 bytes @ 0x3
   668  0023                     	ds	1
   669  0024                     ??_printToLCD:	
   670  0024                     ??___wmul:	
   671                           ; 0 bytes @ 0x4
   672                           
   673  0024                     ??___lwdiv:	
   674                           ; 0 bytes @ 0x4
   675                           
   676  0024                     ___ftpack@sign:	
   677                           ; 0 bytes @ 0x4
   678                           
   679  0024                     ___wmul@product:	
   680                           ; 1 bytes @ 0x4
   681                           
   682                           
   683                           ; 2 bytes @ 0x4
   684  0024                     	ds	1
   685  0025                     ??___ftpack:	
   686  0025                     ___lwdiv@counter:	
   687                           ; 0 bytes @ 0x5
   688                           
   689                           
   690                           ; 1 bytes @ 0x5
   691  0025                     	ds	1
   692  0026                     ??___ftge:	
   693  0026                     ___lwdiv@quotient:	
   694                           ; 0 bytes @ 0x6
   695                           
   696                           
   697                           ; 2 bytes @ 0x6
   698  0026                     	ds	2
   699  0028                     ?___lwmod:	
   700  0028                     ?___awtoft:	
   701                           ; 2 bytes @ 0x8
   702                           
   703  0028                     ___awtoft@c:	
   704                           ; 3 bytes @ 0x8
   705                           
   706  0028                     ___lwmod@divisor:	
   707                           ; 2 bytes @ 0x8
   708                           
   709                           
   710                           ; 2 bytes @ 0x8
   711  0028                     	ds	2
   712  002A                     ___lwmod@dividend:	
   713                           
   714                           ; 2 bytes @ 0xA
   715  002A                     	ds	1
   716  002B                     ??___awtoft:	
   717                           
   718                           ; 0 bytes @ 0xB
   719  002B                     	ds	1
   720  002C                     ??_checkSensors:	
   721  002C                     ??___lwmod:	
   722                           ; 0 bytes @ 0xC
   723                           
   724                           
   725                           ; 0 bytes @ 0xC
   726  002C                     	ds	1
   727  002D                     ___awtoft@sign:	
   728  002D                     ___lwmod@counter:	
   729                           ; 1 bytes @ 0xD
   730                           
   731                           
   732                           ; 1 bytes @ 0xD
   733  002D                     	ds	1
   734  002E                     ?_sprintf:	
   735  002E                     ?___ftneg:	
   736                           ; 2 bytes @ 0xE
   737                           
   738  002E                     sprintf@sp:	
   739                           ; 3 bytes @ 0xE
   740                           
   741  002E                     ___ftneg@f1:	
   742                           ; 2 bytes @ 0xE
   743                           
   744                           
   745                           ; 3 bytes @ 0xE
   746  002E                     	ds	2
   747  0030                     sprintf@f:	
   748                           
   749                           ; 1 bytes @ 0x10
   750  0030                     	ds	1
   751  0031                     ??___ftneg:	
   752  0031                     ?___ftadd:	
   753                           ; 0 bytes @ 0x11
   754                           
   755  0031                     ___ftadd@f1:	
   756                           ; 3 bytes @ 0x11
   757                           
   758                           
   759                           ; 3 bytes @ 0x11
   760  0031                     	ds	3
   761  0034                     ___ftadd@f2:	
   762                           
   763                           ; 3 bytes @ 0x14
   764  0034                     	ds	1
   765  0035                     ??_sprintf:	
   766                           
   767                           ; 0 bytes @ 0x15
   768  0035                     	ds	2
   769  0037                     ??___ftadd:	
   770                           
   771                           ; 0 bytes @ 0x17
   772  0037                     	ds	1
   773  0038                     sprintf@ap:	
   774                           
   775                           ; 1 bytes @ 0x18
   776  0038                     	ds	1
   777  0039                     sprintf@prec:	
   778                           
   779                           ; 1 bytes @ 0x19
   780  0039                     	ds	1
   781  003A                     sprintf@ccnt:	
   782                           
   783                           ; 2 bytes @ 0x1A
   784  003A                     	ds	1
   785  003B                     ___ftadd@sign:	
   786                           
   787                           ; 1 bytes @ 0x1B
   788  003B                     	ds	1
   789  003C                     ___ftadd@exp2:	
   790  003C                     sprintf@_val:	
   791                           ; 1 bytes @ 0x1C
   792                           
   793                           
   794                           ; 4 bytes @ 0x1C
   795  003C                     	ds	1
   796  003D                     ___ftadd@exp1:	
   797                           
   798                           ; 1 bytes @ 0x1D
   799  003D                     	ds	1
   800  003E                     ?___ftmul:	
   801  003E                     ___ftmul@f1:	
   802                           ; 3 bytes @ 0x1E
   803                           
   804                           
   805                           ; 3 bytes @ 0x1E
   806  003E                     	ds	2
   807  0040                     sprintf@flag:	
   808                           
   809                           ; 1 bytes @ 0x20
   810  0040                     	ds	1
   811  0041                     sprintf@width:	
   812  0041                     ___ftmul@f2:	
   813                           ; 2 bytes @ 0x21
   814                           
   815                           
   816                           ; 3 bytes @ 0x21
   817  0041                     	ds	2
   818  0043                     sprintf@c:	
   819                           
   820                           ; 1 bytes @ 0x23
   821  0043                     	ds	1
   822  0044                     ??_displayTime:	
   823  0044                     ??___ftmul:	
   824                           ; 0 bytes @ 0x24
   825                           
   826                           
   827                           ; 0 bytes @ 0x24
   828  0044                     	ds	1
   829  0045                     displayTime@time:	
   830                           
   831                           ; 20 bytes @ 0x25
   832  0045                     	ds	3
   833  0048                     ___ftmul@exp:	
   834                           
   835                           ; 1 bytes @ 0x28
   836  0048                     	ds	1
   837  0049                     ___ftmul@f3_as_product:	
   838                           
   839                           ; 3 bytes @ 0x29
   840  0049                     	ds	3
   841  004C                     ___ftmul@cntr:	
   842                           
   843                           ; 1 bytes @ 0x2C
   844  004C                     	ds	1
   845  004D                     ___ftmul@sign:	
   846                           
   847                           ; 1 bytes @ 0x2D
   848  004D                     	ds	1
   849  004E                     ?___ftdiv:	
   850  004E                     ?___fttol:	
   851                           ; 3 bytes @ 0x2E
   852                           
   853  004E                     ___ftdiv@f2:	
   854                           ; 4 bytes @ 0x2E
   855                           
   856  004E                     ___fttol@f1:	
   857                           ; 3 bytes @ 0x2E
   858                           
   859                           
   860                           ; 3 bytes @ 0x2E
   861  004E                     	ds	3
   862  0051                     ___ftdiv@f1:	
   863                           
   864                           ; 3 bytes @ 0x31
   865  0051                     	ds	1
   866  0052                     ??___fttol:	
   867                           
   868                           ; 0 bytes @ 0x32
   869  0052                     	ds	2
   870  0054                     ??___ftdiv:	
   871                           
   872                           ; 0 bytes @ 0x34
   873  0054                     	ds	2
   874  0056                     ___fttol@sign1:	
   875                           
   876                           ; 1 bytes @ 0x36
   877  0056                     	ds	1
   878  0057                     ___fttol@lval:	
   879                           
   880                           ; 4 bytes @ 0x37
   881  0057                     	ds	1
   882  0058                     ___ftdiv@cntr:	
   883                           
   884                           ; 1 bytes @ 0x38
   885  0058                     	ds	1
   886  0059                     ___ftdiv@f3:	
   887                           
   888                           ; 3 bytes @ 0x39
   889  0059                     	ds	2
   890  005B                     ___fttol@exp1:	
   891                           
   892                           ; 1 bytes @ 0x3B
   893  005B                     	ds	1
   894  005C                     ___ftdiv@exp:	
   895                           
   896                           ; 1 bytes @ 0x3C
   897  005C                     	ds	1
   898  005D                     ___ftdiv@sign:	
   899                           
   900                           ; 1 bytes @ 0x3D
   901  005D                     	ds	1
   902  005E                     ?_CalcMQ135:	
   903  005E                     CalcMQ135@RAW_ADC:	
   904                           ; 3 bytes @ 0x3E
   905                           
   906                           
   907                           ; 2 bytes @ 0x3E
   908  005E                     	ds	3
   909  0061                     ??_displayPPM:	
   910  0061                     ??_CalcMQ135:	
   911                           ; 0 bytes @ 0x41
   912                           
   913                           
   914                           ; 0 bytes @ 0x41
   915  0061                     	ds	2
   916  0063                     ??_updateDisplay:	
   917                           
   918                           ; 0 bytes @ 0x43
   919  0063                     	ds	2
   920  0065                     ??_checkSelButton:	
   921                           
   922                           ; 0 bytes @ 0x45
   923  0065                     	ds	2
   924                           
   925                           	psect	maintext
   926  0C08                     __pmaintext:	
   927 ;;
   928 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   929 ;;
   930 ;; *************** function _main *****************
   931 ;; Defined at:
   932 ;;		line 26 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;		None
   935 ;; Auto vars:     Size  Location     Type
   936 ;;		None
   937 ;; Return value:  Size  Location     Type
   938 ;;		None               void
   939 ;; Registers used:
   940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   941 ;; Tracked objects:
   942 ;;		On entry : 17F/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   946 ;;      Params:         0       0       0       0       0
   947 ;;      Locals:         0       0       0       0       0
   948 ;;      Temps:          0       0       3       0       0
   949 ;;      Totals:         0       0       3       0       0
   950 ;;Total ram usage:        3 bytes
   951 ;; Hardware stack levels required when called:    7
   952 ;; This function calls:
   953 ;;		_checkMode
   954 ;;		_checkSelButton
   955 ;;		_initADC
   956 ;;		_initInterrupt
   957 ;;		_initLCD
   958 ;;		_instCTRL
   959 ;;		_printToLCD
   960 ;;		_runTime
   961 ;; This function is called by:
   962 ;;		Startup code after reset
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _main
   968  0C08                     _main:	
   969                           
   970                           ;main.c: 28: TRISA = 0xFF;
   971                           
   972                           ;incstack = 0
   973                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   974  0C08  30FF               	movlw	255
   975  0C09  1683               	bsf	3,5	;RP0=1, select bank1
   976  0C0A  1303               	bcf	3,6	;RP1=0, select bank1
   977  0C0B  0085               	movwf	5	;volatile
   978                           
   979                           ;main.c: 29: TRISB = 0xFB;
   980  0C0C  30FB               	movlw	251
   981  0C0D  0086               	movwf	6	;volatile
   982                           
   983                           ;main.c: 30: TRISC = 0x00;
   984  0C0E  0187               	clrf	7	;volatile
   985                           
   986                           ;main.c: 31: TRISD = 0x00;
   987  0C0F  0188               	clrf	8	;volatile
   988                           
   989                           ;main.c: 32: OPTION_REG = 0b11000000;
   990  0C10  30C0               	movlw	192
   991  0C11  0081               	movwf	1	;volatile
   992                           
   993                           ;main.c: 33: PORTA = 0x00;
   994  0C12  1283               	bcf	3,5	;RP0=0, select bank0
   995  0C13  1303               	bcf	3,6	;RP1=0, select bank0
   996  0C14  0185               	clrf	5	;volatile
   997                           
   998                           ;main.c: 34: PORTB = 0x00;
   999  0C15  0186               	clrf	6	;volatile
  1000                           
  1001                           ;main.c: 35: PORTC = 0x00;
  1002  0C16  0187               	clrf	7	;volatile
  1003                           
  1004                           ;main.c: 36: PORTD = 0x00;
  1005  0C17  0188               	clrf	8	;volatile
  1006                           
  1007                           ;main.c: 38: initADC();
  1008  0C18  120A  158A  21C4  120A  158A  	fcall	_initADC
  1009                           
  1010                           ;main.c: 39: initLCD();
  1011  0C1D  120A  118A  27DC  120A  158A  	fcall	_initLCD
  1012                           
  1013                           ;main.c: 40: initInterrupt();
  1014  0C22  120A  158A  21BD  120A  158A  	fcall	_initInterrupt
  1015                           
  1016                           ;main.c: 41: printToLCD("INITIALIZING...");
  1017  0C27  305D               	movlw	low (STR_1-__stringbase)
  1018  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0C2A  00A2               	movwf	printToLCD@str
  1021  0C2B  3080               	movlw	128
  1022  0C2C  00A3               	movwf	printToLCD@str+1
  1023  0C2D  120A  158A  22F4  120A  158A  	fcall	_printToLCD
  1024                           
  1025                           ;main.c: 42: _delay((unsigned long)((250)*(4000000/4000.0)));
  1026  0C32  3002               	movlw	2
  1027  0C33  1683               	bsf	3,5	;RP0=1, select bank1
  1028  0C34  1303               	bcf	3,6	;RP1=0, select bank1
  1029  0C35  00C9               	movwf	(??_main^(0+128)+2)
  1030  0C36  3045               	movlw	69
  1031  0C37  00C8               	movwf	(??_main^(0+128)+1)
  1032  0C38  30A9               	movlw	169
  1033  0C39  00C7               	movwf	??_main^(0+128)
  1034  0C3A                     u3517:	
  1035  0C3A  0BC7               	decfsz	??_main^(0+128),f
  1036  0C3B  2C3A               	goto	u3517
  1037  0C3C  0BC8               	decfsz	(??_main^(0+128)+1),f
  1038  0C3D  2C3A               	goto	u3517
  1039  0C3E  0BC9               	decfsz	(??_main^(0+128)+2),f
  1040  0C3F  2C3A               	goto	u3517
  1041  0C40  2C41               	nop2
  1042                           
  1043                           ;main.c: 43: instCTRL(0x01);
  1044  0C41  3001               	movlw	1
  1045  0C42  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  1046                           
  1047                           ;main.c: 44: _delay((unsigned long)((50)*(4000000/4000.0)));
  1048  0C47  3041               	movlw	65
  1049  0C48  1683               	bsf	3,5	;RP0=1, select bank1
  1050  0C49  1303               	bcf	3,6	;RP1=0, select bank1
  1051  0C4A  00C8               	movwf	(??_main^(0+128)+1)
  1052  0C4B  30EE               	movlw	238
  1053  0C4C  00C7               	movwf	??_main^(0+128)
  1054  0C4D                     u3527:	
  1055  0C4D  0BC7               	decfsz	??_main^(0+128),f
  1056  0C4E  2C4D               	goto	u3527
  1057  0C4F  0BC8               	decfsz	(??_main^(0+128)+1),f
  1058  0C50  2C4D               	goto	u3527
  1059  0C51  0000               	nop
  1060  0C52                     l2690:	
  1061                           ;main.c: 45: while (1)
  1062                           
  1063                           
  1064                           ;main.c: 46: {
  1065                           ;main.c: 47: checkMode();
  1066  0C52  120A  158A  223E  120A  158A  	fcall	_checkMode
  1067                           
  1068                           ;main.c: 48: checkSelButton();
  1069  0C57  120A  158A  22CF  120A  158A  	fcall	_checkSelButton
  1070                           
  1071                           ;main.c: 49: runTime();
  1072  0C5C  120A  158A  2355  120A  158A  	fcall	_runTime
  1073  0C61  2C52               	goto	l2690
  1074  0C62                     __end_of_main:	
  1075                           
  1076                           	psect	text1
  1077  0B55                     __ptext1:	
  1078 ;; *************** function _runTime *****************
  1079 ;; Defined at:
  1080 ;;		line 298 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;		None
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;		None
  1085 ;; Return value:  Size  Location     Type
  1086 ;;		None               void
  1087 ;; Registers used:
  1088 ;;		wreg, status,2, btemp+1
  1089 ;; Tracked objects:
  1090 ;;		On entry : 0/0
  1091 ;;		On exit  : 0/0
  1092 ;;		Unchanged: 0/0
  1093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1094 ;;      Params:         0       0       0       0       0
  1095 ;;      Locals:         0       0       0       0       0
  1096 ;;      Temps:          0       2       0       0       0
  1097 ;;      Totals:         0       2       0       0       0
  1098 ;;Total ram usage:        2 bytes
  1099 ;; Hardware stack levels used:    1
  1100 ;; Hardware stack levels required when called:    1
  1101 ;; This function calls:
  1102 ;;		Nothing
  1103 ;; This function is called by:
  1104 ;;		_main
  1105 ;; This function uses a non-reentrant model
  1106 ;;
  1107                           
  1108                           
  1109                           ;psect for function _runTime
  1110  0B55                     _runTime:	
  1111                           
  1112                           ;main.c: 300: DEF_MINUTES++;
  1113                           
  1114                           ;incstack = 0
  1115                           ; Regs used in _runTime: [wreg+status,2+btemp+1]
  1116  0B55  3001               	movlw	1
  1117  0B56  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0B57  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0B58  07EC               	addwf	_DEF_MINUTES,f
  1120  0B59  1803               	skipnc
  1121  0B5A  0AED               	incf	_DEF_MINUTES+1,f
  1122  0B5B  3000               	movlw	0
  1123  0B5C  07ED               	addwf	_DEF_MINUTES+1,f
  1124                           
  1125                           ;main.c: 301: if (DEF_MINUTES >= 60)
  1126  0B5D  086D               	movf	_DEF_MINUTES+1,w
  1127  0B5E  3A80               	xorlw	128
  1128  0B5F  00FF               	movwf	127
  1129  0B60  3080               	movlw	128
  1130  0B61  027F               	subwf	127,w
  1131  0B62  1D03               	skipz
  1132  0B63  2B66               	goto	u3485
  1133  0B64  303C               	movlw	60
  1134  0B65  026C               	subwf	_DEF_MINUTES,w
  1135  0B66                     u3485:	
  1136  0B66  1C03               	skipc
  1137  0B67  0008               	return
  1138                           
  1139                           ;main.c: 302: {
  1140                           ;main.c: 303: DEF_MINUTES = 0;
  1141  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0B6A  01EC               	clrf	_DEF_MINUTES
  1144  0B6B  01ED               	clrf	_DEF_MINUTES+1
  1145                           
  1146                           ;main.c: 304: DEF_HOURS++;
  1147  0B6C  3001               	movlw	1
  1148  0B6D  07E9               	addwf	_DEF_HOURS,f
  1149  0B6E  1803               	skipnc
  1150  0B6F  0AEA               	incf	_DEF_HOURS+1,f
  1151  0B70  3000               	movlw	0
  1152  0B71  07EA               	addwf	_DEF_HOURS+1,f
  1153                           
  1154                           ;main.c: 305: if (DEF_HOURS >= 24)
  1155  0B72  086A               	movf	_DEF_HOURS+1,w
  1156  0B73  3A80               	xorlw	128
  1157  0B74  00FF               	movwf	127
  1158  0B75  3080               	movlw	128
  1159  0B76  027F               	subwf	127,w
  1160  0B77  1D03               	skipz
  1161  0B78  2B7B               	goto	u3495
  1162  0B79  3018               	movlw	24
  1163  0B7A  0269               	subwf	_DEF_HOURS,w
  1164  0B7B                     u3495:	
  1165  0B7B  1C03               	skipc
  1166  0B7C  2B81               	goto	l2660
  1167                           
  1168                           ;main.c: 306: {
  1169                           ;main.c: 307: DEF_HOURS = 0;
  1170  0B7D  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0B7E  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0B7F  01E9               	clrf	_DEF_HOURS
  1173  0B80  01EA               	clrf	_DEF_HOURS+1
  1174  0B81                     l2660:	
  1175                           
  1176                           ;main.c: 308: }
  1177                           ;main.c: 309: _delay((unsigned long)((50)*(4000000/4000.0)));
  1178  0B81  3041               	movlw	65
  1179  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0B84  00A1               	movwf	??_runTime+1
  1182  0B85  30EE               	movlw	238
  1183  0B86  00A0               	movwf	??_runTime
  1184  0B87                     u3537:	
  1185  0B87  0BA0               	decfsz	??_runTime,f
  1186  0B88  2B87               	goto	u3537
  1187  0B89  0BA1               	decfsz	??_runTime+1,f
  1188  0B8A  2B87               	goto	u3537
  1189  0B8B  0000               	nop
  1190  0B8C  0008               	return
  1191  0B8D                     __end_of_runTime:	
  1192                           
  1193                           	psect	text2
  1194  07DC                     __ptext2:	
  1195 ;; *************** function _initLCD *****************
  1196 ;; Defined at:
  1197 ;;		line 209 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;		None               void
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0, pclath, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1211 ;;      Params:         0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0
  1213 ;;      Temps:          0       1       0       0       0
  1214 ;;      Totals:         0       1       0       0       0
  1215 ;;Total ram usage:        1 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    2
  1218 ;; This function calls:
  1219 ;;		_instCTRL
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _initLCD
  1227  07DC                     _initLCD:	
  1228                           
  1229                           ;main.c: 211: instCTRL(0x38);
  1230                           
  1231                           ;incstack = 0
  1232                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1233  07DC  3038               	movlw	56
  1234  07DD  120A  158A  21E7  120A  118A  	fcall	_instCTRL
  1235                           
  1236                           ;main.c: 212: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1237  07E2  3010               	movlw	16
  1238  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  1239  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  1240  07E5  00A2               	movwf	??_initLCD
  1241  07E6                     u3547:	
  1242  07E6  0BA2               	decfsz	??_initLCD,f
  1243  07E7  2FE6               	goto	u3547
  1244  07E8  0000               	nop
  1245                           
  1246                           ;main.c: 213: instCTRL(0x0C);
  1247  07E9  300C               	movlw	12
  1248  07EA  120A  158A  21E7  120A  118A  	fcall	_instCTRL
  1249                           
  1250                           ;main.c: 214: instCTRL(0x01);
  1251  07EF  3001               	movlw	1
  1252  07F0  120A  158A  21E7  120A  118A  	fcall	_instCTRL
  1253                           
  1254                           ;main.c: 215: instCTRL(0x06);
  1255  07F5  3006               	movlw	6
  1256  07F6  120A  158A  21E7  120A  118A  	fcall	_instCTRL
  1257                           
  1258                           ;main.c: 216: instCTRL(0x0F);
  1259  07FB  300F               	movlw	15
  1260  07FC  120A  158A  21E7   	fcall	_instCTRL
  1261  07FF  0008               	return
  1262  0800                     __end_of_initLCD:	
  1263                           
  1264                           	psect	text3
  1265  09BD                     __ptext3:	
  1266 ;; *************** function _initInterrupt *****************
  1267 ;; Defined at:
  1268 ;;		line 66 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;		None               void
  1275 ;; Registers used:
  1276 ;;		None
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    1
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _initInterrupt
  1298  09BD                     _initInterrupt:	
  1299                           
  1300                           ;main.c: 68: GIE = 1;
  1301                           
  1302                           ;incstack = 0
  1303                           ; Regs used in _initInterrupt: []
  1304  09BD  178B               	bsf	11,7	;volatile
  1305                           
  1306                           ;main.c: 69: INTE = 1;
  1307  09BE  160B               	bsf	11,4	;volatile
  1308                           
  1309                           ;main.c: 70: INTF = 0;
  1310  09BF  108B               	bcf	11,1	;volatile
  1311                           
  1312                           ;main.c: 71: INTEDG = 0;
  1313  09C0  1683               	bsf	3,5	;RP0=1, select bank1
  1314  09C1  1303               	bcf	3,6	;RP1=0, select bank1
  1315  09C2  1301               	bcf	1,6	;volatile
  1316  09C3  0008               	return
  1317  09C4                     __end_of_initInterrupt:	
  1318                           
  1319                           	psect	text4
  1320  09C4                     __ptext4:	
  1321 ;; *************** function _initADC *****************
  1322 ;; Defined at:
  1323 ;;		line 60 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;		None
  1328 ;; Return value:  Size  Location     Type
  1329 ;;		None               void
  1330 ;; Registers used:
  1331 ;;		wreg
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1337 ;;      Params:         0       0       0       0       0
  1338 ;;      Locals:         0       0       0       0       0
  1339 ;;      Temps:          0       0       0       0       0
  1340 ;;      Totals:         0       0       0       0       0
  1341 ;;Total ram usage:        0 bytes
  1342 ;; Hardware stack levels used:    1
  1343 ;; Hardware stack levels required when called:    1
  1344 ;; This function calls:
  1345 ;;		Nothing
  1346 ;; This function is called by:
  1347 ;;		_main
  1348 ;; This function uses a non-reentrant model
  1349 ;;
  1350                           
  1351                           
  1352                           ;psect for function _initADC
  1353  09C4                     _initADC:	
  1354                           
  1355                           ;main.c: 62: ADCON1 = 0x80;
  1356                           
  1357                           ;incstack = 0
  1358                           ; Regs used in _initADC: [wreg]
  1359  09C4  3080               	movlw	128
  1360  09C5  1683               	bsf	3,5	;RP0=1, select bank1
  1361  09C6  1303               	bcf	3,6	;RP1=0, select bank1
  1362  09C7  009F               	movwf	31	;volatile
  1363                           
  1364                           ;main.c: 63: ADCON0 = 0x01;
  1365  09C8  3001               	movlw	1
  1366  09C9  1283               	bcf	3,5	;RP0=0, select bank0
  1367  09CA  1303               	bcf	3,6	;RP1=0, select bank0
  1368  09CB  009F               	movwf	31	;volatile
  1369  09CC  0008               	return
  1370  09CD                     __end_of_initADC:	
  1371                           
  1372                           	psect	text5
  1373  0ACF                     __ptext5:	
  1374 ;; *************** function _checkSelButton *****************
  1375 ;; Defined at:
  1376 ;;		line 172 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;		None               void
  1383 ;; Registers used:
  1384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1390 ;;      Params:         0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0
  1392 ;;      Temps:          0       2       0       0       0
  1393 ;;      Totals:         0       2       0       0       0
  1394 ;;Total ram usage:        2 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    6
  1397 ;; This function calls:
  1398 ;;		_updateDisplay
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           
  1405                           ;psect for function _checkSelButton
  1406  0ACF                     _checkSelButton:	
  1407                           
  1408                           ;main.c: 174: if (RB1 == 0 && lastSelButtonState == 1)
  1409                           
  1410                           ;incstack = 0
  1411                           ; Regs used in _checkSelButton: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1412  0ACF  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0AD0  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0AD1  1886               	btfsc	6,1	;volatile
  1415  0AD2  2AED               	goto	l2646
  1416  0AD3  086B               	movf	_lastSelButtonState,w
  1417  0AD4  3A01               	xorlw	1
  1418  0AD5  1D03               	skipz
  1419  0AD6  2AED               	goto	l2646
  1420                           
  1421                           ;main.c: 175: {
  1422                           ;main.c: 176: _delay((unsigned long)((20)*(4000000/4000.0)));
  1423  0AD7  301A               	movlw	26
  1424  0AD8  00E6               	movwf	??_checkSelButton+1
  1425  0AD9  30F8               	movlw	248
  1426  0ADA  00E5               	movwf	??_checkSelButton
  1427  0ADB                     u3557:	
  1428  0ADB  0BE5               	decfsz	??_checkSelButton,f
  1429  0ADC  2ADB               	goto	u3557
  1430  0ADD  0BE6               	decfsz	??_checkSelButton+1,f
  1431  0ADE  2ADB               	goto	u3557
  1432  0ADF  0000               	nop
  1433                           
  1434                           ;main.c: 177: if (RB1 == 0)
  1435  0AE0  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0AE1  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0AE2  1886               	btfsc	6,1	;volatile
  1438  0AE3  2AED               	goto	l2646
  1439                           
  1440                           ;main.c: 178: {
  1441                           ;main.c: 179: sel = (sel + 1) % 2;
  1442  0AE4  086F               	movf	_sel,w	;volatile
  1443  0AE5  3E01               	addlw	1
  1444  0AE6  3901               	andlw	1
  1445  0AE7  00E5               	movwf	??_checkSelButton
  1446  0AE8  0865               	movf	??_checkSelButton,w
  1447  0AE9  00EF               	movwf	_sel	;volatile
  1448                           
  1449                           ;main.c: 180: updateDisplay();
  1450  0AEA  120A  158A  252B   	fcall	_updateDisplay
  1451  0AED                     l2646:	
  1452                           
  1453                           ;main.c: 181: }
  1454                           ;main.c: 182: }
  1455                           ;main.c: 183: lastSelButtonState = RB1;
  1456  0AED  3000               	movlw	0
  1457  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0AF0  1886               	btfsc	6,1	;volatile
  1460  0AF1  3001               	movlw	1
  1461  0AF2  00EB               	movwf	_lastSelButtonState
  1462  0AF3  0008               	return
  1463  0AF4                     __end_of_checkSelButton:	
  1464                           
  1465                           	psect	text6
  1466  0D2B                     __ptext6:	
  1467 ;; *************** function _updateDisplay *****************
  1468 ;; Defined at:
  1469 ;;		line 85 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;		None
  1474 ;; Return value:  Size  Location     Type
  1475 ;;		None               void
  1476 ;; Registers used:
  1477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         0       0       0       0       0
  1485 ;;      Temps:          0       2       0       0       0
  1486 ;;      Totals:         0       2       0       0       0
  1487 ;;Total ram usage:        2 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    5
  1490 ;; This function calls:
  1491 ;;		_checkSensors
  1492 ;;		_displayPPM
  1493 ;;		_displayTime
  1494 ;;		_instCTRL
  1495 ;;		_printToLCD
  1496 ;; This function is called by:
  1497 ;;		_checkSelButton
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _updateDisplay
  1503  0D2B                     _updateDisplay:	
  1504                           
  1505                           ;main.c: 87: _delay((unsigned long)((50)*(4000000/4000.0)));
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in _updateDisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1509  0D2B  3041               	movlw	65
  1510  0D2C  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0D2D  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0D2E  00E4               	movwf	??_updateDisplay+1
  1513  0D2F  30EE               	movlw	238
  1514  0D30  00E3               	movwf	??_updateDisplay
  1515  0D31                     u3567:	
  1516  0D31  0BE3               	decfsz	??_updateDisplay,f
  1517  0D32  2D31               	goto	u3567
  1518  0D33  0BE4               	decfsz	??_updateDisplay+1,f
  1519  0D34  2D31               	goto	u3567
  1520  0D35  0000               	nop
  1521                           
  1522                           ;main.c: 88: instCTRL(0x80);
  1523  0D36  3080               	movlw	128
  1524  0D37  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  1525                           
  1526                           ;main.c: 89: instCTRL(0x0C);
  1527  0D3C  300C               	movlw	12
  1528  0D3D  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  1529                           
  1530                           ;main.c: 90: switch (mode)
  1531  0D42  2DA3               	goto	l2606
  1532  0D43                     l2580:	
  1533                           ;main.c: 94: {
  1534                           ;main.c: 95: case PG1:
  1535                           
  1536                           ;main.c: 93: switch (sel)
  1537                           
  1538                           ;main.c: 91: {
  1539                           ;main.c: 92: case DISP_CMN:
  1540                           
  1541                           
  1542                           ;main.c: 96: printToLCD("MODE: DISPLAY STAT");
  1543  0D43  304A               	movlw	low (STR_2-__stringbase)
  1544  0D44  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0D45  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0D46  00A2               	movwf	printToLCD@str
  1547  0D47  3080               	movlw	128
  1548  0D48  00A3               	movwf	printToLCD@str+1
  1549  0D49  120A  158A  22F4  120A  158A  	fcall	_printToLCD
  1550                           
  1551                           ;main.c: 97: instCTRL(0xC0);
  1552  0D4E  30C0               	movlw	192
  1553  0D4F  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  1554                           
  1555                           ;main.c: 98: displayPPM();
  1556  0D54  120A  118A  25D9  120A  158A  	fcall	_displayPPM
  1557                           
  1558                           ;main.c: 99: instCTRL(0x94);
  1559  0D59  3094               	movlw	148
  1560  0D5A  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  1561                           
  1562                           ;main.c: 100: displayTime();
  1563  0D5F  120A  158A  22AA  120A  158A  	fcall	_displayTime
  1564                           
  1565                           ;main.c: 101: break;
  1566  0D64  2DAD               	goto	l2608
  1567  0D65                     l2588:	
  1568                           ;main.c: 102: case PG2:
  1569                           
  1570                           
  1571                           ;main.c: 103: printToLCD("MODE: ADDITIONAL INFO");
  1572  0D65  300B               	movlw	low (STR_3-__stringbase)
  1573  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0D68  00A2               	movwf	printToLCD@str
  1576  0D69  3080               	movlw	128
  1577  0D6A  00A3               	movwf	printToLCD@str+1
  1578  0D6B  120A  158A  22F4  120A  158A  	fcall	_printToLCD
  1579                           
  1580                           ;main.c: 104: instCTRL(0xC0);
  1581  0D70  30C0               	movlw	192
  1582  0D71  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  1583                           
  1584                           ;main.c: 108: }
  1585                           
  1586                           ;main.c: 107: break;
  1587  0D76  2DAD               	goto	l2608
  1588  0D77                     l2594:	
  1589  0D77  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0D78  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0D79  086F               	movf	_sel,w	;volatile
  1592                           
  1593                           ; Switch size 1, requested type "space"
  1594                           ; Number of cases is 2, Range of values is 0 to 1
  1595                           ; switch strategies available:
  1596                           ; Name         Instructions Cycles
  1597                           ; simple_byte            7     4 (average)
  1598                           ; direct_byte           14     8 (fixed)
  1599                           ; jumptable            260     6 (fixed)
  1600                           ;	Chosen strategy is simple_byte
  1601  0D7A  3A00               	xorlw	0	; case 0
  1602  0D7B  1903               	skipnz
  1603  0D7C  2D43               	goto	l2580
  1604  0D7D  3A01               	xorlw	1	; case 1
  1605  0D7E  1903               	skipnz
  1606  0D7F  2D65               	goto	l2588
  1607  0D80  2DAD               	goto	l2608
  1608                           
  1609                           ;main.c: 109: break;
  1610  0D81  2DAD               	goto	l2608
  1611  0D82                     l2596:	
  1612                           ;main.c: 110: case SET_ACTV:
  1613                           
  1614                           
  1615                           ;main.c: 111: printToLCD("MODE: SET ACTIVE HRS");
  1616  0D82  3021               	movlw	low (STR_4-__stringbase)
  1617  0D83  00A2               	movwf	printToLCD@str
  1618  0D84  3080               	movlw	128
  1619  0D85  00A3               	movwf	printToLCD@str+1
  1620  0D86  120A  158A  22F4  120A  158A  	fcall	_printToLCD
  1621                           
  1622                           ;main.c: 112: instCTRL(0xC0);
  1623  0D8B  30C0               	movlw	192
  1624  0D8C  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  1625                           
  1626                           ;main.c: 113: displayTime();
  1627  0D91  120A  158A  22AA  120A  158A  	fcall	_displayTime
  1628                           
  1629                           ;main.c: 115: break;
  1630  0D96  2DAD               	goto	l2608
  1631  0D97                     l2602:	
  1632                           ;main.c: 116: default:
  1633                           
  1634                           
  1635                           ;main.c: 117: printToLCD("ERROR!");
  1636  0D97  3097               	movlw	low (STR_5-__stringbase)
  1637  0D98  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0D99  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0D9A  00A2               	movwf	printToLCD@str
  1640  0D9B  3080               	movlw	128
  1641  0D9C  00A3               	movwf	printToLCD@str+1
  1642  0D9D  120A  158A  22F4  120A  158A  	fcall	_printToLCD
  1643                           
  1644                           ;main.c: 119: }
  1645                           
  1646                           ;main.c: 118: break;
  1647  0DA2  2DAD               	goto	l2608
  1648  0DA3                     l2606:	
  1649  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  1651  0DA5  086E               	movf	_mode,w	;volatile
  1652                           
  1653                           ; Switch size 1, requested type "space"
  1654                           ; Number of cases is 2, Range of values is 0 to 1
  1655                           ; switch strategies available:
  1656                           ; Name         Instructions Cycles
  1657                           ; simple_byte            7     4 (average)
  1658                           ; direct_byte           14     8 (fixed)
  1659                           ; jumptable            260     6 (fixed)
  1660                           ;	Chosen strategy is simple_byte
  1661  0DA6  3A00               	xorlw	0	; case 0
  1662  0DA7  1903               	skipnz
  1663  0DA8  2D77               	goto	l2594
  1664  0DA9  3A01               	xorlw	1	; case 1
  1665  0DAA  1903               	skipnz
  1666  0DAB  2D82               	goto	l2596
  1667  0DAC  2D97               	goto	l2602
  1668  0DAD                     l2608:	
  1669                           
  1670                           ;main.c: 121: checkSensors();
  1671  0DAD  120A  158A  238D   	fcall	_checkSensors
  1672  0DB0  0008               	return
  1673  0DB1                     __end_of_updateDisplay:	
  1674                           
  1675                           	psect	text7
  1676  0AAA                     __ptext7:	
  1677 ;; *************** function _displayTime *****************
  1678 ;; Defined at:
  1679 ;;		line 291 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;  time           20   37[BANK0 ] unsigned char [20]
  1684 ;; Return value:  Size  Location     Type
  1685 ;;		None               void
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0       0       0       0
  1694 ;;      Locals:         0      20       0       0       0
  1695 ;;      Temps:          0       1       0       0       0
  1696 ;;      Totals:         0      21       0       0       0
  1697 ;;Total ram usage:       21 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    3
  1700 ;; This function calls:
  1701 ;;		_printToLCD
  1702 ;;		_sprintf
  1703 ;; This function is called by:
  1704 ;;		_updateDisplay
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           
  1709                           ;psect for function _displayTime
  1710  0AAA                     _displayTime:	
  1711                           
  1712                           ;main.c: 293: char time[20];
  1713                           ;main.c: 294: sprintf(time, "Time: %02d:%02d    ", DEF_HOURS, DEF_MINUTES);
  1714                           
  1715                           ;incstack = 0
  1716                           ; Regs used in _displayTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1717  0AAA  3045               	movlw	displayTime@time& (0+255)
  1718  0AAB  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0AAC  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0AAD  00AE               	movwf	sprintf@sp
  1721  0AAE  3000               	movlw	0
  1722  0AAF  00AF               	movwf	sprintf@sp+1
  1723  0AB0  3036               	movlw	(STR_12-__stringbase)& (0+255)
  1724  0AB1  00C4               	movwf	??_displayTime
  1725  0AB2  0844               	movf	??_displayTime,w
  1726  0AB3  00B0               	movwf	sprintf@f
  1727  0AB4  086A               	movf	_DEF_HOURS+1,w
  1728  0AB5  01B2               	clrf	?_sprintf+4
  1729  0AB6  07B2               	addwf	?_sprintf+4,f
  1730  0AB7  0869               	movf	_DEF_HOURS,w
  1731  0AB8  01B1               	clrf	?_sprintf+3
  1732  0AB9  07B1               	addwf	?_sprintf+3,f
  1733  0ABA  086D               	movf	_DEF_MINUTES+1,w
  1734  0ABB  01B4               	clrf	?_sprintf+6
  1735  0ABC  07B4               	addwf	?_sprintf+6,f
  1736  0ABD  086C               	movf	_DEF_MINUTES,w
  1737  0ABE  01B3               	clrf	?_sprintf+5
  1738  0ABF  07B3               	addwf	?_sprintf+5,f
  1739  0AC0  120A  118A  23F5  120A  158A  	fcall	_sprintf
  1740                           
  1741                           ;main.c: 295: printToLCD(time);
  1742  0AC5  3045               	movlw	displayTime@time& (0+255)
  1743  0AC6  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0AC7  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0AC8  00A2               	movwf	printToLCD@str
  1746  0AC9  3000               	movlw	0
  1747  0ACA  00A3               	movwf	printToLCD@str+1
  1748  0ACB  120A  158A  22F4   	fcall	_printToLCD
  1749  0ACE  0008               	return
  1750  0ACF                     __end_of_displayTime:	
  1751                           
  1752                           	psect	text8
  1753  05D9                     __ptext8:	
  1754 ;; *************** function _displayPPM *****************
  1755 ;; Defined at:
  1756 ;;		line 260 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  strBuffer      50    0[BANK3 ] unsigned char [50]
  1761 ;;  ppmFraction     2   52[BANK3 ] int 
  1762 ;;  ppmWhole        2   50[BANK3 ] int 
  1763 ;;  bufPtr          1   54[BANK3 ] PTR unsigned char 
  1764 ;;		 -> displayPPM@strBuffer(50), 
  1765 ;; Return value:  Size  Location     Type
  1766 ;;		None               void
  1767 ;; Registers used:
  1768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1774 ;;      Params:         0       0       0       0       0
  1775 ;;      Locals:         0       0       0      55       0
  1776 ;;      Temps:          0       2       0       0       0
  1777 ;;      Totals:         0       2       0      55       0
  1778 ;;Total ram usage:       57 bytes
  1779 ;; Hardware stack levels used:    1
  1780 ;; Hardware stack levels required when called:    4
  1781 ;; This function calls:
  1782 ;;		_CalcMQ135
  1783 ;;		_Read_ADC_MQ135
  1784 ;;		___awtoft
  1785 ;;		___ftadd
  1786 ;;		___ftmul
  1787 ;;		___ftneg
  1788 ;;		___fttol
  1789 ;;		_printToLCD
  1790 ;;		_sprintf
  1791 ;; This function is called by:
  1792 ;;		_updateDisplay
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           
  1797                           ;psect for function _displayPPM
  1798  05D9                     _displayPPM:	
  1799                           
  1800                           ;main.c: 262: char strBuffer[50];
  1801                           ;main.c: 263: PPM = CalcMQ135(Read_ADC_MQ135());
  1802                           
  1803                           ;incstack = 0
  1804                           ; Regs used in _displayPPM: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1805  05D9  120A  158A  2223  120A  118A  	fcall	_Read_ADC_MQ135
  1806  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1807  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1808  05E0  0821               	movf	?_Read_ADC_MQ135+1,w
  1809  05E1  01DF               	clrf	CalcMQ135@RAW_ADC+1
  1810  05E2  07DF               	addwf	CalcMQ135@RAW_ADC+1,f
  1811  05E3  0820               	movf	?_Read_ADC_MQ135,w
  1812  05E4  01DE               	clrf	CalcMQ135@RAW_ADC
  1813  05E5  07DE               	addwf	CalcMQ135@RAW_ADC,f
  1814  05E6  120A  118A  204E  120A  118A  	fcall	_CalcMQ135
  1815  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1816  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1817  05ED  085E               	movf	?_CalcMQ135,w
  1818  05EE  00F5               	movwf	_PPM	;volatile
  1819  05EF  085F               	movf	?_CalcMQ135+1,w
  1820  05F0  00F6               	movwf	_PPM+1	;volatile
  1821  05F1  0860               	movf	?_CalcMQ135+2,w
  1822  05F2  00F7               	movwf	_PPM+2	;volatile
  1823                           
  1824                           ;main.c: 264: int ppmWhole = (int)PPM;
  1825  05F3  0875               	movf	_PPM,w	;volatile
  1826  05F4  00CE               	movwf	___fttol@f1
  1827  05F5  0876               	movf	_PPM+1,w	;volatile
  1828  05F6  00CF               	movwf	___fttol@f1+1
  1829  05F7  0877               	movf	_PPM+2,w	;volatile
  1830  05F8  00D0               	movwf	___fttol@f1+2
  1831  05F9  120A  158A  25B1  120A  118A  	fcall	___fttol
  1832  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1833  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0600  084F               	movf	?___fttol+1,w
  1835  0601  1683               	bsf	3,5	;RP0=1, select bank3
  1836  0602  1703               	bsf	3,6	;RP1=1, select bank3
  1837  0603  01C3               	clrf	(displayPPM@ppmWhole+1)^(0+384)
  1838  0604  07C3               	addwf	(displayPPM@ppmWhole+1)^(0+384),f
  1839  0605  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0606  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0607  084E               	movf	?___fttol,w
  1842  0608  1683               	bsf	3,5	;RP0=1, select bank3
  1843  0609  1703               	bsf	3,6	;RP1=1, select bank3
  1844  060A  01C2               	clrf	displayPPM@ppmWhole^(0+384)
  1845  060B  07C2               	addwf	displayPPM@ppmWhole^(0+384),f
  1846                           
  1847                           ;main.c: 265: int ppmFraction = (int)((PPM - ppmWhole) * 100);
  1848  060C  0843               	movf	(displayPPM@ppmWhole+1)^(0+384),w
  1849  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1850  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1851  060F  01A9               	clrf	___awtoft@c+1
  1852  0610  07A9               	addwf	___awtoft@c+1,f
  1853  0611  1683               	bsf	3,5	;RP0=1, select bank3
  1854  0612  1703               	bsf	3,6	;RP1=1, select bank3
  1855  0613  0842               	movf	displayPPM@ppmWhole^(0+384),w
  1856  0614  1283               	bcf	3,5	;RP0=0, select bank0
  1857  0615  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0616  01A8               	clrf	___awtoft@c
  1859  0617  07A8               	addwf	___awtoft@c,f
  1860  0618  120A  158A  2260  120A  118A  	fcall	___awtoft
  1861  061D  1283               	bcf	3,5	;RP0=0, select bank0
  1862  061E  1303               	bcf	3,6	;RP1=0, select bank0
  1863  061F  0828               	movf	?___awtoft,w
  1864  0620  00AE               	movwf	___ftneg@f1
  1865  0621  0829               	movf	?___awtoft+1,w
  1866  0622  00AF               	movwf	___ftneg@f1+1
  1867  0623  082A               	movf	?___awtoft+2,w
  1868  0624  00B0               	movwf	___ftneg@f1+2
  1869  0625  120A  158A  21CD  120A  118A  	fcall	___ftneg
  1870  062A  1283               	bcf	3,5	;RP0=0, select bank0
  1871  062B  1303               	bcf	3,6	;RP1=0, select bank0
  1872  062C  082E               	movf	?___ftneg,w
  1873  062D  00B4               	movwf	___ftadd@f2
  1874  062E  082F               	movf	?___ftneg+1,w
  1875  062F  00B5               	movwf	___ftadd@f2+1
  1876  0630  0830               	movf	?___ftneg+2,w
  1877  0631  00B6               	movwf	___ftadd@f2+2
  1878  0632  0875               	movf	_PPM,w	;volatile
  1879  0633  00B1               	movwf	___ftadd@f1
  1880  0634  0876               	movf	_PPM+1,w	;volatile
  1881  0635  00B2               	movwf	___ftadd@f1+1
  1882  0636  0877               	movf	_PPM+2,w	;volatile
  1883  0637  00B3               	movwf	___ftadd@f1+2
  1884  0638  120A  158A  26F7  120A  118A  	fcall	___ftadd
  1885  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1886  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1887  063F  0831               	movf	?___ftadd,w
  1888  0640  00C1               	movwf	___ftmul@f2
  1889  0641  0832               	movf	?___ftadd+1,w
  1890  0642  00C2               	movwf	___ftmul@f2+1
  1891  0643  0833               	movf	?___ftadd+2,w
  1892  0644  00C3               	movwf	___ftmul@f2+2
  1893  0645  3000               	movlw	0
  1894  0646  00BE               	movwf	___ftmul@f1
  1895  0647  30C8               	movlw	200
  1896  0648  00BF               	movwf	___ftmul@f1+1
  1897  0649  3042               	movlw	66
  1898  064A  00C0               	movwf	___ftmul@f1+2
  1899  064B  120A  118A  2709  120A  118A  	fcall	___ftmul
  1900  0650  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0651  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0652  083E               	movf	?___ftmul,w
  1903  0653  00CE               	movwf	___fttol@f1
  1904  0654  083F               	movf	?___ftmul+1,w
  1905  0655  00CF               	movwf	___fttol@f1+1
  1906  0656  0840               	movf	?___ftmul+2,w
  1907  0657  00D0               	movwf	___fttol@f1+2
  1908  0658  120A  158A  25B1  120A  118A  	fcall	___fttol
  1909  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1910  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1911  065F  084F               	movf	?___fttol+1,w
  1912  0660  1683               	bsf	3,5	;RP0=1, select bank3
  1913  0661  1703               	bsf	3,6	;RP1=1, select bank3
  1914  0662  01C5               	clrf	(displayPPM@ppmFraction+1)^(0+384)
  1915  0663  07C5               	addwf	(displayPPM@ppmFraction+1)^(0+384),f
  1916  0664  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0665  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0666  084E               	movf	?___fttol,w
  1919  0667  1683               	bsf	3,5	;RP0=1, select bank3
  1920  0668  1703               	bsf	3,6	;RP1=1, select bank3
  1921  0669  01C4               	clrf	displayPPM@ppmFraction^(0+384)
  1922  066A  07C4               	addwf	displayPPM@ppmFraction^(0+384),f
  1923                           
  1924                           ;main.c: 268: char *bufPtr = strBuffer;
  1925  066B  3090               	movlw	displayPPM@strBuffer& (0+255)
  1926  066C  1283               	bcf	3,5	;RP0=0, select bank0
  1927  066D  1303               	bcf	3,6	;RP1=0, select bank0
  1928  066E  00E1               	movwf	??_displayPPM
  1929  066F  0861               	movf	??_displayPPM,w
  1930  0670  1683               	bsf	3,5	;RP0=1, select bank3
  1931  0671  1703               	bsf	3,6	;RP1=1, select bank3
  1932  0672  00C6               	movwf	displayPPM@bufPtr^(0+384)
  1933                           
  1934                           ;main.c: 269: bufPtr += sprintf(bufPtr, "CO2: ");
  1935  0673  0846               	movf	displayPPM@bufPtr^(0+384),w
  1936  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0676  00AE               	movwf	sprintf@sp
  1939  0677  3001               	movlw	1
  1940  0678  00AF               	movwf	sprintf@sp+1
  1941  0679  309E               	movlw	(STR_9-__stringbase)& (0+255)
  1942  067A  00E1               	movwf	??_displayPPM
  1943  067B  0861               	movf	??_displayPPM,w
  1944  067C  00B0               	movwf	sprintf@f
  1945  067D  120A  118A  23F5  120A  118A  	fcall	_sprintf
  1946  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0684  082E               	movf	?_sprintf,w
  1949  0685  00E2               	movwf	??_displayPPM+1
  1950  0686  0862               	movf	??_displayPPM+1,w
  1951  0687  1683               	bsf	3,5	;RP0=1, select bank3
  1952  0688  1703               	bsf	3,6	;RP1=1, select bank3
  1953  0689  07C6               	addwf	displayPPM@bufPtr^(0+384),f
  1954                           
  1955                           ;main.c: 270: bufPtr += sprintf(bufPtr, "%d", ppmWhole);
  1956  068A  0846               	movf	displayPPM@bufPtr^(0+384),w
  1957  068B  1283               	bcf	3,5	;RP0=0, select bank0
  1958  068C  1303               	bcf	3,6	;RP1=0, select bank0
  1959  068D  00AE               	movwf	sprintf@sp
  1960  068E  3001               	movlw	1
  1961  068F  00AF               	movwf	sprintf@sp+1
  1962  0690  30A4               	movlw	(STR_10-__stringbase)& (0+255)
  1963  0691  00E1               	movwf	??_displayPPM
  1964  0692  0861               	movf	??_displayPPM,w
  1965  0693  00B0               	movwf	sprintf@f
  1966  0694  1683               	bsf	3,5	;RP0=1, select bank3
  1967  0695  1703               	bsf	3,6	;RP1=1, select bank3
  1968  0696  0843               	movf	(displayPPM@ppmWhole+1)^(0+384),w
  1969  0697  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0698  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0699  01B2               	clrf	?_sprintf+4
  1972  069A  07B2               	addwf	?_sprintf+4,f
  1973  069B  1683               	bsf	3,5	;RP0=1, select bank3
  1974  069C  1703               	bsf	3,6	;RP1=1, select bank3
  1975  069D  0842               	movf	displayPPM@ppmWhole^(0+384),w
  1976  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1977  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1978  06A0  01B1               	clrf	?_sprintf+3
  1979  06A1  07B1               	addwf	?_sprintf+3,f
  1980  06A2  120A  118A  23F5  120A  118A  	fcall	_sprintf
  1981  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  1982  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  1983  06A9  082E               	movf	?_sprintf,w
  1984  06AA  00E2               	movwf	??_displayPPM+1
  1985  06AB  0862               	movf	??_displayPPM+1,w
  1986  06AC  1683               	bsf	3,5	;RP0=1, select bank3
  1987  06AD  1703               	bsf	3,6	;RP1=1, select bank3
  1988  06AE  07C6               	addwf	displayPPM@bufPtr^(0+384),f
  1989                           
  1990                           ;main.c: 271: *bufPtr++ = '.';
  1991  06AF  302E               	movlw	46
  1992  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1993  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1994  06B2  00E1               	movwf	??_displayPPM
  1995  06B3  1683               	bsf	3,5	;RP0=1, select bank3
  1996  06B4  1703               	bsf	3,6	;RP1=1, select bank3
  1997  06B5  0846               	movf	displayPPM@bufPtr^(0+384),w
  1998  06B6  0084               	movwf	4
  1999  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  2000  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  2001  06B9  0861               	movf	??_displayPPM,w
  2002  06BA  1783               	bsf	3,7	;select IRP bank2
  2003  06BB  0080               	movwf	0
  2004  06BC  3001               	movlw	1
  2005  06BD  00E1               	movwf	??_displayPPM
  2006  06BE  0861               	movf	??_displayPPM,w
  2007  06BF  1683               	bsf	3,5	;RP0=1, select bank3
  2008  06C0  1703               	bsf	3,6	;RP1=1, select bank3
  2009  06C1  07C6               	addwf	displayPPM@bufPtr^(0+384),f
  2010                           
  2011                           ;main.c: 272: if (ppmFraction < 10)
  2012  06C2  0845               	movf	(displayPPM@ppmFraction+1)^(0+384),w
  2013  06C3  3A80               	xorlw	128
  2014  06C4  00FF               	movwf	127
  2015  06C5  3080               	movlw	128
  2016  06C6  027F               	subwf	127,w
  2017  06C7  1D03               	skipz
  2018  06C8  2ECB               	goto	u3425
  2019  06C9  300A               	movlw	10
  2020  06CA  0244               	subwf	displayPPM@ppmFraction^(0+384),w
  2021  06CB                     u3425:	
  2022  06CB  1803               	skipnc
  2023  06CC  2EE0               	goto	l2556
  2024                           
  2025                           ;main.c: 273: *bufPtr++ = '0';
  2026  06CD  3030               	movlw	48
  2027  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2028  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2029  06D0  00E1               	movwf	??_displayPPM
  2030  06D1  1683               	bsf	3,5	;RP0=1, select bank3
  2031  06D2  1703               	bsf	3,6	;RP1=1, select bank3
  2032  06D3  0846               	movf	displayPPM@bufPtr^(0+384),w
  2033  06D4  0084               	movwf	4
  2034  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2035  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2036  06D7  0861               	movf	??_displayPPM,w
  2037  06D8  1783               	bsf	3,7	;select IRP bank2
  2038  06D9  0080               	movwf	0
  2039  06DA  3001               	movlw	1
  2040  06DB  00E1               	movwf	??_displayPPM
  2041  06DC  0861               	movf	??_displayPPM,w
  2042  06DD  1683               	bsf	3,5	;RP0=1, select bank3
  2043  06DE  1703               	bsf	3,6	;RP1=1, select bank3
  2044  06DF  07C6               	addwf	displayPPM@bufPtr^(0+384),f
  2045  06E0                     l2556:	
  2046                           
  2047                           ;main.c: 274: sprintf(bufPtr, "%d ppm  ", ppmFraction);
  2048  06E0  1683               	bsf	3,5	;RP0=1, select bank3
  2049  06E1  1703               	bsf	3,6	;RP1=1, select bank3
  2050  06E2  0846               	movf	displayPPM@bufPtr^(0+384),w
  2051  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  2052  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  2053  06E5  00AE               	movwf	sprintf@sp
  2054  06E6  3001               	movlw	1
  2055  06E7  00AF               	movwf	sprintf@sp+1
  2056  06E8  308E               	movlw	(STR_11-__stringbase)& (0+255)
  2057  06E9  00E1               	movwf	??_displayPPM
  2058  06EA  0861               	movf	??_displayPPM,w
  2059  06EB  00B0               	movwf	sprintf@f
  2060  06EC  1683               	bsf	3,5	;RP0=1, select bank3
  2061  06ED  1703               	bsf	3,6	;RP1=1, select bank3
  2062  06EE  0845               	movf	(displayPPM@ppmFraction+1)^(0+384),w
  2063  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  2064  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  2065  06F1  01B2               	clrf	?_sprintf+4
  2066  06F2  07B2               	addwf	?_sprintf+4,f
  2067  06F3  1683               	bsf	3,5	;RP0=1, select bank3
  2068  06F4  1703               	bsf	3,6	;RP1=1, select bank3
  2069  06F5  0844               	movf	displayPPM@ppmFraction^(0+384),w
  2070  06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2071  06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2072  06F8  01B1               	clrf	?_sprintf+3
  2073  06F9  07B1               	addwf	?_sprintf+3,f
  2074  06FA  120A  118A  23F5  120A  118A  	fcall	_sprintf
  2075                           
  2076                           ;main.c: 276: printToLCD(strBuffer);
  2077  06FF  3090               	movlw	displayPPM@strBuffer& (0+255)
  2078  0700  1283               	bcf	3,5	;RP0=0, select bank0
  2079  0701  1303               	bcf	3,6	;RP1=0, select bank0
  2080  0702  00A2               	movwf	printToLCD@str
  2081  0703  3001               	movlw	1
  2082  0704  00A3               	movwf	printToLCD@str+1
  2083  0705  120A  158A  22F4   	fcall	_printToLCD
  2084  0708  0008               	return
  2085  0709                     __end_of_displayPPM:	
  2086                           
  2087                           	psect	text9
  2088  03F5                     __ptext9:	
  2089 ;; *************** function _sprintf *****************
  2090 ;; Defined at:
  2091 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  sp              2   14[BANK0 ] PTR unsigned char 
  2094 ;;		 -> displayTime@time(20), displayPPM@strBuffer(50), displayRawADC@buffer(30), 
  2095 ;;  f               1   16[BANK0 ] PTR const unsigned char 
  2096 ;;		 -> STR_12(20), STR_11(9), STR_10(3), STR_9(6), 
  2097 ;;		 -> STR_6(11), 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  _val            4   28[BANK0 ] struct .
  2100 ;;  width           2   33[BANK0 ] int 
  2101 ;;  ccnt            2   26[BANK0 ] int 
  2102 ;;  c               1   35[BANK0 ] char 
  2103 ;;  flag            1   32[BANK0 ] unsigned char 
  2104 ;;  prec            1   25[BANK0 ] char 
  2105 ;;  ap              1   24[BANK0 ] PTR void [1]
  2106 ;;		 -> ?_sprintf(2), 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  2   14[BANK0 ] int 
  2109 ;; Registers used:
  2110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         0       7       0       0       0
  2117 ;;      Locals:         0      12       0       0       0
  2118 ;;      Temps:          0       3       0       0       0
  2119 ;;      Totals:         0      22       0       0       0
  2120 ;;Total ram usage:       22 bytes
  2121 ;; Hardware stack levels used:    1
  2122 ;; Hardware stack levels required when called:    2
  2123 ;; This function calls:
  2124 ;;		___lwdiv
  2125 ;;		___lwmod
  2126 ;;		___wmul
  2127 ;;		_isdigit
  2128 ;; This function is called by:
  2129 ;;		_displayPPM
  2130 ;;		_displayTime
  2131 ;;		_displayRawADC
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _sprintf
  2137  03F5                     _sprintf:	
  2138                           
  2139                           ;doprnt.c: 494: va_list ap;
  2140                           ;doprnt.c: 499: signed char c;
  2141                           ;doprnt.c: 501: int width;
  2142                           ;doprnt.c: 506: signed char prec;
  2143                           ;doprnt.c: 508: unsigned char flag;
  2144                           ;doprnt.c: 510: int ccnt = 0;
  2145                           
  2146                           ;incstack = 0
  2147                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2148  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2149  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2150  03F7  01BA               	clrf	sprintf@ccnt
  2151  03F8  01BB               	clrf	sprintf@ccnt+1
  2152                           
  2153                           ;doprnt.c: 527: union {
  2154                           ;doprnt.c: 528: unsigned int _val;
  2155                           ;doprnt.c: 529: struct {
  2156                           ;doprnt.c: 530: const char * _cp;
  2157                           ;doprnt.c: 531: unsigned _len;
  2158                           ;doprnt.c: 532: } _str;
  2159                           ;doprnt.c: 533: } _val;
  2160                           ;doprnt.c: 542: *ap = __va_start();
  2161  03F9  3031               	movlw	(?_sprintf+3)& (0+255)
  2162  03FA  00B5               	movwf	??_sprintf
  2163  03FB  0835               	movf	??_sprintf,w
  2164  03FC  00B8               	movwf	sprintf@ap
  2165  03FD                     l2516:	
  2166                           ;doprnt.c: 545: while(c = *f++) {
  2167                           
  2168  03FD  3001               	movlw	1
  2169  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2170  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0400  07B0               	addwf	sprintf@f,f
  2172  0401  30FF               	movlw	-1
  2173  0402  0730               	addwf	sprintf@f,w
  2174  0403  0084               	movwf	4
  2175  0404  120A  158A  200A  120A  118A  	fcall	stringdir
  2176  0409  00B5               	movwf	??_sprintf
  2177  040A  0835               	movf	??_sprintf,w
  2178  040B  00C3               	movwf	sprintf@c
  2179  040C  08C3               	movf	sprintf@c,f
  2180  040D  1903               	btfsc	3,2
  2181  040E  2DCA               	goto	l2518
  2182                           
  2183                           ;doprnt.c: 547: if(c != '%')
  2184  040F  0843               	movf	sprintf@c,w
  2185  0410  3A25               	xorlw	37
  2186  0411  1903               	skipnz
  2187  0412  2C25               	goto	l2410
  2188                           
  2189                           ;doprnt.c: 549: {
  2190                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
  2191  0413  082E               	movf	sprintf@sp,w
  2192  0414  0084               	movwf	4
  2193  0415  1383               	bcf	3,7
  2194  0416  182F               	btfsc	sprintf@sp+1,0
  2195  0417  1783               	bsf	3,7
  2196  0418  0843               	movf	sprintf@c,w
  2197  0419  0080               	movwf	0
  2198  041A  3001               	movlw	1
  2199  041B  07AE               	addwf	sprintf@sp,f
  2200  041C  1803               	skipnc
  2201  041D  0AAF               	incf	sprintf@sp+1,f
  2202  041E  3001               	movlw	1
  2203  041F  07BA               	addwf	sprintf@ccnt,f
  2204  0420  1803               	skipnc
  2205  0421  0ABB               	incf	sprintf@ccnt+1,f
  2206  0422  3000               	movlw	0
  2207  0423  07BB               	addwf	sprintf@ccnt+1,f
  2208                           
  2209                           ;doprnt.c: 551: continue;
  2210  0424  2BFD               	goto	l2516
  2211  0425                     l2410:	
  2212                           
  2213                           ;doprnt.c: 552: }
  2214                           ;doprnt.c: 555: width = 0;
  2215  0425  01C1               	clrf	sprintf@width
  2216  0426  01C2               	clrf	sprintf@width+1
  2217                           
  2218                           ;doprnt.c: 557: flag = 0;
  2219  0427  01C0               	clrf	sprintf@flag
  2220                           
  2221                           ;doprnt.c: 560: switch(*f) {
  2222                           
  2223                           ;doprnt.c: 559: for(;;) {
  2224  0428  2C2E               	goto	l2416
  2225  0429                     l201:	
  2226                           ;doprnt.c: 588: case '0':
  2227                           
  2228                           
  2229                           ;doprnt.c: 589: flag |= 0x04;
  2230  0429  1540               	bsf	sprintf@flag,2
  2231                           
  2232                           ;doprnt.c: 590: f++;
  2233  042A  3001               	movlw	1
  2234  042B  00B5               	movwf	??_sprintf
  2235  042C  0835               	movf	??_sprintf,w
  2236  042D  07B0               	addwf	sprintf@f,f
  2237  042E                     l2416:	
  2238                           ;doprnt.c: 593: }
  2239                           
  2240                           ;doprnt.c: 591: continue;
  2241                           
  2242  042E  0830               	movf	sprintf@f,w
  2243  042F  0084               	movwf	4
  2244  0430  120A  158A  200A  120A  118A  	fcall	stringdir
  2245                           
  2246                           ; Switch size 1, requested type "space"
  2247                           ; Number of cases is 1, Range of values is 48 to 48
  2248                           ; switch strategies available:
  2249                           ; Name         Instructions Cycles
  2250                           ; simple_byte            4     3 (average)
  2251                           ; direct_byte           14    11 (fixed)
  2252                           ; jumptable            263     9 (fixed)
  2253                           ;	Chosen strategy is simple_byte
  2254  0435  3A30               	xorlw	48	; case 48
  2255  0436  1903               	skipnz
  2256  0437  2C29               	goto	l201
  2257  0438  2C39               	goto	l2418
  2258  0439                     l2418:	
  2259                           ;doprnt.c: 595: }
  2260                           
  2261                           ;doprnt.c: 594: break;
  2262                           
  2263                           
  2264                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  2265  0439  0830               	movf	sprintf@f,w
  2266  043A  0084               	movwf	4
  2267  043B  120A  158A  200A  120A  118A  	fcall	stringdir
  2268  0440  120A  158A  21D7  120A  118A  	fcall	_isdigit
  2269  0445  1C03               	btfss	3,0
  2270  0446  2C89               	goto	l2432
  2271                           
  2272                           ;doprnt.c: 607: width = 0;
  2273  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0449  01C1               	clrf	sprintf@width
  2276  044A  01C2               	clrf	sprintf@width+1
  2277  044B                     l2422:	
  2278                           ;doprnt.c: 608: do {
  2279                           
  2280                           
  2281                           ;doprnt.c: 609: width *= 10;
  2282  044B  300A               	movlw	10
  2283  044C  1283               	bcf	3,5	;RP0=0, select bank0
  2284  044D  1303               	bcf	3,6	;RP1=0, select bank0
  2285  044E  00A0               	movwf	___wmul@multiplier
  2286  044F  3000               	movlw	0
  2287  0450  00A1               	movwf	___wmul@multiplier+1
  2288  0451  0842               	movf	sprintf@width+1,w
  2289  0452  01A3               	clrf	___wmul@multiplicand+1
  2290  0453  07A3               	addwf	___wmul@multiplicand+1,f
  2291  0454  0841               	movf	sprintf@width,w
  2292  0455  01A2               	clrf	___wmul@multiplicand
  2293  0456  07A2               	addwf	___wmul@multiplicand,f
  2294  0457  120A  158A  2285  120A  118A  	fcall	___wmul
  2295  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2296  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2297  045E  0821               	movf	?___wmul+1,w
  2298  045F  01C2               	clrf	sprintf@width+1
  2299  0460  07C2               	addwf	sprintf@width+1,f
  2300  0461  0820               	movf	?___wmul,w
  2301  0462  01C1               	clrf	sprintf@width
  2302  0463  07C1               	addwf	sprintf@width,f
  2303                           
  2304                           ;doprnt.c: 610: width += *f++ - '0';
  2305  0464  0830               	movf	sprintf@f,w
  2306  0465  0084               	movwf	4
  2307  0466  120A  158A  200A  120A  118A  	fcall	stringdir
  2308  046B  3ED0               	addlw	208
  2309  046C  00B5               	movwf	??_sprintf
  2310  046D  30FF               	movlw	255
  2311  046E  1803               	skipnc
  2312  046F  3000               	movlw	0
  2313  0470  00B6               	movwf	??_sprintf+1
  2314  0471  0835               	movf	??_sprintf,w
  2315  0472  07C1               	addwf	sprintf@width,f
  2316  0473  1803               	skipnc
  2317  0474  0AC2               	incf	sprintf@width+1,f
  2318  0475  0836               	movf	??_sprintf+1,w
  2319  0476  07C2               	addwf	sprintf@width+1,f
  2320  0477  3001               	movlw	1
  2321  0478  00B5               	movwf	??_sprintf
  2322  0479  0835               	movf	??_sprintf,w
  2323  047A  07B0               	addwf	sprintf@f,f
  2324                           
  2325                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  2326  047B  0830               	movf	sprintf@f,w
  2327  047C  0084               	movwf	4
  2328  047D  120A  158A  200A  120A  118A  	fcall	stringdir
  2329  0482  120A  158A  21D7  120A  118A  	fcall	_isdigit
  2330  0487  1803               	btfsc	3,0
  2331  0488  2C4B               	goto	l2422
  2332  0489                     l2432:	
  2333                           ;doprnt.c: 831: }
  2334                           
  2335                           ;doprnt.c: 822: continue;
  2336                           
  2337                           ;doprnt.c: 811: default:
  2338                           
  2339                           ;doprnt.c: 707: case 'i':
  2340                           ;doprnt.c: 708: break;
  2341                           
  2342                           ;doprnt.c: 706: case 'd':
  2343                           
  2344                           ;doprnt.c: 647: goto alldone;
  2345                           
  2346                           ;doprnt.c: 646: case 0:
  2347                           
  2348                           ;doprnt.c: 617: }
  2349                           ;doprnt.c: 644: switch(c = *f++) {
  2350                           
  2351  0489  3001               	movlw	1
  2352  048A  1283               	bcf	3,5	;RP0=0, select bank0
  2353  048B  1303               	bcf	3,6	;RP1=0, select bank0
  2354  048C  07B0               	addwf	sprintf@f,f
  2355  048D  30FF               	movlw	-1
  2356  048E  0730               	addwf	sprintf@f,w
  2357  048F  0084               	movwf	4
  2358  0490  120A  158A  200A  120A  118A  	fcall	stringdir
  2359  0495  00C3               	movwf	sprintf@c
  2360                           
  2361                           ; Switch size 1, requested type "space"
  2362                           ; Number of cases is 3, Range of values is 0 to 105
  2363                           ; switch strategies available:
  2364                           ; Name         Instructions Cycles
  2365                           ; simple_byte           10     6 (average)
  2366                           ; jumptable            260     6 (fixed)
  2367                           ;	Chosen strategy is simple_byte
  2368  0496  3A00               	xorlw	0	; case 0
  2369  0497  1903               	skipnz
  2370  0498  2DCA               	goto	l2518
  2371  0499  3A64               	xorlw	100	; case 100
  2372  049A  1903               	skipnz
  2373  049B  2CA0               	goto	l2434
  2374  049C  3A0D               	xorlw	13	; case 105
  2375  049D  1903               	skipnz
  2376  049E  2CA0               	goto	l2434
  2377  049F  2BFD               	goto	l2516
  2378  04A0                     l2434:	
  2379                           
  2380                           ;doprnt.c: 1262: {
  2381                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2382  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  2383  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  2384  04A2  0838               	movf	sprintf@ap,w
  2385  04A3  0084               	movwf	4
  2386  04A4  1383               	bcf	3,7	;select IRP bank0
  2387  04A5  0800               	movf	0,w
  2388  04A6  00BC               	movwf	sprintf@_val
  2389  04A7  0A84               	incf	4,f
  2390  04A8  0800               	movf	0,w
  2391  04A9  00BD               	movwf	sprintf@_val+1
  2392  04AA  3002               	movlw	2
  2393  04AB  00B5               	movwf	??_sprintf
  2394  04AC  0835               	movf	??_sprintf,w
  2395  04AD  07B8               	addwf	sprintf@ap,f
  2396                           
  2397                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  2398  04AE  1FBD               	btfss	sprintf@_val+1,7
  2399  04AF  2CB9               	goto	l2444
  2400                           
  2401                           ;doprnt.c: 1271: flag |= 0x03;
  2402  04B0  3003               	movlw	3
  2403  04B1  00B5               	movwf	??_sprintf
  2404  04B2  0835               	movf	??_sprintf,w
  2405  04B3  04C0               	iorwf	sprintf@flag,f
  2406                           
  2407                           ;doprnt.c: 1272: _val._val = -_val._val;
  2408  04B4  09BC               	comf	sprintf@_val,f
  2409  04B5  09BD               	comf	sprintf@_val+1,f
  2410  04B6  0ABC               	incf	sprintf@_val,f
  2411  04B7  1903               	skipnz
  2412  04B8  0ABD               	incf	sprintf@_val+1,f
  2413  04B9                     l2444:	
  2414                           
  2415                           ;doprnt.c: 1273: }
  2416                           ;doprnt.c: 1275: }
  2417                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2418  04B9  01C3               	clrf	sprintf@c
  2419  04BA  0AC3               	incf	sprintf@c,f
  2420  04BB  0843               	movf	sprintf@c,w
  2421  04BC  3A05               	xorlw	5
  2422  04BD  1903               	btfsc	3,2
  2423  04BE  2CE0               	goto	l2456
  2424  04BF                     l2448:	
  2425                           
  2426                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2427  04BF  0843               	movf	sprintf@c,w
  2428  04C0  00B5               	movwf	??_sprintf
  2429  04C1  0735               	addwf	??_sprintf,w
  2430  04C2  3E01               	addlw	low (_dpowers-__stringbase)
  2431  04C3  0084               	movwf	4
  2432  04C4  120A  158A  200A  120A  118A  	fcall	stringdir
  2433  04C9  00B6               	movwf	??_sprintf+1
  2434  04CA  120A  158A  200A  120A  118A  	fcall	stringdir
  2435  04CF  00B7               	movwf	??_sprintf+2
  2436  04D0  0837               	movf	??_sprintf+2,w
  2437  04D1  023D               	subwf	sprintf@_val+1,w
  2438  04D2  1D03               	skipz
  2439  04D3  2CD6               	goto	u3275
  2440  04D4  0836               	movf	??_sprintf+1,w
  2441  04D5  023C               	subwf	sprintf@_val,w
  2442  04D6                     u3275:	
  2443  04D6  1C03               	btfss	3,0
  2444  04D7  2CE0               	goto	l2456
  2445                           
  2446                           ;doprnt.c: 1316: break;
  2447  04D8  3001               	movlw	1
  2448  04D9  00B5               	movwf	??_sprintf
  2449  04DA  0835               	movf	??_sprintf,w
  2450  04DB  07C3               	addwf	sprintf@c,f
  2451  04DC  0843               	movf	sprintf@c,w
  2452  04DD  3A05               	xorlw	5
  2453  04DE  1D03               	skipz
  2454  04DF  2CBF               	goto	l2448
  2455  04E0                     l2456:	
  2456                           
  2457                           ;doprnt.c: 1354: if(width && flag & 0x03)
  2458  04E0  0842               	movf	sprintf@width+1,w
  2459  04E1  0441               	iorwf	sprintf@width,w
  2460  04E2  1903               	skipnz
  2461  04E3  2CEE               	goto	l219
  2462  04E4  0840               	movf	sprintf@flag,w
  2463  04E5  3903               	andlw	3
  2464  04E6  1903               	btfsc	3,2
  2465  04E7  2CEE               	goto	l219
  2466                           
  2467                           ;doprnt.c: 1355: width--;
  2468  04E8  30FF               	movlw	255
  2469  04E9  07C1               	addwf	sprintf@width,f
  2470  04EA  1803               	skipnc
  2471  04EB  0AC2               	incf	sprintf@width+1,f
  2472  04EC  30FF               	movlw	255
  2473  04ED  07C2               	addwf	sprintf@width+1,f
  2474  04EE                     l219:	
  2475                           
  2476                           ;doprnt.c: 1390: if(width > c)
  2477  04EE  0843               	movf	sprintf@c,w
  2478  04EF  00B5               	movwf	??_sprintf
  2479  04F0  01B6               	clrf	??_sprintf+1
  2480  04F1  1BB5               	btfsc	??_sprintf,7
  2481  04F2  03B6               	decf	??_sprintf+1,f
  2482  04F3  0836               	movf	??_sprintf+1,w
  2483  04F4  3A80               	xorlw	128
  2484  04F5  00B7               	movwf	??_sprintf+2
  2485  04F6  0842               	movf	sprintf@width+1,w
  2486  04F7  3A80               	xorlw	128
  2487  04F8  0237               	subwf	??_sprintf+2,w
  2488  04F9  1D03               	skipz
  2489  04FA  2CFD               	goto	u3315
  2490  04FB  0841               	movf	sprintf@width,w
  2491  04FC  0235               	subwf	??_sprintf,w
  2492  04FD                     u3315:	
  2493  04FD  1803               	skipnc
  2494  04FE  2D0D               	goto	l2464
  2495                           
  2496                           ;doprnt.c: 1391: width -= c;
  2497  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  2498  0500  1303               	bcf	3,6	;RP1=0, select bank0
  2499  0501  0843               	movf	sprintf@c,w
  2500  0502  00B5               	movwf	??_sprintf
  2501  0503  01B6               	clrf	??_sprintf+1
  2502  0504  1BB5               	btfsc	??_sprintf,7
  2503  0505  03B6               	decf	??_sprintf+1,f
  2504  0506  0835               	movf	??_sprintf,w
  2505  0507  02C1               	subwf	sprintf@width,f
  2506  0508  0836               	movf	??_sprintf+1,w
  2507  0509  1C03               	skipc
  2508  050A  03C2               	decf	sprintf@width+1,f
  2509  050B  02C2               	subwf	sprintf@width+1,f
  2510  050C  2D11               	goto	l2466
  2511  050D                     l2464:	
  2512                           
  2513                           ;doprnt.c: 1392: else
  2514                           ;doprnt.c: 1393: width = 0;
  2515  050D  1283               	bcf	3,5	;RP0=0, select bank0
  2516  050E  1303               	bcf	3,6	;RP1=0, select bank0
  2517  050F  01C1               	clrf	sprintf@width
  2518  0510  01C2               	clrf	sprintf@width+1
  2519  0511                     l2466:	
  2520                           
  2521                           ;doprnt.c: 1396: if(flag & 0x04) {
  2522  0511  1D40               	btfss	sprintf@flag,2
  2523  0512  2D44               	goto	l2486
  2524                           
  2525                           ;doprnt.c: 1401: if(flag & 0x03)
  2526  0513  0840               	movf	sprintf@flag,w
  2527  0514  3903               	andlw	3
  2528  0515  1903               	btfsc	3,2
  2529  0516  2D28               	goto	l2476
  2530                           
  2531                           ;doprnt.c: 1402: ((*sp++ = ('-')),(++ccnt));
  2532  0517  082E               	movf	sprintf@sp,w
  2533  0518  0084               	movwf	4
  2534  0519  1383               	bcf	3,7
  2535  051A  182F               	btfsc	sprintf@sp+1,0
  2536  051B  1783               	bsf	3,7
  2537  051C  302D               	movlw	45
  2538  051D  0080               	movwf	0
  2539  051E  3001               	movlw	1
  2540  051F  07AE               	addwf	sprintf@sp,f
  2541  0520  1803               	skipnc
  2542  0521  0AAF               	incf	sprintf@sp+1,f
  2543  0522  3001               	movlw	1
  2544  0523  07BA               	addwf	sprintf@ccnt,f
  2545  0524  1803               	skipnc
  2546  0525  0ABB               	incf	sprintf@ccnt+1,f
  2547  0526  3000               	movlw	0
  2548  0527  07BB               	addwf	sprintf@ccnt+1,f
  2549  0528                     l2476:	
  2550                           
  2551                           ;doprnt.c: 1424: if(width)
  2552  0528  0842               	movf	sprintf@width+1,w
  2553  0529  0441               	iorwf	sprintf@width,w
  2554  052A  1903               	skipnz
  2555  052B  2D78               	goto	l2504
  2556                           
  2557                           ;doprnt.c: 1426: ((*sp++ = ('0')),(++ccnt));
  2558                           
  2559                           ;doprnt.c: 1425: do
  2560  052C  082E               	movf	sprintf@sp,w
  2561  052D  0084               	movwf	4
  2562  052E  1383               	bcf	3,7
  2563  052F  182F               	btfsc	sprintf@sp+1,0
  2564  0530  1783               	bsf	3,7
  2565  0531  3030               	movlw	48
  2566  0532  0080               	movwf	0
  2567  0533  3001               	movlw	1
  2568  0534  07AE               	addwf	sprintf@sp,f
  2569  0535  1803               	skipnc
  2570  0536  0AAF               	incf	sprintf@sp+1,f
  2571  0537  3001               	movlw	1
  2572  0538  07BA               	addwf	sprintf@ccnt,f
  2573  0539  1803               	skipnc
  2574  053A  0ABB               	incf	sprintf@ccnt+1,f
  2575  053B  3000               	movlw	0
  2576  053C  07BB               	addwf	sprintf@ccnt+1,f
  2577                           
  2578                           ;doprnt.c: 1427: while(--width);
  2579  053D  30FF               	movlw	255
  2580  053E  07C1               	addwf	sprintf@width,f
  2581  053F  1803               	skipnc
  2582  0540  0AC2               	incf	sprintf@width+1,f
  2583  0541  30FF               	movlw	255
  2584  0542  07C2               	addwf	sprintf@width+1,f
  2585  0543  2D28               	goto	l2476
  2586  0544                     l2486:	
  2587                           ;doprnt.c: 1429: } else
  2588                           
  2589                           
  2590                           ;doprnt.c: 1431: {
  2591                           ;doprnt.c: 1433: if(width
  2592                           ;doprnt.c: 1437: )
  2593  0544  0842               	movf	sprintf@width+1,w
  2594  0545  0441               	iorwf	sprintf@width,w
  2595  0546  1903               	skipnz
  2596  0547  2D63               	goto	l2496
  2597  0548                     l2488:	
  2598                           ;doprnt.c: 1438: do
  2599                           
  2600                           
  2601                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
  2602  0548  082E               	movf	sprintf@sp,w
  2603  0549  0084               	movwf	4
  2604  054A  1383               	bcf	3,7
  2605  054B  182F               	btfsc	sprintf@sp+1,0
  2606  054C  1783               	bsf	3,7
  2607  054D  3020               	movlw	32
  2608  054E  0080               	movwf	0
  2609  054F  3001               	movlw	1
  2610  0550  07AE               	addwf	sprintf@sp,f
  2611  0551  1803               	skipnc
  2612  0552  0AAF               	incf	sprintf@sp+1,f
  2613  0553  3001               	movlw	1
  2614  0554  07BA               	addwf	sprintf@ccnt,f
  2615  0555  1803               	skipnc
  2616  0556  0ABB               	incf	sprintf@ccnt+1,f
  2617  0557  3000               	movlw	0
  2618  0558  07BB               	addwf	sprintf@ccnt+1,f
  2619                           
  2620                           ;doprnt.c: 1440: while(--width);
  2621  0559  30FF               	movlw	255
  2622  055A  07C1               	addwf	sprintf@width,f
  2623  055B  1803               	skipnc
  2624  055C  0AC2               	incf	sprintf@width+1,f
  2625  055D  30FF               	movlw	255
  2626  055E  07C2               	addwf	sprintf@width+1,f
  2627  055F  0842               	movf	sprintf@width+1,w
  2628  0560  0441               	iorwf	sprintf@width,w
  2629  0561  1D03               	skipz
  2630  0562  2D48               	goto	l2488
  2631  0563                     l2496:	
  2632                           
  2633                           ;doprnt.c: 1447: if(flag & 0x03)
  2634  0563  0840               	movf	sprintf@flag,w
  2635  0564  3903               	andlw	3
  2636  0565  1903               	btfsc	3,2
  2637  0566  2D78               	goto	l2504
  2638                           
  2639                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
  2640  0567  082E               	movf	sprintf@sp,w
  2641  0568  0084               	movwf	4
  2642  0569  1383               	bcf	3,7
  2643  056A  182F               	btfsc	sprintf@sp+1,0
  2644  056B  1783               	bsf	3,7
  2645  056C  302D               	movlw	45
  2646  056D  0080               	movwf	0
  2647  056E  3001               	movlw	1
  2648  056F  07AE               	addwf	sprintf@sp,f
  2649  0570  1803               	skipnc
  2650  0571  0AAF               	incf	sprintf@sp+1,f
  2651  0572  3001               	movlw	1
  2652  0573  07BA               	addwf	sprintf@ccnt,f
  2653  0574  1803               	skipnc
  2654  0575  0ABB               	incf	sprintf@ccnt+1,f
  2655  0576  3000               	movlw	0
  2656  0577  07BB               	addwf	sprintf@ccnt+1,f
  2657  0578                     l2504:	
  2658                           
  2659                           ;doprnt.c: 1478: }
  2660                           ;doprnt.c: 1481: prec = c;
  2661  0578  0843               	movf	sprintf@c,w
  2662  0579  00B5               	movwf	??_sprintf
  2663  057A  0835               	movf	??_sprintf,w
  2664  057B  00B9               	movwf	sprintf@prec
  2665  057C                     l2514:	
  2666                           ;doprnt.c: 1483: while(prec--) {
  2667                           
  2668  057C  30FF               	movlw	-1
  2669  057D  00B5               	movwf	??_sprintf
  2670  057E  0835               	movf	??_sprintf,w
  2671  057F  07B9               	addwf	sprintf@prec,f
  2672  0580  0839               	movf	sprintf@prec,w
  2673  0581  3AFF               	xorlw	-1
  2674  0582  1903               	btfsc	3,2
  2675  0583  2BFD               	goto	l2516
  2676                           
  2677                           ;doprnt.c: 1487: {
  2678                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2679  0584  300A               	movlw	10
  2680  0585  00A8               	movwf	___lwmod@divisor
  2681  0586  3000               	movlw	0
  2682  0587  00A9               	movwf	___lwmod@divisor+1
  2683  0588  0839               	movf	sprintf@prec,w
  2684  0589  00B5               	movwf	??_sprintf
  2685  058A  0735               	addwf	??_sprintf,w
  2686  058B  3E01               	addlw	low (_dpowers-__stringbase)
  2687  058C  0084               	movwf	4
  2688  058D  120A  158A  200A  120A  118A  	fcall	stringdir
  2689  0592  00A0               	movwf	___lwdiv@divisor
  2690  0593  120A  158A  200A  120A  118A  	fcall	stringdir
  2691  0598  00A1               	movwf	___lwdiv@divisor+1
  2692  0599  083D               	movf	sprintf@_val+1,w
  2693  059A  01A3               	clrf	___lwdiv@dividend+1
  2694  059B  07A3               	addwf	___lwdiv@dividend+1,f
  2695  059C  083C               	movf	sprintf@_val,w
  2696  059D  01A2               	clrf	___lwdiv@dividend
  2697  059E  07A2               	addwf	___lwdiv@dividend,f
  2698  059F  120A  158A  23C8  120A  118A  	fcall	___lwdiv
  2699  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2700  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2701  05A6  0821               	movf	?___lwdiv+1,w
  2702  05A7  01AB               	clrf	___lwmod@dividend+1
  2703  05A8  07AB               	addwf	___lwmod@dividend+1,f
  2704  05A9  0820               	movf	?___lwdiv,w
  2705  05AA  01AA               	clrf	___lwmod@dividend
  2706  05AB  07AA               	addwf	___lwmod@dividend,f
  2707  05AC  120A  158A  231F  120A  118A  	fcall	___lwmod
  2708  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  2709  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  2710  05B3  0828               	movf	?___lwmod,w
  2711  05B4  3E30               	addlw	48
  2712  05B5  00B6               	movwf	??_sprintf+1
  2713  05B6  0836               	movf	??_sprintf+1,w
  2714  05B7  00C3               	movwf	sprintf@c
  2715                           
  2716                           ;doprnt.c: 1532: }
  2717                           ;doprnt.c: 1533: ((*sp++ = (c)),(++ccnt));
  2718  05B8  082E               	movf	sprintf@sp,w
  2719  05B9  0084               	movwf	4
  2720  05BA  1383               	bcf	3,7
  2721  05BB  182F               	btfsc	sprintf@sp+1,0
  2722  05BC  1783               	bsf	3,7
  2723  05BD  0843               	movf	sprintf@c,w
  2724  05BE  0080               	movwf	0
  2725  05BF  3001               	movlw	1
  2726  05C0  07AE               	addwf	sprintf@sp,f
  2727  05C1  1803               	skipnc
  2728  05C2  0AAF               	incf	sprintf@sp+1,f
  2729  05C3  3001               	movlw	1
  2730  05C4  07BA               	addwf	sprintf@ccnt,f
  2731  05C5  1803               	skipnc
  2732  05C6  0ABB               	incf	sprintf@ccnt+1,f
  2733  05C7  3000               	movlw	0
  2734  05C8  07BB               	addwf	sprintf@ccnt+1,f
  2735  05C9  2D7C               	goto	l2514
  2736  05CA                     l2518:	
  2737                           ;doprnt.c: 1534: }
  2738                           ;doprnt.c: 1542: }
  2739                           ;doprnt.c: 1544: alldone:
  2740                           
  2741                           
  2742                           ;doprnt.c: 1547: *sp = 0;
  2743  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2744  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2745  05CC  082E               	movf	sprintf@sp,w
  2746  05CD  0084               	movwf	4
  2747  05CE  1783               	bsf	3,7
  2748  05CF  1C2F               	btfss	sprintf@sp+1,0
  2749  05D0  1383               	bcf	3,7
  2750  05D1  0180               	clrf	0
  2751                           
  2752                           ;doprnt.c: 1549: return ccnt;
  2753  05D2  083B               	movf	sprintf@ccnt+1,w
  2754  05D3  01AF               	clrf	?_sprintf+1
  2755  05D4  07AF               	addwf	?_sprintf+1,f
  2756  05D5  083A               	movf	sprintf@ccnt,w
  2757  05D6  01AE               	clrf	?_sprintf
  2758  05D7  07AE               	addwf	?_sprintf,f
  2759  05D8  0008               	return
  2760  05D9                     __end_of_sprintf:	
  2761                           
  2762                           	psect	text10
  2763  09D7                     __ptext10:	
  2764 ;; *************** function _isdigit *****************
  2765 ;; Defined at:
  2766 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  c               1    wreg     unsigned char 
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;  c               1    1[BANK0 ] unsigned char 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;		None               void
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, status,0
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2780 ;;      Params:         0       0       0       0       0
  2781 ;;      Locals:         0       2       0       0       0
  2782 ;;      Temps:          0       0       0       0       0
  2783 ;;      Totals:         0       2       0       0       0
  2784 ;;Total ram usage:        2 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    1
  2787 ;; This function calls:
  2788 ;;		Nothing
  2789 ;; This function is called by:
  2790 ;;		_sprintf
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           
  2795                           ;psect for function _isdigit
  2796  09D7                     _isdigit:	
  2797                           
  2798                           ;incstack = 0
  2799                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2800                           ;isdigit@c stored from wreg
  2801  09D7  1283               	bcf	3,5	;RP0=0, select bank0
  2802  09D8  1303               	bcf	3,6	;RP1=0, select bank0
  2803  09D9  00A1               	movwf	isdigit@c
  2804  09DA  01A0               	clrf	_isdigit$397
  2805  09DB  303A               	movlw	58
  2806  09DC  0221               	subwf	isdigit@c,w
  2807  09DD  1803               	skipnc
  2808  09DE  29E5               	goto	l2164
  2809  09DF  3030               	movlw	48
  2810  09E0  0221               	subwf	isdigit@c,w
  2811  09E1  1C03               	skipc
  2812  09E2  29E5               	goto	l2164
  2813  09E3  01A0               	clrf	_isdigit$397
  2814  09E4  0AA0               	incf	_isdigit$397,f
  2815  09E5                     l2164:	
  2816  09E5  0C20               	rrf	_isdigit$397,w
  2817  09E6  0008               	return
  2818  09E7                     __end_of_isdigit:	
  2819                           
  2820                           	psect	text11
  2821  0A85                     __ptext11:	
  2822 ;; *************** function ___wmul *****************
  2823 ;; Defined at:
  2824 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2827 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  product         2    4[BANK0 ] unsigned int 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  2    0[BANK0 ] unsigned int 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2839 ;;      Params:         0       4       0       0       0
  2840 ;;      Locals:         0       2       0       0       0
  2841 ;;      Temps:          0       0       0       0       0
  2842 ;;      Totals:         0       6       0       0       0
  2843 ;;Total ram usage:        6 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    1
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_sprintf
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function ___wmul
  2855  0A85                     ___wmul:	
  2856                           
  2857                           ;incstack = 0
  2858                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2859  0A85  1283               	bcf	3,5	;RP0=0, select bank0
  2860  0A86  1303               	bcf	3,6	;RP1=0, select bank0
  2861  0A87  01A4               	clrf	___wmul@product
  2862  0A88  01A5               	clrf	___wmul@product+1
  2863  0A89                     l2170:	
  2864  0A89  1C20               	btfss	___wmul@multiplier,0
  2865  0A8A  2A91               	goto	l320
  2866  0A8B  0822               	movf	___wmul@multiplicand,w
  2867  0A8C  07A4               	addwf	___wmul@product,f
  2868  0A8D  1803               	skipnc
  2869  0A8E  0AA5               	incf	___wmul@product+1,f
  2870  0A8F  0823               	movf	___wmul@multiplicand+1,w
  2871  0A90  07A5               	addwf	___wmul@product+1,f
  2872  0A91                     l320:	
  2873  0A91  3001               	movlw	1
  2874  0A92                     u2635:	
  2875  0A92  1003               	clrc
  2876  0A93  0DA2               	rlf	___wmul@multiplicand,f
  2877  0A94  0DA3               	rlf	___wmul@multiplicand+1,f
  2878  0A95  3EFF               	addlw	-1
  2879  0A96  1D03               	skipz
  2880  0A97  2A92               	goto	u2635
  2881  0A98  3001               	movlw	1
  2882  0A99                     u2645:	
  2883  0A99  1003               	clrc
  2884  0A9A  0CA1               	rrf	___wmul@multiplier+1,f
  2885  0A9B  0CA0               	rrf	___wmul@multiplier,f
  2886  0A9C  3EFF               	addlw	-1
  2887  0A9D  1D03               	skipz
  2888  0A9E  2A99               	goto	u2645
  2889  0A9F  0821               	movf	___wmul@multiplier+1,w
  2890  0AA0  0420               	iorwf	___wmul@multiplier,w
  2891  0AA1  1D03               	skipz
  2892  0AA2  2A89               	goto	l2170
  2893  0AA3  0825               	movf	___wmul@product+1,w
  2894  0AA4  01A1               	clrf	?___wmul+1
  2895  0AA5  07A1               	addwf	?___wmul+1,f
  2896  0AA6  0824               	movf	___wmul@product,w
  2897  0AA7  01A0               	clrf	?___wmul
  2898  0AA8  07A0               	addwf	?___wmul,f
  2899  0AA9  0008               	return
  2900  0AAA                     __end_of___wmul:	
  2901                           
  2902                           	psect	text12
  2903  0B1F                     __ptext12:	
  2904 ;; *************** function ___lwmod *****************
  2905 ;; Defined at:
  2906 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  divisor         2    8[BANK0 ] unsigned int 
  2909 ;;  dividend        2   10[BANK0 ] unsigned int 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  counter         1   13[BANK0 ] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2    8[BANK0 ] unsigned int 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       4       0       0       0
  2922 ;;      Locals:         0       1       0       0       0
  2923 ;;      Temps:          0       1       0       0       0
  2924 ;;      Totals:         0       6       0       0       0
  2925 ;;Total ram usage:        6 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_sprintf
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function ___lwmod
  2937  0B1F                     ___lwmod:	
  2938                           
  2939                           ;incstack = 0
  2940                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2941  0B1F  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0B20  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0B21  0829               	movf	___lwmod@divisor+1,w
  2944  0B22  0428               	iorwf	___lwmod@divisor,w
  2945  0B23  1903               	skipnz
  2946  0B24  2B4E               	goto	l1706
  2947  0B25  01AD               	clrf	___lwmod@counter
  2948  0B26  0AAD               	incf	___lwmod@counter,f
  2949  0B27                     l1696:	
  2950  0B27  1BA9               	btfsc	___lwmod@divisor+1,7
  2951  0B28  2B35               	goto	l1698
  2952  0B29  3001               	movlw	1
  2953  0B2A                     u1975:	
  2954  0B2A  1003               	clrc
  2955  0B2B  0DA8               	rlf	___lwmod@divisor,f
  2956  0B2C  0DA9               	rlf	___lwmod@divisor+1,f
  2957  0B2D  3EFF               	addlw	-1
  2958  0B2E  1D03               	skipz
  2959  0B2F  2B2A               	goto	u1975
  2960  0B30  3001               	movlw	1
  2961  0B31  00AC               	movwf	??___lwmod
  2962  0B32  082C               	movf	??___lwmod,w
  2963  0B33  07AD               	addwf	___lwmod@counter,f
  2964  0B34  2B27               	goto	l1696
  2965  0B35                     l1698:	
  2966  0B35  0829               	movf	___lwmod@divisor+1,w
  2967  0B36  022B               	subwf	___lwmod@dividend+1,w
  2968  0B37  1D03               	skipz
  2969  0B38  2B3B               	goto	u1995
  2970  0B39  0828               	movf	___lwmod@divisor,w
  2971  0B3A  022A               	subwf	___lwmod@dividend,w
  2972  0B3B                     u1995:	
  2973  0B3B  1C03               	skipc
  2974  0B3C  2B43               	goto	l1702
  2975  0B3D  0828               	movf	___lwmod@divisor,w
  2976  0B3E  02AA               	subwf	___lwmod@dividend,f
  2977  0B3F  0829               	movf	___lwmod@divisor+1,w
  2978  0B40  1C03               	skipc
  2979  0B41  03AB               	decf	___lwmod@dividend+1,f
  2980  0B42  02AB               	subwf	___lwmod@dividend+1,f
  2981  0B43                     l1702:	
  2982  0B43  3001               	movlw	1
  2983  0B44                     u2005:	
  2984  0B44  1003               	clrc
  2985  0B45  0CA9               	rrf	___lwmod@divisor+1,f
  2986  0B46  0CA8               	rrf	___lwmod@divisor,f
  2987  0B47  3EFF               	addlw	-1
  2988  0B48  1D03               	skipz
  2989  0B49  2B44               	goto	u2005
  2990  0B4A  3001               	movlw	1
  2991  0B4B  02AD               	subwf	___lwmod@counter,f
  2992  0B4C  1D03               	btfss	3,2
  2993  0B4D  2B35               	goto	l1698
  2994  0B4E                     l1706:	
  2995  0B4E  082B               	movf	___lwmod@dividend+1,w
  2996  0B4F  01A9               	clrf	?___lwmod+1
  2997  0B50  07A9               	addwf	?___lwmod+1,f
  2998  0B51  082A               	movf	___lwmod@dividend,w
  2999  0B52  01A8               	clrf	?___lwmod
  3000  0B53  07A8               	addwf	?___lwmod,f
  3001  0B54  0008               	return
  3002  0B55                     __end_of___lwmod:	
  3003                           
  3004                           	psect	text13
  3005  0BC8                     __ptext13:	
  3006 ;; *************** function ___lwdiv *****************
  3007 ;; Defined at:
  3008 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;  divisor         2    0[BANK0 ] unsigned int 
  3011 ;;  dividend        2    2[BANK0 ] unsigned int 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  quotient        2    6[BANK0 ] unsigned int 
  3014 ;;  counter         1    5[BANK0 ] unsigned char 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  2    0[BANK0 ] unsigned int 
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3024 ;;      Params:         0       4       0       0       0
  3025 ;;      Locals:         0       3       0       0       0
  3026 ;;      Temps:          0       1       0       0       0
  3027 ;;      Totals:         0       8       0       0       0
  3028 ;;Total ram usage:        8 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    1
  3031 ;; This function calls:
  3032 ;;		Nothing
  3033 ;; This function is called by:
  3034 ;;		_sprintf
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function ___lwdiv
  3040  0BC8                     ___lwdiv:	
  3041                           
  3042                           ;incstack = 0
  3043                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3044  0BC8  1283               	bcf	3,5	;RP0=0, select bank0
  3045  0BC9  1303               	bcf	3,6	;RP1=0, select bank0
  3046  0BCA  01A6               	clrf	___lwdiv@quotient
  3047  0BCB  01A7               	clrf	___lwdiv@quotient+1
  3048  0BCC  0821               	movf	___lwdiv@divisor+1,w
  3049  0BCD  0420               	iorwf	___lwdiv@divisor,w
  3050  0BCE  1903               	skipnz
  3051  0BCF  2C01               	goto	l2378
  3052  0BD0  01A5               	clrf	___lwdiv@counter
  3053  0BD1  0AA5               	incf	___lwdiv@counter,f
  3054  0BD2                     l2366:	
  3055  0BD2  1BA1               	btfsc	___lwdiv@divisor+1,7
  3056  0BD3  2BE0               	goto	l2368
  3057  0BD4  3001               	movlw	1
  3058  0BD5                     u3145:	
  3059  0BD5  1003               	clrc
  3060  0BD6  0DA0               	rlf	___lwdiv@divisor,f
  3061  0BD7  0DA1               	rlf	___lwdiv@divisor+1,f
  3062  0BD8  3EFF               	addlw	-1
  3063  0BD9  1D03               	skipz
  3064  0BDA  2BD5               	goto	u3145
  3065  0BDB  3001               	movlw	1
  3066  0BDC  00A4               	movwf	??___lwdiv
  3067  0BDD  0824               	movf	??___lwdiv,w
  3068  0BDE  07A5               	addwf	___lwdiv@counter,f
  3069  0BDF  2BD2               	goto	l2366
  3070  0BE0                     l2368:	
  3071  0BE0  3001               	movlw	1
  3072  0BE1                     u3165:	
  3073  0BE1  1003               	clrc
  3074  0BE2  0DA6               	rlf	___lwdiv@quotient,f
  3075  0BE3  0DA7               	rlf	___lwdiv@quotient+1,f
  3076  0BE4  3EFF               	addlw	-1
  3077  0BE5  1D03               	skipz
  3078  0BE6  2BE1               	goto	u3165
  3079  0BE7  0821               	movf	___lwdiv@divisor+1,w
  3080  0BE8  0223               	subwf	___lwdiv@dividend+1,w
  3081  0BE9  1D03               	skipz
  3082  0BEA  2BED               	goto	u3175
  3083  0BEB  0820               	movf	___lwdiv@divisor,w
  3084  0BEC  0222               	subwf	___lwdiv@dividend,w
  3085  0BED                     u3175:	
  3086  0BED  1C03               	skipc
  3087  0BEE  2BF6               	goto	l2374
  3088  0BEF  0820               	movf	___lwdiv@divisor,w
  3089  0BF0  02A2               	subwf	___lwdiv@dividend,f
  3090  0BF1  0821               	movf	___lwdiv@divisor+1,w
  3091  0BF2  1C03               	skipc
  3092  0BF3  03A3               	decf	___lwdiv@dividend+1,f
  3093  0BF4  02A3               	subwf	___lwdiv@dividend+1,f
  3094  0BF5  1426               	bsf	___lwdiv@quotient,0
  3095  0BF6                     l2374:	
  3096  0BF6  3001               	movlw	1
  3097  0BF7                     u3185:	
  3098  0BF7  1003               	clrc
  3099  0BF8  0CA1               	rrf	___lwdiv@divisor+1,f
  3100  0BF9  0CA0               	rrf	___lwdiv@divisor,f
  3101  0BFA  3EFF               	addlw	-1
  3102  0BFB  1D03               	skipz
  3103  0BFC  2BF7               	goto	u3185
  3104  0BFD  3001               	movlw	1
  3105  0BFE  02A5               	subwf	___lwdiv@counter,f
  3106  0BFF  1D03               	btfss	3,2
  3107  0C00  2BE0               	goto	l2368
  3108  0C01                     l2378:	
  3109  0C01  0827               	movf	___lwdiv@quotient+1,w
  3110  0C02  01A1               	clrf	?___lwdiv+1
  3111  0C03  07A1               	addwf	?___lwdiv+1,f
  3112  0C04  0826               	movf	___lwdiv@quotient,w
  3113  0C05  01A0               	clrf	?___lwdiv
  3114  0C06  07A0               	addwf	?___lwdiv,f
  3115  0C07  0008               	return
  3116  0C08                     __end_of___lwdiv:	
  3117                           
  3118                           	psect	text14
  3119  0DB1                     __ptext14:	
  3120 ;; *************** function ___fttol *****************
  3121 ;; Defined at:
  3122 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  f1              3   46[BANK0 ] float 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  lval            4   55[BANK0 ] unsigned long 
  3127 ;;  exp1            1   59[BANK0 ] unsigned char 
  3128 ;;  sign1           1   54[BANK0 ] unsigned char 
  3129 ;; Return value:  Size  Location     Type
  3130 ;;                  4   46[BANK0 ] long 
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3138 ;;      Params:         0       4       0       0       0
  3139 ;;      Locals:         0       6       0       0       0
  3140 ;;      Temps:          0       4       0       0       0
  3141 ;;      Totals:         0      14       0       0       0
  3142 ;;Total ram usage:       14 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    1
  3145 ;; This function calls:
  3146 ;;		Nothing
  3147 ;; This function is called by:
  3148 ;;		_displayPPM
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function ___fttol
  3154  0DB1                     ___fttol:	
  3155                           
  3156                           ;incstack = 0
  3157                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3158  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0DB3  084E               	movf	___fttol@f1,w
  3161  0DB4  00D2               	movwf	??___fttol
  3162  0DB5  084F               	movf	___fttol@f1+1,w
  3163  0DB6  00D3               	movwf	??___fttol+1
  3164  0DB7  0850               	movf	___fttol@f1+2,w
  3165  0DB8  00D4               	movwf	??___fttol+2
  3166  0DB9  1003               	clrc
  3167  0DBA  0D53               	rlf	??___fttol+1,w
  3168  0DBB  0D54               	rlf	??___fttol+2,w
  3169  0DBC  00D5               	movwf	??___fttol+3
  3170  0DBD  0855               	movf	??___fttol+3,w
  3171  0DBE  00DB               	movwf	___fttol@exp1
  3172  0DBF  08DB               	movf	___fttol@exp1,f
  3173  0DC0  1D03               	skipz
  3174  0DC1  2DCB               	goto	l1892
  3175  0DC2  3000               	movlw	0
  3176  0DC3  00D1               	movwf	?___fttol+3
  3177  0DC4  3000               	movlw	0
  3178  0DC5  00D0               	movwf	?___fttol+2
  3179  0DC6  3000               	movlw	0
  3180  0DC7  00CF               	movwf	?___fttol+1
  3181  0DC8  3000               	movlw	0
  3182  0DC9  00CE               	movwf	?___fttol
  3183  0DCA  0008               	return
  3184  0DCB                     l1892:	
  3185  0DCB  084E               	movf	___fttol@f1,w
  3186  0DCC  00D2               	movwf	??___fttol
  3187  0DCD  084F               	movf	___fttol@f1+1,w
  3188  0DCE  00D3               	movwf	??___fttol+1
  3189  0DCF  0850               	movf	___fttol@f1+2,w
  3190  0DD0  00D4               	movwf	??___fttol+2
  3191  0DD1  3017               	movlw	23
  3192  0DD2                     u2305:	
  3193  0DD2  1003               	clrc
  3194  0DD3  0CD4               	rrf	??___fttol+2,f
  3195  0DD4  0CD3               	rrf	??___fttol+1,f
  3196  0DD5  0CD2               	rrf	??___fttol,f
  3197  0DD6  3EFF               	addlw	-1
  3198  0DD7  1D03               	skipz
  3199  0DD8  2DD2               	goto	u2305
  3200  0DD9  0852               	movf	??___fttol,w
  3201  0DDA  00D5               	movwf	??___fttol+3
  3202  0DDB  0855               	movf	??___fttol+3,w
  3203  0DDC  00D6               	movwf	___fttol@sign1
  3204  0DDD  17CF               	bsf	___fttol@f1+1,7
  3205  0DDE  30FF               	movlw	255
  3206  0DDF  05CE               	andwf	___fttol@f1,f
  3207  0DE0  30FF               	movlw	255
  3208  0DE1  05CF               	andwf	___fttol@f1+1,f
  3209  0DE2  3000               	movlw	0
  3210  0DE3  05D0               	andwf	___fttol@f1+2,f
  3211  0DE4  084E               	movf	___fttol@f1,w
  3212  0DE5  00D7               	movwf	___fttol@lval
  3213  0DE6  084F               	movf	___fttol@f1+1,w
  3214  0DE7  00D8               	movwf	___fttol@lval+1
  3215  0DE8  0850               	movf	___fttol@f1+2,w
  3216  0DE9  00D9               	movwf	___fttol@lval+2
  3217  0DEA  01DA               	clrf	___fttol@lval+3
  3218  0DEB  308E               	movlw	142
  3219  0DEC  02DB               	subwf	___fttol@exp1,f
  3220  0DED  1FDB               	btfss	___fttol@exp1,7
  3221  0DEE  2E0D               	goto	l1912
  3222  0DEF  085B               	movf	___fttol@exp1,w
  3223  0DF0  3A80               	xorlw	128
  3224  0DF1  3E8F               	addlw	143
  3225  0DF2  1803               	skipnc
  3226  0DF3  2DFD               	goto	l1910
  3227  0DF4  3000               	movlw	0
  3228  0DF5  00D1               	movwf	?___fttol+3
  3229  0DF6  3000               	movlw	0
  3230  0DF7  00D0               	movwf	?___fttol+2
  3231  0DF8  3000               	movlw	0
  3232  0DF9  00CF               	movwf	?___fttol+1
  3233  0DFA  3000               	movlw	0
  3234  0DFB  00CE               	movwf	?___fttol
  3235  0DFC  0008               	return
  3236  0DFD                     l1910:	
  3237  0DFD  3001               	movlw	1
  3238  0DFE                     u2335:	
  3239  0DFE  1003               	clrc
  3240  0DFF  0CDA               	rrf	___fttol@lval+3,f
  3241  0E00  0CD9               	rrf	___fttol@lval+2,f
  3242  0E01  0CD8               	rrf	___fttol@lval+1,f
  3243  0E02  0CD7               	rrf	___fttol@lval,f
  3244  0E03  3EFF               	addlw	-1
  3245  0E04  1D03               	skipz
  3246  0E05  2DFE               	goto	u2335
  3247  0E06  3001               	movlw	1
  3248  0E07  00D2               	movwf	??___fttol
  3249  0E08  0852               	movf	??___fttol,w
  3250  0E09  07DB               	addwf	___fttol@exp1,f
  3251  0E0A  1903               	btfsc	3,2
  3252  0E0B  2E28               	goto	l1922
  3253  0E0C  2DFD               	goto	l1910
  3254  0E0D                     l1912:	
  3255  0E0D  3018               	movlw	24
  3256  0E0E  025B               	subwf	___fttol@exp1,w
  3257  0E0F  1C03               	skipc
  3258  0E10  2E25               	goto	l1920
  3259  0E11  3000               	movlw	0
  3260  0E12  00D1               	movwf	?___fttol+3
  3261  0E13  3000               	movlw	0
  3262  0E14  00D0               	movwf	?___fttol+2
  3263  0E15  3000               	movlw	0
  3264  0E16  00CF               	movwf	?___fttol+1
  3265  0E17  3000               	movlw	0
  3266  0E18  00CE               	movwf	?___fttol
  3267  0E19  0008               	return
  3268  0E1A                     l1918:	
  3269  0E1A  3001               	movlw	1
  3270  0E1B  00D2               	movwf	??___fttol
  3271  0E1C                     u2365:	
  3272  0E1C  1003               	clrc
  3273  0E1D  0DD7               	rlf	___fttol@lval,f
  3274  0E1E  0DD8               	rlf	___fttol@lval+1,f
  3275  0E1F  0DD9               	rlf	___fttol@lval+2,f
  3276  0E20  0DDA               	rlf	___fttol@lval+3,f
  3277  0E21  0BD2               	decfsz	??___fttol,f
  3278  0E22  2E1C               	goto	u2365
  3279  0E23  3001               	movlw	1
  3280  0E24  02DB               	subwf	___fttol@exp1,f
  3281  0E25                     l1920:	
  3282  0E25  08DB               	movf	___fttol@exp1,f
  3283  0E26  1D03               	skipz
  3284  0E27  2E1A               	goto	l1918
  3285  0E28                     l1922:	
  3286  0E28  0856               	movf	___fttol@sign1,w
  3287  0E29  1903               	btfsc	3,2
  3288  0E2A  2E36               	goto	l1926
  3289  0E2B  09D7               	comf	___fttol@lval,f
  3290  0E2C  09D8               	comf	___fttol@lval+1,f
  3291  0E2D  09D9               	comf	___fttol@lval+2,f
  3292  0E2E  09DA               	comf	___fttol@lval+3,f
  3293  0E2F  0AD7               	incf	___fttol@lval,f
  3294  0E30  1903               	skipnz
  3295  0E31  0AD8               	incf	___fttol@lval+1,f
  3296  0E32  1903               	skipnz
  3297  0E33  0AD9               	incf	___fttol@lval+2,f
  3298  0E34  1903               	skipnz
  3299  0E35  0ADA               	incf	___fttol@lval+3,f
  3300  0E36                     l1926:	
  3301  0E36  085A               	movf	___fttol@lval+3,w
  3302  0E37  00D1               	movwf	?___fttol+3
  3303  0E38  0859               	movf	___fttol@lval+2,w
  3304  0E39  00D0               	movwf	?___fttol+2
  3305  0E3A  0858               	movf	___fttol@lval+1,w
  3306  0E3B  00CF               	movwf	?___fttol+1
  3307  0E3C  0857               	movf	___fttol@lval,w
  3308  0E3D  00CE               	movwf	?___fttol
  3309  0E3E  0008               	return
  3310  0E3F                     __end_of___fttol:	
  3311                           
  3312                           	psect	text15
  3313  09CD                     __ptext15:	
  3314 ;; *************** function ___ftneg *****************
  3315 ;; Defined at:
  3316 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  f1              3   14[BANK0 ] float 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;		None
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  3   14[BANK0 ] float 
  3323 ;; Registers used:
  3324 ;;		wreg
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3330 ;;      Params:         0       3       0       0       0
  3331 ;;      Locals:         0       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0
  3333 ;;      Totals:         0       3       0       0       0
  3334 ;;Total ram usage:        3 bytes
  3335 ;; Hardware stack levels used:    1
  3336 ;; Hardware stack levels required when called:    1
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_displayPPM
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           
  3345                           ;psect for function ___ftneg
  3346  09CD                     ___ftneg:	
  3347                           
  3348                           ;incstack = 0
  3349                           ; Regs used in ___ftneg: [wreg]
  3350  09CD  1283               	bcf	3,5	;RP0=0, select bank0
  3351  09CE  1303               	bcf	3,6	;RP1=0, select bank0
  3352  09CF  0830               	movf	___ftneg@f1+2,w
  3353  09D0  042F               	iorwf	___ftneg@f1+1,w
  3354  09D1  042E               	iorwf	___ftneg@f1,w
  3355  09D2  1903               	skipnz
  3356  09D3  0008               	return
  3357  09D4  3080               	movlw	128
  3358  09D5  06B0               	xorwf	___ftneg@f1+2,f
  3359  09D6  0008               	return
  3360  09D7                     __end_of___ftneg:	
  3361                           
  3362                           	psect	text16
  3363  0A23                     __ptext16:	
  3364 ;; *************** function _Read_ADC_MQ135 *****************
  3365 ;; Defined at:
  3366 ;;		line 231 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;		None
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;		None
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  2    0[BANK0 ] int 
  3373 ;; Registers used:
  3374 ;;		wreg, status,2, status,0
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3380 ;;      Params:         0       2       0       0       0
  3381 ;;      Locals:         0       0       0       0       0
  3382 ;;      Temps:          0       2       0       0       0
  3383 ;;      Totals:         0       4       0       0       0
  3384 ;;Total ram usage:        4 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:    1
  3387 ;; This function calls:
  3388 ;;		Nothing
  3389 ;; This function is called by:
  3390 ;;		_displayPPM
  3391 ;;		_displayRawADC
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _Read_ADC_MQ135
  3397  0A23                     _Read_ADC_MQ135:	
  3398                           
  3399                           ;main.c: 233: _delay((unsigned long)((100)*(4000000/4000.0)));
  3400                           
  3401                           ;incstack = 0
  3402                           ; Regs used in _Read_ADC_MQ135: [wreg+status,2+status,0]
  3403  0A23  3082               	movlw	130
  3404  0A24  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0A25  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0A26  00A3               	movwf	??_Read_ADC_MQ135+1
  3407  0A27  30DD               	movlw	221
  3408  0A28  00A2               	movwf	??_Read_ADC_MQ135
  3409  0A29                     u3577:	
  3410  0A29  0BA2               	decfsz	??_Read_ADC_MQ135,f
  3411  0A2A  2A29               	goto	u3577
  3412  0A2B  0BA3               	decfsz	??_Read_ADC_MQ135+1,f
  3413  0A2C  2A29               	goto	u3577
  3414  0A2D  2A2E               	nop2
  3415                           
  3416                           ;main.c: 234: GO_DONE = 1;
  3417  0A2E  1283               	bcf	3,5	;RP0=0, select bank0
  3418  0A2F  1303               	bcf	3,6	;RP1=0, select bank0
  3419  0A30  151F               	bsf	31,2	;volatile
  3420  0A31                     l161:	
  3421                           ;main.c: 236: ;
  3422                           
  3423                           ;main.c: 235: while (GO_DONE)
  3424                           
  3425  0A31  191F               	btfsc	31,2	;volatile
  3426  0A32  2A31               	goto	l161
  3427                           
  3428                           ;main.c: 237: return ((ADRESH << 8) + ADRESL);
  3429  0A33  081E               	movf	30,w	;volatile
  3430  0A34  01A1               	clrf	?_Read_ADC_MQ135+1
  3431  0A35  07A1               	addwf	?_Read_ADC_MQ135+1,f
  3432  0A36  1683               	bsf	3,5	;RP0=1, select bank1
  3433  0A37  1303               	bcf	3,6	;RP1=0, select bank1
  3434  0A38  081E               	movf	30,w	;volatile
  3435  0A39  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0A3A  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0A3B  01A0               	clrf	?_Read_ADC_MQ135
  3438  0A3C  07A0               	addwf	?_Read_ADC_MQ135,f
  3439  0A3D  0008               	return
  3440  0A3E                     __end_of_Read_ADC_MQ135:	
  3441                           
  3442                           	psect	text17
  3443  004E                     __ptext17:	
  3444 ;; *************** function _CalcMQ135 *****************
  3445 ;; Defined at:
  3446 ;;		line 240 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;  RAW_ADC         2   62[BANK0 ] int 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  ratio           3   36[BANK1 ] float 
  3451 ;;  co2             3   33[BANK1 ] float 
  3452 ;;  ratio5          3   30[BANK1 ] float 
  3453 ;;  ratio4          3   27[BANK1 ] float 
  3454 ;;  ratio3          3   24[BANK1 ] float 
  3455 ;;  ratio2          3   21[BANK1 ] float 
  3456 ;;  ratio6          3    3[BANK1 ] float 
  3457 ;;  voltage         3    0[BANK1 ] float 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  3   62[BANK0 ] float 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0, pclath, cstack
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         0       3       0       0       0
  3468 ;;      Locals:         0       0      39       0       0
  3469 ;;      Temps:          0       0       0       0       0
  3470 ;;      Totals:         0       3      39       0       0
  3471 ;;Total ram usage:       42 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; Hardware stack levels required when called:    3
  3474 ;; This function calls:
  3475 ;;		___awtoft
  3476 ;;		___ftadd
  3477 ;;		___ftdiv
  3478 ;;		___ftmul
  3479 ;; This function is called by:
  3480 ;;		_displayPPM
  3481 ;; This function uses a non-reentrant model
  3482 ;;
  3483                           
  3484                           
  3485                           ;psect for function _CalcMQ135
  3486  004E                     _CalcMQ135:	
  3487                           
  3488                           ;main.c: 242: float voltage = (RAW_ADC * 5.0) / 1023.0;
  3489                           
  3490                           ;incstack = 0
  3491                           ; Regs used in _CalcMQ135: [wreg+status,2+status,0+pclath+cstack]
  3492  004E  30C0               	movlw	192
  3493  004F  1283               	bcf	3,5	;RP0=0, select bank0
  3494  0050  1303               	bcf	3,6	;RP1=0, select bank0
  3495  0051  00CE               	movwf	___ftdiv@f2
  3496  0052  307F               	movlw	127
  3497  0053  00CF               	movwf	___ftdiv@f2+1
  3498  0054  3044               	movlw	68
  3499  0055  00D0               	movwf	___ftdiv@f2+2
  3500  0056  3000               	movlw	0
  3501  0057  00BE               	movwf	___ftmul@f1
  3502  0058  30A0               	movlw	160
  3503  0059  00BF               	movwf	___ftmul@f1+1
  3504  005A  3040               	movlw	64
  3505  005B  00C0               	movwf	___ftmul@f1+2
  3506  005C  085F               	movf	CalcMQ135@RAW_ADC+1,w
  3507  005D  01A9               	clrf	___awtoft@c+1
  3508  005E  07A9               	addwf	___awtoft@c+1,f
  3509  005F  085E               	movf	CalcMQ135@RAW_ADC,w
  3510  0060  01A8               	clrf	___awtoft@c
  3511  0061  07A8               	addwf	___awtoft@c,f
  3512  0062  120A  158A  2260  120A  118A  	fcall	___awtoft
  3513  0067  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0068  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0069  0828               	movf	?___awtoft,w
  3516  006A  00C1               	movwf	___ftmul@f2
  3517  006B  0829               	movf	?___awtoft+1,w
  3518  006C  00C2               	movwf	___ftmul@f2+1
  3519  006D  082A               	movf	?___awtoft+2,w
  3520  006E  00C3               	movwf	___ftmul@f2+2
  3521  006F  120A  118A  2709  120A  118A  	fcall	___ftmul
  3522  0074  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0075  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0076  083E               	movf	?___ftmul,w
  3525  0077  00D1               	movwf	___ftdiv@f1
  3526  0078  083F               	movf	?___ftmul+1,w
  3527  0079  00D2               	movwf	___ftdiv@f1+1
  3528  007A  0840               	movf	?___ftmul+2,w
  3529  007B  00D3               	movwf	___ftdiv@f1+2
  3530  007C  120A  158A  263F  120A  118A  	fcall	___ftdiv
  3531  0081  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0082  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0083  084E               	movf	?___ftdiv,w
  3534  0084  1683               	bsf	3,5	;RP0=1, select bank1
  3535  0085  1303               	bcf	3,6	;RP1=0, select bank1
  3536  0086  00A0               	movwf	CalcMQ135@voltage^(0+128)
  3537  0087  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0088  1303               	bcf	3,6	;RP1=0, select bank0
  3539  0089  084F               	movf	?___ftdiv+1,w
  3540  008A  1683               	bsf	3,5	;RP0=1, select bank1
  3541  008B  1303               	bcf	3,6	;RP1=0, select bank1
  3542  008C  00A1               	movwf	(CalcMQ135@voltage+1)^(0+128)
  3543  008D  1283               	bcf	3,5	;RP0=0, select bank0
  3544  008E  1303               	bcf	3,6	;RP1=0, select bank0
  3545  008F  0850               	movf	?___ftdiv+2,w
  3546  0090  1683               	bsf	3,5	;RP0=1, select bank1
  3547  0091  1303               	bcf	3,6	;RP1=0, select bank1
  3548  0092  00A2               	movwf	(CalcMQ135@voltage+2)^(0+128)
  3549                           
  3550                           ;main.c: 243: float ratio = voltage / 5.0;
  3551  0093  3000               	movlw	0
  3552  0094  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0095  1303               	bcf	3,6	;RP1=0, select bank0
  3554  0096  00CE               	movwf	___ftdiv@f2
  3555  0097  30A0               	movlw	160
  3556  0098  00CF               	movwf	___ftdiv@f2+1
  3557  0099  3040               	movlw	64
  3558  009A  00D0               	movwf	___ftdiv@f2+2
  3559  009B  1683               	bsf	3,5	;RP0=1, select bank1
  3560  009C  1303               	bcf	3,6	;RP1=0, select bank1
  3561  009D  0820               	movf	CalcMQ135@voltage^(0+128),w
  3562  009E  1283               	bcf	3,5	;RP0=0, select bank0
  3563  009F  1303               	bcf	3,6	;RP1=0, select bank0
  3564  00A0  00D1               	movwf	___ftdiv@f1
  3565  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  3566  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  3567  00A3  0821               	movf	(CalcMQ135@voltage+1)^(0+128),w
  3568  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  3569  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  3570  00A6  00D2               	movwf	___ftdiv@f1+1
  3571  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  3572  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  3573  00A9  0822               	movf	(CalcMQ135@voltage+2)^(0+128),w
  3574  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  3575  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  3576  00AC  00D3               	movwf	___ftdiv@f1+2
  3577  00AD  120A  158A  263F  120A  118A  	fcall	___ftdiv
  3578  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  3579  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  3580  00B4  084E               	movf	?___ftdiv,w
  3581  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  3582  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  3583  00B7  00C4               	movwf	CalcMQ135@ratio^(0+128)
  3584  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  3585  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  3586  00BA  084F               	movf	?___ftdiv+1,w
  3587  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  3588  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  3589  00BD  00C5               	movwf	(CalcMQ135@ratio+1)^(0+128)
  3590  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  3591  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  3592  00C0  0850               	movf	?___ftdiv+2,w
  3593  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  3594  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  3595  00C3  00C6               	movwf	(CalcMQ135@ratio+2)^(0+128)
  3596                           
  3597                           ;main.c: 246: float ratio2 = ratio * ratio;
  3598  00C4  0844               	movf	CalcMQ135@ratio^(0+128),w
  3599  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  3600  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  3601  00C7  00BE               	movwf	___ftmul@f1
  3602  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  3603  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  3604  00CA  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3605  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  3606  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  3607  00CD  00BF               	movwf	___ftmul@f1+1
  3608  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  3609  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  3610  00D0  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3611  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  3612  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  3613  00D3  00C0               	movwf	___ftmul@f1+2
  3614  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  3615  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  3616  00D6  0844               	movf	CalcMQ135@ratio^(0+128),w
  3617  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  3618  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  3619  00D9  00C1               	movwf	___ftmul@f2
  3620  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  3621  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  3622  00DC  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3623  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  3624  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  3625  00DF  00C2               	movwf	___ftmul@f2+1
  3626  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  3627  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  3628  00E2  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3629  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  3630  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  3631  00E5  00C3               	movwf	___ftmul@f2+2
  3632  00E6  120A  118A  2709  120A  118A  	fcall	___ftmul
  3633  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  3634  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  3635  00ED  083E               	movf	?___ftmul,w
  3636  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  3637  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  3638  00F0  00B5               	movwf	CalcMQ135@ratio2^(0+128)
  3639  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  3640  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  3641  00F3  083F               	movf	?___ftmul+1,w
  3642  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  3643  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  3644  00F6  00B6               	movwf	(CalcMQ135@ratio2+1)^(0+128)
  3645  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  3646  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  3647  00F9  0840               	movf	?___ftmul+2,w
  3648  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  3649  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  3650  00FC  00B7               	movwf	(CalcMQ135@ratio2+2)^(0+128)
  3651                           
  3652                           ;main.c: 247: float ratio3 = ratio2 * ratio;
  3653  00FD  0844               	movf	CalcMQ135@ratio^(0+128),w
  3654  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  3655  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0100  00BE               	movwf	___ftmul@f1
  3657  0101  1683               	bsf	3,5	;RP0=1, select bank1
  3658  0102  1303               	bcf	3,6	;RP1=0, select bank1
  3659  0103  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3660  0104  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0105  1303               	bcf	3,6	;RP1=0, select bank0
  3662  0106  00BF               	movwf	___ftmul@f1+1
  3663  0107  1683               	bsf	3,5	;RP0=1, select bank1
  3664  0108  1303               	bcf	3,6	;RP1=0, select bank1
  3665  0109  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3666  010A  1283               	bcf	3,5	;RP0=0, select bank0
  3667  010B  1303               	bcf	3,6	;RP1=0, select bank0
  3668  010C  00C0               	movwf	___ftmul@f1+2
  3669  010D  1683               	bsf	3,5	;RP0=1, select bank1
  3670  010E  1303               	bcf	3,6	;RP1=0, select bank1
  3671  010F  0835               	movf	CalcMQ135@ratio2^(0+128),w
  3672  0110  1283               	bcf	3,5	;RP0=0, select bank0
  3673  0111  1303               	bcf	3,6	;RP1=0, select bank0
  3674  0112  00C1               	movwf	___ftmul@f2
  3675  0113  1683               	bsf	3,5	;RP0=1, select bank1
  3676  0114  1303               	bcf	3,6	;RP1=0, select bank1
  3677  0115  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  3678  0116  1283               	bcf	3,5	;RP0=0, select bank0
  3679  0117  1303               	bcf	3,6	;RP1=0, select bank0
  3680  0118  00C2               	movwf	___ftmul@f2+1
  3681  0119  1683               	bsf	3,5	;RP0=1, select bank1
  3682  011A  1303               	bcf	3,6	;RP1=0, select bank1
  3683  011B  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  3684  011C  1283               	bcf	3,5	;RP0=0, select bank0
  3685  011D  1303               	bcf	3,6	;RP1=0, select bank0
  3686  011E  00C3               	movwf	___ftmul@f2+2
  3687  011F  120A  118A  2709  120A  118A  	fcall	___ftmul
  3688  0124  1283               	bcf	3,5	;RP0=0, select bank0
  3689  0125  1303               	bcf	3,6	;RP1=0, select bank0
  3690  0126  083E               	movf	?___ftmul,w
  3691  0127  1683               	bsf	3,5	;RP0=1, select bank1
  3692  0128  1303               	bcf	3,6	;RP1=0, select bank1
  3693  0129  00B8               	movwf	CalcMQ135@ratio3^(0+128)
  3694  012A  1283               	bcf	3,5	;RP0=0, select bank0
  3695  012B  1303               	bcf	3,6	;RP1=0, select bank0
  3696  012C  083F               	movf	?___ftmul+1,w
  3697  012D  1683               	bsf	3,5	;RP0=1, select bank1
  3698  012E  1303               	bcf	3,6	;RP1=0, select bank1
  3699  012F  00B9               	movwf	(CalcMQ135@ratio3+1)^(0+128)
  3700  0130  1283               	bcf	3,5	;RP0=0, select bank0
  3701  0131  1303               	bcf	3,6	;RP1=0, select bank0
  3702  0132  0840               	movf	?___ftmul+2,w
  3703  0133  1683               	bsf	3,5	;RP0=1, select bank1
  3704  0134  1303               	bcf	3,6	;RP1=0, select bank1
  3705  0135  00BA               	movwf	(CalcMQ135@ratio3+2)^(0+128)
  3706                           
  3707                           ;main.c: 248: float ratio4 = ratio3 * ratio;
  3708  0136  0844               	movf	CalcMQ135@ratio^(0+128),w
  3709  0137  1283               	bcf	3,5	;RP0=0, select bank0
  3710  0138  1303               	bcf	3,6	;RP1=0, select bank0
  3711  0139  00BE               	movwf	___ftmul@f1
  3712  013A  1683               	bsf	3,5	;RP0=1, select bank1
  3713  013B  1303               	bcf	3,6	;RP1=0, select bank1
  3714  013C  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3715  013D  1283               	bcf	3,5	;RP0=0, select bank0
  3716  013E  1303               	bcf	3,6	;RP1=0, select bank0
  3717  013F  00BF               	movwf	___ftmul@f1+1
  3718  0140  1683               	bsf	3,5	;RP0=1, select bank1
  3719  0141  1303               	bcf	3,6	;RP1=0, select bank1
  3720  0142  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3721  0143  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0144  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0145  00C0               	movwf	___ftmul@f1+2
  3724  0146  1683               	bsf	3,5	;RP0=1, select bank1
  3725  0147  1303               	bcf	3,6	;RP1=0, select bank1
  3726  0148  0838               	movf	CalcMQ135@ratio3^(0+128),w
  3727  0149  1283               	bcf	3,5	;RP0=0, select bank0
  3728  014A  1303               	bcf	3,6	;RP1=0, select bank0
  3729  014B  00C1               	movwf	___ftmul@f2
  3730  014C  1683               	bsf	3,5	;RP0=1, select bank1
  3731  014D  1303               	bcf	3,6	;RP1=0, select bank1
  3732  014E  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  3733  014F  1283               	bcf	3,5	;RP0=0, select bank0
  3734  0150  1303               	bcf	3,6	;RP1=0, select bank0
  3735  0151  00C2               	movwf	___ftmul@f2+1
  3736  0152  1683               	bsf	3,5	;RP0=1, select bank1
  3737  0153  1303               	bcf	3,6	;RP1=0, select bank1
  3738  0154  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  3739  0155  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0156  1303               	bcf	3,6	;RP1=0, select bank0
  3741  0157  00C3               	movwf	___ftmul@f2+2
  3742  0158  120A  118A  2709  120A  118A  	fcall	___ftmul
  3743  015D  1283               	bcf	3,5	;RP0=0, select bank0
  3744  015E  1303               	bcf	3,6	;RP1=0, select bank0
  3745  015F  083E               	movf	?___ftmul,w
  3746  0160  1683               	bsf	3,5	;RP0=1, select bank1
  3747  0161  1303               	bcf	3,6	;RP1=0, select bank1
  3748  0162  00BB               	movwf	CalcMQ135@ratio4^(0+128)
  3749  0163  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0164  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0165  083F               	movf	?___ftmul+1,w
  3752  0166  1683               	bsf	3,5	;RP0=1, select bank1
  3753  0167  1303               	bcf	3,6	;RP1=0, select bank1
  3754  0168  00BC               	movwf	(CalcMQ135@ratio4+1)^(0+128)
  3755  0169  1283               	bcf	3,5	;RP0=0, select bank0
  3756  016A  1303               	bcf	3,6	;RP1=0, select bank0
  3757  016B  0840               	movf	?___ftmul+2,w
  3758  016C  1683               	bsf	3,5	;RP0=1, select bank1
  3759  016D  1303               	bcf	3,6	;RP1=0, select bank1
  3760  016E  00BD               	movwf	(CalcMQ135@ratio4+2)^(0+128)
  3761                           
  3762                           ;main.c: 249: float ratio5 = ratio4 * ratio;
  3763  016F  0844               	movf	CalcMQ135@ratio^(0+128),w
  3764  0170  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0171  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0172  00BE               	movwf	___ftmul@f1
  3767  0173  1683               	bsf	3,5	;RP0=1, select bank1
  3768  0174  1303               	bcf	3,6	;RP1=0, select bank1
  3769  0175  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3770  0176  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0177  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0178  00BF               	movwf	___ftmul@f1+1
  3773  0179  1683               	bsf	3,5	;RP0=1, select bank1
  3774  017A  1303               	bcf	3,6	;RP1=0, select bank1
  3775  017B  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3776  017C  1283               	bcf	3,5	;RP0=0, select bank0
  3777  017D  1303               	bcf	3,6	;RP1=0, select bank0
  3778  017E  00C0               	movwf	___ftmul@f1+2
  3779  017F  1683               	bsf	3,5	;RP0=1, select bank1
  3780  0180  1303               	bcf	3,6	;RP1=0, select bank1
  3781  0181  083B               	movf	CalcMQ135@ratio4^(0+128),w
  3782  0182  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0183  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0184  00C1               	movwf	___ftmul@f2
  3785  0185  1683               	bsf	3,5	;RP0=1, select bank1
  3786  0186  1303               	bcf	3,6	;RP1=0, select bank1
  3787  0187  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  3788  0188  1283               	bcf	3,5	;RP0=0, select bank0
  3789  0189  1303               	bcf	3,6	;RP1=0, select bank0
  3790  018A  00C2               	movwf	___ftmul@f2+1
  3791  018B  1683               	bsf	3,5	;RP0=1, select bank1
  3792  018C  1303               	bcf	3,6	;RP1=0, select bank1
  3793  018D  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  3794  018E  1283               	bcf	3,5	;RP0=0, select bank0
  3795  018F  1303               	bcf	3,6	;RP1=0, select bank0
  3796  0190  00C3               	movwf	___ftmul@f2+2
  3797  0191  120A  118A  2709  120A  118A  	fcall	___ftmul
  3798  0196  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0197  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0198  083E               	movf	?___ftmul,w
  3801  0199  1683               	bsf	3,5	;RP0=1, select bank1
  3802  019A  1303               	bcf	3,6	;RP1=0, select bank1
  3803  019B  00BE               	movwf	CalcMQ135@ratio5^(0+128)
  3804  019C  1283               	bcf	3,5	;RP0=0, select bank0
  3805  019D  1303               	bcf	3,6	;RP1=0, select bank0
  3806  019E  083F               	movf	?___ftmul+1,w
  3807  019F  1683               	bsf	3,5	;RP0=1, select bank1
  3808  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  3809  01A1  00BF               	movwf	(CalcMQ135@ratio5+1)^(0+128)
  3810  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  3811  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  3812  01A4  0840               	movf	?___ftmul+2,w
  3813  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  3814  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  3815  01A7  00C0               	movwf	(CalcMQ135@ratio5+2)^(0+128)
  3816                           
  3817                           ;main.c: 250: float ratio6 = ratio5 * ratio;
  3818  01A8  0844               	movf	CalcMQ135@ratio^(0+128),w
  3819  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  3820  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  3821  01AB  00BE               	movwf	___ftmul@f1
  3822  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  3823  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  3824  01AE  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3825  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  3826  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  3827  01B1  00BF               	movwf	___ftmul@f1+1
  3828  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  3829  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  3830  01B4  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3831  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  3832  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  3833  01B7  00C0               	movwf	___ftmul@f1+2
  3834  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  3835  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  3836  01BA  083E               	movf	CalcMQ135@ratio5^(0+128),w
  3837  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  3838  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  3839  01BD  00C1               	movwf	___ftmul@f2
  3840  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  3841  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  3842  01C0  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  3843  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  3844  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  3845  01C3  00C2               	movwf	___ftmul@f2+1
  3846  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  3847  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  3848  01C6  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  3849  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  3850  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  3851  01C9  00C3               	movwf	___ftmul@f2+2
  3852  01CA  120A  118A  2709  120A  118A  	fcall	___ftmul
  3853  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  3854  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  3855  01D1  083E               	movf	?___ftmul,w
  3856  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  3857  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  3858  01D4  00A3               	movwf	CalcMQ135@ratio6^(0+128)
  3859  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  3860  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  3861  01D7  083F               	movf	?___ftmul+1,w
  3862  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  3863  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  3864  01DA  00A4               	movwf	(CalcMQ135@ratio6+1)^(0+128)
  3865  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  3866  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  3867  01DD  0840               	movf	?___ftmul+2,w
  3868  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  3869  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  3870  01E0  00A5               	movwf	(CalcMQ135@ratio6+2)^(0+128)
  3871                           
  3872                           ;main.c: 253: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  3873                           ;main.c: 254: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  3874  01E1  309C               	movlw	156
  3875  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  3876  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  3877  01E4  00BE               	movwf	___ftmul@f1
  3878  01E5  30B2               	movlw	178
  3879  01E6  00BF               	movwf	___ftmul@f1+1
  3880  01E7  303F               	movlw	63
  3881  01E8  00C0               	movwf	___ftmul@f1+2
  3882  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  3883  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  3884  01EB  0835               	movf	CalcMQ135@ratio2^(0+128),w
  3885  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  3886  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  3887  01EE  00C1               	movwf	___ftmul@f2
  3888  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  3889  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  3890  01F1  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  3891  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  3892  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  3893  01F4  00C2               	movwf	___ftmul@f2+1
  3894  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  3895  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  3896  01F7  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  3897  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  3898  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  3899  01FA  00C3               	movwf	___ftmul@f2+2
  3900  01FB  120A  118A  2709  120A  118A  	fcall	___ftmul
  3901  0200  1283               	bcf	3,5	;RP0=0, select bank0
  3902  0201  1303               	bcf	3,6	;RP1=0, select bank0
  3903  0202  083E               	movf	?___ftmul,w
  3904  0203  00B1               	movwf	___ftadd@f1
  3905  0204  083F               	movf	?___ftmul+1,w
  3906  0205  00B2               	movwf	___ftadd@f1+1
  3907  0206  0840               	movf	?___ftmul+2,w
  3908  0207  00B3               	movwf	___ftadd@f1+2
  3909  0208  30A9               	movlw	169
  3910  0209  00BE               	movwf	___ftmul@f1
  3911  020A  30DE               	movlw	222
  3912  020B  00BF               	movwf	___ftmul@f1+1
  3913  020C  303C               	movlw	60
  3914  020D  00C0               	movwf	___ftmul@f1+2
  3915  020E  1683               	bsf	3,5	;RP0=1, select bank1
  3916  020F  1303               	bcf	3,6	;RP1=0, select bank1
  3917  0210  0844               	movf	CalcMQ135@ratio^(0+128),w
  3918  0211  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0212  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0213  00C1               	movwf	___ftmul@f2
  3921  0214  1683               	bsf	3,5	;RP0=1, select bank1
  3922  0215  1303               	bcf	3,6	;RP1=0, select bank1
  3923  0216  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3924  0217  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0218  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0219  00C2               	movwf	___ftmul@f2+1
  3927  021A  1683               	bsf	3,5	;RP0=1, select bank1
  3928  021B  1303               	bcf	3,6	;RP1=0, select bank1
  3929  021C  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3930  021D  1283               	bcf	3,5	;RP0=0, select bank0
  3931  021E  1303               	bcf	3,6	;RP1=0, select bank0
  3932  021F  00C3               	movwf	___ftmul@f2+2
  3933  0220  120A  118A  2709  120A  118A  	fcall	___ftmul
  3934  0225  1283               	bcf	3,5	;RP0=0, select bank0
  3935  0226  1303               	bcf	3,6	;RP1=0, select bank0
  3936  0227  083E               	movf	?___ftmul,w
  3937  0228  00B4               	movwf	___ftadd@f2
  3938  0229  083F               	movf	?___ftmul+1,w
  3939  022A  00B5               	movwf	___ftadd@f2+1
  3940  022B  0840               	movf	?___ftmul+2,w
  3941  022C  00B6               	movwf	___ftadd@f2+2
  3942  022D  120A  158A  26F7  120A  118A  	fcall	___ftadd
  3943  0232  1283               	bcf	3,5	;RP0=0, select bank0
  3944  0233  1303               	bcf	3,6	;RP1=0, select bank0
  3945  0234  0831               	movf	?___ftadd,w
  3946  0235  1683               	bsf	3,5	;RP0=1, select bank1
  3947  0236  1303               	bcf	3,6	;RP1=0, select bank1
  3948  0237  00A6               	movwf	_CalcMQ135$616^(0+128)
  3949  0238  1283               	bcf	3,5	;RP0=0, select bank0
  3950  0239  1303               	bcf	3,6	;RP1=0, select bank0
  3951  023A  0832               	movf	?___ftadd+1,w
  3952  023B  1683               	bsf	3,5	;RP0=1, select bank1
  3953  023C  1303               	bcf	3,6	;RP1=0, select bank1
  3954  023D  00A7               	movwf	(_CalcMQ135$616+1)^(0+128)
  3955  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3956  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3957  0240  0833               	movf	?___ftadd+2,w
  3958  0241  1683               	bsf	3,5	;RP0=1, select bank1
  3959  0242  1303               	bcf	3,6	;RP1=0, select bank1
  3960  0243  00A8               	movwf	(_CalcMQ135$616+2)^(0+128)
  3961                           
  3962                           ;main.c: 253: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  3963                           ;main.c: 254: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  3964  0244  30EE               	movlw	238
  3965  0245  1283               	bcf	3,5	;RP0=0, select bank0
  3966  0246  1303               	bcf	3,6	;RP1=0, select bank0
  3967  0247  00BE               	movwf	___ftmul@f1
  3968  0248  30EB               	movlw	235
  3969  0249  00BF               	movwf	___ftmul@f1+1
  3970  024A  303A               	movlw	58
  3971  024B  00C0               	movwf	___ftmul@f1+2
  3972  024C  1683               	bsf	3,5	;RP0=1, select bank1
  3973  024D  1303               	bcf	3,6	;RP1=0, select bank1
  3974  024E  0838               	movf	CalcMQ135@ratio3^(0+128),w
  3975  024F  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0250  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0251  00C1               	movwf	___ftmul@f2
  3978  0252  1683               	bsf	3,5	;RP0=1, select bank1
  3979  0253  1303               	bcf	3,6	;RP1=0, select bank1
  3980  0254  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  3981  0255  1283               	bcf	3,5	;RP0=0, select bank0
  3982  0256  1303               	bcf	3,6	;RP1=0, select bank0
  3983  0257  00C2               	movwf	___ftmul@f2+1
  3984  0258  1683               	bsf	3,5	;RP0=1, select bank1
  3985  0259  1303               	bcf	3,6	;RP1=0, select bank1
  3986  025A  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  3987  025B  1283               	bcf	3,5	;RP0=0, select bank0
  3988  025C  1303               	bcf	3,6	;RP1=0, select bank0
  3989  025D  00C3               	movwf	___ftmul@f2+2
  3990  025E  120A  118A  2709  120A  118A  	fcall	___ftmul
  3991  0263  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0264  1303               	bcf	3,6	;RP1=0, select bank0
  3993  0265  083E               	movf	?___ftmul,w
  3994  0266  00B1               	movwf	___ftadd@f1
  3995  0267  083F               	movf	?___ftmul+1,w
  3996  0268  00B2               	movwf	___ftadd@f1+1
  3997  0269  0840               	movf	?___ftmul+2,w
  3998  026A  00B3               	movwf	___ftadd@f1+2
  3999  026B  1683               	bsf	3,5	;RP0=1, select bank1
  4000  026C  1303               	bcf	3,6	;RP1=0, select bank1
  4001  026D  0826               	movf	_CalcMQ135$616^(0+128),w
  4002  026E  1283               	bcf	3,5	;RP0=0, select bank0
  4003  026F  1303               	bcf	3,6	;RP1=0, select bank0
  4004  0270  00B4               	movwf	___ftadd@f2
  4005  0271  1683               	bsf	3,5	;RP0=1, select bank1
  4006  0272  1303               	bcf	3,6	;RP1=0, select bank1
  4007  0273  0827               	movf	(_CalcMQ135$616+1)^(0+128),w
  4008  0274  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0275  1303               	bcf	3,6	;RP1=0, select bank0
  4010  0276  00B5               	movwf	___ftadd@f2+1
  4011  0277  1683               	bsf	3,5	;RP0=1, select bank1
  4012  0278  1303               	bcf	3,6	;RP1=0, select bank1
  4013  0279  0828               	movf	(_CalcMQ135$616+2)^(0+128),w
  4014  027A  1283               	bcf	3,5	;RP0=0, select bank0
  4015  027B  1303               	bcf	3,6	;RP1=0, select bank0
  4016  027C  00B6               	movwf	___ftadd@f2+2
  4017  027D  120A  158A  26F7  120A  118A  	fcall	___ftadd
  4018  0282  1283               	bcf	3,5	;RP0=0, select bank0
  4019  0283  1303               	bcf	3,6	;RP1=0, select bank0
  4020  0284  0831               	movf	?___ftadd,w
  4021  0285  1683               	bsf	3,5	;RP0=1, select bank1
  4022  0286  1303               	bcf	3,6	;RP1=0, select bank1
  4023  0287  00A9               	movwf	_CalcMQ135$617^(0+128)
  4024  0288  1283               	bcf	3,5	;RP0=0, select bank0
  4025  0289  1303               	bcf	3,6	;RP1=0, select bank0
  4026  028A  0832               	movf	?___ftadd+1,w
  4027  028B  1683               	bsf	3,5	;RP0=1, select bank1
  4028  028C  1303               	bcf	3,6	;RP1=0, select bank1
  4029  028D  00AA               	movwf	(_CalcMQ135$617+1)^(0+128)
  4030  028E  1283               	bcf	3,5	;RP0=0, select bank0
  4031  028F  1303               	bcf	3,6	;RP1=0, select bank0
  4032  0290  0833               	movf	?___ftadd+2,w
  4033  0291  1683               	bsf	3,5	;RP0=1, select bank1
  4034  0292  1303               	bcf	3,6	;RP1=0, select bank1
  4035  0293  00AB               	movwf	(_CalcMQ135$617+2)^(0+128)
  4036                           
  4037                           ;main.c: 253: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  4038                           ;main.c: 254: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  4039  0294  3074               	movlw	116
  4040  0295  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0296  1303               	bcf	3,6	;RP1=0, select bank0
  4042  0297  00BE               	movwf	___ftmul@f1
  4043  0298  305A               	movlw	90
  4044  0299  00BF               	movwf	___ftmul@f1+1
  4045  029A  30BB               	movlw	187
  4046  029B  00C0               	movwf	___ftmul@f1+2
  4047  029C  1683               	bsf	3,5	;RP0=1, select bank1
  4048  029D  1303               	bcf	3,6	;RP1=0, select bank1
  4049  029E  083B               	movf	CalcMQ135@ratio4^(0+128),w
  4050  029F  1283               	bcf	3,5	;RP0=0, select bank0
  4051  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  4052  02A1  00C1               	movwf	___ftmul@f2
  4053  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  4054  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  4055  02A4  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  4056  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  4057  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  4058  02A7  00C2               	movwf	___ftmul@f2+1
  4059  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  4060  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  4061  02AA  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  4062  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  4063  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  4064  02AD  00C3               	movwf	___ftmul@f2+2
  4065  02AE  120A  118A  2709  120A  118A  	fcall	___ftmul
  4066  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  4067  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  4068  02B5  083E               	movf	?___ftmul,w
  4069  02B6  00B1               	movwf	___ftadd@f1
  4070  02B7  083F               	movf	?___ftmul+1,w
  4071  02B8  00B2               	movwf	___ftadd@f1+1
  4072  02B9  0840               	movf	?___ftmul+2,w
  4073  02BA  00B3               	movwf	___ftadd@f1+2
  4074  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  4075  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  4076  02BD  0829               	movf	_CalcMQ135$617^(0+128),w
  4077  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  4078  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  4079  02C0  00B4               	movwf	___ftadd@f2
  4080  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  4081  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  4082  02C3  082A               	movf	(_CalcMQ135$617+1)^(0+128),w
  4083  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  4084  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  4085  02C6  00B5               	movwf	___ftadd@f2+1
  4086  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  4087  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  4088  02C9  082B               	movf	(_CalcMQ135$617+2)^(0+128),w
  4089  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  4090  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  4091  02CC  00B6               	movwf	___ftadd@f2+2
  4092  02CD  120A  158A  26F7  120A  118A  	fcall	___ftadd
  4093  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  4094  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  4095  02D4  0831               	movf	?___ftadd,w
  4096  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  4097  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  4098  02D7  00AC               	movwf	_CalcMQ135$618^(0+128)
  4099  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  4100  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  4101  02DA  0832               	movf	?___ftadd+1,w
  4102  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  4103  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  4104  02DD  00AD               	movwf	(_CalcMQ135$618+1)^(0+128)
  4105  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  4106  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  4107  02E0  0833               	movf	?___ftadd+2,w
  4108  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  4109  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  4110  02E3  00AE               	movwf	(_CalcMQ135$618+2)^(0+128)
  4111                           
  4112                           ;main.c: 253: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  4113                           ;main.c: 254: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  4114  02E4  3010               	movlw	16
  4115  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  4116  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  4117  02E7  00BE               	movwf	___ftmul@f1
  4118  02E8  30FC               	movlw	252
  4119  02E9  00BF               	movwf	___ftmul@f1+1
  4120  02EA  30BA               	movlw	186
  4121  02EB  00C0               	movwf	___ftmul@f1+2
  4122  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  4123  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  4124  02EE  083E               	movf	CalcMQ135@ratio5^(0+128),w
  4125  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  4126  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  4127  02F1  00C1               	movwf	___ftmul@f2
  4128  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  4129  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  4130  02F4  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  4131  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  4132  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  4133  02F7  00C2               	movwf	___ftmul@f2+1
  4134  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  4135  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  4136  02FA  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  4137  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  4138  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  4139  02FD  00C3               	movwf	___ftmul@f2+2
  4140  02FE  120A  118A  2709  120A  118A  	fcall	___ftmul
  4141  0303  1283               	bcf	3,5	;RP0=0, select bank0
  4142  0304  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0305  083E               	movf	?___ftmul,w
  4144  0306  00B1               	movwf	___ftadd@f1
  4145  0307  083F               	movf	?___ftmul+1,w
  4146  0308  00B2               	movwf	___ftadd@f1+1
  4147  0309  0840               	movf	?___ftmul+2,w
  4148  030A  00B3               	movwf	___ftadd@f1+2
  4149  030B  1683               	bsf	3,5	;RP0=1, select bank1
  4150  030C  1303               	bcf	3,6	;RP1=0, select bank1
  4151  030D  082C               	movf	_CalcMQ135$618^(0+128),w
  4152  030E  1283               	bcf	3,5	;RP0=0, select bank0
  4153  030F  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0310  00B4               	movwf	___ftadd@f2
  4155  0311  1683               	bsf	3,5	;RP0=1, select bank1
  4156  0312  1303               	bcf	3,6	;RP1=0, select bank1
  4157  0313  082D               	movf	(_CalcMQ135$618+1)^(0+128),w
  4158  0314  1283               	bcf	3,5	;RP0=0, select bank0
  4159  0315  1303               	bcf	3,6	;RP1=0, select bank0
  4160  0316  00B5               	movwf	___ftadd@f2+1
  4161  0317  1683               	bsf	3,5	;RP0=1, select bank1
  4162  0318  1303               	bcf	3,6	;RP1=0, select bank1
  4163  0319  082E               	movf	(_CalcMQ135$618+2)^(0+128),w
  4164  031A  1283               	bcf	3,5	;RP0=0, select bank0
  4165  031B  1303               	bcf	3,6	;RP1=0, select bank0
  4166  031C  00B6               	movwf	___ftadd@f2+2
  4167  031D  120A  158A  26F7  120A  118A  	fcall	___ftadd
  4168  0322  1283               	bcf	3,5	;RP0=0, select bank0
  4169  0323  1303               	bcf	3,6	;RP1=0, select bank0
  4170  0324  0831               	movf	?___ftadd,w
  4171  0325  1683               	bsf	3,5	;RP0=1, select bank1
  4172  0326  1303               	bcf	3,6	;RP1=0, select bank1
  4173  0327  00AF               	movwf	_CalcMQ135$619^(0+128)
  4174  0328  1283               	bcf	3,5	;RP0=0, select bank0
  4175  0329  1303               	bcf	3,6	;RP1=0, select bank0
  4176  032A  0832               	movf	?___ftadd+1,w
  4177  032B  1683               	bsf	3,5	;RP0=1, select bank1
  4178  032C  1303               	bcf	3,6	;RP1=0, select bank1
  4179  032D  00B0               	movwf	(_CalcMQ135$619+1)^(0+128)
  4180  032E  1283               	bcf	3,5	;RP0=0, select bank0
  4181  032F  1303               	bcf	3,6	;RP1=0, select bank0
  4182  0330  0833               	movf	?___ftadd+2,w
  4183  0331  1683               	bsf	3,5	;RP0=1, select bank1
  4184  0332  1303               	bcf	3,6	;RP1=0, select bank1
  4185  0333  00B1               	movwf	(_CalcMQ135$619+2)^(0+128)
  4186                           
  4187                           ;main.c: 253: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  4188                           ;main.c: 254: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  4189  0334  30A8               	movlw	168
  4190  0335  1283               	bcf	3,5	;RP0=0, select bank0
  4191  0336  1303               	bcf	3,6	;RP1=0, select bank0
  4192  0337  00BE               	movwf	___ftmul@f1
  4193  0338  3090               	movlw	144
  4194  0339  00BF               	movwf	___ftmul@f1+1
  4195  033A  303F               	movlw	63
  4196  033B  00C0               	movwf	___ftmul@f1+2
  4197  033C  1683               	bsf	3,5	;RP0=1, select bank1
  4198  033D  1303               	bcf	3,6	;RP1=0, select bank1
  4199  033E  0823               	movf	CalcMQ135@ratio6^(0+128),w
  4200  033F  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0340  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0341  00C1               	movwf	___ftmul@f2
  4203  0342  1683               	bsf	3,5	;RP0=1, select bank1
  4204  0343  1303               	bcf	3,6	;RP1=0, select bank1
  4205  0344  0824               	movf	(CalcMQ135@ratio6+1)^(0+128),w
  4206  0345  1283               	bcf	3,5	;RP0=0, select bank0
  4207  0346  1303               	bcf	3,6	;RP1=0, select bank0
  4208  0347  00C2               	movwf	___ftmul@f2+1
  4209  0348  1683               	bsf	3,5	;RP0=1, select bank1
  4210  0349  1303               	bcf	3,6	;RP1=0, select bank1
  4211  034A  0825               	movf	(CalcMQ135@ratio6+2)^(0+128),w
  4212  034B  1283               	bcf	3,5	;RP0=0, select bank0
  4213  034C  1303               	bcf	3,6	;RP1=0, select bank0
  4214  034D  00C3               	movwf	___ftmul@f2+2
  4215  034E  120A  118A  2709  120A  118A  	fcall	___ftmul
  4216  0353  1283               	bcf	3,5	;RP0=0, select bank0
  4217  0354  1303               	bcf	3,6	;RP1=0, select bank0
  4218  0355  083E               	movf	?___ftmul,w
  4219  0356  00B1               	movwf	___ftadd@f1
  4220  0357  083F               	movf	?___ftmul+1,w
  4221  0358  00B2               	movwf	___ftadd@f1+1
  4222  0359  0840               	movf	?___ftmul+2,w
  4223  035A  00B3               	movwf	___ftadd@f1+2
  4224  035B  1683               	bsf	3,5	;RP0=1, select bank1
  4225  035C  1303               	bcf	3,6	;RP1=0, select bank1
  4226  035D  082F               	movf	_CalcMQ135$619^(0+128),w
  4227  035E  1283               	bcf	3,5	;RP0=0, select bank0
  4228  035F  1303               	bcf	3,6	;RP1=0, select bank0
  4229  0360  00B4               	movwf	___ftadd@f2
  4230  0361  1683               	bsf	3,5	;RP0=1, select bank1
  4231  0362  1303               	bcf	3,6	;RP1=0, select bank1
  4232  0363  0830               	movf	(_CalcMQ135$619+1)^(0+128),w
  4233  0364  1283               	bcf	3,5	;RP0=0, select bank0
  4234  0365  1303               	bcf	3,6	;RP1=0, select bank0
  4235  0366  00B5               	movwf	___ftadd@f2+1
  4236  0367  1683               	bsf	3,5	;RP0=1, select bank1
  4237  0368  1303               	bcf	3,6	;RP1=0, select bank1
  4238  0369  0831               	movf	(_CalcMQ135$619+2)^(0+128),w
  4239  036A  1283               	bcf	3,5	;RP0=0, select bank0
  4240  036B  1303               	bcf	3,6	;RP1=0, select bank0
  4241  036C  00B6               	movwf	___ftadd@f2+2
  4242  036D  120A  158A  26F7  120A  118A  	fcall	___ftadd
  4243  0372  1283               	bcf	3,5	;RP0=0, select bank0
  4244  0373  1303               	bcf	3,6	;RP1=0, select bank0
  4245  0374  0831               	movf	?___ftadd,w
  4246  0375  1683               	bsf	3,5	;RP0=1, select bank1
  4247  0376  1303               	bcf	3,6	;RP1=0, select bank1
  4248  0377  00B2               	movwf	_CalcMQ135$620^(0+128)
  4249  0378  1283               	bcf	3,5	;RP0=0, select bank0
  4250  0379  1303               	bcf	3,6	;RP1=0, select bank0
  4251  037A  0832               	movf	?___ftadd+1,w
  4252  037B  1683               	bsf	3,5	;RP0=1, select bank1
  4253  037C  1303               	bcf	3,6	;RP1=0, select bank1
  4254  037D  00B3               	movwf	(_CalcMQ135$620+1)^(0+128)
  4255  037E  1283               	bcf	3,5	;RP0=0, select bank0
  4256  037F  1303               	bcf	3,6	;RP1=0, select bank0
  4257  0380  0833               	movf	?___ftadd+2,w
  4258  0381  1683               	bsf	3,5	;RP0=1, select bank1
  4259  0382  1303               	bcf	3,6	;RP1=0, select bank1
  4260  0383  00B4               	movwf	(_CalcMQ135$620+2)^(0+128)
  4261                           
  4262                           ;main.c: 253: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.0018 * r
      +                          atio3) +
  4263                           ;main.c: 254: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 * ratio6)
      +                          ;
  4264  0384  3080               	movlw	128
  4265  0385  1283               	bcf	3,5	;RP0=0, select bank0
  4266  0386  1303               	bcf	3,6	;RP1=0, select bank0
  4267  0387  00B1               	movwf	___ftadd@f1
  4268  0388  30B7               	movlw	183
  4269  0389  00B2               	movwf	___ftadd@f1+1
  4270  038A  3039               	movlw	57
  4271  038B  00B3               	movwf	___ftadd@f1+2
  4272  038C  1683               	bsf	3,5	;RP0=1, select bank1
  4273  038D  1303               	bcf	3,6	;RP1=0, select bank1
  4274  038E  0832               	movf	_CalcMQ135$620^(0+128),w
  4275  038F  1283               	bcf	3,5	;RP0=0, select bank0
  4276  0390  1303               	bcf	3,6	;RP1=0, select bank0
  4277  0391  00B4               	movwf	___ftadd@f2
  4278  0392  1683               	bsf	3,5	;RP0=1, select bank1
  4279  0393  1303               	bcf	3,6	;RP1=0, select bank1
  4280  0394  0833               	movf	(_CalcMQ135$620+1)^(0+128),w
  4281  0395  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0396  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0397  00B5               	movwf	___ftadd@f2+1
  4284  0398  1683               	bsf	3,5	;RP0=1, select bank1
  4285  0399  1303               	bcf	3,6	;RP1=0, select bank1
  4286  039A  0834               	movf	(_CalcMQ135$620+2)^(0+128),w
  4287  039B  1283               	bcf	3,5	;RP0=0, select bank0
  4288  039C  1303               	bcf	3,6	;RP1=0, select bank0
  4289  039D  00B6               	movwf	___ftadd@f2+2
  4290  039E  120A  158A  26F7  120A  118A  	fcall	___ftadd
  4291  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  4292  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  4293  03A5  0831               	movf	?___ftadd,w
  4294  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  4295  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  4296  03A8  00C1               	movwf	CalcMQ135@co2^(0+128)
  4297  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  4298  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  4299  03AB  0832               	movf	?___ftadd+1,w
  4300  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  4301  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  4302  03AE  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  4303  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  4304  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  4305  03B1  0833               	movf	?___ftadd+2,w
  4306  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  4307  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  4308  03B4  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  4309                           
  4310                           ;main.c: 256: co2 *= 415.58;
  4311  03B5  30CA               	movlw	202
  4312  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  4313  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  4314  03B8  00BE               	movwf	___ftmul@f1
  4315  03B9  30CF               	movlw	207
  4316  03BA  00BF               	movwf	___ftmul@f1+1
  4317  03BB  3043               	movlw	67
  4318  03BC  00C0               	movwf	___ftmul@f1+2
  4319  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  4320  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  4321  03BF  0841               	movf	CalcMQ135@co2^(0+128),w
  4322  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  4323  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  4324  03C2  00C1               	movwf	___ftmul@f2
  4325  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  4326  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  4327  03C5  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  4328  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  4329  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  4330  03C8  00C2               	movwf	___ftmul@f2+1
  4331  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  4332  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  4333  03CB  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  4334  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  4335  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  4336  03CE  00C3               	movwf	___ftmul@f2+2
  4337  03CF  120A  118A  2709   	fcall	___ftmul
  4338  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  4339  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  4340  03D4  083E               	movf	?___ftmul,w
  4341  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  4342  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  4343  03D7  00C1               	movwf	CalcMQ135@co2^(0+128)
  4344  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  4345  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  4346  03DA  083F               	movf	?___ftmul+1,w
  4347  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  4348  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  4349  03DD  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  4350  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  4351  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  4352  03E0  0840               	movf	?___ftmul+2,w
  4353  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  4354  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  4355  03E3  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  4356                           
  4357                           ;main.c: 257: return co2;
  4358  03E4  0841               	movf	CalcMQ135@co2^(0+128),w
  4359  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  4360  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  4361  03E7  00DE               	movwf	?_CalcMQ135
  4362  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  4363  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  4364  03EA  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  4365  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  4366  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  4367  03ED  00DF               	movwf	?_CalcMQ135+1
  4368  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  4369  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  4370  03F0  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  4371  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  4372  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  4373  03F3  00E0               	movwf	?_CalcMQ135+2
  4374  03F4  0008               	return
  4375  03F5                     __end_of_CalcMQ135:	
  4376                           
  4377                           	psect	text18
  4378  0709                     __ptext18:	
  4379 ;; *************** function ___ftmul *****************
  4380 ;; Defined at:
  4381 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  4382 ;; Parameters:    Size  Location     Type
  4383 ;;  f1              3   30[BANK0 ] float 
  4384 ;;  f2              3   33[BANK0 ] float 
  4385 ;; Auto vars:     Size  Location     Type
  4386 ;;  f3_as_produc    3   41[BANK0 ] unsigned um
  4387 ;;  sign            1   45[BANK0 ] unsigned char 
  4388 ;;  cntr            1   44[BANK0 ] unsigned char 
  4389 ;;  exp             1   40[BANK0 ] unsigned char 
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  3   30[BANK0 ] float 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0, pclath, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4399 ;;      Params:         0       6       0       0       0
  4400 ;;      Locals:         0       6       0       0       0
  4401 ;;      Temps:          0       4       0       0       0
  4402 ;;      Totals:         0      16       0       0       0
  4403 ;;Total ram usage:       16 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    2
  4406 ;; This function calls:
  4407 ;;		___ftpack
  4408 ;; This function is called by:
  4409 ;;		_CalcMQ135
  4410 ;;		_displayPPM
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           
  4415                           ;psect for function ___ftmul
  4416  0709                     ___ftmul:	
  4417                           
  4418                           ;incstack = 0
  4419                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4420  0709  1283               	bcf	3,5	;RP0=0, select bank0
  4421  070A  1303               	bcf	3,6	;RP1=0, select bank0
  4422  070B  083E               	movf	___ftmul@f1,w
  4423  070C  00C4               	movwf	??___ftmul
  4424  070D  083F               	movf	___ftmul@f1+1,w
  4425  070E  00C5               	movwf	??___ftmul+1
  4426  070F  0840               	movf	___ftmul@f1+2,w
  4427  0710  00C6               	movwf	??___ftmul+2
  4428  0711  1003               	clrc
  4429  0712  0D45               	rlf	??___ftmul+1,w
  4430  0713  0D46               	rlf	??___ftmul+2,w
  4431  0714  00C7               	movwf	??___ftmul+3
  4432  0715  0847               	movf	??___ftmul+3,w
  4433  0716  00C8               	movwf	___ftmul@exp
  4434  0717  08C8               	movf	___ftmul@exp,f
  4435  0718  1D03               	skipz
  4436  0719  2F21               	goto	l2312
  4437  071A  3000               	movlw	0
  4438  071B  00BE               	movwf	?___ftmul
  4439  071C  3000               	movlw	0
  4440  071D  00BF               	movwf	?___ftmul+1
  4441  071E  3000               	movlw	0
  4442  071F  00C0               	movwf	?___ftmul+2
  4443  0720  0008               	return
  4444  0721                     l2312:	
  4445  0721  0841               	movf	___ftmul@f2,w
  4446  0722  00C4               	movwf	??___ftmul
  4447  0723  0842               	movf	___ftmul@f2+1,w
  4448  0724  00C5               	movwf	??___ftmul+1
  4449  0725  0843               	movf	___ftmul@f2+2,w
  4450  0726  00C6               	movwf	??___ftmul+2
  4451  0727  1003               	clrc
  4452  0728  0D45               	rlf	??___ftmul+1,w
  4453  0729  0D46               	rlf	??___ftmul+2,w
  4454  072A  00C7               	movwf	??___ftmul+3
  4455  072B  0847               	movf	??___ftmul+3,w
  4456  072C  00CD               	movwf	___ftmul@sign
  4457  072D  08CD               	movf	___ftmul@sign,f
  4458  072E  1D03               	skipz
  4459  072F  2F37               	goto	l2318
  4460  0730  3000               	movlw	0
  4461  0731  00BE               	movwf	?___ftmul
  4462  0732  3000               	movlw	0
  4463  0733  00BF               	movwf	?___ftmul+1
  4464  0734  3000               	movlw	0
  4465  0735  00C0               	movwf	?___ftmul+2
  4466  0736  0008               	return
  4467  0737                     l2318:	
  4468  0737  084D               	movf	___ftmul@sign,w
  4469  0738  3E7B               	addlw	123
  4470  0739  00C4               	movwf	??___ftmul
  4471  073A  0844               	movf	??___ftmul,w
  4472  073B  07C8               	addwf	___ftmul@exp,f
  4473  073C  083E               	movf	___ftmul@f1,w
  4474  073D  00C4               	movwf	??___ftmul
  4475  073E  083F               	movf	___ftmul@f1+1,w
  4476  073F  00C5               	movwf	??___ftmul+1
  4477  0740  0840               	movf	___ftmul@f1+2,w
  4478  0741  00C6               	movwf	??___ftmul+2
  4479  0742  3010               	movlw	16
  4480  0743                     u3015:	
  4481  0743  1003               	clrc
  4482  0744  0CC6               	rrf	??___ftmul+2,f
  4483  0745  0CC5               	rrf	??___ftmul+1,f
  4484  0746  0CC4               	rrf	??___ftmul,f
  4485  0747  3EFF               	addlw	-1
  4486  0748  1D03               	skipz
  4487  0749  2F43               	goto	u3015
  4488  074A  0844               	movf	??___ftmul,w
  4489  074B  00C7               	movwf	??___ftmul+3
  4490  074C  0847               	movf	??___ftmul+3,w
  4491  074D  00CD               	movwf	___ftmul@sign
  4492  074E  0841               	movf	___ftmul@f2,w
  4493  074F  00C4               	movwf	??___ftmul
  4494  0750  0842               	movf	___ftmul@f2+1,w
  4495  0751  00C5               	movwf	??___ftmul+1
  4496  0752  0843               	movf	___ftmul@f2+2,w
  4497  0753  00C6               	movwf	??___ftmul+2
  4498  0754  3010               	movlw	16
  4499  0755                     u3025:	
  4500  0755  1003               	clrc
  4501  0756  0CC6               	rrf	??___ftmul+2,f
  4502  0757  0CC5               	rrf	??___ftmul+1,f
  4503  0758  0CC4               	rrf	??___ftmul,f
  4504  0759  3EFF               	addlw	-1
  4505  075A  1D03               	skipz
  4506  075B  2F55               	goto	u3025
  4507  075C  0844               	movf	??___ftmul,w
  4508  075D  00C7               	movwf	??___ftmul+3
  4509  075E  0847               	movf	??___ftmul+3,w
  4510  075F  06CD               	xorwf	___ftmul@sign,f
  4511  0760  3080               	movlw	128
  4512  0761  00C4               	movwf	??___ftmul
  4513  0762  0844               	movf	??___ftmul,w
  4514  0763  05CD               	andwf	___ftmul@sign,f
  4515  0764  17BF               	bsf	___ftmul@f1+1,7
  4516  0765  17C2               	bsf	___ftmul@f2+1,7
  4517  0766  30FF               	movlw	255
  4518  0767  05C1               	andwf	___ftmul@f2,f
  4519  0768  30FF               	movlw	255
  4520  0769  05C2               	andwf	___ftmul@f2+1,f
  4521  076A  3000               	movlw	0
  4522  076B  05C3               	andwf	___ftmul@f2+2,f
  4523  076C  3000               	movlw	0
  4524  076D  00C9               	movwf	___ftmul@f3_as_product
  4525  076E  3000               	movlw	0
  4526  076F  00CA               	movwf	___ftmul@f3_as_product+1
  4527  0770  3000               	movlw	0
  4528  0771  00CB               	movwf	___ftmul@f3_as_product+2
  4529  0772  3007               	movlw	7
  4530  0773  00C4               	movwf	??___ftmul
  4531  0774  0844               	movf	??___ftmul,w
  4532  0775  00CC               	movwf	___ftmul@cntr
  4533  0776                     l2330:	
  4534  0776  1C3E               	btfss	___ftmul@f1,0
  4535  0777  2F86               	goto	l2334
  4536  0778  0841               	movf	___ftmul@f2,w
  4537  0779  07C9               	addwf	___ftmul@f3_as_product,f
  4538  077A  0842               	movf	___ftmul@f2+1,w
  4539  077B  1103               	clrz
  4540  077C  1803               	skipnc
  4541  077D  0A42               	incf	___ftmul@f2+1,w
  4542  077E  1D03               	btfss	3,2
  4543  077F  07CA               	addwf	___ftmul@f3_as_product+1,f
  4544  0780  0843               	movf	___ftmul@f2+2,w
  4545  0781  1103               	clrz
  4546  0782  1803               	skipnc
  4547  0783  0A43               	incf	___ftmul@f2+2,w
  4548  0784  1D03               	btfss	3,2
  4549  0785  07CB               	addwf	___ftmul@f3_as_product+2,f
  4550  0786                     l2334:	
  4551  0786  3001               	movlw	1
  4552  0787                     u3055:	
  4553  0787  1003               	clrc
  4554  0788  0CC0               	rrf	___ftmul@f1+2,f
  4555  0789  0CBF               	rrf	___ftmul@f1+1,f
  4556  078A  0CBE               	rrf	___ftmul@f1,f
  4557  078B  3EFF               	addlw	-1
  4558  078C  1D03               	skipz
  4559  078D  2F87               	goto	u3055
  4560  078E  3001               	movlw	1
  4561  078F                     u3065:	
  4562  078F  1003               	clrc
  4563  0790  0DC1               	rlf	___ftmul@f2,f
  4564  0791  0DC2               	rlf	___ftmul@f2+1,f
  4565  0792  0DC3               	rlf	___ftmul@f2+2,f
  4566  0793  3EFF               	addlw	-1
  4567  0794  1D03               	skipz
  4568  0795  2F8F               	goto	u3065
  4569  0796  3001               	movlw	1
  4570  0797  02CC               	subwf	___ftmul@cntr,f
  4571  0798  1D03               	btfss	3,2
  4572  0799  2F76               	goto	l2330
  4573  079A  3009               	movlw	9
  4574  079B  00C4               	movwf	??___ftmul
  4575  079C  0844               	movf	??___ftmul,w
  4576  079D  00CC               	movwf	___ftmul@cntr
  4577  079E                     l2342:	
  4578  079E  1C3E               	btfss	___ftmul@f1,0
  4579  079F  2FAE               	goto	l2346
  4580  07A0  0841               	movf	___ftmul@f2,w
  4581  07A1  07C9               	addwf	___ftmul@f3_as_product,f
  4582  07A2  0842               	movf	___ftmul@f2+1,w
  4583  07A3  1103               	clrz
  4584  07A4  1803               	skipnc
  4585  07A5  0A42               	incf	___ftmul@f2+1,w
  4586  07A6  1D03               	btfss	3,2
  4587  07A7  07CA               	addwf	___ftmul@f3_as_product+1,f
  4588  07A8  0843               	movf	___ftmul@f2+2,w
  4589  07A9  1103               	clrz
  4590  07AA  1803               	skipnc
  4591  07AB  0A43               	incf	___ftmul@f2+2,w
  4592  07AC  1D03               	btfss	3,2
  4593  07AD  07CB               	addwf	___ftmul@f3_as_product+2,f
  4594  07AE                     l2346:	
  4595  07AE  3001               	movlw	1
  4596  07AF                     u3105:	
  4597  07AF  1003               	clrc
  4598  07B0  0CC0               	rrf	___ftmul@f1+2,f
  4599  07B1  0CBF               	rrf	___ftmul@f1+1,f
  4600  07B2  0CBE               	rrf	___ftmul@f1,f
  4601  07B3  3EFF               	addlw	-1
  4602  07B4  1D03               	skipz
  4603  07B5  2FAF               	goto	u3105
  4604  07B6  3001               	movlw	1
  4605  07B7                     u3115:	
  4606  07B7  1003               	clrc
  4607  07B8  0CCB               	rrf	___ftmul@f3_as_product+2,f
  4608  07B9  0CCA               	rrf	___ftmul@f3_as_product+1,f
  4609  07BA  0CC9               	rrf	___ftmul@f3_as_product,f
  4610  07BB  3EFF               	addlw	-1
  4611  07BC  1D03               	skipz
  4612  07BD  2FB7               	goto	u3115
  4613  07BE  3001               	movlw	1
  4614  07BF  02CC               	subwf	___ftmul@cntr,f
  4615  07C0  1D03               	btfss	3,2
  4616  07C1  2F9E               	goto	l2342
  4617  07C2  0849               	movf	___ftmul@f3_as_product,w
  4618  07C3  00A0               	movwf	___ftpack@arg
  4619  07C4  084A               	movf	___ftmul@f3_as_product+1,w
  4620  07C5  00A1               	movwf	___ftpack@arg+1
  4621  07C6  084B               	movf	___ftmul@f3_as_product+2,w
  4622  07C7  00A2               	movwf	___ftpack@arg+2
  4623  07C8  0848               	movf	___ftmul@exp,w
  4624  07C9  00C4               	movwf	??___ftmul
  4625  07CA  0844               	movf	??___ftmul,w
  4626  07CB  00A3               	movwf	___ftpack@exp
  4627  07CC  084D               	movf	___ftmul@sign,w
  4628  07CD  00C5               	movwf	??___ftmul+1
  4629  07CE  0845               	movf	??___ftmul+1,w
  4630  07CF  00A4               	movwf	___ftpack@sign
  4631  07D0  120A  158A  24C1   	fcall	___ftpack
  4632  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  4633  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  4634  07D5  0820               	movf	?___ftpack,w
  4635  07D6  00BE               	movwf	?___ftmul
  4636  07D7  0821               	movf	?___ftpack+1,w
  4637  07D8  00BF               	movwf	?___ftmul+1
  4638  07D9  0822               	movf	?___ftpack+2,w
  4639  07DA  00C0               	movwf	?___ftmul+2
  4640  07DB  0008               	return
  4641  07DC                     __end_of___ftmul:	
  4642                           
  4643                           	psect	text19
  4644  0E3F                     __ptext19:	
  4645 ;; *************** function ___ftdiv *****************
  4646 ;; Defined at:
  4647 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4648 ;; Parameters:    Size  Location     Type
  4649 ;;  f2              3   46[BANK0 ] float 
  4650 ;;  f1              3   49[BANK0 ] float 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;  f3              3   57[BANK0 ] float 
  4653 ;;  sign            1   61[BANK0 ] unsigned char 
  4654 ;;  exp             1   60[BANK0 ] unsigned char 
  4655 ;;  cntr            1   56[BANK0 ] unsigned char 
  4656 ;; Return value:  Size  Location     Type
  4657 ;;                  3   46[BANK0 ] float 
  4658 ;; Registers used:
  4659 ;;		wreg, status,2, status,0, pclath, cstack
  4660 ;; Tracked objects:
  4661 ;;		On entry : 0/0
  4662 ;;		On exit  : 0/0
  4663 ;;		Unchanged: 0/0
  4664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4665 ;;      Params:         0       6       0       0       0
  4666 ;;      Locals:         0       6       0       0       0
  4667 ;;      Temps:          0       4       0       0       0
  4668 ;;      Totals:         0      16       0       0       0
  4669 ;;Total ram usage:       16 bytes
  4670 ;; Hardware stack levels used:    1
  4671 ;; Hardware stack levels required when called:    2
  4672 ;; This function calls:
  4673 ;;		___ftpack
  4674 ;; This function is called by:
  4675 ;;		_CalcMQ135
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           
  4680                           ;psect for function ___ftdiv
  4681  0E3F                     ___ftdiv:	
  4682                           
  4683                           ;incstack = 0
  4684                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4685  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  4686  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  4687  0E41  0851               	movf	___ftdiv@f1,w
  4688  0E42  00D4               	movwf	??___ftdiv
  4689  0E43  0852               	movf	___ftdiv@f1+1,w
  4690  0E44  00D5               	movwf	??___ftdiv+1
  4691  0E45  0853               	movf	___ftdiv@f1+2,w
  4692  0E46  00D6               	movwf	??___ftdiv+2
  4693  0E47  1003               	clrc
  4694  0E48  0D55               	rlf	??___ftdiv+1,w
  4695  0E49  0D56               	rlf	??___ftdiv+2,w
  4696  0E4A  00D7               	movwf	??___ftdiv+3
  4697  0E4B  0857               	movf	??___ftdiv+3,w
  4698  0E4C  00DC               	movwf	___ftdiv@exp
  4699  0E4D  08DC               	movf	___ftdiv@exp,f
  4700  0E4E  1D03               	skipz
  4701  0E4F  2E57               	goto	l2270
  4702  0E50  3000               	movlw	0
  4703  0E51  00CE               	movwf	?___ftdiv
  4704  0E52  3000               	movlw	0
  4705  0E53  00CF               	movwf	?___ftdiv+1
  4706  0E54  3000               	movlw	0
  4707  0E55  00D0               	movwf	?___ftdiv+2
  4708  0E56  0008               	return
  4709  0E57                     l2270:	
  4710  0E57  084E               	movf	___ftdiv@f2,w
  4711  0E58  00D4               	movwf	??___ftdiv
  4712  0E59  084F               	movf	___ftdiv@f2+1,w
  4713  0E5A  00D5               	movwf	??___ftdiv+1
  4714  0E5B  0850               	movf	___ftdiv@f2+2,w
  4715  0E5C  00D6               	movwf	??___ftdiv+2
  4716  0E5D  1003               	clrc
  4717  0E5E  0D55               	rlf	??___ftdiv+1,w
  4718  0E5F  0D56               	rlf	??___ftdiv+2,w
  4719  0E60  00D7               	movwf	??___ftdiv+3
  4720  0E61  0857               	movf	??___ftdiv+3,w
  4721  0E62  00DD               	movwf	___ftdiv@sign
  4722  0E63  08DD               	movf	___ftdiv@sign,f
  4723  0E64  1D03               	skipz
  4724  0E65  2E6D               	goto	l2276
  4725  0E66  3000               	movlw	0
  4726  0E67  00CE               	movwf	?___ftdiv
  4727  0E68  3000               	movlw	0
  4728  0E69  00CF               	movwf	?___ftdiv+1
  4729  0E6A  3000               	movlw	0
  4730  0E6B  00D0               	movwf	?___ftdiv+2
  4731  0E6C  0008               	return
  4732  0E6D                     l2276:	
  4733  0E6D  3000               	movlw	0
  4734  0E6E  00D9               	movwf	___ftdiv@f3
  4735  0E6F  3000               	movlw	0
  4736  0E70  00DA               	movwf	___ftdiv@f3+1
  4737  0E71  3000               	movlw	0
  4738  0E72  00DB               	movwf	___ftdiv@f3+2
  4739  0E73  3089               	movlw	137
  4740  0E74  075D               	addwf	___ftdiv@sign,w
  4741  0E75  00D4               	movwf	??___ftdiv
  4742  0E76  0854               	movf	??___ftdiv,w
  4743  0E77  02DC               	subwf	___ftdiv@exp,f
  4744  0E78  0851               	movf	___ftdiv@f1,w
  4745  0E79  00D4               	movwf	??___ftdiv
  4746  0E7A  0852               	movf	___ftdiv@f1+1,w
  4747  0E7B  00D5               	movwf	??___ftdiv+1
  4748  0E7C  0853               	movf	___ftdiv@f1+2,w
  4749  0E7D  00D6               	movwf	??___ftdiv+2
  4750  0E7E  3010               	movlw	16
  4751  0E7F                     u2935:	
  4752  0E7F  1003               	clrc
  4753  0E80  0CD6               	rrf	??___ftdiv+2,f
  4754  0E81  0CD5               	rrf	??___ftdiv+1,f
  4755  0E82  0CD4               	rrf	??___ftdiv,f
  4756  0E83  3EFF               	addlw	-1
  4757  0E84  1D03               	skipz
  4758  0E85  2E7F               	goto	u2935
  4759  0E86  0854               	movf	??___ftdiv,w
  4760  0E87  00D7               	movwf	??___ftdiv+3
  4761  0E88  0857               	movf	??___ftdiv+3,w
  4762  0E89  00DD               	movwf	___ftdiv@sign
  4763  0E8A  084E               	movf	___ftdiv@f2,w
  4764  0E8B  00D4               	movwf	??___ftdiv
  4765  0E8C  084F               	movf	___ftdiv@f2+1,w
  4766  0E8D  00D5               	movwf	??___ftdiv+1
  4767  0E8E  0850               	movf	___ftdiv@f2+2,w
  4768  0E8F  00D6               	movwf	??___ftdiv+2
  4769  0E90  3010               	movlw	16
  4770  0E91                     u2945:	
  4771  0E91  1003               	clrc
  4772  0E92  0CD6               	rrf	??___ftdiv+2,f
  4773  0E93  0CD5               	rrf	??___ftdiv+1,f
  4774  0E94  0CD4               	rrf	??___ftdiv,f
  4775  0E95  3EFF               	addlw	-1
  4776  0E96  1D03               	skipz
  4777  0E97  2E91               	goto	u2945
  4778  0E98  0854               	movf	??___ftdiv,w
  4779  0E99  00D7               	movwf	??___ftdiv+3
  4780  0E9A  0857               	movf	??___ftdiv+3,w
  4781  0E9B  06DD               	xorwf	___ftdiv@sign,f
  4782  0E9C  3080               	movlw	128
  4783  0E9D  00D4               	movwf	??___ftdiv
  4784  0E9E  0854               	movf	??___ftdiv,w
  4785  0E9F  05DD               	andwf	___ftdiv@sign,f
  4786  0EA0  17D2               	bsf	___ftdiv@f1+1,7
  4787  0EA1  30FF               	movlw	255
  4788  0EA2  05D1               	andwf	___ftdiv@f1,f
  4789  0EA3  30FF               	movlw	255
  4790  0EA4  05D2               	andwf	___ftdiv@f1+1,f
  4791  0EA5  3000               	movlw	0
  4792  0EA6  05D3               	andwf	___ftdiv@f1+2,f
  4793  0EA7  17CF               	bsf	___ftdiv@f2+1,7
  4794  0EA8  30FF               	movlw	255
  4795  0EA9  05CE               	andwf	___ftdiv@f2,f
  4796  0EAA  30FF               	movlw	255
  4797  0EAB  05CF               	andwf	___ftdiv@f2+1,f
  4798  0EAC  3000               	movlw	0
  4799  0EAD  05D0               	andwf	___ftdiv@f2+2,f
  4800  0EAE  3018               	movlw	24
  4801  0EAF  00D4               	movwf	??___ftdiv
  4802  0EB0  0854               	movf	??___ftdiv,w
  4803  0EB1  00D8               	movwf	___ftdiv@cntr
  4804  0EB2                     l2290:	
  4805  0EB2  3001               	movlw	1
  4806  0EB3                     u2955:	
  4807  0EB3  1003               	clrc
  4808  0EB4  0DD9               	rlf	___ftdiv@f3,f
  4809  0EB5  0DDA               	rlf	___ftdiv@f3+1,f
  4810  0EB6  0DDB               	rlf	___ftdiv@f3+2,f
  4811  0EB7  3EFF               	addlw	-1
  4812  0EB8  1D03               	skipz
  4813  0EB9  2EB3               	goto	u2955
  4814  0EBA  0850               	movf	___ftdiv@f2+2,w
  4815  0EBB  0253               	subwf	___ftdiv@f1+2,w
  4816  0EBC  1D03               	skipz
  4817  0EBD  2EC4               	goto	u2965
  4818  0EBE  084F               	movf	___ftdiv@f2+1,w
  4819  0EBF  0252               	subwf	___ftdiv@f1+1,w
  4820  0EC0  1D03               	skipz
  4821  0EC1  2EC4               	goto	u2965
  4822  0EC2  084E               	movf	___ftdiv@f2,w
  4823  0EC3  0251               	subwf	___ftdiv@f1,w
  4824  0EC4                     u2965:	
  4825  0EC4  1C03               	skipc
  4826  0EC5  2ED1               	goto	l2298
  4827  0EC6  084E               	movf	___ftdiv@f2,w
  4828  0EC7  02D1               	subwf	___ftdiv@f1,f
  4829  0EC8  084F               	movf	___ftdiv@f2+1,w
  4830  0EC9  1C03               	skipc
  4831  0ECA  0F4F               	incfsz	___ftdiv@f2+1,w
  4832  0ECB  02D2               	subwf	___ftdiv@f1+1,f
  4833  0ECC  0850               	movf	___ftdiv@f2+2,w
  4834  0ECD  1C03               	skipc
  4835  0ECE  0A50               	incf	___ftdiv@f2+2,w
  4836  0ECF  02D3               	subwf	___ftdiv@f1+2,f
  4837  0ED0  1459               	bsf	___ftdiv@f3,0
  4838  0ED1                     l2298:	
  4839  0ED1  3001               	movlw	1
  4840  0ED2                     u2975:	
  4841  0ED2  1003               	clrc
  4842  0ED3  0DD1               	rlf	___ftdiv@f1,f
  4843  0ED4  0DD2               	rlf	___ftdiv@f1+1,f
  4844  0ED5  0DD3               	rlf	___ftdiv@f1+2,f
  4845  0ED6  3EFF               	addlw	-1
  4846  0ED7  1D03               	skipz
  4847  0ED8  2ED2               	goto	u2975
  4848  0ED9  3001               	movlw	1
  4849  0EDA  02D8               	subwf	___ftdiv@cntr,f
  4850  0EDB  1D03               	btfss	3,2
  4851  0EDC  2EB2               	goto	l2290
  4852  0EDD  0859               	movf	___ftdiv@f3,w
  4853  0EDE  00A0               	movwf	___ftpack@arg
  4854  0EDF  085A               	movf	___ftdiv@f3+1,w
  4855  0EE0  00A1               	movwf	___ftpack@arg+1
  4856  0EE1  085B               	movf	___ftdiv@f3+2,w
  4857  0EE2  00A2               	movwf	___ftpack@arg+2
  4858  0EE3  085C               	movf	___ftdiv@exp,w
  4859  0EE4  00D4               	movwf	??___ftdiv
  4860  0EE5  0854               	movf	??___ftdiv,w
  4861  0EE6  00A3               	movwf	___ftpack@exp
  4862  0EE7  085D               	movf	___ftdiv@sign,w
  4863  0EE8  00D5               	movwf	??___ftdiv+1
  4864  0EE9  0855               	movf	??___ftdiv+1,w
  4865  0EEA  00A4               	movwf	___ftpack@sign
  4866  0EEB  120A  158A  24C1   	fcall	___ftpack
  4867  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  4868  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  4869  0EF0  0820               	movf	?___ftpack,w
  4870  0EF1  00CE               	movwf	?___ftdiv
  4871  0EF2  0821               	movf	?___ftpack+1,w
  4872  0EF3  00CF               	movwf	?___ftdiv+1
  4873  0EF4  0822               	movf	?___ftpack+2,w
  4874  0EF5  00D0               	movwf	?___ftdiv+2
  4875  0EF6  0008               	return
  4876  0EF7                     __end_of___ftdiv:	
  4877                           
  4878                           	psect	text20
  4879  0EF7                     __ptext20:	
  4880 ;; *************** function ___ftadd *****************
  4881 ;; Defined at:
  4882 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;  f1              3   17[BANK0 ] float 
  4885 ;;  f2              3   20[BANK0 ] float 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  exp1            1   29[BANK0 ] unsigned char 
  4888 ;;  exp2            1   28[BANK0 ] unsigned char 
  4889 ;;  sign            1   27[BANK0 ] unsigned char 
  4890 ;; Return value:  Size  Location     Type
  4891 ;;                  3   17[BANK0 ] float 
  4892 ;; Registers used:
  4893 ;;		wreg, status,2, status,0, pclath, cstack
  4894 ;; Tracked objects:
  4895 ;;		On entry : 0/0
  4896 ;;		On exit  : 0/0
  4897 ;;		Unchanged: 0/0
  4898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4899 ;;      Params:         0       6       0       0       0
  4900 ;;      Locals:         0       3       0       0       0
  4901 ;;      Temps:          0       4       0       0       0
  4902 ;;      Totals:         0      13       0       0       0
  4903 ;;Total ram usage:       13 bytes
  4904 ;; Hardware stack levels used:    1
  4905 ;; Hardware stack levels required when called:    2
  4906 ;; This function calls:
  4907 ;;		___ftpack
  4908 ;; This function is called by:
  4909 ;;		_CalcMQ135
  4910 ;;		_displayPPM
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           
  4915                           ;psect for function ___ftadd
  4916  0EF7                     ___ftadd:	
  4917                           
  4918                           ;incstack = 0
  4919                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4920  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  4921  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  4922  0EF9  0831               	movf	___ftadd@f1,w
  4923  0EFA  00B7               	movwf	??___ftadd
  4924  0EFB  0832               	movf	___ftadd@f1+1,w
  4925  0EFC  00B8               	movwf	??___ftadd+1
  4926  0EFD  0833               	movf	___ftadd@f1+2,w
  4927  0EFE  00B9               	movwf	??___ftadd+2
  4928  0EFF  1003               	clrc
  4929  0F00  0D38               	rlf	??___ftadd+1,w
  4930  0F01  0D39               	rlf	??___ftadd+2,w
  4931  0F02  00BA               	movwf	??___ftadd+3
  4932  0F03  083A               	movf	??___ftadd+3,w
  4933  0F04  00BD               	movwf	___ftadd@exp1
  4934  0F05  0834               	movf	___ftadd@f2,w
  4935  0F06  00B7               	movwf	??___ftadd
  4936  0F07  0835               	movf	___ftadd@f2+1,w
  4937  0F08  00B8               	movwf	??___ftadd+1
  4938  0F09  0836               	movf	___ftadd@f2+2,w
  4939  0F0A  00B9               	movwf	??___ftadd+2
  4940  0F0B  1003               	clrc
  4941  0F0C  0D38               	rlf	??___ftadd+1,w
  4942  0F0D  0D39               	rlf	??___ftadd+2,w
  4943  0F0E  00BA               	movwf	??___ftadd+3
  4944  0F0F  083A               	movf	??___ftadd+3,w
  4945  0F10  00BC               	movwf	___ftadd@exp2
  4946  0F11  083D               	movf	___ftadd@exp1,w
  4947  0F12  1903               	btfsc	3,2
  4948  0F13  2F20               	goto	l2200
  4949  0F14  083C               	movf	___ftadd@exp2,w
  4950  0F15  023D               	subwf	___ftadd@exp1,w
  4951  0F16  1803               	skipnc
  4952  0F17  2F27               	goto	l2204
  4953  0F18  033D               	decf	___ftadd@exp1,w
  4954  0F19  3AFF               	xorlw	255
  4955  0F1A  073C               	addwf	___ftadd@exp2,w
  4956  0F1B  00B7               	movwf	??___ftadd
  4957  0F1C  3019               	movlw	25
  4958  0F1D  0237               	subwf	??___ftadd,w
  4959  0F1E  1C03               	skipc
  4960  0F1F  2F27               	goto	l2204
  4961  0F20                     l2200:	
  4962  0F20  0834               	movf	___ftadd@f2,w
  4963  0F21  00B1               	movwf	?___ftadd
  4964  0F22  0835               	movf	___ftadd@f2+1,w
  4965  0F23  00B2               	movwf	?___ftadd+1
  4966  0F24  0836               	movf	___ftadd@f2+2,w
  4967  0F25  00B3               	movwf	?___ftadd+2
  4968  0F26  0008               	return
  4969  0F27                     l2204:	
  4970  0F27  083C               	movf	___ftadd@exp2,w
  4971  0F28  1903               	btfsc	3,2
  4972  0F29  0008               	return
  4973  0F2A  083D               	movf	___ftadd@exp1,w
  4974  0F2B  023C               	subwf	___ftadd@exp2,w
  4975  0F2C  1803               	skipnc
  4976  0F2D  2F36               	goto	l2210
  4977  0F2E  033C               	decf	___ftadd@exp2,w
  4978  0F2F  3AFF               	xorlw	255
  4979  0F30  073D               	addwf	___ftadd@exp1,w
  4980  0F31  00B7               	movwf	??___ftadd
  4981  0F32  3019               	movlw	25
  4982  0F33  0237               	subwf	??___ftadd,w
  4983  0F34  1803               	btfsc	3,0
  4984  0F35  0008               	return
  4985  0F36                     l2210:	
  4986  0F36  3006               	movlw	6
  4987  0F37  00B7               	movwf	??___ftadd
  4988  0F38  0837               	movf	??___ftadd,w
  4989  0F39  00BB               	movwf	___ftadd@sign
  4990  0F3A  1BB3               	btfsc	___ftadd@f1+2,7
  4991  0F3B  17BB               	bsf	___ftadd@sign,7
  4992  0F3C  1BB6               	btfsc	___ftadd@f2+2,7
  4993  0F3D  173B               	bsf	___ftadd@sign,6
  4994  0F3E  17B2               	bsf	___ftadd@f1+1,7
  4995  0F3F  30FF               	movlw	255
  4996  0F40  05B1               	andwf	___ftadd@f1,f
  4997  0F41  30FF               	movlw	255
  4998  0F42  05B2               	andwf	___ftadd@f1+1,f
  4999  0F43  3000               	movlw	0
  5000  0F44  05B3               	andwf	___ftadd@f1+2,f
  5001  0F45  17B5               	bsf	___ftadd@f2+1,7
  5002  0F46  30FF               	movlw	255
  5003  0F47  05B4               	andwf	___ftadd@f2,f
  5004  0F48  30FF               	movlw	255
  5005  0F49  05B5               	andwf	___ftadd@f2+1,f
  5006  0F4A  3000               	movlw	0
  5007  0F4B  05B6               	andwf	___ftadd@f2+2,f
  5008  0F4C  083C               	movf	___ftadd@exp2,w
  5009  0F4D  023D               	subwf	___ftadd@exp1,w
  5010  0F4E  1803               	skipnc
  5011  0F4F  2F76               	goto	l2232
  5012  0F50                     l2222:	
  5013  0F50  3001               	movlw	1
  5014  0F51                     u2765:	
  5015  0F51  1003               	clrc
  5016  0F52  0DB4               	rlf	___ftadd@f2,f
  5017  0F53  0DB5               	rlf	___ftadd@f2+1,f
  5018  0F54  0DB6               	rlf	___ftadd@f2+2,f
  5019  0F55  3EFF               	addlw	-1
  5020  0F56  1D03               	skipz
  5021  0F57  2F51               	goto	u2765
  5022  0F58  3001               	movlw	1
  5023  0F59  02BC               	subwf	___ftadd@exp2,f
  5024  0F5A  083C               	movf	___ftadd@exp2,w
  5025  0F5B  063D               	xorwf	___ftadd@exp1,w
  5026  0F5C  1903               	skipnz
  5027  0F5D  2F71               	goto	l2230
  5028  0F5E  3001               	movlw	1
  5029  0F5F  02BB               	subwf	___ftadd@sign,f
  5030  0F60  083B               	movf	___ftadd@sign,w
  5031  0F61  3907               	andlw	7
  5032  0F62  1903               	btfsc	3,2
  5033  0F63  2F71               	goto	l2230
  5034  0F64  2F50               	goto	l2222
  5035  0F65                     l2228:	
  5036  0F65  3001               	movlw	1
  5037  0F66                     u2795:	
  5038  0F66  1003               	clrc
  5039  0F67  0CB3               	rrf	___ftadd@f1+2,f
  5040  0F68  0CB2               	rrf	___ftadd@f1+1,f
  5041  0F69  0CB1               	rrf	___ftadd@f1,f
  5042  0F6A  3EFF               	addlw	-1
  5043  0F6B  1D03               	skipz
  5044  0F6C  2F66               	goto	u2795
  5045  0F6D  3001               	movlw	1
  5046  0F6E  00B7               	movwf	??___ftadd
  5047  0F6F  0837               	movf	??___ftadd,w
  5048  0F70  07BD               	addwf	___ftadd@exp1,f
  5049  0F71                     l2230:	
  5050  0F71  083D               	movf	___ftadd@exp1,w
  5051  0F72  063C               	xorwf	___ftadd@exp2,w
  5052  0F73  1903               	btfsc	3,2
  5053  0F74  2F9F               	goto	l510
  5054  0F75  2F65               	goto	l2228
  5055  0F76                     l2232:	
  5056  0F76  083D               	movf	___ftadd@exp1,w
  5057  0F77  023C               	subwf	___ftadd@exp2,w
  5058  0F78  1803               	skipnc
  5059  0F79  2F9F               	goto	l510
  5060  0F7A                     l2234:	
  5061  0F7A  3001               	movlw	1
  5062  0F7B                     u2825:	
  5063  0F7B  1003               	clrc
  5064  0F7C  0DB1               	rlf	___ftadd@f1,f
  5065  0F7D  0DB2               	rlf	___ftadd@f1+1,f
  5066  0F7E  0DB3               	rlf	___ftadd@f1+2,f
  5067  0F7F  3EFF               	addlw	-1
  5068  0F80  1D03               	skipz
  5069  0F81  2F7B               	goto	u2825
  5070  0F82  3001               	movlw	1
  5071  0F83  02BD               	subwf	___ftadd@exp1,f
  5072  0F84  083C               	movf	___ftadd@exp2,w
  5073  0F85  063D               	xorwf	___ftadd@exp1,w
  5074  0F86  1903               	skipnz
  5075  0F87  2F9B               	goto	l2242
  5076  0F88  3001               	movlw	1
  5077  0F89  02BB               	subwf	___ftadd@sign,f
  5078  0F8A  083B               	movf	___ftadd@sign,w
  5079  0F8B  3907               	andlw	7
  5080  0F8C  1903               	btfsc	3,2
  5081  0F8D  2F9B               	goto	l2242
  5082  0F8E  2F7A               	goto	l2234
  5083  0F8F                     l2240:	
  5084  0F8F  3001               	movlw	1
  5085  0F90                     u2855:	
  5086  0F90  1003               	clrc
  5087  0F91  0CB6               	rrf	___ftadd@f2+2,f
  5088  0F92  0CB5               	rrf	___ftadd@f2+1,f
  5089  0F93  0CB4               	rrf	___ftadd@f2,f
  5090  0F94  3EFF               	addlw	-1
  5091  0F95  1D03               	skipz
  5092  0F96  2F90               	goto	u2855
  5093  0F97  3001               	movlw	1
  5094  0F98  00B7               	movwf	??___ftadd
  5095  0F99  0837               	movf	??___ftadd,w
  5096  0F9A  07BC               	addwf	___ftadd@exp2,f
  5097  0F9B                     l2242:	
  5098  0F9B  083D               	movf	___ftadd@exp1,w
  5099  0F9C  063C               	xorwf	___ftadd@exp2,w
  5100  0F9D  1D03               	skipz
  5101  0F9E  2F8F               	goto	l2240
  5102  0F9F                     l510:	
  5103  0F9F  1FBB               	btfss	___ftadd@sign,7
  5104  0FA0  2FB1               	goto	l2246
  5105  0FA1  30FF               	movlw	255
  5106  0FA2  06B1               	xorwf	___ftadd@f1,f
  5107  0FA3  30FF               	movlw	255
  5108  0FA4  06B2               	xorwf	___ftadd@f1+1,f
  5109  0FA5  30FF               	movlw	255
  5110  0FA6  06B3               	xorwf	___ftadd@f1+2,f
  5111  0FA7  3001               	movlw	1
  5112  0FA8  07B1               	addwf	___ftadd@f1,f
  5113  0FA9  3000               	movlw	0
  5114  0FAA  1803               	skipnc
  5115  0FAB  3001               	movlw	1
  5116  0FAC  07B2               	addwf	___ftadd@f1+1,f
  5117  0FAD  3000               	movlw	0
  5118  0FAE  1803               	skipnc
  5119  0FAF  3001               	movlw	1
  5120  0FB0  07B3               	addwf	___ftadd@f1+2,f
  5121  0FB1                     l2246:	
  5122  0FB1  1F3B               	btfss	___ftadd@sign,6
  5123  0FB2  2FC3               	goto	l2250
  5124  0FB3  30FF               	movlw	255
  5125  0FB4  06B4               	xorwf	___ftadd@f2,f
  5126  0FB5  30FF               	movlw	255
  5127  0FB6  06B5               	xorwf	___ftadd@f2+1,f
  5128  0FB7  30FF               	movlw	255
  5129  0FB8  06B6               	xorwf	___ftadd@f2+2,f
  5130  0FB9  3001               	movlw	1
  5131  0FBA  07B4               	addwf	___ftadd@f2,f
  5132  0FBB  3000               	movlw	0
  5133  0FBC  1803               	skipnc
  5134  0FBD  3001               	movlw	1
  5135  0FBE  07B5               	addwf	___ftadd@f2+1,f
  5136  0FBF  3000               	movlw	0
  5137  0FC0  1803               	skipnc
  5138  0FC1  3001               	movlw	1
  5139  0FC2  07B6               	addwf	___ftadd@f2+2,f
  5140  0FC3                     l2250:	
  5141  0FC3  01BB               	clrf	___ftadd@sign
  5142  0FC4  0831               	movf	___ftadd@f1,w
  5143  0FC5  07B4               	addwf	___ftadd@f2,f
  5144  0FC6  0832               	movf	___ftadd@f1+1,w
  5145  0FC7  1103               	clrz
  5146  0FC8  1803               	skipnc
  5147  0FC9  0A32               	incf	___ftadd@f1+1,w
  5148  0FCA  1D03               	btfss	3,2
  5149  0FCB  07B5               	addwf	___ftadd@f2+1,f
  5150  0FCC  0833               	movf	___ftadd@f1+2,w
  5151  0FCD  1103               	clrz
  5152  0FCE  1803               	skipnc
  5153  0FCF  0A33               	incf	___ftadd@f1+2,w
  5154  0FD0  1D03               	btfss	3,2
  5155  0FD1  07B6               	addwf	___ftadd@f2+2,f
  5156  0FD2  1FB6               	btfss	___ftadd@f2+2,7
  5157  0FD3  2FE6               	goto	l2260
  5158  0FD4  30FF               	movlw	255
  5159  0FD5  06B4               	xorwf	___ftadd@f2,f
  5160  0FD6  30FF               	movlw	255
  5161  0FD7  06B5               	xorwf	___ftadd@f2+1,f
  5162  0FD8  30FF               	movlw	255
  5163  0FD9  06B6               	xorwf	___ftadd@f2+2,f
  5164  0FDA  3001               	movlw	1
  5165  0FDB  07B4               	addwf	___ftadd@f2,f
  5166  0FDC  3000               	movlw	0
  5167  0FDD  1803               	skipnc
  5168  0FDE  3001               	movlw	1
  5169  0FDF  07B5               	addwf	___ftadd@f2+1,f
  5170  0FE0  3000               	movlw	0
  5171  0FE1  1803               	skipnc
  5172  0FE2  3001               	movlw	1
  5173  0FE3  07B6               	addwf	___ftadd@f2+2,f
  5174  0FE4  01BB               	clrf	___ftadd@sign
  5175  0FE5  0ABB               	incf	___ftadd@sign,f
  5176  0FE6                     l2260:	
  5177  0FE6  0834               	movf	___ftadd@f2,w
  5178  0FE7  00A0               	movwf	___ftpack@arg
  5179  0FE8  0835               	movf	___ftadd@f2+1,w
  5180  0FE9  00A1               	movwf	___ftpack@arg+1
  5181  0FEA  0836               	movf	___ftadd@f2+2,w
  5182  0FEB  00A2               	movwf	___ftpack@arg+2
  5183  0FEC  083D               	movf	___ftadd@exp1,w
  5184  0FED  00B7               	movwf	??___ftadd
  5185  0FEE  0837               	movf	??___ftadd,w
  5186  0FEF  00A3               	movwf	___ftpack@exp
  5187  0FF0  083B               	movf	___ftadd@sign,w
  5188  0FF1  00B8               	movwf	??___ftadd+1
  5189  0FF2  0838               	movf	??___ftadd+1,w
  5190  0FF3  00A4               	movwf	___ftpack@sign
  5191  0FF4  120A  158A  24C1   	fcall	___ftpack
  5192  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  5193  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  5194  0FF9  0820               	movf	?___ftpack,w
  5195  0FFA  00B1               	movwf	?___ftadd
  5196  0FFB  0821               	movf	?___ftpack+1,w
  5197  0FFC  00B2               	movwf	?___ftadd+1
  5198  0FFD  0822               	movf	?___ftpack+2,w
  5199  0FFE  00B3               	movwf	?___ftadd+2
  5200  0FFF  0008               	return
  5201  1000                     __end_of___ftadd:	
  5202                           
  5203                           	psect	text21
  5204  0A60                     __ptext21:	
  5205 ;; *************** function ___awtoft *****************
  5206 ;; Defined at:
  5207 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  c               2    8[BANK0 ] int 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  sign            1   13[BANK0 ] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  3    8[BANK0 ] float 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0, pclath, cstack
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5221 ;;      Params:         0       3       0       0       0
  5222 ;;      Locals:         0       1       0       0       0
  5223 ;;      Temps:          0       2       0       0       0
  5224 ;;      Totals:         0       6       0       0       0
  5225 ;;Total ram usage:        6 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; Hardware stack levels required when called:    2
  5228 ;; This function calls:
  5229 ;;		___ftpack
  5230 ;; This function is called by:
  5231 ;;		_CalcMQ135
  5232 ;;		_displayPPM
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           
  5237                           ;psect for function ___awtoft
  5238  0A60                     ___awtoft:	
  5239                           
  5240                           ;incstack = 0
  5241                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  5242  0A60  1283               	bcf	3,5	;RP0=0, select bank0
  5243  0A61  1303               	bcf	3,6	;RP1=0, select bank0
  5244  0A62  01AD               	clrf	___awtoft@sign
  5245  0A63  1FA9               	btfss	___awtoft@c+1,7
  5246  0A64  2A6C               	goto	l2188
  5247  0A65  09A8               	comf	___awtoft@c,f
  5248  0A66  09A9               	comf	___awtoft@c+1,f
  5249  0A67  0AA8               	incf	___awtoft@c,f
  5250  0A68  1903               	skipnz
  5251  0A69  0AA9               	incf	___awtoft@c+1,f
  5252  0A6A  01AD               	clrf	___awtoft@sign
  5253  0A6B  0AAD               	incf	___awtoft@sign,f
  5254  0A6C                     l2188:	
  5255  0A6C  0828               	movf	___awtoft@c,w
  5256  0A6D  00A0               	movwf	___ftpack@arg
  5257  0A6E  0829               	movf	___awtoft@c+1,w
  5258  0A6F  00A1               	movwf	___ftpack@arg+1
  5259  0A70  01A2               	clrf	___ftpack@arg+2
  5260  0A71  308E               	movlw	142
  5261  0A72  00AB               	movwf	??___awtoft
  5262  0A73  082B               	movf	??___awtoft,w
  5263  0A74  00A3               	movwf	___ftpack@exp
  5264  0A75  082D               	movf	___awtoft@sign,w
  5265  0A76  00AC               	movwf	??___awtoft+1
  5266  0A77  082C               	movf	??___awtoft+1,w
  5267  0A78  00A4               	movwf	___ftpack@sign
  5268  0A79  120A  158A  24C1   	fcall	___ftpack
  5269  0A7C  1283               	bcf	3,5	;RP0=0, select bank0
  5270  0A7D  1303               	bcf	3,6	;RP1=0, select bank0
  5271  0A7E  0820               	movf	?___ftpack,w
  5272  0A7F  00A8               	movwf	?___awtoft
  5273  0A80  0821               	movf	?___ftpack+1,w
  5274  0A81  00A9               	movwf	?___awtoft+1
  5275  0A82  0822               	movf	?___ftpack+2,w
  5276  0A83  00AA               	movwf	?___awtoft+2
  5277  0A84  0008               	return
  5278  0A85                     __end_of___awtoft:	
  5279                           
  5280                           	psect	text22
  5281  0CC1                     __ptext22:	
  5282 ;; *************** function ___ftpack *****************
  5283 ;; Defined at:
  5284 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  5285 ;; Parameters:    Size  Location     Type
  5286 ;;  arg             3    0[BANK0 ] unsigned um
  5287 ;;  exp             1    3[BANK0 ] unsigned char 
  5288 ;;  sign            1    4[BANK0 ] unsigned char 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;		None
  5291 ;; Return value:  Size  Location     Type
  5292 ;;                  3    0[BANK0 ] float 
  5293 ;; Registers used:
  5294 ;;		wreg, status,2, status,0
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5300 ;;      Params:         0       5       0       0       0
  5301 ;;      Locals:         0       0       0       0       0
  5302 ;;      Temps:          0       3       0       0       0
  5303 ;;      Totals:         0       8       0       0       0
  5304 ;;Total ram usage:        8 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; Hardware stack levels required when called:    1
  5307 ;; This function calls:
  5308 ;;		Nothing
  5309 ;; This function is called by:
  5310 ;;		___awtoft
  5311 ;;		___ftadd
  5312 ;;		___ftdiv
  5313 ;;		___ftmul
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           
  5318                           ;psect for function ___ftpack
  5319  0CC1                     ___ftpack:	
  5320                           
  5321                           ;incstack = 0
  5322                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  5323  0CC1  1283               	bcf	3,5	;RP0=0, select bank0
  5324  0CC2  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0CC3  0823               	movf	___ftpack@exp,w
  5326  0CC4  1903               	btfsc	3,2
  5327  0CC5  2CCB               	goto	l2110
  5328  0CC6  0822               	movf	___ftpack@arg+2,w
  5329  0CC7  0421               	iorwf	___ftpack@arg+1,w
  5330  0CC8  0420               	iorwf	___ftpack@arg,w
  5331  0CC9  1D03               	skipz
  5332  0CCA  2CDE               	goto	l2116
  5333  0CCB                     l2110:	
  5334  0CCB  3000               	movlw	0
  5335  0CCC  00A0               	movwf	?___ftpack
  5336  0CCD  3000               	movlw	0
  5337  0CCE  00A1               	movwf	?___ftpack+1
  5338  0CCF  3000               	movlw	0
  5339  0CD0  00A2               	movwf	?___ftpack+2
  5340  0CD1  0008               	return
  5341  0CD2                     l2114:	
  5342  0CD2  3001               	movlw	1
  5343  0CD3  00A5               	movwf	??___ftpack
  5344  0CD4  0825               	movf	??___ftpack,w
  5345  0CD5  07A3               	addwf	___ftpack@exp,f
  5346  0CD6  3001               	movlw	1
  5347  0CD7                     u2515:	
  5348  0CD7  1003               	clrc
  5349  0CD8  0CA2               	rrf	___ftpack@arg+2,f
  5350  0CD9  0CA1               	rrf	___ftpack@arg+1,f
  5351  0CDA  0CA0               	rrf	___ftpack@arg,f
  5352  0CDB  3EFF               	addlw	-1
  5353  0CDC  1D03               	skipz
  5354  0CDD  2CD7               	goto	u2515
  5355  0CDE                     l2116:	
  5356  0CDE  30FE               	movlw	254
  5357  0CDF  0522               	andwf	___ftpack@arg+2,w
  5358  0CE0  1903               	btfsc	3,2
  5359  0CE1  2CF9               	goto	l481
  5360  0CE2  2CD2               	goto	l2114
  5361  0CE3                     l2118:	
  5362  0CE3  3001               	movlw	1
  5363  0CE4  00A5               	movwf	??___ftpack
  5364  0CE5  0825               	movf	??___ftpack,w
  5365  0CE6  07A3               	addwf	___ftpack@exp,f
  5366  0CE7  3001               	movlw	1
  5367  0CE8  07A0               	addwf	___ftpack@arg,f
  5368  0CE9  3000               	movlw	0
  5369  0CEA  1803               	skipnc
  5370  0CEB  3001               	movlw	1
  5371  0CEC  07A1               	addwf	___ftpack@arg+1,f
  5372  0CED  3000               	movlw	0
  5373  0CEE  1803               	skipnc
  5374  0CEF  3001               	movlw	1
  5375  0CF0  07A2               	addwf	___ftpack@arg+2,f
  5376  0CF1  3001               	movlw	1
  5377  0CF2                     u2535:	
  5378  0CF2  1003               	clrc
  5379  0CF3  0CA2               	rrf	___ftpack@arg+2,f
  5380  0CF4  0CA1               	rrf	___ftpack@arg+1,f
  5381  0CF5  0CA0               	rrf	___ftpack@arg,f
  5382  0CF6  3EFF               	addlw	-1
  5383  0CF7  1D03               	skipz
  5384  0CF8  2CF2               	goto	u2535
  5385  0CF9                     l481:	
  5386  0CF9  30FF               	movlw	255
  5387  0CFA  0522               	andwf	___ftpack@arg+2,w
  5388  0CFB  1903               	btfsc	3,2
  5389  0CFC  2D08               	goto	l2126
  5390  0CFD  2CE3               	goto	l2118
  5391  0CFE                     l2124:	
  5392  0CFE  3001               	movlw	1
  5393  0CFF  02A3               	subwf	___ftpack@exp,f
  5394  0D00  3001               	movlw	1
  5395  0D01                     u2555:	
  5396  0D01  1003               	clrc
  5397  0D02  0DA0               	rlf	___ftpack@arg,f
  5398  0D03  0DA1               	rlf	___ftpack@arg+1,f
  5399  0D04  0DA2               	rlf	___ftpack@arg+2,f
  5400  0D05  3EFF               	addlw	-1
  5401  0D06  1D03               	skipz
  5402  0D07  2D01               	goto	u2555
  5403  0D08                     l2126:	
  5404  0D08  1FA1               	btfss	___ftpack@arg+1,7
  5405  0D09  2CFE               	goto	l2124
  5406  0D0A  1823               	btfsc	___ftpack@exp,0
  5407  0D0B  2D12               	goto	l487
  5408  0D0C  30FF               	movlw	255
  5409  0D0D  05A0               	andwf	___ftpack@arg,f
  5410  0D0E  307F               	movlw	127
  5411  0D0F  05A1               	andwf	___ftpack@arg+1,f
  5412  0D10  30FF               	movlw	255
  5413  0D11  05A2               	andwf	___ftpack@arg+2,f
  5414  0D12                     l487:	
  5415  0D12  1003               	clrc
  5416  0D13  0CA3               	rrf	___ftpack@exp,f
  5417  0D14  0823               	movf	___ftpack@exp,w
  5418  0D15  00A5               	movwf	??___ftpack
  5419  0D16  01A6               	clrf	??___ftpack+1
  5420  0D17  01A7               	clrf	??___ftpack+2
  5421  0D18  3010               	movlw	16
  5422  0D19                     u2585:	
  5423  0D19  1003               	clrc
  5424  0D1A  0DA5               	rlf	??___ftpack,f
  5425  0D1B  0DA6               	rlf	??___ftpack+1,f
  5426  0D1C  0DA7               	rlf	??___ftpack+2,f
  5427  0D1D  3EFF               	addlw	-1
  5428  0D1E  1D03               	skipz
  5429  0D1F  2D19               	goto	u2585
  5430  0D20  0825               	movf	??___ftpack,w
  5431  0D21  04A0               	iorwf	___ftpack@arg,f
  5432  0D22  0826               	movf	??___ftpack+1,w
  5433  0D23  04A1               	iorwf	___ftpack@arg+1,f
  5434  0D24  0827               	movf	??___ftpack+2,w
  5435  0D25  04A2               	iorwf	___ftpack@arg+2,f
  5436  0D26  0824               	movf	___ftpack@sign,w
  5437  0D27  1903               	btfsc	3,2
  5438  0D28  0008               	return
  5439  0D29  17A2               	bsf	___ftpack@arg+2,7
  5440  0D2A  0008               	return
  5441  0D2B                     __end_of___ftpack:	
  5442                           
  5443                           	psect	text23
  5444  0B8D                     __ptext23:	
  5445 ;; *************** function _checkSensors *****************
  5446 ;; Defined at:
  5447 ;;		line 144 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5448 ;; Parameters:    Size  Location     Type
  5449 ;;		None
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;		None
  5452 ;; Return value:  Size  Location     Type
  5453 ;;		None               void
  5454 ;; Registers used:
  5455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         0       0       0       0       0
  5462 ;;      Locals:         0       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0
  5464 ;;      Totals:         0       0       0       0       0
  5465 ;;Total ram usage:        0 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    3
  5468 ;; This function calls:
  5469 ;;		___ftge
  5470 ;;		_instCTRL
  5471 ;;		_printToLCD
  5472 ;; This function is called by:
  5473 ;;		_updateDisplay
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           
  5478                           ;psect for function _checkSensors
  5479  0B8D                     _checkSensors:	
  5480                           
  5481                           ;main.c: 147: if (PPM > 9)
  5482                           
  5483                           ;incstack = 0
  5484                           ; Regs used in _checkSensors: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5485  0B8D  3000               	movlw	0
  5486  0B8E  1283               	bcf	3,5	;RP0=0, select bank0
  5487  0B8F  1303               	bcf	3,6	;RP1=0, select bank0
  5488  0B90  00A0               	movwf	___ftge@ff1
  5489  0B91  3010               	movlw	16
  5490  0B92  00A1               	movwf	___ftge@ff1+1
  5491  0B93  3041               	movlw	65
  5492  0B94  00A2               	movwf	___ftge@ff1+2
  5493  0B95  0875               	movf	_PPM,w	;volatile
  5494  0B96  00A3               	movwf	___ftge@ff2
  5495  0B97  0876               	movf	_PPM+1,w	;volatile
  5496  0B98  00A4               	movwf	___ftge@ff2+1
  5497  0B99  0877               	movf	_PPM+2,w	;volatile
  5498  0B9A  00A5               	movwf	___ftge@ff2+2
  5499  0B9B  120A  158A  2462  120A  158A  	fcall	___ftge
  5500  0BA0  1803               	btfsc	3,0
  5501  0BA1  2BB5               	goto	l132
  5502                           
  5503                           ;main.c: 148: {
  5504                           ;main.c: 149: RB2 = 1;
  5505  0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  5506  0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  5507  0BA4  1506               	bsf	6,2	;volatile
  5508                           
  5509                           ;main.c: 150: instCTRL(0xD4);
  5510  0BA5  30D4               	movlw	212
  5511  0BA6  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  5512                           
  5513                           ;main.c: 151: printToLCD("PPM HIGH! ");
  5514  0BAB  3078               	movlw	low (STR_7-__stringbase)
  5515  0BAC  1283               	bcf	3,5	;RP0=0, select bank0
  5516  0BAD  1303               	bcf	3,6	;RP1=0, select bank0
  5517  0BAE  00A2               	movwf	printToLCD@str
  5518  0BAF  3080               	movlw	128
  5519  0BB0  00A3               	movwf	printToLCD@str+1
  5520  0BB1  120A  158A  22F4   	fcall	_printToLCD
  5521                           
  5522                           ;main.c: 152: }
  5523  0BB4  0008               	return
  5524  0BB5                     l132:	
  5525                           
  5526                           ;main.c: 153: else
  5527                           ;main.c: 154: {
  5528                           ;main.c: 155: RB2 = 0;
  5529  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  5530  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  5531  0BB7  1106               	bcf	6,2	;volatile
  5532                           
  5533                           ;main.c: 156: instCTRL(0xD4);
  5534  0BB8  30D4               	movlw	212
  5535  0BB9  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  5536                           
  5537                           ;main.c: 157: printToLCD("ENV STABLE");
  5538  0BBE  3083               	movlw	low (STR_8-__stringbase)
  5539  0BBF  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0BC0  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0BC1  00A2               	movwf	printToLCD@str
  5542  0BC2  3080               	movlw	128
  5543  0BC3  00A3               	movwf	printToLCD@str+1
  5544  0BC4  120A  158A  22F4   	fcall	_printToLCD
  5545  0BC7  0008               	return
  5546  0BC8                     __end_of_checkSensors:	
  5547                           
  5548                           	psect	text24
  5549  0AF4                     __ptext24:	
  5550 ;; *************** function _printToLCD *****************
  5551 ;; Defined at:
  5552 ;;		line 219 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  str             2    2[BANK0 ] PTR const unsigned char 
  5555 ;;		 -> displayTime@time(20), displayPPM@strBuffer(50), STR_8(11), STR_7(11), 
  5556 ;;		 -> displayRawADC@buffer(30), STR_5(7), STR_4(21), STR_3(22), 
  5557 ;;		 -> STR_2(19), STR_1(16), 
  5558 ;; Auto vars:     Size  Location     Type
  5559 ;;		None
  5560 ;; Return value:  Size  Location     Type
  5561 ;;		None               void
  5562 ;; Registers used:
  5563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5569 ;;      Params:         0       2       0       0       0
  5570 ;;      Locals:         0       0       0       0       0
  5571 ;;      Temps:          0       0       0       0       0
  5572 ;;      Totals:         0       2       0       0       0
  5573 ;;Total ram usage:        2 bytes
  5574 ;; Hardware stack levels used:    1
  5575 ;; Hardware stack levels required when called:    2
  5576 ;; This function calls:
  5577 ;;		_dataCTRL
  5578 ;;		_instCTRL
  5579 ;; This function is called by:
  5580 ;;		_main
  5581 ;;		_updateDisplay
  5582 ;;		_checkSensors
  5583 ;;		_displayPPM
  5584 ;;		_displayTime
  5585 ;;		_displayRawADC
  5586 ;; This function uses a non-reentrant model
  5587 ;;
  5588                           
  5589                           
  5590                           ;psect for function _printToLCD
  5591  0AF4                     _printToLCD:	
  5592                           
  5593                           ;main.c: 221: instCTRL(0x0C);
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in _printToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5597  0AF4  300C               	movlw	12
  5598  0AF5  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  5599  0AFA                     l2388:	
  5600                           ;main.c: 222: while (*str)
  5601                           
  5602  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  5603  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  5604  0AFC  0823               	movf	printToLCD@str+1,w
  5605  0AFD  00FF               	movwf	127
  5606  0AFE  0822               	movf	printToLCD@str,w
  5607  0AFF  0084               	movwf	4
  5608  0B00  120A  158A  2000  120A  158A  	fcall	stringtab
  5609  0B05  3800               	iorlw	0
  5610  0B06  1903               	btfsc	3,2
  5611  0B07  0008               	return
  5612                           
  5613                           ;main.c: 223: {
  5614                           ;main.c: 224: dataCTRL(*str);
  5615  0B08  1283               	bcf	3,5	;RP0=0, select bank0
  5616  0B09  1303               	bcf	3,6	;RP1=0, select bank0
  5617  0B0A  0823               	movf	printToLCD@str+1,w
  5618  0B0B  00FF               	movwf	127
  5619  0B0C  0822               	movf	printToLCD@str,w
  5620  0B0D  0084               	movwf	4
  5621  0B0E  120A  158A  2000  120A  158A  	fcall	stringtab
  5622  0B13  120A  158A  21FA  120A  158A  	fcall	_dataCTRL
  5623                           
  5624                           ;main.c: 225: str++;
  5625  0B18  3001               	movlw	1
  5626  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  5627  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  5628  0B1B  07A2               	addwf	printToLCD@str,f
  5629  0B1C  1803               	skipnc
  5630  0B1D  0AA3               	incf	printToLCD@str+1,f
  5631  0B1E  2AFA               	goto	l2388
  5632  0B1F                     __end_of_printToLCD:	
  5633                           
  5634                           	psect	text25
  5635  09FA                     __ptext25:	
  5636 ;; *************** function _dataCTRL *****************
  5637 ;; Defined at:
  5638 ;;		line 199 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  DAT             1    wreg     unsigned char 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;  DAT             1    1[BANK0 ] unsigned char 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;		None               void
  5645 ;; Registers used:
  5646 ;;		wreg
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5652 ;;      Params:         0       0       0       0       0
  5653 ;;      Locals:         0       1       0       0       0
  5654 ;;      Temps:          0       1       0       0       0
  5655 ;;      Totals:         0       2       0       0       0
  5656 ;;Total ram usage:        2 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    1
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_printToLCD
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           
  5666                           
  5667                           ;psect for function _dataCTRL
  5668  09FA                     _dataCTRL:	
  5669                           
  5670                           ;incstack = 0
  5671                           ; Regs used in _dataCTRL: [wreg]
  5672                           ;dataCTRL@DAT stored from wreg
  5673  09FA  1283               	bcf	3,5	;RP0=0, select bank0
  5674  09FB  1303               	bcf	3,6	;RP1=0, select bank0
  5675  09FC  00A1               	movwf	dataCTRL@DAT
  5676                           
  5677                           ;main.c: 201: PORTD = DAT;
  5678  09FD  0821               	movf	dataCTRL@DAT,w
  5679  09FE  0088               	movwf	8	;volatile
  5680                           
  5681                           ;main.c: 202: RC0 = 1;
  5682  09FF  1407               	bsf	7,0	;volatile
  5683                           
  5684                           ;main.c: 203: RC1 = 0;
  5685  0A00  1087               	bcf	7,1	;volatile
  5686                           
  5687                           ;main.c: 204: RC2 = 1;
  5688  0A01  1507               	bsf	7,2	;volatile
  5689                           
  5690                           ;main.c: 205: _delay((unsigned long)((1)*(4000000/4000.0)));
  5691  0A02  30F9               	movlw	249
  5692  0A03  00A0               	movwf	??_dataCTRL
  5693  0A04                     u3587:	
  5694  0A04  0000               	nop
  5695  0A05  0BA0               	decfsz	??_dataCTRL,f
  5696  0A06  2A04               	goto	u3587
  5697  0A07  2A08               	nop2	;nop
  5698  0A08  0000               	nop
  5699                           
  5700                           ;main.c: 206: RC2 = 0;
  5701  0A09  1283               	bcf	3,5	;RP0=0, select bank0
  5702  0A0A  1303               	bcf	3,6	;RP1=0, select bank0
  5703  0A0B  1107               	bcf	7,2	;volatile
  5704  0A0C  0008               	return
  5705  0A0D                     __end_of_dataCTRL:	
  5706                           
  5707                           	psect	text26
  5708  0C62                     __ptext26:	
  5709 ;; *************** function ___ftge *****************
  5710 ;; Defined at:
  5711 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5712 ;; Parameters:    Size  Location     Type
  5713 ;;  ff1             3    0[BANK0 ] float 
  5714 ;;  ff2             3    3[BANK0 ] float 
  5715 ;; Auto vars:     Size  Location     Type
  5716 ;;		None
  5717 ;; Return value:  Size  Location     Type
  5718 ;;		None               void
  5719 ;; Registers used:
  5720 ;;		wreg, status,2, status,0
  5721 ;; Tracked objects:
  5722 ;;		On entry : 0/0
  5723 ;;		On exit  : 0/0
  5724 ;;		Unchanged: 0/0
  5725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5726 ;;      Params:         0       6       0       0       0
  5727 ;;      Locals:         0       0       0       0       0
  5728 ;;      Temps:          0       6       0       0       0
  5729 ;;      Totals:         0      12       0       0       0
  5730 ;;Total ram usage:       12 bytes
  5731 ;; Hardware stack levels used:    1
  5732 ;; Hardware stack levels required when called:    1
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		_checkSensors
  5737 ;; This function uses a non-reentrant model
  5738 ;;
  5739                           
  5740                           
  5741                           ;psect for function ___ftge
  5742  0C62                     ___ftge:	
  5743                           
  5744                           ;incstack = 0
  5745                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5746  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  5747  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  5748  0C64  1FA2               	btfss	___ftge@ff1+2,7
  5749  0C65  2C8B               	goto	l1862
  5750  0C66  3000               	movlw	0
  5751  0C67  00A6               	movwf	??___ftge
  5752  0C68  3000               	movlw	0
  5753  0C69  00A7               	movwf	??___ftge+1
  5754  0C6A  3080               	movlw	128
  5755  0C6B  00A8               	movwf	??___ftge+2
  5756  0C6C  0920               	comf	___ftge@ff1,w
  5757  0C6D  00A9               	movwf	??___ftge+3
  5758  0C6E  0921               	comf	___ftge@ff1+1,w
  5759  0C6F  00AA               	movwf	??___ftge+4
  5760  0C70  0922               	comf	___ftge@ff1+2,w
  5761  0C71  00AB               	movwf	??___ftge+5
  5762  0C72  0AA9               	incf	??___ftge+3,f
  5763  0C73  1903               	skipnz
  5764  0C74  0AAA               	incf	??___ftge+4,f
  5765  0C75  1903               	skipnz
  5766  0C76  0AAB               	incf	??___ftge+5,f
  5767  0C77  0829               	movf	??___ftge+3,w
  5768  0C78  07A6               	addwf	??___ftge,f
  5769  0C79  082A               	movf	??___ftge+4,w
  5770  0C7A  1803               	skipnc
  5771  0C7B  0F2A               	incfsz	??___ftge+4,w
  5772  0C7C  2C7E               	goto	u2241
  5773  0C7D  2C7F               	goto	u2242
  5774  0C7E                     u2241:	
  5775  0C7E  07A7               	addwf	??___ftge+1,f
  5776  0C7F                     u2242:	
  5777  0C7F  082B               	movf	??___ftge+5,w
  5778  0C80  1803               	skipnc
  5779  0C81  0F2B               	incfsz	??___ftge+5,w
  5780  0C82  2C84               	goto	u2243
  5781  0C83  2C85               	goto	u2244
  5782  0C84                     u2243:	
  5783  0C84  07A8               	addwf	??___ftge+2,f
  5784  0C85                     u2244:	
  5785  0C85  0826               	movf	??___ftge,w
  5786  0C86  00A0               	movwf	___ftge@ff1
  5787  0C87  0827               	movf	??___ftge+1,w
  5788  0C88  00A1               	movwf	___ftge@ff1+1
  5789  0C89  0828               	movf	??___ftge+2,w
  5790  0C8A  00A2               	movwf	___ftge@ff1+2
  5791  0C8B                     l1862:	
  5792  0C8B  1FA5               	btfss	___ftge@ff2+2,7
  5793  0C8C  2CB2               	goto	l1866
  5794  0C8D  3000               	movlw	0
  5795  0C8E  00A6               	movwf	??___ftge
  5796  0C8F  3000               	movlw	0
  5797  0C90  00A7               	movwf	??___ftge+1
  5798  0C91  3080               	movlw	128
  5799  0C92  00A8               	movwf	??___ftge+2
  5800  0C93  0923               	comf	___ftge@ff2,w
  5801  0C94  00A9               	movwf	??___ftge+3
  5802  0C95  0924               	comf	___ftge@ff2+1,w
  5803  0C96  00AA               	movwf	??___ftge+4
  5804  0C97  0925               	comf	___ftge@ff2+2,w
  5805  0C98  00AB               	movwf	??___ftge+5
  5806  0C99  0AA9               	incf	??___ftge+3,f
  5807  0C9A  1903               	skipnz
  5808  0C9B  0AAA               	incf	??___ftge+4,f
  5809  0C9C  1903               	skipnz
  5810  0C9D  0AAB               	incf	??___ftge+5,f
  5811  0C9E  0829               	movf	??___ftge+3,w
  5812  0C9F  07A6               	addwf	??___ftge,f
  5813  0CA0  082A               	movf	??___ftge+4,w
  5814  0CA1  1803               	skipnc
  5815  0CA2  0F2A               	incfsz	??___ftge+4,w
  5816  0CA3  2CA5               	goto	u2261
  5817  0CA4  2CA6               	goto	u2262
  5818  0CA5                     u2261:	
  5819  0CA5  07A7               	addwf	??___ftge+1,f
  5820  0CA6                     u2262:	
  5821  0CA6  082B               	movf	??___ftge+5,w
  5822  0CA7  1803               	skipnc
  5823  0CA8  0F2B               	incfsz	??___ftge+5,w
  5824  0CA9  2CAB               	goto	u2263
  5825  0CAA  2CAC               	goto	u2264
  5826  0CAB                     u2263:	
  5827  0CAB  07A8               	addwf	??___ftge+2,f
  5828  0CAC                     u2264:	
  5829  0CAC  0826               	movf	??___ftge,w
  5830  0CAD  00A3               	movwf	___ftge@ff2
  5831  0CAE  0827               	movf	??___ftge+1,w
  5832  0CAF  00A4               	movwf	___ftge@ff2+1
  5833  0CB0  0828               	movf	??___ftge+2,w
  5834  0CB1  00A5               	movwf	___ftge@ff2+2
  5835  0CB2                     l1866:	
  5836  0CB2  3080               	movlw	128
  5837  0CB3  06A2               	xorwf	___ftge@ff1+2,f
  5838  0CB4  3080               	movlw	128
  5839  0CB5  06A5               	xorwf	___ftge@ff2+2,f
  5840  0CB6  0825               	movf	___ftge@ff2+2,w
  5841  0CB7  0222               	subwf	___ftge@ff1+2,w
  5842  0CB8  1D03               	skipz
  5843  0CB9  0008               	return
  5844  0CBA  0824               	movf	___ftge@ff2+1,w
  5845  0CBB  0221               	subwf	___ftge@ff1+1,w
  5846  0CBC  1D03               	skipz
  5847  0CBD  0008               	return
  5848  0CBE  0823               	movf	___ftge@ff2,w
  5849  0CBF  0220               	subwf	___ftge@ff1,w
  5850  0CC0  0008               	return
  5851  0CC1                     __end_of___ftge:	
  5852                           
  5853                           	psect	text27
  5854  0A3E                     __ptext27:	
  5855 ;; *************** function _checkMode *****************
  5856 ;; Defined at:
  5857 ;;		line 124 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;		None
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;		None
  5862 ;; Return value:  Size  Location     Type
  5863 ;;		None               void
  5864 ;; Registers used:
  5865 ;;		wreg, status,2, status,0, pclath, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5871 ;;      Params:         0       0       0       0       0
  5872 ;;      Locals:         0       0       0       0       0
  5873 ;;      Temps:          0       2       0       0       0
  5874 ;;      Totals:         0       2       0       0       0
  5875 ;;Total ram usage:        2 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    2
  5878 ;; This function calls:
  5879 ;;		_instCTRL
  5880 ;; This function is called by:
  5881 ;;		_main
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           
  5886                           ;psect for function _checkMode
  5887  0A3E                     _checkMode:	
  5888                           
  5889                           ;main.c: 126: if (lastMode != mode)
  5890                           
  5891                           ;incstack = 0
  5892                           ; Regs used in _checkMode: [wreg+status,2+status,0+pclath+cstack]
  5893  0A3E  0878               	movf	_lastMode,w	;volatile
  5894  0A3F  1283               	bcf	3,5	;RP0=0, select bank0
  5895  0A40  1303               	bcf	3,6	;RP1=0, select bank0
  5896  0A41  066E               	xorwf	_mode,w	;volatile
  5897  0A42  1903               	skipnz
  5898  0A43  0008               	return
  5899                           
  5900                           ;main.c: 127: {
  5901                           ;main.c: 128: instCTRL(0x01);
  5902  0A44  3001               	movlw	1
  5903  0A45  120A  158A  21E7  120A  158A  	fcall	_instCTRL
  5904                           
  5905                           ;main.c: 129: _delay((unsigned long)((50)*(4000000/4000.0)));
  5906  0A4A  3041               	movlw	65
  5907  0A4B  1283               	bcf	3,5	;RP0=0, select bank0
  5908  0A4C  1303               	bcf	3,6	;RP1=0, select bank0
  5909  0A4D  00A3               	movwf	??_checkMode+1
  5910  0A4E  30EE               	movlw	238
  5911  0A4F  00A2               	movwf	??_checkMode
  5912  0A50                     u3597:	
  5913  0A50  0BA2               	decfsz	??_checkMode,f
  5914  0A51  2A50               	goto	u3597
  5915  0A52  0BA3               	decfsz	??_checkMode+1,f
  5916  0A53  2A50               	goto	u3597
  5917  0A54  0000               	nop
  5918                           
  5919                           ;main.c: 130: instCTRL(0x80);
  5920  0A55  3080               	movlw	128
  5921  0A56  120A  158A  21E7   	fcall	_instCTRL
  5922                           
  5923                           ;main.c: 131: lastMode = mode;
  5924  0A59  1283               	bcf	3,5	;RP0=0, select bank0
  5925  0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  5926  0A5B  086E               	movf	_mode,w	;volatile
  5927  0A5C  00A2               	movwf	??_checkMode
  5928  0A5D  0822               	movf	??_checkMode,w
  5929  0A5E  00F8               	movwf	_lastMode	;volatile
  5930  0A5F  0008               	return
  5931  0A60                     __end_of_checkMode:	
  5932                           
  5933                           	psect	text28
  5934  09E7                     __ptext28:	
  5935 ;; *************** function _instCTRL *****************
  5936 ;; Defined at:
  5937 ;;		line 189 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  CMD             1    wreg     unsigned char 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  CMD             1    1[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;		None               void
  5944 ;; Registers used:
  5945 ;;		wreg
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5951 ;;      Params:         0       0       0       0       0
  5952 ;;      Locals:         0       1       0       0       0
  5953 ;;      Temps:          0       1       0       0       0
  5954 ;;      Totals:         0       2       0       0       0
  5955 ;;Total ram usage:        2 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    1
  5958 ;; This function calls:
  5959 ;;		Nothing
  5960 ;; This function is called by:
  5961 ;;		_main
  5962 ;;		_updateDisplay
  5963 ;;		_checkMode
  5964 ;;		_checkSensors
  5965 ;;		_initLCD
  5966 ;;		_printToLCD
  5967 ;;		_checkSel
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           
  5972                           ;psect for function _instCTRL
  5973  09E7                     _instCTRL:	
  5974                           
  5975                           ;incstack = 0
  5976                           ; Regs used in _instCTRL: [wreg]
  5977                           ;instCTRL@CMD stored from wreg
  5978  09E7  1283               	bcf	3,5	;RP0=0, select bank0
  5979  09E8  1303               	bcf	3,6	;RP1=0, select bank0
  5980  09E9  00A1               	movwf	instCTRL@CMD
  5981                           
  5982                           ;main.c: 191: PORTD = CMD;
  5983  09EA  0821               	movf	instCTRL@CMD,w
  5984  09EB  0088               	movwf	8	;volatile
  5985                           
  5986                           ;main.c: 192: RC0 = 0;
  5987  09EC  1007               	bcf	7,0	;volatile
  5988                           
  5989                           ;main.c: 193: RC1 = 0;
  5990  09ED  1087               	bcf	7,1	;volatile
  5991                           
  5992                           ;main.c: 194: RC2 = 1;
  5993  09EE  1507               	bsf	7,2	;volatile
  5994                           
  5995                           ;main.c: 195: _delay((unsigned long)((1)*(4000000/4000.0)));
  5996  09EF  30F9               	movlw	249
  5997  09F0  00A0               	movwf	??_instCTRL
  5998  09F1                     u3607:	
  5999  09F1  0000               	nop
  6000  09F2  0BA0               	decfsz	??_instCTRL,f
  6001  09F3  29F1               	goto	u3607
  6002  09F4  29F5               	nop2	;nop
  6003  09F5  0000               	nop
  6004                           
  6005                           ;main.c: 196: RC2 = 0;
  6006  09F6  1283               	bcf	3,5	;RP0=0, select bank0
  6007  09F7  1303               	bcf	3,6	;RP1=0, select bank0
  6008  09F8  1107               	bcf	7,2	;volatile
  6009  09F9  0008               	return
  6010  09FA                     __end_of_instCTRL:	
  6011                           
  6012                           	psect	text29
  6013  0A0D                     __ptext29:	
  6014 ;; *************** function _ISR *****************
  6015 ;; Defined at:
  6016 ;;		line 74 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\mq135-scheduling\main.c"
  6017 ;; Parameters:    Size  Location     Type
  6018 ;;		None
  6019 ;; Auto vars:     Size  Location     Type
  6020 ;;		None
  6021 ;; Return value:  Size  Location     Type
  6022 ;;		None               void
  6023 ;; Registers used:
  6024 ;;		wreg, status,2, status,0
  6025 ;; Tracked objects:
  6026 ;;		On entry : 0/0
  6027 ;;		On exit  : 0/0
  6028 ;;		Unchanged: 0/0
  6029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6030 ;;      Params:         0       0       0       0       0
  6031 ;;      Locals:         0       0       0       0       0
  6032 ;;      Temps:          5       0       0       0       0
  6033 ;;      Totals:         5       0       0       0       0
  6034 ;;Total ram usage:        5 bytes
  6035 ;; Hardware stack levels used:    1
  6036 ;; This function calls:
  6037 ;;		Nothing
  6038 ;; This function is called by:
  6039 ;;		Interrupt level 1
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           
  6044                           ;psect for function _ISR
  6045  0A0D                     _ISR:	
  6046                           
  6047                           ;main.c: 76: GIE = 0;
  6048  0A0D  138B               	bcf	11,7	;volatile
  6049                           
  6050                           ;main.c: 77: if (INTF == 1)
  6051  0A0E  1C8B               	btfss	11,1	;volatile
  6052  0A0F  2A17               	goto	i1l2090
  6053                           
  6054                           ;main.c: 78: {
  6055                           ;main.c: 79: INTF = 0;
  6056  0A10  108B               	bcf	11,1	;volatile
  6057                           
  6058                           ;main.c: 80: mode = (mode + 1) % 2;
  6059  0A11  086E               	movf	_mode,w	;volatile
  6060  0A12  3E01               	addlw	1
  6061  0A13  3901               	andlw	1
  6062  0A14  00F0               	movwf	??_ISR
  6063  0A15  0870               	movf	??_ISR,w
  6064  0A16  00EE               	movwf	_mode	;volatile
  6065  0A17                     i1l2090:	
  6066                           
  6067                           ;main.c: 81: }
  6068                           ;main.c: 82: GIE = 1;
  6069  0A17  178B               	bsf	11,7	;volatile
  6070  0A18  0874               	movf	??_ISR+4,w
  6071  0A19  00FF               	movwf	127
  6072  0A1A  0873               	movf	??_ISR+3,w
  6073  0A1B  008A               	movwf	10
  6074  0A1C  0872               	movf	??_ISR+2,w
  6075  0A1D  0084               	movwf	4
  6076  0A1E  0E71               	swapf	(??_ISR+1)^(0+-128),w
  6077  0A1F  0083               	movwf	3
  6078  0A20  0EFE               	swapf	126,f
  6079  0A21  0E7E               	swapf	126,w
  6080  0A22  0009               	retfie
  6081  0A23                     __end_of_ISR:	
  6082  007E                     btemp	set	126	;btemp
  6083  007E                     wtemp	set	126
  6084  007E                     wtemp0	set	126
  6085  0080                     wtemp1	set	128
  6086  0082                     wtemp2	set	130
  6087  0084                     wtemp3	set	132
  6088  0086                     wtemp4	set	134
  6089  0088                     wtemp5	set	136
  6090  007F                     wtemp6	set	127
  6091  007E                     ttemp	set	126
  6092  007E                     ttemp0	set	126
  6093  0081                     ttemp1	set	129
  6094  0084                     ttemp2	set	132
  6095  0087                     ttemp3	set	135
  6096  007F                     ttemp4	set	127
  6097  007E                     ltemp	set	126
  6098  007E                     ltemp0	set	126
  6099  0082                     ltemp1	set	130
  6100  0086                     ltemp2	set	134
  6101  0080                     ltemp3	set	128
  6102                           
  6103                           	psect	intentry
  6104  0004                     __pintentry:	
  6105                           ;incstack = 0
  6106                           ; Regs used in _ISR: [wreg+status,2+status,0]
  6107                           
  6108  0004                     interrupt_function:	
  6109  007E                     saved_w	set	btemp
  6110  0004  00FE               	movwf	btemp
  6111  0005  0E03               	swapf	3,w
  6112  0006  00F1               	movwf	??_ISR+1
  6113  0007  0804               	movf	4,w
  6114  0008  00F2               	movwf	??_ISR+2
  6115  0009  080A               	movf	10,w
  6116  000A  00F3               	movwf	??_ISR+3
  6117  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6118  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6119  000D  087F               	movf	btemp+1,w
  6120  000E  00F4               	movwf	??_ISR+4
  6121  000F  120A  158A  2A0D   	ljmp	_ISR


Data Sizes:
    Strings     156
    Constant    10
    Data        7
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     71      80
    BANK1            80     42      44
    BANK3            96     55      55
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_12(CODE[20]), STR_11(CODE[9]), STR_10(CODE[3]), STR_9(CODE[6]), 
		 -> STR_6(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> displayTime@time(BANK0[20]), displayPPM@strBuffer(BANK3[50]), displayRawADC@buffer(BANK0[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S201$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    displayPPM@bufPtr	PTR unsigned char  size(1) Largest target is 50
		 -> displayPPM@strBuffer(BANK3[50]), 

    printToLCD@str	PTR const unsigned char  size(2) Largest target is 50
		 -> displayTime@time(BANK0[20]), displayPPM@strBuffer(BANK3[50]), STR_8(CODE[11]), STR_7(CODE[11]), 
		 -> displayRawADC@buffer(BANK0[30]), STR_5(CODE[7]), STR_4(CODE[21]), STR_3(CODE[22]), 
		 -> STR_2(CODE[19]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_checkSelButton
    _initLCD->_instCTRL
    _checkSelButton->_updateDisplay
    _updateDisplay->_displayPPM
    _displayTime->_sprintf
    _displayPPM->_CalcMQ135
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    ___fttol->___ftmul
    ___ftneg->___awtoft
    _CalcMQ135->___ftdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    ___ftadd->___ftneg
    ___awtoft->___ftpack
    _checkSensors->___ftge
    _printToLCD->_dataCTRL
    _printToLCD->_instCTRL
    _checkMode->_instCTRL

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _displayPPM->_CalcMQ135

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _updateDisplay->_displayPPM

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   36459
                                             39 BANK1      3     3      0
                          _checkMode
                     _checkSelButton
                            _initADC
                      _initInterrupt
                            _initLCD
                           _instCTRL
                         _printToLCD
                            _runTime
 ---------------------------------------------------------------------------------
 (1) _runTime                                              2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      31
                                              2 BANK0      1     1      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (1) _initInterrupt                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkSelButton                                       2     2      0   35589
                                             69 BANK0      2     2      0
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (2) _updateDisplay                                        2     2      0   35589
                                             67 BANK0      2     2      0
                       _checkSensors
                         _displayPPM
                        _displayTime
                           _instCTRL
                         _printToLCD
 ---------------------------------------------------------------------------------
 (3) _displayTime                                         21    21      0    3759
                                             36 BANK0     21    21      0
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _displayPPM                                          57    57      0   29972
                                             65 BANK0      2     2      0
                                              0 BANK3     55    55      0
                          _CalcMQ135
                     _Read_ADC_MQ135
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             22    15      7    2872
                                             14 BANK0     22    15      7
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     266
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     371
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     358
                                             46 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     130
                                             14 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) _Read_ADC_MQ135                                       4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _CalcMQ135                                           42    39      3   14506
                                             62 BANK0      3     0      3
                                              0 BANK1     39    39      0
                     _Read_ADC_MQ135 (ARG)
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             16    10      6    4345
                                             30 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftdiv                                             16    10      6    2717
                                             46 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    4262
                                             17 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             6     3      3    2300
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2037
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (3) _checkSensors                                         0     0      0    1050
                             ___ftge
                           _instCTRL
                         _printToLCD
 ---------------------------------------------------------------------------------
 (1) _printToLCD                                           2     0      2     777
                                              2 BANK0      2     0      2
                           _dataCTRL
                           _instCTRL
 ---------------------------------------------------------------------------------
 (2) _dataCTRL                                             2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___ftge                                              12     6      6     242
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _checkMode                                            2     2      0      31
                                              2 BANK0      2     2      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (2) _instCTRL                                             2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkMode
     _instCTRL
   _checkSelButton
     _updateDisplay
       _checkSensors
         ___ftge
         _instCTRL
         _printToLCD
           _dataCTRL
           _instCTRL
       _displayPPM
         _CalcMQ135
           _Read_ADC_MQ135 (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
         _Read_ADC_MQ135
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
         _printToLCD
           _dataCTRL
           _instCTRL
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _displayTime
         _printToLCD
           _dataCTRL
           _instCTRL
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
           ___wmul
           _isdigit
       _instCTRL
       _printToLCD
         _dataCTRL
         _instCTRL
   _initADC
   _initInterrupt
   _initLCD
     _instCTRL
   _instCTRL
   _printToLCD
     _dataCTRL
     _instCTRL
   _runTime

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     37      37       9       57.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2A      2C       7       55.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     47      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BD      12        0.0%
ABS                  0      0      BD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri May 10 19:05:51 2024

                      pc 0002     __end_of_checkSensors 0BC8             ?_displayTime 0070  
            __CFG_CP$OFF 0000   __end_of_checkSelButton 0AF4                       fsr 0004  
    ___wmul@multiplicand 0022             ___ftadd@exp1 003D             ___ftadd@exp2 003C  
           ___ftadd@sign 003B                      l201 0429                      l132 0BB5  
                    l320 0A91                      l161 0A31                      l219 04EE  
                    l510 0F9F                      l481 0CF9                      l487 0D12  
                    _GIE 005F                      _RB1 0031                      _RC0 0038  
                    _RB2 0032                      _RC1 0039                      _RC2 003A  
           __CFG_CPD$OFF 0000                      _ISR 0A0D                      _PPM 0075  
                    _sel 006F                      fsr0 0004                      indf 0000  
           __CFG_FOSC$HS 0000            printToLCD@str 0022           _Read_ADC_MQ135 0A23  
           __CFG_LVP$OFF 0000                     ?_ISR 0070             ___ftdiv@cntr 0058  
           ___ftdiv@sign 005D                     l2110 0CCB                     l2200 0F20  
                   l2114 0CD2                     l2210 0F36                     l2124 0CFE  
                   l2116 0CDE                     l2204 0F27                     l2126 0D08  
                   l2118 0CE3                     l2230 0F71                     l2222 0F50  
                   l2240 0F8F                     l2232 0F76                     l2312 0721  
                   l2250 0FC3                     l2242 0F9B                     l2234 0F7A  
                   l2330 0776                     l2170 0A89                     l2410 0425  
                   l2260 0FE6                     l2228 0F65                     l2164 09E5  
                   l2246 0FB1                     l2270 0E57                     l2342 079E  
                   l2334 0786                     l2318 0737                     l1702 0B43  
                   l2422 044B                     l2504 0578                     l2432 0489  
                   l2416 042E                     l2290 0EB2                     l2346 07AE  
                   l1706 0B4E                     l2514 057C                     l2434 04A0  
                   l2418 0439                     l2602 0D97                     l2188 0A6C  
                   l2276 0E6D                     l2444 04B9                     l2516 03FD  
                   l1910 0DFD                     l2374 0BF6                     l2366 0BD2  
                   l2518 05CA                     l2606 0DA3                     l1920 0E25  
                   l1912 0E0D                     l2368 0BE0                     l2464 050D  
                   l2456 04E0                     l2448 04BF                     l2608 0DAD  
                   l2298 0ED1                     l1922 0E28                     l2378 0C01  
                   l2466 0511                     l2388 0AFA                     l2476 0528  
                   l2556 06E0                     l2580 0D43                     l2660 0B81  
                   l1862 0C8B                     l1926 0E36                     l1918 0E1A  
                   l2486 0544                     l2646 0AED                     l1696 0B27  
                   l2488 0548                     l2496 0563                     l1866 0CB2  
                   l1698 0B35                     l2594 0D77                     l2690 0C52  
                   l1892 0DCB                     l2596 0D82                     l2588 0D65  
                   STR_1 086C                     STR_2 0859                     STR_3 081A  
                   STR_4 0830                     STR_5 08A6                     STR_6 087C  
                   STR_7 0887                     STR_8 0892                     STR_9 08AD  
                   u2005 0B44                     u3015 0743                     u2241 0C7E  
                   u3105 07AF                     u3025 0755                     u2305 0DD2  
                   u2242 0C7F                     u2243 0C84                     u3115 07B7  
                   u2244 0C85                     u2261 0CA5                     u2262 0CA6  
                   u2263 0CAB                     u3055 0787                     u2335 0DFE  
                   u2264 0CAC                     u3065 078F                     u3145 0BD5  
                   u2515 0CD7                     u3315 04FD                     u2365 0E1C  
                   u3165 0BE1                     u2535 0CF2                     u3175 0BED  
                   u3185 0BF7                     u3425 06CB                     u2555 0D01  
                   u2635 0A92                     u3275 04D6                     u2645 0A99  
                   u3517 0C3A                     u3607 09F1                     u3527 0C4D  
                   u2585 0D19                     u2825 0F7B                     u3537 0B87  
                   u3547 07E6                     u2765 0F51                     u3557 0ADB  
                   u3485 0B66                     _INTE 005C                     _INTF 0059  
                   u2855 0F90                     u2935 0E7F                     u1975 0B2A  
                   u3567 0D31                     u3495 0B7B                     u2945 0E91  
                   u3577 0A29                     u3587 0A04                     u2795 0F66  
                   u2955 0EB3                     u1995 0B3B                     u3597 0A50  
                   u2965 0EC4                     u2975 0ED2           ?_updateDisplay 0070  
           __CFG_WRT$OFF 0000                     _main 0C08             ___ftpack@arg 0020  
                   _mode 006E             ___ftpack@exp 0023                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0012  
                   ttemp 007E                     wtemp 007E    displayPPM@ppmFraction 01C4  
           ___ftmul@cntr 004C             ___ftmul@sign 004D                    ??_ISR 0070  
           ___fttol@exp1 005B             ___fttol@lval 0057          ?_checkSelButton 0070  
                  ?_main 0070          __end_of___ftadd 1000                    STR_10 08B3  
                  STR_11 089D                    STR_12 0845            __CFG_WDTE$OFF 0000  
        __end_of___ftdiv 0EF7          __end_of___ftneg 09D7          __end_of___ftmul 07DC  
        __end_of___fttol 0E3F          __end_of___lwdiv 0C08          __end_of___lwmod 0B55  
 __end_of_Read_ADC_MQ135 0A3E                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
           CalcMQ135@co2 00C1          __end_of_initADC 09CD          __end_of_initLCD 0800  
          ___awtoft@sign 002D          __end_of_dpowers 081A          __end_of_isdigit 09E7  
          ___ftpack@sign 0024                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
     __size_of_CalcMQ135 03A7          __end_of_runTime 0B8D                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __end_of_sprintf 05D9          __initialization 0015       displayPPM@ppmWhole 01C2  
 __size_of_initInterrupt 0007             __end_of_main 0C62                   ??_main 00C7  
          ___fttol@sign1 0056          ?_Read_ADC_MQ135 0020                   _ADCON0 001F  
                 _ADCON1 009F          ??_updateDisplay 0063                   _ADRESH 001E  
                 _ADRESL 009E         __end_of___awtoft 0A85         __end_of___ftpack 0D2B  
                 i1l2090 0A17                   _INTEDG 040E         __end_of_dataCTRL 0A0D  
            instCTRL@CMD 0021           __CFG_PWRTE$OFF 0000    __size_of_checkSensors 003B  
                 ___ftge 0C62                   ___wmul 0A85                ??___ftadd 0037  
              ??___ftdiv 0054                ??___ftneg 0031                ??___ftmul 0044  
              ??___fttol 0052                ??___lwdiv 0024                ??___lwmod 002C  
       __end_of_instCTRL 09FA        __end_of_CalcMQ135 03F5     __size_of_displayTime 0025  
              ??_initADC 0020    ___ftmul@f3_as_product 0049                ??_initLCD 0022  
           __pdataCOMMON 0078                ??_isdigit 0020                   saved_w 007E  
          _initInterrupt 09BD                ??_runTime 0020                ??_sprintf 0035  
           _checkSensors 0B8D  __end_of__initialization 004A               ___ftadd@f1 0031  
             ___ftadd@f2 0034               ___ftge@ff1 0020               ___ftge@ff2 0023  
             ___ftdiv@f1 0051               ___ftdiv@f2 004E               ___ftdiv@f3 0059  
             ___ftneg@f1 002E               ___awtoft@c 0028               ___ftmul@f1 003E  
             ___ftmul@f2 0041               ___fttol@f1 004E           __pcstackCOMMON 0070  
           __pidataBANK0 09B8       __size_of_checkMode 0022       _lastSelButtonState 006B  
    displayPPM@strBuffer 0190           ?_initInterrupt 0070             sprintf@width 0041  
             __pbssBANK0 006C               __pbssBANK1 00CA         ??_checkSelButton 0065  
             __pmaintext 0C08                  ?___ftge 0020                  ?___wmul 0020  
             __pintentry 0004                ?___awtoft 0028                ?___ftpack 0020  
              ?_dataCTRL 0070                  _GO_DONE 00FA               _displayPPM 05D9  
      __end_of_checkMode 0A60               __stringtab 0800                ?_instCTRL 0070  
         CalcMQ135@ratio 00C4                _ACTV_MINS 00CA                _DEF_HOURS 0069  
        __size_of___ftge 005F                  ___ftadd 0EF7                  ___ftdiv 0E3F  
                ___ftneg 09CD          __size_of___wmul 0025                  ___ftmul 0709  
                ___fttol 0DB1                  ___lwdiv 0BC8                  ___lwmod 0B1F  
       ??_Read_ADC_MQ135 0022               ??___awtoft 002B               ??___ftpack 0025  
                __ptext1 0B55                  __ptext2 07DC                  __ptext3 09BD  
                __ptext4 09C4                  __ptext5 0ACF                  __ptext6 0D2B  
                __ptext7 0AAA                  __ptext8 05D9                  __ptext9 03F5  
                _initADC 09C4               ??_dataCTRL 0020                  _initLCD 07DC  
           __size_of_ISR 0016                  _lastSel 0079          ??_initInterrupt 0020  
                _dpowers 0810                  _isdigit 09D7                  _runTime 0B55  
                _sprintf 03F5     end_of_initialization 004A               ??_instCTRL 0020  
             _printToLCD 0AF4                _CalcMQ135 004E              ?_displayPPM 0070  
  __end_of_updateDisplay 0DB1              ___ftdiv@exp 005C         displayPPM@bufPtr 01C6  
       CalcMQ135@RAW_ADC 005E              ___ftmul@exp 0048            ??_displayTime 0044  
         __end_of___ftge 0CC1           __end_of___wmul 0AAA            __pidataCOMMON 09B6  
    start_initialization 0015               ?_CalcMQ135 005E              __end_of_ISR 0A23  
       CalcMQ135@voltage 00A0                 ??___ftge 0026                 ??___wmul 0024  
    __size_of_displayPPM 0130              __pdataBANK0 0067              _DEF_MINUTES 006C  
            ?_printToLCD 0022        __size_of___awtoft 0025        __size_of___ftpack 006A  
    __end_of_displayTime 0ACF              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK3 0190  
      __size_of_dataCTRL 0013      __end_of__stringdata 08B6              sprintf@ccnt 003A  
            sprintf@_val 003C              sprintf@flag 0040              sprintf@prec 0039  
              _checkMode 0A3E        __size_of_instCTRL 0013         ___lwdiv@dividend 0022  
               ?___ftadd 0031                 ?___ftdiv 004E                 ?___ftneg 002E  
               ?___ftmul 003E                 ?___fttol 004E                 ?___lwdiv 0020  
               ?___lwmod 0028                __pstrings 0800                 ?_initADC 0070  
               ?_initLCD 0070                 ?_isdigit 0070              ??_CalcMQ135 0061  
               ?_runTime 0070         ___lwdiv@quotient 0026                 ?_sprintf 002E  
      interrupt_function 0004           ___wmul@product 0024               ?_checkMode 0070  
    __size_of_printToLCD 002B              dataCTRL@DAT 0021              _displayTime 0AAA  
            __stringbase 080F              __stringdata 081A        ___wmul@multiplier 0020  
__size_of_checkSelButton 0025    __end_of_initInterrupt 09C4             ??_displayPPM 0061  
          ?_checkSensors 0070          CalcMQ135@ratio2 00B5          CalcMQ135@ratio3 00B8  
        CalcMQ135@ratio4 00BB          CalcMQ135@ratio5 00BE          CalcMQ135@ratio6 00A3  
             _ACTV_HOURS 0067       __end_of_displayPPM 0709         __size_of___ftadd 0109  
       __size_of___ftdiv 00B8         __size_of___ftneg 000A         __size_of___ftmul 00D3  
       __size_of___fttol 008E         __size_of___lwdiv 0040         __size_of___lwmod 0036  
               ___awtoft 0A60                 ___ftpack 0CC1       __end_of__stringtab 0810  
            _isdigit$397 0020                 _dataCTRL 09FA         __size_of_initADC 0009  
       __size_of_initLCD 0024         __size_of_isdigit 0010          ___lwdiv@divisor 0020  
__size_of_Read_ADC_MQ135 001B          ___lwdiv@counter 0025                 __ptext10 09D7  
               __ptext11 0A85                 __ptext20 0EF7                 __ptext12 0B1F  
               __ptext21 0A60                 __ptext13 0BC8                 __ptext22 0CC1  
               __ptext14 0DB1                 __ptext23 0B8D                 __ptext15 09CD  
               __ptext24 0AF4                 __ptext16 0A23                 __ptext25 09FA  
               __ptext17 004E                 __ptext26 0C62                 __ptext18 0709  
               __ptext27 0A3E                 __ptext19 0E3F                 __ptext28 09E7  
               __ptext29 0A0D           ??_checkSensors 002C         __size_of_runTime 0038  
       __size_of_sprintf 01E4                 _lastMode 0078                 _instCTRL 09E7  
          __size_of_main 005A              ??_checkMode 0022          displayTime@time 0045  
           ??_printToLCD 0024   __size_of_updateDisplay 0086                 isdigit@c 0021  
               intlevel1 0000                sprintf@ap 0038                sprintf@sp 002E  
       ___lwmod@dividend 002A       __end_of_printToLCD 0B1F                stringcode 080A  
          _CalcMQ135$620 00B2            _CalcMQ135$616 00A6            _CalcMQ135$617 00A9  
          _CalcMQ135$618 00AC            _CalcMQ135$619 00AF           _checkSelButton 0ACF  
             _OPTION_REG 0081                 sprintf@c 0043                 sprintf@f 0030  
        ___lwmod@divisor 0028          ___lwmod@counter 002D                 stringdir 080A  
               stringtab 0800            _updateDisplay 0D2B  
