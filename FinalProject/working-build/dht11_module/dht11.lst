

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue May 14 17:48:04 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     	;# 
    18  0001                     	;# 
    19  0002                     	;# 
    20  0003                     	;# 
    21  0004                     	;# 
    22  0005                     	;# 
    23  0006                     	;# 
    24  0007                     	;# 
    25  0008                     	;# 
    26  0009                     	;# 
    27  000A                     	;# 
    28  000B                     	;# 
    29  000C                     	;# 
    30  000D                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0015                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001B                     	;# 
    48  001C                     	;# 
    49  001D                     	;# 
    50  001E                     	;# 
    51  001F                     	;# 
    52  0081                     	;# 
    53  0085                     	;# 
    54  0086                     	;# 
    55  0087                     	;# 
    56  0088                     	;# 
    57  0089                     	;# 
    58  008C                     	;# 
    59  008D                     	;# 
    60  008E                     	;# 
    61  0091                     	;# 
    62  0092                     	;# 
    63  0093                     	;# 
    64  0094                     	;# 
    65  0098                     	;# 
    66  0099                     	;# 
    67  009C                     	;# 
    68  009D                     	;# 
    69  009E                     	;# 
    70  009F                     	;# 
    71  010C                     	;# 
    72  010D                     	;# 
    73  010E                     	;# 
    74  010F                     	;# 
    75  018C                     	;# 
    76  018D                     	;# 
    77  0006                     _PORTB	set	6
    78  0007                     _PORTC	set	7
    79  0019                     _TXREG	set	25
    80  00C4                     _CREN	set	196
    81  0032                     _RB2	set	50
    82  00C7                     _SPEN	set	199
    83  0064                     _TXIF	set	100
    84  0099                     _SPBRG	set	153
    85  0086                     _TRISB	set	134
    86  0087                     _TRISC	set	135
    87  04C2                     _BRGH	set	1218
    88  04C4                     _SYNC	set	1220
    89  0432                     _TRISB2	set	1074
    90  043E                     _TRISC6	set	1086
    91  043F                     _TRISC7	set	1087
    92  04C5                     _TXEN	set	1221
    93                           
    94                           	psect	text0
    95  0000                     __ptext0:	
    96                           ; #config settings
    97                           
    98                           
    99                           ;psect for function _checkResponse
   100  0000                     
   101                           	psect	cinit
   102  07F6                     start_initialization:	
   103  07F6                     __initialization:	
   104                           
   105                           ; Clear objects allocated to COMMON
   106  07F6  01FB               	clrf	__pbssCOMMON& (0+127)
   107  07F7  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   108  07F8  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   109                           
   110                           ; Clear objects allocated to BANK0
   111  07F9  01A0               	clrf	__pbssBANK0& (0+127)
   112  07FA  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   113  07FB  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   114  07FC                     end_of_initialization:	
   115                           ;End of C runtime variable initialization code
   116                           
   117  07FC                     __end_of__initialization:	
   118  07FC  0183               	clrf	3
   119  07FD  120A  118A  2F69   	ljmp	_main	;jump to C main() function
   120                           
   121                           	psect	bssCOMMON
   122  007B                     __pbssCOMMON:	
   123  007B                     _RH_byte:	
   124  007B                     	ds	1
   125  007C                     _T_byte1:	
   126  007C                     	ds	1
   127  007D                     _checkbit:	
   128  007D                     	ds	1
   129                           
   130                           	psect	bssBANK0
   131  0020                     __pbssBANK0:	
   132  0020                     _CheckSum:	
   133  0020                     	ds	1
   134  0021                     _RH_byte2:	
   135  0021                     	ds	1
   136  0022                     _T_byte2:	
   137  0022                     	ds	1
   138                           
   139                           	psect	cstackCOMMON
   140  0070                     __pcstackCOMMON:	
   141  0070                     ?_initUART:	
   142  0070                     ??_initUART:	
   143                           ; 0 bytes @ 0x0
   144                           
   145  0070                     ?_startSignal:	
   146                           ; 0 bytes @ 0x0
   147                           
   148  0070                     ??_startSignal:	
   149                           ; 0 bytes @ 0x0
   150                           
   151  0070                     ??_readData:	
   152                           ; 0 bytes @ 0x0
   153                           
   154  0070                     ?_main:	
   155                           ; 0 bytes @ 0x0
   156                           
   157  0070                     ?_sendByte:	
   158                           ; 0 bytes @ 0x0
   159                           
   160  0070                     ??_sendByte:	
   161                           ; 0 bytes @ 0x0
   162                           
   163  0070                     ?_readData:	
   164                           ; 0 bytes @ 0x0
   165                           
   166  0070                     ?_checkResponse:	
   167                           ; 1 bytes @ 0x0
   168                           
   169  0070                     sendByte@data:	
   170                           ; 2 bytes @ 0x0
   171                           
   172                           
   173                           ; 1 bytes @ 0x0
   174  0070                     	ds	1
   175  0071                     ?_sendData:	
   176  0071                     sendData@humidity:	
   177                           ; 0 bytes @ 0x1
   178                           
   179                           
   180                           ; 1 bytes @ 0x1
   181  0071                     	ds	1
   182  0072                     ??_checkResponse:	
   183  0072                     ??_sendData:	
   184                           ; 0 bytes @ 0x2
   185                           
   186  0072                     readData@index:	
   187                           ; 0 bytes @ 0x2
   188                           
   189  0072                     sendData@temp:	
   190                           ; 1 bytes @ 0x2
   191                           
   192                           
   193                           ; 1 bytes @ 0x2
   194  0072                     	ds	1
   195  0073                     readData@_data:	
   196                           
   197                           ; 1 bytes @ 0x3
   198  0073                     	ds	1
   199  0074                     readData@bitcount:	
   200                           
   201                           ; 1 bytes @ 0x4
   202  0074                     	ds	1
   203  0075                     ??_main:	
   204                           
   205                           ; 0 bytes @ 0x5
   206  0075                     	ds	6
   207                           
   208                           	psect	maintext
   209  0769                     __pmaintext:	
   210 ;;
   211 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   212 ;;
   213 ;; *************** function _main *****************
   214 ;; Defined at:
   215 ;;		line 36 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\dht11_module\main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;		None               void
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0, pclath, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 17F/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   229 ;;      Params:         0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0
   231 ;;      Temps:          6       0       0       0       0
   232 ;;      Totals:         6       0       0       0       0
   233 ;;Total ram usage:        6 bytes
   234 ;; Hardware stack levels required when called:    2
   235 ;; This function calls:
   236 ;;		_checkResponse
   237 ;;		_initUART
   238 ;;		_readData
   239 ;;		_sendData
   240 ;;		_startSignal
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246                           
   247                           ;psect for function _main
   248  0769                     _main:	
   249                           
   250                           ;main.c: 38: TRISB = 0xFF;
   251                           
   252                           ;incstack = 0
   253                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   254  0769  30FF               	movlw	255
   255  076A  1683               	bsf	3,5	;RP0=1, select bank1
   256  076B  1303               	bcf	3,6	;RP1=0, select bank1
   257  076C  0086               	movwf	6	;volatile
   258                           
   259                           ;main.c: 39: PORTB = 0x00;
   260  076D  1283               	bcf	3,5	;RP0=0, select bank0
   261  076E  1303               	bcf	3,6	;RP1=0, select bank0
   262  076F  0186               	clrf	6	;volatile
   263                           
   264                           ;main.c: 40: TRISB2 = 0;
   265  0770  1683               	bsf	3,5	;RP0=1, select bank1
   266  0771  1303               	bcf	3,6	;RP1=0, select bank1
   267  0772  1106               	bcf	6,2	;volatile
   268                           
   269                           ;main.c: 41: TRISC = 0x00;
   270  0773  0187               	clrf	7	;volatile
   271                           
   272                           ;main.c: 42: PORTC = 0x00;
   273  0774  1283               	bcf	3,5	;RP0=0, select bank0
   274  0775  1303               	bcf	3,6	;RP1=0, select bank0
   275  0776  0187               	clrf	7	;volatile
   276                           
   277                           ;main.c: 43: initUART();
   278  0777  120A  118A  26DF  120A  118A  	fcall	_initUART
   279  077C                     l758:	
   280                           ;main.c: 45: while (1)
   281                           
   282                           
   283                           ;main.c: 46: {
   284                           ;main.c: 47: _delay((unsigned long)((800)*(4000000/4000.0)));
   285  077C  3005               	movlw	5
   286  077D  00F7               	movwf	??_main+2
   287  077E  300F               	movlw	15
   288  077F  00F6               	movwf	??_main+1
   289  0780  30F4               	movlw	244
   290  0781  00F5               	movwf	??_main
   291  0782                     u257:	
   292  0782  0BF5               	decfsz	??_main,f
   293  0783  2F82               	goto	u257
   294  0784  0BF6               	decfsz	??_main+1,f
   295  0785  2F82               	goto	u257
   296  0786  0BF7               	decfsz	??_main+2,f
   297  0787  2F82               	goto	u257
   298                           
   299                           ;main.c: 48: startSignal();
   300  0788  120A  118A  26F1  120A  118A  	fcall	_startSignal
   301                           
   302                           ;main.c: 49: if (checkResponse())
   303  078D  120A  118A  270C  120A  118A  	fcall	_checkResponse
   304  0792  0871               	movf	?_checkResponse+1,w
   305  0793  0470               	iorwf	?_checkResponse,w
   306  0794  1903               	skipnz
   307  0795  2FE8               	goto	l770
   308                           
   309                           ;main.c: 50: {
   310                           ;main.c: 51: RH_byte = readData();
   311  0796  120A  118A  272A  120A  118A  	fcall	_readData
   312  079B  00F5               	movwf	??_main
   313  079C  0875               	movf	??_main,w
   314  079D  00FB               	movwf	_RH_byte
   315                           
   316                           ;main.c: 52: RH_byte2 = readData();
   317  079E  120A  118A  272A  120A  118A  	fcall	_readData
   318  07A3  00F5               	movwf	??_main
   319  07A4  0875               	movf	??_main,w
   320  07A5  1283               	bcf	3,5	;RP0=0, select bank0
   321  07A6  1303               	bcf	3,6	;RP1=0, select bank0
   322  07A7  00A1               	movwf	_RH_byte2
   323                           
   324                           ;main.c: 53: T_byte1 = readData();
   325  07A8  120A  118A  272A  120A  118A  	fcall	_readData
   326  07AD  00F5               	movwf	??_main
   327  07AE  0875               	movf	??_main,w
   328  07AF  00FC               	movwf	_T_byte1
   329                           
   330                           ;main.c: 54: T_byte2 = readData();
   331  07B0  120A  118A  272A  120A  118A  	fcall	_readData
   332  07B5  00F5               	movwf	??_main
   333  07B6  0875               	movf	??_main,w
   334  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   335  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   336  07B9  00A2               	movwf	_T_byte2
   337                           
   338                           ;main.c: 55: CheckSum = readData();
   339  07BA  120A  118A  272A  120A  118A  	fcall	_readData
   340  07BF  00F5               	movwf	??_main
   341  07C0  0875               	movf	??_main,w
   342  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   343  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   344  07C3  00A0               	movwf	_CheckSum
   345                           
   346                           ;main.c: 56: if (CheckSum == (RH_byte + RH_byte2 + T_byte1 + T_byte2))
   347  07C4  087B               	movf	_RH_byte,w
   348  07C5  0721               	addwf	_RH_byte2,w
   349  07C6  00F5               	movwf	??_main
   350  07C7  01F6               	clrf	??_main+1
   351  07C8  0DF6               	rlf	??_main+1,f
   352  07C9  087C               	movf	_T_byte1,w
   353  07CA  0775               	addwf	??_main,w
   354  07CB  00F7               	movwf	??_main+2
   355  07CC  3000               	movlw	0
   356  07CD  1803               	skipnc
   357  07CE  3001               	movlw	1
   358  07CF  0776               	addwf	??_main+1,w
   359  07D0  00F8               	movwf	??_main+3
   360  07D1  0822               	movf	_T_byte2,w
   361  07D2  0777               	addwf	??_main+2,w
   362  07D3  00F9               	movwf	??_main+4
   363  07D4  3000               	movlw	0
   364  07D5  1803               	skipnc
   365  07D6  3001               	movlw	1
   366  07D7  0778               	addwf	??_main+3,w
   367  07D8  00FA               	movwf	??_main+5
   368  07D9  0820               	movf	_CheckSum,w
   369  07DA  0679               	xorwf	??_main+4,w
   370  07DB  047A               	iorwf	??_main+5,w
   371  07DC  1D03               	skipz
   372  07DD  2FE8               	goto	l770
   373                           
   374                           ;main.c: 57: {
   375                           ;main.c: 59: sendData(T_byte1, RH_byte);
   376  07DE  087B               	movf	_RH_byte,w
   377  07DF  00F5               	movwf	??_main
   378  07E0  0875               	movf	??_main,w
   379  07E1  00F1               	movwf	sendData@humidity
   380  07E2  087C               	movf	_T_byte1,w
   381  07E3  120A  118A  26D3  120A  118A  	fcall	_sendData
   382  07E8                     l770:	
   383                           
   384                           ;main.c: 60: }
   385                           ;main.c: 61: }
   386                           ;main.c: 62: _delay((unsigned long)((2000)*(4000000/4000.0)));
   387  07E8  300B               	movlw	11
   388  07E9  00F7               	movwf	??_main+2
   389  07EA  3026               	movlw	38
   390  07EB  00F6               	movwf	??_main+1
   391  07EC  3066               	movlw	102
   392  07ED  00F5               	movwf	??_main
   393  07EE                     u267:	
   394  07EE  0BF5               	decfsz	??_main,f
   395  07EF  2FEE               	goto	u267
   396  07F0  0BF6               	decfsz	??_main+1,f
   397  07F1  2FEE               	goto	u267
   398  07F2  0BF7               	decfsz	??_main+2,f
   399  07F3  2FEE               	goto	u267
   400  07F4  2FF5               	nop2
   401  07F5  2F7C               	goto	l758
   402  07F6                     __end_of_main:	
   403                           
   404                           	psect	text1
   405  06F1                     __ptext1:	
   406 ;; *************** function _startSignal *****************
   407 ;; Defined at:
   408 ;;		line 66 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\dht11_module\main.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;		None
   411 ;; Auto vars:     Size  Location     Type
   412 ;;		None
   413 ;; Return value:  Size  Location     Type
   414 ;;		None               void
   415 ;; Registers used:
   416 ;;		wreg
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       0       0       0       0
   423 ;;      Locals:         0       0       0       0       0
   424 ;;      Temps:          2       0       0       0       0
   425 ;;      Totals:         2       0       0       0       0
   426 ;;Total ram usage:        2 bytes
   427 ;; Hardware stack levels used:    1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           
   436                           ;psect for function _startSignal
   437  06F1                     _startSignal:	
   438                           
   439                           ;main.c: 68: TRISB2 = 0;
   440                           
   441                           ;incstack = 0
   442                           ; Regs used in _startSignal: [wreg]
   443  06F1  1683               	bsf	3,5	;RP0=1, select bank1
   444  06F2  1303               	bcf	3,6	;RP1=0, select bank1
   445  06F3  1106               	bcf	6,2	;volatile
   446                           
   447                           ;main.c: 69: RB2 = 0;
   448  06F4  1283               	bcf	3,5	;RP0=0, select bank0
   449  06F5  1303               	bcf	3,6	;RP1=0, select bank0
   450  06F6  1106               	bcf	6,2	;volatile
   451                           
   452                           ;main.c: 70: _delay((unsigned long)((25)*(4000000/4000.0)));
   453  06F7  3021               	movlw	33
   454  06F8  00F1               	movwf	??_startSignal+1
   455  06F9  3076               	movlw	118
   456  06FA  00F0               	movwf	??_startSignal
   457  06FB                     u277:	
   458  06FB  0BF0               	decfsz	??_startSignal,f
   459  06FC  2EFB               	goto	u277
   460  06FD  0BF1               	decfsz	??_startSignal+1,f
   461  06FE  2EFB               	goto	u277
   462  06FF  0000               	nop
   463                           
   464                           ;main.c: 71: RB2 = 1;
   465  0700  1283               	bcf	3,5	;RP0=0, select bank0
   466  0701  1303               	bcf	3,6	;RP1=0, select bank0
   467  0702  1506               	bsf	6,2	;volatile
   468                           
   469                           ;main.c: 72: _delay((unsigned long)((30)*(4000000/4000000.0)));
   470  0703  3009               	movlw	9
   471  0704  00F0               	movwf	??_startSignal
   472  0705                     u287:	
   473  0705  0BF0               	decfsz	??_startSignal,f
   474  0706  2F05               	goto	u287
   475  0707  2F08               	nop2	;nop
   476                           
   477                           ;main.c: 73: TRISB2 = 1;
   478  0708  1683               	bsf	3,5	;RP0=1, select bank1
   479  0709  1303               	bcf	3,6	;RP1=0, select bank1
   480  070A  1506               	bsf	6,2	;volatile
   481  070B  0008               	return
   482  070C                     __end_of_startSignal:	
   483                           
   484                           	psect	text2
   485  06D3                     __ptext2:	
   486 ;; *************** function _sendData *****************
   487 ;; Defined at:
   488 ;;		line 145 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\dht11_module\main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  temp            1    wreg     unsigned char 
   491 ;;  humidity        1    1[COMMON] unsigned char 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  temp            1    2[COMMON] unsigned char 
   494 ;; Return value:  Size  Location     Type
   495 ;;		None               void
   496 ;; Registers used:
   497 ;;		wreg, status,2, status,0, pclath, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   503 ;;      Params:         1       0       0       0       0
   504 ;;      Locals:         1       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0
   506 ;;      Totals:         2       0       0       0       0
   507 ;;Total ram usage:        2 bytes
   508 ;; Hardware stack levels used:    1
   509 ;; Hardware stack levels required when called:    1
   510 ;; This function calls:
   511 ;;		_sendByte
   512 ;; This function is called by:
   513 ;;		_main
   514 ;; This function uses a non-reentrant model
   515 ;;
   516                           
   517                           
   518                           ;psect for function _sendData
   519  06D3                     _sendData:	
   520                           
   521                           ;incstack = 0
   522                           ; Regs used in _sendData: [wreg+status,2+status,0+pclath+cstack]
   523                           ;sendData@temp stored from wreg
   524  06D3  00F2               	movwf	sendData@temp
   525                           
   526                           ;main.c: 147: sendByte(humidity);
   527  06D4  0871               	movf	sendData@humidity,w
   528  06D5  120A  118A  26CB  120A  118A  	fcall	_sendByte
   529                           
   530                           ;main.c: 148: sendByte(temp);
   531  06DA  0872               	movf	sendData@temp,w
   532  06DB  120A  118A  26CB   	fcall	_sendByte
   533  06DE  0008               	return
   534  06DF                     __end_of_sendData:	
   535                           
   536                           	psect	text3
   537  06CB                     __ptext3:	
   538 ;; *************** function _sendByte *****************
   539 ;; Defined at:
   540 ;;		line 138 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\dht11_module\main.c"
   541 ;; Parameters:    Size  Location     Type
   542 ;;  data            1    wreg     unsigned char 
   543 ;; Auto vars:     Size  Location     Type
   544 ;;  data            1    0[COMMON] unsigned char 
   545 ;; Return value:  Size  Location     Type
   546 ;;		None               void
   547 ;; Registers used:
   548 ;;		wreg
   549 ;; Tracked objects:
   550 ;;		On entry : 0/0
   551 ;;		On exit  : 0/0
   552 ;;		Unchanged: 0/0
   553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   554 ;;      Params:         0       0       0       0       0
   555 ;;      Locals:         1       0       0       0       0
   556 ;;      Temps:          0       0       0       0       0
   557 ;;      Totals:         1       0       0       0       0
   558 ;;Total ram usage:        1 bytes
   559 ;; Hardware stack levels used:    1
   560 ;; This function calls:
   561 ;;		Nothing
   562 ;; This function is called by:
   563 ;;		_sendData
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           
   568                           ;psect for function _sendByte
   569  06CB                     _sendByte:	
   570                           
   571                           ;incstack = 0
   572                           ; Regs used in _sendByte: [wreg]
   573                           ;sendByte@data stored from wreg
   574  06CB  00F0               	movwf	sendByte@data
   575  06CC                     l93:	
   576                           ;main.c: 141: ;
   577                           
   578                           ;main.c: 140: while (!TXIF)
   579                           
   580  06CC  1283               	bcf	3,5	;RP0=0, select bank0
   581  06CD  1303               	bcf	3,6	;RP1=0, select bank0
   582  06CE  1E0C               	btfss	12,4	;volatile
   583  06CF  2ECC               	goto	l93
   584                           
   585                           ;main.c: 142: TXREG = data;
   586  06D0  0870               	movf	sendByte@data,w
   587  06D1  0099               	movwf	25	;volatile
   588  06D2  0008               	return
   589  06D3                     __end_of_sendByte:	
   590                           
   591                           	psect	text4
   592  072A                     __ptext4:	
   593 ;; *************** function _readData *****************
   594 ;; Defined at:
   595 ;;		line 91 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\dht11_module\main.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;  bitcount        1    4[COMMON] unsigned char 
   600 ;;  _data           1    3[COMMON] unsigned char 
   601 ;;  index           1    2[COMMON] unsigned char 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      unsigned char 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         0       0       0       0       0
   612 ;;      Locals:         3       0       0       0       0
   613 ;;      Temps:          2       0       0       0       0
   614 ;;      Totals:         5       0       0       0       0
   615 ;;Total ram usage:        5 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_main
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _readData
   626  072A                     _readData:	
   627                           
   628                           ;main.c: 93: uint8_t index, bitcount, _data = 0;
   629                           
   630                           ;incstack = 0
   631                           ; Regs used in _readData: [wreg+status,2+status,0]
   632  072A  01F3               	clrf	readData@_data
   633                           
   634                           ;main.c: 94: for (index = 0; index < 8; index++)
   635  072B  01F2               	clrf	readData@index
   636  072C  3008               	movlw	8
   637  072D  0272               	subwf	readData@index,w
   638  072E  1803               	btfsc	3,0
   639  072F  2F67               	goto	l740
   640  0730                     l712:	
   641                           
   642                           ;main.c: 95: {
   643                           ;main.c: 96: bitcount = 0;
   644  0730  01F4               	clrf	readData@bitcount
   645  0731                     l77:	
   646                           ;main.c: 97: while (!RB2)
   647                           
   648  0731  1283               	bcf	3,5	;RP0=0, select bank0
   649  0732  1303               	bcf	3,6	;RP1=0, select bank0
   650  0733  1906               	btfsc	6,2	;volatile
   651  0734  2F3E               	goto	l722
   652                           
   653                           ;main.c: 98: {
   654                           ;main.c: 99: bitcount++;
   655  0735  3001               	movlw	1
   656  0736  00F0               	movwf	??_readData
   657  0737  0870               	movf	??_readData,w
   658  0738  07F4               	addwf	readData@bitcount,f
   659                           
   660                           ;main.c: 100: _delay((unsigned long)((1)*(4000000/4000000.0)));
   661  0739  0000               	nop
   662                           
   663                           ;main.c: 101: if (bitcount > 100)
   664  073A  3065               	movlw	101
   665  073B  0274               	subwf	readData@bitcount,w
   666  073C  1C03               	skipc
   667  073D  2F31               	goto	l77
   668  073E                     l722:	
   669                           ;main.c: 102: break;
   670                           
   671                           
   672                           ;main.c: 103: }
   673                           ;main.c: 104: _delay((unsigned long)((30)*(4000000/4000000.0)));
   674  073E  3009               	movlw	9
   675  073F  00F0               	movwf	??_readData
   676  0740                     u297:	
   677  0740  0BF0               	decfsz	??_readData,f
   678  0741  2F40               	goto	u297
   679  0742  2F43               	nop2	;nop
   680                           
   681                           ;main.c: 105: if (!RB2)
   682  0743  1283               	bcf	3,5	;RP0=0, select bank0
   683  0744  1303               	bcf	3,6	;RP1=0, select bank0
   684  0745  1906               	btfsc	6,2	;volatile
   685  0746  2F49               	goto	l81
   686                           
   687                           ;main.c: 106: checkbit = 0;
   688  0747  01FD               	clrf	_checkbit
   689  0748  2F58               	goto	l736
   690  0749                     l81:	
   691                           
   692                           ;main.c: 107: else
   693                           ;main.c: 108: {
   694                           ;main.c: 109: checkbit = 1;
   695  0749  01FD               	clrf	_checkbit
   696  074A  0AFD               	incf	_checkbit,f
   697  074B                     l83:	
   698                           ;main.c: 110: while (RB2)
   699                           
   700  074B  1283               	bcf	3,5	;RP0=0, select bank0
   701  074C  1303               	bcf	3,6	;RP1=0, select bank0
   702  074D  1D06               	btfss	6,2	;volatile
   703  074E  2F58               	goto	l736
   704                           
   705                           ;main.c: 111: {
   706                           ;main.c: 112: bitcount++;
   707  074F  3001               	movlw	1
   708  0750  00F0               	movwf	??_readData
   709  0751  0870               	movf	??_readData,w
   710  0752  07F4               	addwf	readData@bitcount,f
   711                           
   712                           ;main.c: 113: _delay((unsigned long)((1)*(4000000/4000000.0)));
   713  0753  0000               	nop
   714                           
   715                           ;main.c: 114: if (bitcount > 100)
   716  0754  3065               	movlw	101
   717  0755  0274               	subwf	readData@bitcount,w
   718  0756  1C03               	skipc
   719  0757  2F4B               	goto	l83
   720  0758                     l736:	
   721                           ;main.c: 115: break;
   722                           
   723                           
   724                           ;main.c: 116: }
   725                           ;main.c: 117: }
   726                           ;main.c: 118: _data = (_data << 1) | checkbit;
   727  0758  0873               	movf	readData@_data,w
   728  0759  00F0               	movwf	??_readData
   729  075A  0770               	addwf	??_readData,w
   730  075B  047D               	iorwf	_checkbit,w
   731  075C  00F1               	movwf	??_readData+1
   732  075D  0871               	movf	??_readData+1,w
   733  075E  00F3               	movwf	readData@_data
   734  075F  3001               	movlw	1
   735  0760  00F0               	movwf	??_readData
   736  0761  0870               	movf	??_readData,w
   737  0762  07F2               	addwf	readData@index,f
   738  0763  3008               	movlw	8
   739  0764  0272               	subwf	readData@index,w
   740  0765  1C03               	skipc
   741  0766  2F30               	goto	l712
   742  0767                     l740:	
   743                           
   744                           ;main.c: 119: }
   745                           ;main.c: 120: return _data;
   746  0767  0873               	movf	readData@_data,w
   747  0768  0008               	return
   748  0769                     __end_of_readData:	
   749                           
   750                           	psect	text5
   751  06DF                     __ptext5:	
   752 ;; *************** function _initUART *****************
   753 ;; Defined at:
   754 ;;		line 123 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\dht11_module\main.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;		None
   757 ;; Auto vars:     Size  Location     Type
   758 ;;		None
   759 ;; Return value:  Size  Location     Type
   760 ;;		None               void
   761 ;; Registers used:
   762 ;;		wreg
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   768 ;;      Params:         0       0       0       0       0
   769 ;;      Locals:         0       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0
   771 ;;      Totals:         0       0       0       0       0
   772 ;;Total ram usage:        0 bytes
   773 ;; Hardware stack levels used:    1
   774 ;; This function calls:
   775 ;;		Nothing
   776 ;; This function is called by:
   777 ;;		_main
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _initUART
   783  06DF                     _initUART:	
   784                           
   785                           ;main.c: 126: TRISC6 = 0;
   786                           
   787                           ;incstack = 0
   788                           ; Regs used in _initUART: [wreg]
   789  06DF  1683               	bsf	3,5	;RP0=1, select bank1
   790  06E0  1303               	bcf	3,6	;RP1=0, select bank1
   791  06E1  1307               	bcf	7,6	;volatile
   792                           
   793                           ;main.c: 127: TRISC7 = 1;
   794  06E2  1787               	bsf	7,7	;volatile
   795                           
   796                           ;main.c: 129: SPBRG = 25;
   797  06E3  3019               	movlw	25
   798  06E4  0099               	movwf	25	;volatile
   799                           
   800                           ;main.c: 130: BRGH = 1;
   801  06E5  1518               	bsf	24,2	;volatile
   802                           
   803                           ;main.c: 132: SYNC = 0;
   804  06E6  1218               	bcf	24,4	;volatile
   805                           
   806                           ;main.c: 133: SPEN = 1;
   807  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   808  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   809  06E9  1798               	bsf	24,7	;volatile
   810                           
   811                           ;main.c: 134: TXEN = 1;
   812  06EA  1683               	bsf	3,5	;RP0=1, select bank1
   813  06EB  1303               	bcf	3,6	;RP1=0, select bank1
   814  06EC  1698               	bsf	24,5	;volatile
   815                           
   816                           ;main.c: 135: CREN = 1;
   817  06ED  1283               	bcf	3,5	;RP0=0, select bank0
   818  06EE  1303               	bcf	3,6	;RP1=0, select bank0
   819  06EF  1618               	bsf	24,4	;volatile
   820  06F0  0008               	return
   821  06F1                     __end_of_initUART:	
   822                           
   823                           	psect	text6
   824  070C                     __ptext6:	
   825 ;; *************** function _checkResponse *****************
   826 ;; Defined at:
   827 ;;		line 76 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\switching-program\dht11_module\main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  2    0[COMMON] short 
   834 ;; Registers used:
   835 ;;		wreg, status,2
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         2       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0
   843 ;;      Temps:          1       0       0       0       0
   844 ;;      Totals:         3       0       0       0       0
   845 ;;Total ram usage:        3 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _checkResponse
   856  070C                     _checkResponse:	
   857                           
   858                           ;main.c: 78: _delay((unsigned long)((40)*(4000000/4000000.0)));
   859                           
   860                           ;incstack = 0
   861                           ; Regs used in _checkResponse: [wreg+status,2]
   862  070C  300D               	movlw	13
   863  070D  00F2               	movwf	??_checkResponse
   864  070E                     u307:	
   865  070E  0BF2               	decfsz	??_checkResponse,f
   866  070F  2F0E               	goto	u307
   867                           
   868                           ;main.c: 79: if (!RB2)
   869  0710  1283               	bcf	3,5	;RP0=0, select bank0
   870  0711  1303               	bcf	3,6	;RP1=0, select bank0
   871  0712  1906               	btfsc	6,2	;volatile
   872  0713  2F27               	goto	l702
   873                           
   874                           ;main.c: 80: {
   875                           ;main.c: 81: _delay((unsigned long)((80)*(4000000/4000000.0)));
   876  0714  301A               	movlw	26
   877  0715  00F2               	movwf	??_checkResponse
   878  0716                     u317:	
   879  0716  0BF2               	decfsz	??_checkResponse,f
   880  0717  2F16               	goto	u317
   881  0718  0000               	nop
   882                           
   883                           ;main.c: 82: if (RB2)
   884  0719  1283               	bcf	3,5	;RP0=0, select bank0
   885  071A  1303               	bcf	3,6	;RP1=0, select bank0
   886  071B  1D06               	btfss	6,2	;volatile
   887  071C  2F27               	goto	l702
   888                           
   889                           ;main.c: 83: {
   890                           ;main.c: 84: _delay((unsigned long)((50)*(4000000/4000000.0)));
   891  071D  3010               	movlw	16
   892  071E  00F2               	movwf	??_checkResponse
   893  071F                     u327:	
   894  071F  0BF2               	decfsz	??_checkResponse,f
   895  0720  2F1F               	goto	u327
   896  0721  0000               	nop
   897                           
   898                           ;main.c: 85: return 1;
   899  0722  3001               	movlw	1
   900  0723  00F0               	movwf	?_checkResponse
   901  0724  3000               	movlw	0
   902  0725  00F1               	movwf	?_checkResponse+1
   903  0726  0008               	return
   904  0727                     l702:	
   905                           
   906                           ;main.c: 86: }
   907                           ;main.c: 87: }
   908                           ;main.c: 88: return 0;
   909  0727  01F0               	clrf	?_checkResponse
   910  0728  01F1               	clrf	?_checkResponse+1
   911  0729  0008               	return
   912  072A                     __end_of_checkResponse:	
   913  007E                     btemp	set	126	;btemp
   914  007E                     wtemp	set	126
   915  007E                     wtemp0	set	126
   916  0080                     wtemp1	set	128
   917  0082                     wtemp2	set	130
   918  0084                     wtemp3	set	132
   919  0086                     wtemp4	set	134
   920  0088                     wtemp5	set	136
   921  007F                     wtemp6	set	127
   922  007E                     ttemp	set	126
   923  007E                     ttemp0	set	126
   924  0081                     ttemp1	set	129
   925  0084                     ttemp2	set	132
   926  0087                     ttemp3	set	135
   927  007F                     ttemp4	set	127
   928  007E                     ltemp	set	126
   929  007E                     ltemp0	set	126
   930  0082                     ltemp1	set	130
   931  0086                     ltemp2	set	134
   932  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      0       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_readData
    _sendData->_sendByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     258
                                              5 COMMON     6     6      0
                      _checkResponse
                           _initUART
                           _readData
                           _sendData
                        _startSignal
 ---------------------------------------------------------------------------------
 (1) _startSignal                                          2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _sendData                                             2     1      1     119
                                              1 COMMON     2     1      1
                           _sendByte
 ---------------------------------------------------------------------------------
 (2) _sendByte                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _readData                                             5     5      0     139
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkResponse                                        3     1      2       0
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _checkResponse
   _initUART
   _readData
   _sendData
     _sendByte
   _startSignal

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      11       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      11      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue May 14 17:48:04 2024

            __CFG_CP$OFF 0000                       l81 0749                       l83 074B  
                     l77 0731                       l93 06CC              _startSignal 06F1  
  __end_of_checkResponse 072A                      l702 0727                      l712 0730  
                    l722 073E                      l740 0767                      l736 0758  
                    l770 07E8                      l758 077C                      _RB2 0032  
                    u307 070E                      u317 0716                      u327 071F  
                    u257 0782             __CFG_CPD$OFF 0000                      u267 07EE  
                    u277 06FB                      u287 0705                      u297 0740  
           __CFG_FOSC$HS 0000         sendData@humidity 0071             __CFG_LVP$OFF 0000  
                   _BRGH 04C2                     _CREN 00C4                     _SPEN 00C7  
                   _TXEN 04C5                     _TXIF 0064                     _SYNC 04C4  
           __CFG_WRT$OFF 0000                     _main 0769                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _SPBRG 0099                    _PORTB 0006  
                  _PORTC 0007                    _TRISB 0086                    _TRISC 0087  
                  _TXREG 0019                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 07F6             __end_of_main 07F6                   ??_main 0075  
                 _TRISB2 0432                   _TRISC6 043E                   _TRISC7 043F  
         __CFG_PWRTE$OFF 0000         __end_of_initUART 06F1         __end_of_readData 0769  
       __end_of_sendData 06DF         __end_of_sendByte 06D3  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             ?_startSignal 0070               __pbssBANK0 0020  
             __pmaintext 0769                  _RH_byte 007B                ?_initUART 0070  
              ?_readData 0070   __size_of_checkResponse 001E                ?_sendData 0071  
              ?_sendByte 0070                  _T_byte1 007C                  _T_byte2 0022  
       readData@bitcount 0074                  __ptext0 0000                  __ptext1 06F1  
                __ptext2 06D3                  __ptext3 06CB                  __ptext4 072A  
                __ptext5 06DF                  __ptext6 070C     end_of_initialization 07FC  
             ??_initUART 0070               ??_readData 0070               ??_sendData 0072  
             ??_sendByte 0070            _checkResponse 070C     __size_of_startSignal 001B  
         ?_checkResponse 0070      start_initialization 07F6             sendData@temp 0072  
            __pbssCOMMON 007B                ___latbits 0002        __size_of_initUART 0012  
      __size_of_readData 003F        __size_of_sendData 000C             sendByte@data 0070  
      __size_of_sendByte 0008            readData@_data 0073            readData@index 0072  
        ??_checkResponse 0072                 _RH_byte2 0021                 _CheckSum 0020  
          ??_startSignal 0070                 _checkbit 007D                 _initUART 06DF  
               _readData 072A            __size_of_main 008D                 _sendData 06D3  
               _sendByte 06CB      __end_of_startSignal 070C  
