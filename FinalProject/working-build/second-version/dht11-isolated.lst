

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu May 16 17:28:35 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123                           
   124                           	psect	idataBANK0
   125  128A                     __pidataBANK0:	
   126                           
   127                           ;initializer for _hours
   128  128A  3404               	retlw	4
   129                           
   130                           ;initializer for _lastKeyState
   131  128B  34FF               	retlw	255
   132                           
   133                           ;initializer for _savedHoursEnd
   134  128C  340A               	retlw	10
   135                           
   136                           ;initializer for _savedHoursStart
   137  128D  3409               	retlw	9
   138                           
   139                           ;initializer for _savedMinutesEnd
   140  128E  341E               	retlw	30
   141                           
   142                           ;initializer for _savedMinutesStart
   143  128F  341E               	retlw	30
   144                           
   145                           	psect	idataBANK1
   146  07FF                     __pidataBANK1:	
   147                           
   148                           ;initializer for _lastMode
   149  07FF  34FF               	retlw	255
   150                           
   151                           	psect	strings
   152  0800                     __pstrings:	
   153  0800                     stringtab:	
   154  0800                     __stringtab:	
   155                           
   156                           ;	String table - string pointers are 1 byte each
   157  0800  1BFF               	btfsc	btemp+1,7
   158  0801  280A               	ljmp	stringcode
   159  0802  1383               	bcf	3,7
   160  0803  187F               	btfsc	btemp+1,0
   161  0804  1783               	bsf	3,7
   162  0805  0800               	movf	0,w
   163  0806  0A84               	incf	4,f
   164  0807  1903               	skipnz
   165  0808  0AFF               	incf	btemp+1,f
   166  0809  0008               	return
   167  080A                     stringcode:	
   168  080A                     stringdir:	
   169  080A  3008               	movlw	high stringdir
   170  080B  008A               	movwf	10
   171  080C  0804               	movf	4,w
   172  080D  0A84               	incf	4,f
   173  080E  0782               	addwf	2,f
   174  080F                     __stringbase:	
   175  080F  3400               	retlw	0
   176  0810                     __end_of__stringtab:	
   177  0810                     _dpowers:	
   178  0810  3401               	retlw	1
   179  0811  3400               	retlw	0
   180  0812  340A               	retlw	10
   181  0813  3400               	retlw	0
   182  0814  3464               	retlw	100
   183  0815  3400               	retlw	0
   184  0816  34E8               	retlw	232
   185  0817  3403               	retlw	3
   186  0818  3410               	retlw	16
   187  0819  3427               	retlw	39
   188  081A                     __end_of_dpowers:	
   189  001F                     _ADCON0	set	31
   190  001E                     _ADRESH	set	30
   191  0006                     _PORTB	set	6
   192  0006                     _PORTBbits	set	6
   193  0007                     _PORTC	set	7
   194  0007                     _PORTCbits	set	7
   195  0008                     _PORTD	set	8
   196  005F                     _GIE	set	95
   197  00FA                     _GO_DONE	set	250
   198  005C                     _INTE	set	92
   199  0059                     _INTF	set	89
   200  005E                     _PEIE	set	94
   201  0031                     _RB1	set	49
   202  0038                     _RC0	set	56
   203  0039                     _RC1	set	57
   204  003A                     _RC2	set	58
   205  009F                     _ADCON1	set	159
   206  009E                     _ADRESL	set	158
   207  0085                     _TRISA	set	133
   208  0086                     _TRISB	set	134
   209  0086                     _TRISBbits	set	134
   210  0087                     _TRISC	set	135
   211  0088                     _TRISD	set	136
   212  040E                     _INTEDG	set	1038
   213  081A                     __stringdata:	
   214  081A                     STR_22:	
   215  081A  3452               	retlw	82	;'R'
   216  081B  3455               	retlw	85	;'U'
   217  081C  344E               	retlw	78	;'N'
   218  081D  343A               	retlw	58	;':'
   219  081E  3420               	retlw	32	;' '
   220  081F  3425               	retlw	37	;'%'
   221  0820  3430               	retlw	48	;'0'
   222  0821  3432               	retlw	50	;'2'
   223  0822  3464               	retlw	100	;'d'
   224  0823  343A               	retlw	58	;':'
   225  0824  3425               	retlw	37	;'%'
   226  0825  3430               	retlw	48	;'0'
   227  0826  3432               	retlw	50	;'2'
   228  0827  3464               	retlw	100	;'d'
   229  0828  342D               	retlw	45	;'-'
   230  0829  3425               	retlw	37	;'%'
   231  082A  3430               	retlw	48	;'0'
   232  082B  3432               	retlw	50	;'2'
   233  082C  3464               	retlw	100	;'d'
   234  082D  343A               	retlw	58	;':'
   235  082E  3425               	retlw	37	;'%'
   236  082F  3430               	retlw	48	;'0'
   237  0830  3432               	retlw	50	;'2'
   238  0831  3464               	retlw	100	;'d'
   239  0832  3400               	retlw	0
   240  0833                     STR_23:	
   241  0833  3453               	retlw	83	;'S'
   242  0834  3465               	retlw	101	;'e'
   243  0835  3474               	retlw	116	;'t'
   244  0836  3420               	retlw	32	;' '
   245  0837  3453               	retlw	83	;'S'
   246  0838  3443               	retlw	67	;'C'
   247  0839  3448               	retlw	72	;'H'
   248  083A  3445               	retlw	69	;'E'
   249  083B  3444               	retlw	68	;'D'
   250  083C  3420               	retlw	32	;' '
   251  083D  342D               	retlw	45	;'-'
   252  083E  3420               	retlw	32	;' '
   253  083F  3453               	retlw	83	;'S'
   254  0840  3454               	retlw	84	;'T'
   255  0841  3441               	retlw	65	;'A'
   256  0842  3452               	retlw	82	;'R'
   257  0843  3454               	retlw	84	;'T'
   258  0844  3400               	retlw	0
   259  0845                     STR_29:	
   260  0845  3449               	retlw	73	;'I'
   261  0846  346E               	retlw	110	;'n'
   262  0847  3469               	retlw	105	;'i'
   263  0848  3474               	retlw	116	;'t'
   264  0849  3469               	retlw	105	;'i'
   265  084A  3461               	retlw	97	;'a'
   266  084B  346C               	retlw	108	;'l'
   267  084C  3469               	retlw	105	;'i'
   268  084D  347A               	retlw	122	;'z'
   269  084E  3469               	retlw	105	;'i'
   270  084F  346E               	retlw	110	;'n'
   271  0850  3467               	retlw	103	;'g'
   272  0851  342E               	retlw	46	;'.'
   273  0852  342E               	retlw	46	;'.'
   274  0853  342E               	retlw	46	;'.'
   275  0854  3400               	retlw	0
   276  0855                     STR_26:	
   277  0855  3453               	retlw	83	;'S'
   278  0856  3465               	retlw	101	;'e'
   279  0857  3474               	retlw	116	;'t'
   280  0858  3420               	retlw	32	;' '
   281  0859  3453               	retlw	83	;'S'
   282  085A  3443               	retlw	67	;'C'
   283  085B  3448               	retlw	72	;'H'
   284  085C  3445               	retlw	69	;'E'
   285  085D  3444               	retlw	68	;'D'
   286  085E  3420               	retlw	32	;' '
   287  085F  342D               	retlw	45	;'-'
   288  0860  3420               	retlw	32	;' '
   289  0861  3445               	retlw	69	;'E'
   290  0862  344E               	retlw	78	;'N'
   291  0863  3444               	retlw	68	;'D'
   292  0864  3400               	retlw	0
   293  0865                     STR_9:	
   294  0865  3454               	retlw	84	;'T'
   295  0866  3469               	retlw	105	;'i'
   296  0867  346D               	retlw	109	;'m'
   297  0868  3465               	retlw	101	;'e'
   298  0869  343A               	retlw	58	;':'
   299  086A  3420               	retlw	32	;' '
   300  086B  3425               	retlw	37	;'%'
   301  086C  3430               	retlw	48	;'0'
   302  086D  3432               	retlw	50	;'2'
   303  086E  3464               	retlw	100	;'d'
   304  086F  343A               	retlw	58	;':'
   305  0870  3425               	retlw	37	;'%'
   306  0871  3430               	retlw	48	;'0'
   307  0872  3432               	retlw	50	;'2'
   308  0873  3464               	retlw	100	;'d'
   309  0874  3400               	retlw	0
   310  0875                     STR_24:	
   311  0875  3453               	retlw	83	;'S'
   312  0876  3454               	retlw	84	;'T'
   313  0877  3441               	retlw	65	;'A'
   314  0878  3452               	retlw	82	;'R'
   315  0879  3454               	retlw	84	;'T'
   316  087A  3420               	retlw	32	;' '
   317  087B  3448               	retlw	72	;'H'
   318  087C  344F               	retlw	79	;'O'
   319  087D  3455               	retlw	85	;'U'
   320  087E  3452               	retlw	82	;'R'
   321  087F  3453               	retlw	83	;'S'
   322  0880  3400               	retlw	0
   323  0881                     STR_2:	
   324  0881  3448               	retlw	72	;'H'
   325  0882  344D               	retlw	77	;'M'
   326  0883  3444               	retlw	68	;'D'
   327  0884  3454               	retlw	84	;'T'
   328  0885  343A               	retlw	58	;':'
   329  0886  3420               	retlw	32	;' '
   330  0887  3425               	retlw	37	;'%'
   331  0888  3464               	retlw	100	;'d'
   332  0889  3425               	retlw	37	;'%'
   333  088A  3425               	retlw	37	;'%'
   334  088B  3400               	retlw	0
   335  088C                     STR_25:	
   336  088C  3453               	retlw	83	;'S'
   337  088D  3454               	retlw	84	;'T'
   338  088E  3441               	retlw	65	;'A'
   339  088F  3452               	retlw	82	;'R'
   340  0890  3454               	retlw	84	;'T'
   341  0891  3420               	retlw	32	;' '
   342  0892  344D               	retlw	77	;'M'
   343  0893  3449               	retlw	73	;'I'
   344  0894  344E               	retlw	78	;'N'
   345  0895  3453               	retlw	83	;'S'
   346  0896  3400               	retlw	0
   347  0897                     STR_1:	
   348  0897  3454               	retlw	84	;'T'
   349  0898  3445               	retlw	69	;'E'
   350  0899  344D               	retlw	77	;'M'
   351  089A  3450               	retlw	80	;'P'
   352  089B  343A               	retlw	58	;':'
   353  089C  3420               	retlw	32	;' '
   354  089D  3425               	retlw	37	;'%'
   355  089E  3464               	retlw	100	;'d'
   356  089F  3443               	retlw	67	;'C'
   357  08A0  3400               	retlw	0
   358  08A1                     STR_27:	
   359  08A1  3445               	retlw	69	;'E'
   360  08A2  344E               	retlw	78	;'N'
   361  08A3  3444               	retlw	68	;'D'
   362  08A4  3420               	retlw	32	;' '
   363  08A5  3448               	retlw	72	;'H'
   364  08A6  344F               	retlw	79	;'O'
   365  08A7  3455               	retlw	85	;'U'
   366  08A8  3452               	retlw	82	;'R'
   367  08A9  3453               	retlw	83	;'S'
   368  08AA  3400               	retlw	0
   369  08AB                     STR_11:	
   370  08AB  3444               	retlw	68	;'D'
   371  08AC  3445               	retlw	69	;'E'
   372  08AD  3443               	retlw	67	;'C'
   373  08AE  343A               	retlw	58	;':'
   374  08AF  3420               	retlw	32	;' '
   375  08B0  3425               	retlw	37	;'%'
   376  08B1  3430               	retlw	48	;'0'
   377  08B2  3432               	retlw	50	;'2'
   378  08B3  3464               	retlw	100	;'d'
   379  08B4  3400               	retlw	0
   380  08B5                     STR_10:	
   381  08B5  3449               	retlw	73	;'I'
   382  08B6  344E               	retlw	78	;'N'
   383  08B7  3443               	retlw	67	;'C'
   384  08B8  343A               	retlw	58	;':'
   385  08B9  3420               	retlw	32	;' '
   386  08BA  3425               	retlw	37	;'%'
   387  08BB  3430               	retlw	48	;'0'
   388  08BC  3432               	retlw	50	;'2'
   389  08BD  3464               	retlw	100	;'d'
   390  08BE  3400               	retlw	0
   391  08BF                     STR_12:	
   392  08BF  3453               	retlw	83	;'S'
   393  08C0  3445               	retlw	69	;'E'
   394  08C1  3454               	retlw	84	;'T'
   395  08C2  343A               	retlw	58	;':'
   396  08C3  3420               	retlw	32	;' '
   397  08C4  3425               	retlw	37	;'%'
   398  08C5  3430               	retlw	48	;'0'
   399  08C6  3432               	retlw	50	;'2'
   400  08C7  3464               	retlw	100	;'d'
   401  08C8  3400               	retlw	0
   402  08C9                     STR_6:	
   403  08C9  3425               	retlw	37	;'%'
   404  08CA  3464               	retlw	100	;'d'
   405  08CB  3420               	retlw	32	;' '
   406  08CC  3470               	retlw	112	;'p'
   407  08CD  3470               	retlw	112	;'p'
   408  08CE  346D               	retlw	109	;'m'
   409  08CF  3420               	retlw	32	;' '
   410  08D0  3420               	retlw	32	;' '
   411  08D1  3400               	retlw	0
   412  08D2                     STR_28:	
   413  08D2  3445               	retlw	69	;'E'
   414  08D3  344E               	retlw	78	;'N'
   415  08D4  3444               	retlw	68	;'D'
   416  08D5  3420               	retlw	32	;' '
   417  08D6  344D               	retlw	77	;'M'
   418  08D7  3449               	retlw	73	;'I'
   419  08D8  344E               	retlw	78	;'N'
   420  08D9  3453               	retlw	83	;'S'
   421  08DA  3400               	retlw	0
   422  08DB                     STR_7:	
   423  08DB  3450               	retlw	80	;'P'
   424  08DC  3455               	retlw	85	;'U'
   425  08DD  3452               	retlw	82	;'R'
   426  08DE  3446               	retlw	70	;'F'
   427  08DF  3420               	retlw	32	;' '
   428  08E0  3448               	retlw	72	;'H'
   429  08E1  3449               	retlw	73	;'I'
   430  08E2  3400               	retlw	0
   431  08E3                     STR_8:	
   432  08E3  3450               	retlw	80	;'P'
   433  08E4  3455               	retlw	85	;'U'
   434  08E5  3452               	retlw	82	;'R'
   435  08E6  3446               	retlw	70	;'F'
   436  08E7  3420               	retlw	32	;' '
   437  08E8  344C               	retlw	76	;'L'
   438  08E9  344F               	retlw	79	;'O'
   439  08EA  3400               	retlw	0
   440  08EB                     STR_3:	
   441  08EB  3445               	retlw	69	;'E'
   442  08EC  3452               	retlw	82	;'R'
   443  08ED  3452               	retlw	82	;'R'
   444  08EE  344F               	retlw	79	;'O'
   445  08EF  3452               	retlw	82	;'R'
   446  08F0  3421               	retlw	33	;'!'
   447  08F1  3400               	retlw	0
   448  08F2                     STR_4:	
   449  08F2  3443               	retlw	67	;'C'
   450  08F3  344F               	retlw	79	;'O'
   451  08F4  3432               	retlw	50	;'2'
   452  08F5  343A               	retlw	58	;':'
   453  08F6  3420               	retlw	32	;' '
   454  08F7  3400               	retlw	0
   455  08F8                     STR_5:	
   456  08F8  3425               	retlw	37	;'%'
   457  08F9  3464               	retlw	100	;'d'
   458  08FA  3400               	retlw	0
   459  08FB                     __end_of__stringdata:	
   460                           
   461                           ; #config settings
   462  0000                     
   463                           	psect	cinit
   464  0015                     start_initialization:	
   465  0015                     __initialization:	
   466                           
   467                           ; Clear objects allocated to COMMON
   468  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   469  0016  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   470                           
   471                           ; Clear objects allocated to BANK0
   472  0017  01ED               	clrf	__pbssBANK0& (0+127)
   473  0018  01EE               	clrf	(__pbssBANK0+1)& (0+127)
   474  0019  01EF               	clrf	(__pbssBANK0+2)& (0+127)
   475                           
   476                           ; Clear objects allocated to BANK1
   477  001A  1383               	bcf	3,7	;select IRP bank0
   478  001B  30D7               	movlw	low __pbssBANK1
   479  001C  0084               	movwf	4
   480  001D  30EE               	movlw	low (__pbssBANK1+23)
   481  001E  160A  118A  229F  120A  118A  	fcall	clear_ram0
   482                           
   483                           ; Initialize objects allocated to BANK1
   484  0023  1683               	bsf	3,5	;RP0=1, select bank1
   485  0024  1303               	bcf	3,6	;RP1=0, select bank1
   486  0025  120A  118A  27FF  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   487  002A  00EE               	movwf	__pdataBANK1& (0+127)
   488                           
   489                           ; Initialize objects allocated to BANK0
   490  002B  1283               	bcf	3,5	;RP0=0, select bank0
   491  002C  1303               	bcf	3,6	;RP1=0, select bank0
   492  002D  160A  118A  228A  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   493  0032  00E7               	movwf	__pdataBANK0& (0+127)
   494  0033  160A  118A  228B  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   495  0038  00E8               	movwf	(__pdataBANK0+1)& (0+127)
   496  0039  160A  118A  228C  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   497  003E  00E9               	movwf	(__pdataBANK0+2)& (0+127)
   498  003F  160A  118A  228D  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   499  0044  00EA               	movwf	(__pdataBANK0+3)& (0+127)
   500  0045  160A  118A  228E  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   501  004A  00EB               	movwf	(__pdataBANK0+4)& (0+127)
   502  004B  160A  118A  228F   	fcall	__pidataBANK0+5	;fetch initializer
   503  004E  00EC               	movwf	(__pdataBANK0+5)& (0+127)
   504  004F                     end_of_initialization:	
   505                           ;End of C runtime variable initialization code
   506                           
   507  004F                     __end_of__initialization:	
   508  004F  0183               	clrf	3
   509  0050  120A  118A  2E3E   	ljmp	_main	;jump to C main() function
   510                           
   511                           	psect	bssCOMMON
   512  007C                     __pbssCOMMON:	
   513  007C                     _humidity:	
   514  007C                     	ds	1
   515  007D                     _temperature:	
   516  007D                     	ds	1
   517                           
   518                           	psect	bssBANK0
   519  006D                     __pbssBANK0:	
   520  006D                     _key:	
   521  006D                     	ds	1
   522  006E                     _keyValid:	
   523  006E                     	ds	1
   524  006F                     _minutes:	
   525  006F                     	ds	1
   526                           
   527                           	psect	dataBANK0
   528  0067                     __pdataBANK0:	
   529  0067                     _hours:	
   530  0067                     	ds	1
   531  0068                     _lastKeyState:	
   532  0068                     	ds	1
   533  0069                     _savedHoursEnd:	
   534  0069                     	ds	1
   535  006A                     _savedHoursStart:	
   536  006A                     	ds	1
   537  006B                     _savedMinutesEnd:	
   538  006B                     	ds	1
   539  006C                     _savedMinutesStart:	
   540  006C                     	ds	1
   541                           
   542                           	psect	bssBANK1
   543  00D7                     __pbssBANK1:	
   544  00D7                     readDHT11@F1216:	
   545  00D7                     	ds	5
   546  00DC                     _PPM:	
   547  00DC                     	ds	3
   548  00DF                     checkSEL@lastRB1State:	
   549  00DF                     	ds	2
   550  00E1                     _SEL:	
   551  00E1                     	ds	1
   552  00E2                     _mode:	
   553  00E2                     	ds	1
   554  00E3                     _ppmFlag:	
   555  00E3                     	ds	1
   556  00E4                     _debugInfo:	
   557  00E4                     	ds	10
   558                           
   559                           	psect	dataBANK1
   560  00EE                     __pdataBANK1:	
   561  00EE                     _lastMode:	
   562  00EE                     	ds	1
   563                           
   564                           	psect	clrtext
   565  129F                     clear_ram0:	
   566                           ;	Called with FSR containing the base address, and
   567                           ;	W with the last address+1
   568                           
   569  129F  0064               	clrwdt	;clear the watchdog before getting into this loop
   570  12A0                     clrloop0:	
   571  12A0  0180               	clrf	0	;clear RAM location pointed to by FSR
   572  12A1  0A84               	incf	4,f	;increment pointer
   573  12A2  0604               	xorwf	4,w	;XOR with final address
   574  12A3  1903               	btfsc	3,2	;have we reached the end yet?
   575  12A4  3400               	retlw	0	;all done for this memory range, return
   576  12A5  0604               	xorwf	4,w	;XOR again to restore value
   577  12A6  2AA0               	goto	clrloop0	;do the next byte
   578                           
   579                           	psect	cstackBANK1
   580  00A0                     __pcstackBANK1:	
   581  00A0                     CalcMQ135@voltage:	
   582  00A0                     displayPPM@strBuffer:	
   583                           ; 3 bytes @ 0x0
   584                           
   585                           
   586                           ; 20 bytes @ 0x0
   587  00A0                     	ds	3
   588  00A3                     CalcMQ135@ratio6:	
   589                           
   590                           ; 3 bytes @ 0x3
   591  00A3                     	ds	3
   592  00A6                     _CalcMQ135$765:	
   593                           
   594                           ; 3 bytes @ 0x6
   595  00A6                     	ds	3
   596  00A9                     _CalcMQ135$766:	
   597                           
   598                           ; 3 bytes @ 0x9
   599  00A9                     	ds	3
   600  00AC                     _CalcMQ135$767:	
   601                           
   602                           ; 3 bytes @ 0xC
   603  00AC                     	ds	3
   604  00AF                     _CalcMQ135$768:	
   605                           
   606                           ; 3 bytes @ 0xF
   607  00AF                     	ds	3
   608  00B2                     _CalcMQ135$769:	
   609                           
   610                           ; 3 bytes @ 0x12
   611  00B2                     	ds	2
   612  00B4                     displayPPM@ppmWhole:	
   613                           
   614                           ; 2 bytes @ 0x14
   615  00B4                     	ds	1
   616  00B5                     CalcMQ135@ratio2:	
   617                           
   618                           ; 3 bytes @ 0x15
   619  00B5                     	ds	1
   620  00B6                     displayPPM@ppmFraction:	
   621                           
   622                           ; 2 bytes @ 0x16
   623  00B6                     	ds	2
   624  00B8                     displayPPM@bufPtr:	
   625  00B8                     CalcMQ135@ratio3:	
   626                           ; 1 bytes @ 0x18
   627                           
   628                           
   629                           ; 3 bytes @ 0x18
   630  00B8                     	ds	3
   631  00BB                     CalcMQ135@ratio4:	
   632                           
   633                           ; 3 bytes @ 0x1B
   634  00BB                     	ds	3
   635  00BE                     CalcMQ135@ratio5:	
   636                           
   637                           ; 3 bytes @ 0x1E
   638  00BE                     	ds	3
   639  00C1                     CalcMQ135@co2:	
   640                           
   641                           ; 3 bytes @ 0x21
   642  00C1                     	ds	3
   643  00C4                     CalcMQ135@ratio:	
   644                           
   645                           ; 3 bytes @ 0x24
   646  00C4                     	ds	3
   647  00C7                     main@buffer:	
   648                           
   649                           ; 16 bytes @ 0x27
   650  00C7                     	ds	16
   651                           
   652                           	psect	cstackCOMMON
   653  0070                     __pcstackCOMMON:	
   654  0070                     ?_initPorts:	
   655  0070                     ?_initRegisters:	
   656                           ; 0 bytes @ 0x0
   657                           
   658  0070                     ?_initInterrupts:	
   659                           ; 0 bytes @ 0x0
   660                           
   661  0070                     ?_startUpSequence:	
   662                           ; 0 bytes @ 0x0
   663                           
   664  0070                     ?_checkMode:	
   665                           ; 0 bytes @ 0x0
   666                           
   667  0070                     ?_checkSEL:	
   668                           ; 0 bytes @ 0x0
   669                           
   670  0070                     ?_isdigit:	
   671                           ; 0 bytes @ 0x0
   672                           
   673  0070                     ?_instCTRL:	
   674                           ; 1 bit 
   675                           
   676  0070                     ?_dataCTRL:	
   677                           ; 0 bytes @ 0x0
   678                           
   679  0070                     ?_initLCD:	
   680                           ; 0 bytes @ 0x0
   681                           
   682  0070                     ?_initDHT11:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ?_displayDataDHT11:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ?_runDHT11:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ?_activateHumidifier:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_runMQ135:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ?_displayPPM:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ?_runClock:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_displayTime:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_setHoursStart:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_setHoursEnd:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_setMinutesStart:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_setMinutesEnd:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?_checkTime:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?_main:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?_ISR:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0070                     ?_handlePPM:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ?i1___awmod:	
   731                           ; 1 bytes @ 0x0
   732                           
   733  0070                     i1___awmod@divisor:	
   734                           ; 2 bytes @ 0x0
   735                           
   736                           
   737                           ; 2 bytes @ 0x0
   738  0070                     	ds	2
   739  0072                     i1___awmod@dividend:	
   740                           
   741                           ; 2 bytes @ 0x2
   742  0072                     	ds	2
   743  0074                     ??i1___awmod:	
   744                           
   745                           ; 0 bytes @ 0x4
   746  0074                     	ds	1
   747  0075                     i1___awmod@counter:	
   748                           
   749                           ; 1 bytes @ 0x5
   750  0075                     	ds	1
   751  0076                     i1___awmod@sign:	
   752                           
   753                           ; 1 bytes @ 0x6
   754  0076                     	ds	1
   755  0077                     ??_ISR:	
   756                           
   757                           ; 0 bytes @ 0x7
   758  0077                     	ds	5
   759                           
   760                           	psect	cstackBANK0
   761  0020                     __pcstackBANK0:	
   762  0020                     ??_initPorts:	
   763  0020                     ??_initRegisters:	
   764                           ; 0 bytes @ 0x0
   765                           
   766  0020                     ??_initInterrupts:	
   767                           ; 0 bytes @ 0x0
   768                           
   769  0020                     ??_isdigit:	
   770                           ; 0 bytes @ 0x0
   771                           
   772  0020                     ??_instCTRL:	
   773                           ; 0 bytes @ 0x0
   774                           
   775  0020                     ??_dataCTRL:	
   776                           ; 0 bytes @ 0x0
   777                           
   778  0020                     ??_initDHT11:	
   779                           ; 0 bytes @ 0x0
   780                           
   781  0020                     ??_activateHumidifier:	
   782                           ; 0 bytes @ 0x0
   783                           
   784  0020                     ??_runClock:	
   785                           ; 0 bytes @ 0x0
   786                           
   787  0020                     ??_checkTime:	
   788                           ; 0 bytes @ 0x0
   789                           
   790  0020                     ?___ftge:	
   791                           ; 0 bytes @ 0x0
   792                           
   793  0020                     ?_readDHT11:	
   794                           ; 1 bit 
   795                           
   796  0020                     ?_readADC:	
   797                           ; 1 bytes @ 0x0
   798                           
   799  0020                     ?___wmul:	
   800                           ; 2 bytes @ 0x0
   801                           
   802  0020                     ?___awmod:	
   803                           ; 2 bytes @ 0x0
   804                           
   805  0020                     ?___lwdiv:	
   806                           ; 2 bytes @ 0x0
   807                           
   808  0020                     ?___ftpack:	
   809                           ; 2 bytes @ 0x0
   810                           
   811  0020                     readDHT11@humidity:	
   812                           ; 3 bytes @ 0x0
   813                           
   814  0020                     _isdigit$521:	
   815                           ; 1 bytes @ 0x0
   816                           
   817  0020                     ___wmul@multiplier:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0020                     ___awmod@divisor:	
   821                           ; 2 bytes @ 0x0
   822                           
   823  0020                     ___lwdiv@divisor:	
   824                           ; 2 bytes @ 0x0
   825                           
   826  0020                     ___ftpack@arg:	
   827                           ; 2 bytes @ 0x0
   828                           
   829  0020                     ___ftge@ff1:	
   830                           ; 3 bytes @ 0x0
   831                           
   832                           
   833                           ; 3 bytes @ 0x0
   834  0020                     	ds	1
   835  0021                     ??_readDHT11:	
   836  0021                     instCTRL@CMD:	
   837                           ; 0 bytes @ 0x1
   838                           
   839  0021                     dataCTRL@DAT:	
   840                           ; 1 bytes @ 0x1
   841                           
   842  0021                     isdigit@c:	
   843                           ; 1 bytes @ 0x1
   844                           
   845                           
   846                           ; 1 bytes @ 0x1
   847  0021                     	ds	1
   848  0022                     ??_checkMode:	
   849  0022                     ??_checkSEL:	
   850                           ; 0 bytes @ 0x2
   851                           
   852  0022                     ??_readADC:	
   853                           ; 0 bytes @ 0x2
   854                           
   855  0022                     ??_initLCD:	
   856                           ; 0 bytes @ 0x2
   857                           
   858  0022                     ?_printToLCD:	
   859                           ; 0 bytes @ 0x2
   860                           
   861  0022                     printToLCD@str:	
   862                           ; 0 bytes @ 0x2
   863                           
   864  0022                     ___wmul@multiplicand:	
   865                           ; 2 bytes @ 0x2
   866                           
   867  0022                     ___awmod@dividend:	
   868                           ; 2 bytes @ 0x2
   869                           
   870  0022                     ___lwdiv@dividend:	
   871                           ; 2 bytes @ 0x2
   872                           
   873                           
   874                           ; 2 bytes @ 0x2
   875  0022                     	ds	1
   876  0023                     ___ftpack@exp:	
   877  0023                     ___ftge@ff2:	
   878                           ; 1 bytes @ 0x3
   879                           
   880                           
   881                           ; 3 bytes @ 0x3
   882  0023                     	ds	1
   883  0024                     ??_startUpSequence:	
   884  0024                     ??_printToLCD:	
   885                           ; 0 bytes @ 0x4
   886                           
   887  0024                     ??___wmul:	
   888                           ; 0 bytes @ 0x4
   889                           
   890  0024                     ??___awmod:	
   891                           ; 0 bytes @ 0x4
   892                           
   893  0024                     ??___lwdiv:	
   894                           ; 0 bytes @ 0x4
   895                           
   896  0024                     readADC@channel:	
   897                           ; 0 bytes @ 0x4
   898                           
   899  0024                     ___ftpack@sign:	
   900                           ; 1 bytes @ 0x4
   901                           
   902  0024                     checkSEL@currentRB1State:	
   903                           ; 1 bytes @ 0x4
   904                           
   905  0024                     ___wmul@product:	
   906                           ; 2 bytes @ 0x4
   907                           
   908                           
   909                           ; 2 bytes @ 0x4
   910  0024                     	ds	1
   911  0025                     ??___ftpack:	
   912  0025                     ___awmod@counter:	
   913                           ; 0 bytes @ 0x5
   914                           
   915  0025                     ___lwdiv@quotient:	
   916                           ; 1 bytes @ 0x5
   917                           
   918                           
   919                           ; 2 bytes @ 0x5
   920  0025                     	ds	1
   921  0026                     ??___ftge:	
   922  0026                     ___awmod@sign:	
   923                           ; 0 bytes @ 0x6
   924                           
   925                           
   926                           ; 1 bytes @ 0x6
   927  0026                     	ds	1
   928  0027                     readDHT11@temperature:	
   929  0027                     ___lwdiv@counter:	
   930                           ; 1 bytes @ 0x7
   931                           
   932                           
   933                           ; 1 bytes @ 0x7
   934  0027                     	ds	1
   935  0028                     ?___lwmod:	
   936  0028                     ?___awtoft:	
   937                           ; 2 bytes @ 0x8
   938                           
   939  0028                     ___awtoft@c:	
   940                           ; 3 bytes @ 0x8
   941                           
   942  0028                     ___lwmod@divisor:	
   943                           ; 2 bytes @ 0x8
   944                           
   945  0028                     readDHT11@bits:	
   946                           ; 2 bytes @ 0x8
   947                           
   948                           
   949                           ; 5 bytes @ 0x8
   950  0028                     	ds	2
   951  002A                     ___lwmod@dividend:	
   952                           
   953                           ; 2 bytes @ 0xA
   954  002A                     	ds	1
   955  002B                     ??___awtoft:	
   956                           
   957                           ; 0 bytes @ 0xB
   958  002B                     	ds	1
   959  002C                     ??_handlePPM:	
   960  002C                     ??___lwmod:	
   961                           ; 0 bytes @ 0xC
   962                           
   963                           
   964                           ; 0 bytes @ 0xC
   965  002C                     	ds	1
   966  002D                     readDHT11@i:	
   967  002D                     ___awtoft@sign:	
   968                           ; 1 bytes @ 0xD
   969                           
   970  002D                     ___lwmod@counter:	
   971                           ; 1 bytes @ 0xD
   972                           
   973                           
   974                           ; 1 bytes @ 0xD
   975  002D                     	ds	1
   976  002E                     ?_sprintf:	
   977  002E                     ?___ftneg:	
   978                           ; 2 bytes @ 0xE
   979                           
   980  002E                     readDHT11@j:	
   981                           ; 3 bytes @ 0xE
   982                           
   983  002E                     sprintf@f:	
   984                           ; 1 bytes @ 0xE
   985                           
   986  002E                     ___ftneg@f1:	
   987                           ; 1 bytes @ 0xE
   988                           
   989                           
   990                           ; 3 bytes @ 0xE
   991  002E                     	ds	1
   992  002F                     ??_runDHT11:	
   993                           
   994                           ; 0 bytes @ 0xF
   995  002F                     	ds	2
   996  0031                     ??___ftneg:	
   997  0031                     ?___ftmul:	
   998                           ; 0 bytes @ 0x11
   999                           
  1000  0031                     ___ftmul@f1:	
  1001                           ; 3 bytes @ 0x11
  1002                           
  1003                           
  1004                           ; 3 bytes @ 0x11
  1005  0031                     	ds	3
  1006  0034                     ___ftmul@f2:	
  1007                           
  1008                           ; 3 bytes @ 0x14
  1009  0034                     	ds	3
  1010  0037                     ??_sprintf:	
  1011  0037                     ??___ftmul:	
  1012                           ; 0 bytes @ 0x17
  1013                           
  1014                           
  1015                           ; 0 bytes @ 0x17
  1016  0037                     	ds	3
  1017  003A                     sprintf@ap:	
  1018                           
  1019                           ; 1 bytes @ 0x1A
  1020  003A                     	ds	1
  1021  003B                     sprintf@prec:	
  1022  003B                     ___ftmul@exp:	
  1023                           ; 1 bytes @ 0x1B
  1024                           
  1025                           
  1026                           ; 1 bytes @ 0x1B
  1027  003B                     	ds	1
  1028  003C                     sprintf@ccnt:	
  1029  003C                     ___ftmul@f3_as_product:	
  1030                           ; 2 bytes @ 0x1C
  1031                           
  1032                           
  1033                           ; 3 bytes @ 0x1C
  1034  003C                     	ds	2
  1035  003E                     sprintf@flag:	
  1036                           
  1037                           ; 1 bytes @ 0x1E
  1038  003E                     	ds	1
  1039  003F                     ___ftmul@cntr:	
  1040  003F                     sprintf@width:	
  1041                           ; 1 bytes @ 0x1F
  1042                           
  1043                           
  1044                           ; 2 bytes @ 0x1F
  1045  003F                     	ds	1
  1046  0040                     ___ftmul@sign:	
  1047                           
  1048                           ; 1 bytes @ 0x20
  1049  0040                     	ds	1
  1050  0041                     ?___ftadd:	
  1051  0041                     ?___ftdiv:	
  1052                           ; 3 bytes @ 0x21
  1053                           
  1054  0041                     sprintf@_val:	
  1055                           ; 3 bytes @ 0x21
  1056                           
  1057  0041                     ___ftadd@f1:	
  1058                           ; 3 bytes @ 0x21
  1059                           
  1060  0041                     ___ftdiv@f2:	
  1061                           ; 3 bytes @ 0x21
  1062                           
  1063                           
  1064                           ; 3 bytes @ 0x21
  1065  0041                     	ds	3
  1066  0044                     sprintf@c:	
  1067  0044                     ___ftadd@f2:	
  1068                           ; 1 bytes @ 0x24
  1069                           
  1070  0044                     ___ftdiv@f1:	
  1071                           ; 3 bytes @ 0x24
  1072                           
  1073                           
  1074                           ; 3 bytes @ 0x24
  1075  0044                     	ds	1
  1076  0045                     sprintf@sp:	
  1077                           
  1078                           ; 1 bytes @ 0x25
  1079  0045                     	ds	1
  1080  0046                     ??_displayDataDHT11:	
  1081  0046                     ??_displayTime:	
  1082                           ; 0 bytes @ 0x26
  1083                           
  1084  0046                     ??_setHoursStart:	
  1085                           ; 0 bytes @ 0x26
  1086                           
  1087  0046                     ??_setHoursEnd:	
  1088                           ; 0 bytes @ 0x26
  1089                           
  1090  0046                     ??_setMinutesStart:	
  1091                           ; 0 bytes @ 0x26
  1092                           
  1093  0046                     ??_setMinutesEnd:	
  1094                           ; 0 bytes @ 0x26
  1095                           
  1096                           
  1097                           ; 0 bytes @ 0x26
  1098  0046                     	ds	1
  1099  0047                     ??___ftadd:	
  1100  0047                     ??___ftdiv:	
  1101                           ; 0 bytes @ 0x27
  1102                           
  1103                           
  1104                           ; 0 bytes @ 0x27
  1105  0047                     	ds	2
  1106  0049                     displayDataDHT11@buffer:	
  1107                           
  1108                           ; 15 bytes @ 0x29
  1109  0049                     	ds	2
  1110  004B                     ___ftadd@sign:	
  1111  004B                     ___ftdiv@cntr:	
  1112                           ; 1 bytes @ 0x2B
  1113                           
  1114  004B                     displayTime@timeFormat:	
  1115                           ; 1 bytes @ 0x2B
  1116                           
  1117                           
  1118                           ; 16 bytes @ 0x2B
  1119  004B                     	ds	1
  1120  004C                     ___ftadd@exp2:	
  1121  004C                     ___ftdiv@f3:	
  1122                           ; 1 bytes @ 0x2C
  1123                           
  1124                           
  1125                           ; 3 bytes @ 0x2C
  1126  004C                     	ds	1
  1127  004D                     ___ftadd@exp1:	
  1128                           
  1129                           ; 1 bytes @ 0x2D
  1130  004D                     	ds	1
  1131  004E                     ?___fttol:	
  1132  004E                     ___fttol@f1:	
  1133                           ; 4 bytes @ 0x2E
  1134                           
  1135                           
  1136                           ; 3 bytes @ 0x2E
  1137  004E                     	ds	1
  1138  004F                     ___ftdiv@exp:	
  1139                           
  1140                           ; 1 bytes @ 0x2F
  1141  004F                     	ds	1
  1142  0050                     ___ftdiv@sign:	
  1143                           
  1144                           ; 1 bytes @ 0x30
  1145  0050                     	ds	1
  1146  0051                     ?_CalcMQ135:	
  1147  0051                     CalcMQ135@RAW_ADC:	
  1148                           ; 3 bytes @ 0x31
  1149                           
  1150                           
  1151                           ; 2 bytes @ 0x31
  1152  0051                     	ds	1
  1153  0052                     ??___fttol:	
  1154                           
  1155                           ; 0 bytes @ 0x32
  1156  0052                     	ds	2
  1157  0054                     ??_CalcMQ135:	
  1158  0054                     ??_runMQ135:	
  1159                           ; 0 bytes @ 0x34
  1160                           
  1161                           
  1162                           ; 0 bytes @ 0x34
  1163  0054                     	ds	2
  1164  0056                     ___fttol@sign1:	
  1165                           
  1166                           ; 1 bytes @ 0x36
  1167  0056                     	ds	1
  1168  0057                     ___fttol@lval:	
  1169                           
  1170                           ; 4 bytes @ 0x37
  1171  0057                     	ds	4
  1172  005B                     ___fttol@exp1:	
  1173                           
  1174                           ; 1 bytes @ 0x3B
  1175  005B                     	ds	1
  1176  005C                     ??_displayPPM:	
  1177                           
  1178                           ; 0 bytes @ 0x3C
  1179  005C                     	ds	2
  1180  005E                     ??_main:	
  1181                           
  1182                           ; 0 bytes @ 0x3E
  1183  005E                     	ds	9
  1184                           
  1185                           	psect	maintext
  1186  063E                     __pmaintext:	
  1187 ;;
  1188 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
  1189 ;;
  1190 ;; *************** function _main *****************
  1191 ;; Defined at:
  1192 ;;		line 29 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  buffer         16   39[BANK1 ] unsigned char [16]
  1197 ;; Return value:  Size  Location     Type
  1198 ;;		None               void
  1199 ;; Registers used:
  1200 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 17F/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1206 ;;      Params:         0       0       0       0       0
  1207 ;;      Locals:         0       0      16       0       0
  1208 ;;      Temps:          0       9       0       0       0
  1209 ;;      Totals:         0       9      16       0       0
  1210 ;;Total ram usage:       25 bytes
  1211 ;; Hardware stack levels required when called:    6
  1212 ;; This function calls:
  1213 ;;		_activateHumidifier
  1214 ;;		_checkMode
  1215 ;;		_checkSEL
  1216 ;;		_checkTime
  1217 ;;		_displayDataDHT11
  1218 ;;		_displayPPM
  1219 ;;		_displayTime
  1220 ;;		_handlePPM
  1221 ;;		_initInterrupts
  1222 ;;		_initPorts
  1223 ;;		_initRegisters
  1224 ;;		_instCTRL
  1225 ;;		_printToLCD
  1226 ;;		_runClock
  1227 ;;		_runDHT11
  1228 ;;		_runMQ135
  1229 ;;		_setHoursEnd
  1230 ;;		_setHoursStart
  1231 ;;		_setMinutesEnd
  1232 ;;		_setMinutesStart
  1233 ;;		_sprintf
  1234 ;;		_startUpSequence
  1235 ;; This function is called by:
  1236 ;;		Startup code after reset
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _main
  1242  063E                     _main:	
  1243                           
  1244                           ;main.c: 31: char buffer[16];
  1245                           ;main.c: 33: initPorts();
  1246                           
  1247                           ;incstack = 0
  1248                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1249  063E  160A  118A  22BA  120A  118A  	fcall	_initPorts
  1250                           
  1251                           ;main.c: 35: initRegisters();
  1252  0643  160A  118A  22A7  120A  118A  	fcall	_initRegisters
  1253                           
  1254                           ;main.c: 37: initInterrupts();
  1255  0648  160A  118A  2297  120A  118A  	fcall	_initInterrupts
  1256                           
  1257                           ;main.c: 39: startUpSequence();
  1258  064D  160A  118A  258F  120A  118A  	fcall	_startUpSequence
  1259                           
  1260                           ;main.c: 57: switch (mode)
  1261  0652  2F5B               	goto	l2991
  1262  0653                     l3015:	
  1263                           ;main.c: 61: {
  1264                           ;main.c: 62: case 0:
  1265                           
  1266                           ;main.c: 60: switch (SEL)
  1267                           
  1268                           ;main.c: 58: {
  1269                           ;main.c: 59: case STAT:
  1270                           
  1271                           
  1272                           ;main.c: 63: instCTRL(0x80);
  1273  0653  3080               	movlw	128
  1274  0654  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1275                           
  1276                           ;main.c: 64: displayDataDHT11();
  1277  0659  160A  118A  25D3  120A  118A  	fcall	_displayDataDHT11
  1278                           
  1279                           ;main.c: 66: instCTRL(0x94);
  1280  065E  3094               	movlw	148
  1281  065F  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1282                           
  1283                           ;main.c: 67: displayPPM();
  1284  0664  120A  158A  26D7  120A  118A  	fcall	_displayPPM
  1285                           
  1286                           ;main.c: 68: break;
  1287  0669  2F5B               	goto	l2991
  1288  066A                     l3021:	
  1289                           ;main.c: 69: case 1:
  1290                           
  1291                           
  1292                           ;main.c: 70: instCTRL(0x80);
  1293  066A  3080               	movlw	128
  1294  066B  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1295                           
  1296                           ;main.c: 71: displayTime();
  1297  0670  160A  118A  234E  120A  118A  	fcall	_displayTime
  1298                           
  1299                           ;main.c: 72: instCTRL(0xC0);
  1300  0675  30C0               	movlw	192
  1301  0676  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1302                           
  1303                           ;main.c: 73: sprintf(buffer, "RUN: %02d:%02d-%02d:%02d", savedHoursStart, savedMinutesSt
      +                          art, savedHoursEnd, savedMinutesEnd);
  1304  067B  300B               	movlw	(STR_22-__stringbase)& (0+255)
  1305  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1306  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1307  067E  00DE               	movwf	??_main
  1308  067F  085E               	movf	??_main,w
  1309  0680  00AE               	movwf	sprintf@f
  1310  0681  086A               	movf	_savedHoursStart,w	;volatile
  1311  0682  00DF               	movwf	??_main+1
  1312  0683  01E0               	clrf	??_main+2
  1313  0684  085F               	movf	??_main+1,w
  1314  0685  00AF               	movwf	?_sprintf+1
  1315  0686  0860               	movf	??_main+2,w
  1316  0687  00B0               	movwf	?_sprintf+2
  1317  0688  086C               	movf	_savedMinutesStart,w	;volatile
  1318  0689  00E1               	movwf	??_main+3
  1319  068A  01E2               	clrf	??_main+4
  1320  068B  0861               	movf	??_main+3,w
  1321  068C  00B1               	movwf	?_sprintf+3
  1322  068D  0862               	movf	??_main+4,w
  1323  068E  00B2               	movwf	?_sprintf+4
  1324  068F  0869               	movf	_savedHoursEnd,w	;volatile
  1325  0690  00E3               	movwf	??_main+5
  1326  0691  01E4               	clrf	??_main+6
  1327  0692  0863               	movf	??_main+5,w
  1328  0693  00B3               	movwf	?_sprintf+5
  1329  0694  0864               	movf	??_main+6,w
  1330  0695  00B4               	movwf	?_sprintf+6
  1331  0696  086B               	movf	_savedMinutesEnd,w	;volatile
  1332  0697  00E5               	movwf	??_main+7
  1333  0698  01E6               	clrf	??_main+8
  1334  0699  0865               	movf	??_main+7,w
  1335  069A  00B5               	movwf	?_sprintf+7
  1336  069B  0866               	movf	??_main+8,w
  1337  069C  00B6               	movwf	?_sprintf+8
  1338  069D  30C7               	movlw	main@buffer& (0+255)
  1339  069E  120A  118A  23FA  120A  118A  	fcall	_sprintf
  1340                           
  1341                           ;main.c: 74: printToLCD(buffer);
  1342  06A3  30C7               	movlw	main@buffer& (0+255)
  1343  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  1344  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  1345  06A6  00A2               	movwf	printToLCD@str
  1346  06A7  3000               	movlw	0
  1347  06A8  00A3               	movwf	printToLCD@str+1
  1348  06A9  160A  118A  2454  120A  118A  	fcall	_printToLCD
  1349                           
  1350                           ;main.c: 78: }
  1351                           
  1352                           ;main.c: 77: break;
  1353                           
  1354                           ;main.c: 76: default:
  1355                           
  1356                           ;main.c: 75: break;
  1357  06AE  2F5B               	goto	l2991
  1358  06AF                     l3029:	
  1359  06AF  1683               	bsf	3,5	;RP0=1, select bank1
  1360  06B0  1303               	bcf	3,6	;RP1=0, select bank1
  1361  06B1  0861               	movf	_SEL^(0+128),w	;volatile
  1362                           
  1363                           ; Switch size 1, requested type "space"
  1364                           ; Number of cases is 2, Range of values is 0 to 1
  1365                           ; switch strategies available:
  1366                           ; Name         Instructions Cycles
  1367                           ; simple_byte            7     4 (average)
  1368                           ; direct_byte           14     8 (fixed)
  1369                           ; jumptable            260     6 (fixed)
  1370                           ;	Chosen strategy is simple_byte
  1371  06B2  3A00               	xorlw	0	; case 0
  1372  06B3  1903               	skipnz
  1373  06B4  2E53               	goto	l3015
  1374  06B5  3A01               	xorlw	1	; case 1
  1375  06B6  1903               	skipnz
  1376  06B7  2E6A               	goto	l3021
  1377  06B8  2F5B               	goto	l2991
  1378                           
  1379                           ;main.c: 79: break;
  1380  06B9  2F5B               	goto	l2991
  1381  06BA                     l3031:	
  1382                           ;main.c: 80: case SET_TIME_START:
  1383                           
  1384                           
  1385                           ;main.c: 82: instCTRL(0x80);
  1386  06BA  3080               	movlw	128
  1387  06BB  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1388                           
  1389                           ;main.c: 83: printToLCD("Set SCHED - START");
  1390  06C0  3024               	movlw	low (STR_23-__stringbase)
  1391  06C1  1283               	bcf	3,5	;RP0=0, select bank0
  1392  06C2  1303               	bcf	3,6	;RP1=0, select bank0
  1393  06C3  00A2               	movwf	printToLCD@str
  1394  06C4  3080               	movlw	128
  1395  06C5  00A3               	movwf	printToLCD@str+1
  1396  06C6  160A  118A  2454  120A  118A  	fcall	_printToLCD
  1397                           
  1398                           ;main.c: 84: instCTRL(0xC0);
  1399  06CB  30C0               	movlw	192
  1400  06CC  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1401                           
  1402                           ;main.c: 85: switch (SEL)
  1403  06D1  2F00               	goto	l3051
  1404  06D2                     l3037:	
  1405                           ;main.c: 86: {
  1406                           ;main.c: 87: case 0:
  1407                           
  1408                           
  1409                           ;main.c: 88: printToLCD("START HOURS");
  1410  06D2  3066               	movlw	low (STR_24-__stringbase)
  1411  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  1412  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  1413  06D5  00A2               	movwf	printToLCD@str
  1414  06D6  3080               	movlw	128
  1415  06D7  00A3               	movwf	printToLCD@str+1
  1416  06D8  160A  118A  2454  120A  118A  	fcall	_printToLCD
  1417                           
  1418                           ;main.c: 89: instCTRL(0x94);
  1419  06DD  3094               	movlw	148
  1420  06DE  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1421                           
  1422                           ;main.c: 90: setHoursStart();
  1423  06E3  120A  158A  21A1  120A  118A  	fcall	_setHoursStart
  1424                           
  1425                           ;main.c: 91: break;
  1426  06E8  2F5B               	goto	l2991
  1427  06E9                     l3043:	
  1428                           ;main.c: 92: case 1:
  1429                           
  1430                           
  1431                           ;main.c: 93: printToLCD("START MINS");
  1432  06E9  307D               	movlw	low (STR_25-__stringbase)
  1433  06EA  1283               	bcf	3,5	;RP0=0, select bank0
  1434  06EB  1303               	bcf	3,6	;RP1=0, select bank0
  1435  06EC  00A2               	movwf	printToLCD@str
  1436  06ED  3080               	movlw	128
  1437  06EE  00A3               	movwf	printToLCD@str+1
  1438  06EF  160A  118A  2454  120A  118A  	fcall	_printToLCD
  1439                           
  1440                           ;main.c: 94: instCTRL(0x94);
  1441  06F4  3094               	movlw	148
  1442  06F5  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1443                           
  1444                           ;main.c: 95: setMinutesStart();
  1445  06FA  120A  158A  22ED  120A  118A  	fcall	_setMinutesStart
  1446                           
  1447                           ;main.c: 99: }
  1448                           
  1449                           ;main.c: 98: break;
  1450                           
  1451                           ;main.c: 97: default:
  1452                           
  1453                           ;main.c: 96: break;
  1454  06FF  2F5B               	goto	l2991
  1455  0700                     l3051:	
  1456  0700  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0701  1303               	bcf	3,6	;RP1=0, select bank1
  1458  0702  0861               	movf	_SEL^(0+128),w	;volatile
  1459                           
  1460                           ; Switch size 1, requested type "space"
  1461                           ; Number of cases is 2, Range of values is 0 to 1
  1462                           ; switch strategies available:
  1463                           ; Name         Instructions Cycles
  1464                           ; simple_byte            7     4 (average)
  1465                           ; direct_byte           14     8 (fixed)
  1466                           ; jumptable            260     6 (fixed)
  1467                           ;	Chosen strategy is simple_byte
  1468  0703  3A00               	xorlw	0	; case 0
  1469  0704  1903               	skipnz
  1470  0705  2ED2               	goto	l3037
  1471  0706  3A01               	xorlw	1	; case 1
  1472  0707  1903               	skipnz
  1473  0708  2EE9               	goto	l3043
  1474  0709  2F5B               	goto	l2991
  1475                           
  1476                           ;main.c: 100: break;
  1477  070A  2F5B               	goto	l2991
  1478  070B                     l3053:	
  1479                           ;main.c: 101: case SET_TIME_END:
  1480                           
  1481                           
  1482                           ;main.c: 103: instCTRL(0x80);
  1483  070B  3080               	movlw	128
  1484  070C  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1485                           
  1486                           ;main.c: 104: printToLCD("Set SCHED - END");
  1487  0711  3046               	movlw	low (STR_26-__stringbase)
  1488  0712  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0713  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0714  00A2               	movwf	printToLCD@str
  1491  0715  3080               	movlw	128
  1492  0716  00A3               	movwf	printToLCD@str+1
  1493  0717  160A  118A  2454  120A  118A  	fcall	_printToLCD
  1494                           
  1495                           ;main.c: 105: instCTRL(0xC0);
  1496  071C  30C0               	movlw	192
  1497  071D  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1498                           
  1499                           ;main.c: 106: switch (SEL)
  1500  0722  2F51               	goto	l3073
  1501  0723                     l3059:	
  1502                           ;main.c: 107: {
  1503                           ;main.c: 108: case 0:
  1504                           
  1505                           
  1506                           ;main.c: 109: printToLCD("END HOURS");
  1507  0723  3092               	movlw	low (STR_27-__stringbase)
  1508  0724  1283               	bcf	3,5	;RP0=0, select bank0
  1509  0725  1303               	bcf	3,6	;RP1=0, select bank0
  1510  0726  00A2               	movwf	printToLCD@str
  1511  0727  3080               	movlw	128
  1512  0728  00A3               	movwf	printToLCD@str+1
  1513  0729  160A  118A  2454  120A  118A  	fcall	_printToLCD
  1514                           
  1515                           ;main.c: 110: instCTRL(0x94);
  1516  072E  3094               	movlw	148
  1517  072F  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1518                           
  1519                           ;main.c: 111: setHoursEnd();
  1520  0734  120A  158A  20FB  120A  118A  	fcall	_setHoursEnd
  1521                           
  1522                           ;main.c: 112: break;
  1523  0739  2F5B               	goto	l2991
  1524  073A                     l3065:	
  1525                           ;main.c: 113: case 1:
  1526                           
  1527                           
  1528                           ;main.c: 114: printToLCD("END MINS");
  1529  073A  30C3               	movlw	low (STR_28-__stringbase)
  1530  073B  1283               	bcf	3,5	;RP0=0, select bank0
  1531  073C  1303               	bcf	3,6	;RP1=0, select bank0
  1532  073D  00A2               	movwf	printToLCD@str
  1533  073E  3080               	movlw	128
  1534  073F  00A3               	movwf	printToLCD@str+1
  1535  0740  160A  118A  2454  120A  118A  	fcall	_printToLCD
  1536                           
  1537                           ;main.c: 115: instCTRL(0x94);
  1538  0745  3094               	movlw	148
  1539  0746  160A  118A  22E9  120A  118A  	fcall	_instCTRL
  1540                           
  1541                           ;main.c: 116: setMinutesEnd();
  1542  074B  120A  158A  2247  120A  118A  	fcall	_setMinutesEnd
  1543                           
  1544                           ;main.c: 120: }
  1545                           
  1546                           ;main.c: 119: break;
  1547                           
  1548                           ;main.c: 118: default:
  1549                           
  1550                           ;main.c: 117: break;
  1551  0750  2F5B               	goto	l2991
  1552  0751                     l3073:	
  1553  0751  1683               	bsf	3,5	;RP0=1, select bank1
  1554  0752  1303               	bcf	3,6	;RP1=0, select bank1
  1555  0753  0861               	movf	_SEL^(0+128),w	;volatile
  1556                           
  1557                           ; Switch size 1, requested type "space"
  1558                           ; Number of cases is 2, Range of values is 0 to 1
  1559                           ; switch strategies available:
  1560                           ; Name         Instructions Cycles
  1561                           ; simple_byte            7     4 (average)
  1562                           ; direct_byte           14     8 (fixed)
  1563                           ; jumptable            260     6 (fixed)
  1564                           ;	Chosen strategy is simple_byte
  1565  0754  3A00               	xorlw	0	; case 0
  1566  0755  1903               	skipnz
  1567  0756  2F23               	goto	l3059
  1568  0757  3A01               	xorlw	1	; case 1
  1569  0758  1903               	skipnz
  1570  0759  2F3A               	goto	l3065
  1571  075A  2F5B               	goto	l2991
  1572  075B                     l2991:	
  1573                           ;main.c: 40: while (1)
  1574                           
  1575                           ;main.c: 124: }
  1576                           
  1577                           ;main.c: 123: break;
  1578                           
  1579                           ;main.c: 122: default:
  1580                           
  1581                           ;main.c: 121: break;
  1582                           
  1583                           
  1584                           ;main.c: 41: {
  1585                           ;main.c: 43: GIE = 0;
  1586  075B  138B               	bcf	11,7	;volatile
  1587                           
  1588                           ;main.c: 44: PEIE = 0;
  1589  075C  130B               	bcf	11,6	;volatile
  1590                           
  1591                           ;main.c: 45: runDHT11();
  1592  075D  160A  118A  2519  120A  118A  	fcall	_runDHT11
  1593                           
  1594                           ;main.c: 46: runMQ135();
  1595  0762  160A  118A  2372  120A  118A  	fcall	_runMQ135
  1596                           
  1597                           ;main.c: 47: runClock();
  1598  0767  160A  118A  230F  120A  118A  	fcall	_runClock
  1599                           
  1600                           ;main.c: 48: GIE = 1;
  1601  076C  178B               	bsf	11,7	;volatile
  1602                           
  1603                           ;main.c: 49: PEIE = 1;
  1604  076D  170B               	bsf	11,6	;volatile
  1605                           
  1606                           ;main.c: 51: checkMode();
  1607  076E  160A  118A  232C  120A  118A  	fcall	_checkMode
  1608                           
  1609                           ;main.c: 52: checkSEL();
  1610  0773  160A  118A  24AF  120A  118A  	fcall	_checkSEL
  1611                           
  1612                           ;main.c: 53: checkTime();
  1613  0778  160A  118A  26BB  120A  118A  	fcall	_checkTime
  1614                           
  1615                           ;main.c: 54: handlePPM();
  1616  077D  160A  118A  247F  120A  118A  	fcall	_handlePPM
  1617                           
  1618                           ;main.c: 55: activateHumidifier();
  1619  0782  160A  118A  22C9  120A  118A  	fcall	_activateHumidifier
  1620  0787  1683               	bsf	3,5	;RP0=1, select bank1
  1621  0788  1303               	bcf	3,6	;RP1=0, select bank1
  1622  0789  0862               	movf	_mode^(0+128),w
  1623                           
  1624                           ; Switch size 1, requested type "space"
  1625                           ; Number of cases is 3, Range of values is 0 to 2
  1626                           ; switch strategies available:
  1627                           ; Name         Instructions Cycles
  1628                           ; simple_byte           10     6 (average)
  1629                           ; direct_byte           17     8 (fixed)
  1630                           ; jumptable            260     6 (fixed)
  1631                           ;	Chosen strategy is simple_byte
  1632  078A  3A00               	xorlw	0	; case 0
  1633  078B  1903               	skipnz
  1634  078C  2EAF               	goto	l3029
  1635  078D  3A01               	xorlw	1	; case 1
  1636  078E  1903               	skipnz
  1637  078F  2EBA               	goto	l3031
  1638  0790  3A03               	xorlw	3	; case 2
  1639  0791  1903               	skipnz
  1640  0792  2F0B               	goto	l3053
  1641  0793  2F5B               	goto	l2991
  1642  0794  2F5B               	goto	l2991
  1643  0795                     __end_of_main:	
  1644                           
  1645                           	psect	text1
  1646  158F                     __ptext1:	
  1647 ;; *************** function _startUpSequence *****************
  1648 ;; Defined at:
  1649 ;;		line 163 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;		None
  1652 ;; Auto vars:     Size  Location     Type
  1653 ;;		None
  1654 ;; Return value:  Size  Location     Type
  1655 ;;		None               void
  1656 ;; Registers used:
  1657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         0       0       0       0       0
  1664 ;;      Locals:         0       0       0       0       0
  1665 ;;      Temps:          0       3       0       0       0
  1666 ;;      Totals:         0       3       0       0       0
  1667 ;;Total ram usage:        3 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; Hardware stack levels required when called:    4
  1670 ;; This function calls:
  1671 ;;		_initDHT11
  1672 ;;		_initLCD
  1673 ;;		_instCTRL
  1674 ;;		_printToLCD
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           
  1681                           ;psect for function _startUpSequence
  1682  158F                     _startUpSequence:	
  1683                           
  1684                           ;main.c: 166: initLCD();
  1685                           
  1686                           ;incstack = 0
  1687                           ; Regs used in _startUpSequence: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1688  158F  160A  118A  2396  160A  118A  	fcall	_initLCD
  1689                           
  1690                           ;main.c: 167: _delay((unsigned long)((500)*(4000000/4000.0)));
  1691  1594  3003               	movlw	3
  1692  1595  1283               	bcf	3,5	;RP0=0, select bank0
  1693  1596  1303               	bcf	3,6	;RP1=0, select bank0
  1694  1597  00A6               	movwf	??_startUpSequence+2
  1695  1598  308A               	movlw	138
  1696  1599  00A5               	movwf	??_startUpSequence+1
  1697  159A  3056               	movlw	86
  1698  159B  00A4               	movwf	??_startUpSequence
  1699  159C                     u4297:	
  1700  159C  0BA4               	decfsz	??_startUpSequence,f
  1701  159D  2D9C               	goto	u4297
  1702  159E  0BA5               	decfsz	??_startUpSequence+1,f
  1703  159F  2D9C               	goto	u4297
  1704  15A0  0BA6               	decfsz	??_startUpSequence+2,f
  1705  15A1  2D9C               	goto	u4297
  1706  15A2  2DA3               	nop2
  1707                           
  1708                           ;main.c: 168: instCTRL(0x80);
  1709  15A3  3080               	movlw	128
  1710  15A4  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  1711                           
  1712                           ;main.c: 169: instCTRL(0x0C);
  1713  15A9  300C               	movlw	12
  1714  15AA  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  1715                           
  1716                           ;main.c: 170: printToLCD("Initializing...");
  1717  15AF  3036               	movlw	low (STR_29-__stringbase)
  1718  15B0  1283               	bcf	3,5	;RP0=0, select bank0
  1719  15B1  1303               	bcf	3,6	;RP1=0, select bank0
  1720  15B2  00A2               	movwf	printToLCD@str
  1721  15B3  3080               	movlw	128
  1722  15B4  00A3               	movwf	printToLCD@str+1
  1723  15B5  160A  118A  2454  160A  118A  	fcall	_printToLCD
  1724                           
  1725                           ;main.c: 172: initDHT11();
  1726  15BA  160A  118A  2290  160A  118A  	fcall	_initDHT11
  1727                           
  1728                           ;main.c: 173: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1729  15BF  300B               	movlw	11
  1730  15C0  1283               	bcf	3,5	;RP0=0, select bank0
  1731  15C1  1303               	bcf	3,6	;RP1=0, select bank0
  1732  15C2  00A6               	movwf	??_startUpSequence+2
  1733  15C3  3026               	movlw	38
  1734  15C4  00A5               	movwf	??_startUpSequence+1
  1735  15C5  3066               	movlw	102
  1736  15C6  00A4               	movwf	??_startUpSequence
  1737  15C7                     u4307:	
  1738  15C7  0BA4               	decfsz	??_startUpSequence,f
  1739  15C8  2DC7               	goto	u4307
  1740  15C9  0BA5               	decfsz	??_startUpSequence+1,f
  1741  15CA  2DC7               	goto	u4307
  1742  15CB  0BA6               	decfsz	??_startUpSequence+2,f
  1743  15CC  2DC7               	goto	u4307
  1744  15CD  2DCE               	nop2
  1745                           
  1746                           ;main.c: 174: instCTRL(0x01);
  1747  15CE  3001               	movlw	1
  1748  15CF  160A  118A  22E9   	fcall	_instCTRL
  1749  15D2  0008               	return
  1750  15D3                     __end_of_startUpSequence:	
  1751                           
  1752                           	psect	text2
  1753  1396                     __ptext2:	
  1754 ;; *************** function _initLCD *****************
  1755 ;; Defined at:
  1756 ;;		line 42 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;		None               void
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0, pclath, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1770 ;;      Params:         0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0
  1772 ;;      Temps:          0       1       0       0       0
  1773 ;;      Totals:         0       1       0       0       0
  1774 ;;Total ram usage:        1 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    3
  1777 ;; This function calls:
  1778 ;;		_instCTRL
  1779 ;; This function is called by:
  1780 ;;		_startUpSequence
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           
  1785                           ;psect for function _initLCD
  1786  1396                     _initLCD:	
  1787                           
  1788                           ;lcd_functions.h: 44: instCTRL(0x38);
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1792  1396  3038               	movlw	56
  1793  1397  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  1794                           
  1795                           ;lcd_functions.h: 45: _delay((unsigned long)((50)*(4000000/4000000.0)));
  1796  139C  3010               	movlw	16
  1797  139D  1283               	bcf	3,5	;RP0=0, select bank0
  1798  139E  1303               	bcf	3,6	;RP1=0, select bank0
  1799  139F  00A2               	movwf	??_initLCD
  1800  13A0                     u4317:	
  1801  13A0  0BA2               	decfsz	??_initLCD,f
  1802  13A1  2BA0               	goto	u4317
  1803  13A2  0000               	nop
  1804                           
  1805                           ;lcd_functions.h: 46: instCTRL(0x0C);
  1806  13A3  300C               	movlw	12
  1807  13A4  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  1808                           
  1809                           ;lcd_functions.h: 47: instCTRL(0x01);
  1810  13A9  3001               	movlw	1
  1811  13AA  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  1812                           
  1813                           ;lcd_functions.h: 48: instCTRL(0x06);
  1814  13AF  3006               	movlw	6
  1815  13B0  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  1816                           
  1817                           ;lcd_functions.h: 49: instCTRL(0x0F);
  1818  13B5  300F               	movlw	15
  1819  13B6  160A  118A  22E9   	fcall	_instCTRL
  1820  13B9  0008               	return
  1821  13BA                     __end_of_initLCD:	
  1822                           
  1823                           	psect	text3
  1824  1290                     __ptext3:	
  1825 ;; *************** function _initDHT11 *****************
  1826 ;; Defined at:
  1827 ;;		line 21 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;		None               void
  1834 ;; Registers used:
  1835 ;;		None
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0
  1844 ;;      Totals:         0       0       0       0       0
  1845 ;;Total ram usage:        0 bytes
  1846 ;; Hardware stack levels used:    1
  1847 ;; Hardware stack levels required when called:    2
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_startUpSequence
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           
  1856                           ;psect for function _initDHT11
  1857  1290                     _initDHT11:	
  1858                           
  1859                           ;dht11_module.h: 23: TRISBbits.TRISB2 = 0;
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in _initDHT11: []
  1863  1290  1683               	bsf	3,5	;RP0=1, select bank1
  1864  1291  1303               	bcf	3,6	;RP1=0, select bank1
  1865  1292  1106               	bcf	6,2	;volatile
  1866                           
  1867                           ;dht11_module.h: 24: PORTBbits.RB2 = 1;
  1868  1293  1283               	bcf	3,5	;RP0=0, select bank0
  1869  1294  1303               	bcf	3,6	;RP1=0, select bank0
  1870  1295  1506               	bsf	6,2	;volatile
  1871  1296  0008               	return
  1872  1297                     __end_of_initDHT11:	
  1873                           
  1874                           	psect	text4
  1875  0AED                     __ptext4:	
  1876 ;; *************** function _setMinutesStart *****************
  1877 ;; Defined at:
  1878 ;;		line 133 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler
      +.h"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;		None               void
  1885 ;; Registers used:
  1886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1892 ;;      Params:         0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0
  1894 ;;      Temps:          0       3       0       0       0
  1895 ;;      Totals:         0       3       0       0       0
  1896 ;;Total ram usage:        3 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    4
  1899 ;; This function calls:
  1900 ;;		___awmod
  1901 ;;		_printToLCD
  1902 ;;		_sprintf
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _setMinutesStart
  1910  0AED                     _setMinutesStart:	
  1911                           
  1912                           ;time_scheduler.h: 135: keyValid = (PORTB & 0x08) >> 3;
  1913                           
  1914                           ;incstack = 0
  1915                           ; Regs used in _setMinutesStart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1916  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0AEF  0806               	movf	6,w	;volatile
  1919  0AF0  00C6               	movwf	??_setMinutesStart
  1920  0AF1  3003               	movlw	3
  1921  0AF2                     u3785:	
  1922  0AF2  1003               	clrc
  1923  0AF3  0CC6               	rrf	??_setMinutesStart,f
  1924  0AF4  3EFF               	addlw	-1
  1925  0AF5  1D03               	skipz
  1926  0AF6  2AF2               	goto	u3785
  1927  0AF7  0846               	movf	??_setMinutesStart,w
  1928  0AF8  3901               	andlw	1
  1929  0AF9  00C7               	movwf	??_setMinutesStart+1
  1930  0AFA  0847               	movf	??_setMinutesStart+1,w
  1931  0AFB  00EE               	movwf	_keyValid
  1932                           
  1933                           ;time_scheduler.h: 136: key = (PORTB & 0xF0) >> 4;
  1934  0AFC  0806               	movf	6,w	;volatile
  1935  0AFD  00C6               	movwf	??_setMinutesStart
  1936  0AFE  3004               	movlw	4
  1937  0AFF                     u3795:	
  1938  0AFF  1003               	clrc
  1939  0B00  0CC6               	rrf	??_setMinutesStart,f
  1940  0B01  3EFF               	addlw	-1
  1941  0B02  1D03               	skipz
  1942  0B03  2AFF               	goto	u3795
  1943  0B04  0846               	movf	??_setMinutesStart,w
  1944  0B05  390F               	andlw	15
  1945  0B06  00C7               	movwf	??_setMinutesStart+1
  1946  0B07  0847               	movf	??_setMinutesStart+1,w
  1947  0B08  00ED               	movwf	_key
  1948                           
  1949                           ;time_scheduler.h: 138: _delay((unsigned long)((50)*(4000000/4000.0)));
  1950  0B09  3041               	movlw	65
  1951  0B0A  00C7               	movwf	??_setMinutesStart+1
  1952  0B0B  30EE               	movlw	238
  1953  0B0C  00C6               	movwf	??_setMinutesStart
  1954  0B0D                     u4327:	
  1955  0B0D  0BC6               	decfsz	??_setMinutesStart,f
  1956  0B0E  2B0D               	goto	u4327
  1957  0B0F  0BC7               	decfsz	??_setMinutesStart+1,f
  1958  0B10  2B0D               	goto	u4327
  1959  0B11  0000               	nop
  1960                           
  1961                           ;time_scheduler.h: 140: if (keyValid && key != lastKeyState)
  1962  0B12  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0B13  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0B14  086E               	movf	_keyValid,w
  1965  0B15  1903               	btfsc	3,2
  1966  0B16  2B8B               	goto	l2815
  1967  0B17  086D               	movf	_key,w
  1968  0B18  0668               	xorwf	_lastKeyState,w
  1969  0B19  1903               	skipnz
  1970  0B1A  2B8B               	goto	l2815
  1971                           
  1972                           ;time_scheduler.h: 141: {
  1973                           ;time_scheduler.h: 142: if (key == 0b00001100)
  1974  0B1B  086D               	movf	_key,w
  1975  0B1C  3A0C               	xorlw	12
  1976  0B1D  1D03               	skipz
  1977  0B1E  2B37               	goto	l2799
  1978                           
  1979                           ;time_scheduler.h: 143: {
  1980                           ;time_scheduler.h: 144: savedMinutesStart = (savedMinutesStart + 5) % 60;
  1981  0B1F  303C               	movlw	60
  1982  0B20  00A0               	movwf	___awmod@divisor
  1983  0B21  3000               	movlw	0
  1984  0B22  00A1               	movwf	___awmod@divisor+1
  1985  0B23  086C               	movf	_savedMinutesStart,w	;volatile
  1986  0B24  3E05               	addlw	5
  1987  0B25  00A2               	movwf	___awmod@dividend
  1988  0B26  3000               	movlw	0
  1989  0B27  1803               	skipnc
  1990  0B28  3001               	movlw	1
  1991  0B29  00A3               	movwf	___awmod@dividend+1
  1992  0B2A  160A  118A  266C  120A  158A  	fcall	___awmod
  1993  0B2F  1283               	bcf	3,5	;RP0=0, select bank0
  1994  0B30  1303               	bcf	3,6	;RP1=0, select bank0
  1995  0B31  0820               	movf	?___awmod,w
  1996  0B32  00C6               	movwf	??_setMinutesStart
  1997  0B33  0846               	movf	??_setMinutesStart,w
  1998  0B34  00EC               	movwf	_savedMinutesStart	;volatile
  1999                           
  2000                           ;time_scheduler.h: 145: sprintf(debugInfo, "INC: %02d", savedMinutesStart);
  2001  0B35  30A6               	movlw	(STR_10-__stringbase)& (0+255)
  2002  0B36  2B5C               	goto	L1
  2003  0B37                     l2799:	
  2004                           ;time_scheduler.h: 146: }
  2005                           
  2006                           
  2007                           ;time_scheduler.h: 147: else if (key == 0b00001110)
  2008  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0B39  086D               	movf	_key,w
  2011  0B3A  3A0E               	xorlw	14
  2012  0B3B  1D03               	skipz
  2013  0B3C  2B55               	goto	l2805
  2014                           
  2015                           ;time_scheduler.h: 148: {
  2016                           ;time_scheduler.h: 149: savedMinutesStart = (savedMinutesStart - 5 + 60) % 60;
  2017  0B3D  303C               	movlw	60
  2018  0B3E  00A0               	movwf	___awmod@divisor
  2019  0B3F  3000               	movlw	0
  2020  0B40  00A1               	movwf	___awmod@divisor+1
  2021  0B41  086C               	movf	_savedMinutesStart,w	;volatile
  2022  0B42  3E37               	addlw	55
  2023  0B43  00A2               	movwf	___awmod@dividend
  2024  0B44  3000               	movlw	0
  2025  0B45  1803               	skipnc
  2026  0B46  3001               	movlw	1
  2027  0B47  00A3               	movwf	___awmod@dividend+1
  2028  0B48  160A  118A  266C  120A  158A  	fcall	___awmod
  2029  0B4D  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0B4E  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0B4F  0820               	movf	?___awmod,w
  2032  0B50  00C6               	movwf	??_setMinutesStart
  2033  0B51  0846               	movf	??_setMinutesStart,w
  2034  0B52  00EC               	movwf	_savedMinutesStart	;volatile
  2035                           
  2036                           ;time_scheduler.h: 150: sprintf(debugInfo, "DEC: %02d", savedMinutesStart);
  2037  0B53  309C               	movlw	(STR_11-__stringbase)& (0+255)
  2038  0B54  2B5C               	goto	L1
  2039  0B55                     l2805:	
  2040                           ;time_scheduler.h: 151: }
  2041                           
  2042                           
  2043                           ;time_scheduler.h: 152: else if (key == 0b00001101)
  2044  0B55  1283               	bcf	3,5	;RP0=0, select bank0
  2045  0B56  1303               	bcf	3,6	;RP1=0, select bank0
  2046  0B57  086D               	movf	_key,w
  2047  0B58  3A0D               	xorlw	13
  2048  0B59  1D03               	skipz
  2049  0B5A  2B6C               	goto	l212
  2050                           
  2051                           ;time_scheduler.h: 153: {
  2052                           ;time_scheduler.h: 154: sprintf(debugInfo, "SET: %02d", savedMinutesStart);
  2053  0B5B  30B0               	movlw	(STR_12-__stringbase)& (0+255)
  2054  0B5C                     L1:	
  2055  0B5C  00C6               	movwf	??_setMinutesStart
  2056  0B5D  0846               	movf	??_setMinutesStart,w
  2057  0B5E  00AE               	movwf	sprintf@f
  2058  0B5F  086C               	movf	_savedMinutesStart,w	;volatile
  2059  0B60  00C7               	movwf	??_setMinutesStart+1
  2060  0B61  01C8               	clrf	??_setMinutesStart+2
  2061  0B62  0847               	movf	??_setMinutesStart+1,w
  2062  0B63  00AF               	movwf	?_sprintf+1
  2063  0B64  0848               	movf	??_setMinutesStart+2,w
  2064  0B65  00B0               	movwf	?_sprintf+2
  2065  0B66  30E4               	movlw	_debugInfo& (0+255)
  2066  0B67  120A  118A  23FA  120A  158A  	fcall	_sprintf
  2067  0B6C                     l212:	
  2068                           
  2069                           ;time_scheduler.h: 155: }
  2070                           ;time_scheduler.h: 157: printToLCD(debugInfo);
  2071  0B6C  30E4               	movlw	_debugInfo& (0+255)
  2072  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  2073  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  2074  0B6F  00A2               	movwf	printToLCD@str
  2075  0B70  3000               	movlw	0
  2076  0B71  00A3               	movwf	printToLCD@str+1
  2077  0B72  160A  118A  2454  120A  158A  	fcall	_printToLCD
  2078                           
  2079                           ;time_scheduler.h: 158: lastKeyState = key;
  2080  0B77  1283               	bcf	3,5	;RP0=0, select bank0
  2081  0B78  1303               	bcf	3,6	;RP1=0, select bank0
  2082  0B79  086D               	movf	_key,w
  2083  0B7A  00C6               	movwf	??_setMinutesStart
  2084  0B7B  0846               	movf	??_setMinutesStart,w
  2085  0B7C  00E8               	movwf	_lastKeyState
  2086  0B7D                     l2813:	
  2087                           ;time_scheduler.h: 160: while ((PORTB & 0x08) != 0)
  2088                           
  2089  0B7D  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0B7E  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0B7F  1D86               	btfss	6,3	;volatile
  2092  0B80  0008               	return
  2093                           
  2094                           ;time_scheduler.h: 161: {
  2095                           ;time_scheduler.h: 162: _delay((unsigned long)((10)*(4000000/4000.0)));
  2096  0B81  300D               	movlw	13
  2097  0B82  00C7               	movwf	??_setMinutesStart+1
  2098  0B83  30FB               	movlw	251
  2099  0B84  00C6               	movwf	??_setMinutesStart
  2100  0B85                     u4337:	
  2101  0B85  0BC6               	decfsz	??_setMinutesStart,f
  2102  0B86  2B85               	goto	u4337
  2103  0B87  0BC7               	decfsz	??_setMinutesStart+1,f
  2104  0B88  2B85               	goto	u4337
  2105  0B89  2B8A               	nop2
  2106  0B8A  2B7D               	goto	l2813
  2107  0B8B                     l2815:	
  2108                           ;time_scheduler.h: 163: }
  2109                           ;time_scheduler.h: 164: }
  2110                           
  2111                           
  2112                           ;time_scheduler.h: 165: else if (!keyValid)
  2113  0B8B  08EE               	movf	_keyValid,f
  2114  0B8C  1D03               	skipz
  2115  0B8D  0008               	return
  2116                           
  2117                           ;time_scheduler.h: 166: {
  2118                           ;time_scheduler.h: 167: lastKeyState = 0xFF;
  2119  0B8E  30FF               	movlw	255
  2120  0B8F  00C6               	movwf	??_setMinutesStart
  2121  0B90  0846               	movf	??_setMinutesStart,w
  2122  0B91  00E8               	movwf	_lastKeyState
  2123  0B92  0008               	return
  2124  0B93                     __end_of_setMinutesStart:	
  2125                           
  2126                           	psect	text5
  2127  0A47                     __ptext5:	
  2128 ;; *************** function _setMinutesEnd *****************
  2129 ;; Defined at:
  2130 ;;		line 171 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler
      +.h"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;		None
  2135 ;; Return value:  Size  Location     Type
  2136 ;;		None               void
  2137 ;; Registers used:
  2138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2144 ;;      Params:         0       0       0       0       0
  2145 ;;      Locals:         0       0       0       0       0
  2146 ;;      Temps:          0       3       0       0       0
  2147 ;;      Totals:         0       3       0       0       0
  2148 ;;Total ram usage:        3 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    4
  2151 ;; This function calls:
  2152 ;;		___awmod
  2153 ;;		_printToLCD
  2154 ;;		_sprintf
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           
  2161                           ;psect for function _setMinutesEnd
  2162  0A47                     _setMinutesEnd:	
  2163                           
  2164                           ;time_scheduler.h: 173: keyValid = (PORTB & 0x08) >> 3;
  2165                           
  2166                           ;incstack = 0
  2167                           ; Regs used in _setMinutesEnd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2168  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0A49  0806               	movf	6,w	;volatile
  2171  0A4A  00C6               	movwf	??_setMinutesEnd
  2172  0A4B  3003               	movlw	3
  2173  0A4C                     u3875:	
  2174  0A4C  1003               	clrc
  2175  0A4D  0CC6               	rrf	??_setMinutesEnd,f
  2176  0A4E  3EFF               	addlw	-1
  2177  0A4F  1D03               	skipz
  2178  0A50  2A4C               	goto	u3875
  2179  0A51  0846               	movf	??_setMinutesEnd,w
  2180  0A52  3901               	andlw	1
  2181  0A53  00C7               	movwf	??_setMinutesEnd+1
  2182  0A54  0847               	movf	??_setMinutesEnd+1,w
  2183  0A55  00EE               	movwf	_keyValid
  2184                           
  2185                           ;time_scheduler.h: 174: key = (PORTB & 0xF0) >> 4;
  2186  0A56  0806               	movf	6,w	;volatile
  2187  0A57  00C6               	movwf	??_setMinutesEnd
  2188  0A58  3004               	movlw	4
  2189  0A59                     u3885:	
  2190  0A59  1003               	clrc
  2191  0A5A  0CC6               	rrf	??_setMinutesEnd,f
  2192  0A5B  3EFF               	addlw	-1
  2193  0A5C  1D03               	skipz
  2194  0A5D  2A59               	goto	u3885
  2195  0A5E  0846               	movf	??_setMinutesEnd,w
  2196  0A5F  390F               	andlw	15
  2197  0A60  00C7               	movwf	??_setMinutesEnd+1
  2198  0A61  0847               	movf	??_setMinutesEnd+1,w
  2199  0A62  00ED               	movwf	_key
  2200                           
  2201                           ;time_scheduler.h: 176: _delay((unsigned long)((50)*(4000000/4000.0)));
  2202  0A63  3041               	movlw	65
  2203  0A64  00C7               	movwf	??_setMinutesEnd+1
  2204  0A65  30EE               	movlw	238
  2205  0A66  00C6               	movwf	??_setMinutesEnd
  2206  0A67                     u4347:	
  2207  0A67  0BC6               	decfsz	??_setMinutesEnd,f
  2208  0A68  2A67               	goto	u4347
  2209  0A69  0BC7               	decfsz	??_setMinutesEnd+1,f
  2210  0A6A  2A67               	goto	u4347
  2211  0A6B  0000               	nop
  2212                           
  2213                           ;time_scheduler.h: 178: if (keyValid && key != lastKeyState)
  2214  0A6C  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0A6D  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0A6E  086E               	movf	_keyValid,w
  2217  0A6F  1903               	btfsc	3,2
  2218  0A70  2AE5               	goto	l2849
  2219  0A71  086D               	movf	_key,w
  2220  0A72  0668               	xorwf	_lastKeyState,w
  2221  0A73  1903               	skipnz
  2222  0A74  2AE5               	goto	l2849
  2223                           
  2224                           ;time_scheduler.h: 179: {
  2225                           ;time_scheduler.h: 180: if (key == 0b00001100)
  2226  0A75  086D               	movf	_key,w
  2227  0A76  3A0C               	xorlw	12
  2228  0A77  1D03               	skipz
  2229  0A78  2A91               	goto	l2833
  2230                           
  2231                           ;time_scheduler.h: 181: {
  2232                           ;time_scheduler.h: 182: savedMinutesEnd = (savedMinutesEnd + 5) % 60;
  2233  0A79  303C               	movlw	60
  2234  0A7A  00A0               	movwf	___awmod@divisor
  2235  0A7B  3000               	movlw	0
  2236  0A7C  00A1               	movwf	___awmod@divisor+1
  2237  0A7D  086B               	movf	_savedMinutesEnd,w	;volatile
  2238  0A7E  3E05               	addlw	5
  2239  0A7F  00A2               	movwf	___awmod@dividend
  2240  0A80  3000               	movlw	0
  2241  0A81  1803               	skipnc
  2242  0A82  3001               	movlw	1
  2243  0A83  00A3               	movwf	___awmod@dividend+1
  2244  0A84  160A  118A  266C  120A  158A  	fcall	___awmod
  2245  0A89  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0A8B  0820               	movf	?___awmod,w
  2248  0A8C  00C6               	movwf	??_setMinutesEnd
  2249  0A8D  0846               	movf	??_setMinutesEnd,w
  2250  0A8E  00EB               	movwf	_savedMinutesEnd	;volatile
  2251                           
  2252                           ;time_scheduler.h: 183: sprintf(debugInfo, "INC: %02d", savedMinutesEnd);
  2253  0A8F  30A6               	movlw	(STR_10-__stringbase)& (0+255)
  2254  0A90  2AB6               	goto	L2
  2255  0A91                     l2833:	
  2256                           ;time_scheduler.h: 184: }
  2257                           
  2258                           
  2259                           ;time_scheduler.h: 185: else if (key == 0b00001110)
  2260  0A91  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0A92  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0A93  086D               	movf	_key,w
  2263  0A94  3A0E               	xorlw	14
  2264  0A95  1D03               	skipz
  2265  0A96  2AAF               	goto	l2839
  2266                           
  2267                           ;time_scheduler.h: 186: {
  2268                           ;time_scheduler.h: 187: savedMinutesEnd = (savedMinutesEnd - 5 + 60) % 60;
  2269  0A97  303C               	movlw	60
  2270  0A98  00A0               	movwf	___awmod@divisor
  2271  0A99  3000               	movlw	0
  2272  0A9A  00A1               	movwf	___awmod@divisor+1
  2273  0A9B  086B               	movf	_savedMinutesEnd,w	;volatile
  2274  0A9C  3E37               	addlw	55
  2275  0A9D  00A2               	movwf	___awmod@dividend
  2276  0A9E  3000               	movlw	0
  2277  0A9F  1803               	skipnc
  2278  0AA0  3001               	movlw	1
  2279  0AA1  00A3               	movwf	___awmod@dividend+1
  2280  0AA2  160A  118A  266C  120A  158A  	fcall	___awmod
  2281  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0AA9  0820               	movf	?___awmod,w
  2284  0AAA  00C6               	movwf	??_setMinutesEnd
  2285  0AAB  0846               	movf	??_setMinutesEnd,w
  2286  0AAC  00EB               	movwf	_savedMinutesEnd	;volatile
  2287                           
  2288                           ;time_scheduler.h: 188: sprintf(debugInfo, "DEC: %02d", savedMinutesEnd);
  2289  0AAD  309C               	movlw	(STR_11-__stringbase)& (0+255)
  2290  0AAE  2AB6               	goto	L2
  2291  0AAF                     l2839:	
  2292                           ;time_scheduler.h: 189: }
  2293                           
  2294                           
  2295                           ;time_scheduler.h: 190: else if (key == 0b00001101)
  2296  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  2297  0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  2298  0AB1  086D               	movf	_key,w
  2299  0AB2  3A0D               	xorlw	13
  2300  0AB3  1D03               	skipz
  2301  0AB4  2AC6               	goto	l226
  2302                           
  2303                           ;time_scheduler.h: 191: {
  2304                           ;time_scheduler.h: 192: sprintf(debugInfo, "SET: %02d", savedMinutesEnd);
  2305  0AB5  30B0               	movlw	(STR_12-__stringbase)& (0+255)
  2306  0AB6                     L2:	
  2307  0AB6  00C6               	movwf	??_setMinutesEnd
  2308  0AB7  0846               	movf	??_setMinutesEnd,w
  2309  0AB8  00AE               	movwf	sprintf@f
  2310  0AB9  086B               	movf	_savedMinutesEnd,w	;volatile
  2311  0ABA  00C7               	movwf	??_setMinutesEnd+1
  2312  0ABB  01C8               	clrf	??_setMinutesEnd+2
  2313  0ABC  0847               	movf	??_setMinutesEnd+1,w
  2314  0ABD  00AF               	movwf	?_sprintf+1
  2315  0ABE  0848               	movf	??_setMinutesEnd+2,w
  2316  0ABF  00B0               	movwf	?_sprintf+2
  2317  0AC0  30E4               	movlw	_debugInfo& (0+255)
  2318  0AC1  120A  118A  23FA  120A  158A  	fcall	_sprintf
  2319  0AC6                     l226:	
  2320                           
  2321                           ;time_scheduler.h: 193: }
  2322                           ;time_scheduler.h: 195: printToLCD(debugInfo);
  2323  0AC6  30E4               	movlw	_debugInfo& (0+255)
  2324  0AC7  1283               	bcf	3,5	;RP0=0, select bank0
  2325  0AC8  1303               	bcf	3,6	;RP1=0, select bank0
  2326  0AC9  00A2               	movwf	printToLCD@str
  2327  0ACA  3000               	movlw	0
  2328  0ACB  00A3               	movwf	printToLCD@str+1
  2329  0ACC  160A  118A  2454  120A  158A  	fcall	_printToLCD
  2330                           
  2331                           ;time_scheduler.h: 196: lastKeyState = key;
  2332  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0AD3  086D               	movf	_key,w
  2335  0AD4  00C6               	movwf	??_setMinutesEnd
  2336  0AD5  0846               	movf	??_setMinutesEnd,w
  2337  0AD6  00E8               	movwf	_lastKeyState
  2338  0AD7                     l2847:	
  2339                           ;time_scheduler.h: 198: while ((PORTB & 0x08) != 0)
  2340                           
  2341  0AD7  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0AD8  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0AD9  1D86               	btfss	6,3	;volatile
  2344  0ADA  0008               	return
  2345                           
  2346                           ;time_scheduler.h: 199: {
  2347                           ;time_scheduler.h: 200: _delay((unsigned long)((10)*(4000000/4000.0)));
  2348  0ADB  300D               	movlw	13
  2349  0ADC  00C7               	movwf	??_setMinutesEnd+1
  2350  0ADD  30FB               	movlw	251
  2351  0ADE  00C6               	movwf	??_setMinutesEnd
  2352  0ADF                     u4357:	
  2353  0ADF  0BC6               	decfsz	??_setMinutesEnd,f
  2354  0AE0  2ADF               	goto	u4357
  2355  0AE1  0BC7               	decfsz	??_setMinutesEnd+1,f
  2356  0AE2  2ADF               	goto	u4357
  2357  0AE3  2AE4               	nop2
  2358  0AE4  2AD7               	goto	l2847
  2359  0AE5                     l2849:	
  2360                           ;time_scheduler.h: 201: }
  2361                           ;time_scheduler.h: 202: }
  2362                           
  2363                           
  2364                           ;time_scheduler.h: 203: else if (!keyValid)
  2365  0AE5  08EE               	movf	_keyValid,f
  2366  0AE6  1D03               	skipz
  2367  0AE7  0008               	return
  2368                           
  2369                           ;time_scheduler.h: 204: {
  2370                           ;time_scheduler.h: 205: lastKeyState = 0xFF;
  2371  0AE8  30FF               	movlw	255
  2372  0AE9  00C6               	movwf	??_setMinutesEnd
  2373  0AEA  0846               	movf	??_setMinutesEnd,w
  2374  0AEB  00E8               	movwf	_lastKeyState
  2375  0AEC  0008               	return
  2376  0AED                     __end_of_setMinutesEnd:	
  2377                           
  2378                           	psect	text6
  2379  09A1                     __ptext6:	
  2380 ;; *************** function _setHoursStart *****************
  2381 ;; Defined at:
  2382 ;;		line 56 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;		None               void
  2389 ;; Registers used:
  2390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         0       0       0       0       0
  2397 ;;      Locals:         0       0       0       0       0
  2398 ;;      Temps:          0       3       0       0       0
  2399 ;;      Totals:         0       3       0       0       0
  2400 ;;Total ram usage:        3 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    4
  2403 ;; This function calls:
  2404 ;;		___awmod
  2405 ;;		_printToLCD
  2406 ;;		_sprintf
  2407 ;; This function is called by:
  2408 ;;		_main
  2409 ;; This function uses a non-reentrant model
  2410 ;;
  2411                           
  2412                           
  2413                           ;psect for function _setHoursStart
  2414  09A1                     _setHoursStart:	
  2415                           
  2416                           ;time_scheduler.h: 58: keyValid = (PORTB & 0x08) >> 3;
  2417                           
  2418                           ;incstack = 0
  2419                           ; Regs used in _setHoursStart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2420  09A1  1283               	bcf	3,5	;RP0=0, select bank0
  2421  09A2  1303               	bcf	3,6	;RP1=0, select bank0
  2422  09A3  0806               	movf	6,w	;volatile
  2423  09A4  00C6               	movwf	??_setHoursStart
  2424  09A5  3003               	movlw	3
  2425  09A6                     u3605:	
  2426  09A6  1003               	clrc
  2427  09A7  0CC6               	rrf	??_setHoursStart,f
  2428  09A8  3EFF               	addlw	-1
  2429  09A9  1D03               	skipz
  2430  09AA  29A6               	goto	u3605
  2431  09AB  0846               	movf	??_setHoursStart,w
  2432  09AC  3901               	andlw	1
  2433  09AD  00C7               	movwf	??_setHoursStart+1
  2434  09AE  0847               	movf	??_setHoursStart+1,w
  2435  09AF  00EE               	movwf	_keyValid
  2436                           
  2437                           ;time_scheduler.h: 59: key = (PORTB & 0xF0) >> 4;
  2438  09B0  0806               	movf	6,w	;volatile
  2439  09B1  00C6               	movwf	??_setHoursStart
  2440  09B2  3004               	movlw	4
  2441  09B3                     u3615:	
  2442  09B3  1003               	clrc
  2443  09B4  0CC6               	rrf	??_setHoursStart,f
  2444  09B5  3EFF               	addlw	-1
  2445  09B6  1D03               	skipz
  2446  09B7  29B3               	goto	u3615
  2447  09B8  0846               	movf	??_setHoursStart,w
  2448  09B9  390F               	andlw	15
  2449  09BA  00C7               	movwf	??_setHoursStart+1
  2450  09BB  0847               	movf	??_setHoursStart+1,w
  2451  09BC  00ED               	movwf	_key
  2452                           
  2453                           ;time_scheduler.h: 61: _delay((unsigned long)((50)*(4000000/4000.0)));
  2454  09BD  3041               	movlw	65
  2455  09BE  00C7               	movwf	??_setHoursStart+1
  2456  09BF  30EE               	movlw	238
  2457  09C0  00C6               	movwf	??_setHoursStart
  2458  09C1                     u4367:	
  2459  09C1  0BC6               	decfsz	??_setHoursStart,f
  2460  09C2  29C1               	goto	u4367
  2461  09C3  0BC7               	decfsz	??_setHoursStart+1,f
  2462  09C4  29C1               	goto	u4367
  2463  09C5  0000               	nop
  2464                           
  2465                           ;time_scheduler.h: 63: if (keyValid && key != lastKeyState)
  2466  09C6  1283               	bcf	3,5	;RP0=0, select bank0
  2467  09C7  1303               	bcf	3,6	;RP1=0, select bank0
  2468  09C8  086E               	movf	_keyValid,w
  2469  09C9  1903               	btfsc	3,2
  2470  09CA  2A3F               	goto	l2747
  2471  09CB  086D               	movf	_key,w
  2472  09CC  0668               	xorwf	_lastKeyState,w
  2473  09CD  1903               	skipnz
  2474  09CE  2A3F               	goto	l2747
  2475                           
  2476                           ;time_scheduler.h: 64: {
  2477                           ;time_scheduler.h: 65: if (key == 0b00001100)
  2478  09CF  086D               	movf	_key,w
  2479  09D0  3A0C               	xorlw	12
  2480  09D1  1D03               	skipz
  2481  09D2  29EB               	goto	l2731
  2482                           
  2483                           ;time_scheduler.h: 66: {
  2484                           ;time_scheduler.h: 67: savedHoursStart = (savedHoursStart + 1) % 24;
  2485  09D3  3018               	movlw	24
  2486  09D4  00A0               	movwf	___awmod@divisor
  2487  09D5  3000               	movlw	0
  2488  09D6  00A1               	movwf	___awmod@divisor+1
  2489  09D7  086A               	movf	_savedHoursStart,w	;volatile
  2490  09D8  3E01               	addlw	1
  2491  09D9  00A2               	movwf	___awmod@dividend
  2492  09DA  3000               	movlw	0
  2493  09DB  1803               	skipnc
  2494  09DC  3001               	movlw	1
  2495  09DD  00A3               	movwf	___awmod@dividend+1
  2496  09DE  160A  118A  266C  120A  158A  	fcall	___awmod
  2497  09E3  1283               	bcf	3,5	;RP0=0, select bank0
  2498  09E4  1303               	bcf	3,6	;RP1=0, select bank0
  2499  09E5  0820               	movf	?___awmod,w
  2500  09E6  00C6               	movwf	??_setHoursStart
  2501  09E7  0846               	movf	??_setHoursStart,w
  2502  09E8  00EA               	movwf	_savedHoursStart	;volatile
  2503                           
  2504                           ;time_scheduler.h: 68: sprintf(debugInfo, "INC: %02d", savedHoursStart);
  2505  09E9  30A6               	movlw	(STR_10-__stringbase)& (0+255)
  2506  09EA  2A10               	goto	L3
  2507  09EB                     l2731:	
  2508                           ;time_scheduler.h: 69: }
  2509                           
  2510                           
  2511                           ;time_scheduler.h: 70: else if (key == 0b00001110)
  2512  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  2513  09EC  1303               	bcf	3,6	;RP1=0, select bank0
  2514  09ED  086D               	movf	_key,w
  2515  09EE  3A0E               	xorlw	14
  2516  09EF  1D03               	skipz
  2517  09F0  2A09               	goto	l2737
  2518                           
  2519                           ;time_scheduler.h: 71: {
  2520                           ;time_scheduler.h: 72: savedHoursStart = (savedHoursStart - 1 + 24) % 24;
  2521  09F1  3018               	movlw	24
  2522  09F2  00A0               	movwf	___awmod@divisor
  2523  09F3  3000               	movlw	0
  2524  09F4  00A1               	movwf	___awmod@divisor+1
  2525  09F5  086A               	movf	_savedHoursStart,w	;volatile
  2526  09F6  3E17               	addlw	23
  2527  09F7  00A2               	movwf	___awmod@dividend
  2528  09F8  3000               	movlw	0
  2529  09F9  1803               	skipnc
  2530  09FA  3001               	movlw	1
  2531  09FB  00A3               	movwf	___awmod@dividend+1
  2532  09FC  160A  118A  266C  120A  158A  	fcall	___awmod
  2533  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0A03  0820               	movf	?___awmod,w
  2536  0A04  00C6               	movwf	??_setHoursStart
  2537  0A05  0846               	movf	??_setHoursStart,w
  2538  0A06  00EA               	movwf	_savedHoursStart	;volatile
  2539                           
  2540                           ;time_scheduler.h: 73: sprintf(debugInfo, "DEC: %02d", savedHoursStart);
  2541  0A07  309C               	movlw	(STR_11-__stringbase)& (0+255)
  2542  0A08  2A10               	goto	L3
  2543  0A09                     l2737:	
  2544                           ;time_scheduler.h: 74: }
  2545                           
  2546                           
  2547                           ;time_scheduler.h: 75: else if (key == 0b00001101)
  2548  0A09  1283               	bcf	3,5	;RP0=0, select bank0
  2549  0A0A  1303               	bcf	3,6	;RP1=0, select bank0
  2550  0A0B  086D               	movf	_key,w
  2551  0A0C  3A0D               	xorlw	13
  2552  0A0D  1D03               	skipz
  2553  0A0E  2A20               	goto	l184
  2554                           
  2555                           ;time_scheduler.h: 76: {
  2556                           ;time_scheduler.h: 77: sprintf(debugInfo, "SET: %02d", savedHoursStart);
  2557  0A0F  30B0               	movlw	(STR_12-__stringbase)& (0+255)
  2558  0A10                     L3:	
  2559  0A10  00C6               	movwf	??_setHoursStart
  2560  0A11  0846               	movf	??_setHoursStart,w
  2561  0A12  00AE               	movwf	sprintf@f
  2562  0A13  086A               	movf	_savedHoursStart,w	;volatile
  2563  0A14  00C7               	movwf	??_setHoursStart+1
  2564  0A15  01C8               	clrf	??_setHoursStart+2
  2565  0A16  0847               	movf	??_setHoursStart+1,w
  2566  0A17  00AF               	movwf	?_sprintf+1
  2567  0A18  0848               	movf	??_setHoursStart+2,w
  2568  0A19  00B0               	movwf	?_sprintf+2
  2569  0A1A  30E4               	movlw	_debugInfo& (0+255)
  2570  0A1B  120A  118A  23FA  120A  158A  	fcall	_sprintf
  2571  0A20                     l184:	
  2572                           
  2573                           ;time_scheduler.h: 79: }
  2574                           ;time_scheduler.h: 81: printToLCD(debugInfo);
  2575  0A20  30E4               	movlw	_debugInfo& (0+255)
  2576  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  2577  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  2578  0A23  00A2               	movwf	printToLCD@str
  2579  0A24  3000               	movlw	0
  2580  0A25  00A3               	movwf	printToLCD@str+1
  2581  0A26  160A  118A  2454  120A  158A  	fcall	_printToLCD
  2582                           
  2583                           ;time_scheduler.h: 82: lastKeyState = key;
  2584  0A2B  1283               	bcf	3,5	;RP0=0, select bank0
  2585  0A2C  1303               	bcf	3,6	;RP1=0, select bank0
  2586  0A2D  086D               	movf	_key,w
  2587  0A2E  00C6               	movwf	??_setHoursStart
  2588  0A2F  0846               	movf	??_setHoursStart,w
  2589  0A30  00E8               	movwf	_lastKeyState
  2590  0A31                     l2745:	
  2591                           ;time_scheduler.h: 84: while ((PORTB & 0x08) != 0)
  2592                           
  2593  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0A33  1D86               	btfss	6,3	;volatile
  2596  0A34  0008               	return
  2597                           
  2598                           ;time_scheduler.h: 85: {
  2599                           ;time_scheduler.h: 86: _delay((unsigned long)((10)*(4000000/4000.0)));
  2600  0A35  300D               	movlw	13
  2601  0A36  00C7               	movwf	??_setHoursStart+1
  2602  0A37  30FB               	movlw	251
  2603  0A38  00C6               	movwf	??_setHoursStart
  2604  0A39                     u4377:	
  2605  0A39  0BC6               	decfsz	??_setHoursStart,f
  2606  0A3A  2A39               	goto	u4377
  2607  0A3B  0BC7               	decfsz	??_setHoursStart+1,f
  2608  0A3C  2A39               	goto	u4377
  2609  0A3D  2A3E               	nop2
  2610  0A3E  2A31               	goto	l2745
  2611  0A3F                     l2747:	
  2612                           ;time_scheduler.h: 87: }
  2613                           ;time_scheduler.h: 88: }
  2614                           
  2615                           
  2616                           ;time_scheduler.h: 89: else if (!keyValid)
  2617  0A3F  08EE               	movf	_keyValid,f
  2618  0A40  1D03               	skipz
  2619  0A41  0008               	return
  2620                           
  2621                           ;time_scheduler.h: 90: {
  2622                           ;time_scheduler.h: 91: lastKeyState = 0xFF;
  2623  0A42  30FF               	movlw	255
  2624  0A43  00C6               	movwf	??_setHoursStart
  2625  0A44  0846               	movf	??_setHoursStart,w
  2626  0A45  00E8               	movwf	_lastKeyState
  2627  0A46  0008               	return
  2628  0A47                     __end_of_setHoursStart:	
  2629                           
  2630                           	psect	text7
  2631  08FB                     __ptext7:	
  2632 ;; *************** function _setHoursEnd *****************
  2633 ;; Defined at:
  2634 ;;		line 95 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;		None               void
  2641 ;; Registers used:
  2642 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2648 ;;      Params:         0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0
  2650 ;;      Temps:          0       3       0       0       0
  2651 ;;      Totals:         0       3       0       0       0
  2652 ;;Total ram usage:        3 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    4
  2655 ;; This function calls:
  2656 ;;		___awmod
  2657 ;;		_printToLCD
  2658 ;;		_sprintf
  2659 ;; This function is called by:
  2660 ;;		_main
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           
  2665                           ;psect for function _setHoursEnd
  2666  08FB                     _setHoursEnd:	
  2667                           
  2668                           ;time_scheduler.h: 97: keyValid = (PORTB & 0x08) >> 3;
  2669                           
  2670                           ;incstack = 0
  2671                           ; Regs used in _setHoursEnd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2672  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  2673  08FC  1303               	bcf	3,6	;RP1=0, select bank0
  2674  08FD  0806               	movf	6,w	;volatile
  2675  08FE  00C6               	movwf	??_setHoursEnd
  2676  08FF  3003               	movlw	3
  2677  0900                     u3695:	
  2678  0900  1003               	clrc
  2679  0901  0CC6               	rrf	??_setHoursEnd,f
  2680  0902  3EFF               	addlw	-1
  2681  0903  1D03               	skipz
  2682  0904  2900               	goto	u3695
  2683  0905  0846               	movf	??_setHoursEnd,w
  2684  0906  3901               	andlw	1
  2685  0907  00C7               	movwf	??_setHoursEnd+1
  2686  0908  0847               	movf	??_setHoursEnd+1,w
  2687  0909  00EE               	movwf	_keyValid
  2688                           
  2689                           ;time_scheduler.h: 98: key = (PORTB & 0xF0) >> 4;
  2690  090A  0806               	movf	6,w	;volatile
  2691  090B  00C6               	movwf	??_setHoursEnd
  2692  090C  3004               	movlw	4
  2693  090D                     u3705:	
  2694  090D  1003               	clrc
  2695  090E  0CC6               	rrf	??_setHoursEnd,f
  2696  090F  3EFF               	addlw	-1
  2697  0910  1D03               	skipz
  2698  0911  290D               	goto	u3705
  2699  0912  0846               	movf	??_setHoursEnd,w
  2700  0913  390F               	andlw	15
  2701  0914  00C7               	movwf	??_setHoursEnd+1
  2702  0915  0847               	movf	??_setHoursEnd+1,w
  2703  0916  00ED               	movwf	_key
  2704                           
  2705                           ;time_scheduler.h: 100: _delay((unsigned long)((50)*(4000000/4000.0)));
  2706  0917  3041               	movlw	65
  2707  0918  00C7               	movwf	??_setHoursEnd+1
  2708  0919  30EE               	movlw	238
  2709  091A  00C6               	movwf	??_setHoursEnd
  2710  091B                     u4387:	
  2711  091B  0BC6               	decfsz	??_setHoursEnd,f
  2712  091C  291B               	goto	u4387
  2713  091D  0BC7               	decfsz	??_setHoursEnd+1,f
  2714  091E  291B               	goto	u4387
  2715  091F  0000               	nop
  2716                           
  2717                           ;time_scheduler.h: 102: if (keyValid && key != lastKeyState)
  2718  0920  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0921  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0922  086E               	movf	_keyValid,w
  2721  0923  1903               	btfsc	3,2
  2722  0924  2999               	goto	l2781
  2723  0925  086D               	movf	_key,w
  2724  0926  0668               	xorwf	_lastKeyState,w
  2725  0927  1903               	skipnz
  2726  0928  2999               	goto	l2781
  2727                           
  2728                           ;time_scheduler.h: 103: {
  2729                           ;time_scheduler.h: 104: if (key == 0b00001100)
  2730  0929  086D               	movf	_key,w
  2731  092A  3A0C               	xorlw	12
  2732  092B  1D03               	skipz
  2733  092C  2945               	goto	l2765
  2734                           
  2735                           ;time_scheduler.h: 105: {
  2736                           ;time_scheduler.h: 106: savedHoursEnd = (savedHoursEnd + 1) % 24;
  2737  092D  3018               	movlw	24
  2738  092E  00A0               	movwf	___awmod@divisor
  2739  092F  3000               	movlw	0
  2740  0930  00A1               	movwf	___awmod@divisor+1
  2741  0931  0869               	movf	_savedHoursEnd,w	;volatile
  2742  0932  3E01               	addlw	1
  2743  0933  00A2               	movwf	___awmod@dividend
  2744  0934  3000               	movlw	0
  2745  0935  1803               	skipnc
  2746  0936  3001               	movlw	1
  2747  0937  00A3               	movwf	___awmod@dividend+1
  2748  0938  160A  118A  266C  120A  158A  	fcall	___awmod
  2749  093D  1283               	bcf	3,5	;RP0=0, select bank0
  2750  093E  1303               	bcf	3,6	;RP1=0, select bank0
  2751  093F  0820               	movf	?___awmod,w
  2752  0940  00C6               	movwf	??_setHoursEnd
  2753  0941  0846               	movf	??_setHoursEnd,w
  2754  0942  00E9               	movwf	_savedHoursEnd	;volatile
  2755                           
  2756                           ;time_scheduler.h: 107: sprintf(debugInfo, "INC: %02d", savedHoursEnd);
  2757  0943  30A6               	movlw	(STR_10-__stringbase)& (0+255)
  2758  0944  296A               	goto	L4
  2759  0945                     l2765:	
  2760                           ;time_scheduler.h: 108: }
  2761                           
  2762                           
  2763                           ;time_scheduler.h: 109: else if (key == 0b00001110)
  2764  0945  1283               	bcf	3,5	;RP0=0, select bank0
  2765  0946  1303               	bcf	3,6	;RP1=0, select bank0
  2766  0947  086D               	movf	_key,w
  2767  0948  3A0E               	xorlw	14
  2768  0949  1D03               	skipz
  2769  094A  2963               	goto	l2771
  2770                           
  2771                           ;time_scheduler.h: 110: {
  2772                           ;time_scheduler.h: 111: savedHoursEnd = (savedHoursEnd - 1 + 24) % 24;
  2773  094B  3018               	movlw	24
  2774  094C  00A0               	movwf	___awmod@divisor
  2775  094D  3000               	movlw	0
  2776  094E  00A1               	movwf	___awmod@divisor+1
  2777  094F  0869               	movf	_savedHoursEnd,w	;volatile
  2778  0950  3E17               	addlw	23
  2779  0951  00A2               	movwf	___awmod@dividend
  2780  0952  3000               	movlw	0
  2781  0953  1803               	skipnc
  2782  0954  3001               	movlw	1
  2783  0955  00A3               	movwf	___awmod@dividend+1
  2784  0956  160A  118A  266C  120A  158A  	fcall	___awmod
  2785  095B  1283               	bcf	3,5	;RP0=0, select bank0
  2786  095C  1303               	bcf	3,6	;RP1=0, select bank0
  2787  095D  0820               	movf	?___awmod,w
  2788  095E  00C6               	movwf	??_setHoursEnd
  2789  095F  0846               	movf	??_setHoursEnd,w
  2790  0960  00E9               	movwf	_savedHoursEnd	;volatile
  2791                           
  2792                           ;time_scheduler.h: 112: sprintf(debugInfo, "DEC: %02d", savedHoursEnd);
  2793  0961  309C               	movlw	(STR_11-__stringbase)& (0+255)
  2794  0962  296A               	goto	L4
  2795  0963                     l2771:	
  2796                           ;time_scheduler.h: 113: }
  2797                           
  2798                           
  2799                           ;time_scheduler.h: 114: else if (key == 0b00001101)
  2800  0963  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0964  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0965  086D               	movf	_key,w
  2803  0966  3A0D               	xorlw	13
  2804  0967  1D03               	skipz
  2805  0968  297A               	goto	l198
  2806                           
  2807                           ;time_scheduler.h: 115: {
  2808                           ;time_scheduler.h: 116: sprintf(debugInfo, "SET: %02d", savedHoursEnd);
  2809  0969  30B0               	movlw	(STR_12-__stringbase)& (0+255)
  2810  096A                     L4:	
  2811  096A  00C6               	movwf	??_setHoursEnd
  2812  096B  0846               	movf	??_setHoursEnd,w
  2813  096C  00AE               	movwf	sprintf@f
  2814  096D  0869               	movf	_savedHoursEnd,w	;volatile
  2815  096E  00C7               	movwf	??_setHoursEnd+1
  2816  096F  01C8               	clrf	??_setHoursEnd+2
  2817  0970  0847               	movf	??_setHoursEnd+1,w
  2818  0971  00AF               	movwf	?_sprintf+1
  2819  0972  0848               	movf	??_setHoursEnd+2,w
  2820  0973  00B0               	movwf	?_sprintf+2
  2821  0974  30E4               	movlw	_debugInfo& (0+255)
  2822  0975  120A  118A  23FA  120A  158A  	fcall	_sprintf
  2823  097A                     l198:	
  2824                           
  2825                           ;time_scheduler.h: 117: }
  2826                           ;time_scheduler.h: 119: printToLCD(debugInfo);
  2827  097A  30E4               	movlw	_debugInfo& (0+255)
  2828  097B  1283               	bcf	3,5	;RP0=0, select bank0
  2829  097C  1303               	bcf	3,6	;RP1=0, select bank0
  2830  097D  00A2               	movwf	printToLCD@str
  2831  097E  3000               	movlw	0
  2832  097F  00A3               	movwf	printToLCD@str+1
  2833  0980  160A  118A  2454  120A  158A  	fcall	_printToLCD
  2834                           
  2835                           ;time_scheduler.h: 120: lastKeyState = key;
  2836  0985  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0986  1303               	bcf	3,6	;RP1=0, select bank0
  2838  0987  086D               	movf	_key,w
  2839  0988  00C6               	movwf	??_setHoursEnd
  2840  0989  0846               	movf	??_setHoursEnd,w
  2841  098A  00E8               	movwf	_lastKeyState
  2842  098B                     l2779:	
  2843                           ;time_scheduler.h: 122: while ((PORTB & 0x08) != 0)
  2844                           
  2845  098B  1283               	bcf	3,5	;RP0=0, select bank0
  2846  098C  1303               	bcf	3,6	;RP1=0, select bank0
  2847  098D  1D86               	btfss	6,3	;volatile
  2848  098E  0008               	return
  2849                           
  2850                           ;time_scheduler.h: 123: {
  2851                           ;time_scheduler.h: 124: _delay((unsigned long)((10)*(4000000/4000.0)));
  2852  098F  300D               	movlw	13
  2853  0990  00C7               	movwf	??_setHoursEnd+1
  2854  0991  30FB               	movlw	251
  2855  0992  00C6               	movwf	??_setHoursEnd
  2856  0993                     u4397:	
  2857  0993  0BC6               	decfsz	??_setHoursEnd,f
  2858  0994  2993               	goto	u4397
  2859  0995  0BC7               	decfsz	??_setHoursEnd+1,f
  2860  0996  2993               	goto	u4397
  2861  0997  2998               	nop2
  2862  0998  298B               	goto	l2779
  2863  0999                     l2781:	
  2864                           ;time_scheduler.h: 125: }
  2865                           ;time_scheduler.h: 126: }
  2866                           
  2867                           
  2868                           ;time_scheduler.h: 127: else if (!keyValid)
  2869  0999  08EE               	movf	_keyValid,f
  2870  099A  1D03               	skipz
  2871  099B  0008               	return
  2872                           
  2873                           ;time_scheduler.h: 128: {
  2874                           ;time_scheduler.h: 129: lastKeyState = 0xFF;
  2875  099C  30FF               	movlw	255
  2876  099D  00C6               	movwf	??_setHoursEnd
  2877  099E  0846               	movf	??_setHoursEnd,w
  2878  099F  00E8               	movwf	_lastKeyState
  2879  09A0  0008               	return
  2880  09A1                     __end_of_setHoursEnd:	
  2881                           
  2882                           	psect	text8
  2883  166C                     __ptext8:	
  2884 ;; *************** function ___awmod *****************
  2885 ;; Defined at:
  2886 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;  divisor         2    0[BANK0 ] int 
  2889 ;;  dividend        2    2[BANK0 ] int 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  sign            1    6[BANK0 ] unsigned char 
  2892 ;;  counter         1    5[BANK0 ] unsigned char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  2    0[BANK0 ] int 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       4       0       0       0
  2903 ;;      Locals:         0       2       0       0       0
  2904 ;;      Temps:          0       1       0       0       0
  2905 ;;      Totals:         0       7       0       0       0
  2906 ;;Total ram usage:        7 bytes
  2907 ;; Hardware stack levels used:    1
  2908 ;; Hardware stack levels required when called:    2
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_setHoursStart
  2913 ;;		_setHoursEnd
  2914 ;;		_setMinutesStart
  2915 ;;		_setMinutesEnd
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           
  2920                           ;psect for function ___awmod
  2921  166C                     ___awmod:	
  2922                           
  2923                           ;incstack = 0
  2924                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2925  166C  1283               	bcf	3,5	;RP0=0, select bank0
  2926  166D  1303               	bcf	3,6	;RP1=0, select bank0
  2927  166E  01A6               	clrf	___awmod@sign
  2928  166F  1FA3               	btfss	___awmod@dividend+1,7
  2929  1670  2E78               	goto	l2537
  2930  1671  09A2               	comf	___awmod@dividend,f
  2931  1672  09A3               	comf	___awmod@dividend+1,f
  2932  1673  0AA2               	incf	___awmod@dividend,f
  2933  1674  1903               	skipnz
  2934  1675  0AA3               	incf	___awmod@dividend+1,f
  2935  1676  01A6               	clrf	___awmod@sign
  2936  1677  0AA6               	incf	___awmod@sign,f
  2937  1678                     l2537:	
  2938  1678  1FA1               	btfss	___awmod@divisor+1,7
  2939  1679  2E7F               	goto	l2541
  2940  167A  09A0               	comf	___awmod@divisor,f
  2941  167B  09A1               	comf	___awmod@divisor+1,f
  2942  167C  0AA0               	incf	___awmod@divisor,f
  2943  167D  1903               	skipnz
  2944  167E  0AA1               	incf	___awmod@divisor+1,f
  2945  167F                     l2541:	
  2946  167F  0821               	movf	___awmod@divisor+1,w
  2947  1680  0420               	iorwf	___awmod@divisor,w
  2948  1681  1903               	skipnz
  2949  1682  2EAC               	goto	l2559
  2950  1683  01A5               	clrf	___awmod@counter
  2951  1684  0AA5               	incf	___awmod@counter,f
  2952  1685                     l2549:	
  2953  1685  1BA1               	btfsc	___awmod@divisor+1,7
  2954  1686  2E93               	goto	l2551
  2955  1687  3001               	movlw	1
  2956  1688                     u3315:	
  2957  1688  1003               	clrc
  2958  1689  0DA0               	rlf	___awmod@divisor,f
  2959  168A  0DA1               	rlf	___awmod@divisor+1,f
  2960  168B  3EFF               	addlw	-1
  2961  168C  1D03               	skipz
  2962  168D  2E88               	goto	u3315
  2963  168E  3001               	movlw	1
  2964  168F  00A4               	movwf	??___awmod
  2965  1690  0824               	movf	??___awmod,w
  2966  1691  07A5               	addwf	___awmod@counter,f
  2967  1692  2E85               	goto	l2549
  2968  1693                     l2551:	
  2969  1693  0821               	movf	___awmod@divisor+1,w
  2970  1694  0223               	subwf	___awmod@dividend+1,w
  2971  1695  1D03               	skipz
  2972  1696  2E99               	goto	u3335
  2973  1697  0820               	movf	___awmod@divisor,w
  2974  1698  0222               	subwf	___awmod@dividend,w
  2975  1699                     u3335:	
  2976  1699  1C03               	skipc
  2977  169A  2EA1               	goto	l2555
  2978  169B  0820               	movf	___awmod@divisor,w
  2979  169C  02A2               	subwf	___awmod@dividend,f
  2980  169D  0821               	movf	___awmod@divisor+1,w
  2981  169E  1C03               	skipc
  2982  169F  03A3               	decf	___awmod@dividend+1,f
  2983  16A0  02A3               	subwf	___awmod@dividend+1,f
  2984  16A1                     l2555:	
  2985  16A1  3001               	movlw	1
  2986  16A2                     u3345:	
  2987  16A2  1003               	clrc
  2988  16A3  0CA1               	rrf	___awmod@divisor+1,f
  2989  16A4  0CA0               	rrf	___awmod@divisor,f
  2990  16A5  3EFF               	addlw	-1
  2991  16A6  1D03               	skipz
  2992  16A7  2EA2               	goto	u3345
  2993  16A8  3001               	movlw	1
  2994  16A9  02A5               	subwf	___awmod@counter,f
  2995  16AA  1D03               	btfss	3,2
  2996  16AB  2E93               	goto	l2551
  2997  16AC                     l2559:	
  2998  16AC  0826               	movf	___awmod@sign,w
  2999  16AD  1903               	btfsc	3,2
  3000  16AE  2EB4               	goto	l2563
  3001  16AF  09A2               	comf	___awmod@dividend,f
  3002  16B0  09A3               	comf	___awmod@dividend+1,f
  3003  16B1  0AA2               	incf	___awmod@dividend,f
  3004  16B2  1903               	skipnz
  3005  16B3  0AA3               	incf	___awmod@dividend+1,f
  3006  16B4                     l2563:	
  3007  16B4  0823               	movf	___awmod@dividend+1,w
  3008  16B5  01A1               	clrf	?___awmod+1
  3009  16B6  07A1               	addwf	?___awmod+1,f
  3010  16B7  0822               	movf	___awmod@dividend,w
  3011  16B8  01A0               	clrf	?___awmod
  3012  16B9  07A0               	addwf	?___awmod,f
  3013  16BA  0008               	return
  3014  16BB                     __end_of___awmod:	
  3015                           
  3016                           	psect	text9
  3017  1372                     __ptext9:	
  3018 ;; *************** function _runMQ135 *****************
  3019 ;; Defined at:
  3020 ;;		line 32 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;		None
  3023 ;; Auto vars:     Size  Location     Type
  3024 ;;		None
  3025 ;; Return value:  Size  Location     Type
  3026 ;;		None               void
  3027 ;; Registers used:
  3028 ;;		wreg, status,2, status,0, pclath, cstack
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3034 ;;      Params:         0       0       0       0       0
  3035 ;;      Locals:         0       0       0       0       0
  3036 ;;      Temps:          0       0       0       0       0
  3037 ;;      Totals:         0       0       0       0       0
  3038 ;;Total ram usage:        0 bytes
  3039 ;; Hardware stack levels used:    1
  3040 ;; Hardware stack levels required when called:    5
  3041 ;; This function calls:
  3042 ;;		_CalcMQ135
  3043 ;;		_readADC
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           
  3050                           ;psect for function _runMQ135
  3051  1372                     _runMQ135:	
  3052                           
  3053                           ;mq135_module.h: 34: PPM = CalcMQ135(readADC(0));
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in _runMQ135: [wreg+status,2+status,0+pclath+cstack]
  3057  1372  3000               	movlw	0
  3058  1373  160A  118A  242B  160A  118A  	fcall	_readADC
  3059  1378  1283               	bcf	3,5	;RP0=0, select bank0
  3060  1379  1303               	bcf	3,6	;RP1=0, select bank0
  3061  137A  0821               	movf	?_readADC+1,w
  3062  137B  01D2               	clrf	CalcMQ135@RAW_ADC+1
  3063  137C  07D2               	addwf	CalcMQ135@RAW_ADC+1,f
  3064  137D  0820               	movf	?_readADC,w
  3065  137E  01D1               	clrf	CalcMQ135@RAW_ADC
  3066  137F  07D1               	addwf	CalcMQ135@RAW_ADC,f
  3067  1380  120A  118A  2053   	fcall	_CalcMQ135
  3068  1383  1283               	bcf	3,5	;RP0=0, select bank0
  3069  1384  1303               	bcf	3,6	;RP1=0, select bank0
  3070  1385  0851               	movf	?_CalcMQ135,w
  3071  1386  1683               	bsf	3,5	;RP0=1, select bank1
  3072  1387  1303               	bcf	3,6	;RP1=0, select bank1
  3073  1388  00DC               	movwf	_PPM^(0+128)	;volatile
  3074  1389  1283               	bcf	3,5	;RP0=0, select bank0
  3075  138A  1303               	bcf	3,6	;RP1=0, select bank0
  3076  138B  0852               	movf	?_CalcMQ135+1,w
  3077  138C  1683               	bsf	3,5	;RP0=1, select bank1
  3078  138D  1303               	bcf	3,6	;RP1=0, select bank1
  3079  138E  00DD               	movwf	(_PPM+1)^(0+128)	;volatile
  3080  138F  1283               	bcf	3,5	;RP0=0, select bank0
  3081  1390  1303               	bcf	3,6	;RP1=0, select bank0
  3082  1391  0853               	movf	?_CalcMQ135+2,w
  3083  1392  1683               	bsf	3,5	;RP0=1, select bank1
  3084  1393  1303               	bcf	3,6	;RP1=0, select bank1
  3085  1394  00DE               	movwf	(_PPM+2)^(0+128)	;volatile
  3086  1395  0008               	return
  3087  1396                     __end_of_runMQ135:	
  3088                           
  3089                           	psect	text10
  3090  142B                     __ptext10:	
  3091 ;; *************** function _readADC *****************
  3092 ;; Defined at:
  3093 ;;		line 23 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\common_dependen
      +cies.h"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  channel         1    wreg     unsigned char 
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  channel         1    4[BANK0 ] unsigned char 
  3098 ;; Return value:  Size  Location     Type
  3099 ;;                  2    0[BANK0 ] int 
  3100 ;; Registers used:
  3101 ;;		wreg, status,2, status,0
  3102 ;; Tracked objects:
  3103 ;;		On entry : 0/0
  3104 ;;		On exit  : 0/0
  3105 ;;		Unchanged: 0/0
  3106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3107 ;;      Params:         0       2       0       0       0
  3108 ;;      Locals:         0       1       0       0       0
  3109 ;;      Temps:          0       2       0       0       0
  3110 ;;      Totals:         0       5       0       0       0
  3111 ;;Total ram usage:        5 bytes
  3112 ;; Hardware stack levels used:    1
  3113 ;; Hardware stack levels required when called:    2
  3114 ;; This function calls:
  3115 ;;		Nothing
  3116 ;; This function is called by:
  3117 ;;		_runMQ135
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           
  3122                           ;psect for function _readADC
  3123  142B                     _readADC:	
  3124                           
  3125                           ;incstack = 0
  3126                           ; Regs used in _readADC: [wreg+status,2+status,0]
  3127                           ;readADC@channel stored from wreg
  3128  142B  1283               	bcf	3,5	;RP0=0, select bank0
  3129  142C  1303               	bcf	3,6	;RP1=0, select bank0
  3130  142D  00A4               	movwf	readADC@channel
  3131                           
  3132                           ;common_dependencies.h: 25: ADCON0 &= 0xC3;
  3133  142E  30C3               	movlw	195
  3134  142F  00A2               	movwf	??_readADC
  3135  1430  0822               	movf	??_readADC,w
  3136  1431  059F               	andwf	31,f	;volatile
  3137                           
  3138                           ;common_dependencies.h: 26: ADCON0 |= (channel << 3);
  3139  1432  0824               	movf	readADC@channel,w
  3140  1433  00A2               	movwf	??_readADC
  3141  1434  3002               	movlw	2
  3142  1435                     u2925:	
  3143  1435  1003               	clrc
  3144  1436  0DA2               	rlf	??_readADC,f
  3145  1437  3EFF               	addlw	-1
  3146  1438  1D03               	skipz
  3147  1439  2C35               	goto	u2925
  3148  143A  1003               	clrc
  3149  143B  0D22               	rlf	??_readADC,w
  3150  143C  00A3               	movwf	??_readADC+1
  3151  143D  0823               	movf	??_readADC+1,w
  3152  143E  049F               	iorwf	31,f	;volatile
  3153                           
  3154                           ;common_dependencies.h: 27: _delay((unsigned long)((20)*(4000000/4000000.0)));
  3155  143F  3006               	movlw	6
  3156  1440  00A2               	movwf	??_readADC
  3157  1441                     u4407:	
  3158  1441  0BA2               	decfsz	??_readADC,f
  3159  1442  2C41               	goto	u4407
  3160  1443  0000               	nop
  3161                           
  3162                           ;common_dependencies.h: 28: GO_DONE = 1;
  3163  1444  1283               	bcf	3,5	;RP0=0, select bank0
  3164  1445  1303               	bcf	3,6	;RP1=0, select bank0
  3165  1446  151F               	bsf	31,2	;volatile
  3166  1447                     l69:	
  3167                           ;common_dependencies.h: 30: ;
  3168                           
  3169                           ;common_dependencies.h: 29: while (GO_DONE)
  3170                           
  3171  1447  191F               	btfsc	31,2	;volatile
  3172  1448  2C47               	goto	l69
  3173                           
  3174                           ;common_dependencies.h: 31: return ((ADRESH << 8) + ADRESL);
  3175  1449  081E               	movf	30,w	;volatile
  3176  144A  01A1               	clrf	?_readADC+1
  3177  144B  07A1               	addwf	?_readADC+1,f
  3178  144C  1683               	bsf	3,5	;RP0=1, select bank1
  3179  144D  1303               	bcf	3,6	;RP1=0, select bank1
  3180  144E  081E               	movf	30,w	;volatile
  3181  144F  1283               	bcf	3,5	;RP0=0, select bank0
  3182  1450  1303               	bcf	3,6	;RP1=0, select bank0
  3183  1451  01A0               	clrf	?_readADC
  3184  1452  07A0               	addwf	?_readADC,f
  3185  1453  0008               	return
  3186  1454                     __end_of_readADC:	
  3187                           
  3188                           	psect	text11
  3189  0053                     __ptext11:	
  3190 ;; *************** function _CalcMQ135 *****************
  3191 ;; Defined at:
  3192 ;;		line 93 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  RAW_ADC         2   49[BANK0 ] int 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  ratio           3   36[BANK1 ] float 
  3197 ;;  co2             3   33[BANK1 ] float 
  3198 ;;  ratio5          3   30[BANK1 ] float 
  3199 ;;  ratio4          3   27[BANK1 ] float 
  3200 ;;  ratio3          3   24[BANK1 ] float 
  3201 ;;  ratio2          3   21[BANK1 ] float 
  3202 ;;  ratio6          3    3[BANK1 ] float 
  3203 ;;  voltage         3    0[BANK1 ] float 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  3   49[BANK0 ] float 
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0, pclath, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3213 ;;      Params:         0       3       0       0       0
  3214 ;;      Locals:         0       0      39       0       0
  3215 ;;      Temps:          0       0       0       0       0
  3216 ;;      Totals:         0       3      39       0       0
  3217 ;;Total ram usage:       42 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    4
  3220 ;; This function calls:
  3221 ;;		___awtoft
  3222 ;;		___ftadd
  3223 ;;		___ftdiv
  3224 ;;		___ftmul
  3225 ;; This function is called by:
  3226 ;;		_runMQ135
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function _CalcMQ135
  3232  0053                     _CalcMQ135:	
  3233                           
  3234                           ;mq135_module.h: 95: float voltage = (RAW_ADC * 5.0) / 1023.0;
  3235                           
  3236                           ;incstack = 0
  3237                           ; Regs used in _CalcMQ135: [wreg+status,2+status,0+pclath+cstack]
  3238  0053  30C0               	movlw	192
  3239  0054  1283               	bcf	3,5	;RP0=0, select bank0
  3240  0055  1303               	bcf	3,6	;RP1=0, select bank0
  3241  0056  00C1               	movwf	___ftdiv@f2
  3242  0057  307F               	movlw	127
  3243  0058  00C2               	movwf	___ftdiv@f2+1
  3244  0059  3044               	movlw	68
  3245  005A  00C3               	movwf	___ftdiv@f2+2
  3246  005B  3000               	movlw	0
  3247  005C  00B1               	movwf	___ftmul@f1
  3248  005D  30A0               	movlw	160
  3249  005E  00B2               	movwf	___ftmul@f1+1
  3250  005F  3040               	movlw	64
  3251  0060  00B3               	movwf	___ftmul@f1+2
  3252  0061  0852               	movf	CalcMQ135@RAW_ADC+1,w
  3253  0062  01A9               	clrf	___awtoft@c+1
  3254  0063  07A9               	addwf	___awtoft@c+1,f
  3255  0064  0851               	movf	CalcMQ135@RAW_ADC,w
  3256  0065  01A8               	clrf	___awtoft@c
  3257  0066  07A8               	addwf	___awtoft@c,f
  3258  0067  160A  118A  23DF  120A  118A  	fcall	___awtoft
  3259  006C  1283               	bcf	3,5	;RP0=0, select bank0
  3260  006D  1303               	bcf	3,6	;RP1=0, select bank0
  3261  006E  0828               	movf	?___awtoft,w
  3262  006F  00B4               	movwf	___ftmul@f2
  3263  0070  0829               	movf	?___awtoft+1,w
  3264  0071  00B5               	movwf	___ftmul@f2+1
  3265  0072  082A               	movf	?___awtoft+2,w
  3266  0073  00B6               	movwf	___ftmul@f2+2
  3267  0074  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3268  0079  1283               	bcf	3,5	;RP0=0, select bank0
  3269  007A  1303               	bcf	3,6	;RP1=0, select bank0
  3270  007B  0831               	movf	?___ftmul,w
  3271  007C  00C4               	movwf	___ftdiv@f1
  3272  007D  0832               	movf	?___ftmul+1,w
  3273  007E  00C5               	movwf	___ftdiv@f1+1
  3274  007F  0833               	movf	?___ftmul+2,w
  3275  0080  00C6               	movwf	___ftdiv@f1+2
  3276  0081  120A  158A  2443  120A  118A  	fcall	___ftdiv
  3277  0086  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0087  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0088  0841               	movf	?___ftdiv,w
  3280  0089  1683               	bsf	3,5	;RP0=1, select bank1
  3281  008A  1303               	bcf	3,6	;RP1=0, select bank1
  3282  008B  00A0               	movwf	CalcMQ135@voltage^(0+128)
  3283  008C  1283               	bcf	3,5	;RP0=0, select bank0
  3284  008D  1303               	bcf	3,6	;RP1=0, select bank0
  3285  008E  0842               	movf	?___ftdiv+1,w
  3286  008F  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0090  1303               	bcf	3,6	;RP1=0, select bank1
  3288  0091  00A1               	movwf	(CalcMQ135@voltage+1)^(0+128)
  3289  0092  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0093  1303               	bcf	3,6	;RP1=0, select bank0
  3291  0094  0843               	movf	?___ftdiv+2,w
  3292  0095  1683               	bsf	3,5	;RP0=1, select bank1
  3293  0096  1303               	bcf	3,6	;RP1=0, select bank1
  3294  0097  00A2               	movwf	(CalcMQ135@voltage+2)^(0+128)
  3295                           
  3296                           ;mq135_module.h: 96: float ratio = voltage / 5.0;
  3297  0098  3000               	movlw	0
  3298  0099  1283               	bcf	3,5	;RP0=0, select bank0
  3299  009A  1303               	bcf	3,6	;RP1=0, select bank0
  3300  009B  00C1               	movwf	___ftdiv@f2
  3301  009C  30A0               	movlw	160
  3302  009D  00C2               	movwf	___ftdiv@f2+1
  3303  009E  3040               	movlw	64
  3304  009F  00C3               	movwf	___ftdiv@f2+2
  3305  00A0  1683               	bsf	3,5	;RP0=1, select bank1
  3306  00A1  1303               	bcf	3,6	;RP1=0, select bank1
  3307  00A2  0820               	movf	CalcMQ135@voltage^(0+128),w
  3308  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  3309  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  3310  00A5  00C4               	movwf	___ftdiv@f1
  3311  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  3312  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  3313  00A8  0821               	movf	(CalcMQ135@voltage+1)^(0+128),w
  3314  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  3315  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  3316  00AB  00C5               	movwf	___ftdiv@f1+1
  3317  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  3318  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  3319  00AE  0822               	movf	(CalcMQ135@voltage+2)^(0+128),w
  3320  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  3321  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  3322  00B1  00C6               	movwf	___ftdiv@f1+2
  3323  00B2  120A  158A  2443  120A  118A  	fcall	___ftdiv
  3324  00B7  1283               	bcf	3,5	;RP0=0, select bank0
  3325  00B8  1303               	bcf	3,6	;RP1=0, select bank0
  3326  00B9  0841               	movf	?___ftdiv,w
  3327  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  3328  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  3329  00BC  00C4               	movwf	CalcMQ135@ratio^(0+128)
  3330  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  3331  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  3332  00BF  0842               	movf	?___ftdiv+1,w
  3333  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  3334  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  3335  00C2  00C5               	movwf	(CalcMQ135@ratio+1)^(0+128)
  3336  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  3337  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  3338  00C5  0843               	movf	?___ftdiv+2,w
  3339  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  3340  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  3341  00C8  00C6               	movwf	(CalcMQ135@ratio+2)^(0+128)
  3342                           
  3343                           ;mq135_module.h: 99: float ratio2 = ratio * ratio;
  3344  00C9  0844               	movf	CalcMQ135@ratio^(0+128),w
  3345  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  3346  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  3347  00CC  00B1               	movwf	___ftmul@f1
  3348  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  3349  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  3350  00CF  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3351  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  3352  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  3353  00D2  00B2               	movwf	___ftmul@f1+1
  3354  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  3355  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  3356  00D5  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3357  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  3358  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  3359  00D8  00B3               	movwf	___ftmul@f1+2
  3360  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  3361  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  3362  00DB  0844               	movf	CalcMQ135@ratio^(0+128),w
  3363  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  3364  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  3365  00DE  00B4               	movwf	___ftmul@f2
  3366  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  3367  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  3368  00E1  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3369  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  3370  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  3371  00E4  00B5               	movwf	___ftmul@f2+1
  3372  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  3373  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  3374  00E7  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3375  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  3376  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  3377  00EA  00B6               	movwf	___ftmul@f2+2
  3378  00EB  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3379  00F0  1283               	bcf	3,5	;RP0=0, select bank0
  3380  00F1  1303               	bcf	3,6	;RP1=0, select bank0
  3381  00F2  0831               	movf	?___ftmul,w
  3382  00F3  1683               	bsf	3,5	;RP0=1, select bank1
  3383  00F4  1303               	bcf	3,6	;RP1=0, select bank1
  3384  00F5  00B5               	movwf	CalcMQ135@ratio2^(0+128)
  3385  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  3386  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  3387  00F8  0832               	movf	?___ftmul+1,w
  3388  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  3389  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  3390  00FB  00B6               	movwf	(CalcMQ135@ratio2+1)^(0+128)
  3391  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  3392  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  3393  00FE  0833               	movf	?___ftmul+2,w
  3394  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  3395  0100  1303               	bcf	3,6	;RP1=0, select bank1
  3396  0101  00B7               	movwf	(CalcMQ135@ratio2+2)^(0+128)
  3397                           
  3398                           ;mq135_module.h: 100: float ratio3 = ratio2 * ratio;
  3399  0102  0844               	movf	CalcMQ135@ratio^(0+128),w
  3400  0103  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0104  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0105  00B1               	movwf	___ftmul@f1
  3403  0106  1683               	bsf	3,5	;RP0=1, select bank1
  3404  0107  1303               	bcf	3,6	;RP1=0, select bank1
  3405  0108  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3406  0109  1283               	bcf	3,5	;RP0=0, select bank0
  3407  010A  1303               	bcf	3,6	;RP1=0, select bank0
  3408  010B  00B2               	movwf	___ftmul@f1+1
  3409  010C  1683               	bsf	3,5	;RP0=1, select bank1
  3410  010D  1303               	bcf	3,6	;RP1=0, select bank1
  3411  010E  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3412  010F  1283               	bcf	3,5	;RP0=0, select bank0
  3413  0110  1303               	bcf	3,6	;RP1=0, select bank0
  3414  0111  00B3               	movwf	___ftmul@f1+2
  3415  0112  1683               	bsf	3,5	;RP0=1, select bank1
  3416  0113  1303               	bcf	3,6	;RP1=0, select bank1
  3417  0114  0835               	movf	CalcMQ135@ratio2^(0+128),w
  3418  0115  1283               	bcf	3,5	;RP0=0, select bank0
  3419  0116  1303               	bcf	3,6	;RP1=0, select bank0
  3420  0117  00B4               	movwf	___ftmul@f2
  3421  0118  1683               	bsf	3,5	;RP0=1, select bank1
  3422  0119  1303               	bcf	3,6	;RP1=0, select bank1
  3423  011A  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  3424  011B  1283               	bcf	3,5	;RP0=0, select bank0
  3425  011C  1303               	bcf	3,6	;RP1=0, select bank0
  3426  011D  00B5               	movwf	___ftmul@f2+1
  3427  011E  1683               	bsf	3,5	;RP0=1, select bank1
  3428  011F  1303               	bcf	3,6	;RP1=0, select bank1
  3429  0120  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  3430  0121  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0122  1303               	bcf	3,6	;RP1=0, select bank0
  3432  0123  00B6               	movwf	___ftmul@f2+2
  3433  0124  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3434  0129  1283               	bcf	3,5	;RP0=0, select bank0
  3435  012A  1303               	bcf	3,6	;RP1=0, select bank0
  3436  012B  0831               	movf	?___ftmul,w
  3437  012C  1683               	bsf	3,5	;RP0=1, select bank1
  3438  012D  1303               	bcf	3,6	;RP1=0, select bank1
  3439  012E  00B8               	movwf	CalcMQ135@ratio3^(0+128)
  3440  012F  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0130  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0131  0832               	movf	?___ftmul+1,w
  3443  0132  1683               	bsf	3,5	;RP0=1, select bank1
  3444  0133  1303               	bcf	3,6	;RP1=0, select bank1
  3445  0134  00B9               	movwf	(CalcMQ135@ratio3+1)^(0+128)
  3446  0135  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0136  1303               	bcf	3,6	;RP1=0, select bank0
  3448  0137  0833               	movf	?___ftmul+2,w
  3449  0138  1683               	bsf	3,5	;RP0=1, select bank1
  3450  0139  1303               	bcf	3,6	;RP1=0, select bank1
  3451  013A  00BA               	movwf	(CalcMQ135@ratio3+2)^(0+128)
  3452                           
  3453                           ;mq135_module.h: 101: float ratio4 = ratio3 * ratio;
  3454  013B  0844               	movf	CalcMQ135@ratio^(0+128),w
  3455  013C  1283               	bcf	3,5	;RP0=0, select bank0
  3456  013D  1303               	bcf	3,6	;RP1=0, select bank0
  3457  013E  00B1               	movwf	___ftmul@f1
  3458  013F  1683               	bsf	3,5	;RP0=1, select bank1
  3459  0140  1303               	bcf	3,6	;RP1=0, select bank1
  3460  0141  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3461  0142  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0143  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0144  00B2               	movwf	___ftmul@f1+1
  3464  0145  1683               	bsf	3,5	;RP0=1, select bank1
  3465  0146  1303               	bcf	3,6	;RP1=0, select bank1
  3466  0147  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3467  0148  1283               	bcf	3,5	;RP0=0, select bank0
  3468  0149  1303               	bcf	3,6	;RP1=0, select bank0
  3469  014A  00B3               	movwf	___ftmul@f1+2
  3470  014B  1683               	bsf	3,5	;RP0=1, select bank1
  3471  014C  1303               	bcf	3,6	;RP1=0, select bank1
  3472  014D  0838               	movf	CalcMQ135@ratio3^(0+128),w
  3473  014E  1283               	bcf	3,5	;RP0=0, select bank0
  3474  014F  1303               	bcf	3,6	;RP1=0, select bank0
  3475  0150  00B4               	movwf	___ftmul@f2
  3476  0151  1683               	bsf	3,5	;RP0=1, select bank1
  3477  0152  1303               	bcf	3,6	;RP1=0, select bank1
  3478  0153  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  3479  0154  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0155  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0156  00B5               	movwf	___ftmul@f2+1
  3482  0157  1683               	bsf	3,5	;RP0=1, select bank1
  3483  0158  1303               	bcf	3,6	;RP1=0, select bank1
  3484  0159  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  3485  015A  1283               	bcf	3,5	;RP0=0, select bank0
  3486  015B  1303               	bcf	3,6	;RP1=0, select bank0
  3487  015C  00B6               	movwf	___ftmul@f2+2
  3488  015D  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3489  0162  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0163  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0164  0831               	movf	?___ftmul,w
  3492  0165  1683               	bsf	3,5	;RP0=1, select bank1
  3493  0166  1303               	bcf	3,6	;RP1=0, select bank1
  3494  0167  00BB               	movwf	CalcMQ135@ratio4^(0+128)
  3495  0168  1283               	bcf	3,5	;RP0=0, select bank0
  3496  0169  1303               	bcf	3,6	;RP1=0, select bank0
  3497  016A  0832               	movf	?___ftmul+1,w
  3498  016B  1683               	bsf	3,5	;RP0=1, select bank1
  3499  016C  1303               	bcf	3,6	;RP1=0, select bank1
  3500  016D  00BC               	movwf	(CalcMQ135@ratio4+1)^(0+128)
  3501  016E  1283               	bcf	3,5	;RP0=0, select bank0
  3502  016F  1303               	bcf	3,6	;RP1=0, select bank0
  3503  0170  0833               	movf	?___ftmul+2,w
  3504  0171  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0172  1303               	bcf	3,6	;RP1=0, select bank1
  3506  0173  00BD               	movwf	(CalcMQ135@ratio4+2)^(0+128)
  3507                           
  3508                           ;mq135_module.h: 102: float ratio5 = ratio4 * ratio;
  3509  0174  0844               	movf	CalcMQ135@ratio^(0+128),w
  3510  0175  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0176  1303               	bcf	3,6	;RP1=0, select bank0
  3512  0177  00B1               	movwf	___ftmul@f1
  3513  0178  1683               	bsf	3,5	;RP0=1, select bank1
  3514  0179  1303               	bcf	3,6	;RP1=0, select bank1
  3515  017A  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3516  017B  1283               	bcf	3,5	;RP0=0, select bank0
  3517  017C  1303               	bcf	3,6	;RP1=0, select bank0
  3518  017D  00B2               	movwf	___ftmul@f1+1
  3519  017E  1683               	bsf	3,5	;RP0=1, select bank1
  3520  017F  1303               	bcf	3,6	;RP1=0, select bank1
  3521  0180  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3522  0181  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0182  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0183  00B3               	movwf	___ftmul@f1+2
  3525  0184  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0185  1303               	bcf	3,6	;RP1=0, select bank1
  3527  0186  083B               	movf	CalcMQ135@ratio4^(0+128),w
  3528  0187  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0188  1303               	bcf	3,6	;RP1=0, select bank0
  3530  0189  00B4               	movwf	___ftmul@f2
  3531  018A  1683               	bsf	3,5	;RP0=1, select bank1
  3532  018B  1303               	bcf	3,6	;RP1=0, select bank1
  3533  018C  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  3534  018D  1283               	bcf	3,5	;RP0=0, select bank0
  3535  018E  1303               	bcf	3,6	;RP1=0, select bank0
  3536  018F  00B5               	movwf	___ftmul@f2+1
  3537  0190  1683               	bsf	3,5	;RP0=1, select bank1
  3538  0191  1303               	bcf	3,6	;RP1=0, select bank1
  3539  0192  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  3540  0193  1283               	bcf	3,5	;RP0=0, select bank0
  3541  0194  1303               	bcf	3,6	;RP1=0, select bank0
  3542  0195  00B6               	movwf	___ftmul@f2+2
  3543  0196  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3544  019B  1283               	bcf	3,5	;RP0=0, select bank0
  3545  019C  1303               	bcf	3,6	;RP1=0, select bank0
  3546  019D  0831               	movf	?___ftmul,w
  3547  019E  1683               	bsf	3,5	;RP0=1, select bank1
  3548  019F  1303               	bcf	3,6	;RP1=0, select bank1
  3549  01A0  00BE               	movwf	CalcMQ135@ratio5^(0+128)
  3550  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  3551  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  3552  01A3  0832               	movf	?___ftmul+1,w
  3553  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  3554  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  3555  01A6  00BF               	movwf	(CalcMQ135@ratio5+1)^(0+128)
  3556  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  3557  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  3558  01A9  0833               	movf	?___ftmul+2,w
  3559  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  3560  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  3561  01AC  00C0               	movwf	(CalcMQ135@ratio5+2)^(0+128)
  3562                           
  3563                           ;mq135_module.h: 103: float ratio6 = ratio5 * ratio;
  3564  01AD  0844               	movf	CalcMQ135@ratio^(0+128),w
  3565  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  3566  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  3567  01B0  00B1               	movwf	___ftmul@f1
  3568  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  3569  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  3570  01B3  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3571  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  3572  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  3573  01B6  00B2               	movwf	___ftmul@f1+1
  3574  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  3575  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  3576  01B9  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3577  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  3578  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  3579  01BC  00B3               	movwf	___ftmul@f1+2
  3580  01BD  1683               	bsf	3,5	;RP0=1, select bank1
  3581  01BE  1303               	bcf	3,6	;RP1=0, select bank1
  3582  01BF  083E               	movf	CalcMQ135@ratio5^(0+128),w
  3583  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  3584  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  3585  01C2  00B4               	movwf	___ftmul@f2
  3586  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  3587  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  3588  01C5  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  3589  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  3590  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  3591  01C8  00B5               	movwf	___ftmul@f2+1
  3592  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  3593  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  3594  01CB  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  3595  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  3596  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  3597  01CE  00B6               	movwf	___ftmul@f2+2
  3598  01CF  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3599  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  3600  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  3601  01D6  0831               	movf	?___ftmul,w
  3602  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  3603  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  3604  01D9  00A3               	movwf	CalcMQ135@ratio6^(0+128)
  3605  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  3606  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  3607  01DC  0832               	movf	?___ftmul+1,w
  3608  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  3609  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  3610  01DF  00A4               	movwf	(CalcMQ135@ratio6+1)^(0+128)
  3611  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  3612  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  3613  01E2  0833               	movf	?___ftmul+2,w
  3614  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  3615  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  3616  01E5  00A5               	movwf	(CalcMQ135@ratio6+2)^(0+128)
  3617                           
  3618                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  3619                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  3620  01E6  309C               	movlw	156
  3621  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  3622  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  3623  01E9  00B1               	movwf	___ftmul@f1
  3624  01EA  30B2               	movlw	178
  3625  01EB  00B2               	movwf	___ftmul@f1+1
  3626  01EC  303F               	movlw	63
  3627  01ED  00B3               	movwf	___ftmul@f1+2
  3628  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  3629  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  3630  01F0  0835               	movf	CalcMQ135@ratio2^(0+128),w
  3631  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  3632  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  3633  01F3  00B4               	movwf	___ftmul@f2
  3634  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  3635  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  3636  01F6  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  3637  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3638  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3639  01F9  00B5               	movwf	___ftmul@f2+1
  3640  01FA  1683               	bsf	3,5	;RP0=1, select bank1
  3641  01FB  1303               	bcf	3,6	;RP1=0, select bank1
  3642  01FC  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  3643  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  3644  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  3645  01FF  00B6               	movwf	___ftmul@f2+2
  3646  0200  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3647  0205  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0206  1303               	bcf	3,6	;RP1=0, select bank0
  3649  0207  0831               	movf	?___ftmul,w
  3650  0208  00C1               	movwf	___ftadd@f1
  3651  0209  0832               	movf	?___ftmul+1,w
  3652  020A  00C2               	movwf	___ftadd@f1+1
  3653  020B  0833               	movf	?___ftmul+2,w
  3654  020C  00C3               	movwf	___ftadd@f1+2
  3655  020D  30A9               	movlw	169
  3656  020E  00B1               	movwf	___ftmul@f1
  3657  020F  30DE               	movlw	222
  3658  0210  00B2               	movwf	___ftmul@f1+1
  3659  0211  303C               	movlw	60
  3660  0212  00B3               	movwf	___ftmul@f1+2
  3661  0213  1683               	bsf	3,5	;RP0=1, select bank1
  3662  0214  1303               	bcf	3,6	;RP1=0, select bank1
  3663  0215  0844               	movf	CalcMQ135@ratio^(0+128),w
  3664  0216  1283               	bcf	3,5	;RP0=0, select bank0
  3665  0217  1303               	bcf	3,6	;RP1=0, select bank0
  3666  0218  00B4               	movwf	___ftmul@f2
  3667  0219  1683               	bsf	3,5	;RP0=1, select bank1
  3668  021A  1303               	bcf	3,6	;RP1=0, select bank1
  3669  021B  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3670  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3671  021D  1303               	bcf	3,6	;RP1=0, select bank0
  3672  021E  00B5               	movwf	___ftmul@f2+1
  3673  021F  1683               	bsf	3,5	;RP0=1, select bank1
  3674  0220  1303               	bcf	3,6	;RP1=0, select bank1
  3675  0221  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3676  0222  1283               	bcf	3,5	;RP0=0, select bank0
  3677  0223  1303               	bcf	3,6	;RP1=0, select bank0
  3678  0224  00B6               	movwf	___ftmul@f2+2
  3679  0225  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3680  022A  1283               	bcf	3,5	;RP0=0, select bank0
  3681  022B  1303               	bcf	3,6	;RP1=0, select bank0
  3682  022C  0831               	movf	?___ftmul,w
  3683  022D  00C4               	movwf	___ftadd@f2
  3684  022E  0832               	movf	?___ftmul+1,w
  3685  022F  00C5               	movwf	___ftadd@f2+1
  3686  0230  0833               	movf	?___ftmul+2,w
  3687  0231  00C6               	movwf	___ftadd@f2+2
  3688  0232  120A  158A  25CE  120A  118A  	fcall	___ftadd
  3689  0237  1283               	bcf	3,5	;RP0=0, select bank0
  3690  0238  1303               	bcf	3,6	;RP1=0, select bank0
  3691  0239  0841               	movf	?___ftadd,w
  3692  023A  1683               	bsf	3,5	;RP0=1, select bank1
  3693  023B  1303               	bcf	3,6	;RP1=0, select bank1
  3694  023C  00A6               	movwf	_CalcMQ135$765^(0+128)
  3695  023D  1283               	bcf	3,5	;RP0=0, select bank0
  3696  023E  1303               	bcf	3,6	;RP1=0, select bank0
  3697  023F  0842               	movf	?___ftadd+1,w
  3698  0240  1683               	bsf	3,5	;RP0=1, select bank1
  3699  0241  1303               	bcf	3,6	;RP1=0, select bank1
  3700  0242  00A7               	movwf	(_CalcMQ135$765+1)^(0+128)
  3701  0243  1283               	bcf	3,5	;RP0=0, select bank0
  3702  0244  1303               	bcf	3,6	;RP1=0, select bank0
  3703  0245  0843               	movf	?___ftadd+2,w
  3704  0246  1683               	bsf	3,5	;RP0=1, select bank1
  3705  0247  1303               	bcf	3,6	;RP1=0, select bank1
  3706  0248  00A8               	movwf	(_CalcMQ135$765+2)^(0+128)
  3707                           
  3708                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  3709                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  3710  0249  30EE               	movlw	238
  3711  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3712  024B  1303               	bcf	3,6	;RP1=0, select bank0
  3713  024C  00B1               	movwf	___ftmul@f1
  3714  024D  30EB               	movlw	235
  3715  024E  00B2               	movwf	___ftmul@f1+1
  3716  024F  303A               	movlw	58
  3717  0250  00B3               	movwf	___ftmul@f1+2
  3718  0251  1683               	bsf	3,5	;RP0=1, select bank1
  3719  0252  1303               	bcf	3,6	;RP1=0, select bank1
  3720  0253  0838               	movf	CalcMQ135@ratio3^(0+128),w
  3721  0254  1283               	bcf	3,5	;RP0=0, select bank0
  3722  0255  1303               	bcf	3,6	;RP1=0, select bank0
  3723  0256  00B4               	movwf	___ftmul@f2
  3724  0257  1683               	bsf	3,5	;RP0=1, select bank1
  3725  0258  1303               	bcf	3,6	;RP1=0, select bank1
  3726  0259  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  3727  025A  1283               	bcf	3,5	;RP0=0, select bank0
  3728  025B  1303               	bcf	3,6	;RP1=0, select bank0
  3729  025C  00B5               	movwf	___ftmul@f2+1
  3730  025D  1683               	bsf	3,5	;RP0=1, select bank1
  3731  025E  1303               	bcf	3,6	;RP1=0, select bank1
  3732  025F  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  3733  0260  1283               	bcf	3,5	;RP0=0, select bank0
  3734  0261  1303               	bcf	3,6	;RP1=0, select bank0
  3735  0262  00B6               	movwf	___ftmul@f2+2
  3736  0263  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3737  0268  1283               	bcf	3,5	;RP0=0, select bank0
  3738  0269  1303               	bcf	3,6	;RP1=0, select bank0
  3739  026A  0831               	movf	?___ftmul,w
  3740  026B  00C1               	movwf	___ftadd@f1
  3741  026C  0832               	movf	?___ftmul+1,w
  3742  026D  00C2               	movwf	___ftadd@f1+1
  3743  026E  0833               	movf	?___ftmul+2,w
  3744  026F  00C3               	movwf	___ftadd@f1+2
  3745  0270  1683               	bsf	3,5	;RP0=1, select bank1
  3746  0271  1303               	bcf	3,6	;RP1=0, select bank1
  3747  0272  0826               	movf	_CalcMQ135$765^(0+128),w
  3748  0273  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0274  1303               	bcf	3,6	;RP1=0, select bank0
  3750  0275  00C4               	movwf	___ftadd@f2
  3751  0276  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0277  1303               	bcf	3,6	;RP1=0, select bank1
  3753  0278  0827               	movf	(_CalcMQ135$765+1)^(0+128),w
  3754  0279  1283               	bcf	3,5	;RP0=0, select bank0
  3755  027A  1303               	bcf	3,6	;RP1=0, select bank0
  3756  027B  00C5               	movwf	___ftadd@f2+1
  3757  027C  1683               	bsf	3,5	;RP0=1, select bank1
  3758  027D  1303               	bcf	3,6	;RP1=0, select bank1
  3759  027E  0828               	movf	(_CalcMQ135$765+2)^(0+128),w
  3760  027F  1283               	bcf	3,5	;RP0=0, select bank0
  3761  0280  1303               	bcf	3,6	;RP1=0, select bank0
  3762  0281  00C6               	movwf	___ftadd@f2+2
  3763  0282  120A  158A  25CE  120A  118A  	fcall	___ftadd
  3764  0287  1283               	bcf	3,5	;RP0=0, select bank0
  3765  0288  1303               	bcf	3,6	;RP1=0, select bank0
  3766  0289  0841               	movf	?___ftadd,w
  3767  028A  1683               	bsf	3,5	;RP0=1, select bank1
  3768  028B  1303               	bcf	3,6	;RP1=0, select bank1
  3769  028C  00A9               	movwf	_CalcMQ135$766^(0+128)
  3770  028D  1283               	bcf	3,5	;RP0=0, select bank0
  3771  028E  1303               	bcf	3,6	;RP1=0, select bank0
  3772  028F  0842               	movf	?___ftadd+1,w
  3773  0290  1683               	bsf	3,5	;RP0=1, select bank1
  3774  0291  1303               	bcf	3,6	;RP1=0, select bank1
  3775  0292  00AA               	movwf	(_CalcMQ135$766+1)^(0+128)
  3776  0293  1283               	bcf	3,5	;RP0=0, select bank0
  3777  0294  1303               	bcf	3,6	;RP1=0, select bank0
  3778  0295  0843               	movf	?___ftadd+2,w
  3779  0296  1683               	bsf	3,5	;RP0=1, select bank1
  3780  0297  1303               	bcf	3,6	;RP1=0, select bank1
  3781  0298  00AB               	movwf	(_CalcMQ135$766+2)^(0+128)
  3782                           
  3783                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  3784                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  3785  0299  3074               	movlw	116
  3786  029A  1283               	bcf	3,5	;RP0=0, select bank0
  3787  029B  1303               	bcf	3,6	;RP1=0, select bank0
  3788  029C  00B1               	movwf	___ftmul@f1
  3789  029D  305A               	movlw	90
  3790  029E  00B2               	movwf	___ftmul@f1+1
  3791  029F  30BB               	movlw	187
  3792  02A0  00B3               	movwf	___ftmul@f1+2
  3793  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  3794  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  3795  02A3  083B               	movf	CalcMQ135@ratio4^(0+128),w
  3796  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  3797  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  3798  02A6  00B4               	movwf	___ftmul@f2
  3799  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  3800  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  3801  02A9  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  3802  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3803  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  3804  02AC  00B5               	movwf	___ftmul@f2+1
  3805  02AD  1683               	bsf	3,5	;RP0=1, select bank1
  3806  02AE  1303               	bcf	3,6	;RP1=0, select bank1
  3807  02AF  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  3808  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  3809  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  3810  02B2  00B6               	movwf	___ftmul@f2+2
  3811  02B3  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3812  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  3813  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  3814  02BA  0831               	movf	?___ftmul,w
  3815  02BB  00C1               	movwf	___ftadd@f1
  3816  02BC  0832               	movf	?___ftmul+1,w
  3817  02BD  00C2               	movwf	___ftadd@f1+1
  3818  02BE  0833               	movf	?___ftmul+2,w
  3819  02BF  00C3               	movwf	___ftadd@f1+2
  3820  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  3821  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  3822  02C2  0829               	movf	_CalcMQ135$766^(0+128),w
  3823  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  3824  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  3825  02C5  00C4               	movwf	___ftadd@f2
  3826  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  3827  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  3828  02C8  082A               	movf	(_CalcMQ135$766+1)^(0+128),w
  3829  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  3830  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  3831  02CB  00C5               	movwf	___ftadd@f2+1
  3832  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  3833  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  3834  02CE  082B               	movf	(_CalcMQ135$766+2)^(0+128),w
  3835  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  3836  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  3837  02D1  00C6               	movwf	___ftadd@f2+2
  3838  02D2  120A  158A  25CE  120A  118A  	fcall	___ftadd
  3839  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  3840  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  3841  02D9  0841               	movf	?___ftadd,w
  3842  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  3843  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  3844  02DC  00AC               	movwf	_CalcMQ135$767^(0+128)
  3845  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  3846  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  3847  02DF  0842               	movf	?___ftadd+1,w
  3848  02E0  1683               	bsf	3,5	;RP0=1, select bank1
  3849  02E1  1303               	bcf	3,6	;RP1=0, select bank1
  3850  02E2  00AD               	movwf	(_CalcMQ135$767+1)^(0+128)
  3851  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  3852  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  3853  02E5  0843               	movf	?___ftadd+2,w
  3854  02E6  1683               	bsf	3,5	;RP0=1, select bank1
  3855  02E7  1303               	bcf	3,6	;RP1=0, select bank1
  3856  02E8  00AE               	movwf	(_CalcMQ135$767+2)^(0+128)
  3857                           
  3858                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  3859                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  3860  02E9  3010               	movlw	16
  3861  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  3862  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  3863  02EC  00B1               	movwf	___ftmul@f1
  3864  02ED  30FC               	movlw	252
  3865  02EE  00B2               	movwf	___ftmul@f1+1
  3866  02EF  30BA               	movlw	186
  3867  02F0  00B3               	movwf	___ftmul@f1+2
  3868  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  3869  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  3870  02F3  083E               	movf	CalcMQ135@ratio5^(0+128),w
  3871  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  3872  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  3873  02F6  00B4               	movwf	___ftmul@f2
  3874  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  3875  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  3876  02F9  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  3877  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  3878  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  3879  02FC  00B5               	movwf	___ftmul@f2+1
  3880  02FD  1683               	bsf	3,5	;RP0=1, select bank1
  3881  02FE  1303               	bcf	3,6	;RP1=0, select bank1
  3882  02FF  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  3883  0300  1283               	bcf	3,5	;RP0=0, select bank0
  3884  0301  1303               	bcf	3,6	;RP1=0, select bank0
  3885  0302  00B6               	movwf	___ftmul@f2+2
  3886  0303  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3887  0308  1283               	bcf	3,5	;RP0=0, select bank0
  3888  0309  1303               	bcf	3,6	;RP1=0, select bank0
  3889  030A  0831               	movf	?___ftmul,w
  3890  030B  00C1               	movwf	___ftadd@f1
  3891  030C  0832               	movf	?___ftmul+1,w
  3892  030D  00C2               	movwf	___ftadd@f1+1
  3893  030E  0833               	movf	?___ftmul+2,w
  3894  030F  00C3               	movwf	___ftadd@f1+2
  3895  0310  1683               	bsf	3,5	;RP0=1, select bank1
  3896  0311  1303               	bcf	3,6	;RP1=0, select bank1
  3897  0312  082C               	movf	_CalcMQ135$767^(0+128),w
  3898  0313  1283               	bcf	3,5	;RP0=0, select bank0
  3899  0314  1303               	bcf	3,6	;RP1=0, select bank0
  3900  0315  00C4               	movwf	___ftadd@f2
  3901  0316  1683               	bsf	3,5	;RP0=1, select bank1
  3902  0317  1303               	bcf	3,6	;RP1=0, select bank1
  3903  0318  082D               	movf	(_CalcMQ135$767+1)^(0+128),w
  3904  0319  1283               	bcf	3,5	;RP0=0, select bank0
  3905  031A  1303               	bcf	3,6	;RP1=0, select bank0
  3906  031B  00C5               	movwf	___ftadd@f2+1
  3907  031C  1683               	bsf	3,5	;RP0=1, select bank1
  3908  031D  1303               	bcf	3,6	;RP1=0, select bank1
  3909  031E  082E               	movf	(_CalcMQ135$767+2)^(0+128),w
  3910  031F  1283               	bcf	3,5	;RP0=0, select bank0
  3911  0320  1303               	bcf	3,6	;RP1=0, select bank0
  3912  0321  00C6               	movwf	___ftadd@f2+2
  3913  0322  120A  158A  25CE  120A  118A  	fcall	___ftadd
  3914  0327  1283               	bcf	3,5	;RP0=0, select bank0
  3915  0328  1303               	bcf	3,6	;RP1=0, select bank0
  3916  0329  0841               	movf	?___ftadd,w
  3917  032A  1683               	bsf	3,5	;RP0=1, select bank1
  3918  032B  1303               	bcf	3,6	;RP1=0, select bank1
  3919  032C  00AF               	movwf	_CalcMQ135$768^(0+128)
  3920  032D  1283               	bcf	3,5	;RP0=0, select bank0
  3921  032E  1303               	bcf	3,6	;RP1=0, select bank0
  3922  032F  0842               	movf	?___ftadd+1,w
  3923  0330  1683               	bsf	3,5	;RP0=1, select bank1
  3924  0331  1303               	bcf	3,6	;RP1=0, select bank1
  3925  0332  00B0               	movwf	(_CalcMQ135$768+1)^(0+128)
  3926  0333  1283               	bcf	3,5	;RP0=0, select bank0
  3927  0334  1303               	bcf	3,6	;RP1=0, select bank0
  3928  0335  0843               	movf	?___ftadd+2,w
  3929  0336  1683               	bsf	3,5	;RP0=1, select bank1
  3930  0337  1303               	bcf	3,6	;RP1=0, select bank1
  3931  0338  00B1               	movwf	(_CalcMQ135$768+2)^(0+128)
  3932                           
  3933                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  3934                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  3935  0339  30A8               	movlw	168
  3936  033A  1283               	bcf	3,5	;RP0=0, select bank0
  3937  033B  1303               	bcf	3,6	;RP1=0, select bank0
  3938  033C  00B1               	movwf	___ftmul@f1
  3939  033D  3090               	movlw	144
  3940  033E  00B2               	movwf	___ftmul@f1+1
  3941  033F  303F               	movlw	63
  3942  0340  00B3               	movwf	___ftmul@f1+2
  3943  0341  1683               	bsf	3,5	;RP0=1, select bank1
  3944  0342  1303               	bcf	3,6	;RP1=0, select bank1
  3945  0343  0823               	movf	CalcMQ135@ratio6^(0+128),w
  3946  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3947  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3948  0346  00B4               	movwf	___ftmul@f2
  3949  0347  1683               	bsf	3,5	;RP0=1, select bank1
  3950  0348  1303               	bcf	3,6	;RP1=0, select bank1
  3951  0349  0824               	movf	(CalcMQ135@ratio6+1)^(0+128),w
  3952  034A  1283               	bcf	3,5	;RP0=0, select bank0
  3953  034B  1303               	bcf	3,6	;RP1=0, select bank0
  3954  034C  00B5               	movwf	___ftmul@f2+1
  3955  034D  1683               	bsf	3,5	;RP0=1, select bank1
  3956  034E  1303               	bcf	3,6	;RP1=0, select bank1
  3957  034F  0825               	movf	(CalcMQ135@ratio6+2)^(0+128),w
  3958  0350  1283               	bcf	3,5	;RP0=0, select bank0
  3959  0351  1303               	bcf	3,6	;RP1=0, select bank0
  3960  0352  00B6               	movwf	___ftmul@f2+2
  3961  0353  120A  158A  24FB  120A  118A  	fcall	___ftmul
  3962  0358  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0359  1303               	bcf	3,6	;RP1=0, select bank0
  3964  035A  0831               	movf	?___ftmul,w
  3965  035B  00C1               	movwf	___ftadd@f1
  3966  035C  0832               	movf	?___ftmul+1,w
  3967  035D  00C2               	movwf	___ftadd@f1+1
  3968  035E  0833               	movf	?___ftmul+2,w
  3969  035F  00C3               	movwf	___ftadd@f1+2
  3970  0360  1683               	bsf	3,5	;RP0=1, select bank1
  3971  0361  1303               	bcf	3,6	;RP1=0, select bank1
  3972  0362  082F               	movf	_CalcMQ135$768^(0+128),w
  3973  0363  1283               	bcf	3,5	;RP0=0, select bank0
  3974  0364  1303               	bcf	3,6	;RP1=0, select bank0
  3975  0365  00C4               	movwf	___ftadd@f2
  3976  0366  1683               	bsf	3,5	;RP0=1, select bank1
  3977  0367  1303               	bcf	3,6	;RP1=0, select bank1
  3978  0368  0830               	movf	(_CalcMQ135$768+1)^(0+128),w
  3979  0369  1283               	bcf	3,5	;RP0=0, select bank0
  3980  036A  1303               	bcf	3,6	;RP1=0, select bank0
  3981  036B  00C5               	movwf	___ftadd@f2+1
  3982  036C  1683               	bsf	3,5	;RP0=1, select bank1
  3983  036D  1303               	bcf	3,6	;RP1=0, select bank1
  3984  036E  0831               	movf	(_CalcMQ135$768+2)^(0+128),w
  3985  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0371  00C6               	movwf	___ftadd@f2+2
  3988  0372  120A  158A  25CE  120A  118A  	fcall	___ftadd
  3989  0377  1283               	bcf	3,5	;RP0=0, select bank0
  3990  0378  1303               	bcf	3,6	;RP1=0, select bank0
  3991  0379  0841               	movf	?___ftadd,w
  3992  037A  1683               	bsf	3,5	;RP0=1, select bank1
  3993  037B  1303               	bcf	3,6	;RP1=0, select bank1
  3994  037C  00B2               	movwf	_CalcMQ135$769^(0+128)
  3995  037D  1283               	bcf	3,5	;RP0=0, select bank0
  3996  037E  1303               	bcf	3,6	;RP1=0, select bank0
  3997  037F  0842               	movf	?___ftadd+1,w
  3998  0380  1683               	bsf	3,5	;RP0=1, select bank1
  3999  0381  1303               	bcf	3,6	;RP1=0, select bank1
  4000  0382  00B3               	movwf	(_CalcMQ135$769+1)^(0+128)
  4001  0383  1283               	bcf	3,5	;RP0=0, select bank0
  4002  0384  1303               	bcf	3,6	;RP1=0, select bank0
  4003  0385  0843               	movf	?___ftadd+2,w
  4004  0386  1683               	bsf	3,5	;RP0=1, select bank1
  4005  0387  1303               	bcf	3,6	;RP1=0, select bank1
  4006  0388  00B4               	movwf	(_CalcMQ135$769+2)^(0+128)
  4007                           
  4008                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  4009                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  4010  0389  3080               	movlw	128
  4011  038A  1283               	bcf	3,5	;RP0=0, select bank0
  4012  038B  1303               	bcf	3,6	;RP1=0, select bank0
  4013  038C  00C1               	movwf	___ftadd@f1
  4014  038D  30B7               	movlw	183
  4015  038E  00C2               	movwf	___ftadd@f1+1
  4016  038F  3039               	movlw	57
  4017  0390  00C3               	movwf	___ftadd@f1+2
  4018  0391  1683               	bsf	3,5	;RP0=1, select bank1
  4019  0392  1303               	bcf	3,6	;RP1=0, select bank1
  4020  0393  0832               	movf	_CalcMQ135$769^(0+128),w
  4021  0394  1283               	bcf	3,5	;RP0=0, select bank0
  4022  0395  1303               	bcf	3,6	;RP1=0, select bank0
  4023  0396  00C4               	movwf	___ftadd@f2
  4024  0397  1683               	bsf	3,5	;RP0=1, select bank1
  4025  0398  1303               	bcf	3,6	;RP1=0, select bank1
  4026  0399  0833               	movf	(_CalcMQ135$769+1)^(0+128),w
  4027  039A  1283               	bcf	3,5	;RP0=0, select bank0
  4028  039B  1303               	bcf	3,6	;RP1=0, select bank0
  4029  039C  00C5               	movwf	___ftadd@f2+1
  4030  039D  1683               	bsf	3,5	;RP0=1, select bank1
  4031  039E  1303               	bcf	3,6	;RP1=0, select bank1
  4032  039F  0834               	movf	(_CalcMQ135$769+2)^(0+128),w
  4033  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  4034  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  4035  03A2  00C6               	movwf	___ftadd@f2+2
  4036  03A3  120A  158A  25CE  120A  118A  	fcall	___ftadd
  4037  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  4038  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  4039  03AA  0841               	movf	?___ftadd,w
  4040  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  4041  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  4042  03AD  00C1               	movwf	CalcMQ135@co2^(0+128)
  4043  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  4044  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  4045  03B0  0842               	movf	?___ftadd+1,w
  4046  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  4047  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  4048  03B3  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  4049  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  4050  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  4051  03B6  0843               	movf	?___ftadd+2,w
  4052  03B7  1683               	bsf	3,5	;RP0=1, select bank1
  4053  03B8  1303               	bcf	3,6	;RP1=0, select bank1
  4054  03B9  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  4055                           
  4056                           ;mq135_module.h: 109: co2 *= 415.58;
  4057  03BA  30CA               	movlw	202
  4058  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  4059  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  4060  03BD  00B1               	movwf	___ftmul@f1
  4061  03BE  30CF               	movlw	207
  4062  03BF  00B2               	movwf	___ftmul@f1+1
  4063  03C0  3043               	movlw	67
  4064  03C1  00B3               	movwf	___ftmul@f1+2
  4065  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  4066  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  4067  03C4  0841               	movf	CalcMQ135@co2^(0+128),w
  4068  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  4069  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  4070  03C7  00B4               	movwf	___ftmul@f2
  4071  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  4072  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  4073  03CA  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  4074  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  4075  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  4076  03CD  00B5               	movwf	___ftmul@f2+1
  4077  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  4078  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  4079  03D0  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  4080  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  4081  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  4082  03D3  00B6               	movwf	___ftmul@f2+2
  4083  03D4  120A  158A  24FB   	fcall	___ftmul
  4084  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  4085  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  4086  03D9  0831               	movf	?___ftmul,w
  4087  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  4088  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  4089  03DC  00C1               	movwf	CalcMQ135@co2^(0+128)
  4090  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  4091  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  4092  03DF  0832               	movf	?___ftmul+1,w
  4093  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  4094  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  4095  03E2  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  4096  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  4097  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  4098  03E5  0833               	movf	?___ftmul+2,w
  4099  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  4100  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  4101  03E8  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  4102                           
  4103                           ;mq135_module.h: 110: return co2;
  4104  03E9  0841               	movf	CalcMQ135@co2^(0+128),w
  4105  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  4106  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  4107  03EC  00D1               	movwf	?_CalcMQ135
  4108  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  4109  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  4110  03EF  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  4111  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  4112  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  4113  03F2  00D2               	movwf	?_CalcMQ135+1
  4114  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  4115  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  4116  03F5  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  4117  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  4118  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  4119  03F8  00D3               	movwf	?_CalcMQ135+2
  4120  03F9  0008               	return
  4121  03FA                     __end_of_CalcMQ135:	
  4122                           
  4123                           	psect	text12
  4124  0C43                     __ptext12:	
  4125 ;; *************** function ___ftdiv *****************
  4126 ;; Defined at:
  4127 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  f2              3   33[BANK0 ] float 
  4130 ;;  f1              3   36[BANK0 ] float 
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  f3              3   44[BANK0 ] float 
  4133 ;;  sign            1   48[BANK0 ] unsigned char 
  4134 ;;  exp             1   47[BANK0 ] unsigned char 
  4135 ;;  cntr            1   43[BANK0 ] unsigned char 
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  3   33[BANK0 ] float 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2, status,0, pclath, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4145 ;;      Params:         0       6       0       0       0
  4146 ;;      Locals:         0       6       0       0       0
  4147 ;;      Temps:          0       4       0       0       0
  4148 ;;      Totals:         0      16       0       0       0
  4149 ;;Total ram usage:       16 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    3
  4152 ;; This function calls:
  4153 ;;		___ftpack
  4154 ;; This function is called by:
  4155 ;;		_CalcMQ135
  4156 ;; This function uses a non-reentrant model
  4157 ;;
  4158                           
  4159                           
  4160                           ;psect for function ___ftdiv
  4161  0C43                     ___ftdiv:	
  4162                           
  4163                           ;incstack = 0
  4164                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4165  0C43  1283               	bcf	3,5	;RP0=0, select bank0
  4166  0C44  1303               	bcf	3,6	;RP1=0, select bank0
  4167  0C45  0844               	movf	___ftdiv@f1,w
  4168  0C46  00C7               	movwf	??___ftdiv
  4169  0C47  0845               	movf	___ftdiv@f1+1,w
  4170  0C48  00C8               	movwf	??___ftdiv+1
  4171  0C49  0846               	movf	___ftdiv@f1+2,w
  4172  0C4A  00C9               	movwf	??___ftdiv+2
  4173  0C4B  1003               	clrc
  4174  0C4C  0D48               	rlf	??___ftdiv+1,w
  4175  0C4D  0D49               	rlf	??___ftdiv+2,w
  4176  0C4E  00CA               	movwf	??___ftdiv+3
  4177  0C4F  084A               	movf	??___ftdiv+3,w
  4178  0C50  00CF               	movwf	___ftdiv@exp
  4179  0C51  08CF               	movf	___ftdiv@exp,f
  4180  0C52  1D03               	skipz
  4181  0C53  2C5B               	goto	l2135
  4182  0C54  3000               	movlw	0
  4183  0C55  00C1               	movwf	?___ftdiv
  4184  0C56  3000               	movlw	0
  4185  0C57  00C2               	movwf	?___ftdiv+1
  4186  0C58  3000               	movlw	0
  4187  0C59  00C3               	movwf	?___ftdiv+2
  4188  0C5A  0008               	return
  4189  0C5B                     l2135:	
  4190  0C5B  0841               	movf	___ftdiv@f2,w
  4191  0C5C  00C7               	movwf	??___ftdiv
  4192  0C5D  0842               	movf	___ftdiv@f2+1,w
  4193  0C5E  00C8               	movwf	??___ftdiv+1
  4194  0C5F  0843               	movf	___ftdiv@f2+2,w
  4195  0C60  00C9               	movwf	??___ftdiv+2
  4196  0C61  1003               	clrc
  4197  0C62  0D48               	rlf	??___ftdiv+1,w
  4198  0C63  0D49               	rlf	??___ftdiv+2,w
  4199  0C64  00CA               	movwf	??___ftdiv+3
  4200  0C65  084A               	movf	??___ftdiv+3,w
  4201  0C66  00D0               	movwf	___ftdiv@sign
  4202  0C67  08D0               	movf	___ftdiv@sign,f
  4203  0C68  1D03               	skipz
  4204  0C69  2C71               	goto	l2141
  4205  0C6A  3000               	movlw	0
  4206  0C6B  00C1               	movwf	?___ftdiv
  4207  0C6C  3000               	movlw	0
  4208  0C6D  00C2               	movwf	?___ftdiv+1
  4209  0C6E  3000               	movlw	0
  4210  0C6F  00C3               	movwf	?___ftdiv+2
  4211  0C70  0008               	return
  4212  0C71                     l2141:	
  4213  0C71  3000               	movlw	0
  4214  0C72  00CC               	movwf	___ftdiv@f3
  4215  0C73  3000               	movlw	0
  4216  0C74  00CD               	movwf	___ftdiv@f3+1
  4217  0C75  3000               	movlw	0
  4218  0C76  00CE               	movwf	___ftdiv@f3+2
  4219  0C77  3089               	movlw	137
  4220  0C78  0750               	addwf	___ftdiv@sign,w
  4221  0C79  00C7               	movwf	??___ftdiv
  4222  0C7A  0847               	movf	??___ftdiv,w
  4223  0C7B  02CF               	subwf	___ftdiv@exp,f
  4224  0C7C  0844               	movf	___ftdiv@f1,w
  4225  0C7D  00C7               	movwf	??___ftdiv
  4226  0C7E  0845               	movf	___ftdiv@f1+1,w
  4227  0C7F  00C8               	movwf	??___ftdiv+1
  4228  0C80  0846               	movf	___ftdiv@f1+2,w
  4229  0C81  00C9               	movwf	??___ftdiv+2
  4230  0C82  3010               	movlw	16
  4231  0C83                     u2595:	
  4232  0C83  1003               	clrc
  4233  0C84  0CC9               	rrf	??___ftdiv+2,f
  4234  0C85  0CC8               	rrf	??___ftdiv+1,f
  4235  0C86  0CC7               	rrf	??___ftdiv,f
  4236  0C87  3EFF               	addlw	-1
  4237  0C88  1D03               	skipz
  4238  0C89  2C83               	goto	u2595
  4239  0C8A  0847               	movf	??___ftdiv,w
  4240  0C8B  00CA               	movwf	??___ftdiv+3
  4241  0C8C  084A               	movf	??___ftdiv+3,w
  4242  0C8D  00D0               	movwf	___ftdiv@sign
  4243  0C8E  0841               	movf	___ftdiv@f2,w
  4244  0C8F  00C7               	movwf	??___ftdiv
  4245  0C90  0842               	movf	___ftdiv@f2+1,w
  4246  0C91  00C8               	movwf	??___ftdiv+1
  4247  0C92  0843               	movf	___ftdiv@f2+2,w
  4248  0C93  00C9               	movwf	??___ftdiv+2
  4249  0C94  3010               	movlw	16
  4250  0C95                     u2605:	
  4251  0C95  1003               	clrc
  4252  0C96  0CC9               	rrf	??___ftdiv+2,f
  4253  0C97  0CC8               	rrf	??___ftdiv+1,f
  4254  0C98  0CC7               	rrf	??___ftdiv,f
  4255  0C99  3EFF               	addlw	-1
  4256  0C9A  1D03               	skipz
  4257  0C9B  2C95               	goto	u2605
  4258  0C9C  0847               	movf	??___ftdiv,w
  4259  0C9D  00CA               	movwf	??___ftdiv+3
  4260  0C9E  084A               	movf	??___ftdiv+3,w
  4261  0C9F  06D0               	xorwf	___ftdiv@sign,f
  4262  0CA0  3080               	movlw	128
  4263  0CA1  00C7               	movwf	??___ftdiv
  4264  0CA2  0847               	movf	??___ftdiv,w
  4265  0CA3  05D0               	andwf	___ftdiv@sign,f
  4266  0CA4  17C5               	bsf	___ftdiv@f1+1,7
  4267  0CA5  30FF               	movlw	255
  4268  0CA6  05C4               	andwf	___ftdiv@f1,f
  4269  0CA7  30FF               	movlw	255
  4270  0CA8  05C5               	andwf	___ftdiv@f1+1,f
  4271  0CA9  3000               	movlw	0
  4272  0CAA  05C6               	andwf	___ftdiv@f1+2,f
  4273  0CAB  17C2               	bsf	___ftdiv@f2+1,7
  4274  0CAC  30FF               	movlw	255
  4275  0CAD  05C1               	andwf	___ftdiv@f2,f
  4276  0CAE  30FF               	movlw	255
  4277  0CAF  05C2               	andwf	___ftdiv@f2+1,f
  4278  0CB0  3000               	movlw	0
  4279  0CB1  05C3               	andwf	___ftdiv@f2+2,f
  4280  0CB2  3018               	movlw	24
  4281  0CB3  00C7               	movwf	??___ftdiv
  4282  0CB4  0847               	movf	??___ftdiv,w
  4283  0CB5  00CB               	movwf	___ftdiv@cntr
  4284  0CB6                     l2155:	
  4285  0CB6  3001               	movlw	1
  4286  0CB7                     u2615:	
  4287  0CB7  1003               	clrc
  4288  0CB8  0DCC               	rlf	___ftdiv@f3,f
  4289  0CB9  0DCD               	rlf	___ftdiv@f3+1,f
  4290  0CBA  0DCE               	rlf	___ftdiv@f3+2,f
  4291  0CBB  3EFF               	addlw	-1
  4292  0CBC  1D03               	skipz
  4293  0CBD  2CB7               	goto	u2615
  4294  0CBE  0843               	movf	___ftdiv@f2+2,w
  4295  0CBF  0246               	subwf	___ftdiv@f1+2,w
  4296  0CC0  1D03               	skipz
  4297  0CC1  2CC8               	goto	u2625
  4298  0CC2  0842               	movf	___ftdiv@f2+1,w
  4299  0CC3  0245               	subwf	___ftdiv@f1+1,w
  4300  0CC4  1D03               	skipz
  4301  0CC5  2CC8               	goto	u2625
  4302  0CC6  0841               	movf	___ftdiv@f2,w
  4303  0CC7  0244               	subwf	___ftdiv@f1,w
  4304  0CC8                     u2625:	
  4305  0CC8  1C03               	skipc
  4306  0CC9  2CD5               	goto	l2163
  4307  0CCA  0841               	movf	___ftdiv@f2,w
  4308  0CCB  02C4               	subwf	___ftdiv@f1,f
  4309  0CCC  0842               	movf	___ftdiv@f2+1,w
  4310  0CCD  1C03               	skipc
  4311  0CCE  0F42               	incfsz	___ftdiv@f2+1,w
  4312  0CCF  02C5               	subwf	___ftdiv@f1+1,f
  4313  0CD0  0843               	movf	___ftdiv@f2+2,w
  4314  0CD1  1C03               	skipc
  4315  0CD2  0A43               	incf	___ftdiv@f2+2,w
  4316  0CD3  02C6               	subwf	___ftdiv@f1+2,f
  4317  0CD4  144C               	bsf	___ftdiv@f3,0
  4318  0CD5                     l2163:	
  4319  0CD5  3001               	movlw	1
  4320  0CD6                     u2635:	
  4321  0CD6  1003               	clrc
  4322  0CD7  0DC4               	rlf	___ftdiv@f1,f
  4323  0CD8  0DC5               	rlf	___ftdiv@f1+1,f
  4324  0CD9  0DC6               	rlf	___ftdiv@f1+2,f
  4325  0CDA  3EFF               	addlw	-1
  4326  0CDB  1D03               	skipz
  4327  0CDC  2CD6               	goto	u2635
  4328  0CDD  3001               	movlw	1
  4329  0CDE  02CB               	subwf	___ftdiv@cntr,f
  4330  0CDF  1D03               	btfss	3,2
  4331  0CE0  2CB6               	goto	l2155
  4332  0CE1  084C               	movf	___ftdiv@f3,w
  4333  0CE2  00A0               	movwf	___ftpack@arg
  4334  0CE3  084D               	movf	___ftdiv@f3+1,w
  4335  0CE4  00A1               	movwf	___ftpack@arg+1
  4336  0CE5  084E               	movf	___ftdiv@f3+2,w
  4337  0CE6  00A2               	movwf	___ftpack@arg+2
  4338  0CE7  084F               	movf	___ftdiv@exp,w
  4339  0CE8  00C7               	movwf	??___ftdiv
  4340  0CE9  0847               	movf	??___ftdiv,w
  4341  0CEA  00A3               	movwf	___ftpack@exp
  4342  0CEB  0850               	movf	___ftdiv@sign,w
  4343  0CEC  00C8               	movwf	??___ftdiv+1
  4344  0CED  0848               	movf	??___ftdiv+1,w
  4345  0CEE  00A4               	movwf	___ftpack@sign
  4346  0CEF  120A  118A  2795   	fcall	___ftpack
  4347  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  4348  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  4349  0CF4  0820               	movf	?___ftpack,w
  4350  0CF5  00C1               	movwf	?___ftdiv
  4351  0CF6  0821               	movf	?___ftpack+1,w
  4352  0CF7  00C2               	movwf	?___ftdiv+1
  4353  0CF8  0822               	movf	?___ftpack+2,w
  4354  0CF9  00C3               	movwf	?___ftdiv+2
  4355  0CFA  0008               	return
  4356  0CFB                     __end_of___ftdiv:	
  4357                           
  4358                           	psect	text13
  4359  1519                     __ptext13:	
  4360 ;; *************** function _runDHT11 *****************
  4361 ;; Defined at:
  4362 ;;		line 94 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;		None
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;		None
  4367 ;; Return value:  Size  Location     Type
  4368 ;;		None               void
  4369 ;; Registers used:
  4370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4376 ;;      Params:         0       0       0       0       0
  4377 ;;      Locals:         0       0       0       0       0
  4378 ;;      Temps:          0       3       0       0       0
  4379 ;;      Totals:         0       3       0       0       0
  4380 ;;Total ram usage:        3 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    4
  4383 ;; This function calls:
  4384 ;;		_instCTRL
  4385 ;;		_printToLCD
  4386 ;;		_readDHT11
  4387 ;; This function is called by:
  4388 ;;		_main
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           
  4393                           ;psect for function _runDHT11
  4394  1519                     _runDHT11:	
  4395                           
  4396                           ;dht11_module.h: 96: if (readDHT11(&temperature, &humidity))
  4397                           
  4398                           ;incstack = 0
  4399                           ; Regs used in _runDHT11: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4400  1519  307C               	movlw	_humidity& (0+255)
  4401  151A  1283               	bcf	3,5	;RP0=0, select bank0
  4402  151B  1303               	bcf	3,6	;RP1=0, select bank0
  4403  151C  00AF               	movwf	??_runDHT11
  4404  151D  082F               	movf	??_runDHT11,w
  4405  151E  00A0               	movwf	readDHT11@humidity
  4406  151F  307D               	movlw	_temperature& (0+255)
  4407  1520  120A  158A  2393  160A  118A  	fcall	_readDHT11
  4408  1525  3A00               	xorlw	0
  4409  1526  1D03               	btfss	3,2
  4410  1527  2D3F               	goto	l2659
  4411                           
  4412                           ;dht11_module.h: 100: else
  4413                           ;dht11_module.h: 101: {
  4414                           ;dht11_module.h: 102: instCTRL(0x80);
  4415                           
  4416                           ;dht11_module.h: 97: {
  4417                           ;dht11_module.h: 99: }
  4418  1528  3080               	movlw	128
  4419  1529  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  4420                           
  4421                           ;dht11_module.h: 103: instCTRL(0x0C);
  4422  152E  300C               	movlw	12
  4423  152F  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  4424                           
  4425                           ;dht11_module.h: 104: printToLCD("ERROR!");
  4426  1534  30DC               	movlw	low (STR_3-__stringbase)
  4427  1535  1283               	bcf	3,5	;RP0=0, select bank0
  4428  1536  1303               	bcf	3,6	;RP1=0, select bank0
  4429  1537  00A2               	movwf	printToLCD@str
  4430  1538  3080               	movlw	128
  4431  1539  00A3               	movwf	printToLCD@str+1
  4432  153A  160A  118A  2454  160A  118A  	fcall	_printToLCD
  4433  153F                     l2659:	
  4434                           
  4435                           ;dht11_module.h: 105: }
  4436                           ;dht11_module.h: 106: _delay((unsigned long)((500)*(4000000/4000.0)));
  4437  153F  3003               	movlw	3
  4438  1540  1283               	bcf	3,5	;RP0=0, select bank0
  4439  1541  1303               	bcf	3,6	;RP1=0, select bank0
  4440  1542  00B1               	movwf	??_runDHT11+2
  4441  1543  308A               	movlw	138
  4442  1544  00B0               	movwf	??_runDHT11+1
  4443  1545  3056               	movlw	86
  4444  1546  00AF               	movwf	??_runDHT11
  4445  1547                     u4417:	
  4446  1547  0BAF               	decfsz	??_runDHT11,f
  4447  1548  2D47               	goto	u4417
  4448  1549  0BB0               	decfsz	??_runDHT11+1,f
  4449  154A  2D47               	goto	u4417
  4450  154B  0BB1               	decfsz	??_runDHT11+2,f
  4451  154C  2D47               	goto	u4417
  4452  154D  2D4E               	nop2
  4453  154E  0008               	return
  4454  154F                     __end_of_runDHT11:	
  4455                           
  4456                           	psect	text14
  4457  0B93                     __ptext14:	
  4458 ;; *************** function _readDHT11 *****************
  4459 ;; Defined at:
  4460 ;;		line 27 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  temperature     1    wreg     PTR unsigned char 
  4463 ;;		 -> temperature(1), 
  4464 ;;  humidity        1    0[BANK0 ] PTR unsigned char 
  4465 ;;		 -> humidity(1), 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  temperature     1    7[BANK0 ] PTR unsigned char 
  4468 ;;		 -> temperature(1), 
  4469 ;;  bits            5    8[BANK0 ] unsigned char [5]
  4470 ;;  j               1   14[BANK0 ] unsigned char 
  4471 ;;  i               1   13[BANK0 ] unsigned char 
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  1    wreg      unsigned char 
  4474 ;; Registers used:
  4475 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4481 ;;      Params:         0       1       0       0       0
  4482 ;;      Locals:         0       8       0       0       0
  4483 ;;      Temps:          0       6       0       0       0
  4484 ;;      Totals:         0      15       0       0       0
  4485 ;;Total ram usage:       15 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    2
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_runDHT11
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           
  4496                           ;psect for function _readDHT11
  4497  0B93                     _readDHT11:	
  4498                           
  4499                           ;incstack = 0
  4500                           ; Regs used in _readDHT11: [wreg-fsr0h+status,2+status,0]
  4501                           ;readDHT11@temperature stored from wreg
  4502  0B93  1283               	bcf	3,5	;RP0=0, select bank0
  4503  0B94  1303               	bcf	3,6	;RP1=0, select bank0
  4504  0B95  00A7               	movwf	readDHT11@temperature
  4505                           
  4506                           ;dht11_module.h: 29: uint8_t bits[5] = {0};
  4507  0B96  3028               	movlw	readDHT11@bits& (0+255)
  4508  0B97  0084               	movwf	4
  4509  0B98  1683               	bsf	3,5	;RP0=1, select bank1
  4510  0B99  1303               	bcf	3,6	;RP1=0, select bank1
  4511  0B9A  0857               	movf	readDHT11@F1216^(0+128),w
  4512  0B9B  1383               	bcf	3,7	;select IRP bank0
  4513  0B9C  0080               	movwf	0
  4514  0B9D  0A84               	incf	4,f
  4515  0B9E  0858               	movf	(readDHT11@F1216^(0+128)+1),w
  4516  0B9F  0080               	movwf	0
  4517  0BA0  0A84               	incf	4,f
  4518  0BA1  0859               	movf	(readDHT11@F1216^(0+128)+2),w
  4519  0BA2  0080               	movwf	0
  4520  0BA3  0A84               	incf	4,f
  4521  0BA4  085A               	movf	(readDHT11@F1216^(0+128)+3),w
  4522  0BA5  0080               	movwf	0
  4523  0BA6  0A84               	incf	4,f
  4524  0BA7  085B               	movf	(readDHT11@F1216^(0+128)+4),w
  4525  0BA8  0080               	movwf	0
  4526                           
  4527                           ;dht11_module.h: 30: uint8_t i, j;
  4528                           ;dht11_module.h: 33: TRISBbits.TRISB2 = 0;
  4529  0BA9  1106               	bcf	6,2	;volatile
  4530                           
  4531                           ;dht11_module.h: 34: PORTBbits.RB2 = 0;
  4532  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  4533  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  4534  0BAC  1106               	bcf	6,2	;volatile
  4535                           
  4536                           ;dht11_module.h: 35: _delay((unsigned long)((18)*(4000000/4000.0)));
  4537  0BAD  3018               	movlw	24
  4538  0BAE  00A2               	movwf	??_readDHT11+1
  4539  0BAF  305F               	movlw	95
  4540  0BB0  00A1               	movwf	??_readDHT11
  4541  0BB1                     u4427:	
  4542  0BB1  0BA1               	decfsz	??_readDHT11,f
  4543  0BB2  2BB1               	goto	u4427
  4544  0BB3  0BA2               	decfsz	??_readDHT11+1,f
  4545  0BB4  2BB1               	goto	u4427
  4546                           
  4547                           ;dht11_module.h: 36: PORTBbits.RB2 = 1;
  4548  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  4549  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  4550  0BB7  1506               	bsf	6,2	;volatile
  4551                           
  4552                           ;dht11_module.h: 37: _delay((unsigned long)((20)*(4000000/4000000.0)));
  4553  0BB8  3006               	movlw	6
  4554  0BB9  00A1               	movwf	??_readDHT11
  4555  0BBA                     u4437:	
  4556  0BBA  0BA1               	decfsz	??_readDHT11,f
  4557  0BBB  2BBA               	goto	u4437
  4558  0BBC  0000               	nop
  4559                           
  4560                           ;dht11_module.h: 38: TRISBbits.TRISB2 = 1;
  4561  0BBD  1683               	bsf	3,5	;RP0=1, select bank1
  4562  0BBE  1303               	bcf	3,6	;RP1=0, select bank1
  4563  0BBF  1506               	bsf	6,2	;volatile
  4564                           
  4565                           ;dht11_module.h: 41: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4566  0BC0  300D               	movlw	13
  4567  0BC1  1283               	bcf	3,5	;RP0=0, select bank0
  4568  0BC2  1303               	bcf	3,6	;RP1=0, select bank0
  4569  0BC3  00A1               	movwf	??_readDHT11
  4570  0BC4                     u4447:	
  4571  0BC4  0BA1               	decfsz	??_readDHT11,f
  4572  0BC5  2BC4               	goto	u4447
  4573                           
  4574                           ;dht11_module.h: 42: if (PORTBbits.RB2)
  4575  0BC6  1283               	bcf	3,5	;RP0=0, select bank0
  4576  0BC7  1303               	bcf	3,6	;RP1=0, select bank0
  4577  0BC8  1D06               	btfss	6,2	;volatile
  4578  0BC9  2BCC               	goto	l2323
  4579                           
  4580                           ;dht11_module.h: 43: return 0;
  4581  0BCA  3000               	movlw	0
  4582  0BCB  0008               	return
  4583  0BCC                     l2323:	
  4584                           
  4585                           ;dht11_module.h: 44: _delay((unsigned long)((80)*(4000000/4000000.0)));
  4586  0BCC  301A               	movlw	26
  4587  0BCD  00A1               	movwf	??_readDHT11
  4588  0BCE                     u4457:	
  4589  0BCE  0BA1               	decfsz	??_readDHT11,f
  4590  0BCF  2BCE               	goto	u4457
  4591  0BD0  0000               	nop
  4592                           
  4593                           ;dht11_module.h: 45: if (!PORTBbits.RB2)
  4594  0BD1  1283               	bcf	3,5	;RP0=0, select bank0
  4595  0BD2  1303               	bcf	3,6	;RP1=0, select bank0
  4596  0BD3  1906               	btfsc	6,2	;volatile
  4597  0BD4  2BD7               	goto	l2331
  4598                           
  4599                           ;dht11_module.h: 46: return 0;
  4600  0BD5  3000               	movlw	0
  4601  0BD6  0008               	return
  4602  0BD7                     l2331:	
  4603                           
  4604                           ;dht11_module.h: 47: _delay((unsigned long)((80)*(4000000/4000000.0)));
  4605  0BD7  301A               	movlw	26
  4606  0BD8  00A1               	movwf	??_readDHT11
  4607  0BD9                     u4467:	
  4608  0BD9  0BA1               	decfsz	??_readDHT11,f
  4609  0BDA  2BD9               	goto	u4467
  4610  0BDB  0000               	nop
  4611                           
  4612                           ;dht11_module.h: 50: for (j = 0; j < 5; j++)
  4613  0BDC  1283               	bcf	3,5	;RP0=0, select bank0
  4614  0BDD  1303               	bcf	3,6	;RP1=0, select bank0
  4615  0BDE  01AE               	clrf	readDHT11@j
  4616  0BDF  3005               	movlw	5
  4617  0BE0  022E               	subwf	readDHT11@j,w
  4618  0BE1  1803               	btfsc	3,0
  4619  0BE2  2C19               	goto	l2359
  4620  0BE3                     l2339:	
  4621                           
  4622                           ;dht11_module.h: 51: {
  4623                           ;dht11_module.h: 52: for (i = 0; i < 8; i++)
  4624  0BE3  01AD               	clrf	readDHT11@i
  4625  0BE4  3008               	movlw	8
  4626  0BE5  022D               	subwf	readDHT11@i,w
  4627  0BE6  1803               	btfsc	3,0
  4628  0BE7  2C11               	goto	l2355
  4629  0BE8                     l106:	
  4630                           ;dht11_module.h: 55: ;
  4631                           
  4632                           ;dht11_module.h: 53: {
  4633                           ;dht11_module.h: 54: while (!PORTBbits.RB2)
  4634                           
  4635  0BE8  1D06               	btfss	6,2	;volatile
  4636  0BE9  2BE8               	goto	l106
  4637                           
  4638                           ;dht11_module.h: 56: _delay((unsigned long)((30)*(4000000/4000000.0)));
  4639  0BEA  3009               	movlw	9
  4640  0BEB  00A1               	movwf	??_readDHT11
  4641  0BEC                     u4477:	
  4642  0BEC  0BA1               	decfsz	??_readDHT11,f
  4643  0BED  2BEC               	goto	u4477
  4644  0BEE  2BEF               	nop2	;nop
  4645                           
  4646                           ;dht11_module.h: 57: if (PORTBbits.RB2)
  4647  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  4648  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  4649  0BF1  1D06               	btfss	6,2	;volatile
  4650  0BF2  2C09               	goto	l2351
  4651                           
  4652                           ;dht11_module.h: 58: {
  4653                           ;dht11_module.h: 59: bits[j] |= (1 << (7 - i));
  4654  0BF3  3001               	movlw	1
  4655  0BF4  00A1               	movwf	??_readDHT11
  4656  0BF5  032D               	decf	readDHT11@i,w
  4657  0BF6  3AFF               	xorlw	255
  4658  0BF7  3E07               	addlw	7
  4659  0BF8  3E01               	addlw	1
  4660  0BF9  2BFC               	goto	u3014
  4661  0BFA                     u3015:	
  4662  0BFA  1003               	clrc
  4663  0BFB  0DA1               	rlf	??_readDHT11,f
  4664  0BFC                     u3014:	
  4665  0BFC  3EFF               	addlw	-1
  4666  0BFD  1D03               	skipz
  4667  0BFE  2BFA               	goto	u3015
  4668  0BFF  0821               	movf	??_readDHT11,w
  4669  0C00  00A2               	movwf	??_readDHT11+1
  4670  0C01  082E               	movf	readDHT11@j,w
  4671  0C02  3E28               	addlw	readDHT11@bits& (0+255)
  4672  0C03  0084               	movwf	4
  4673  0C04  0822               	movf	??_readDHT11+1,w
  4674  0C05  1383               	bcf	3,7	;select IRP bank0
  4675  0C06  0480               	iorwf	0,f
  4676  0C07                     l110:	
  4677                           ;dht11_module.h: 61: ;
  4678                           
  4679                           ;dht11_module.h: 60: while (PORTBbits.RB2)
  4680                           
  4681  0C07  1906               	btfsc	6,2	;volatile
  4682  0C08  2C07               	goto	l110
  4683  0C09                     l2351:	
  4684  0C09  3001               	movlw	1
  4685  0C0A  00A1               	movwf	??_readDHT11
  4686  0C0B  0821               	movf	??_readDHT11,w
  4687  0C0C  07AD               	addwf	readDHT11@i,f
  4688  0C0D  3008               	movlw	8
  4689  0C0E  022D               	subwf	readDHT11@i,w
  4690  0C0F  1C03               	skipc
  4691  0C10  2BE8               	goto	l106
  4692  0C11                     l2355:	
  4693  0C11  3001               	movlw	1
  4694  0C12  00A1               	movwf	??_readDHT11
  4695  0C13  0821               	movf	??_readDHT11,w
  4696  0C14  07AE               	addwf	readDHT11@j,f
  4697  0C15  3005               	movlw	5
  4698  0C16  022E               	subwf	readDHT11@j,w
  4699  0C17  1C03               	skipc
  4700  0C18  2BE3               	goto	l2339
  4701  0C19                     l2359:	
  4702                           
  4703                           ;dht11_module.h: 62: }
  4704                           ;dht11_module.h: 63: }
  4705                           ;dht11_module.h: 64: }
  4706                           ;dht11_module.h: 67: if (bits[4] != (bits[0] + bits[1] + bits[2] + bits[3]))
  4707  0C19  0828               	movf	readDHT11@bits,w
  4708  0C1A  0729               	addwf	readDHT11@bits+1,w
  4709  0C1B  00A1               	movwf	??_readDHT11
  4710  0C1C  01A2               	clrf	??_readDHT11+1
  4711  0C1D  0DA2               	rlf	??_readDHT11+1,f
  4712  0C1E  082A               	movf	readDHT11@bits+2,w
  4713  0C1F  0721               	addwf	??_readDHT11,w
  4714  0C20  00A3               	movwf	??_readDHT11+2
  4715  0C21  3000               	movlw	0
  4716  0C22  1803               	skipnc
  4717  0C23  3001               	movlw	1
  4718  0C24  0722               	addwf	??_readDHT11+1,w
  4719  0C25  00A4               	movwf	??_readDHT11+3
  4720  0C26  082B               	movf	readDHT11@bits+3,w
  4721  0C27  0723               	addwf	??_readDHT11+2,w
  4722  0C28  00A5               	movwf	??_readDHT11+4
  4723  0C29  3000               	movlw	0
  4724  0C2A  1803               	skipnc
  4725  0C2B  3001               	movlw	1
  4726  0C2C  0724               	addwf	??_readDHT11+3,w
  4727  0C2D  00A6               	movwf	??_readDHT11+5
  4728  0C2E  082C               	movf	readDHT11@bits+4,w
  4729  0C2F  0625               	xorwf	??_readDHT11+4,w
  4730  0C30  0426               	iorwf	??_readDHT11+5,w
  4731  0C31  1903               	skipnz
  4732  0C32  2C35               	goto	l2365
  4733                           
  4734                           ;dht11_module.h: 68: return 0;
  4735  0C33  3000               	movlw	0
  4736  0C34  0008               	return
  4737  0C35                     l2365:	
  4738                           
  4739                           ;dht11_module.h: 70: *humidity = bits[0];
  4740  0C35  0828               	movf	readDHT11@bits,w
  4741  0C36  00A1               	movwf	??_readDHT11
  4742  0C37  0820               	movf	readDHT11@humidity,w
  4743  0C38  0084               	movwf	4
  4744  0C39  0821               	movf	??_readDHT11,w
  4745  0C3A  0080               	movwf	0
  4746                           
  4747                           ;dht11_module.h: 71: *temperature = bits[2];
  4748  0C3B  082A               	movf	readDHT11@bits+2,w
  4749  0C3C  00A1               	movwf	??_readDHT11
  4750  0C3D  0827               	movf	readDHT11@temperature,w
  4751  0C3E  0084               	movwf	4
  4752  0C3F  0821               	movf	??_readDHT11,w
  4753  0C40  0080               	movwf	0
  4754                           
  4755                           ;dht11_module.h: 73: return 1;
  4756  0C41  3001               	movlw	1
  4757  0C42  0008               	return
  4758  0C43                     __end_of_readDHT11:	
  4759                           
  4760                           	psect	text15
  4761  130F                     __ptext15:	
  4762 ;; *************** function _runClock *****************
  4763 ;; Defined at:
  4764 ;;		line 34 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;		None               void
  4771 ;; Registers used:
  4772 ;;		wreg, status,2, status,0
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4778 ;;      Params:         0       0       0       0       0
  4779 ;;      Locals:         0       0       0       0       0
  4780 ;;      Temps:          0       2       0       0       0
  4781 ;;      Totals:         0       2       0       0       0
  4782 ;;Total ram usage:        2 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; Hardware stack levels required when called:    2
  4785 ;; This function calls:
  4786 ;;		Nothing
  4787 ;; This function is called by:
  4788 ;;		_main
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           
  4793                           ;psect for function _runClock
  4794  130F                     _runClock:	
  4795                           
  4796                           ;time_scheduler.h: 37: minutes++;
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in _runClock: [wreg+status,2+status,0]
  4800  130F  3001               	movlw	1
  4801  1310  1283               	bcf	3,5	;RP0=0, select bank0
  4802  1311  1303               	bcf	3,6	;RP1=0, select bank0
  4803  1312  00A0               	movwf	??_runClock
  4804  1313  0820               	movf	??_runClock,w
  4805  1314  07EF               	addwf	_minutes,f	;volatile
  4806                           
  4807                           ;time_scheduler.h: 38: if (minutes >= 60)
  4808  1315  303C               	movlw	60
  4809  1316  026F               	subwf	_minutes,w	;volatile
  4810  1317  1C03               	skipc
  4811  1318  2B22               	goto	l2713
  4812                           
  4813                           ;time_scheduler.h: 39: {
  4814                           ;time_scheduler.h: 40: minutes = 0;
  4815  1319  01EF               	clrf	_minutes	;volatile
  4816                           
  4817                           ;time_scheduler.h: 41: hours++;
  4818  131A  3001               	movlw	1
  4819  131B  00A0               	movwf	??_runClock
  4820  131C  0820               	movf	??_runClock,w
  4821  131D  07E7               	addwf	_hours,f	;volatile
  4822                           
  4823                           ;time_scheduler.h: 42: if (hours >= 24)
  4824  131E  3018               	movlw	24
  4825  131F  0267               	subwf	_hours,w	;volatile
  4826  1320  1803               	btfsc	3,0
  4827                           
  4828                           ;time_scheduler.h: 43: {
  4829                           ;time_scheduler.h: 44: hours = 0;
  4830  1321  01E7               	clrf	_hours	;volatile
  4831  1322                     l2713:	
  4832                           
  4833                           ;time_scheduler.h: 45: }
  4834                           ;time_scheduler.h: 46: }
  4835                           ;time_scheduler.h: 47: _delay((unsigned long)((100)*(4000000/4000.0)));
  4836  1322  3082               	movlw	130
  4837  1323  00A1               	movwf	??_runClock+1
  4838  1324  30DD               	movlw	221
  4839  1325  00A0               	movwf	??_runClock
  4840  1326                     u4487:	
  4841  1326  0BA0               	decfsz	??_runClock,f
  4842  1327  2B26               	goto	u4487
  4843  1328  0BA1               	decfsz	??_runClock+1,f
  4844  1329  2B26               	goto	u4487
  4845  132A  2B2B               	nop2
  4846  132B  0008               	return
  4847  132C                     __end_of_runClock:	
  4848                           
  4849                           	psect	text16
  4850  12A7                     __ptext16:	
  4851 ;; *************** function _initRegisters *****************
  4852 ;; Defined at:
  4853 ;;		line 147 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  4854 ;; Parameters:    Size  Location     Type
  4855 ;;		None
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;		None               void
  4860 ;; Registers used:
  4861 ;;		wreg
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4867 ;;      Params:         0       0       0       0       0
  4868 ;;      Locals:         0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0
  4870 ;;      Totals:         0       0       0       0       0
  4871 ;;Total ram usage:        0 bytes
  4872 ;; Hardware stack levels used:    1
  4873 ;; Hardware stack levels required when called:    2
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_main
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           
  4882                           ;psect for function _initRegisters
  4883  12A7                     _initRegisters:	
  4884                           
  4885                           ;main.c: 150: ADCON1 = 0x80;
  4886                           
  4887                           ;incstack = 0
  4888                           ; Regs used in _initRegisters: [wreg]
  4889  12A7  3080               	movlw	128
  4890  12A8  1683               	bsf	3,5	;RP0=1, select bank1
  4891  12A9  1303               	bcf	3,6	;RP1=0, select bank1
  4892  12AA  009F               	movwf	31	;volatile
  4893                           
  4894                           ;main.c: 151: ADCON0 = 0x01;
  4895  12AB  3001               	movlw	1
  4896  12AC  1283               	bcf	3,5	;RP0=0, select bank0
  4897  12AD  1303               	bcf	3,6	;RP1=0, select bank0
  4898  12AE  009F               	movwf	31	;volatile
  4899  12AF  0008               	return
  4900  12B0                     __end_of_initRegisters:	
  4901                           
  4902                           	psect	text17
  4903  12BA                     __ptext17:	
  4904 ;; *************** function _initPorts *****************
  4905 ;; Defined at:
  4906 ;;		line 138 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  4907 ;; Parameters:    Size  Location     Type
  4908 ;;		None
  4909 ;; Auto vars:     Size  Location     Type
  4910 ;;		None
  4911 ;; Return value:  Size  Location     Type
  4912 ;;		None               void
  4913 ;; Registers used:
  4914 ;;		wreg, status,2
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4920 ;;      Params:         0       0       0       0       0
  4921 ;;      Locals:         0       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0
  4923 ;;      Totals:         0       0       0       0       0
  4924 ;;Total ram usage:        0 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; Hardware stack levels required when called:    2
  4927 ;; This function calls:
  4928 ;;		Nothing
  4929 ;; This function is called by:
  4930 ;;		_main
  4931 ;; This function uses a non-reentrant model
  4932 ;;
  4933                           
  4934                           
  4935                           ;psect for function _initPorts
  4936  12BA                     _initPorts:	
  4937                           
  4938                           ;main.c: 140: TRISA = 0xFF;
  4939                           
  4940                           ;incstack = 0
  4941                           ; Regs used in _initPorts: [wreg+status,2]
  4942  12BA  30FF               	movlw	255
  4943  12BB  1683               	bsf	3,5	;RP0=1, select bank1
  4944  12BC  1303               	bcf	3,6	;RP1=0, select bank1
  4945  12BD  0085               	movwf	5	;volatile
  4946                           
  4947                           ;main.c: 141: TRISB = 0xFF;
  4948  12BE  30FF               	movlw	255
  4949  12BF  0086               	movwf	6	;volatile
  4950                           
  4951                           ;main.c: 142: TRISC = 0x00;
  4952  12C0  0187               	clrf	7	;volatile
  4953                           
  4954                           ;main.c: 143: PORTC = 0b00111000;
  4955  12C1  3038               	movlw	56
  4956  12C2  1283               	bcf	3,5	;RP0=0, select bank0
  4957  12C3  1303               	bcf	3,6	;RP1=0, select bank0
  4958  12C4  0087               	movwf	7	;volatile
  4959                           
  4960                           ;main.c: 144: TRISD = 0x00;
  4961  12C5  1683               	bsf	3,5	;RP0=1, select bank1
  4962  12C6  1303               	bcf	3,6	;RP1=0, select bank1
  4963  12C7  0188               	clrf	8	;volatile
  4964  12C8  0008               	return
  4965  12C9                     __end_of_initPorts:	
  4966                           
  4967                           	psect	text18
  4968  1297                     __ptext18:	
  4969 ;; *************** function _initInterrupts *****************
  4970 ;; Defined at:
  4971 ;;		line 154 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;		None
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;		None
  4976 ;; Return value:  Size  Location     Type
  4977 ;;		None               void
  4978 ;; Registers used:
  4979 ;;		None
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4985 ;;      Params:         0       0       0       0       0
  4986 ;;      Locals:         0       0       0       0       0
  4987 ;;      Temps:          0       0       0       0       0
  4988 ;;      Totals:         0       0       0       0       0
  4989 ;;Total ram usage:        0 bytes
  4990 ;; Hardware stack levels used:    1
  4991 ;; Hardware stack levels required when called:    2
  4992 ;; This function calls:
  4993 ;;		Nothing
  4994 ;; This function is called by:
  4995 ;;		_main
  4996 ;; This function uses a non-reentrant model
  4997 ;;
  4998                           
  4999                           
  5000                           ;psect for function _initInterrupts
  5001  1297                     _initInterrupts:	
  5002                           
  5003                           ;main.c: 156: INTE = 1;
  5004                           
  5005                           ;incstack = 0
  5006                           ; Regs used in _initInterrupts: []
  5007  1297  160B               	bsf	11,4	;volatile
  5008                           
  5009                           ;main.c: 157: INTF = 0;
  5010  1298  108B               	bcf	11,1	;volatile
  5011                           
  5012                           ;main.c: 158: INTEDG = 1;
  5013  1299  1683               	bsf	3,5	;RP0=1, select bank1
  5014  129A  1303               	bcf	3,6	;RP1=0, select bank1
  5015  129B  1701               	bsf	1,6	;volatile
  5016                           
  5017                           ;main.c: 159: GIE = 1;
  5018  129C  178B               	bsf	11,7	;volatile
  5019                           
  5020                           ;main.c: 160: PEIE = 1;
  5021  129D  170B               	bsf	11,6	;volatile
  5022  129E  0008               	return
  5023  129F                     __end_of_initInterrupts:	
  5024                           
  5025                           	psect	text19
  5026  147F                     __ptext19:	
  5027 ;; *************** function _handlePPM *****************
  5028 ;; Defined at:
  5029 ;;		line 54 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      unsigned char 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0, pclath, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5043 ;;      Params:         0       0       0       0       0
  5044 ;;      Locals:         0       0       0       0       0
  5045 ;;      Temps:          0       0       0       0       0
  5046 ;;      Totals:         0       0       0       0       0
  5047 ;;Total ram usage:        0 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    3
  5050 ;; This function calls:
  5051 ;;		___ftge
  5052 ;; This function is called by:
  5053 ;;		_main
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           
  5058                           ;psect for function _handlePPM
  5059  147F                     _handlePPM:	
  5060                           
  5061                           ;mq135_module.h: 56: if (PPM > 9)
  5062                           
  5063                           ;incstack = 0
  5064                           ; Regs used in _handlePPM: [wreg+status,2+status,0+pclath+cstack]
  5065  147F  3000               	movlw	0
  5066  1480  1283               	bcf	3,5	;RP0=0, select bank0
  5067  1481  1303               	bcf	3,6	;RP1=0, select bank0
  5068  1482  00A0               	movwf	___ftge@ff1
  5069  1483  3010               	movlw	16
  5070  1484  00A1               	movwf	___ftge@ff1+1
  5071  1485  3041               	movlw	65
  5072  1486  00A2               	movwf	___ftge@ff1+2
  5073  1487  1683               	bsf	3,5	;RP0=1, select bank1
  5074  1488  1303               	bcf	3,6	;RP1=0, select bank1
  5075  1489  085C               	movf	_PPM^(0+128),w	;volatile
  5076  148A  1283               	bcf	3,5	;RP0=0, select bank0
  5077  148B  1303               	bcf	3,6	;RP1=0, select bank0
  5078  148C  00A3               	movwf	___ftge@ff2
  5079  148D  1683               	bsf	3,5	;RP0=1, select bank1
  5080  148E  1303               	bcf	3,6	;RP1=0, select bank1
  5081  148F  085D               	movf	(_PPM+1)^(0+128),w	;volatile
  5082  1490  1283               	bcf	3,5	;RP0=0, select bank0
  5083  1491  1303               	bcf	3,6	;RP1=0, select bank0
  5084  1492  00A4               	movwf	___ftge@ff2+1
  5085  1493  1683               	bsf	3,5	;RP0=1, select bank1
  5086  1494  1303               	bcf	3,6	;RP1=0, select bank1
  5087  1495  085E               	movf	(_PPM+2)^(0+128),w	;volatile
  5088  1496  1283               	bcf	3,5	;RP0=0, select bank0
  5089  1497  1303               	bcf	3,6	;RP1=0, select bank0
  5090  1498  00A5               	movwf	___ftge@ff2+2
  5091  1499  160A  118A  2713  160A  118A  	fcall	___ftge
  5092  149E  1803               	btfsc	3,0
  5093  149F  2CA8               	goto	l140
  5094                           
  5095                           ;mq135_module.h: 57: {
  5096                           ;mq135_module.h: 58: PORTCbits.RC5 = 0;
  5097  14A0  1283               	bcf	3,5	;RP0=0, select bank0
  5098  14A1  1303               	bcf	3,6	;RP1=0, select bank0
  5099  14A2  1287               	bcf	7,5	;volatile
  5100                           
  5101                           ;mq135_module.h: 59: ppmFlag = 1;
  5102  14A3  1683               	bsf	3,5	;RP0=1, select bank1
  5103  14A4  1303               	bcf	3,6	;RP1=0, select bank1
  5104  14A5  01E3               	clrf	_ppmFlag^(0+128)
  5105  14A6  0AE3               	incf	_ppmFlag^(0+128),f
  5106                           
  5107                           ;mq135_module.h: 61: }
  5108                           
  5109                           ;mq135_module.h: 60: return 1;
  5110                           ;	Return value of _handlePPM is never used
  5111  14A7  0008               	return
  5112  14A8                     l140:	
  5113                           
  5114                           ;mq135_module.h: 62: else
  5115                           ;mq135_module.h: 63: {
  5116                           ;mq135_module.h: 64: PORTCbits.RC5 = 1;
  5117  14A8  1283               	bcf	3,5	;RP0=0, select bank0
  5118  14A9  1303               	bcf	3,6	;RP1=0, select bank0
  5119  14AA  1687               	bsf	7,5	;volatile
  5120                           
  5121                           ;mq135_module.h: 65: ppmFlag = 0;
  5122  14AB  1683               	bsf	3,5	;RP0=1, select bank1
  5123  14AC  1303               	bcf	3,6	;RP1=0, select bank1
  5124  14AD  01E3               	clrf	_ppmFlag^(0+128)
  5125                           
  5126                           ;mq135_module.h: 66: return 0;
  5127                           ;	Return value of _handlePPM is never used
  5128  14AE  0008               	return
  5129  14AF                     __end_of_handlePPM:	
  5130                           
  5131                           	psect	text20
  5132  1713                     __ptext20:	
  5133 ;; *************** function ___ftge *****************
  5134 ;; Defined at:
  5135 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;  ff1             3    0[BANK0 ] float 
  5138 ;;  ff2             3    3[BANK0 ] float 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;		None
  5141 ;; Return value:  Size  Location     Type
  5142 ;;		None               void
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5150 ;;      Params:         0       6       0       0       0
  5151 ;;      Locals:         0       0       0       0       0
  5152 ;;      Temps:          0       6       0       0       0
  5153 ;;      Totals:         0      12       0       0       0
  5154 ;;Total ram usage:       12 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:    2
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_handlePPM
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function ___ftge
  5166  1713                     ___ftge:	
  5167                           
  5168                           ;incstack = 0
  5169                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5170  1713  1283               	bcf	3,5	;RP0=0, select bank0
  5171  1714  1303               	bcf	3,6	;RP1=0, select bank0
  5172  1715  1FA2               	btfss	___ftge@ff1+2,7
  5173  1716  2F3C               	goto	l2571
  5174  1717  3000               	movlw	0
  5175  1718  00A6               	movwf	??___ftge
  5176  1719  3000               	movlw	0
  5177  171A  00A7               	movwf	??___ftge+1
  5178  171B  3080               	movlw	128
  5179  171C  00A8               	movwf	??___ftge+2
  5180  171D  0920               	comf	___ftge@ff1,w
  5181  171E  00A9               	movwf	??___ftge+3
  5182  171F  0921               	comf	___ftge@ff1+1,w
  5183  1720  00AA               	movwf	??___ftge+4
  5184  1721  0922               	comf	___ftge@ff1+2,w
  5185  1722  00AB               	movwf	??___ftge+5
  5186  1723  0AA9               	incf	??___ftge+3,f
  5187  1724  1903               	skipnz
  5188  1725  0AAA               	incf	??___ftge+4,f
  5189  1726  1903               	skipnz
  5190  1727  0AAB               	incf	??___ftge+5,f
  5191  1728  0829               	movf	??___ftge+3,w
  5192  1729  07A6               	addwf	??___ftge,f
  5193  172A  082A               	movf	??___ftge+4,w
  5194  172B  1803               	skipnc
  5195  172C  0F2A               	incfsz	??___ftge+4,w
  5196  172D  2F2F               	goto	u3381
  5197  172E  2F30               	goto	u3382
  5198  172F                     u3381:	
  5199  172F  07A7               	addwf	??___ftge+1,f
  5200  1730                     u3382:	
  5201  1730  082B               	movf	??___ftge+5,w
  5202  1731  1803               	skipnc
  5203  1732  0F2B               	incfsz	??___ftge+5,w
  5204  1733  2F35               	goto	u3383
  5205  1734  2F36               	goto	u3384
  5206  1735                     u3383:	
  5207  1735  07A8               	addwf	??___ftge+2,f
  5208  1736                     u3384:	
  5209  1736  0826               	movf	??___ftge,w
  5210  1737  00A0               	movwf	___ftge@ff1
  5211  1738  0827               	movf	??___ftge+1,w
  5212  1739  00A1               	movwf	___ftge@ff1+1
  5213  173A  0828               	movf	??___ftge+2,w
  5214  173B  00A2               	movwf	___ftge@ff1+2
  5215  173C                     l2571:	
  5216  173C  1FA5               	btfss	___ftge@ff2+2,7
  5217  173D  2F63               	goto	l2575
  5218  173E  3000               	movlw	0
  5219  173F  00A6               	movwf	??___ftge
  5220  1740  3000               	movlw	0
  5221  1741  00A7               	movwf	??___ftge+1
  5222  1742  3080               	movlw	128
  5223  1743  00A8               	movwf	??___ftge+2
  5224  1744  0923               	comf	___ftge@ff2,w
  5225  1745  00A9               	movwf	??___ftge+3
  5226  1746  0924               	comf	___ftge@ff2+1,w
  5227  1747  00AA               	movwf	??___ftge+4
  5228  1748  0925               	comf	___ftge@ff2+2,w
  5229  1749  00AB               	movwf	??___ftge+5
  5230  174A  0AA9               	incf	??___ftge+3,f
  5231  174B  1903               	skipnz
  5232  174C  0AAA               	incf	??___ftge+4,f
  5233  174D  1903               	skipnz
  5234  174E  0AAB               	incf	??___ftge+5,f
  5235  174F  0829               	movf	??___ftge+3,w
  5236  1750  07A6               	addwf	??___ftge,f
  5237  1751  082A               	movf	??___ftge+4,w
  5238  1752  1803               	skipnc
  5239  1753  0F2A               	incfsz	??___ftge+4,w
  5240  1754  2F56               	goto	u3401
  5241  1755  2F57               	goto	u3402
  5242  1756                     u3401:	
  5243  1756  07A7               	addwf	??___ftge+1,f
  5244  1757                     u3402:	
  5245  1757  082B               	movf	??___ftge+5,w
  5246  1758  1803               	skipnc
  5247  1759  0F2B               	incfsz	??___ftge+5,w
  5248  175A  2F5C               	goto	u3403
  5249  175B  2F5D               	goto	u3404
  5250  175C                     u3403:	
  5251  175C  07A8               	addwf	??___ftge+2,f
  5252  175D                     u3404:	
  5253  175D  0826               	movf	??___ftge,w
  5254  175E  00A3               	movwf	___ftge@ff2
  5255  175F  0827               	movf	??___ftge+1,w
  5256  1760  00A4               	movwf	___ftge@ff2+1
  5257  1761  0828               	movf	??___ftge+2,w
  5258  1762  00A5               	movwf	___ftge@ff2+2
  5259  1763                     l2575:	
  5260  1763  3080               	movlw	128
  5261  1764  06A2               	xorwf	___ftge@ff1+2,f
  5262  1765  3080               	movlw	128
  5263  1766  06A5               	xorwf	___ftge@ff2+2,f
  5264  1767  0825               	movf	___ftge@ff2+2,w
  5265  1768  0222               	subwf	___ftge@ff1+2,w
  5266  1769  1D03               	skipz
  5267  176A  0008               	return
  5268  176B  0824               	movf	___ftge@ff2+1,w
  5269  176C  0221               	subwf	___ftge@ff1+1,w
  5270  176D  1D03               	skipz
  5271  176E  0008               	return
  5272  176F  0823               	movf	___ftge@ff2,w
  5273  1770  0220               	subwf	___ftge@ff1,w
  5274  1771  0008               	return
  5275  1772                     __end_of___ftge:	
  5276                           
  5277                           	psect	text21
  5278  134E                     __ptext21:	
  5279 ;; *************** function _displayTime *****************
  5280 ;; Defined at:
  5281 ;;		line 50 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;		None
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  timeFormat     16   43[BANK0 ] unsigned char [16]
  5286 ;; Return value:  Size  Location     Type
  5287 ;;		None               void
  5288 ;; Registers used:
  5289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5290 ;; Tracked objects:
  5291 ;;		On entry : 0/0
  5292 ;;		On exit  : 0/0
  5293 ;;		Unchanged: 0/0
  5294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5295 ;;      Params:         0       0       0       0       0
  5296 ;;      Locals:         0      16       0       0       0
  5297 ;;      Temps:          0       5       0       0       0
  5298 ;;      Totals:         0      21       0       0       0
  5299 ;;Total ram usage:       21 bytes
  5300 ;; Hardware stack levels used:    1
  5301 ;; Hardware stack levels required when called:    4
  5302 ;; This function calls:
  5303 ;;		_printToLCD
  5304 ;;		_sprintf
  5305 ;; This function is called by:
  5306 ;;		_main
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           
  5311                           ;psect for function _displayTime
  5312  134E                     _displayTime:	
  5313                           
  5314                           ;time_scheduler.h: 52: char timeFormat[16];
  5315                           ;time_scheduler.h: 53: sprintf(timeFormat, "Time: %02d:%02d", hours, minutes);
  5316                           
  5317                           ;incstack = 0
  5318                           ; Regs used in _displayTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5319  134E  3056               	movlw	(STR_9-__stringbase)& (0+255)
  5320  134F  1283               	bcf	3,5	;RP0=0, select bank0
  5321  1350  1303               	bcf	3,6	;RP1=0, select bank0
  5322  1351  00C6               	movwf	??_displayTime
  5323  1352  0846               	movf	??_displayTime,w
  5324  1353  00AE               	movwf	sprintf@f
  5325  1354  0867               	movf	_hours,w	;volatile
  5326  1355  00C7               	movwf	??_displayTime+1
  5327  1356  01C8               	clrf	??_displayTime+2
  5328  1357  0847               	movf	??_displayTime+1,w
  5329  1358  00AF               	movwf	?_sprintf+1
  5330  1359  0848               	movf	??_displayTime+2,w
  5331  135A  00B0               	movwf	?_sprintf+2
  5332  135B  086F               	movf	_minutes,w	;volatile
  5333  135C  00C9               	movwf	??_displayTime+3
  5334  135D  01CA               	clrf	??_displayTime+4
  5335  135E  0849               	movf	??_displayTime+3,w
  5336  135F  00B1               	movwf	?_sprintf+3
  5337  1360  084A               	movf	??_displayTime+4,w
  5338  1361  00B2               	movwf	?_sprintf+4
  5339  1362  304B               	movlw	displayTime@timeFormat& (0+255)
  5340  1363  120A  118A  23FA  160A  118A  	fcall	_sprintf
  5341                           
  5342                           ;time_scheduler.h: 54: printToLCD(timeFormat);
  5343  1368  304B               	movlw	displayTime@timeFormat& (0+255)
  5344  1369  1283               	bcf	3,5	;RP0=0, select bank0
  5345  136A  1303               	bcf	3,6	;RP1=0, select bank0
  5346  136B  00A2               	movwf	printToLCD@str
  5347  136C  3000               	movlw	0
  5348  136D  00A3               	movwf	printToLCD@str+1
  5349  136E  160A  118A  2454   	fcall	_printToLCD
  5350  1371  0008               	return
  5351  1372                     __end_of_displayTime:	
  5352                           
  5353                           	psect	text22
  5354  0ED7                     __ptext22:	
  5355 ;; *************** function _displayPPM *****************
  5356 ;; Defined at:
  5357 ;;		line 37 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  strBuffer      20    0[BANK1 ] unsigned char [20]
  5362 ;;  ppmFraction     2   22[BANK1 ] int 
  5363 ;;  ppmWhole        2   20[BANK1 ] int 
  5364 ;;  bufPtr          1   24[BANK1 ] PTR unsigned char 
  5365 ;;		 -> displayPPM@strBuffer(20), 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;		None               void
  5368 ;; Registers used:
  5369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5375 ;;      Params:         0       0       0       0       0
  5376 ;;      Locals:         0       0      25       0       0
  5377 ;;      Temps:          0       2       0       0       0
  5378 ;;      Totals:         0       2      25       0       0
  5379 ;;Total ram usage:       27 bytes
  5380 ;; Hardware stack levels used:    1
  5381 ;; Hardware stack levels required when called:    4
  5382 ;; This function calls:
  5383 ;;		___awtoft
  5384 ;;		___ftadd
  5385 ;;		___ftmul
  5386 ;;		___ftneg
  5387 ;;		___fttol
  5388 ;;		_printToLCD
  5389 ;;		_sprintf
  5390 ;; This function is called by:
  5391 ;;		_main
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           
  5396                           ;psect for function _displayPPM
  5397  0ED7                     _displayPPM:	
  5398                           
  5399                           ;mq135_module.h: 39: char strBuffer[20];
  5400                           ;mq135_module.h: 40: int ppmWhole = (int)PPM;
  5401                           
  5402                           ;incstack = 0
  5403                           ; Regs used in _displayPPM: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5404  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  5405  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  5406  0ED9  085C               	movf	_PPM^(0+128),w	;volatile
  5407  0EDA  1283               	bcf	3,5	;RP0=0, select bank0
  5408  0EDB  1303               	bcf	3,6	;RP1=0, select bank0
  5409  0EDC  00CE               	movwf	___fttol@f1
  5410  0EDD  1683               	bsf	3,5	;RP0=1, select bank1
  5411  0EDE  1303               	bcf	3,6	;RP1=0, select bank1
  5412  0EDF  085D               	movf	(_PPM+1)^(0+128),w	;volatile
  5413  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  5414  0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  5415  0EE2  00CF               	movwf	___fttol@f1+1
  5416  0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  5417  0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  5418  0EE5  085E               	movf	(_PPM+2)^(0+128),w	;volatile
  5419  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  5420  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  5421  0EE8  00D0               	movwf	___fttol@f1+2
  5422  0EE9  160A  118A  2772  120A  158A  	fcall	___fttol
  5423  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  5424  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  5425  0EF0  084F               	movf	?___fttol+1,w
  5426  0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  5427  0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  5428  0EF3  01B5               	clrf	(displayPPM@ppmWhole+1)^(0+128)
  5429  0EF4  07B5               	addwf	(displayPPM@ppmWhole+1)^(0+128),f
  5430  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  5431  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  5432  0EF7  084E               	movf	?___fttol,w
  5433  0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  5434  0EF9  1303               	bcf	3,6	;RP1=0, select bank1
  5435  0EFA  01B4               	clrf	displayPPM@ppmWhole^(0+128)
  5436  0EFB  07B4               	addwf	displayPPM@ppmWhole^(0+128),f
  5437                           
  5438                           ;mq135_module.h: 41: int ppmFraction = (int)((PPM - ppmWhole) * 100);
  5439  0EFC  0835               	movf	(displayPPM@ppmWhole+1)^(0+128),w
  5440  0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  5441  0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  5442  0EFF  01A9               	clrf	___awtoft@c+1
  5443  0F00  07A9               	addwf	___awtoft@c+1,f
  5444  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  5445  0F02  1303               	bcf	3,6	;RP1=0, select bank1
  5446  0F03  0834               	movf	displayPPM@ppmWhole^(0+128),w
  5447  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  5448  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  5449  0F06  01A8               	clrf	___awtoft@c
  5450  0F07  07A8               	addwf	___awtoft@c,f
  5451  0F08  160A  118A  23DF  120A  158A  	fcall	___awtoft
  5452  0F0D  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0F0E  1303               	bcf	3,6	;RP1=0, select bank0
  5454  0F0F  0828               	movf	?___awtoft,w
  5455  0F10  00AE               	movwf	___ftneg@f1
  5456  0F11  0829               	movf	?___awtoft+1,w
  5457  0F12  00AF               	movwf	___ftneg@f1+1
  5458  0F13  082A               	movf	?___awtoft+2,w
  5459  0F14  00B0               	movwf	___ftneg@f1+2
  5460  0F15  160A  118A  22B0  120A  158A  	fcall	___ftneg
  5461  0F1A  1283               	bcf	3,5	;RP0=0, select bank0
  5462  0F1B  1303               	bcf	3,6	;RP1=0, select bank0
  5463  0F1C  082E               	movf	?___ftneg,w
  5464  0F1D  00C4               	movwf	___ftadd@f2
  5465  0F1E  082F               	movf	?___ftneg+1,w
  5466  0F1F  00C5               	movwf	___ftadd@f2+1
  5467  0F20  0830               	movf	?___ftneg+2,w
  5468  0F21  00C6               	movwf	___ftadd@f2+2
  5469  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  5470  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  5471  0F24  085C               	movf	_PPM^(0+128),w	;volatile
  5472  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  5473  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  5474  0F27  00C1               	movwf	___ftadd@f1
  5475  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  5476  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  5477  0F2A  085D               	movf	(_PPM+1)^(0+128),w	;volatile
  5478  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  5479  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  5480  0F2D  00C2               	movwf	___ftadd@f1+1
  5481  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  5482  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  5483  0F30  085E               	movf	(_PPM+2)^(0+128),w	;volatile
  5484  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  5485  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  5486  0F33  00C3               	movwf	___ftadd@f1+2
  5487  0F34  120A  158A  25CE  120A  158A  	fcall	___ftadd
  5488  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  5489  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  5490  0F3B  0841               	movf	?___ftadd,w
  5491  0F3C  00B4               	movwf	___ftmul@f2
  5492  0F3D  0842               	movf	?___ftadd+1,w
  5493  0F3E  00B5               	movwf	___ftmul@f2+1
  5494  0F3F  0843               	movf	?___ftadd+2,w
  5495  0F40  00B6               	movwf	___ftmul@f2+2
  5496  0F41  3000               	movlw	0
  5497  0F42  00B1               	movwf	___ftmul@f1
  5498  0F43  30C8               	movlw	200
  5499  0F44  00B2               	movwf	___ftmul@f1+1
  5500  0F45  3042               	movlw	66
  5501  0F46  00B3               	movwf	___ftmul@f1+2
  5502  0F47  120A  158A  24FB  120A  158A  	fcall	___ftmul
  5503  0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  5504  0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  5505  0F4E  0831               	movf	?___ftmul,w
  5506  0F4F  00CE               	movwf	___fttol@f1
  5507  0F50  0832               	movf	?___ftmul+1,w
  5508  0F51  00CF               	movwf	___fttol@f1+1
  5509  0F52  0833               	movf	?___ftmul+2,w
  5510  0F53  00D0               	movwf	___fttol@f1+2
  5511  0F54  160A  118A  2772  120A  158A  	fcall	___fttol
  5512  0F59  1283               	bcf	3,5	;RP0=0, select bank0
  5513  0F5A  1303               	bcf	3,6	;RP1=0, select bank0
  5514  0F5B  084F               	movf	?___fttol+1,w
  5515  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  5516  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  5517  0F5E  01B7               	clrf	(displayPPM@ppmFraction+1)^(0+128)
  5518  0F5F  07B7               	addwf	(displayPPM@ppmFraction+1)^(0+128),f
  5519  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  5520  0F61  1303               	bcf	3,6	;RP1=0, select bank0
  5521  0F62  084E               	movf	?___fttol,w
  5522  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  5523  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  5524  0F65  01B6               	clrf	displayPPM@ppmFraction^(0+128)
  5525  0F66  07B6               	addwf	displayPPM@ppmFraction^(0+128),f
  5526                           
  5527                           ;mq135_module.h: 44: char *bufPtr = strBuffer;
  5528  0F67  30A0               	movlw	displayPPM@strBuffer& (0+255)
  5529  0F68  1283               	bcf	3,5	;RP0=0, select bank0
  5530  0F69  1303               	bcf	3,6	;RP1=0, select bank0
  5531  0F6A  00DC               	movwf	??_displayPPM
  5532  0F6B  085C               	movf	??_displayPPM,w
  5533  0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  5534  0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  5535  0F6E  00B8               	movwf	displayPPM@bufPtr^(0+128)
  5536                           
  5537                           ;mq135_module.h: 45: bufPtr += sprintf(bufPtr, "CO2: ");
  5538  0F6F  30E3               	movlw	(STR_4-__stringbase)& (0+255)
  5539  0F70  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0F71  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0F72  00DC               	movwf	??_displayPPM
  5542  0F73  085C               	movf	??_displayPPM,w
  5543  0F74  00AE               	movwf	sprintf@f
  5544  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  5545  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  5546  0F77  0838               	movf	displayPPM@bufPtr^(0+128),w
  5547  0F78  120A  118A  23FA  120A  158A  	fcall	_sprintf
  5548  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  5549  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  5550  0F7F  082E               	movf	?_sprintf,w
  5551  0F80  00DD               	movwf	??_displayPPM+1
  5552  0F81  085D               	movf	??_displayPPM+1,w
  5553  0F82  1683               	bsf	3,5	;RP0=1, select bank1
  5554  0F83  1303               	bcf	3,6	;RP1=0, select bank1
  5555  0F84  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  5556                           
  5557                           ;mq135_module.h: 46: bufPtr += sprintf(bufPtr, "%d", ppmWhole);
  5558  0F85  30E9               	movlw	(STR_5-__stringbase)& (0+255)
  5559  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  5560  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  5561  0F88  00DC               	movwf	??_displayPPM
  5562  0F89  085C               	movf	??_displayPPM,w
  5563  0F8A  00AE               	movwf	sprintf@f
  5564  0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  5565  0F8C  1303               	bcf	3,6	;RP1=0, select bank1
  5566  0F8D  0835               	movf	(displayPPM@ppmWhole+1)^(0+128),w
  5567  0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  5568  0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  5569  0F90  01B0               	clrf	?_sprintf+2
  5570  0F91  07B0               	addwf	?_sprintf+2,f
  5571  0F92  1683               	bsf	3,5	;RP0=1, select bank1
  5572  0F93  1303               	bcf	3,6	;RP1=0, select bank1
  5573  0F94  0834               	movf	displayPPM@ppmWhole^(0+128),w
  5574  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  5575  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  5576  0F97  01AF               	clrf	?_sprintf+1
  5577  0F98  07AF               	addwf	?_sprintf+1,f
  5578  0F99  1683               	bsf	3,5	;RP0=1, select bank1
  5579  0F9A  1303               	bcf	3,6	;RP1=0, select bank1
  5580  0F9B  0838               	movf	displayPPM@bufPtr^(0+128),w
  5581  0F9C  120A  118A  23FA  120A  158A  	fcall	_sprintf
  5582  0FA1  1283               	bcf	3,5	;RP0=0, select bank0
  5583  0FA2  1303               	bcf	3,6	;RP1=0, select bank0
  5584  0FA3  082E               	movf	?_sprintf,w
  5585  0FA4  00DD               	movwf	??_displayPPM+1
  5586  0FA5  085D               	movf	??_displayPPM+1,w
  5587  0FA6  1683               	bsf	3,5	;RP0=1, select bank1
  5588  0FA7  1303               	bcf	3,6	;RP1=0, select bank1
  5589  0FA8  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  5590                           
  5591                           ;mq135_module.h: 47: *bufPtr++ = '.';
  5592  0FA9  302E               	movlw	46
  5593  0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  5594  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  5595  0FAC  00DC               	movwf	??_displayPPM
  5596  0FAD  1683               	bsf	3,5	;RP0=1, select bank1
  5597  0FAE  1303               	bcf	3,6	;RP1=0, select bank1
  5598  0FAF  0838               	movf	displayPPM@bufPtr^(0+128),w
  5599  0FB0  0084               	movwf	4
  5600  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  5601  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  5602  0FB3  085C               	movf	??_displayPPM,w
  5603  0FB4  1383               	bcf	3,7	;select IRP bank0
  5604  0FB5  0080               	movwf	0
  5605  0FB6  3001               	movlw	1
  5606  0FB7  00DC               	movwf	??_displayPPM
  5607  0FB8  085C               	movf	??_displayPPM,w
  5608  0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  5609  0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  5610  0FBB  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  5611                           
  5612                           ;mq135_module.h: 48: if (ppmFraction < 10)
  5613  0FBC  0837               	movf	(displayPPM@ppmFraction+1)^(0+128),w
  5614  0FBD  3A80               	xorlw	128
  5615  0FBE  00FF               	movwf	127
  5616  0FBF  3080               	movlw	128
  5617  0FC0  027F               	subwf	127,w
  5618  0FC1  1D03               	skipz
  5619  0FC2  2FC5               	goto	u3565
  5620  0FC3  300A               	movlw	10
  5621  0FC4  0236               	subwf	displayPPM@ppmFraction^(0+128),w
  5622  0FC5                     u3565:	
  5623  0FC5  1803               	skipnc
  5624  0FC6  2FDA               	goto	l2687
  5625                           
  5626                           ;mq135_module.h: 49: *bufPtr++ = '0';
  5627  0FC7  3030               	movlw	48
  5628  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  5629  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  5630  0FCA  00DC               	movwf	??_displayPPM
  5631  0FCB  1683               	bsf	3,5	;RP0=1, select bank1
  5632  0FCC  1303               	bcf	3,6	;RP1=0, select bank1
  5633  0FCD  0838               	movf	displayPPM@bufPtr^(0+128),w
  5634  0FCE  0084               	movwf	4
  5635  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  5636  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  5637  0FD1  085C               	movf	??_displayPPM,w
  5638  0FD2  1383               	bcf	3,7	;select IRP bank0
  5639  0FD3  0080               	movwf	0
  5640  0FD4  3001               	movlw	1
  5641  0FD5  00DC               	movwf	??_displayPPM
  5642  0FD6  085C               	movf	??_displayPPM,w
  5643  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  5644  0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  5645  0FD9  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  5646  0FDA                     l2687:	
  5647                           
  5648                           ;mq135_module.h: 50: sprintf(bufPtr, "%d ppm  ", ppmFraction);
  5649  0FDA  30BA               	movlw	(STR_6-__stringbase)& (0+255)
  5650  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  5651  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  5652  0FDD  00DC               	movwf	??_displayPPM
  5653  0FDE  085C               	movf	??_displayPPM,w
  5654  0FDF  00AE               	movwf	sprintf@f
  5655  0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  5656  0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  5657  0FE2  0837               	movf	(displayPPM@ppmFraction+1)^(0+128),w
  5658  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  5659  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  5660  0FE5  01B0               	clrf	?_sprintf+2
  5661  0FE6  07B0               	addwf	?_sprintf+2,f
  5662  0FE7  1683               	bsf	3,5	;RP0=1, select bank1
  5663  0FE8  1303               	bcf	3,6	;RP1=0, select bank1
  5664  0FE9  0836               	movf	displayPPM@ppmFraction^(0+128),w
  5665  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  5666  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  5667  0FEC  01AF               	clrf	?_sprintf+1
  5668  0FED  07AF               	addwf	?_sprintf+1,f
  5669  0FEE  1683               	bsf	3,5	;RP0=1, select bank1
  5670  0FEF  1303               	bcf	3,6	;RP1=0, select bank1
  5671  0FF0  0838               	movf	displayPPM@bufPtr^(0+128),w
  5672  0FF1  120A  118A  23FA  120A  158A  	fcall	_sprintf
  5673                           
  5674                           ;mq135_module.h: 51: printToLCD(strBuffer);
  5675  0FF6  30A0               	movlw	displayPPM@strBuffer& (0+255)
  5676  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  5677  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  5678  0FF9  00A2               	movwf	printToLCD@str
  5679  0FFA  3000               	movlw	0
  5680  0FFB  00A3               	movwf	printToLCD@str+1
  5681  0FFC  160A  118A  2454   	fcall	_printToLCD
  5682  0FFF  0008               	return
  5683  1000                     __end_of_displayPPM:	
  5684                           
  5685                           	psect	text23
  5686  1772                     __ptext23:	
  5687 ;; *************** function ___fttol *****************
  5688 ;; Defined at:
  5689 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  f1              3   46[BANK0 ] float 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  lval            4   55[BANK0 ] unsigned long 
  5694 ;;  exp1            1   59[BANK0 ] unsigned char 
  5695 ;;  sign1           1   54[BANK0 ] unsigned char 
  5696 ;; Return value:  Size  Location     Type
  5697 ;;                  4   46[BANK0 ] long 
  5698 ;; Registers used:
  5699 ;;		wreg, status,2, status,0
  5700 ;; Tracked objects:
  5701 ;;		On entry : 0/0
  5702 ;;		On exit  : 0/0
  5703 ;;		Unchanged: 0/0
  5704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5705 ;;      Params:         0       4       0       0       0
  5706 ;;      Locals:         0       6       0       0       0
  5707 ;;      Temps:          0       4       0       0       0
  5708 ;;      Totals:         0      14       0       0       0
  5709 ;;Total ram usage:       14 bytes
  5710 ;; Hardware stack levels used:    1
  5711 ;; Hardware stack levels required when called:    2
  5712 ;; This function calls:
  5713 ;;		Nothing
  5714 ;; This function is called by:
  5715 ;;		_displayPPM
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           
  5720                           ;psect for function ___fttol
  5721  1772                     ___fttol:	
  5722                           
  5723                           ;incstack = 0
  5724                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5725  1772  1283               	bcf	3,5	;RP0=0, select bank0
  5726  1773  1303               	bcf	3,6	;RP1=0, select bank0
  5727  1774  084E               	movf	___fttol@f1,w
  5728  1775  00D2               	movwf	??___fttol
  5729  1776  084F               	movf	___fttol@f1+1,w
  5730  1777  00D3               	movwf	??___fttol+1
  5731  1778  0850               	movf	___fttol@f1+2,w
  5732  1779  00D4               	movwf	??___fttol+2
  5733  177A  1003               	clrc
  5734  177B  0D53               	rlf	??___fttol+1,w
  5735  177C  0D54               	rlf	??___fttol+2,w
  5736  177D  00D5               	movwf	??___fttol+3
  5737  177E  0855               	movf	??___fttol+3,w
  5738  177F  00DB               	movwf	___fttol@exp1
  5739  1780  08DB               	movf	___fttol@exp1,f
  5740  1781  1D03               	skipz
  5741  1782  2F8C               	goto	l2601
  5742  1783  3000               	movlw	0
  5743  1784  00D1               	movwf	?___fttol+3
  5744  1785  3000               	movlw	0
  5745  1786  00D0               	movwf	?___fttol+2
  5746  1787  3000               	movlw	0
  5747  1788  00CF               	movwf	?___fttol+1
  5748  1789  3000               	movlw	0
  5749  178A  00CE               	movwf	?___fttol
  5750  178B  0008               	return
  5751  178C                     l2601:	
  5752  178C  084E               	movf	___fttol@f1,w
  5753  178D  00D2               	movwf	??___fttol
  5754  178E  084F               	movf	___fttol@f1+1,w
  5755  178F  00D3               	movwf	??___fttol+1
  5756  1790  0850               	movf	___fttol@f1+2,w
  5757  1791  00D4               	movwf	??___fttol+2
  5758  1792  3017               	movlw	23
  5759  1793                     u3445:	
  5760  1793  1003               	clrc
  5761  1794  0CD4               	rrf	??___fttol+2,f
  5762  1795  0CD3               	rrf	??___fttol+1,f
  5763  1796  0CD2               	rrf	??___fttol,f
  5764  1797  3EFF               	addlw	-1
  5765  1798  1D03               	skipz
  5766  1799  2F93               	goto	u3445
  5767  179A  0852               	movf	??___fttol,w
  5768  179B  00D5               	movwf	??___fttol+3
  5769  179C  0855               	movf	??___fttol+3,w
  5770  179D  00D6               	movwf	___fttol@sign1
  5771  179E  17CF               	bsf	___fttol@f1+1,7
  5772  179F  30FF               	movlw	255
  5773  17A0  05CE               	andwf	___fttol@f1,f
  5774  17A1  30FF               	movlw	255
  5775  17A2  05CF               	andwf	___fttol@f1+1,f
  5776  17A3  3000               	movlw	0
  5777  17A4  05D0               	andwf	___fttol@f1+2,f
  5778  17A5  084E               	movf	___fttol@f1,w
  5779  17A6  00D7               	movwf	___fttol@lval
  5780  17A7  084F               	movf	___fttol@f1+1,w
  5781  17A8  00D8               	movwf	___fttol@lval+1
  5782  17A9  0850               	movf	___fttol@f1+2,w
  5783  17AA  00D9               	movwf	___fttol@lval+2
  5784  17AB  01DA               	clrf	___fttol@lval+3
  5785  17AC  308E               	movlw	142
  5786  17AD  02DB               	subwf	___fttol@exp1,f
  5787  17AE  1FDB               	btfss	___fttol@exp1,7
  5788  17AF  2FCE               	goto	l2621
  5789  17B0  085B               	movf	___fttol@exp1,w
  5790  17B1  3A80               	xorlw	128
  5791  17B2  3E8F               	addlw	143
  5792  17B3  1803               	skipnc
  5793  17B4  2FBE               	goto	l2619
  5794  17B5  3000               	movlw	0
  5795  17B6  00D1               	movwf	?___fttol+3
  5796  17B7  3000               	movlw	0
  5797  17B8  00D0               	movwf	?___fttol+2
  5798  17B9  3000               	movlw	0
  5799  17BA  00CF               	movwf	?___fttol+1
  5800  17BB  3000               	movlw	0
  5801  17BC  00CE               	movwf	?___fttol
  5802  17BD  0008               	return
  5803  17BE                     l2619:	
  5804  17BE  3001               	movlw	1
  5805  17BF                     u3475:	
  5806  17BF  1003               	clrc
  5807  17C0  0CDA               	rrf	___fttol@lval+3,f
  5808  17C1  0CD9               	rrf	___fttol@lval+2,f
  5809  17C2  0CD8               	rrf	___fttol@lval+1,f
  5810  17C3  0CD7               	rrf	___fttol@lval,f
  5811  17C4  3EFF               	addlw	-1
  5812  17C5  1D03               	skipz
  5813  17C6  2FBF               	goto	u3475
  5814  17C7  3001               	movlw	1
  5815  17C8  00D2               	movwf	??___fttol
  5816  17C9  0852               	movf	??___fttol,w
  5817  17CA  07DB               	addwf	___fttol@exp1,f
  5818  17CB  1903               	btfsc	3,2
  5819  17CC  2FE9               	goto	l2631
  5820  17CD  2FBE               	goto	l2619
  5821  17CE                     l2621:	
  5822  17CE  3018               	movlw	24
  5823  17CF  025B               	subwf	___fttol@exp1,w
  5824  17D0  1C03               	skipc
  5825  17D1  2FE6               	goto	l2629
  5826  17D2  3000               	movlw	0
  5827  17D3  00D1               	movwf	?___fttol+3
  5828  17D4  3000               	movlw	0
  5829  17D5  00D0               	movwf	?___fttol+2
  5830  17D6  3000               	movlw	0
  5831  17D7  00CF               	movwf	?___fttol+1
  5832  17D8  3000               	movlw	0
  5833  17D9  00CE               	movwf	?___fttol
  5834  17DA  0008               	return
  5835  17DB                     l2627:	
  5836  17DB  3001               	movlw	1
  5837  17DC  00D2               	movwf	??___fttol
  5838  17DD                     u3505:	
  5839  17DD  1003               	clrc
  5840  17DE  0DD7               	rlf	___fttol@lval,f
  5841  17DF  0DD8               	rlf	___fttol@lval+1,f
  5842  17E0  0DD9               	rlf	___fttol@lval+2,f
  5843  17E1  0DDA               	rlf	___fttol@lval+3,f
  5844  17E2  0BD2               	decfsz	??___fttol,f
  5845  17E3  2FDD               	goto	u3505
  5846  17E4  3001               	movlw	1
  5847  17E5  02DB               	subwf	___fttol@exp1,f
  5848  17E6                     l2629:	
  5849  17E6  08DB               	movf	___fttol@exp1,f
  5850  17E7  1D03               	skipz
  5851  17E8  2FDB               	goto	l2627
  5852  17E9                     l2631:	
  5853  17E9  0856               	movf	___fttol@sign1,w
  5854  17EA  1903               	btfsc	3,2
  5855  17EB  2FF7               	goto	l2635
  5856  17EC  09D7               	comf	___fttol@lval,f
  5857  17ED  09D8               	comf	___fttol@lval+1,f
  5858  17EE  09D9               	comf	___fttol@lval+2,f
  5859  17EF  09DA               	comf	___fttol@lval+3,f
  5860  17F0  0AD7               	incf	___fttol@lval,f
  5861  17F1  1903               	skipnz
  5862  17F2  0AD8               	incf	___fttol@lval+1,f
  5863  17F3  1903               	skipnz
  5864  17F4  0AD9               	incf	___fttol@lval+2,f
  5865  17F5  1903               	skipnz
  5866  17F6  0ADA               	incf	___fttol@lval+3,f
  5867  17F7                     l2635:	
  5868  17F7  085A               	movf	___fttol@lval+3,w
  5869  17F8  00D1               	movwf	?___fttol+3
  5870  17F9  0859               	movf	___fttol@lval+2,w
  5871  17FA  00D0               	movwf	?___fttol+2
  5872  17FB  0858               	movf	___fttol@lval+1,w
  5873  17FC  00CF               	movwf	?___fttol+1
  5874  17FD  0857               	movf	___fttol@lval,w
  5875  17FE  00CE               	movwf	?___fttol
  5876  17FF  0008               	return
  5877  1800                     __end_of___fttol:	
  5878                           
  5879                           	psect	text24
  5880  12B0                     __ptext24:	
  5881 ;; *************** function ___ftneg *****************
  5882 ;; Defined at:
  5883 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;  f1              3   14[BANK0 ] float 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;		None
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  3   14[BANK0 ] float 
  5890 ;; Registers used:
  5891 ;;		wreg
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5897 ;;      Params:         0       3       0       0       0
  5898 ;;      Locals:         0       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0
  5900 ;;      Totals:         0       3       0       0       0
  5901 ;;Total ram usage:        3 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    2
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_displayPPM
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           
  5912                           ;psect for function ___ftneg
  5913  12B0                     ___ftneg:	
  5914                           
  5915                           ;incstack = 0
  5916                           ; Regs used in ___ftneg: [wreg]
  5917  12B0  1283               	bcf	3,5	;RP0=0, select bank0
  5918  12B1  1303               	bcf	3,6	;RP1=0, select bank0
  5919  12B2  0830               	movf	___ftneg@f1+2,w
  5920  12B3  042F               	iorwf	___ftneg@f1+1,w
  5921  12B4  042E               	iorwf	___ftneg@f1,w
  5922  12B5  1903               	skipnz
  5923  12B6  0008               	return
  5924  12B7  3080               	movlw	128
  5925  12B8  06B0               	xorwf	___ftneg@f1+2,f
  5926  12B9  0008               	return
  5927  12BA                     __end_of___ftneg:	
  5928                           
  5929                           	psect	text25
  5930  0CFB                     __ptext25:	
  5931 ;; *************** function ___ftmul *****************
  5932 ;; Defined at:
  5933 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  5934 ;; Parameters:    Size  Location     Type
  5935 ;;  f1              3   17[BANK0 ] float 
  5936 ;;  f2              3   20[BANK0 ] float 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;  f3_as_produc    3   28[BANK0 ] unsigned um
  5939 ;;  sign            1   32[BANK0 ] unsigned char 
  5940 ;;  cntr            1   31[BANK0 ] unsigned char 
  5941 ;;  exp             1   27[BANK0 ] unsigned char 
  5942 ;; Return value:  Size  Location     Type
  5943 ;;                  3   17[BANK0 ] float 
  5944 ;; Registers used:
  5945 ;;		wreg, status,2, status,0, pclath, cstack
  5946 ;; Tracked objects:
  5947 ;;		On entry : 0/0
  5948 ;;		On exit  : 0/0
  5949 ;;		Unchanged: 0/0
  5950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5951 ;;      Params:         0       6       0       0       0
  5952 ;;      Locals:         0       6       0       0       0
  5953 ;;      Temps:          0       4       0       0       0
  5954 ;;      Totals:         0      16       0       0       0
  5955 ;;Total ram usage:       16 bytes
  5956 ;; Hardware stack levels used:    1
  5957 ;; Hardware stack levels required when called:    3
  5958 ;; This function calls:
  5959 ;;		___ftpack
  5960 ;; This function is called by:
  5961 ;;		_displayPPM
  5962 ;;		_CalcMQ135
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function ___ftmul
  5968  0CFB                     ___ftmul:	
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  5972  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  5973  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  5974  0CFD  0831               	movf	___ftmul@f1,w
  5975  0CFE  00B7               	movwf	??___ftmul
  5976  0CFF  0832               	movf	___ftmul@f1+1,w
  5977  0D00  00B8               	movwf	??___ftmul+1
  5978  0D01  0833               	movf	___ftmul@f1+2,w
  5979  0D02  00B9               	movwf	??___ftmul+2
  5980  0D03  1003               	clrc
  5981  0D04  0D38               	rlf	??___ftmul+1,w
  5982  0D05  0D39               	rlf	??___ftmul+2,w
  5983  0D06  00BA               	movwf	??___ftmul+3
  5984  0D07  083A               	movf	??___ftmul+3,w
  5985  0D08  00BB               	movwf	___ftmul@exp
  5986  0D09  08BB               	movf	___ftmul@exp,f
  5987  0D0A  1D03               	skipz
  5988  0D0B  2D13               	goto	l2177
  5989  0D0C  3000               	movlw	0
  5990  0D0D  00B1               	movwf	?___ftmul
  5991  0D0E  3000               	movlw	0
  5992  0D0F  00B2               	movwf	?___ftmul+1
  5993  0D10  3000               	movlw	0
  5994  0D11  00B3               	movwf	?___ftmul+2
  5995  0D12  0008               	return
  5996  0D13                     l2177:	
  5997  0D13  0834               	movf	___ftmul@f2,w
  5998  0D14  00B7               	movwf	??___ftmul
  5999  0D15  0835               	movf	___ftmul@f2+1,w
  6000  0D16  00B8               	movwf	??___ftmul+1
  6001  0D17  0836               	movf	___ftmul@f2+2,w
  6002  0D18  00B9               	movwf	??___ftmul+2
  6003  0D19  1003               	clrc
  6004  0D1A  0D38               	rlf	??___ftmul+1,w
  6005  0D1B  0D39               	rlf	??___ftmul+2,w
  6006  0D1C  00BA               	movwf	??___ftmul+3
  6007  0D1D  083A               	movf	??___ftmul+3,w
  6008  0D1E  00C0               	movwf	___ftmul@sign
  6009  0D1F  08C0               	movf	___ftmul@sign,f
  6010  0D20  1D03               	skipz
  6011  0D21  2D29               	goto	l2183
  6012  0D22  3000               	movlw	0
  6013  0D23  00B1               	movwf	?___ftmul
  6014  0D24  3000               	movlw	0
  6015  0D25  00B2               	movwf	?___ftmul+1
  6016  0D26  3000               	movlw	0
  6017  0D27  00B3               	movwf	?___ftmul+2
  6018  0D28  0008               	return
  6019  0D29                     l2183:	
  6020  0D29  0840               	movf	___ftmul@sign,w
  6021  0D2A  3E7B               	addlw	123
  6022  0D2B  00B7               	movwf	??___ftmul
  6023  0D2C  0837               	movf	??___ftmul,w
  6024  0D2D  07BB               	addwf	___ftmul@exp,f
  6025  0D2E  0831               	movf	___ftmul@f1,w
  6026  0D2F  00B7               	movwf	??___ftmul
  6027  0D30  0832               	movf	___ftmul@f1+1,w
  6028  0D31  00B8               	movwf	??___ftmul+1
  6029  0D32  0833               	movf	___ftmul@f1+2,w
  6030  0D33  00B9               	movwf	??___ftmul+2
  6031  0D34  3010               	movlw	16
  6032  0D35                     u2675:	
  6033  0D35  1003               	clrc
  6034  0D36  0CB9               	rrf	??___ftmul+2,f
  6035  0D37  0CB8               	rrf	??___ftmul+1,f
  6036  0D38  0CB7               	rrf	??___ftmul,f
  6037  0D39  3EFF               	addlw	-1
  6038  0D3A  1D03               	skipz
  6039  0D3B  2D35               	goto	u2675
  6040  0D3C  0837               	movf	??___ftmul,w
  6041  0D3D  00BA               	movwf	??___ftmul+3
  6042  0D3E  083A               	movf	??___ftmul+3,w
  6043  0D3F  00C0               	movwf	___ftmul@sign
  6044  0D40  0834               	movf	___ftmul@f2,w
  6045  0D41  00B7               	movwf	??___ftmul
  6046  0D42  0835               	movf	___ftmul@f2+1,w
  6047  0D43  00B8               	movwf	??___ftmul+1
  6048  0D44  0836               	movf	___ftmul@f2+2,w
  6049  0D45  00B9               	movwf	??___ftmul+2
  6050  0D46  3010               	movlw	16
  6051  0D47                     u2685:	
  6052  0D47  1003               	clrc
  6053  0D48  0CB9               	rrf	??___ftmul+2,f
  6054  0D49  0CB8               	rrf	??___ftmul+1,f
  6055  0D4A  0CB7               	rrf	??___ftmul,f
  6056  0D4B  3EFF               	addlw	-1
  6057  0D4C  1D03               	skipz
  6058  0D4D  2D47               	goto	u2685
  6059  0D4E  0837               	movf	??___ftmul,w
  6060  0D4F  00BA               	movwf	??___ftmul+3
  6061  0D50  083A               	movf	??___ftmul+3,w
  6062  0D51  06C0               	xorwf	___ftmul@sign,f
  6063  0D52  3080               	movlw	128
  6064  0D53  00B7               	movwf	??___ftmul
  6065  0D54  0837               	movf	??___ftmul,w
  6066  0D55  05C0               	andwf	___ftmul@sign,f
  6067  0D56  17B2               	bsf	___ftmul@f1+1,7
  6068  0D57  17B5               	bsf	___ftmul@f2+1,7
  6069  0D58  30FF               	movlw	255
  6070  0D59  05B4               	andwf	___ftmul@f2,f
  6071  0D5A  30FF               	movlw	255
  6072  0D5B  05B5               	andwf	___ftmul@f2+1,f
  6073  0D5C  3000               	movlw	0
  6074  0D5D  05B6               	andwf	___ftmul@f2+2,f
  6075  0D5E  3000               	movlw	0
  6076  0D5F  00BC               	movwf	___ftmul@f3_as_product
  6077  0D60  3000               	movlw	0
  6078  0D61  00BD               	movwf	___ftmul@f3_as_product+1
  6079  0D62  3000               	movlw	0
  6080  0D63  00BE               	movwf	___ftmul@f3_as_product+2
  6081  0D64  3007               	movlw	7
  6082  0D65  00B7               	movwf	??___ftmul
  6083  0D66  0837               	movf	??___ftmul,w
  6084  0D67  00BF               	movwf	___ftmul@cntr
  6085  0D68                     l2195:	
  6086  0D68  1C31               	btfss	___ftmul@f1,0
  6087  0D69  2D78               	goto	l2199
  6088  0D6A  0834               	movf	___ftmul@f2,w
  6089  0D6B  07BC               	addwf	___ftmul@f3_as_product,f
  6090  0D6C  0835               	movf	___ftmul@f2+1,w
  6091  0D6D  1103               	clrz
  6092  0D6E  1803               	skipnc
  6093  0D6F  0A35               	incf	___ftmul@f2+1,w
  6094  0D70  1D03               	btfss	3,2
  6095  0D71  07BD               	addwf	___ftmul@f3_as_product+1,f
  6096  0D72  0836               	movf	___ftmul@f2+2,w
  6097  0D73  1103               	clrz
  6098  0D74  1803               	skipnc
  6099  0D75  0A36               	incf	___ftmul@f2+2,w
  6100  0D76  1D03               	btfss	3,2
  6101  0D77  07BE               	addwf	___ftmul@f3_as_product+2,f
  6102  0D78                     l2199:	
  6103  0D78  3001               	movlw	1
  6104  0D79                     u2715:	
  6105  0D79  1003               	clrc
  6106  0D7A  0CB3               	rrf	___ftmul@f1+2,f
  6107  0D7B  0CB2               	rrf	___ftmul@f1+1,f
  6108  0D7C  0CB1               	rrf	___ftmul@f1,f
  6109  0D7D  3EFF               	addlw	-1
  6110  0D7E  1D03               	skipz
  6111  0D7F  2D79               	goto	u2715
  6112  0D80  3001               	movlw	1
  6113  0D81                     u2725:	
  6114  0D81  1003               	clrc
  6115  0D82  0DB4               	rlf	___ftmul@f2,f
  6116  0D83  0DB5               	rlf	___ftmul@f2+1,f
  6117  0D84  0DB6               	rlf	___ftmul@f2+2,f
  6118  0D85  3EFF               	addlw	-1
  6119  0D86  1D03               	skipz
  6120  0D87  2D81               	goto	u2725
  6121  0D88  3001               	movlw	1
  6122  0D89  02BF               	subwf	___ftmul@cntr,f
  6123  0D8A  1D03               	btfss	3,2
  6124  0D8B  2D68               	goto	l2195
  6125  0D8C  3009               	movlw	9
  6126  0D8D  00B7               	movwf	??___ftmul
  6127  0D8E  0837               	movf	??___ftmul,w
  6128  0D8F  00BF               	movwf	___ftmul@cntr
  6129  0D90                     l2207:	
  6130  0D90  1C31               	btfss	___ftmul@f1,0
  6131  0D91  2DA0               	goto	l2211
  6132  0D92  0834               	movf	___ftmul@f2,w
  6133  0D93  07BC               	addwf	___ftmul@f3_as_product,f
  6134  0D94  0835               	movf	___ftmul@f2+1,w
  6135  0D95  1103               	clrz
  6136  0D96  1803               	skipnc
  6137  0D97  0A35               	incf	___ftmul@f2+1,w
  6138  0D98  1D03               	btfss	3,2
  6139  0D99  07BD               	addwf	___ftmul@f3_as_product+1,f
  6140  0D9A  0836               	movf	___ftmul@f2+2,w
  6141  0D9B  1103               	clrz
  6142  0D9C  1803               	skipnc
  6143  0D9D  0A36               	incf	___ftmul@f2+2,w
  6144  0D9E  1D03               	btfss	3,2
  6145  0D9F  07BE               	addwf	___ftmul@f3_as_product+2,f
  6146  0DA0                     l2211:	
  6147  0DA0  3001               	movlw	1
  6148  0DA1                     u2765:	
  6149  0DA1  1003               	clrc
  6150  0DA2  0CB3               	rrf	___ftmul@f1+2,f
  6151  0DA3  0CB2               	rrf	___ftmul@f1+1,f
  6152  0DA4  0CB1               	rrf	___ftmul@f1,f
  6153  0DA5  3EFF               	addlw	-1
  6154  0DA6  1D03               	skipz
  6155  0DA7  2DA1               	goto	u2765
  6156  0DA8  3001               	movlw	1
  6157  0DA9                     u2775:	
  6158  0DA9  1003               	clrc
  6159  0DAA  0CBE               	rrf	___ftmul@f3_as_product+2,f
  6160  0DAB  0CBD               	rrf	___ftmul@f3_as_product+1,f
  6161  0DAC  0CBC               	rrf	___ftmul@f3_as_product,f
  6162  0DAD  3EFF               	addlw	-1
  6163  0DAE  1D03               	skipz
  6164  0DAF  2DA9               	goto	u2775
  6165  0DB0  3001               	movlw	1
  6166  0DB1  02BF               	subwf	___ftmul@cntr,f
  6167  0DB2  1D03               	btfss	3,2
  6168  0DB3  2D90               	goto	l2207
  6169  0DB4  083C               	movf	___ftmul@f3_as_product,w
  6170  0DB5  00A0               	movwf	___ftpack@arg
  6171  0DB6  083D               	movf	___ftmul@f3_as_product+1,w
  6172  0DB7  00A1               	movwf	___ftpack@arg+1
  6173  0DB8  083E               	movf	___ftmul@f3_as_product+2,w
  6174  0DB9  00A2               	movwf	___ftpack@arg+2
  6175  0DBA  083B               	movf	___ftmul@exp,w
  6176  0DBB  00B7               	movwf	??___ftmul
  6177  0DBC  0837               	movf	??___ftmul,w
  6178  0DBD  00A3               	movwf	___ftpack@exp
  6179  0DBE  0840               	movf	___ftmul@sign,w
  6180  0DBF  00B8               	movwf	??___ftmul+1
  6181  0DC0  0838               	movf	??___ftmul+1,w
  6182  0DC1  00A4               	movwf	___ftpack@sign
  6183  0DC2  120A  118A  2795   	fcall	___ftpack
  6184  0DC5  1283               	bcf	3,5	;RP0=0, select bank0
  6185  0DC6  1303               	bcf	3,6	;RP1=0, select bank0
  6186  0DC7  0820               	movf	?___ftpack,w
  6187  0DC8  00B1               	movwf	?___ftmul
  6188  0DC9  0821               	movf	?___ftpack+1,w
  6189  0DCA  00B2               	movwf	?___ftmul+1
  6190  0DCB  0822               	movf	?___ftpack+2,w
  6191  0DCC  00B3               	movwf	?___ftmul+2
  6192  0DCD  0008               	return
  6193  0DCE                     __end_of___ftmul:	
  6194                           
  6195                           	psect	text26
  6196  0DCE                     __ptext26:	
  6197 ;; *************** function ___ftadd *****************
  6198 ;; Defined at:
  6199 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;  f1              3   33[BANK0 ] float 
  6202 ;;  f2              3   36[BANK0 ] float 
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  exp1            1   45[BANK0 ] unsigned char 
  6205 ;;  exp2            1   44[BANK0 ] unsigned char 
  6206 ;;  sign            1   43[BANK0 ] unsigned char 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  3   33[BANK0 ] float 
  6209 ;; Registers used:
  6210 ;;		wreg, status,2, status,0, pclath, cstack
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6216 ;;      Params:         0       6       0       0       0
  6217 ;;      Locals:         0       3       0       0       0
  6218 ;;      Temps:          0       4       0       0       0
  6219 ;;      Totals:         0      13       0       0       0
  6220 ;;Total ram usage:       13 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    3
  6223 ;; This function calls:
  6224 ;;		___ftpack
  6225 ;; This function is called by:
  6226 ;;		_displayPPM
  6227 ;;		_CalcMQ135
  6228 ;; This function uses a non-reentrant model
  6229 ;;
  6230                           
  6231                           
  6232                           ;psect for function ___ftadd
  6233  0DCE                     ___ftadd:	
  6234                           
  6235                           ;incstack = 0
  6236                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6237  0DCE  1283               	bcf	3,5	;RP0=0, select bank0
  6238  0DCF  1303               	bcf	3,6	;RP1=0, select bank0
  6239  0DD0  0841               	movf	___ftadd@f1,w
  6240  0DD1  00C7               	movwf	??___ftadd
  6241  0DD2  0842               	movf	___ftadd@f1+1,w
  6242  0DD3  00C8               	movwf	??___ftadd+1
  6243  0DD4  0843               	movf	___ftadd@f1+2,w
  6244  0DD5  00C9               	movwf	??___ftadd+2
  6245  0DD6  1003               	clrc
  6246  0DD7  0D48               	rlf	??___ftadd+1,w
  6247  0DD8  0D49               	rlf	??___ftadd+2,w
  6248  0DD9  00CA               	movwf	??___ftadd+3
  6249  0DDA  084A               	movf	??___ftadd+3,w
  6250  0DDB  00CD               	movwf	___ftadd@exp1
  6251  0DDC  0844               	movf	___ftadd@f2,w
  6252  0DDD  00C7               	movwf	??___ftadd
  6253  0DDE  0845               	movf	___ftadd@f2+1,w
  6254  0DDF  00C8               	movwf	??___ftadd+1
  6255  0DE0  0846               	movf	___ftadd@f2+2,w
  6256  0DE1  00C9               	movwf	??___ftadd+2
  6257  0DE2  1003               	clrc
  6258  0DE3  0D48               	rlf	??___ftadd+1,w
  6259  0DE4  0D49               	rlf	??___ftadd+2,w
  6260  0DE5  00CA               	movwf	??___ftadd+3
  6261  0DE6  084A               	movf	??___ftadd+3,w
  6262  0DE7  00CC               	movwf	___ftadd@exp2
  6263  0DE8  084D               	movf	___ftadd@exp1,w
  6264  0DE9  1903               	btfsc	3,2
  6265  0DEA  2DF7               	goto	l2065
  6266  0DEB  084C               	movf	___ftadd@exp2,w
  6267  0DEC  024D               	subwf	___ftadd@exp1,w
  6268  0DED  1803               	skipnc
  6269  0DEE  2DFE               	goto	l2069
  6270  0DEF  034D               	decf	___ftadd@exp1,w
  6271  0DF0  3AFF               	xorlw	255
  6272  0DF1  074C               	addwf	___ftadd@exp2,w
  6273  0DF2  00C7               	movwf	??___ftadd
  6274  0DF3  3019               	movlw	25
  6275  0DF4  0247               	subwf	??___ftadd,w
  6276  0DF5  1C03               	skipc
  6277  0DF6  2DFE               	goto	l2069
  6278  0DF7                     l2065:	
  6279  0DF7  0844               	movf	___ftadd@f2,w
  6280  0DF8  00C1               	movwf	?___ftadd
  6281  0DF9  0845               	movf	___ftadd@f2+1,w
  6282  0DFA  00C2               	movwf	?___ftadd+1
  6283  0DFB  0846               	movf	___ftadd@f2+2,w
  6284  0DFC  00C3               	movwf	?___ftadd+2
  6285  0DFD  0008               	return
  6286  0DFE                     l2069:	
  6287  0DFE  084C               	movf	___ftadd@exp2,w
  6288  0DFF  1903               	btfsc	3,2
  6289  0E00  0008               	return
  6290  0E01  084D               	movf	___ftadd@exp1,w
  6291  0E02  024C               	subwf	___ftadd@exp2,w
  6292  0E03  1803               	skipnc
  6293  0E04  2E0D               	goto	l2075
  6294  0E05  034C               	decf	___ftadd@exp2,w
  6295  0E06  3AFF               	xorlw	255
  6296  0E07  074D               	addwf	___ftadd@exp1,w
  6297  0E08  00C7               	movwf	??___ftadd
  6298  0E09  3019               	movlw	25
  6299  0E0A  0247               	subwf	??___ftadd,w
  6300  0E0B  1803               	btfsc	3,0
  6301  0E0C  0008               	return
  6302  0E0D                     l2075:	
  6303  0E0D  3006               	movlw	6
  6304  0E0E  00C7               	movwf	??___ftadd
  6305  0E0F  0847               	movf	??___ftadd,w
  6306  0E10  00CB               	movwf	___ftadd@sign
  6307  0E11  1BC3               	btfsc	___ftadd@f1+2,7
  6308  0E12  17CB               	bsf	___ftadd@sign,7
  6309  0E13  1BC6               	btfsc	___ftadd@f2+2,7
  6310  0E14  174B               	bsf	___ftadd@sign,6
  6311  0E15  17C2               	bsf	___ftadd@f1+1,7
  6312  0E16  30FF               	movlw	255
  6313  0E17  05C1               	andwf	___ftadd@f1,f
  6314  0E18  30FF               	movlw	255
  6315  0E19  05C2               	andwf	___ftadd@f1+1,f
  6316  0E1A  3000               	movlw	0
  6317  0E1B  05C3               	andwf	___ftadd@f1+2,f
  6318  0E1C  17C5               	bsf	___ftadd@f2+1,7
  6319  0E1D  30FF               	movlw	255
  6320  0E1E  05C4               	andwf	___ftadd@f2,f
  6321  0E1F  30FF               	movlw	255
  6322  0E20  05C5               	andwf	___ftadd@f2+1,f
  6323  0E21  3000               	movlw	0
  6324  0E22  05C6               	andwf	___ftadd@f2+2,f
  6325  0E23  084C               	movf	___ftadd@exp2,w
  6326  0E24  024D               	subwf	___ftadd@exp1,w
  6327  0E25  1803               	skipnc
  6328  0E26  2E4D               	goto	l2097
  6329  0E27                     l2087:	
  6330  0E27  3001               	movlw	1
  6331  0E28                     u2425:	
  6332  0E28  1003               	clrc
  6333  0E29  0DC4               	rlf	___ftadd@f2,f
  6334  0E2A  0DC5               	rlf	___ftadd@f2+1,f
  6335  0E2B  0DC6               	rlf	___ftadd@f2+2,f
  6336  0E2C  3EFF               	addlw	-1
  6337  0E2D  1D03               	skipz
  6338  0E2E  2E28               	goto	u2425
  6339  0E2F  3001               	movlw	1
  6340  0E30  02CC               	subwf	___ftadd@exp2,f
  6341  0E31  084C               	movf	___ftadd@exp2,w
  6342  0E32  064D               	xorwf	___ftadd@exp1,w
  6343  0E33  1903               	skipnz
  6344  0E34  2E48               	goto	l2095
  6345  0E35  3001               	movlw	1
  6346  0E36  02CB               	subwf	___ftadd@sign,f
  6347  0E37  084B               	movf	___ftadd@sign,w
  6348  0E38  3907               	andlw	7
  6349  0E39  1903               	btfsc	3,2
  6350  0E3A  2E48               	goto	l2095
  6351  0E3B  2E27               	goto	l2087
  6352  0E3C                     l2093:	
  6353  0E3C  3001               	movlw	1
  6354  0E3D                     u2455:	
  6355  0E3D  1003               	clrc
  6356  0E3E  0CC3               	rrf	___ftadd@f1+2,f
  6357  0E3F  0CC2               	rrf	___ftadd@f1+1,f
  6358  0E40  0CC1               	rrf	___ftadd@f1,f
  6359  0E41  3EFF               	addlw	-1
  6360  0E42  1D03               	skipz
  6361  0E43  2E3D               	goto	u2455
  6362  0E44  3001               	movlw	1
  6363  0E45  00C7               	movwf	??___ftadd
  6364  0E46  0847               	movf	??___ftadd,w
  6365  0E47  07CD               	addwf	___ftadd@exp1,f
  6366  0E48                     l2095:	
  6367  0E48  084D               	movf	___ftadd@exp1,w
  6368  0E49  064C               	xorwf	___ftadd@exp2,w
  6369  0E4A  1903               	btfsc	3,2
  6370  0E4B  2E76               	goto	l653
  6371  0E4C  2E3C               	goto	l2093
  6372  0E4D                     l2097:	
  6373  0E4D  084D               	movf	___ftadd@exp1,w
  6374  0E4E  024C               	subwf	___ftadd@exp2,w
  6375  0E4F  1803               	skipnc
  6376  0E50  2E76               	goto	l653
  6377  0E51                     l2099:	
  6378  0E51  3001               	movlw	1
  6379  0E52                     u2485:	
  6380  0E52  1003               	clrc
  6381  0E53  0DC1               	rlf	___ftadd@f1,f
  6382  0E54  0DC2               	rlf	___ftadd@f1+1,f
  6383  0E55  0DC3               	rlf	___ftadd@f1+2,f
  6384  0E56  3EFF               	addlw	-1
  6385  0E57  1D03               	skipz
  6386  0E58  2E52               	goto	u2485
  6387  0E59  3001               	movlw	1
  6388  0E5A  02CD               	subwf	___ftadd@exp1,f
  6389  0E5B  084C               	movf	___ftadd@exp2,w
  6390  0E5C  064D               	xorwf	___ftadd@exp1,w
  6391  0E5D  1903               	skipnz
  6392  0E5E  2E72               	goto	l2107
  6393  0E5F  3001               	movlw	1
  6394  0E60  02CB               	subwf	___ftadd@sign,f
  6395  0E61  084B               	movf	___ftadd@sign,w
  6396  0E62  3907               	andlw	7
  6397  0E63  1903               	btfsc	3,2
  6398  0E64  2E72               	goto	l2107
  6399  0E65  2E51               	goto	l2099
  6400  0E66                     l2105:	
  6401  0E66  3001               	movlw	1
  6402  0E67                     u2515:	
  6403  0E67  1003               	clrc
  6404  0E68  0CC6               	rrf	___ftadd@f2+2,f
  6405  0E69  0CC5               	rrf	___ftadd@f2+1,f
  6406  0E6A  0CC4               	rrf	___ftadd@f2,f
  6407  0E6B  3EFF               	addlw	-1
  6408  0E6C  1D03               	skipz
  6409  0E6D  2E67               	goto	u2515
  6410  0E6E  3001               	movlw	1
  6411  0E6F  00C7               	movwf	??___ftadd
  6412  0E70  0847               	movf	??___ftadd,w
  6413  0E71  07CC               	addwf	___ftadd@exp2,f
  6414  0E72                     l2107:	
  6415  0E72  084D               	movf	___ftadd@exp1,w
  6416  0E73  064C               	xorwf	___ftadd@exp2,w
  6417  0E74  1D03               	skipz
  6418  0E75  2E66               	goto	l2105
  6419  0E76                     l653:	
  6420  0E76  1FCB               	btfss	___ftadd@sign,7
  6421  0E77  2E88               	goto	l2111
  6422  0E78  30FF               	movlw	255
  6423  0E79  06C1               	xorwf	___ftadd@f1,f
  6424  0E7A  30FF               	movlw	255
  6425  0E7B  06C2               	xorwf	___ftadd@f1+1,f
  6426  0E7C  30FF               	movlw	255
  6427  0E7D  06C3               	xorwf	___ftadd@f1+2,f
  6428  0E7E  3001               	movlw	1
  6429  0E7F  07C1               	addwf	___ftadd@f1,f
  6430  0E80  3000               	movlw	0
  6431  0E81  1803               	skipnc
  6432  0E82  3001               	movlw	1
  6433  0E83  07C2               	addwf	___ftadd@f1+1,f
  6434  0E84  3000               	movlw	0
  6435  0E85  1803               	skipnc
  6436  0E86  3001               	movlw	1
  6437  0E87  07C3               	addwf	___ftadd@f1+2,f
  6438  0E88                     l2111:	
  6439  0E88  1F4B               	btfss	___ftadd@sign,6
  6440  0E89  2E9A               	goto	l2115
  6441  0E8A  30FF               	movlw	255
  6442  0E8B  06C4               	xorwf	___ftadd@f2,f
  6443  0E8C  30FF               	movlw	255
  6444  0E8D  06C5               	xorwf	___ftadd@f2+1,f
  6445  0E8E  30FF               	movlw	255
  6446  0E8F  06C6               	xorwf	___ftadd@f2+2,f
  6447  0E90  3001               	movlw	1
  6448  0E91  07C4               	addwf	___ftadd@f2,f
  6449  0E92  3000               	movlw	0
  6450  0E93  1803               	skipnc
  6451  0E94  3001               	movlw	1
  6452  0E95  07C5               	addwf	___ftadd@f2+1,f
  6453  0E96  3000               	movlw	0
  6454  0E97  1803               	skipnc
  6455  0E98  3001               	movlw	1
  6456  0E99  07C6               	addwf	___ftadd@f2+2,f
  6457  0E9A                     l2115:	
  6458  0E9A  01CB               	clrf	___ftadd@sign
  6459  0E9B  0841               	movf	___ftadd@f1,w
  6460  0E9C  07C4               	addwf	___ftadd@f2,f
  6461  0E9D  0842               	movf	___ftadd@f1+1,w
  6462  0E9E  1103               	clrz
  6463  0E9F  1803               	skipnc
  6464  0EA0  0A42               	incf	___ftadd@f1+1,w
  6465  0EA1  1D03               	btfss	3,2
  6466  0EA2  07C5               	addwf	___ftadd@f2+1,f
  6467  0EA3  0843               	movf	___ftadd@f1+2,w
  6468  0EA4  1103               	clrz
  6469  0EA5  1803               	skipnc
  6470  0EA6  0A43               	incf	___ftadd@f1+2,w
  6471  0EA7  1D03               	btfss	3,2
  6472  0EA8  07C6               	addwf	___ftadd@f2+2,f
  6473  0EA9  1FC6               	btfss	___ftadd@f2+2,7
  6474  0EAA  2EBD               	goto	l2125
  6475  0EAB  30FF               	movlw	255
  6476  0EAC  06C4               	xorwf	___ftadd@f2,f
  6477  0EAD  30FF               	movlw	255
  6478  0EAE  06C5               	xorwf	___ftadd@f2+1,f
  6479  0EAF  30FF               	movlw	255
  6480  0EB0  06C6               	xorwf	___ftadd@f2+2,f
  6481  0EB1  3001               	movlw	1
  6482  0EB2  07C4               	addwf	___ftadd@f2,f
  6483  0EB3  3000               	movlw	0
  6484  0EB4  1803               	skipnc
  6485  0EB5  3001               	movlw	1
  6486  0EB6  07C5               	addwf	___ftadd@f2+1,f
  6487  0EB7  3000               	movlw	0
  6488  0EB8  1803               	skipnc
  6489  0EB9  3001               	movlw	1
  6490  0EBA  07C6               	addwf	___ftadd@f2+2,f
  6491  0EBB  01CB               	clrf	___ftadd@sign
  6492  0EBC  0ACB               	incf	___ftadd@sign,f
  6493  0EBD                     l2125:	
  6494  0EBD  0844               	movf	___ftadd@f2,w
  6495  0EBE  00A0               	movwf	___ftpack@arg
  6496  0EBF  0845               	movf	___ftadd@f2+1,w
  6497  0EC0  00A1               	movwf	___ftpack@arg+1
  6498  0EC1  0846               	movf	___ftadd@f2+2,w
  6499  0EC2  00A2               	movwf	___ftpack@arg+2
  6500  0EC3  084D               	movf	___ftadd@exp1,w
  6501  0EC4  00C7               	movwf	??___ftadd
  6502  0EC5  0847               	movf	??___ftadd,w
  6503  0EC6  00A3               	movwf	___ftpack@exp
  6504  0EC7  084B               	movf	___ftadd@sign,w
  6505  0EC8  00C8               	movwf	??___ftadd+1
  6506  0EC9  0848               	movf	??___ftadd+1,w
  6507  0ECA  00A4               	movwf	___ftpack@sign
  6508  0ECB  120A  118A  2795   	fcall	___ftpack
  6509  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  6510  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  6511  0ED0  0820               	movf	?___ftpack,w
  6512  0ED1  00C1               	movwf	?___ftadd
  6513  0ED2  0821               	movf	?___ftpack+1,w
  6514  0ED3  00C2               	movwf	?___ftadd+1
  6515  0ED4  0822               	movf	?___ftpack+2,w
  6516  0ED5  00C3               	movwf	?___ftadd+2
  6517  0ED6  0008               	return
  6518  0ED7                     __end_of___ftadd:	
  6519                           
  6520                           	psect	text27
  6521  13DF                     __ptext27:	
  6522 ;; *************** function ___awtoft *****************
  6523 ;; Defined at:
  6524 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  c               2    8[BANK0 ] int 
  6527 ;; Auto vars:     Size  Location     Type
  6528 ;;  sign            1   13[BANK0 ] unsigned char 
  6529 ;; Return value:  Size  Location     Type
  6530 ;;                  3    8[BANK0 ] float 
  6531 ;; Registers used:
  6532 ;;		wreg, status,2, status,0, pclath, cstack
  6533 ;; Tracked objects:
  6534 ;;		On entry : 0/0
  6535 ;;		On exit  : 0/0
  6536 ;;		Unchanged: 0/0
  6537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6538 ;;      Params:         0       3       0       0       0
  6539 ;;      Locals:         0       1       0       0       0
  6540 ;;      Temps:          0       2       0       0       0
  6541 ;;      Totals:         0       6       0       0       0
  6542 ;;Total ram usage:        6 bytes
  6543 ;; Hardware stack levels used:    1
  6544 ;; Hardware stack levels required when called:    3
  6545 ;; This function calls:
  6546 ;;		___ftpack
  6547 ;; This function is called by:
  6548 ;;		_displayPPM
  6549 ;;		_CalcMQ135
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           
  6554                           ;psect for function ___awtoft
  6555  13DF                     ___awtoft:	
  6556                           
  6557                           ;incstack = 0
  6558                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  6559  13DF  1283               	bcf	3,5	;RP0=0, select bank0
  6560  13E0  1303               	bcf	3,6	;RP1=0, select bank0
  6561  13E1  01AD               	clrf	___awtoft@sign
  6562  13E2  1FA9               	btfss	___awtoft@c+1,7
  6563  13E3  2BEB               	goto	l2053
  6564  13E4  09A8               	comf	___awtoft@c,f
  6565  13E5  09A9               	comf	___awtoft@c+1,f
  6566  13E6  0AA8               	incf	___awtoft@c,f
  6567  13E7  1903               	skipnz
  6568  13E8  0AA9               	incf	___awtoft@c+1,f
  6569  13E9  01AD               	clrf	___awtoft@sign
  6570  13EA  0AAD               	incf	___awtoft@sign,f
  6571  13EB                     l2053:	
  6572  13EB  0828               	movf	___awtoft@c,w
  6573  13EC  00A0               	movwf	___ftpack@arg
  6574  13ED  0829               	movf	___awtoft@c+1,w
  6575  13EE  00A1               	movwf	___ftpack@arg+1
  6576  13EF  01A2               	clrf	___ftpack@arg+2
  6577  13F0  308E               	movlw	142
  6578  13F1  00AB               	movwf	??___awtoft
  6579  13F2  082B               	movf	??___awtoft,w
  6580  13F3  00A3               	movwf	___ftpack@exp
  6581  13F4  082D               	movf	___awtoft@sign,w
  6582  13F5  00AC               	movwf	??___awtoft+1
  6583  13F6  082C               	movf	??___awtoft+1,w
  6584  13F7  00A4               	movwf	___ftpack@sign
  6585  13F8  120A  118A  2795   	fcall	___ftpack
  6586  13FB  1283               	bcf	3,5	;RP0=0, select bank0
  6587  13FC  1303               	bcf	3,6	;RP1=0, select bank0
  6588  13FD  0820               	movf	?___ftpack,w
  6589  13FE  00A8               	movwf	?___awtoft
  6590  13FF  0821               	movf	?___ftpack+1,w
  6591  1400  00A9               	movwf	?___awtoft+1
  6592  1401  0822               	movf	?___ftpack+2,w
  6593  1402  00AA               	movwf	?___awtoft+2
  6594  1403  0008               	return
  6595  1404                     __end_of___awtoft:	
  6596                           
  6597                           	psect	text28
  6598  0795                     __ptext28:	
  6599 ;; *************** function ___ftpack *****************
  6600 ;; Defined at:
  6601 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  6602 ;; Parameters:    Size  Location     Type
  6603 ;;  arg             3    0[BANK0 ] unsigned um
  6604 ;;  exp             1    3[BANK0 ] unsigned char 
  6605 ;;  sign            1    4[BANK0 ] unsigned char 
  6606 ;; Auto vars:     Size  Location     Type
  6607 ;;		None
  6608 ;; Return value:  Size  Location     Type
  6609 ;;                  3    0[BANK0 ] float 
  6610 ;; Registers used:
  6611 ;;		wreg, status,2, status,0
  6612 ;; Tracked objects:
  6613 ;;		On entry : 0/0
  6614 ;;		On exit  : 0/0
  6615 ;;		Unchanged: 0/0
  6616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6617 ;;      Params:         0       5       0       0       0
  6618 ;;      Locals:         0       0       0       0       0
  6619 ;;      Temps:          0       3       0       0       0
  6620 ;;      Totals:         0       8       0       0       0
  6621 ;;Total ram usage:        8 bytes
  6622 ;; Hardware stack levels used:    1
  6623 ;; Hardware stack levels required when called:    2
  6624 ;; This function calls:
  6625 ;;		Nothing
  6626 ;; This function is called by:
  6627 ;;		___awtoft
  6628 ;;		___ftadd
  6629 ;;		___ftdiv
  6630 ;;		___ftmul
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           
  6635                           ;psect for function ___ftpack
  6636  0795                     ___ftpack:	
  6637                           
  6638                           ;incstack = 0
  6639                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  6640  0795  1283               	bcf	3,5	;RP0=0, select bank0
  6641  0796  1303               	bcf	3,6	;RP1=0, select bank0
  6642  0797  0823               	movf	___ftpack@exp,w
  6643  0798  1903               	btfsc	3,2
  6644  0799  2F9F               	goto	l1975
  6645  079A  0822               	movf	___ftpack@arg+2,w
  6646  079B  0421               	iorwf	___ftpack@arg+1,w
  6647  079C  0420               	iorwf	___ftpack@arg,w
  6648  079D  1D03               	skipz
  6649  079E  2FB2               	goto	l1981
  6650  079F                     l1975:	
  6651  079F  3000               	movlw	0
  6652  07A0  00A0               	movwf	?___ftpack
  6653  07A1  3000               	movlw	0
  6654  07A2  00A1               	movwf	?___ftpack+1
  6655  07A3  3000               	movlw	0
  6656  07A4  00A2               	movwf	?___ftpack+2
  6657  07A5  0008               	return
  6658  07A6                     l1979:	
  6659  07A6  3001               	movlw	1
  6660  07A7  00A5               	movwf	??___ftpack
  6661  07A8  0825               	movf	??___ftpack,w
  6662  07A9  07A3               	addwf	___ftpack@exp,f
  6663  07AA  3001               	movlw	1
  6664  07AB                     u2175:	
  6665  07AB  1003               	clrc
  6666  07AC  0CA2               	rrf	___ftpack@arg+2,f
  6667  07AD  0CA1               	rrf	___ftpack@arg+1,f
  6668  07AE  0CA0               	rrf	___ftpack@arg,f
  6669  07AF  3EFF               	addlw	-1
  6670  07B0  1D03               	skipz
  6671  07B1  2FAB               	goto	u2175
  6672  07B2                     l1981:	
  6673  07B2  30FE               	movlw	254
  6674  07B3  0522               	andwf	___ftpack@arg+2,w
  6675  07B4  1903               	btfsc	3,2
  6676  07B5  2FCD               	goto	l624
  6677  07B6  2FA6               	goto	l1979
  6678  07B7                     l1983:	
  6679  07B7  3001               	movlw	1
  6680  07B8  00A5               	movwf	??___ftpack
  6681  07B9  0825               	movf	??___ftpack,w
  6682  07BA  07A3               	addwf	___ftpack@exp,f
  6683  07BB  3001               	movlw	1
  6684  07BC  07A0               	addwf	___ftpack@arg,f
  6685  07BD  3000               	movlw	0
  6686  07BE  1803               	skipnc
  6687  07BF  3001               	movlw	1
  6688  07C0  07A1               	addwf	___ftpack@arg+1,f
  6689  07C1  3000               	movlw	0
  6690  07C2  1803               	skipnc
  6691  07C3  3001               	movlw	1
  6692  07C4  07A2               	addwf	___ftpack@arg+2,f
  6693  07C5  3001               	movlw	1
  6694  07C6                     u2195:	
  6695  07C6  1003               	clrc
  6696  07C7  0CA2               	rrf	___ftpack@arg+2,f
  6697  07C8  0CA1               	rrf	___ftpack@arg+1,f
  6698  07C9  0CA0               	rrf	___ftpack@arg,f
  6699  07CA  3EFF               	addlw	-1
  6700  07CB  1D03               	skipz
  6701  07CC  2FC6               	goto	u2195
  6702  07CD                     l624:	
  6703  07CD  30FF               	movlw	255
  6704  07CE  0522               	andwf	___ftpack@arg+2,w
  6705  07CF  1903               	btfsc	3,2
  6706  07D0  2FDC               	goto	l1991
  6707  07D1  2FB7               	goto	l1983
  6708  07D2                     l1989:	
  6709  07D2  3001               	movlw	1
  6710  07D3  02A3               	subwf	___ftpack@exp,f
  6711  07D4  3001               	movlw	1
  6712  07D5                     u2215:	
  6713  07D5  1003               	clrc
  6714  07D6  0DA0               	rlf	___ftpack@arg,f
  6715  07D7  0DA1               	rlf	___ftpack@arg+1,f
  6716  07D8  0DA2               	rlf	___ftpack@arg+2,f
  6717  07D9  3EFF               	addlw	-1
  6718  07DA  1D03               	skipz
  6719  07DB  2FD5               	goto	u2215
  6720  07DC                     l1991:	
  6721  07DC  1FA1               	btfss	___ftpack@arg+1,7
  6722  07DD  2FD2               	goto	l1989
  6723  07DE  1823               	btfsc	___ftpack@exp,0
  6724  07DF  2FE6               	goto	l630
  6725  07E0  30FF               	movlw	255
  6726  07E1  05A0               	andwf	___ftpack@arg,f
  6727  07E2  307F               	movlw	127
  6728  07E3  05A1               	andwf	___ftpack@arg+1,f
  6729  07E4  30FF               	movlw	255
  6730  07E5  05A2               	andwf	___ftpack@arg+2,f
  6731  07E6                     l630:	
  6732  07E6  1003               	clrc
  6733  07E7  0CA3               	rrf	___ftpack@exp,f
  6734  07E8  0823               	movf	___ftpack@exp,w
  6735  07E9  00A5               	movwf	??___ftpack
  6736  07EA  01A6               	clrf	??___ftpack+1
  6737  07EB  01A7               	clrf	??___ftpack+2
  6738  07EC  3010               	movlw	16
  6739  07ED                     u2245:	
  6740  07ED  1003               	clrc
  6741  07EE  0DA5               	rlf	??___ftpack,f
  6742  07EF  0DA6               	rlf	??___ftpack+1,f
  6743  07F0  0DA7               	rlf	??___ftpack+2,f
  6744  07F1  3EFF               	addlw	-1
  6745  07F2  1D03               	skipz
  6746  07F3  2FED               	goto	u2245
  6747  07F4  0825               	movf	??___ftpack,w
  6748  07F5  04A0               	iorwf	___ftpack@arg,f
  6749  07F6  0826               	movf	??___ftpack+1,w
  6750  07F7  04A1               	iorwf	___ftpack@arg+1,f
  6751  07F8  0827               	movf	??___ftpack+2,w
  6752  07F9  04A2               	iorwf	___ftpack@arg+2,f
  6753  07FA  0824               	movf	___ftpack@sign,w
  6754  07FB  1903               	btfsc	3,2
  6755  07FC  0008               	return
  6756  07FD  17A2               	bsf	___ftpack@arg+2,7
  6757  07FE  0008               	return
  6758  07FF                     __end_of___ftpack:	
  6759                           
  6760                           	psect	text29
  6761  15D3                     __ptext29:	
  6762 ;; *************** function _displayDataDHT11 *****************
  6763 ;; Defined at:
  6764 ;;		line 76 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  6765 ;; Parameters:    Size  Location     Type
  6766 ;;		None
  6767 ;; Auto vars:     Size  Location     Type
  6768 ;;  buffer         15   41[BANK0 ] unsigned char [15]
  6769 ;; Return value:  Size  Location     Type
  6770 ;;		None               void
  6771 ;; Registers used:
  6772 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6773 ;; Tracked objects:
  6774 ;;		On entry : 0/0
  6775 ;;		On exit  : 0/0
  6776 ;;		Unchanged: 0/0
  6777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6778 ;;      Params:         0       0       0       0       0
  6779 ;;      Locals:         0      15       0       0       0
  6780 ;;      Temps:          0       3       0       0       0
  6781 ;;      Totals:         0      18       0       0       0
  6782 ;;Total ram usage:       18 bytes
  6783 ;; Hardware stack levels used:    1
  6784 ;; Hardware stack levels required when called:    4
  6785 ;; This function calls:
  6786 ;;		_instCTRL
  6787 ;;		_printToLCD
  6788 ;;		_sprintf
  6789 ;; This function is called by:
  6790 ;;		_main
  6791 ;; This function uses a non-reentrant model
  6792 ;;
  6793                           
  6794                           
  6795                           ;psect for function _displayDataDHT11
  6796  15D3                     _displayDataDHT11:	
  6797                           
  6798                           ;dht11_module.h: 78: char buffer[15];
  6799                           ;dht11_module.h: 79: _delay((unsigned long)((2)*(4000000/4000.0)));
  6800                           
  6801                           ;incstack = 0
  6802                           ; Regs used in _displayDataDHT11: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6803  15D3  3003               	movlw	3
  6804  15D4  1283               	bcf	3,5	;RP0=0, select bank0
  6805  15D5  1303               	bcf	3,6	;RP1=0, select bank0
  6806  15D6  00C7               	movwf	??_displayDataDHT11+1
  6807  15D7  3097               	movlw	151
  6808  15D8  00C6               	movwf	??_displayDataDHT11
  6809  15D9                     u4497:	
  6810  15D9  0BC6               	decfsz	??_displayDataDHT11,f
  6811  15DA  2DD9               	goto	u4497
  6812  15DB  0BC7               	decfsz	??_displayDataDHT11+1,f
  6813  15DC  2DD9               	goto	u4497
  6814  15DD  2DDE               	nop2
  6815                           
  6816                           ;dht11_module.h: 86: sprintf(buffer, "TEMP: %dC", temperature);
  6817  15DE  3088               	movlw	(STR_1-__stringbase)& (0+255)
  6818  15DF  1283               	bcf	3,5	;RP0=0, select bank0
  6819  15E0  1303               	bcf	3,6	;RP1=0, select bank0
  6820  15E1  00C6               	movwf	??_displayDataDHT11
  6821  15E2  0846               	movf	??_displayDataDHT11,w
  6822  15E3  00AE               	movwf	sprintf@f
  6823  15E4  087D               	movf	_temperature,w
  6824  15E5  00C7               	movwf	??_displayDataDHT11+1
  6825  15E6  01C8               	clrf	??_displayDataDHT11+2
  6826  15E7  0847               	movf	??_displayDataDHT11+1,w
  6827  15E8  00AF               	movwf	?_sprintf+1
  6828  15E9  0848               	movf	??_displayDataDHT11+2,w
  6829  15EA  00B0               	movwf	?_sprintf+2
  6830  15EB  3049               	movlw	displayDataDHT11@buffer& (0+255)
  6831  15EC  120A  118A  23FA  160A  118A  	fcall	_sprintf
  6832                           
  6833                           ;dht11_module.h: 87: printToLCD(buffer);
  6834  15F1  3049               	movlw	displayDataDHT11@buffer& (0+255)
  6835  15F2  1283               	bcf	3,5	;RP0=0, select bank0
  6836  15F3  1303               	bcf	3,6	;RP1=0, select bank0
  6837  15F4  00A2               	movwf	printToLCD@str
  6838  15F5  3000               	movlw	0
  6839  15F6  00A3               	movwf	printToLCD@str+1
  6840  15F7  160A  118A  2454  160A  118A  	fcall	_printToLCD
  6841                           
  6842                           ;dht11_module.h: 88: instCTRL(0xC0);
  6843  15FC  30C0               	movlw	192
  6844  15FD  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  6845                           
  6846                           ;dht11_module.h: 89: sprintf(buffer, "HMDT: %d%%", humidity);
  6847  1602  3072               	movlw	(STR_2-__stringbase)& (0+255)
  6848  1603  1283               	bcf	3,5	;RP0=0, select bank0
  6849  1604  1303               	bcf	3,6	;RP1=0, select bank0
  6850  1605  00C6               	movwf	??_displayDataDHT11
  6851  1606  0846               	movf	??_displayDataDHT11,w
  6852  1607  00AE               	movwf	sprintf@f
  6853  1608  087C               	movf	_humidity,w
  6854  1609  00C7               	movwf	??_displayDataDHT11+1
  6855  160A  01C8               	clrf	??_displayDataDHT11+2
  6856  160B  0847               	movf	??_displayDataDHT11+1,w
  6857  160C  00AF               	movwf	?_sprintf+1
  6858  160D  0848               	movf	??_displayDataDHT11+2,w
  6859  160E  00B0               	movwf	?_sprintf+2
  6860  160F  3049               	movlw	displayDataDHT11@buffer& (0+255)
  6861  1610  120A  118A  23FA  160A  118A  	fcall	_sprintf
  6862                           
  6863                           ;dht11_module.h: 90: printToLCD(buffer);
  6864  1615  3049               	movlw	displayDataDHT11@buffer& (0+255)
  6865  1616  1283               	bcf	3,5	;RP0=0, select bank0
  6866  1617  1303               	bcf	3,6	;RP1=0, select bank0
  6867  1618  00A2               	movwf	printToLCD@str
  6868  1619  3000               	movlw	0
  6869  161A  00A3               	movwf	printToLCD@str+1
  6870  161B  160A  118A  2454   	fcall	_printToLCD
  6871  161E  0008               	return
  6872  161F                     __end_of_displayDataDHT11:	
  6873                           
  6874                           	psect	text30
  6875  03FA                     __ptext30:	
  6876 ;; *************** function _sprintf *****************
  6877 ;; Defined at:
  6878 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  6879 ;; Parameters:    Size  Location     Type
  6880 ;;  sp              1    wreg     PTR unsigned char 
  6881 ;;		 -> main@buffer(16), debugInfo(10), displayTime@timeFormat(16), displayPPM@strBuffer(20), 
  6882 ;;		 -> displayDataDHT11@buffer(15), 
  6883 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  6884 ;;		 -> STR_22(25), STR_21(10), STR_20(10), STR_19(10), 
  6885 ;;		 -> STR_18(10), STR_17(10), STR_16(10), STR_15(10), 
  6886 ;;		 -> STR_14(10), STR_13(10), STR_12(10), STR_11(10), 
  6887 ;;		 -> STR_10(10), STR_9(16), STR_6(9), STR_5(3), 
  6888 ;;		 -> STR_4(6), STR_2(11), STR_1(10), 
  6889 ;; Auto vars:     Size  Location     Type
  6890 ;;  sp              1   37[BANK0 ] PTR unsigned char 
  6891 ;;		 -> main@buffer(16), debugInfo(10), displayTime@timeFormat(16), displayPPM@strBuffer(20), 
  6892 ;;		 -> displayDataDHT11@buffer(15), 
  6893 ;;  _val            3   33[BANK0 ] struct .
  6894 ;;  width           2   31[BANK0 ] int 
  6895 ;;  ccnt            2   28[BANK0 ] int 
  6896 ;;  c               1   36[BANK0 ] char 
  6897 ;;  flag            1   30[BANK0 ] unsigned char 
  6898 ;;  prec            1   27[BANK0 ] char 
  6899 ;;  ap              1   26[BANK0 ] PTR void [1]
  6900 ;;		 -> ?_sprintf(2), 
  6901 ;; Return value:  Size  Location     Type
  6902 ;;                  2   14[BANK0 ] int 
  6903 ;; Registers used:
  6904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6905 ;; Tracked objects:
  6906 ;;		On entry : 0/0
  6907 ;;		On exit  : 0/0
  6908 ;;		Unchanged: 0/0
  6909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6910 ;;      Params:         0       9       0       0       0
  6911 ;;      Locals:         0      12       0       0       0
  6912 ;;      Temps:          0       3       0       0       0
  6913 ;;      Totals:         0      24       0       0       0
  6914 ;;Total ram usage:       24 bytes
  6915 ;; Hardware stack levels used:    1
  6916 ;; Hardware stack levels required when called:    3
  6917 ;; This function calls:
  6918 ;;		___lwdiv
  6919 ;;		___lwmod
  6920 ;;		___wmul
  6921 ;;		_isdigit
  6922 ;; This function is called by:
  6923 ;;		_displayDataDHT11
  6924 ;;		_displayPPM
  6925 ;;		_displayTime
  6926 ;;		_setHoursStart
  6927 ;;		_setHoursEnd
  6928 ;;		_setMinutesStart
  6929 ;;		_setMinutesEnd
  6930 ;;		_main
  6931 ;; This function uses a non-reentrant model
  6932 ;;
  6933                           
  6934                           
  6935                           ;psect for function _sprintf
  6936  03FA                     _sprintf:	
  6937                           
  6938                           ;incstack = 0
  6939                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6940                           ;sprintf@sp stored from wreg
  6941  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  6942  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  6943  03FC  00C5               	movwf	sprintf@sp
  6944                           
  6945                           ;doprnt.c: 494: va_list ap;
  6946                           ;doprnt.c: 499: signed char c;
  6947                           ;doprnt.c: 501: int width;
  6948                           ;doprnt.c: 506: signed char prec;
  6949                           ;doprnt.c: 508: unsigned char flag;
  6950                           ;doprnt.c: 510: int ccnt = 0;
  6951  03FD  01BC               	clrf	sprintf@ccnt
  6952  03FE  01BD               	clrf	sprintf@ccnt+1
  6953                           
  6954                           ;doprnt.c: 527: union {
  6955                           ;doprnt.c: 528: unsigned int _val;
  6956                           ;doprnt.c: 529: struct {
  6957                           ;doprnt.c: 530: const char * _cp;
  6958                           ;doprnt.c: 531: unsigned _len;
  6959                           ;doprnt.c: 532: } _str;
  6960                           ;doprnt.c: 533: } _val;
  6961                           ;doprnt.c: 542: *ap = __va_start();
  6962  03FF  302F               	movlw	(?_sprintf+1)& (0+255)
  6963  0400  00B7               	movwf	??_sprintf
  6964  0401  0837               	movf	??_sprintf,w
  6965  0402  00BA               	movwf	sprintf@ap
  6966  0403                     l2515:	
  6967                           ;doprnt.c: 545: while(c = *f++) {
  6968                           
  6969  0403  3001               	movlw	1
  6970  0404  07AE               	addwf	sprintf@f,f
  6971  0405  30FF               	movlw	-1
  6972  0406  072E               	addwf	sprintf@f,w
  6973  0407  0084               	movwf	4
  6974  0408  120A  158A  200A  120A  118A  	fcall	stringdir
  6975  040D  00B7               	movwf	??_sprintf
  6976  040E  0837               	movf	??_sprintf,w
  6977  040F  00C4               	movwf	sprintf@c
  6978  0410  08C4               	movf	sprintf@c,f
  6979  0411  1903               	btfsc	3,2
  6980  0412  2E31               	goto	l2517
  6981                           
  6982                           ;doprnt.c: 547: if(c != '%')
  6983  0413  0844               	movf	sprintf@c,w
  6984  0414  3A25               	xorlw	37
  6985  0415  1903               	skipnz
  6986  0416  2C29               	goto	l2383
  6987                           
  6988                           ;doprnt.c: 549: {
  6989                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
  6990  0417  0844               	movf	sprintf@c,w
  6991  0418  00B7               	movwf	??_sprintf
  6992  0419  0845               	movf	sprintf@sp,w
  6993  041A  0084               	movwf	4
  6994  041B  0837               	movf	??_sprintf,w
  6995  041C  1383               	bcf	3,7	;select IRP bank0
  6996  041D  0080               	movwf	0
  6997  041E  3001               	movlw	1
  6998  041F  00B7               	movwf	??_sprintf
  6999  0420  0837               	movf	??_sprintf,w
  7000  0421  07C5               	addwf	sprintf@sp,f
  7001  0422  3001               	movlw	1
  7002  0423  07BC               	addwf	sprintf@ccnt,f
  7003  0424  1803               	skipnc
  7004  0425  0ABD               	incf	sprintf@ccnt+1,f
  7005  0426  3000               	movlw	0
  7006  0427  07BD               	addwf	sprintf@ccnt+1,f
  7007                           
  7008                           ;doprnt.c: 551: continue;
  7009  0428  2C03               	goto	l2515
  7010  0429                     l2383:	
  7011                           
  7012                           ;doprnt.c: 552: }
  7013                           ;doprnt.c: 555: width = 0;
  7014  0429  01BF               	clrf	sprintf@width
  7015  042A  01C0               	clrf	sprintf@width+1
  7016                           
  7017                           ;doprnt.c: 557: flag = 0;
  7018  042B  01BE               	clrf	sprintf@flag
  7019                           
  7020                           ;doprnt.c: 560: switch(*f) {
  7021                           
  7022                           ;doprnt.c: 559: for(;;) {
  7023  042C  2C32               	goto	l2389
  7024  042D                     l335:	
  7025                           ;doprnt.c: 588: case '0':
  7026                           
  7027                           
  7028                           ;doprnt.c: 589: flag |= 0x04;
  7029  042D  153E               	bsf	sprintf@flag,2
  7030                           
  7031                           ;doprnt.c: 590: f++;
  7032  042E  3001               	movlw	1
  7033  042F  00B7               	movwf	??_sprintf
  7034  0430  0837               	movf	??_sprintf,w
  7035  0431  07AE               	addwf	sprintf@f,f
  7036  0432                     l2389:	
  7037                           ;doprnt.c: 593: }
  7038                           
  7039                           ;doprnt.c: 591: continue;
  7040                           
  7041  0432  082E               	movf	sprintf@f,w
  7042  0433  0084               	movwf	4
  7043  0434  120A  158A  200A  120A  118A  	fcall	stringdir
  7044                           
  7045                           ; Switch size 1, requested type "space"
  7046                           ; Number of cases is 1, Range of values is 48 to 48
  7047                           ; switch strategies available:
  7048                           ; Name         Instructions Cycles
  7049                           ; simple_byte            4     3 (average)
  7050                           ; direct_byte           14    11 (fixed)
  7051                           ; jumptable            263     9 (fixed)
  7052                           ;	Chosen strategy is simple_byte
  7053  0439  3A30               	xorlw	48	; case 48
  7054  043A  1903               	skipnz
  7055  043B  2C2D               	goto	l335
  7056  043C  2C3D               	goto	l2391
  7057  043D                     l2391:	
  7058                           ;doprnt.c: 595: }
  7059                           
  7060                           ;doprnt.c: 594: break;
  7061                           
  7062                           
  7063                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  7064  043D  082E               	movf	sprintf@f,w
  7065  043E  0084               	movwf	4
  7066  043F  120A  158A  200A  120A  118A  	fcall	stringdir
  7067  0444  160A  118A  22D9  120A  118A  	fcall	_isdigit
  7068  0449  1C03               	btfss	3,0
  7069  044A  2CF0               	goto	l2431
  7070                           
  7071                           ;doprnt.c: 607: width = 0;
  7072  044B  1283               	bcf	3,5	;RP0=0, select bank0
  7073  044C  1303               	bcf	3,6	;RP1=0, select bank0
  7074  044D  01BF               	clrf	sprintf@width
  7075  044E  01C0               	clrf	sprintf@width+1
  7076  044F                     l2395:	
  7077                           ;doprnt.c: 608: do {
  7078                           
  7079                           
  7080                           ;doprnt.c: 609: width *= 10;
  7081  044F  300A               	movlw	10
  7082  0450  1283               	bcf	3,5	;RP0=0, select bank0
  7083  0451  1303               	bcf	3,6	;RP1=0, select bank0
  7084  0452  00A0               	movwf	___wmul@multiplier
  7085  0453  3000               	movlw	0
  7086  0454  00A1               	movwf	___wmul@multiplier+1
  7087  0455  0840               	movf	sprintf@width+1,w
  7088  0456  01A3               	clrf	___wmul@multiplicand+1
  7089  0457  07A3               	addwf	___wmul@multiplicand+1,f
  7090  0458  083F               	movf	sprintf@width,w
  7091  0459  01A2               	clrf	___wmul@multiplicand
  7092  045A  07A2               	addwf	___wmul@multiplicand,f
  7093  045B  160A  118A  23BA  120A  118A  	fcall	___wmul
  7094  0460  1283               	bcf	3,5	;RP0=0, select bank0
  7095  0461  1303               	bcf	3,6	;RP1=0, select bank0
  7096  0462  0821               	movf	?___wmul+1,w
  7097  0463  01C0               	clrf	sprintf@width+1
  7098  0464  07C0               	addwf	sprintf@width+1,f
  7099  0465  0820               	movf	?___wmul,w
  7100  0466  01BF               	clrf	sprintf@width
  7101  0467  07BF               	addwf	sprintf@width,f
  7102                           
  7103                           ;doprnt.c: 610: width += *f++ - '0';
  7104  0468  082E               	movf	sprintf@f,w
  7105  0469  0084               	movwf	4
  7106  046A  120A  158A  200A  120A  118A  	fcall	stringdir
  7107  046F  3ED0               	addlw	208
  7108  0470  00B7               	movwf	??_sprintf
  7109  0471  30FF               	movlw	255
  7110  0472  1803               	skipnc
  7111  0473  3000               	movlw	0
  7112  0474  00B8               	movwf	??_sprintf+1
  7113  0475  0837               	movf	??_sprintf,w
  7114  0476  07BF               	addwf	sprintf@width,f
  7115  0477  1803               	skipnc
  7116  0478  0AC0               	incf	sprintf@width+1,f
  7117  0479  0838               	movf	??_sprintf+1,w
  7118  047A  07C0               	addwf	sprintf@width+1,f
  7119  047B  3001               	movlw	1
  7120  047C  00B7               	movwf	??_sprintf
  7121  047D  0837               	movf	??_sprintf,w
  7122  047E  07AE               	addwf	sprintf@f,f
  7123                           
  7124                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  7125  047F  082E               	movf	sprintf@f,w
  7126  0480  0084               	movwf	4
  7127  0481  120A  158A  200A  120A  118A  	fcall	stringdir
  7128  0486  160A  118A  22D9  120A  118A  	fcall	_isdigit
  7129  048B  1C03               	btfss	3,0
  7130  048C  2CF0               	goto	l2431
  7131  048D  2C4F               	goto	l2395
  7132  048E                     l2403:	
  7133                           ;doprnt.c: 759: dostring:
  7134                           
  7135                           ;doprnt.c: 707: case 'i':
  7136                           ;doprnt.c: 708: break;
  7137                           
  7138                           ;doprnt.c: 706: case 'd':
  7139                           
  7140                           ;doprnt.c: 647: goto alldone;
  7141                           
  7142                           ;doprnt.c: 646: case 0:
  7143                           
  7144                           ;doprnt.c: 617: }
  7145                           ;doprnt.c: 644: switch(c = *f++) {
  7146                           
  7147                           
  7148                           ;doprnt.c: 766: if(width > _val._str._len)
  7149  048E  1283               	bcf	3,5	;RP0=0, select bank0
  7150  048F  1303               	bcf	3,6	;RP1=0, select bank0
  7151  0490  0840               	movf	sprintf@width+1,w
  7152  0491  0243               	subwf	sprintf@_val+2,w
  7153  0492  1D03               	skipz
  7154  0493  2C96               	goto	u3095
  7155  0494  083F               	movf	sprintf@width,w
  7156  0495  0242               	subwf	sprintf@_val+1,w
  7157  0496                     u3095:	
  7158  0496  1803               	skipnc
  7159  0497  2C9F               	goto	l2407
  7160                           
  7161                           ;doprnt.c: 767: width -= _val._str._len;
  7162  0498  0842               	movf	sprintf@_val+1,w
  7163  0499  02BF               	subwf	sprintf@width,f
  7164  049A  0843               	movf	sprintf@_val+2,w
  7165  049B  1C03               	skipc
  7166  049C  03C0               	decf	sprintf@width+1,f
  7167  049D  02C0               	subwf	sprintf@width+1,f
  7168  049E  2CA1               	goto	l2415
  7169  049F                     l2407:	
  7170                           
  7171                           ;doprnt.c: 768: else
  7172                           ;doprnt.c: 769: width = 0;
  7173  049F  01BF               	clrf	sprintf@width
  7174  04A0  01C0               	clrf	sprintf@width+1
  7175  04A1                     l2415:	
  7176                           ;doprnt.c: 773: while(width--)
  7177                           
  7178  04A1  30FF               	movlw	255
  7179  04A2  07BF               	addwf	sprintf@width,f
  7180  04A3  1803               	skipnc
  7181  04A4  0AC0               	incf	sprintf@width+1,f
  7182  04A5  30FF               	movlw	255
  7183  04A6  07C0               	addwf	sprintf@width+1,f
  7184  04A7  30FF               	movlw	255
  7185  04A8  0640               	xorwf	sprintf@width+1,w
  7186  04A9  1D03               	skipz
  7187  04AA  2CAD               	goto	u3105
  7188  04AB  30FF               	movlw	255
  7189  04AC  063F               	xorwf	sprintf@width,w
  7190  04AD                     u3105:	
  7191  04AD  1903               	btfsc	3,2
  7192  04AE  2CD8               	goto	l2425
  7193                           
  7194                           ;doprnt.c: 774: ((*sp++ = (' ')),(++ccnt));
  7195  04AF  3020               	movlw	32
  7196  04B0  00B7               	movwf	??_sprintf
  7197  04B1  0845               	movf	sprintf@sp,w
  7198  04B2  0084               	movwf	4
  7199  04B3  0837               	movf	??_sprintf,w
  7200  04B4  1383               	bcf	3,7	;select IRP bank0
  7201  04B5  0080               	movwf	0
  7202  04B6  3001               	movlw	1
  7203  04B7  00B7               	movwf	??_sprintf
  7204  04B8  0837               	movf	??_sprintf,w
  7205  04B9  07C5               	addwf	sprintf@sp,f
  7206  04BA  3001               	movlw	1
  7207  04BB  07BC               	addwf	sprintf@ccnt,f
  7208  04BC  1803               	skipnc
  7209  04BD  0ABD               	incf	sprintf@ccnt+1,f
  7210  04BE  3000               	movlw	0
  7211  04BF  07BD               	addwf	sprintf@ccnt+1,f
  7212  04C0  2CA1               	goto	l2415
  7213  04C1                     l2417:	
  7214                           ;doprnt.c: 776: while(_val._str._len--)
  7215                           
  7216                           
  7217                           ;doprnt.c: 777: ((*sp++ = (*_val._str._cp++)),(++ccnt));
  7218  04C1  0841               	movf	sprintf@_val,w
  7219  04C2  0084               	movwf	4
  7220  04C3  1383               	bcf	3,7	;select IRP bank0
  7221  04C4  0800               	movf	0,w
  7222  04C5  00B7               	movwf	??_sprintf
  7223  04C6  0845               	movf	sprintf@sp,w
  7224  04C7  0084               	movwf	4
  7225  04C8  0837               	movf	??_sprintf,w
  7226  04C9  0080               	movwf	0
  7227  04CA  3001               	movlw	1
  7228  04CB  00B7               	movwf	??_sprintf
  7229  04CC  0837               	movf	??_sprintf,w
  7230  04CD  07C1               	addwf	sprintf@_val,f
  7231  04CE  3001               	movlw	1
  7232  04CF  00B7               	movwf	??_sprintf
  7233  04D0  0837               	movf	??_sprintf,w
  7234  04D1  07C5               	addwf	sprintf@sp,f
  7235  04D2  3001               	movlw	1
  7236  04D3  07BC               	addwf	sprintf@ccnt,f
  7237  04D4  1803               	skipnc
  7238  04D5  0ABD               	incf	sprintf@ccnt+1,f
  7239  04D6  3000               	movlw	0
  7240  04D7  07BD               	addwf	sprintf@ccnt+1,f
  7241  04D8                     l2425:	
  7242  04D8  3001               	movlw	1
  7243  04D9  02C2               	subwf	sprintf@_val+1,f
  7244  04DA  3000               	movlw	0
  7245  04DB  1C03               	skipc
  7246  04DC  03C3               	decf	sprintf@_val+2,f
  7247  04DD  02C3               	subwf	sprintf@_val+2,f
  7248  04DE  30FF               	movlw	255
  7249  04DF  0643               	xorwf	sprintf@_val+2,w
  7250  04E0  1D03               	skipz
  7251  04E1  2CE4               	goto	u3115
  7252  04E2  30FF               	movlw	255
  7253  04E3  0642               	xorwf	sprintf@_val+1,w
  7254  04E4                     u3115:	
  7255  04E4  1903               	btfsc	3,2
  7256  04E5  2C03               	goto	l2515
  7257  04E6  2CC1               	goto	l2417
  7258  04E7                     l2427:	
  7259                           ;doprnt.c: 811: default:
  7260                           
  7261                           ;doprnt.c: 783: continue;
  7262                           
  7263                           
  7264                           ;doprnt.c: 814: _val._str._cp = (char *)&c;
  7265  04E7  3044               	movlw	sprintf@c& (0+255)
  7266  04E8  00B7               	movwf	??_sprintf
  7267  04E9  0837               	movf	??_sprintf,w
  7268  04EA  00C1               	movwf	sprintf@_val
  7269                           
  7270                           ;doprnt.c: 815: _val._str._len = 1;
  7271  04EB  3001               	movlw	1
  7272  04EC  00C2               	movwf	sprintf@_val+1
  7273  04ED  3000               	movlw	0
  7274  04EE  00C3               	movwf	sprintf@_val+2
  7275                           
  7276                           ;doprnt.c: 816: goto dostring;
  7277  04EF  2C8E               	goto	l2403
  7278  04F0                     l2431:	
  7279                           ;doprnt.c: 831: }
  7280                           
  7281  04F0  3001               	movlw	1
  7282  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  7283  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  7284  04F3  07AE               	addwf	sprintf@f,f
  7285  04F4  30FF               	movlw	-1
  7286  04F5  072E               	addwf	sprintf@f,w
  7287  04F6  0084               	movwf	4
  7288  04F7  120A  158A  200A  120A  118A  	fcall	stringdir
  7289  04FC  00C4               	movwf	sprintf@c
  7290                           
  7291                           ; Switch size 1, requested type "space"
  7292                           ; Number of cases is 3, Range of values is 0 to 105
  7293                           ; switch strategies available:
  7294                           ; Name         Instructions Cycles
  7295                           ; simple_byte           10     6 (average)
  7296                           ; jumptable            260     6 (fixed)
  7297                           ;	Chosen strategy is simple_byte
  7298  04FD  3A00               	xorlw	0	; case 0
  7299  04FE  1903               	skipnz
  7300  04FF  2E31               	goto	l2517
  7301  0500  3A64               	xorlw	100	; case 100
  7302  0501  1903               	skipnz
  7303  0502  2D07               	goto	l2433
  7304  0503  3A0D               	xorlw	13	; case 105
  7305  0504  1903               	skipnz
  7306  0505  2D07               	goto	l2433
  7307  0506  2CE7               	goto	l2427
  7308  0507                     l2433:	
  7309                           
  7310                           ;doprnt.c: 1262: {
  7311                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7312  0507  1283               	bcf	3,5	;RP0=0, select bank0
  7313  0508  1303               	bcf	3,6	;RP1=0, select bank0
  7314  0509  083A               	movf	sprintf@ap,w
  7315  050A  0084               	movwf	4
  7316  050B  1383               	bcf	3,7	;select IRP bank0
  7317  050C  0800               	movf	0,w
  7318  050D  00C1               	movwf	sprintf@_val
  7319  050E  0A84               	incf	4,f
  7320  050F  0800               	movf	0,w
  7321  0510  00C2               	movwf	sprintf@_val+1
  7322  0511  3002               	movlw	2
  7323  0512  00B7               	movwf	??_sprintf
  7324  0513  0837               	movf	??_sprintf,w
  7325  0514  07BA               	addwf	sprintf@ap,f
  7326                           
  7327                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  7328  0515  1FC2               	btfss	sprintf@_val+1,7
  7329  0516  2D20               	goto	l2443
  7330                           
  7331                           ;doprnt.c: 1271: flag |= 0x03;
  7332  0517  3003               	movlw	3
  7333  0518  00B7               	movwf	??_sprintf
  7334  0519  0837               	movf	??_sprintf,w
  7335  051A  04BE               	iorwf	sprintf@flag,f
  7336                           
  7337                           ;doprnt.c: 1272: _val._val = -_val._val;
  7338  051B  09C1               	comf	sprintf@_val,f
  7339  051C  09C2               	comf	sprintf@_val+1,f
  7340  051D  0AC1               	incf	sprintf@_val,f
  7341  051E  1903               	skipnz
  7342  051F  0AC2               	incf	sprintf@_val+1,f
  7343  0520                     l2443:	
  7344                           
  7345                           ;doprnt.c: 1273: }
  7346                           ;doprnt.c: 1275: }
  7347                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7348  0520  01C4               	clrf	sprintf@c
  7349  0521  0AC4               	incf	sprintf@c,f
  7350  0522  0844               	movf	sprintf@c,w
  7351  0523  3A05               	xorlw	5
  7352  0524  1903               	btfsc	3,2
  7353  0525  2D47               	goto	l2455
  7354  0526                     l2447:	
  7355                           
  7356                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  7357  0526  0844               	movf	sprintf@c,w
  7358  0527  00B7               	movwf	??_sprintf
  7359  0528  0737               	addwf	??_sprintf,w
  7360  0529  3E01               	addlw	low (_dpowers-__stringbase)
  7361  052A  0084               	movwf	4
  7362  052B  120A  158A  200A  120A  118A  	fcall	stringdir
  7363  0530  00B8               	movwf	??_sprintf+1
  7364  0531  120A  158A  200A  120A  118A  	fcall	stringdir
  7365  0536  00B9               	movwf	??_sprintf+2
  7366  0537  0839               	movf	??_sprintf+2,w
  7367  0538  0242               	subwf	sprintf@_val+1,w
  7368  0539  1D03               	skipz
  7369  053A  2D3D               	goto	u3145
  7370  053B  0838               	movf	??_sprintf+1,w
  7371  053C  0241               	subwf	sprintf@_val,w
  7372  053D                     u3145:	
  7373  053D  1C03               	btfss	3,0
  7374  053E  2D47               	goto	l2455
  7375                           
  7376                           ;doprnt.c: 1316: break;
  7377  053F  3001               	movlw	1
  7378  0540  00B7               	movwf	??_sprintf
  7379  0541  0837               	movf	??_sprintf,w
  7380  0542  07C4               	addwf	sprintf@c,f
  7381  0543  0844               	movf	sprintf@c,w
  7382  0544  3A05               	xorlw	5
  7383  0545  1D03               	skipz
  7384  0546  2D26               	goto	l2447
  7385  0547                     l2455:	
  7386                           
  7387                           ;doprnt.c: 1354: if(width && flag & 0x03)
  7388  0547  0840               	movf	sprintf@width+1,w
  7389  0548  043F               	iorwf	sprintf@width,w
  7390  0549  1903               	skipnz
  7391  054A  2D55               	goto	l362
  7392  054B  083E               	movf	sprintf@flag,w
  7393  054C  3903               	andlw	3
  7394  054D  1903               	btfsc	3,2
  7395  054E  2D55               	goto	l362
  7396                           
  7397                           ;doprnt.c: 1355: width--;
  7398  054F  30FF               	movlw	255
  7399  0550  07BF               	addwf	sprintf@width,f
  7400  0551  1803               	skipnc
  7401  0552  0AC0               	incf	sprintf@width+1,f
  7402  0553  30FF               	movlw	255
  7403  0554  07C0               	addwf	sprintf@width+1,f
  7404  0555                     l362:	
  7405                           
  7406                           ;doprnt.c: 1390: if(width > c)
  7407  0555  0844               	movf	sprintf@c,w
  7408  0556  00B7               	movwf	??_sprintf
  7409  0557  01B8               	clrf	??_sprintf+1
  7410  0558  1BB7               	btfsc	??_sprintf,7
  7411  0559  03B8               	decf	??_sprintf+1,f
  7412  055A  0838               	movf	??_sprintf+1,w
  7413  055B  3A80               	xorlw	128
  7414  055C  00B9               	movwf	??_sprintf+2
  7415  055D  0840               	movf	sprintf@width+1,w
  7416  055E  3A80               	xorlw	128
  7417  055F  0239               	subwf	??_sprintf+2,w
  7418  0560  1D03               	skipz
  7419  0561  2D64               	goto	u3185
  7420  0562  083F               	movf	sprintf@width,w
  7421  0563  0237               	subwf	??_sprintf,w
  7422  0564                     u3185:	
  7423  0564  1803               	skipnc
  7424  0565  2D74               	goto	l2463
  7425                           
  7426                           ;doprnt.c: 1391: width -= c;
  7427  0566  1283               	bcf	3,5	;RP0=0, select bank0
  7428  0567  1303               	bcf	3,6	;RP1=0, select bank0
  7429  0568  0844               	movf	sprintf@c,w
  7430  0569  00B7               	movwf	??_sprintf
  7431  056A  01B8               	clrf	??_sprintf+1
  7432  056B  1BB7               	btfsc	??_sprintf,7
  7433  056C  03B8               	decf	??_sprintf+1,f
  7434  056D  0837               	movf	??_sprintf,w
  7435  056E  02BF               	subwf	sprintf@width,f
  7436  056F  0838               	movf	??_sprintf+1,w
  7437  0570  1C03               	skipc
  7438  0571  03C0               	decf	sprintf@width+1,f
  7439  0572  02C0               	subwf	sprintf@width+1,f
  7440  0573  2D78               	goto	l2465
  7441  0574                     l2463:	
  7442                           
  7443                           ;doprnt.c: 1392: else
  7444                           ;doprnt.c: 1393: width = 0;
  7445  0574  1283               	bcf	3,5	;RP0=0, select bank0
  7446  0575  1303               	bcf	3,6	;RP1=0, select bank0
  7447  0576  01BF               	clrf	sprintf@width
  7448  0577  01C0               	clrf	sprintf@width+1
  7449  0578                     l2465:	
  7450                           
  7451                           ;doprnt.c: 1396: if(flag & 0x04) {
  7452  0578  1D3E               	btfss	sprintf@flag,2
  7453  0579  2DAB               	goto	l2485
  7454                           
  7455                           ;doprnt.c: 1401: if(flag & 0x03)
  7456  057A  083E               	movf	sprintf@flag,w
  7457  057B  3903               	andlw	3
  7458  057C  1903               	btfsc	3,2
  7459  057D  2D8F               	goto	l2475
  7460                           
  7461                           ;doprnt.c: 1402: ((*sp++ = ('-')),(++ccnt));
  7462  057E  302D               	movlw	45
  7463  057F  00B7               	movwf	??_sprintf
  7464  0580  0845               	movf	sprintf@sp,w
  7465  0581  0084               	movwf	4
  7466  0582  0837               	movf	??_sprintf,w
  7467  0583  1383               	bcf	3,7	;select IRP bank0
  7468  0584  0080               	movwf	0
  7469  0585  3001               	movlw	1
  7470  0586  00B7               	movwf	??_sprintf
  7471  0587  0837               	movf	??_sprintf,w
  7472  0588  07C5               	addwf	sprintf@sp,f
  7473  0589  3001               	movlw	1
  7474  058A  07BC               	addwf	sprintf@ccnt,f
  7475  058B  1803               	skipnc
  7476  058C  0ABD               	incf	sprintf@ccnt+1,f
  7477  058D  3000               	movlw	0
  7478  058E  07BD               	addwf	sprintf@ccnt+1,f
  7479  058F                     l2475:	
  7480                           
  7481                           ;doprnt.c: 1424: if(width)
  7482  058F  0840               	movf	sprintf@width+1,w
  7483  0590  043F               	iorwf	sprintf@width,w
  7484  0591  1903               	skipnz
  7485  0592  2DDF               	goto	l2503
  7486                           
  7487                           ;doprnt.c: 1426: ((*sp++ = ('0')),(++ccnt));
  7488                           
  7489                           ;doprnt.c: 1425: do
  7490  0593  3030               	movlw	48
  7491  0594  00B7               	movwf	??_sprintf
  7492  0595  0845               	movf	sprintf@sp,w
  7493  0596  0084               	movwf	4
  7494  0597  0837               	movf	??_sprintf,w
  7495  0598  1383               	bcf	3,7	;select IRP bank0
  7496  0599  0080               	movwf	0
  7497  059A  3001               	movlw	1
  7498  059B  00B7               	movwf	??_sprintf
  7499  059C  0837               	movf	??_sprintf,w
  7500  059D  07C5               	addwf	sprintf@sp,f
  7501  059E  3001               	movlw	1
  7502  059F  07BC               	addwf	sprintf@ccnt,f
  7503  05A0  1803               	skipnc
  7504  05A1  0ABD               	incf	sprintf@ccnt+1,f
  7505  05A2  3000               	movlw	0
  7506  05A3  07BD               	addwf	sprintf@ccnt+1,f
  7507                           
  7508                           ;doprnt.c: 1427: while(--width);
  7509  05A4  30FF               	movlw	255
  7510  05A5  07BF               	addwf	sprintf@width,f
  7511  05A6  1803               	skipnc
  7512  05A7  0AC0               	incf	sprintf@width+1,f
  7513  05A8  30FF               	movlw	255
  7514  05A9  07C0               	addwf	sprintf@width+1,f
  7515  05AA  2D8F               	goto	l2475
  7516  05AB                     l2485:	
  7517                           ;doprnt.c: 1429: } else
  7518                           
  7519                           
  7520                           ;doprnt.c: 1431: {
  7521                           ;doprnt.c: 1433: if(width
  7522                           ;doprnt.c: 1437: )
  7523  05AB  0840               	movf	sprintf@width+1,w
  7524  05AC  043F               	iorwf	sprintf@width,w
  7525  05AD  1903               	skipnz
  7526  05AE  2DCA               	goto	l2495
  7527  05AF                     l2487:	
  7528                           ;doprnt.c: 1438: do
  7529                           
  7530                           
  7531                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
  7532  05AF  3020               	movlw	32
  7533  05B0  00B7               	movwf	??_sprintf
  7534  05B1  0845               	movf	sprintf@sp,w
  7535  05B2  0084               	movwf	4
  7536  05B3  0837               	movf	??_sprintf,w
  7537  05B4  1383               	bcf	3,7	;select IRP bank0
  7538  05B5  0080               	movwf	0
  7539  05B6  3001               	movlw	1
  7540  05B7  00B7               	movwf	??_sprintf
  7541  05B8  0837               	movf	??_sprintf,w
  7542  05B9  07C5               	addwf	sprintf@sp,f
  7543  05BA  3001               	movlw	1
  7544  05BB  07BC               	addwf	sprintf@ccnt,f
  7545  05BC  1803               	skipnc
  7546  05BD  0ABD               	incf	sprintf@ccnt+1,f
  7547  05BE  3000               	movlw	0
  7548  05BF  07BD               	addwf	sprintf@ccnt+1,f
  7549                           
  7550                           ;doprnt.c: 1440: while(--width);
  7551  05C0  30FF               	movlw	255
  7552  05C1  07BF               	addwf	sprintf@width,f
  7553  05C2  1803               	skipnc
  7554  05C3  0AC0               	incf	sprintf@width+1,f
  7555  05C4  30FF               	movlw	255
  7556  05C5  07C0               	addwf	sprintf@width+1,f
  7557  05C6  0840               	movf	sprintf@width+1,w
  7558  05C7  043F               	iorwf	sprintf@width,w
  7559  05C8  1D03               	skipz
  7560  05C9  2DAF               	goto	l2487
  7561  05CA                     l2495:	
  7562                           
  7563                           ;doprnt.c: 1447: if(flag & 0x03)
  7564  05CA  083E               	movf	sprintf@flag,w
  7565  05CB  3903               	andlw	3
  7566  05CC  1903               	btfsc	3,2
  7567  05CD  2DDF               	goto	l2503
  7568                           
  7569                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
  7570  05CE  302D               	movlw	45
  7571  05CF  00B7               	movwf	??_sprintf
  7572  05D0  0845               	movf	sprintf@sp,w
  7573  05D1  0084               	movwf	4
  7574  05D2  0837               	movf	??_sprintf,w
  7575  05D3  1383               	bcf	3,7	;select IRP bank0
  7576  05D4  0080               	movwf	0
  7577  05D5  3001               	movlw	1
  7578  05D6  00B7               	movwf	??_sprintf
  7579  05D7  0837               	movf	??_sprintf,w
  7580  05D8  07C5               	addwf	sprintf@sp,f
  7581  05D9  3001               	movlw	1
  7582  05DA  07BC               	addwf	sprintf@ccnt,f
  7583  05DB  1803               	skipnc
  7584  05DC  0ABD               	incf	sprintf@ccnt+1,f
  7585  05DD  3000               	movlw	0
  7586  05DE  07BD               	addwf	sprintf@ccnt+1,f
  7587  05DF                     l2503:	
  7588                           
  7589                           ;doprnt.c: 1478: }
  7590                           ;doprnt.c: 1481: prec = c;
  7591  05DF  0844               	movf	sprintf@c,w
  7592  05E0  00B7               	movwf	??_sprintf
  7593  05E1  0837               	movf	??_sprintf,w
  7594  05E2  00BB               	movwf	sprintf@prec
  7595  05E3                     l2513:	
  7596                           ;doprnt.c: 1483: while(prec--) {
  7597                           
  7598  05E3  30FF               	movlw	-1
  7599  05E4  00B7               	movwf	??_sprintf
  7600  05E5  0837               	movf	??_sprintf,w
  7601  05E6  07BB               	addwf	sprintf@prec,f
  7602  05E7  083B               	movf	sprintf@prec,w
  7603  05E8  3AFF               	xorlw	-1
  7604  05E9  1903               	btfsc	3,2
  7605  05EA  2C03               	goto	l2515
  7606                           
  7607                           ;doprnt.c: 1487: {
  7608                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  7609  05EB  300A               	movlw	10
  7610  05EC  00A8               	movwf	___lwmod@divisor
  7611  05ED  3000               	movlw	0
  7612  05EE  00A9               	movwf	___lwmod@divisor+1
  7613  05EF  083B               	movf	sprintf@prec,w
  7614  05F0  00B7               	movwf	??_sprintf
  7615  05F1  0737               	addwf	??_sprintf,w
  7616  05F2  3E01               	addlw	low (_dpowers-__stringbase)
  7617  05F3  0084               	movwf	4
  7618  05F4  120A  158A  200A  120A  118A  	fcall	stringdir
  7619  05F9  00A0               	movwf	___lwdiv@divisor
  7620  05FA  120A  158A  200A  120A  118A  	fcall	stringdir
  7621  05FF  00A1               	movwf	___lwdiv@divisor+1
  7622  0600  0842               	movf	sprintf@_val+1,w
  7623  0601  01A3               	clrf	___lwdiv@dividend+1
  7624  0602  07A3               	addwf	___lwdiv@dividend+1,f
  7625  0603  0841               	movf	sprintf@_val,w
  7626  0604  01A2               	clrf	___lwdiv@dividend
  7627  0605  07A2               	addwf	___lwdiv@dividend,f
  7628  0606  160A  118A  254F  120A  118A  	fcall	___lwdiv
  7629  060B  1283               	bcf	3,5	;RP0=0, select bank0
  7630  060C  1303               	bcf	3,6	;RP1=0, select bank0
  7631  060D  0821               	movf	?___lwdiv+1,w
  7632  060E  01AB               	clrf	___lwmod@dividend+1
  7633  060F  07AB               	addwf	___lwmod@dividend+1,f
  7634  0610  0820               	movf	?___lwdiv,w
  7635  0611  01AA               	clrf	___lwmod@dividend
  7636  0612  07AA               	addwf	___lwmod@dividend,f
  7637  0613  160A  118A  24E3  120A  118A  	fcall	___lwmod
  7638  0618  1283               	bcf	3,5	;RP0=0, select bank0
  7639  0619  1303               	bcf	3,6	;RP1=0, select bank0
  7640  061A  0828               	movf	?___lwmod,w
  7641  061B  3E30               	addlw	48
  7642  061C  00B8               	movwf	??_sprintf+1
  7643  061D  0838               	movf	??_sprintf+1,w
  7644  061E  00C4               	movwf	sprintf@c
  7645                           
  7646                           ;doprnt.c: 1532: }
  7647                           ;doprnt.c: 1533: ((*sp++ = (c)),(++ccnt));
  7648  061F  0844               	movf	sprintf@c,w
  7649  0620  00B7               	movwf	??_sprintf
  7650  0621  0845               	movf	sprintf@sp,w
  7651  0622  0084               	movwf	4
  7652  0623  0837               	movf	??_sprintf,w
  7653  0624  1383               	bcf	3,7	;select IRP bank0
  7654  0625  0080               	movwf	0
  7655  0626  3001               	movlw	1
  7656  0627  00B7               	movwf	??_sprintf
  7657  0628  0837               	movf	??_sprintf,w
  7658  0629  07C5               	addwf	sprintf@sp,f
  7659  062A  3001               	movlw	1
  7660  062B  07BC               	addwf	sprintf@ccnt,f
  7661  062C  1803               	skipnc
  7662  062D  0ABD               	incf	sprintf@ccnt+1,f
  7663  062E  3000               	movlw	0
  7664  062F  07BD               	addwf	sprintf@ccnt+1,f
  7665  0630  2DE3               	goto	l2513
  7666  0631                     l2517:	
  7667                           ;doprnt.c: 1534: }
  7668                           ;doprnt.c: 1542: }
  7669                           ;doprnt.c: 1544: alldone:
  7670                           
  7671                           
  7672                           ;doprnt.c: 1547: *sp = 0;
  7673  0631  1283               	bcf	3,5	;RP0=0, select bank0
  7674  0632  1303               	bcf	3,6	;RP1=0, select bank0
  7675  0633  0845               	movf	sprintf@sp,w
  7676  0634  0084               	movwf	4
  7677  0635  1383               	bcf	3,7	;select IRP bank0
  7678  0636  0180               	clrf	0
  7679                           
  7680                           ;doprnt.c: 1549: return ccnt;
  7681  0637  083D               	movf	sprintf@ccnt+1,w
  7682  0638  01AF               	clrf	?_sprintf+1
  7683  0639  07AF               	addwf	?_sprintf+1,f
  7684  063A  083C               	movf	sprintf@ccnt,w
  7685  063B  01AE               	clrf	?_sprintf
  7686  063C  07AE               	addwf	?_sprintf,f
  7687  063D  0008               	return
  7688  063E                     __end_of_sprintf:	
  7689                           
  7690                           	psect	text31
  7691  12D9                     __ptext31:	
  7692 ;; *************** function _isdigit *****************
  7693 ;; Defined at:
  7694 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  c               1    wreg     unsigned char 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  c               1    1[BANK0 ] unsigned char 
  7699 ;; Return value:  Size  Location     Type
  7700 ;;		None               void
  7701 ;; Registers used:
  7702 ;;		wreg, status,2, status,0
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7708 ;;      Params:         0       0       0       0       0
  7709 ;;      Locals:         0       2       0       0       0
  7710 ;;      Temps:          0       0       0       0       0
  7711 ;;      Totals:         0       2       0       0       0
  7712 ;;Total ram usage:        2 bytes
  7713 ;; Hardware stack levels used:    1
  7714 ;; Hardware stack levels required when called:    2
  7715 ;; This function calls:
  7716 ;;		Nothing
  7717 ;; This function is called by:
  7718 ;;		_sprintf
  7719 ;; This function uses a non-reentrant model
  7720 ;;
  7721                           
  7722                           
  7723                           ;psect for function _isdigit
  7724  12D9                     _isdigit:	
  7725                           
  7726                           ;incstack = 0
  7727                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7728                           ;isdigit@c stored from wreg
  7729  12D9  1283               	bcf	3,5	;RP0=0, select bank0
  7730  12DA  1303               	bcf	3,6	;RP1=0, select bank0
  7731  12DB  00A1               	movwf	isdigit@c
  7732  12DC  01A0               	clrf	_isdigit$521
  7733  12DD  303A               	movlw	58
  7734  12DE  0221               	subwf	isdigit@c,w
  7735  12DF  1803               	skipnc
  7736  12E0  2AE7               	goto	l2029
  7737  12E1  3030               	movlw	48
  7738  12E2  0221               	subwf	isdigit@c,w
  7739  12E3  1C03               	skipc
  7740  12E4  2AE7               	goto	l2029
  7741  12E5  01A0               	clrf	_isdigit$521
  7742  12E6  0AA0               	incf	_isdigit$521,f
  7743  12E7                     l2029:	
  7744  12E7  0C20               	rrf	_isdigit$521,w
  7745  12E8  0008               	return
  7746  12E9                     __end_of_isdigit:	
  7747                           
  7748                           	psect	text32
  7749  13BA                     __ptext32:	
  7750 ;; *************** function ___wmul *****************
  7751 ;; Defined at:
  7752 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7755 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  product         2    4[BANK0 ] unsigned int 
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  2    0[BANK0 ] unsigned int 
  7760 ;; Registers used:
  7761 ;;		wreg, status,2, status,0
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7767 ;;      Params:         0       4       0       0       0
  7768 ;;      Locals:         0       2       0       0       0
  7769 ;;      Temps:          0       0       0       0       0
  7770 ;;      Totals:         0       6       0       0       0
  7771 ;;Total ram usage:        6 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:    2
  7774 ;; This function calls:
  7775 ;;		Nothing
  7776 ;; This function is called by:
  7777 ;;		_sprintf
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           
  7782                           ;psect for function ___wmul
  7783  13BA                     ___wmul:	
  7784                           
  7785                           ;incstack = 0
  7786                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7787  13BA  1283               	bcf	3,5	;RP0=0, select bank0
  7788  13BB  1303               	bcf	3,6	;RP1=0, select bank0
  7789  13BC  01A4               	clrf	___wmul@product
  7790  13BD  01A5               	clrf	___wmul@product+1
  7791  13BE                     l2035:	
  7792  13BE  1C20               	btfss	___wmul@multiplier,0
  7793  13BF  2BC6               	goto	l463
  7794  13C0  0822               	movf	___wmul@multiplicand,w
  7795  13C1  07A4               	addwf	___wmul@product,f
  7796  13C2  1803               	skipnc
  7797  13C3  0AA5               	incf	___wmul@product+1,f
  7798  13C4  0823               	movf	___wmul@multiplicand+1,w
  7799  13C5  07A5               	addwf	___wmul@product+1,f
  7800  13C6                     l463:	
  7801  13C6  3001               	movlw	1
  7802  13C7                     u2295:	
  7803  13C7  1003               	clrc
  7804  13C8  0DA2               	rlf	___wmul@multiplicand,f
  7805  13C9  0DA3               	rlf	___wmul@multiplicand+1,f
  7806  13CA  3EFF               	addlw	-1
  7807  13CB  1D03               	skipz
  7808  13CC  2BC7               	goto	u2295
  7809  13CD  3001               	movlw	1
  7810  13CE                     u2305:	
  7811  13CE  1003               	clrc
  7812  13CF  0CA1               	rrf	___wmul@multiplier+1,f
  7813  13D0  0CA0               	rrf	___wmul@multiplier,f
  7814  13D1  3EFF               	addlw	-1
  7815  13D2  1D03               	skipz
  7816  13D3  2BCE               	goto	u2305
  7817  13D4  0821               	movf	___wmul@multiplier+1,w
  7818  13D5  0420               	iorwf	___wmul@multiplier,w
  7819  13D6  1D03               	skipz
  7820  13D7  2BBE               	goto	l2035
  7821  13D8  0825               	movf	___wmul@product+1,w
  7822  13D9  01A1               	clrf	?___wmul+1
  7823  13DA  07A1               	addwf	?___wmul+1,f
  7824  13DB  0824               	movf	___wmul@product,w
  7825  13DC  01A0               	clrf	?___wmul
  7826  13DD  07A0               	addwf	?___wmul,f
  7827  13DE  0008               	return
  7828  13DF                     __end_of___wmul:	
  7829                           
  7830                           	psect	text33
  7831  14E3                     __ptext33:	
  7832 ;; *************** function ___lwmod *****************
  7833 ;; Defined at:
  7834 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  7835 ;; Parameters:    Size  Location     Type
  7836 ;;  divisor         2    8[BANK0 ] unsigned int 
  7837 ;;  dividend        2   10[BANK0 ] unsigned int 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;  counter         1   13[BANK0 ] unsigned char 
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  2    8[BANK0 ] unsigned int 
  7842 ;; Registers used:
  7843 ;;		wreg, status,2, status,0
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7849 ;;      Params:         0       4       0       0       0
  7850 ;;      Locals:         0       1       0       0       0
  7851 ;;      Temps:          0       1       0       0       0
  7852 ;;      Totals:         0       6       0       0       0
  7853 ;;Total ram usage:        6 bytes
  7854 ;; Hardware stack levels used:    1
  7855 ;; Hardware stack levels required when called:    2
  7856 ;; This function calls:
  7857 ;;		Nothing
  7858 ;; This function is called by:
  7859 ;;		_sprintf
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           
  7864                           ;psect for function ___lwmod
  7865  14E3                     ___lwmod:	
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7869  14E3  1283               	bcf	3,5	;RP0=0, select bank0
  7870  14E4  1303               	bcf	3,6	;RP1=0, select bank0
  7871  14E5  0829               	movf	___lwmod@divisor+1,w
  7872  14E6  0428               	iorwf	___lwmod@divisor,w
  7873  14E7  1903               	skipnz
  7874  14E8  2D12               	goto	l2265
  7875  14E9  01AD               	clrf	___lwmod@counter
  7876  14EA  0AAD               	incf	___lwmod@counter,f
  7877  14EB                     l2255:	
  7878  14EB  1BA9               	btfsc	___lwmod@divisor+1,7
  7879  14EC  2CF9               	goto	l2257
  7880  14ED  3001               	movlw	1
  7881  14EE                     u2875:	
  7882  14EE  1003               	clrc
  7883  14EF  0DA8               	rlf	___lwmod@divisor,f
  7884  14F0  0DA9               	rlf	___lwmod@divisor+1,f
  7885  14F1  3EFF               	addlw	-1
  7886  14F2  1D03               	skipz
  7887  14F3  2CEE               	goto	u2875
  7888  14F4  3001               	movlw	1
  7889  14F5  00AC               	movwf	??___lwmod
  7890  14F6  082C               	movf	??___lwmod,w
  7891  14F7  07AD               	addwf	___lwmod@counter,f
  7892  14F8  2CEB               	goto	l2255
  7893  14F9                     l2257:	
  7894  14F9  0829               	movf	___lwmod@divisor+1,w
  7895  14FA  022B               	subwf	___lwmod@dividend+1,w
  7896  14FB  1D03               	skipz
  7897  14FC  2CFF               	goto	u2895
  7898  14FD  0828               	movf	___lwmod@divisor,w
  7899  14FE  022A               	subwf	___lwmod@dividend,w
  7900  14FF                     u2895:	
  7901  14FF  1C03               	skipc
  7902  1500  2D07               	goto	l2261
  7903  1501  0828               	movf	___lwmod@divisor,w
  7904  1502  02AA               	subwf	___lwmod@dividend,f
  7905  1503  0829               	movf	___lwmod@divisor+1,w
  7906  1504  1C03               	skipc
  7907  1505  03AB               	decf	___lwmod@dividend+1,f
  7908  1506  02AB               	subwf	___lwmod@dividend+1,f
  7909  1507                     l2261:	
  7910  1507  3001               	movlw	1
  7911  1508                     u2905:	
  7912  1508  1003               	clrc
  7913  1509  0CA9               	rrf	___lwmod@divisor+1,f
  7914  150A  0CA8               	rrf	___lwmod@divisor,f
  7915  150B  3EFF               	addlw	-1
  7916  150C  1D03               	skipz
  7917  150D  2D08               	goto	u2905
  7918  150E  3001               	movlw	1
  7919  150F  02AD               	subwf	___lwmod@counter,f
  7920  1510  1D03               	btfss	3,2
  7921  1511  2CF9               	goto	l2257
  7922  1512                     l2265:	
  7923  1512  082B               	movf	___lwmod@dividend+1,w
  7924  1513  01A9               	clrf	?___lwmod+1
  7925  1514  07A9               	addwf	?___lwmod+1,f
  7926  1515  082A               	movf	___lwmod@dividend,w
  7927  1516  01A8               	clrf	?___lwmod
  7928  1517  07A8               	addwf	?___lwmod,f
  7929  1518  0008               	return
  7930  1519                     __end_of___lwmod:	
  7931                           
  7932                           	psect	text34
  7933  154F                     __ptext34:	
  7934 ;; *************** function ___lwdiv *****************
  7935 ;; Defined at:
  7936 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  7937 ;; Parameters:    Size  Location     Type
  7938 ;;  divisor         2    0[BANK0 ] unsigned int 
  7939 ;;  dividend        2    2[BANK0 ] unsigned int 
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;  quotient        2    5[BANK0 ] unsigned int 
  7942 ;;  counter         1    7[BANK0 ] unsigned char 
  7943 ;; Return value:  Size  Location     Type
  7944 ;;                  2    0[BANK0 ] unsigned int 
  7945 ;; Registers used:
  7946 ;;		wreg, status,2, status,0
  7947 ;; Tracked objects:
  7948 ;;		On entry : 0/0
  7949 ;;		On exit  : 0/0
  7950 ;;		Unchanged: 0/0
  7951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7952 ;;      Params:         0       4       0       0       0
  7953 ;;      Locals:         0       3       0       0       0
  7954 ;;      Temps:          0       1       0       0       0
  7955 ;;      Totals:         0       8       0       0       0
  7956 ;;Total ram usage:        8 bytes
  7957 ;; Hardware stack levels used:    1
  7958 ;; Hardware stack levels required when called:    2
  7959 ;; This function calls:
  7960 ;;		Nothing
  7961 ;; This function is called by:
  7962 ;;		_sprintf
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           
  7967                           ;psect for function ___lwdiv
  7968  154F                     ___lwdiv:	
  7969                           
  7970                           ;incstack = 0
  7971                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7972  154F  1283               	bcf	3,5	;RP0=0, select bank0
  7973  1550  1303               	bcf	3,6	;RP1=0, select bank0
  7974  1551  01A5               	clrf	___lwdiv@quotient
  7975  1552  01A6               	clrf	___lwdiv@quotient+1
  7976  1553  0821               	movf	___lwdiv@divisor+1,w
  7977  1554  0420               	iorwf	___lwdiv@divisor,w
  7978  1555  1903               	skipnz
  7979  1556  2D88               	goto	l2243
  7980  1557  01A7               	clrf	___lwdiv@counter
  7981  1558  0AA7               	incf	___lwdiv@counter,f
  7982  1559                     l2231:	
  7983  1559  1BA1               	btfsc	___lwdiv@divisor+1,7
  7984  155A  2D67               	goto	l2233
  7985  155B  3001               	movlw	1
  7986  155C                     u2805:	
  7987  155C  1003               	clrc
  7988  155D  0DA0               	rlf	___lwdiv@divisor,f
  7989  155E  0DA1               	rlf	___lwdiv@divisor+1,f
  7990  155F  3EFF               	addlw	-1
  7991  1560  1D03               	skipz
  7992  1561  2D5C               	goto	u2805
  7993  1562  3001               	movlw	1
  7994  1563  00A4               	movwf	??___lwdiv
  7995  1564  0824               	movf	??___lwdiv,w
  7996  1565  07A7               	addwf	___lwdiv@counter,f
  7997  1566  2D59               	goto	l2231
  7998  1567                     l2233:	
  7999  1567  3001               	movlw	1
  8000  1568                     u2825:	
  8001  1568  1003               	clrc
  8002  1569  0DA5               	rlf	___lwdiv@quotient,f
  8003  156A  0DA6               	rlf	___lwdiv@quotient+1,f
  8004  156B  3EFF               	addlw	-1
  8005  156C  1D03               	skipz
  8006  156D  2D68               	goto	u2825
  8007  156E  0821               	movf	___lwdiv@divisor+1,w
  8008  156F  0223               	subwf	___lwdiv@dividend+1,w
  8009  1570  1D03               	skipz
  8010  1571  2D74               	goto	u2835
  8011  1572  0820               	movf	___lwdiv@divisor,w
  8012  1573  0222               	subwf	___lwdiv@dividend,w
  8013  1574                     u2835:	
  8014  1574  1C03               	skipc
  8015  1575  2D7D               	goto	l2239
  8016  1576  0820               	movf	___lwdiv@divisor,w
  8017  1577  02A2               	subwf	___lwdiv@dividend,f
  8018  1578  0821               	movf	___lwdiv@divisor+1,w
  8019  1579  1C03               	skipc
  8020  157A  03A3               	decf	___lwdiv@dividend+1,f
  8021  157B  02A3               	subwf	___lwdiv@dividend+1,f
  8022  157C  1425               	bsf	___lwdiv@quotient,0
  8023  157D                     l2239:	
  8024  157D  3001               	movlw	1
  8025  157E                     u2845:	
  8026  157E  1003               	clrc
  8027  157F  0CA1               	rrf	___lwdiv@divisor+1,f
  8028  1580  0CA0               	rrf	___lwdiv@divisor,f
  8029  1581  3EFF               	addlw	-1
  8030  1582  1D03               	skipz
  8031  1583  2D7E               	goto	u2845
  8032  1584  3001               	movlw	1
  8033  1585  02A7               	subwf	___lwdiv@counter,f
  8034  1586  1D03               	btfss	3,2
  8035  1587  2D67               	goto	l2233
  8036  1588                     l2243:	
  8037  1588  0826               	movf	___lwdiv@quotient+1,w
  8038  1589  01A1               	clrf	?___lwdiv+1
  8039  158A  07A1               	addwf	?___lwdiv+1,f
  8040  158B  0825               	movf	___lwdiv@quotient,w
  8041  158C  01A0               	clrf	?___lwdiv
  8042  158D  07A0               	addwf	?___lwdiv,f
  8043  158E  0008               	return
  8044  158F                     __end_of___lwdiv:	
  8045                           
  8046                           	psect	text35
  8047  1454                     __ptext35:	
  8048 ;; *************** function _printToLCD *****************
  8049 ;; Defined at:
  8050 ;;		line 52 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  8051 ;; Parameters:    Size  Location     Type
  8052 ;;  str             2    2[BANK0 ] PTR const unsigned char 
  8053 ;;		 -> STR_29(16), STR_28(9), STR_27(10), STR_26(16), 
  8054 ;;		 -> STR_25(11), STR_24(12), STR_23(18), main@buffer(16), 
  8055 ;;		 -> debugInfo(10), displayTime@timeFormat(16), STR_8(8), STR_7(8), 
  8056 ;;		 -> displayPPM@strBuffer(20), STR_3(7), displayDataDHT11@buffer(15), 
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;		None               void
  8061 ;; Registers used:
  8062 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 0/0
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8068 ;;      Params:         0       2       0       0       0
  8069 ;;      Locals:         0       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0
  8071 ;;      Totals:         0       2       0       0       0
  8072 ;;Total ram usage:        2 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:    3
  8075 ;; This function calls:
  8076 ;;		_dataCTRL
  8077 ;;		_instCTRL
  8078 ;; This function is called by:
  8079 ;;		_displayDataDHT11
  8080 ;;		_runDHT11
  8081 ;;		_displayPPM
  8082 ;;		_displayTime
  8083 ;;		_setHoursStart
  8084 ;;		_setHoursEnd
  8085 ;;		_setMinutesStart
  8086 ;;		_setMinutesEnd
  8087 ;;		_main
  8088 ;;		_startUpSequence
  8089 ;;		_printStatusPPM
  8090 ;; This function uses a non-reentrant model
  8091 ;;
  8092                           
  8093                           
  8094                           ;psect for function _printToLCD
  8095  1454                     _printToLCD:	
  8096                           
  8097                           ;lcd_functions.h: 54: instCTRL(0x0C);
  8098                           
  8099                           ;incstack = 0
  8100                           ; Regs used in _printToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8101  1454  300C               	movlw	12
  8102  1455  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  8103  145A                     l2297:	
  8104                           ;lcd_functions.h: 55: while (*str)
  8105                           
  8106  145A  1283               	bcf	3,5	;RP0=0, select bank0
  8107  145B  1303               	bcf	3,6	;RP1=0, select bank0
  8108  145C  0823               	movf	printToLCD@str+1,w
  8109  145D  00FF               	movwf	127
  8110  145E  0822               	movf	printToLCD@str,w
  8111  145F  0084               	movwf	4
  8112  1460  120A  158A  2000  160A  118A  	fcall	stringtab
  8113  1465  3800               	iorlw	0
  8114  1466  1903               	btfsc	3,2
  8115  1467  0008               	return
  8116                           
  8117                           ;lcd_functions.h: 56: {
  8118                           ;lcd_functions.h: 57: dataCTRL(*str);
  8119  1468  1283               	bcf	3,5	;RP0=0, select bank0
  8120  1469  1303               	bcf	3,6	;RP1=0, select bank0
  8121  146A  0823               	movf	printToLCD@str+1,w
  8122  146B  00FF               	movwf	127
  8123  146C  0822               	movf	printToLCD@str,w
  8124  146D  0084               	movwf	4
  8125  146E  120A  158A  2000  160A  118A  	fcall	stringtab
  8126  1473  160A  118A  22FC  160A  118A  	fcall	_dataCTRL
  8127                           
  8128                           ;lcd_functions.h: 58: str++;
  8129  1478  3001               	movlw	1
  8130  1479  1283               	bcf	3,5	;RP0=0, select bank0
  8131  147A  1303               	bcf	3,6	;RP1=0, select bank0
  8132  147B  07A2               	addwf	printToLCD@str,f
  8133  147C  1803               	skipnc
  8134  147D  0AA3               	incf	printToLCD@str+1,f
  8135  147E  2C5A               	goto	l2297
  8136  147F                     __end_of_printToLCD:	
  8137                           
  8138                           	psect	text36
  8139  12FC                     __ptext36:	
  8140 ;; *************** function _dataCTRL *****************
  8141 ;; Defined at:
  8142 ;;		line 32 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  DAT             1    wreg     unsigned char 
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;  DAT             1    1[BANK0 ] unsigned char 
  8147 ;; Return value:  Size  Location     Type
  8148 ;;		None               void
  8149 ;; Registers used:
  8150 ;;		wreg
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8156 ;;      Params:         0       0       0       0       0
  8157 ;;      Locals:         0       1       0       0       0
  8158 ;;      Temps:          0       1       0       0       0
  8159 ;;      Totals:         0       2       0       0       0
  8160 ;;Total ram usage:        2 bytes
  8161 ;; Hardware stack levels used:    1
  8162 ;; Hardware stack levels required when called:    2
  8163 ;; This function calls:
  8164 ;;		Nothing
  8165 ;; This function is called by:
  8166 ;;		_printToLCD
  8167 ;; This function uses a non-reentrant model
  8168 ;;
  8169                           
  8170                           
  8171                           ;psect for function _dataCTRL
  8172  12FC                     _dataCTRL:	
  8173                           
  8174                           ;incstack = 0
  8175                           ; Regs used in _dataCTRL: [wreg]
  8176                           ;dataCTRL@DAT stored from wreg
  8177  12FC  1283               	bcf	3,5	;RP0=0, select bank0
  8178  12FD  1303               	bcf	3,6	;RP1=0, select bank0
  8179  12FE  00A1               	movwf	dataCTRL@DAT
  8180                           
  8181                           ;lcd_functions.h: 34: PORTD = DAT;
  8182  12FF  0821               	movf	dataCTRL@DAT,w
  8183  1300  0088               	movwf	8	;volatile
  8184                           
  8185                           ;lcd_functions.h: 35: RC0 = 1;
  8186  1301  1407               	bsf	7,0	;volatile
  8187                           
  8188                           ;lcd_functions.h: 36: RC1 = 0;
  8189  1302  1087               	bcf	7,1	;volatile
  8190                           
  8191                           ;lcd_functions.h: 37: RC2 = 1;
  8192  1303  1507               	bsf	7,2	;volatile
  8193                           
  8194                           ;lcd_functions.h: 38: _delay((unsigned long)((1)*(4000000/4000.0)));
  8195  1304  30F9               	movlw	249
  8196  1305  00A0               	movwf	??_dataCTRL
  8197  1306                     u4507:	
  8198  1306  0000               	nop
  8199  1307  0BA0               	decfsz	??_dataCTRL,f
  8200  1308  2B06               	goto	u4507
  8201  1309  2B0A               	nop2	;nop
  8202  130A  0000               	nop
  8203                           
  8204                           ;lcd_functions.h: 39: RC2 = 0;
  8205  130B  1283               	bcf	3,5	;RP0=0, select bank0
  8206  130C  1303               	bcf	3,6	;RP1=0, select bank0
  8207  130D  1107               	bcf	7,2	;volatile
  8208  130E  0008               	return
  8209  130F                     __end_of_dataCTRL:	
  8210                           
  8211                           	psect	text37
  8212  16BB                     __ptext37:	
  8213 ;; *************** function _checkTime *****************
  8214 ;; Defined at:
  8215 ;;		line 209 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler
      +.h"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;		None
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;		None               void
  8222 ;; Registers used:
  8223 ;;		wreg
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8229 ;;      Params:         0       0       0       0       0
  8230 ;;      Locals:         0       0       0       0       0
  8231 ;;      Temps:          0       0       0       0       0
  8232 ;;      Totals:         0       0       0       0       0
  8233 ;;Total ram usage:        0 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; Hardware stack levels required when called:    2
  8236 ;; This function calls:
  8237 ;;		Nothing
  8238 ;; This function is called by:
  8239 ;;		_main
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           
  8244                           ;psect for function _checkTime
  8245  16BB                     _checkTime:	
  8246                           
  8247                           ;time_scheduler.h: 211: if (hours == savedHoursEnd && minutes == savedMinutesEnd)
  8248                           
  8249                           ;incstack = 0
  8250                           ; Regs used in _checkTime: [wreg]
  8251  16BB  1283               	bcf	3,5	;RP0=0, select bank0
  8252  16BC  1303               	bcf	3,6	;RP1=0, select bank0
  8253  16BD  0867               	movf	_hours,w	;volatile
  8254  16BE  0669               	xorwf	_savedHoursEnd,w	;volatile
  8255  16BF  1D03               	skipz
  8256  16C0  2EC7               	goto	l2859
  8257  16C1  086F               	movf	_minutes,w	;volatile
  8258  16C2  066B               	xorwf	_savedMinutesEnd,w	;volatile
  8259  16C3  1D03               	skipz
  8260  16C4  2EC7               	goto	l2859
  8261                           
  8262                           ;time_scheduler.h: 212: {
  8263                           ;time_scheduler.h: 213: PORTCbits.RC4 = 1;
  8264  16C5  1607               	bsf	7,4	;volatile
  8265                           
  8266                           ;time_scheduler.h: 214: }
  8267  16C6  0008               	return
  8268  16C7                     l2859:	
  8269                           
  8270                           ;time_scheduler.h: 215: else if (savedHoursEnd > savedHoursStart)
  8271  16C7  0869               	movf	_savedHoursEnd,w	;volatile
  8272  16C8  026A               	subwf	_savedHoursStart,w	;volatile
  8273  16C9  1803               	skipnc
  8274  16CA  2EE7               	goto	l2873
  8275                           
  8276                           ;time_scheduler.h: 216: {
  8277                           ;time_scheduler.h: 218: if ((hours > savedHoursStart || (hours == savedHoursStart && min
      +                          utes >= savedMinutesStart)) &&
  8278                           ;time_scheduler.h: 219: (hours < savedHoursEnd || (hours == savedHoursEnd && minutes < s
      +                          avedMinutesEnd)))
  8279  16CB  0867               	movf	_hours,w	;volatile
  8280  16CC  026A               	subwf	_savedHoursStart,w	;volatile
  8281  16CD  1C03               	skipc
  8282  16CE  2ED7               	goto	l2867
  8283  16CF  0867               	movf	_hours,w	;volatile
  8284  16D0  066A               	xorwf	_savedHoursStart,w	;volatile
  8285  16D1  1D03               	skipz
  8286  16D2  2EE5               	goto	l241
  8287  16D3  086C               	movf	_savedMinutesStart,w	;volatile
  8288  16D4  026F               	subwf	_minutes,w	;volatile
  8289  16D5  1C03               	skipc
  8290  16D6  2EE5               	goto	l241
  8291  16D7                     l2867:	
  8292  16D7  0869               	movf	_savedHoursEnd,w	;volatile
  8293  16D8  0267               	subwf	_hours,w	;volatile
  8294  16D9  1C03               	skipc
  8295  16DA  2EE3               	goto	l245
  8296  16DB  0867               	movf	_hours,w	;volatile
  8297  16DC  0669               	xorwf	_savedHoursEnd,w	;volatile
  8298  16DD  1D03               	skipz
  8299  16DE  2EE5               	goto	l241
  8300  16DF  086B               	movf	_savedMinutesEnd,w	;volatile
  8301  16E0  026F               	subwf	_minutes,w	;volatile
  8302  16E1  1803               	skipnc
  8303  16E2  2EE5               	goto	l241
  8304  16E3                     l245:	
  8305                           
  8306                           ;time_scheduler.h: 220: {
  8307                           ;time_scheduler.h: 221: PORTCbits.RC4 = 0;
  8308  16E3  1207               	bcf	7,4	;volatile
  8309                           
  8310                           ;time_scheduler.h: 222: }
  8311  16E4  0008               	return
  8312  16E5                     l241:	
  8313                           
  8314                           ;time_scheduler.h: 223: else
  8315                           ;time_scheduler.h: 224: {
  8316                           ;time_scheduler.h: 225: PORTCbits.RC4 = 1;
  8317  16E5  1607               	bsf	7,4	;volatile
  8318                           
  8319                           ;time_scheduler.h: 226: }
  8320                           ;time_scheduler.h: 227: }
  8321  16E6  0008               	return
  8322  16E7                     l2873:	
  8323                           
  8324                           ;time_scheduler.h: 228: else if (savedHoursEnd < savedHoursStart)
  8325  16E7  086A               	movf	_savedHoursStart,w	;volatile
  8326  16E8  0269               	subwf	_savedHoursEnd,w	;volatile
  8327  16E9  1803               	skipnc
  8328  16EA  2F07               	goto	l2887
  8329                           
  8330                           ;time_scheduler.h: 229: {
  8331                           ;time_scheduler.h: 231: if ((hours > savedHoursStart || (hours == savedHoursStart && min
      +                          utes >= savedMinutesStart)) ||
  8332                           ;time_scheduler.h: 232: (hours < savedHoursEnd || (hours == savedHoursEnd && minutes < s
      +                          avedMinutesEnd)))
  8333  16EB  0867               	movf	_hours,w	;volatile
  8334  16EC  026A               	subwf	_savedHoursStart,w	;volatile
  8335  16ED  1C03               	skipc
  8336  16EE  2F03               	goto	l251
  8337  16EF  0867               	movf	_hours,w	;volatile
  8338  16F0  066A               	xorwf	_savedHoursStart,w	;volatile
  8339  16F1  1D03               	skipz
  8340  16F2  2EF7               	goto	l2881
  8341  16F3  086C               	movf	_savedMinutesStart,w	;volatile
  8342  16F4  026F               	subwf	_minutes,w	;volatile
  8343  16F5  1803               	skipnc
  8344  16F6  2F03               	goto	l251
  8345  16F7                     l2881:	
  8346  16F7  0869               	movf	_savedHoursEnd,w	;volatile
  8347  16F8  0267               	subwf	_hours,w	;volatile
  8348  16F9  1C03               	skipc
  8349  16FA  2F03               	goto	l251
  8350  16FB  0867               	movf	_hours,w	;volatile
  8351  16FC  0669               	xorwf	_savedHoursEnd,w	;volatile
  8352  16FD  1D03               	skipz
  8353  16FE  2F05               	goto	l249
  8354  16FF  086B               	movf	_savedMinutesEnd,w	;volatile
  8355  1700  026F               	subwf	_minutes,w	;volatile
  8356  1701  1803               	skipnc
  8357  1702  2F05               	goto	l249
  8358  1703                     l251:	
  8359                           
  8360                           ;time_scheduler.h: 233: {
  8361                           ;time_scheduler.h: 234: PORTCbits.RC4 = 0;
  8362  1703  1207               	bcf	7,4	;volatile
  8363                           
  8364                           ;time_scheduler.h: 235: }
  8365  1704  0008               	return
  8366  1705                     l249:	
  8367                           
  8368                           ;time_scheduler.h: 236: else
  8369                           ;time_scheduler.h: 237: {
  8370                           ;time_scheduler.h: 238: PORTCbits.RC4 = 1;
  8371  1705  1607               	bsf	7,4	;volatile
  8372                           
  8373                           ;time_scheduler.h: 239: }
  8374                           ;time_scheduler.h: 240: }
  8375  1706  0008               	return
  8376  1707                     l2887:	
  8377                           
  8378                           ;time_scheduler.h: 241: else
  8379                           ;time_scheduler.h: 242: {
  8380                           ;time_scheduler.h: 243: if (minutes >= savedMinutesStart && minutes < savedMinutesEnd)
  8381  1707  086C               	movf	_savedMinutesStart,w	;volatile
  8382  1708  026F               	subwf	_minutes,w	;volatile
  8383  1709  1C03               	skipc
  8384  170A  2F11               	goto	l258
  8385  170B  086B               	movf	_savedMinutesEnd,w	;volatile
  8386  170C  026F               	subwf	_minutes,w	;volatile
  8387  170D  1803               	skipnc
  8388  170E  2F11               	goto	l258
  8389                           
  8390                           ;time_scheduler.h: 244: {
  8391                           ;time_scheduler.h: 245: PORTCbits.RC4 = 0;
  8392  170F  1207               	bcf	7,4	;volatile
  8393                           
  8394                           ;time_scheduler.h: 246: }
  8395  1710  0008               	return
  8396  1711                     l258:	
  8397                           
  8398                           ;time_scheduler.h: 247: else
  8399                           ;time_scheduler.h: 248: {
  8400                           ;time_scheduler.h: 249: PORTCbits.RC4 = 1;
  8401  1711  1607               	bsf	7,4	;volatile
  8402  1712  0008               	return
  8403  1713                     __end_of_checkTime:	
  8404                           
  8405                           	psect	text38
  8406  14AF                     __ptext38:	
  8407 ;; *************** function _checkSEL *****************
  8408 ;; Defined at:
  8409 ;;		line 187 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;		None
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;  currentRB1St    2    4[BANK0 ] int 
  8414 ;; Return value:  Size  Location     Type
  8415 ;;		None               void
  8416 ;; Registers used:
  8417 ;;		wreg, status,2, status,0, pclath, cstack
  8418 ;; Tracked objects:
  8419 ;;		On entry : 0/0
  8420 ;;		On exit  : 0/0
  8421 ;;		Unchanged: 0/0
  8422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8423 ;;      Params:         0       0       0       0       0
  8424 ;;      Locals:         0       2       0       0       0
  8425 ;;      Temps:          0       2       0       0       0
  8426 ;;      Totals:         0       4       0       0       0
  8427 ;;Total ram usage:        4 bytes
  8428 ;; Hardware stack levels used:    1
  8429 ;; Hardware stack levels required when called:    3
  8430 ;; This function calls:
  8431 ;;		_instCTRL
  8432 ;; This function is called by:
  8433 ;;		_main
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           
  8438                           ;psect for function _checkSEL
  8439  14AF                     _checkSEL:	
  8440                           
  8441                           ;main.c: 189: static int lastRB1State = 0;
  8442                           ;main.c: 190: int currentRB1State = RB1;
  8443                           
  8444                           ;incstack = 0
  8445                           ; Regs used in _checkSEL: [wreg+status,2+status,0+pclath+cstack]
  8446  14AF  1003               	clrc
  8447  14B0  1283               	bcf	3,5	;RP0=0, select bank0
  8448  14B1  1303               	bcf	3,6	;RP1=0, select bank0
  8449  14B2  1886               	btfsc	6,1	;volatile
  8450  14B3  1403               	setc
  8451  14B4  3000               	movlw	0
  8452  14B5  1803               	skipnc
  8453  14B6  3001               	movlw	1
  8454  14B7  00A2               	movwf	??_checkSEL
  8455  14B8  01A3               	clrf	??_checkSEL+1
  8456  14B9  0822               	movf	??_checkSEL,w
  8457  14BA  00A4               	movwf	checkSEL@currentRB1State
  8458  14BB  0823               	movf	??_checkSEL+1,w
  8459  14BC  00A5               	movwf	checkSEL@currentRB1State+1
  8460                           
  8461                           ;main.c: 191: if (currentRB1State == 1 && lastRB1State == 0)
  8462  14BD  3001               	movlw	1
  8463  14BE  0624               	xorwf	checkSEL@currentRB1State,w
  8464  14BF  0425               	iorwf	checkSEL@currentRB1State+1,w
  8465  14C0  1D03               	skipz
  8466  14C1  2CD4               	goto	l2937
  8467  14C2  1683               	bsf	3,5	;RP0=1, select bank1
  8468  14C3  1303               	bcf	3,6	;RP1=0, select bank1
  8469  14C4  0860               	movf	(checkSEL@lastRB1State+1)^(0+128),w
  8470  14C5  045F               	iorwf	checkSEL@lastRB1State^(0+128),w
  8471  14C6  1D03               	skipz
  8472  14C7  2CD4               	goto	l2937
  8473                           
  8474                           ;main.c: 192: {
  8475                           ;main.c: 193: SEL ^= 1;
  8476  14C8  3001               	movlw	1
  8477  14C9  1283               	bcf	3,5	;RP0=0, select bank0
  8478  14CA  1303               	bcf	3,6	;RP1=0, select bank0
  8479  14CB  00A2               	movwf	??_checkSEL
  8480  14CC  0822               	movf	??_checkSEL,w
  8481  14CD  1683               	bsf	3,5	;RP0=1, select bank1
  8482  14CE  1303               	bcf	3,6	;RP1=0, select bank1
  8483  14CF  06E1               	xorwf	_SEL^(0+128),f	;volatile
  8484                           
  8485                           ;main.c: 194: instCTRL(0x01);
  8486  14D0  3001               	movlw	1
  8487  14D1  160A  118A  22E9   	fcall	_instCTRL
  8488  14D4                     l2937:	
  8489                           
  8490                           ;main.c: 195: }
  8491                           ;main.c: 196: lastRB1State = currentRB1State;
  8492  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  8493  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  8494  14D6  0825               	movf	checkSEL@currentRB1State+1,w
  8495  14D7  1683               	bsf	3,5	;RP0=1, select bank1
  8496  14D8  1303               	bcf	3,6	;RP1=0, select bank1
  8497  14D9  01E0               	clrf	(checkSEL@lastRB1State+1)^(0+128)
  8498  14DA  07E0               	addwf	(checkSEL@lastRB1State+1)^(0+128),f
  8499  14DB  1283               	bcf	3,5	;RP0=0, select bank0
  8500  14DC  1303               	bcf	3,6	;RP1=0, select bank0
  8501  14DD  0824               	movf	checkSEL@currentRB1State,w
  8502  14DE  1683               	bsf	3,5	;RP0=1, select bank1
  8503  14DF  1303               	bcf	3,6	;RP1=0, select bank1
  8504  14E0  01DF               	clrf	checkSEL@lastRB1State^(0+128)
  8505  14E1  07DF               	addwf	checkSEL@lastRB1State^(0+128),f
  8506  14E2  0008               	return
  8507  14E3                     __end_of_checkSEL:	
  8508                           
  8509                           	psect	text39
  8510  132C                     __ptext39:	
  8511 ;; *************** function _checkMode *****************
  8512 ;; Defined at:
  8513 ;;		line 177 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;		None
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;		None               void
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0, pclath, cstack
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8527 ;;      Params:         0       0       0       0       0
  8528 ;;      Locals:         0       0       0       0       0
  8529 ;;      Temps:          0       2       0       0       0
  8530 ;;      Totals:         0       2       0       0       0
  8531 ;;Total ram usage:        2 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:    3
  8534 ;; This function calls:
  8535 ;;		_instCTRL
  8536 ;; This function is called by:
  8537 ;;		_main
  8538 ;; This function uses a non-reentrant model
  8539 ;;
  8540                           
  8541                           
  8542                           ;psect for function _checkMode
  8543  132C                     _checkMode:	
  8544                           
  8545                           ;main.c: 179: if (lastMode != mode)
  8546                           
  8547                           ;incstack = 0
  8548                           ; Regs used in _checkMode: [wreg+status,2+status,0+pclath+cstack]
  8549  132C  1683               	bsf	3,5	;RP0=1, select bank1
  8550  132D  1303               	bcf	3,6	;RP1=0, select bank1
  8551  132E  086E               	movf	_lastMode^(0+128),w
  8552  132F  0662               	xorwf	_mode^(0+128),w
  8553  1330  1903               	skipnz
  8554  1331  0008               	return
  8555                           
  8556                           ;main.c: 180: {
  8557                           ;main.c: 181: instCTRL(0x01);
  8558  1332  3001               	movlw	1
  8559  1333  160A  118A  22E9  160A  118A  	fcall	_instCTRL
  8560                           
  8561                           ;main.c: 182: _delay((unsigned long)((50)*(4000000/4000.0)));
  8562  1338  3041               	movlw	65
  8563  1339  1283               	bcf	3,5	;RP0=0, select bank0
  8564  133A  1303               	bcf	3,6	;RP1=0, select bank0
  8565  133B  00A3               	movwf	??_checkMode+1
  8566  133C  30EE               	movlw	238
  8567  133D  00A2               	movwf	??_checkMode
  8568  133E                     u4517:	
  8569  133E  0BA2               	decfsz	??_checkMode,f
  8570  133F  2B3E               	goto	u4517
  8571  1340  0BA3               	decfsz	??_checkMode+1,f
  8572  1341  2B3E               	goto	u4517
  8573  1342  0000               	nop
  8574                           
  8575                           ;main.c: 183: lastMode = mode;
  8576  1343  1683               	bsf	3,5	;RP0=1, select bank1
  8577  1344  1303               	bcf	3,6	;RP1=0, select bank1
  8578  1345  0862               	movf	_mode^(0+128),w
  8579  1346  1283               	bcf	3,5	;RP0=0, select bank0
  8580  1347  1303               	bcf	3,6	;RP1=0, select bank0
  8581  1348  00A2               	movwf	??_checkMode
  8582  1349  0822               	movf	??_checkMode,w
  8583  134A  1683               	bsf	3,5	;RP0=1, select bank1
  8584  134B  1303               	bcf	3,6	;RP1=0, select bank1
  8585  134C  00EE               	movwf	_lastMode^(0+128)
  8586  134D  0008               	return
  8587  134E                     __end_of_checkMode:	
  8588                           
  8589                           	psect	text40
  8590  12E9                     __ptext40:	
  8591 ;; *************** function _instCTRL *****************
  8592 ;; Defined at:
  8593 ;;		line 22 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  8594 ;; Parameters:    Size  Location     Type
  8595 ;;  CMD             1    wreg     unsigned char 
  8596 ;; Auto vars:     Size  Location     Type
  8597 ;;  CMD             1    1[BANK0 ] unsigned char 
  8598 ;; Return value:  Size  Location     Type
  8599 ;;		None               void
  8600 ;; Registers used:
  8601 ;;		wreg
  8602 ;; Tracked objects:
  8603 ;;		On entry : 0/0
  8604 ;;		On exit  : 0/0
  8605 ;;		Unchanged: 0/0
  8606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8607 ;;      Params:         0       0       0       0       0
  8608 ;;      Locals:         0       1       0       0       0
  8609 ;;      Temps:          0       1       0       0       0
  8610 ;;      Totals:         0       2       0       0       0
  8611 ;;Total ram usage:        2 bytes
  8612 ;; Hardware stack levels used:    1
  8613 ;; Hardware stack levels required when called:    2
  8614 ;; This function calls:
  8615 ;;		Nothing
  8616 ;; This function is called by:
  8617 ;;		_initLCD
  8618 ;;		_printToLCD
  8619 ;;		_displayDataDHT11
  8620 ;;		_runDHT11
  8621 ;;		_main
  8622 ;;		_startUpSequence
  8623 ;;		_checkMode
  8624 ;;		_checkSEL
  8625 ;; This function uses a non-reentrant model
  8626 ;;
  8627                           
  8628                           
  8629                           ;psect for function _instCTRL
  8630  12E9                     _instCTRL:	
  8631                           
  8632                           ;incstack = 0
  8633                           ; Regs used in _instCTRL: [wreg]
  8634                           ;instCTRL@CMD stored from wreg
  8635  12E9  1283               	bcf	3,5	;RP0=0, select bank0
  8636  12EA  1303               	bcf	3,6	;RP1=0, select bank0
  8637  12EB  00A1               	movwf	instCTRL@CMD
  8638                           
  8639                           ;lcd_functions.h: 24: PORTD = CMD;
  8640  12EC  0821               	movf	instCTRL@CMD,w
  8641  12ED  0088               	movwf	8	;volatile
  8642                           
  8643                           ;lcd_functions.h: 25: RC0 = 0;
  8644  12EE  1007               	bcf	7,0	;volatile
  8645                           
  8646                           ;lcd_functions.h: 26: RC1 = 0;
  8647  12EF  1087               	bcf	7,1	;volatile
  8648                           
  8649                           ;lcd_functions.h: 27: RC2 = 1;
  8650  12F0  1507               	bsf	7,2	;volatile
  8651                           
  8652                           ;lcd_functions.h: 28: _delay((unsigned long)((1)*(4000000/4000.0)));
  8653  12F1  30F9               	movlw	249
  8654  12F2  00A0               	movwf	??_instCTRL
  8655  12F3                     u4527:	
  8656  12F3  0000               	nop
  8657  12F4  0BA0               	decfsz	??_instCTRL,f
  8658  12F5  2AF3               	goto	u4527
  8659  12F6  2AF7               	nop2	;nop
  8660  12F7  0000               	nop
  8661                           
  8662                           ;lcd_functions.h: 29: RC2 = 0;
  8663  12F8  1283               	bcf	3,5	;RP0=0, select bank0
  8664  12F9  1303               	bcf	3,6	;RP1=0, select bank0
  8665  12FA  1107               	bcf	7,2	;volatile
  8666  12FB  0008               	return
  8667  12FC                     __end_of_instCTRL:	
  8668                           
  8669                           	psect	text41
  8670  12C9                     __ptext41:	
  8671 ;; *************** function _activateHumidifier *****************
  8672 ;; Defined at:
  8673 ;;		line 109 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h
      +"
  8674 ;; Parameters:    Size  Location     Type
  8675 ;;		None
  8676 ;; Auto vars:     Size  Location     Type
  8677 ;;		None
  8678 ;; Return value:  Size  Location     Type
  8679 ;;		None               void
  8680 ;; Registers used:
  8681 ;;		wreg
  8682 ;; Tracked objects:
  8683 ;;		On entry : 0/0
  8684 ;;		On exit  : 0/0
  8685 ;;		Unchanged: 0/0
  8686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8687 ;;      Params:         0       0       0       0       0
  8688 ;;      Locals:         0       0       0       0       0
  8689 ;;      Temps:          0       0       0       0       0
  8690 ;;      Totals:         0       0       0       0       0
  8691 ;;Total ram usage:        0 bytes
  8692 ;; Hardware stack levels used:    1
  8693 ;; Hardware stack levels required when called:    2
  8694 ;; This function calls:
  8695 ;;		Nothing
  8696 ;; This function is called by:
  8697 ;;		_main
  8698 ;; This function uses a non-reentrant model
  8699 ;;
  8700                           
  8701                           
  8702                           ;psect for function _activateHumidifier
  8703  12C9                     _activateHumidifier:	
  8704                           
  8705                           ;dht11_module.h: 111: if (humidity > 50 && temperature > 25)
  8706                           
  8707                           ;incstack = 0
  8708                           ; Regs used in _activateHumidifier: [wreg]
  8709  12C9  3033               	movlw	51
  8710  12CA  027C               	subwf	_humidity,w
  8711  12CB  1C03               	skipc
  8712  12CC  2AD5               	goto	l124
  8713  12CD  301A               	movlw	26
  8714  12CE  027D               	subwf	_temperature,w
  8715  12CF  1C03               	skipc
  8716  12D0  2AD5               	goto	l124
  8717                           
  8718                           ;dht11_module.h: 112: {
  8719                           ;dht11_module.h: 113: PORTCbits.RC3 = 0;
  8720  12D1  1283               	bcf	3,5	;RP0=0, select bank0
  8721  12D2  1303               	bcf	3,6	;RP1=0, select bank0
  8722  12D3  1187               	bcf	7,3	;volatile
  8723                           
  8724                           ;dht11_module.h: 114: }
  8725  12D4  0008               	return
  8726  12D5                     l124:	
  8727                           
  8728                           ;dht11_module.h: 115: else
  8729                           ;dht11_module.h: 116: {
  8730                           ;dht11_module.h: 117: PORTCbits.RC3 = 1;
  8731  12D5  1283               	bcf	3,5	;RP0=0, select bank0
  8732  12D6  1303               	bcf	3,6	;RP1=0, select bank0
  8733  12D7  1587               	bsf	7,3	;volatile
  8734  12D8  0008               	return
  8735  12D9                     __end_of_activateHumidifier:	
  8736                           
  8737                           	psect	text42
  8738  1404                     __ptext42:	
  8739 ;; *************** function _ISR *****************
  8740 ;; Defined at:
  8741 ;;		line 129 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;		None
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;		None
  8746 ;; Return value:  Size  Location     Type
  8747 ;;		None               void
  8748 ;; Registers used:
  8749 ;;		wreg, status,2, status,0, pclath, cstack
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8755 ;;      Params:         0       0       0       0       0
  8756 ;;      Locals:         0       0       0       0       0
  8757 ;;      Temps:          5       0       0       0       0
  8758 ;;      Totals:         5       0       0       0       0
  8759 ;;Total ram usage:        5 bytes
  8760 ;; Hardware stack levels used:    1
  8761 ;; Hardware stack levels required when called:    1
  8762 ;; This function calls:
  8763 ;;		i1___awmod
  8764 ;; This function is called by:
  8765 ;;		Interrupt level 1
  8766 ;; This function uses a non-reentrant model
  8767 ;;
  8768                           
  8769                           
  8770                           ;psect for function _ISR
  8771  1404                     _ISR:	
  8772                           
  8773                           ;main.c: 131: if (INTF)
  8774  1404  1C8B               	btfss	11,1	;volatile
  8775  1405  2C1F               	goto	i1l297
  8776                           
  8777                           ;main.c: 132: {
  8778                           ;main.c: 133: INTF = 0;
  8779  1406  108B               	bcf	11,1	;volatile
  8780                           
  8781                           ;main.c: 134: mode = (mode + 1) % 3;
  8782  1407  3003               	movlw	3
  8783  1408  00F0               	movwf	i1___awmod@divisor
  8784  1409  3000               	movlw	0
  8785  140A  00F1               	movwf	i1___awmod@divisor+1
  8786  140B  1683               	bsf	3,5	;RP0=1, select bank1
  8787  140C  1303               	bcf	3,6	;RP1=0, select bank1
  8788  140D  0862               	movf	_mode^(0+128),w
  8789  140E  3E01               	addlw	1
  8790  140F  00F2               	movwf	i1___awmod@dividend
  8791  1410  3000               	movlw	0
  8792  1411  1803               	skipnc
  8793  1412  3001               	movlw	1
  8794  1413  00F3               	movwf	i1___awmod@dividend+1
  8795  1414  160A  118A  261F  160A  118A  	fcall	i1___awmod
  8796  1419  0870               	movf	?i1___awmod,w
  8797  141A  00F7               	movwf	??_ISR
  8798  141B  0877               	movf	??_ISR,w
  8799  141C  1683               	bsf	3,5	;RP0=1, select bank1
  8800  141D  1303               	bcf	3,6	;RP1=0, select bank1
  8801  141E  00E2               	movwf	_mode^(0+128)
  8802  141F                     i1l297:	
  8803  141F  087B               	movf	??_ISR+4,w
  8804  1420  1283               	bcf	3,5	;RP0=0, select bank0
  8805  1421  00FF               	movwf	127
  8806  1422  087A               	movf	??_ISR+3,w
  8807  1423  008A               	movwf	10
  8808  1424  0879               	movf	??_ISR+2,w
  8809  1425  0084               	movwf	4
  8810  1426  0E78               	swapf	(??_ISR+1)^(0+-128),w
  8811  1427  0083               	movwf	3
  8812  1428  0EFE               	swapf	126,f
  8813  1429  0E7E               	swapf	126,w
  8814  142A  0009               	retfie
  8815  142B                     __end_of_ISR:	
  8816                           
  8817                           	psect	intentry
  8818  0004                     __pintentry:	
  8819                           ;incstack = 0
  8820                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  8821                           
  8822  0004                     interrupt_function:	
  8823  007E                     saved_w	set	btemp
  8824  0004  00FE               	movwf	btemp
  8825  0005  0E03               	swapf	3,w
  8826  0006  00F8               	movwf	??_ISR+1
  8827  0007  0804               	movf	4,w
  8828  0008  00F9               	movwf	??_ISR+2
  8829  0009  080A               	movf	10,w
  8830  000A  00FA               	movwf	??_ISR+3
  8831  000B  1283               	bcf	3,5	;RP0=0, select bank0
  8832  000C  1303               	bcf	3,6	;RP1=0, select bank0
  8833  000D  087F               	movf	btemp+1,w
  8834  000E  00FB               	movwf	??_ISR+4
  8835  000F  160A  118A  2C04   	ljmp	_ISR
  8836                           
  8837                           	psect	text43
  8838  161F                     __ptext43:	
  8839 ;; *************** function i1___awmod *****************
  8840 ;; Defined at:
  8841 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  8842 ;; Parameters:    Size  Location     Type
  8843 ;;  divisor         2    0[COMMON] int 
  8844 ;;  dividend        2    2[COMMON] int 
  8845 ;; Auto vars:     Size  Location     Type
  8846 ;;  __awmod         1    6[COMMON] unsigned char 
  8847 ;;  __awmod         1    5[COMMON] unsigned char 
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  2    0[COMMON] int 
  8850 ;; Registers used:
  8851 ;;		wreg, status,2, status,0
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8857 ;;      Params:         4       0       0       0       0
  8858 ;;      Locals:         2       0       0       0       0
  8859 ;;      Temps:          1       0       0       0       0
  8860 ;;      Totals:         7       0       0       0       0
  8861 ;;Total ram usage:        7 bytes
  8862 ;; Hardware stack levels used:    1
  8863 ;; This function calls:
  8864 ;;		Nothing
  8865 ;; This function is called by:
  8866 ;;		_ISR
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           
  8871                           ;psect for function i1___awmod
  8872  161F                     i1___awmod:	
  8873                           
  8874                           ;incstack = 0
  8875                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  8876  161F  01F6               	clrf	i1___awmod@sign
  8877  1620  1FF3               	btfss	i1___awmod@dividend+1,7
  8878  1621  2E29               	goto	i1l2947
  8879  1622  09F2               	comf	i1___awmod@dividend,f
  8880  1623  09F3               	comf	i1___awmod@dividend+1,f
  8881  1624  0AF2               	incf	i1___awmod@dividend,f
  8882  1625  1903               	skipnz
  8883  1626  0AF3               	incf	i1___awmod@dividend+1,f
  8884  1627  01F6               	clrf	i1___awmod@sign
  8885  1628  0AF6               	incf	i1___awmod@sign,f
  8886  1629                     i1l2947:	
  8887  1629  1FF1               	btfss	i1___awmod@divisor+1,7
  8888  162A  2E30               	goto	i1l2951
  8889  162B  09F0               	comf	i1___awmod@divisor,f
  8890  162C  09F1               	comf	i1___awmod@divisor+1,f
  8891  162D  0AF0               	incf	i1___awmod@divisor,f
  8892  162E  1903               	skipnz
  8893  162F  0AF1               	incf	i1___awmod@divisor+1,f
  8894  1630                     i1l2951:	
  8895  1630  0871               	movf	i1___awmod@divisor+1,w
  8896  1631  0470               	iorwf	i1___awmod@divisor,w
  8897  1632  1903               	skipnz
  8898  1633  2E5D               	goto	i1l2969
  8899  1634  01F5               	clrf	i1___awmod@counter
  8900  1635  0AF5               	incf	i1___awmod@counter,f
  8901  1636                     i1l2959:	
  8902  1636  1BF1               	btfsc	i1___awmod@divisor+1,7
  8903  1637  2E44               	goto	i1l2961
  8904  1638  3001               	movlw	1
  8905  1639                     u420_25:	
  8906  1639  1003               	clrc
  8907  163A  0DF0               	rlf	i1___awmod@divisor,f
  8908  163B  0DF1               	rlf	i1___awmod@divisor+1,f
  8909  163C  3EFF               	addlw	-1
  8910  163D  1D03               	skipz
  8911  163E  2E39               	goto	u420_25
  8912  163F  3001               	movlw	1
  8913  1640  00F4               	movwf	??i1___awmod
  8914  1641  0874               	movf	??i1___awmod,w
  8915  1642  07F5               	addwf	i1___awmod@counter,f
  8916  1643  2E36               	goto	i1l2959
  8917  1644                     i1l2961:	
  8918  1644  0871               	movf	i1___awmod@divisor+1,w
  8919  1645  0273               	subwf	i1___awmod@dividend+1,w
  8920  1646  1D03               	skipz
  8921  1647  2E4A               	goto	u422_25
  8922  1648  0870               	movf	i1___awmod@divisor,w
  8923  1649  0272               	subwf	i1___awmod@dividend,w
  8924  164A                     u422_25:	
  8925  164A  1C03               	skipc
  8926  164B  2E52               	goto	i1l2965
  8927  164C  0870               	movf	i1___awmod@divisor,w
  8928  164D  02F2               	subwf	i1___awmod@dividend,f
  8929  164E  0871               	movf	i1___awmod@divisor+1,w
  8930  164F  1C03               	skipc
  8931  1650  03F3               	decf	i1___awmod@dividend+1,f
  8932  1651  02F3               	subwf	i1___awmod@dividend+1,f
  8933  1652                     i1l2965:	
  8934  1652  3001               	movlw	1
  8935  1653                     u423_25:	
  8936  1653  1003               	clrc
  8937  1654  0CF1               	rrf	i1___awmod@divisor+1,f
  8938  1655  0CF0               	rrf	i1___awmod@divisor,f
  8939  1656  3EFF               	addlw	-1
  8940  1657  1D03               	skipz
  8941  1658  2E53               	goto	u423_25
  8942  1659  3001               	movlw	1
  8943  165A  02F5               	subwf	i1___awmod@counter,f
  8944  165B  1D03               	btfss	3,2
  8945  165C  2E44               	goto	i1l2961
  8946  165D                     i1l2969:	
  8947  165D  0876               	movf	i1___awmod@sign,w
  8948  165E  1903               	btfsc	3,2
  8949  165F  2E65               	goto	i1l2973
  8950  1660  09F2               	comf	i1___awmod@dividend,f
  8951  1661  09F3               	comf	i1___awmod@dividend+1,f
  8952  1662  0AF2               	incf	i1___awmod@dividend,f
  8953  1663  1903               	skipnz
  8954  1664  0AF3               	incf	i1___awmod@dividend+1,f
  8955  1665                     i1l2973:	
  8956  1665  0873               	movf	i1___awmod@dividend+1,w
  8957  1666  01F1               	clrf	?i1___awmod+1
  8958  1667  07F1               	addwf	?i1___awmod+1,f
  8959  1668  0872               	movf	i1___awmod@dividend,w
  8960  1669  01F0               	clrf	?i1___awmod
  8961  166A  07F0               	addwf	?i1___awmod,f
  8962  166B  0008               	return
  8963  166C                     __end_ofi1___awmod:	
  8964  007E                     btemp	set	126	;btemp
  8965  007E                     wtemp	set	126
  8966  007E                     wtemp0	set	126
  8967  0080                     wtemp1	set	128
  8968  0082                     wtemp2	set	130
  8969  0084                     wtemp3	set	132
  8970  0086                     wtemp4	set	134
  8971  0088                     wtemp5	set	136
  8972  007F                     wtemp6	set	127
  8973  007E                     ttemp	set	126
  8974  007E                     ttemp0	set	126
  8975  0081                     ttemp1	set	129
  8976  0084                     ttemp2	set	132
  8977  0087                     ttemp3	set	135
  8978  007F                     ttemp4	set	127
  8979  007E                     ltemp	set	126
  8980  007E                     ltemp0	set	126
  8981  0082                     ltemp1	set	130
  8982  0086                     ltemp2	set	134
  8983  0080                     ltemp3	set	128


Data Sizes:
    Strings     225
    Constant    10
    Data        7
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     71      80
    BANK1            80     55      79
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@_val._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 25
		 -> STR_22(CODE[25]), STR_21(CODE[10]), STR_20(CODE[10]), STR_19(CODE[10]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[10]), STR_15(CODE[10]), 
		 -> STR_14(CODE[10]), STR_13(CODE[10]), STR_12(CODE[10]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), STR_9(CODE[16]), STR_6(CODE[9]), STR_5(CODE[3]), 
		 -> STR_4(CODE[6]), STR_2(CODE[11]), STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK1[16]), debugInfo(BANK1[10]), displayTime@timeFormat(BANK0[16]), displayPPM@strBuffer(BANK1[20]), 
		 -> displayDataDHT11@buffer(BANK0[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S323$_cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    displayPPM@bufPtr	PTR unsigned char  size(1) Largest target is 20
		 -> displayPPM@strBuffer(BANK1[20]), 

    readDHT11@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> temperature(COMMON[1]), 

    readDHT11@humidity	PTR unsigned char  size(1) Largest target is 1
		 -> humidity(COMMON[1]), 

    printToLCD@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_29(CODE[16]), STR_28(CODE[9]), STR_27(CODE[10]), STR_26(CODE[16]), 
		 -> STR_25(CODE[11]), STR_24(CODE[12]), STR_23(CODE[18]), main@buffer(BANK1[16]), 
		 -> debugInfo(BANK1[10]), displayTime@timeFormat(BANK0[16]), STR_8(CODE[8]), STR_7(CODE[8]), 
		 -> displayPPM@strBuffer(BANK1[20]), STR_3(CODE[7]), displayDataDHT11@buffer(BANK0[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___awmod

Critical Paths under _main in BANK0

    _main->_displayPPM
    _startUpSequence->_printToLCD
    _initLCD->_instCTRL
    _setMinutesStart->_sprintf
    _setMinutesEnd->_sprintf
    _setHoursStart->_sprintf
    _setHoursEnd->_sprintf
    _runMQ135->_CalcMQ135
    _CalcMQ135->___ftdiv
    ___ftdiv->___ftmul
    _runDHT11->_readDHT11
    _handlePPM->___ftge
    _displayTime->_sprintf
    _displayPPM->___fttol
    ___fttol->___ftadd
    ___ftneg->___awtoft
    ___ftmul->___ftneg
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _displayDataDHT11->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _printToLCD->_dataCTRL
    _printToLCD->_instCTRL
    _checkSEL->_instCTRL
    _checkMode->_instCTRL

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _runMQ135->_CalcMQ135

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0   65794
                                             62 BANK0      9     9      0
                                             39 BANK1     16    16      0
                 _activateHumidifier
                          _checkMode
                           _checkSEL
                          _checkTime
                   _displayDataDHT11
                         _displayPPM
                        _displayTime
                          _handlePPM
                     _initInterrupts
                          _initPorts
                      _initRegisters
                           _instCTRL
                         _printToLCD
                           _runClock
                           _runDHT11
                           _runMQ135
                        _setHoursEnd
                      _setHoursStart
                      _setMinutesEnd
                    _setMinutesStart
                            _sprintf
                    _startUpSequence
 ---------------------------------------------------------------------------------
 (1) _startUpSequence                                      3     3      0    1140
                                              4 BANK0      3     3      0
                          _initDHT11
                            _initLCD
                           _instCTRL
                         _printToLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              1     1      0      22
                                              2 BANK0      1     1      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (2) _initDHT11                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setMinutesStart                                      3     3      0    5785
                                             38 BANK0      3     3      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setMinutesEnd                                        3     3      0    5785
                                             38 BANK0      3     3      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setHoursStart                                        3     3      0    5785
                                             38 BANK0      3     3      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setHoursEnd                                          3     3      0    5785
                                             38 BANK0      3     3      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1198
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _runMQ135                                             0     0      0   11540
                          _CalcMQ135
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CalcMQ135                                           42    39      3   11518
                                             49 BANK0      3     0      3
                                              0 BANK1     39    39      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2177
                                             33 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _runDHT11                                             3     3      0    1562
                                             15 BANK0      3     3      0
                           _instCTRL
                         _printToLCD
                          _readDHT11
 ---------------------------------------------------------------------------------
 (2) _readDHT11                                           15    14      1     444
                                              0 BANK0     15    14      1
 ---------------------------------------------------------------------------------
 (1) _runClock                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initRegisters                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handlePPM                                            0     0      0     242
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     242
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         21    21      0    4651
                                             38 BANK0     21    21      0
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _displayPPM                                          27    27      0   14040
                                             60 BANK0      2     2      0
                                              0 BANK1     25    25      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                             46 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                             14 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3495
                                             17 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3347
                                             33 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1882
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1685
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _displayDataDHT11                                    18    18      0    4717
                                             38 BANK0     18    18      0
                           _instCTRL
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    15      9    3491
                                             14 BANK0     24    15      9
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _printToLCD                                           2     0      2    1096
                                              2 BANK0      2     0      2
                           _dataCTRL
                           _instCTRL
 ---------------------------------------------------------------------------------
 (3) _dataCTRL                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _checkTime                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkSEL                                             4     4      0      67
                                              2 BANK0      4     4      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (1) _checkMode                                            2     2      0      22
                                              2 BANK0      2     2      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (3) _instCTRL                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _activateHumidifier                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  5     5      0     348
                                              7 COMMON     5     5      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateHumidifier
   _checkMode
     _instCTRL
   _checkSEL
     _instCTRL
   _checkTime
   _displayDataDHT11
     _instCTRL
     _printToLCD
       _dataCTRL
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _displayPPM
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
     _printToLCD
       _dataCTRL
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _displayTime
     _printToLCD
       _dataCTRL
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _handlePPM
     ___ftge
   _initInterrupts
   _initPorts
   _initRegisters
   _instCTRL
   _printToLCD
     _dataCTRL
     _instCTRL
   _runClock
   _runDHT11
     _instCTRL
     _printToLCD
       _dataCTRL
       _instCTRL
     _readDHT11
   _runMQ135
     _CalcMQ135
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       _readADC (ARG)
     _readADC
   _setHoursEnd
     ___awmod
     _printToLCD
       _dataCTRL
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setHoursStart
     ___awmod
     _printToLCD
       _dataCTRL
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setMinutesEnd
     ___awmod
     _printToLCD
       _dataCTRL
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setMinutesStart
     ___awmod
     _printToLCD
       _dataCTRL
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _startUpSequence
     _initDHT11
     _initLCD
       _instCTRL
     _instCTRL
     _printToLCD
       _dataCTRL
       _instCTRL

 _ISR (ROOT)
   i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     37      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     47      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AD      12        0.0%
ABS                  0      0      AD       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu May 16 17:28:35 2024

                          pc 0002                 ?_displayTime 0070                  __CFG_CP$OFF 0000  
                         l69 1447                           fsr 0004          ___wmul@multiplicand 0022  
   __size_of_setMinutesStart 00A6                 ___ftadd@exp1 004D                 ___ftadd@exp2 004C  
               ___ftadd@sign 004B                          l110 0C07                          l106 0BE8  
                        l124 12D5                          l140 14A8                          l212 0B6C  
                        l241 16E5                          l226 0AC6                          l251 1703  
                        l245 16E3                          l335 042D                          l184 0A20  
                        l249 1705                          l258 1711                          l362 0555  
                        l630 07E6                          l198 097A                          l463 13C6  
                        l624 07CD                          l653 0E76                          _GIE 005F  
                        _RB1 0031                          _RC0 0038                          _RC1 0039  
                        _RC2 003A                 __CFG_CPD$OFF 0000                          _ISR 1404  
                        _SEL 00E1                          _PPM 00DC                          _key 006D  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0026  
               __CFG_FOSC$HS 0000                printToLCD@str 0022                 __CFG_LVP$OFF 0000  
                       ?_ISR 0070                 ___ftdiv@cntr 004B                 ___ftdiv@sign 0050  
                       l2111 0E88                         l2105 0E66                         l2035 13BE  
                       l2115 0E9A                         l2107 0E72                         l2211 0DA0  
                       l2029 12E7                         l2053 13EB                         l2125 0EBD  
                       l2141 0C71                         l3021 066A                         l2231 1559  
                       l2207 0D90                         l2135 0C5B                         l3031 06BA  
                       l3015 0653                         l2233 1567                         l2065 0DF7  
                       l2243 1588                         l2403 048E                         l2075 0E0D  
                       l2331 0BD7                         l2323 0BCC                         l2163 0CD5  
                       l2155 0CB6                         l3043 06E9                         l3051 0700  
                       l2261 1507                         l2093 0E3C                         l2069 0DFE  
                       l3053 070B                         l3037 06D2                         l3029 06AF  
                       l2239 157D                         l2255 14EB                         l2503 05DF  
                       l2415 04A1                         l2407 049F                         l2431 04F0  
                       l2095 0E48                         l2087 0E27                         l2183 0D29  
                       l2351 0C09                         l2257 14F9                         l2265 1512  
                       l2513 05E3                         l2417 04C1                         l2425 04D8  
                       l2433 0507                         l2097 0E4D                         l2177 0D13  
                       l2601 178C                         l3065 073A                         l3073 0751  
                       l2443 0520                         l2427 04E7                         l2515 0403  
                       l2099 0E51                         l2195 0D68                         l2355 0C11  
                       l2339 0BE3                         l3059 0723                         l2517 0631  
                       l2621 17CE                         l2365 0C35                         l2541 167F  
                       l2463 0574                         l2455 0547                         l2447 0526  
                       l2391 043D                         l2383 0429                         l2199 0D78  
                       l2631 17E9                         l2359 0C19                         l2551 1693  
                       l2297 145A                         l2465 0578                         l2713 1322  
                       l2537 1678                         l2475 058F                         l2395 044F  
                       l2635 17F7                         l2627 17DB                         l2619 17BE  
                       l2571 173C                         l2563 16B4                         l2555 16A1  
                       l2731 09EB                         l2485 05AB                         l2389 0432  
                       l2629 17E6                         l2549 1685                         l2813 0B7D  
                       l2805 0B55                         l2487 05AF                         l2495 05CA  
                       l2575 1763                         l2559 16AC                         l2815 0B8B  
                       l2745 0A31                         l2737 0A09                         l2833 0A91  
                       l2659 153F                         l2771 0963                         l2747 0A3F  
                       l1981 07B2                         l2765 0945                         l2781 0999  
                       l1991 07DC                         l1983 07B7                         l1975 079F  
                       l2687 0FDA                         l2847 0AD7                         l2839 0AAF  
                       l2937 14D4                         l2881 16F7                         l2873 16E7  
                       l2849 0AE5                         l2867 16D7                         l2859 16C7  
                       l1979 07A6                         l2779 098B                         l1989 07D2  
                       l2887 1707                         l2799 0B37                         l2991 075B  
                       STR_1 0897                         STR_2 0881                         STR_3 08EB  
                       STR_4 08F2                         STR_5 08F8                         STR_6 08C9  
                       STR_7 08DB                         STR_8 08E3                         STR_9 0865  
                       u3014 0BFC                         u2215 07D5                         u3015 0BFA  
                       u2305 13CE                         u3105 04AD                         u3115 04E4  
                       u2245 07ED                         u2175 07AB                         u3145 053D  
                       u2425 0E28                         u3401 1756                         u3402 1757  
                       u2195 07C6                         u2515 0E67                         u3403 175C  
                       u3315 1688                         u3404 175D                         u2605 0C95  
                       u2295 13C7                         u3095 0496                         u2455 0E3D  
                       u2615 0CB7                         u3335 1699                         u3185 0564  
                       u3505 17DD                         u2625 0CC8                         u3345 16A2  
                       u2715 0D79                         u2635 0CD6                         u4307 15C7  
                       u2805 155C                         u2485 0E52                         u2725 0D81  
                       u3445 1793                         u3381 172F                         u3605 09A6  
                       u4317 13A0                         u3382 1730                         u3383 1735  
                       u4407 1441                         u3615 09B3                         u4327 0B0D  
                       u3384 1736                         u2825 1568                         u2905 1508  
                       u4417 1547                         u3705 090D                         u4337 0B85  
                       u4507 1306                         u2835 1574                         u2675 0D35  
                       u3475 17BF                         u4427 0BB1                         u2595 0C83  
                       u4347 0A67                         _PEIE 005E                         u4517 133E  
                       u2845 157E                         u2765 0DA1                         u2685 0D47  
                       u3565 0FC5                         u4437 0BBA                         u2925 1435  
                       u4357 0ADF                         _INTE 005C                         _INTF 0059  
                       u4527 12F3                         u2775 0DA9                         u4447 0BC4  
                       u4367 09C1                         u4457 0BCE                         u4377 0A39  
                       u4297 159C                         u2875 14EE                         u4467 0BD9  
                       u4387 091B                         u4477 0BEC                         u4397 0993  
                       u2895 14FF                         u4487 1326                         u3695 0900  
                       u4497 15D9                         u3785 0AF2                         u3875 0A4C  
                       u3795 0AFF                         u3885 0A59                 __CFG_WRT$OFF 0000  
                       _main 063E                 ___ftpack@arg 0020                         _mode 00E2  
               ___ftpack@exp 0023                         btemp 007E            ??_startUpSequence 0024  
              __CFG_BOREN$ON 0000                         ltemp 007E                         start 0012  
                       ttemp 007E                         wtemp 007E        displayPPM@ppmFraction 00B6  
               ___ftmul@cntr 003F                 ___ftmul@sign 0040                        ??_ISR 0077  
               ___fttol@exp1 005B                 ___fttol@lval 0057                        ?_main 0070  
            __end_of___ftadd 0ED7                        STR_10 08B5                        STR_11 08AB  
                      STR_20 08AB                        STR_12 08BF                        STR_13 08B5  
                      STR_21 08BF                        STR_14 08AB                        STR_22 081A  
                      STR_15 08BF                        STR_23 0833                        STR_16 08B5  
                      STR_24 0875                        STR_17 08AB                        STR_25 088C  
              __CFG_WDTE$OFF 0000                        STR_18 08BF                        STR_26 0855  
                      STR_19 08B5                        STR_27 08A1                        STR_28 08D2  
            __end_of___awmod 16BB                        STR_29 0845              __end_of___ftdiv 0CFB  
            __end_of___ftneg 12BA              __end_of___ftmul 0DCE              __end_of___fttol 1800  
            __end_of___lwdiv 158F              __end_of___lwmod 1519                        i1l297 141F  
                      _PORTB 0006                        _PORTC 0007                        _PORTD 0008  
                      _TRISA 0085                        _TRISB 0086                        _TRISC 0087  
                      _TRISD 0088                 CalcMQ135@co2 00C1               i1___awmod@sign 0076  
            __end_of_readADC 1454              __end_of_initLCD 13BA                ___awtoft@sign 002D  
            __end_of_dpowers 081A       displayDataDHT11@buffer 0049              __end_of_isdigit 12E9  
                      _hours 0067                ___ftpack@sign 0024                        pclath 000A  
                      ltemp0 007E                        ltemp1 0082                        ltemp2 0086  
                      ltemp3 0080           _activateHumidifier 12C9           __size_of_CalcMQ135 03A7  
                      ttemp0 007E                        ttemp1 0081                        ttemp2 0084  
                      ttemp3 0087                        ttemp4 007F                        status 0003  
                      wtemp0 007E                        wtemp1 0080                        wtemp2 0082  
                      wtemp3 0084                        wtemp4 0086                        wtemp5 0088  
                      wtemp6 007F              __end_of_sprintf 063E           __size_ofi1___awmod 004D  
      __end_of_setHoursStart 0A47        __end_of_setMinutesEnd 0AED          ?_activateHumidifier 0070  
            __initialization 0015           displayPPM@ppmWhole 00B4                 __end_of_main 0795  
     __size_of_initRegisters 0009                       ??_main 005E                ___fttol@sign1 0056  
               ?_setHoursEnd 0070         ??_activateHumidifier 0020            ??_setMinutesStart 0046  
                     _ADCON0 001F                       _ADCON1 009F                       _ADRESH 001E  
                     _ADRESL 009E             __end_of___awtoft 1404             __end_of___ftpack 07FF  
                     i1l2951 1630                       i1l2961 1644                       i1l2947 1629  
                     i1l2973 1665                       i1l2965 1652                       i1l2959 1636  
                     i1l2969 165D                       _INTEDG 040E                       u420_25 1639  
                     u422_25 164A                       u423_25 1653             __end_of_dataCTRL 130F  
           __end_of_checkSEL 14E3                  instCTRL@CMD 0021               __CFG_PWRTE$OFF 0000  
                     ___ftge 1713                       ___wmul 13BA                    ??___ftadd 0047  
                  ??___awmod 0024                    ??___ftdiv 0047                    ??___ftneg 0031  
                  ??___ftmul 0037                    ??___fttol 0052                    ??___lwdiv 0024  
                  ??___lwmod 002C             __end_of_instCTRL 12FC        displayTime@timeFormat 004B  
          ?_displayDataDHT11 0070              ___awmod@divisor 0020              ___awmod@counter 0025  
          __end_of_CalcMQ135 03FA         __size_of_displayTime 0024           ??_displayDataDHT11 0046  
           __end_of_runDHT11 154F        ___ftmul@f3_as_product 003C                    ??_readADC 0022  
                  ??_initLCD 0022            __end_ofi1___awmod 166C             __end_of_runMQ135 1396  
                  ??_isdigit 0020                       saved_w 007E             __end_of_runClock 132C  
                  ??_sprintf 0037                _initRegisters 12A7      __end_of__initialization 004F  
                 ___ftadd@f1 0041                   ___ftadd@f2 0044                   ___ftge@ff1 0020  
                 ___ftge@ff2 0023                   ___ftdiv@f1 0044                   ___ftdiv@f2 0041  
                 ___ftdiv@f3 004C                   ___ftneg@f1 002E                   ___awtoft@c 0028  
                 ___ftmul@f1 0031                   ___ftmul@f2 0034                   ___fttol@f1 004E  
             __pcstackCOMMON 0070                 __pidataBANK0 128A                 __pidataBANK1 07FF  
         __size_of_checkMode 0022           __size_of_checkTime 0058      __size_of_initInterrupts 0008  
         __size_of_handlePPM 0030          displayPPM@strBuffer 00A0              _startUpSequence 158F  
             ?_initRegisters 0070                 sprintf@width 003F           __size_of_initDHT11 0007  
         __size_of_readDHT11 00B0                   __pbssBANK0 006D                   __pbssBANK1 00D7  
         __size_of_initPorts 000F                   __pmaintext 063E                      ?___ftge 0020  
                    ?___wmul 0020                   __pintentry 0004                    ?___awtoft 0028  
                  ?___ftpack 0020                    ?_dataCTRL 0070                    ?_checkSEL 0070  
                    _GO_DONE 00FA                   _displayPPM 0ED7         __size_of_setHoursEnd 00A6  
          __end_of_checkMode 134E            __end_of_checkTime 1713                   __stringtab 0800  
                  ?_instCTRL 0070            __end_of_handlePPM 14AF                    ?_runDHT11 0070  
                  ?_runMQ135 0070               CalcMQ135@ratio 00C4              _savedHoursStart 006A  
                  ?_runClock 0070              __size_of___ftge 005F                      ___ftadd 0DCE  
                    ___awmod 166C                      ___ftdiv 0C43                      ___ftneg 12B0  
            __size_of___wmul 0025                      ___ftmul 0CFB                      ___fttol 1772  
                    ___lwdiv 154F                      ___lwmod 14E3            __end_of_initDHT11 1297  
            _savedMinutesEnd 006B              _setMinutesStart 0AED            __end_of_readDHT11 0C43  
                 ??___awtoft 002B                   ??___ftpack 0025      __end_of_startUpSequence 15D3  
                    __ptext1 158F                      __ptext2 1396                      __ptext3 1290  
                    __ptext4 0AED                      __ptext5 0A47                      __ptext6 09A1  
                    __ptext7 08FB                      __ptext8 166C                      __ptext9 1372  
                 ??_dataCTRL 0020                      _readADC 142B                      _initLCD 1396  
               __size_of_ISR 0027            __end_of_initPorts 12C9                      _dpowers 0810  
                 ??_checkSEL 0022                      _isdigit 12D9             ___awmod@dividend 0022  
                    _ppmFlag 00E3                      _minutes 006F              ??_initRegisters 0020  
              readDHT11@bits 0028                      _sprintf 03FA                      clrloop0 12A0  
       end_of_initialization 004F                   ??_instCTRL 0020                   ??_runDHT11 002F  
                 ??_runMQ135 0054                   ??_runClock 0020               _initInterrupts 1297  
                 _printToLCD 1454                    _PORTBbits 0006                    _PORTCbits 0007  
     __size_of_setHoursStart 00A6                    _CalcMQ135 0053                    _TRISBbits 0086  
__size_of_activateHumidifier 0010                  ?_displayPPM 0070       __size_of_setMinutesEnd 00A6  
                  i1___awmod 161F    __size_of_displayDataDHT11 004C                  ___ftdiv@exp 004F  
                 main@buffer 00C7             displayPPM@bufPtr 00B8             CalcMQ135@RAW_ADC 0051  
    __end_of_setMinutesStart 0B93       __end_of_initInterrupts 129F                  ___ftmul@exp 003B  
              ??_displayTime 0046               __end_of___ftge 1772               __end_of___wmul 13DF  
           ?_startUpSequence 0070                   readDHT11@i 002D                   readDHT11@j 002E  
        start_initialization 0015                   ?_CalcMQ135 0051                  __end_of_ISR 142B  
                 ?i1___awmod 0070                 _lastKeyState 0068                _setHoursStart 09A1  
            ?_initInterrupts 0070                _savedHoursEnd 0069                _setMinutesEnd 0A47  
           CalcMQ135@voltage 00A0                     ??___ftge 0026                     ??___wmul 0024  
        __size_of_displayPPM 0129                  __pdataBANK0 0067                  __pdataBANK1 00EE  
         i1___awmod@dividend 0072                  ?_printToLCD 0022            __size_of___awtoft 0025  
          __size_of___ftpack 006A          __end_of_displayTime 1372                  __pbssCOMMON 007C  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
          __size_of_dataCTRL 0013          __end_of__stringdata 08FB            __size_of_checkSEL 0034  
                sprintf@ccnt 003C                  sprintf@_val 0041            _savedMinutesStart 006C  
                sprintf@flag 003E                  sprintf@prec 003B                    _checkMode 132C  
                  _checkTime 16BB               ?_setHoursStart 0070                    _debugInfo 00E4  
          __size_of_instCTRL 0013             ___lwdiv@dividend 0022               ?_setMinutesEnd 0070  
           ?_setMinutesStart 0070                    _handlePPM 147F            __size_of_runDHT11 0036  
          __size_of_runMQ135 0024                     ?___ftadd 0041                     ?___awmod 0020  
                   ?___ftdiv 0041                     ?___ftneg 002E                     ?___ftmul 0031  
                   ?___fttol 004E                     ?___lwdiv 0020                     ?___lwmod 0028  
          __size_of_runClock 001D                    __pstrings 0800                     ?_readADC 0020  
                   ?_initLCD 0070                    _initDHT11 1290                    _readDHT11 0B93  
                   ?_isdigit 0070                ??_setHoursEnd 0046                  ??_CalcMQ135 0054  
                ??i1___awmod 0074                    _initPorts 12BA             ___lwdiv@quotient 0025  
                   ?_sprintf 002E             _displayDataDHT11 15D3         readDHT11@temperature 0027  
          interrupt_function 0004               ___wmul@product 0024                   ?_checkMode 0070  
                 ?_checkTime 0070          __size_of_printToLCD 002B                    clear_ram0 129F  
                dataCTRL@DAT 0021                   ?_handlePPM 0070                  _displayTime 134E  
                __stringbase 080F                  __stringdata 081A            ___wmul@multiplier 0020  
                 ?_initDHT11 0070                   ?_readDHT11 0020                 ??_displayPPM 005C  
                 ?_initPorts 0070        __end_of_initRegisters 12B0          __end_of_setHoursEnd 09A1  
            ??_setHoursStart 0046              ??_setMinutesEnd 0046              CalcMQ135@ratio2 00B5  
            CalcMQ135@ratio3 00B8              CalcMQ135@ratio4 00BB              CalcMQ135@ratio5 00BE  
            CalcMQ135@ratio6 00A3            i1___awmod@divisor 0070            i1___awmod@counter 0075  
         __end_of_displayPPM 1000             __size_of___ftadd 0109             __size_of___awmod 004F  
           __size_of___ftdiv 00B8             __size_of___ftneg 000A             __size_of___ftmul 00D3  
           __size_of___fttol 008E             __size_of___lwdiv 0040             __size_of___lwmod 0036  
             readADC@channel 0024                     ___awtoft 13DF                     ___ftpack 0795  
         __end_of__stringtab 0810                  _isdigit$521 0020                     _dataCTRL 12FC  
 __end_of_activateHumidifier 12D9                     _checkSEL 14AF             __size_of_readADC 0029  
           __size_of_initLCD 0024             __size_of_isdigit 0010              ___lwdiv@divisor 0020  
            ___lwdiv@counter 0027                     __ptext10 142B                     __ptext11 0053  
                   __ptext20 1713                     __ptext12 0C43                     __ptext21 134E  
                   __ptext13 1519                     __ptext30 03FA                     __ptext22 0ED7  
                   __ptext14 0B93                     __ptext31 12D9                     __ptext23 1772  
                   __ptext15 130F                     __ptext40 12E9                     __ptext32 13BA  
                   __ptext24 12B0                     __ptext16 12A7                     __ptext41 12C9  
                   __ptext33 14E3                     __ptext25 0CFB                     __ptext17 12BA  
                   __ptext42 1404                     __ptext34 154F                     __ptext26 0DCE  
                   __ptext18 1297                     __ptext43 161F                     __ptext35 1454  
                   __ptext27 13DF                     __ptext19 147F                     __ptext36 12FC  
                   __ptext28 0795                     __ptext37 16BB                     __ptext29 15D3  
                   __ptext38 14AF                     __ptext39 132C               readDHT11@F1216 00D7  
           __size_of_sprintf 0244                     _keyValid 006E                     _lastMode 00EE  
           ??_initInterrupts 0020                     _instCTRL 12E9                __size_of_main 0157  
                ??_checkMode 0022                  ??_checkTime 0020                     _humidity 007C  
                   _runDHT11 1519                     _runMQ135 1372                  ??_handlePPM 002C  
                   _runClock 130F         checkSEL@lastRB1State 00DF                 ??_printToLCD 0024  
                ??_initDHT11 0020                  ??_readDHT11 0021                  _setHoursEnd 08FB  
                   isdigit@c 0021                  ??_initPorts 0020     __size_of_startUpSequence 0044  
                   intlevel1 0000                    sprintf@ap 003A                    sprintf@sp 0045  
           ___lwmod@dividend 002A           __end_of_printToLCD 147F                    stringcode 080A  
   __end_of_displayDataDHT11 161F            readDHT11@humidity 0020                _CalcMQ135$765 00A6  
              _CalcMQ135$766 00A9                _CalcMQ135$767 00AC                _CalcMQ135$768 00AF  
              _CalcMQ135$769 00B2                  _temperature 007D                     sprintf@c 0044  
                   sprintf@f 002E              ___lwmod@divisor 0028              ___lwmod@counter 002D  
                   stringdir 080A                     stringtab 0800      checkSEL@currentRB1State 0024  
