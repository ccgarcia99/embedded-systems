

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri May 17 17:27:22 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	intentry,global,class=CODE,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	dabs	1,0x7E,2
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124                           
   125                           	psect	idataCOMMON
   126  07FC                     __pidataCOMMON:	
   127                           
   128                           ;initializer for _lastMode
   129  07FC  34FF               	retlw	255
   130                           
   131                           	psect	idataBANK0
   132  1282                     __pidataBANK0:	
   133                           
   134                           ;initializer for _hours
   135  1282  3404               	retlw	4
   136                           
   137                           ;initializer for _lastKeyState
   138  1283  34FF               	retlw	255
   139                           
   140                           ;initializer for _savedHoursEnd
   141  1284  340A               	retlw	10
   142                           
   143                           ;initializer for _savedHoursStart
   144  1285  3409               	retlw	9
   145                           
   146                           ;initializer for _savedMinutesEnd
   147  1286  341E               	retlw	30
   148                           
   149                           ;initializer for _savedMinutesStart
   150  1287  341E               	retlw	30
   151                           
   152                           	psect	stringtext
   153  1000                     __pstringtext:	
   154  1000                     stringtab:	
   155  1000                     __stringtab:	
   156                           
   157                           ;	String table - string pointers are 2 bytes each
   158  1000  1BFF               	btfsc	btemp+1,7
   159  1001  280A               	ljmp	stringcode
   160  1002  1383               	bcf	3,7
   161  1003  187F               	btfsc	btemp+1,0
   162  1004  1783               	bsf	3,7
   163  1005  0800               	movf	0,w
   164  1006  0A84               	incf	4,f
   165  1007  1903               	skipnz
   166  1008  0AFF               	incf	btemp+1,f
   167  1009  0008               	return
   168  100A                     stringcode:	
   169  100A  087F               	movf	btemp+1,w
   170  100B  397F               	andlw	127
   171  100C  008A               	movwf	10
   172  100D  0804               	movf	4,w
   173  100E  0A84               	incf	4,f
   174  100F  1903               	skipnz
   175  1010  0AFF               	incf	btemp+1,f
   176  1011  0082               	movwf	2
   177  1012                     __stringbase:	
   178  1012                     __end_of__stringtab:	
   179  1012                     _dpowers:	
   180  1012  3401               	retlw	1
   181  1013  3400               	retlw	0
   182  1014  340A               	retlw	10
   183  1015  3400               	retlw	0
   184  1016  3464               	retlw	100
   185  1017  3400               	retlw	0
   186  1018  34E8               	retlw	232
   187  1019  3403               	retlw	3
   188  101A  3410               	retlw	16
   189  101B  3427               	retlw	39
   190  101C                     __end_of_dpowers:	
   191  001F                     _ADCON0	set	31
   192  001E                     _ADRESH	set	30
   193  0006                     _PORTB	set	6
   194  0006                     _PORTBbits	set	6
   195  0007                     _PORTC	set	7
   196  0007                     _PORTCbits	set	7
   197  0008                     _PORTD	set	8
   198  005F                     _GIE	set	95
   199  00FA                     _GO_DONE	set	250
   200  005C                     _INTE	set	92
   201  0059                     _INTF	set	89
   202  005E                     _PEIE	set	94
   203  0031                     _RB1	set	49
   204  0038                     _RC0	set	56
   205  0039                     _RC1	set	57
   206  003A                     _RC2	set	58
   207  009F                     _ADCON1	set	159
   208  009E                     _ADRESL	set	158
   209  0085                     _TRISA	set	133
   210  0086                     _TRISB	set	134
   211  0086                     _TRISBbits	set	134
   212  0087                     _TRISC	set	135
   213  0088                     _TRISD	set	136
   214  040E                     _INTEDG	set	1038
   215  101C                     __stringdata:	
   216  101C                     STR_22:	
   217  101C  3452               	retlw	82	;'R'
   218  101D  3455               	retlw	85	;'U'
   219  101E  344E               	retlw	78	;'N'
   220  101F  343A               	retlw	58	;':'
   221  1020  3420               	retlw	32	;' '
   222  1021  3425               	retlw	37	;'%'
   223  1022  3430               	retlw	48	;'0'
   224  1023  3432               	retlw	50	;'2'
   225  1024  3464               	retlw	100	;'d'
   226  1025  343A               	retlw	58	;':'
   227  1026  3425               	retlw	37	;'%'
   228  1027  3430               	retlw	48	;'0'
   229  1028  3432               	retlw	50	;'2'
   230  1029  3464               	retlw	100	;'d'
   231  102A  342D               	retlw	45	;'-'
   232  102B  3425               	retlw	37	;'%'
   233  102C  3430               	retlw	48	;'0'
   234  102D  3432               	retlw	50	;'2'
   235  102E  3464               	retlw	100	;'d'
   236  102F  343A               	retlw	58	;':'
   237  1030  3425               	retlw	37	;'%'
   238  1031  3430               	retlw	48	;'0'
   239  1032  3432               	retlw	50	;'2'
   240  1033  3464               	retlw	100	;'d'
   241  1034  3400               	retlw	0
   242  1035                     STR_23:	
   243  1035  3453               	retlw	83	;'S'
   244  1036  3465               	retlw	101	;'e'
   245  1037  3474               	retlw	116	;'t'
   246  1038  3420               	retlw	32	;' '
   247  1039  3453               	retlw	83	;'S'
   248  103A  3443               	retlw	67	;'C'
   249  103B  3448               	retlw	72	;'H'
   250  103C  3445               	retlw	69	;'E'
   251  103D  3444               	retlw	68	;'D'
   252  103E  3420               	retlw	32	;' '
   253  103F  342D               	retlw	45	;'-'
   254  1040  3420               	retlw	32	;' '
   255  1041  3453               	retlw	83	;'S'
   256  1042  3454               	retlw	84	;'T'
   257  1043  3441               	retlw	65	;'A'
   258  1044  3452               	retlw	82	;'R'
   259  1045  3454               	retlw	84	;'T'
   260  1046  3400               	retlw	0
   261  1047                     STR_25:	
   262  1047  3453               	retlw	83	;'S'
   263  1048  3454               	retlw	84	;'T'
   264  1049  3441               	retlw	65	;'A'
   265  104A  3452               	retlw	82	;'R'
   266  104B  3454               	retlw	84	;'T'
   267  104C  343A               	retlw	58	;':'
   268  104D  3420               	retlw	32	;' '
   269  104E  3425               	retlw	37	;'%'
   270  104F  3430               	retlw	48	;'0'
   271  1050  3432               	retlw	50	;'2'
   272  1051  3464               	retlw	100	;'d'
   273  1052  343A               	retlw	58	;':'
   274  1053  3425               	retlw	37	;'%'
   275  1054  3430               	retlw	48	;'0'
   276  1055  3432               	retlw	50	;'2'
   277  1056  3464               	retlw	100	;'d'
   278  1057  3400               	retlw	0
   279  1058                     STR_33:	
   280  1058  3449               	retlw	73	;'I'
   281  1059  346E               	retlw	110	;'n'
   282  105A  3469               	retlw	105	;'i'
   283  105B  3474               	retlw	116	;'t'
   284  105C  3469               	retlw	105	;'i'
   285  105D  3461               	retlw	97	;'a'
   286  105E  346C               	retlw	108	;'l'
   287  105F  3469               	retlw	105	;'i'
   288  1060  347A               	retlw	122	;'z'
   289  1061  3469               	retlw	105	;'i'
   290  1062  346E               	retlw	110	;'n'
   291  1063  3467               	retlw	103	;'g'
   292  1064  342E               	retlw	46	;'.'
   293  1065  342E               	retlw	46	;'.'
   294  1066  342E               	retlw	46	;'.'
   295  1067  3400               	retlw	0
   296  1068                     STR_28:	
   297  1068  3453               	retlw	83	;'S'
   298  1069  3465               	retlw	101	;'e'
   299  106A  3474               	retlw	116	;'t'
   300  106B  3420               	retlw	32	;' '
   301  106C  3453               	retlw	83	;'S'
   302  106D  3443               	retlw	67	;'C'
   303  106E  3448               	retlw	72	;'H'
   304  106F  3445               	retlw	69	;'E'
   305  1070  3444               	retlw	68	;'D'
   306  1071  3420               	retlw	32	;' '
   307  1072  342D               	retlw	45	;'-'
   308  1073  3420               	retlw	32	;' '
   309  1074  3445               	retlw	69	;'E'
   310  1075  344E               	retlw	78	;'N'
   311  1076  3444               	retlw	68	;'D'
   312  1077  3400               	retlw	0
   313  1078                     STR_9:	
   314  1078  3454               	retlw	84	;'T'
   315  1079  3469               	retlw	105	;'i'
   316  107A  346D               	retlw	109	;'m'
   317  107B  3465               	retlw	101	;'e'
   318  107C  343A               	retlw	58	;':'
   319  107D  3420               	retlw	32	;' '
   320  107E  3425               	retlw	37	;'%'
   321  107F  3430               	retlw	48	;'0'
   322  1080  3432               	retlw	50	;'2'
   323  1081  3464               	retlw	100	;'d'
   324  1082  343A               	retlw	58	;':'
   325  1083  3425               	retlw	37	;'%'
   326  1084  3430               	retlw	48	;'0'
   327  1085  3432               	retlw	50	;'2'
   328  1086  3464               	retlw	100	;'d'
   329  1087  3400               	retlw	0
   330  1088                     STR_30:	
   331  1088  3445               	retlw	69	;'E'
   332  1089  344E               	retlw	78	;'N'
   333  108A  3444               	retlw	68	;'D'
   334  108B  343A               	retlw	58	;':'
   335  108C  3420               	retlw	32	;' '
   336  108D  3425               	retlw	37	;'%'
   337  108E  3430               	retlw	48	;'0'
   338  108F  3432               	retlw	50	;'2'
   339  1090  3464               	retlw	100	;'d'
   340  1091  343A               	retlw	58	;':'
   341  1092  3425               	retlw	37	;'%'
   342  1093  3430               	retlw	48	;'0'
   343  1094  3432               	retlw	50	;'2'
   344  1095  3464               	retlw	100	;'d'
   345  1096  3400               	retlw	0
   346  1097                     STR_24:	
   347  1097  3453               	retlw	83	;'S'
   348  1098  3454               	retlw	84	;'T'
   349  1099  3441               	retlw	65	;'A'
   350  109A  3452               	retlw	82	;'R'
   351  109B  3454               	retlw	84	;'T'
   352  109C  3420               	retlw	32	;' '
   353  109D  3448               	retlw	72	;'H'
   354  109E  344F               	retlw	79	;'O'
   355  109F  3455               	retlw	85	;'U'
   356  10A0  3452               	retlw	82	;'R'
   357  10A1  3453               	retlw	83	;'S'
   358  10A2  3400               	retlw	0
   359  10A3                     STR_26:	
   360  10A3  3453               	retlw	83	;'S'
   361  10A4  3454               	retlw	84	;'T'
   362  10A5  3441               	retlw	65	;'A'
   363  10A6  3452               	retlw	82	;'R'
   364  10A7  3454               	retlw	84	;'T'
   365  10A8  3420               	retlw	32	;' '
   366  10A9  344D               	retlw	77	;'M'
   367  10AA  3449               	retlw	73	;'I'
   368  10AB  344E               	retlw	78	;'N'
   369  10AC  3453               	retlw	83	;'S'
   370  10AD  3400               	retlw	0
   371  10AE                     STR_1:	
   372  10AE  3454               	retlw	84	;'T'
   373  10AF  3445               	retlw	69	;'E'
   374  10B0  344D               	retlw	77	;'M'
   375  10B1  3450               	retlw	80	;'P'
   376  10B2  343A               	retlw	58	;':'
   377  10B3  3420               	retlw	32	;' '
   378  10B4  3425               	retlw	37	;'%'
   379  10B5  3464               	retlw	100	;'d'
   380  10B6  3443               	retlw	67	;'C'
   381  10B7  3400               	retlw	0
   382  10B8                     STR_29:	
   383  10B8  3445               	retlw	69	;'E'
   384  10B9  344E               	retlw	78	;'N'
   385  10BA  3444               	retlw	68	;'D'
   386  10BB  3420               	retlw	32	;' '
   387  10BC  3448               	retlw	72	;'H'
   388  10BD  344F               	retlw	79	;'O'
   389  10BE  3455               	retlw	85	;'U'
   390  10BF  3452               	retlw	82	;'R'
   391  10C0  3453               	retlw	83	;'S'
   392  10C1  3400               	retlw	0
   393  10C2                     STR_11:	
   394  10C2  3444               	retlw	68	;'D'
   395  10C3  3445               	retlw	69	;'E'
   396  10C4  3443               	retlw	67	;'C'
   397  10C5  343A               	retlw	58	;':'
   398  10C6  3420               	retlw	32	;' '
   399  10C7  3425               	retlw	37	;'%'
   400  10C8  3430               	retlw	48	;'0'
   401  10C9  3432               	retlw	50	;'2'
   402  10CA  3464               	retlw	100	;'d'
   403  10CB  3400               	retlw	0
   404  10CC                     STR_10:	
   405  10CC  3449               	retlw	73	;'I'
   406  10CD  344E               	retlw	78	;'N'
   407  10CE  3443               	retlw	67	;'C'
   408  10CF  343A               	retlw	58	;':'
   409  10D0  3420               	retlw	32	;' '
   410  10D1  3425               	retlw	37	;'%'
   411  10D2  3430               	retlw	48	;'0'
   412  10D3  3432               	retlw	50	;'2'
   413  10D4  3464               	retlw	100	;'d'
   414  10D5  3400               	retlw	0
   415  10D6                     STR_12:	
   416  10D6  3453               	retlw	83	;'S'
   417  10D7  3445               	retlw	69	;'E'
   418  10D8  3454               	retlw	84	;'T'
   419  10D9  343A               	retlw	58	;':'
   420  10DA  3420               	retlw	32	;' '
   421  10DB  3425               	retlw	37	;'%'
   422  10DC  3430               	retlw	48	;'0'
   423  10DD  3432               	retlw	50	;'2'
   424  10DE  3464               	retlw	100	;'d'
   425  10DF  3400               	retlw	0
   426  10E0                     STR_6:	
   427  10E0  3425               	retlw	37	;'%'
   428  10E1  3464               	retlw	100	;'d'
   429  10E2  3420               	retlw	32	;' '
   430  10E3  3470               	retlw	112	;'p'
   431  10E4  3470               	retlw	112	;'p'
   432  10E5  346D               	retlw	109	;'m'
   433  10E6  3420               	retlw	32	;' '
   434  10E7  3420               	retlw	32	;' '
   435  10E8  3400               	retlw	0
   436  10E9                     STR_31:	
   437  10E9  3445               	retlw	69	;'E'
   438  10EA  344E               	retlw	78	;'N'
   439  10EB  3444               	retlw	68	;'D'
   440  10EC  3420               	retlw	32	;' '
   441  10ED  344D               	retlw	77	;'M'
   442  10EE  3449               	retlw	73	;'I'
   443  10EF  344E               	retlw	78	;'N'
   444  10F0  3453               	retlw	83	;'S'
   445  10F1  3400               	retlw	0
   446  10F2                     STR_2:	
   447  10F2  3448               	retlw	72	;'H'
   448  10F3  344D               	retlw	77	;'M'
   449  10F4  3444               	retlw	68	;'D'
   450  10F5  3454               	retlw	84	;'T'
   451  10F6  343A               	retlw	58	;':'
   452  10F7  3420               	retlw	32	;' '
   453  10F8  3425               	retlw	37	;'%'
   454  10F9  3464               	retlw	100	;'d'
   455  10FA  3400               	retlw	0
   456  10FB                     STR_7:	
   457  10FB  3450               	retlw	80	;'P'
   458  10FC  3455               	retlw	85	;'U'
   459  10FD  3452               	retlw	82	;'R'
   460  10FE  3446               	retlw	70	;'F'
   461  10FF  3420               	retlw	32	;' '
   462  1100  3448               	retlw	72	;'H'
   463  1101  3449               	retlw	73	;'I'
   464  1102  3400               	retlw	0
   465  1103                     STR_8:	
   466  1103  3450               	retlw	80	;'P'
   467  1104  3455               	retlw	85	;'U'
   468  1105  3452               	retlw	82	;'R'
   469  1106  3446               	retlw	70	;'F'
   470  1107  3420               	retlw	32	;' '
   471  1108  344C               	retlw	76	;'L'
   472  1109  344F               	retlw	79	;'O'
   473  110A  3400               	retlw	0
   474  110B                     STR_3:	
   475  110B  3445               	retlw	69	;'E'
   476  110C  3452               	retlw	82	;'R'
   477  110D  3452               	retlw	82	;'R'
   478  110E  344F               	retlw	79	;'O'
   479  110F  3452               	retlw	82	;'R'
   480  1110  3421               	retlw	33	;'!'
   481  1111  3400               	retlw	0
   482  1112                     STR_4:	
   483  1112  3443               	retlw	67	;'C'
   484  1113  344F               	retlw	79	;'O'
   485  1114  3432               	retlw	50	;'2'
   486  1115  343A               	retlw	58	;':'
   487  1116  3420               	retlw	32	;' '
   488  1117  3400               	retlw	0
   489  1118                     __end_of__stringdata:	
   490                           
   491                           ; #config settings
   492  0000                     
   493                           	psect	cinit
   494  0015                     start_initialization:	
   495  0015                     __initialization:	
   496                           
   497                           ; Clear objects allocated to COMMON
   498  0015  01FC               	clrf	__pbssCOMMON& (0+127)
   499                           
   500                           ; Clear objects allocated to BANK0
   501  0016  01EB               	clrf	__pbssBANK0& (0+127)
   502  0017  01EC               	clrf	(__pbssBANK0+1)& (0+127)
   503  0018  01ED               	clrf	(__pbssBANK0+2)& (0+127)
   504  0019  01EE               	clrf	(__pbssBANK0+3)& (0+127)
   505  001A  01EF               	clrf	(__pbssBANK0+4)& (0+127)
   506                           
   507                           ; Clear objects allocated to BANK1
   508  001B  1383               	bcf	3,7	;select IRP bank0
   509  001C  30D7               	movlw	low __pbssBANK1
   510  001D  0084               	movwf	4
   511  001E  30ED               	movlw	low (__pbssBANK1+22)
   512  001F  160A  118A  2297  120A  118A  	fcall	clear_ram0
   513                           
   514                           ; Initialize objects allocated to BANK0
   515  0024  160A  118A  2282  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   516  0029  00E5               	movwf	__pdataBANK0& (0+127)
   517  002A  160A  118A  2283  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   518  002F  00E6               	movwf	(__pdataBANK0+1)& (0+127)
   519  0030  160A  118A  2284  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   520  0035  00E7               	movwf	(__pdataBANK0+2)& (0+127)
   521  0036  160A  118A  2285  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   522  003B  00E8               	movwf	(__pdataBANK0+3)& (0+127)
   523  003C  160A  118A  2286  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   524  0041  00E9               	movwf	(__pdataBANK0+4)& (0+127)
   525  0042  160A  118A  2287  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   526  0047  00EA               	movwf	(__pdataBANK0+5)& (0+127)
   527                           
   528                           ; Initialize objects allocated to COMMON
   529  0048  120A  118A  27FC   	fcall	__pidataCOMMON	;fetch initializer
   530  004B  00FD               	movwf	__pdataCOMMON& (0+127)
   531  004C                     end_of_initialization:	
   532                           ;End of C runtime variable initialization code
   533                           
   534  004C                     __end_of__initialization:	
   535  004C  0183               	clrf	3
   536  004D  120A  118A  2BF7   	ljmp	_main	;jump to C main() function
   537                           
   538                           	psect	bssCOMMON
   539  007C                     __pbssCOMMON:	
   540  007C                     _ppmFlag:	
   541  007C                     	ds	1
   542                           
   543                           	psect	dataCOMMON
   544  007D                     __pdataCOMMON:	
   545  007D                     _lastMode:	
   546  007D                     	ds	1
   547                           
   548                           	psect	bssBANK0
   549  006B                     __pbssBANK0:	
   550  006B                     _key:	
   551  006B                     	ds	1
   552  006C                     _keyValid:	
   553  006C                     	ds	1
   554  006D                     _minutes:	
   555  006D                     	ds	1
   556  006E                     _humidity:	
   557  006E                     	ds	1
   558  006F                     _temperature:	
   559  006F                     	ds	1
   560                           
   561                           	psect	dataBANK0
   562  0065                     __pdataBANK0:	
   563  0065                     _hours:	
   564  0065                     	ds	1
   565  0066                     _lastKeyState:	
   566  0066                     	ds	1
   567  0067                     _savedHoursEnd:	
   568  0067                     	ds	1
   569  0068                     _savedHoursStart:	
   570  0068                     	ds	1
   571  0069                     _savedMinutesEnd:	
   572  0069                     	ds	1
   573  006A                     _savedMinutesStart:	
   574  006A                     	ds	1
   575                           
   576                           	psect	bssBANK1
   577  00D7                     __pbssBANK1:	
   578  00D7                     readDHT11@F1225:	
   579  00D7                     	ds	5
   580  00DC                     _PPM:	
   581  00DC                     	ds	3
   582  00DF                     checkSEL@lastRB1State:	
   583  00DF                     	ds	2
   584  00E1                     _SEL:	
   585  00E1                     	ds	1
   586  00E2                     _mode:	
   587  00E2                     	ds	1
   588  00E3                     _debugInfo:	
   589  00E3                     	ds	10
   590                           
   591                           	psect	clrtext
   592  1297                     clear_ram0:	
   593                           ;	Called with FSR containing the base address, and
   594                           ;	W with the last address+1
   595                           
   596  1297  0064               	clrwdt	;clear the watchdog before getting into this loop
   597  1298                     clrloop0:	
   598  1298  0180               	clrf	0	;clear RAM location pointed to by FSR
   599  1299  0A84               	incf	4,f	;increment pointer
   600  129A  0604               	xorwf	4,w	;XOR with final address
   601  129B  1903               	btfsc	3,2	;have we reached the end yet?
   602  129C  3400               	retlw	0	;all done for this memory range, return
   603  129D  0604               	xorwf	4,w	;XOR again to restore value
   604  129E  2A98               	goto	clrloop0	;do the next byte
   605                           
   606                           	psect	cstackBANK1
   607  00A0                     __pcstackBANK1:	
   608  00A0                     CalcMQ135@voltage:	
   609  00A0                     displayPPM@strBuffer:	
   610                           ; 3 bytes @ 0x0
   611                           
   612                           
   613                           ; 20 bytes @ 0x0
   614  00A0                     	ds	3
   615  00A3                     CalcMQ135@ratio6:	
   616                           
   617                           ; 3 bytes @ 0x3
   618  00A3                     	ds	3
   619  00A6                     _CalcMQ135$774:	
   620                           
   621                           ; 3 bytes @ 0x6
   622  00A6                     	ds	3
   623  00A9                     _CalcMQ135$775:	
   624                           
   625                           ; 3 bytes @ 0x9
   626  00A9                     	ds	3
   627  00AC                     _CalcMQ135$776:	
   628                           
   629                           ; 3 bytes @ 0xC
   630  00AC                     	ds	3
   631  00AF                     _CalcMQ135$777:	
   632                           
   633                           ; 3 bytes @ 0xF
   634  00AF                     	ds	3
   635  00B2                     _CalcMQ135$778:	
   636                           
   637                           ; 3 bytes @ 0x12
   638  00B2                     	ds	2
   639  00B4                     displayPPM@ppmWhole:	
   640                           
   641                           ; 2 bytes @ 0x14
   642  00B4                     	ds	1
   643  00B5                     CalcMQ135@ratio2:	
   644                           
   645                           ; 3 bytes @ 0x15
   646  00B5                     	ds	1
   647  00B6                     displayPPM@ppmFraction:	
   648                           
   649                           ; 2 bytes @ 0x16
   650  00B6                     	ds	2
   651  00B8                     displayPPM@bufPtr:	
   652  00B8                     CalcMQ135@ratio3:	
   653                           ; 1 bytes @ 0x18
   654                           
   655                           
   656                           ; 3 bytes @ 0x18
   657  00B8                     	ds	3
   658  00BB                     CalcMQ135@ratio4:	
   659                           
   660                           ; 3 bytes @ 0x1B
   661  00BB                     	ds	3
   662  00BE                     CalcMQ135@ratio5:	
   663                           
   664                           ; 3 bytes @ 0x1E
   665  00BE                     	ds	3
   666  00C1                     CalcMQ135@co2:	
   667                           
   668                           ; 3 bytes @ 0x21
   669  00C1                     	ds	3
   670  00C4                     CalcMQ135@ratio:	
   671                           
   672                           ; 3 bytes @ 0x24
   673  00C4                     	ds	3
   674  00C7                     main@buffer:	
   675                           
   676                           ; 16 bytes @ 0x27
   677  00C7                     	ds	16
   678                           
   679                           	psect	cstackCOMMON
   680  0070                     __pcstackCOMMON:	
   681  0070                     ?_initPorts:	
   682  0070                     ?_initRegisters:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ?_initInterrupts:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ?_startUpSequence:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ?_checkMode:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_checkSEL:	
   695                           ; 0 bytes @ 0x0
   696                           
   697  0070                     ?_isdigit:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ?_instCTRL:	
   701                           ; 1 bit 
   702                           
   703  0070                     ?_dataCTRL:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_initLCD:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_initDHT11:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_displayDataDHT11:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_runDHT11:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?_activateHumidifier:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?_runMQ135:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?_displayPPM:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0070                     ?_runClock:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ?_displayTime:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     ?_setHoursStart:	
   734                           ; 0 bytes @ 0x0
   735                           
   736  0070                     ?_setHoursEnd:	
   737                           ; 0 bytes @ 0x0
   738                           
   739  0070                     ?_setMinutesStart:	
   740                           ; 0 bytes @ 0x0
   741                           
   742  0070                     ?_setMinutesEnd:	
   743                           ; 0 bytes @ 0x0
   744                           
   745  0070                     ?_checkTime:	
   746                           ; 0 bytes @ 0x0
   747                           
   748  0070                     ?_main:	
   749                           ; 0 bytes @ 0x0
   750                           
   751  0070                     ?_ISR:	
   752                           ; 0 bytes @ 0x0
   753                           
   754  0070                     ?_handlePPM:	
   755                           ; 0 bytes @ 0x0
   756                           
   757  0070                     ?i1___awmod:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     i1___awmod@divisor:	
   761                           ; 2 bytes @ 0x0
   762                           
   763                           
   764                           ; 2 bytes @ 0x0
   765  0070                     	ds	2
   766  0072                     i1___awmod@dividend:	
   767                           
   768                           ; 2 bytes @ 0x2
   769  0072                     	ds	2
   770  0074                     ??i1___awmod:	
   771                           
   772                           ; 0 bytes @ 0x4
   773  0074                     	ds	1
   774  0075                     i1___awmod@counter:	
   775                           
   776                           ; 1 bytes @ 0x5
   777  0075                     	ds	1
   778  0076                     i1___awmod@sign:	
   779                           
   780                           ; 1 bytes @ 0x6
   781  0076                     	ds	1
   782  0077                     ??_ISR:	
   783                           
   784                           ; 0 bytes @ 0x7
   785  0077                     	ds	5
   786                           
   787                           	psect	cstackBANK0
   788  0020                     __pcstackBANK0:	
   789  0020                     ??_initPorts:	
   790  0020                     ??_initRegisters:	
   791                           ; 0 bytes @ 0x0
   792                           
   793  0020                     ??_initInterrupts:	
   794                           ; 0 bytes @ 0x0
   795                           
   796  0020                     ??_isdigit:	
   797                           ; 0 bytes @ 0x0
   798                           
   799  0020                     ??_instCTRL:	
   800                           ; 0 bytes @ 0x0
   801                           
   802  0020                     ??_dataCTRL:	
   803                           ; 0 bytes @ 0x0
   804                           
   805  0020                     ??_initDHT11:	
   806                           ; 0 bytes @ 0x0
   807                           
   808  0020                     ??_activateHumidifier:	
   809                           ; 0 bytes @ 0x0
   810                           
   811  0020                     ??_runClock:	
   812                           ; 0 bytes @ 0x0
   813                           
   814  0020                     ??_checkTime:	
   815                           ; 0 bytes @ 0x0
   816                           
   817  0020                     ?___ftge:	
   818                           ; 0 bytes @ 0x0
   819                           
   820  0020                     ?_readDHT11:	
   821                           ; 1 bit 
   822                           
   823  0020                     ?_readADC:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0020                     ?___wmul:	
   827                           ; 2 bytes @ 0x0
   828                           
   829  0020                     ?___awmod:	
   830                           ; 2 bytes @ 0x0
   831                           
   832  0020                     ?___lwdiv:	
   833                           ; 2 bytes @ 0x0
   834                           
   835  0020                     ?___ftpack:	
   836                           ; 2 bytes @ 0x0
   837                           
   838  0020                     readDHT11@humidity:	
   839                           ; 3 bytes @ 0x0
   840                           
   841  0020                     _isdigit$528:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0020                     ___wmul@multiplier:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0020                     ___awmod@divisor:	
   848                           ; 2 bytes @ 0x0
   849                           
   850  0020                     ___lwdiv@divisor:	
   851                           ; 2 bytes @ 0x0
   852                           
   853  0020                     ___ftpack@arg:	
   854                           ; 2 bytes @ 0x0
   855                           
   856  0020                     ___ftge@ff1:	
   857                           ; 3 bytes @ 0x0
   858                           
   859                           
   860                           ; 3 bytes @ 0x0
   861  0020                     	ds	1
   862  0021                     ??_readDHT11:	
   863  0021                     instCTRL@CMD:	
   864                           ; 0 bytes @ 0x1
   865                           
   866  0021                     dataCTRL@DAT:	
   867                           ; 1 bytes @ 0x1
   868                           
   869  0021                     isdigit@c:	
   870                           ; 1 bytes @ 0x1
   871                           
   872                           
   873                           ; 1 bytes @ 0x1
   874  0021                     	ds	1
   875  0022                     ??_checkMode:	
   876  0022                     ??_checkSEL:	
   877                           ; 0 bytes @ 0x2
   878                           
   879  0022                     ??_readADC:	
   880                           ; 0 bytes @ 0x2
   881                           
   882  0022                     ??_initLCD:	
   883                           ; 0 bytes @ 0x2
   884                           
   885  0022                     ?_setCursor:	
   886                           ; 0 bytes @ 0x2
   887                           
   888  0022                     ?_printToLCD:	
   889                           ; 0 bytes @ 0x2
   890                           
   891  0022                     setCursor@column:	
   892                           ; 0 bytes @ 0x2
   893                           
   894  0022                     printToLCD@str:	
   895                           ; 1 bytes @ 0x2
   896                           
   897  0022                     ___wmul@multiplicand:	
   898                           ; 2 bytes @ 0x2
   899                           
   900  0022                     ___awmod@dividend:	
   901                           ; 2 bytes @ 0x2
   902                           
   903  0022                     ___lwdiv@dividend:	
   904                           ; 2 bytes @ 0x2
   905                           
   906                           
   907                           ; 2 bytes @ 0x2
   908  0022                     	ds	1
   909  0023                     ??_setCursor:	
   910  0023                     ___ftpack@exp:	
   911                           ; 0 bytes @ 0x3
   912                           
   913  0023                     ___ftge@ff2:	
   914                           ; 1 bytes @ 0x3
   915                           
   916                           
   917                           ; 3 bytes @ 0x3
   918  0023                     	ds	1
   919  0024                     ??_printToLCD:	
   920  0024                     ??___wmul:	
   921                           ; 0 bytes @ 0x4
   922                           
   923  0024                     ??___awmod:	
   924                           ; 0 bytes @ 0x4
   925                           
   926  0024                     ??___lwdiv:	
   927                           ; 0 bytes @ 0x4
   928                           
   929  0024                     readADC@channel:	
   930                           ; 0 bytes @ 0x4
   931                           
   932  0024                     setCursor@row:	
   933                           ; 1 bytes @ 0x4
   934                           
   935  0024                     ___ftpack@sign:	
   936                           ; 1 bytes @ 0x4
   937                           
   938  0024                     checkSEL@currentRB1State:	
   939                           ; 1 bytes @ 0x4
   940                           
   941  0024                     ___wmul@product:	
   942                           ; 2 bytes @ 0x4
   943                           
   944                           
   945                           ; 2 bytes @ 0x4
   946  0024                     	ds	1
   947  0025                     ??___ftpack:	
   948  0025                     setCursor@address:	
   949                           ; 0 bytes @ 0x5
   950                           
   951  0025                     ___awmod@counter:	
   952                           ; 1 bytes @ 0x5
   953                           
   954  0025                     ___lwdiv@quotient:	
   955                           ; 1 bytes @ 0x5
   956                           
   957                           
   958                           ; 2 bytes @ 0x5
   959  0025                     	ds	1
   960  0026                     ??_startUpSequence:	
   961  0026                     ??___ftge:	
   962                           ; 0 bytes @ 0x6
   963                           
   964  0026                     ___awmod@sign:	
   965                           ; 0 bytes @ 0x6
   966                           
   967                           
   968                           ; 1 bytes @ 0x6
   969  0026                     	ds	1
   970  0027                     readDHT11@temperature:	
   971  0027                     ___lwdiv@counter:	
   972                           ; 1 bytes @ 0x7
   973                           
   974                           
   975                           ; 1 bytes @ 0x7
   976  0027                     	ds	1
   977  0028                     ?___lwmod:	
   978  0028                     ?___awtoft:	
   979                           ; 2 bytes @ 0x8
   980                           
   981  0028                     ___awtoft@c:	
   982                           ; 3 bytes @ 0x8
   983                           
   984  0028                     ___lwmod@divisor:	
   985                           ; 2 bytes @ 0x8
   986                           
   987  0028                     readDHT11@bits:	
   988                           ; 2 bytes @ 0x8
   989                           
   990                           
   991                           ; 5 bytes @ 0x8
   992  0028                     	ds	2
   993  002A                     ___lwmod@dividend:	
   994                           
   995                           ; 2 bytes @ 0xA
   996  002A                     	ds	1
   997  002B                     ??___awtoft:	
   998                           
   999                           ; 0 bytes @ 0xB
  1000  002B                     	ds	1
  1001  002C                     ??_handlePPM:	
  1002  002C                     ??___lwmod:	
  1003                           ; 0 bytes @ 0xC
  1004                           
  1005                           
  1006                           ; 0 bytes @ 0xC
  1007  002C                     	ds	1
  1008  002D                     readDHT11@i:	
  1009  002D                     ___awtoft@sign:	
  1010                           ; 1 bytes @ 0xD
  1011                           
  1012  002D                     ___lwmod@counter:	
  1013                           ; 1 bytes @ 0xD
  1014                           
  1015                           
  1016                           ; 1 bytes @ 0xD
  1017  002D                     	ds	1
  1018  002E                     ?_sprintf:	
  1019  002E                     ?___ftneg:	
  1020                           ; 2 bytes @ 0xE
  1021                           
  1022  002E                     readDHT11@j:	
  1023                           ; 3 bytes @ 0xE
  1024                           
  1025  002E                     sprintf@f:	
  1026                           ; 1 bytes @ 0xE
  1027                           
  1028  002E                     ___ftneg@f1:	
  1029                           ; 2 bytes @ 0xE
  1030                           
  1031                           
  1032                           ; 3 bytes @ 0xE
  1033  002E                     	ds	3
  1034  0031                     ??___ftneg:	
  1035  0031                     ?___ftmul:	
  1036                           ; 0 bytes @ 0x11
  1037                           
  1038  0031                     ___ftmul@f1:	
  1039                           ; 3 bytes @ 0x11
  1040                           
  1041                           
  1042                           ; 3 bytes @ 0x11
  1043  0031                     	ds	3
  1044  0034                     ___ftmul@f2:	
  1045                           
  1046                           ; 3 bytes @ 0x14
  1047  0034                     	ds	3
  1048  0037                     ??___ftmul:	
  1049                           
  1050                           ; 0 bytes @ 0x17
  1051  0037                     	ds	1
  1052  0038                     ??_sprintf:	
  1053                           
  1054                           ; 0 bytes @ 0x18
  1055  0038                     	ds	3
  1056  003B                     sprintf@ap:	
  1057  003B                     ___ftmul@exp:	
  1058                           ; 1 bytes @ 0x1B
  1059                           
  1060                           
  1061                           ; 1 bytes @ 0x1B
  1062  003B                     	ds	1
  1063  003C                     sprintf@prec:	
  1064  003C                     ___ftmul@f3_as_product:	
  1065                           ; 1 bytes @ 0x1C
  1066                           
  1067                           
  1068                           ; 3 bytes @ 0x1C
  1069  003C                     	ds	1
  1070  003D                     sprintf@ccnt:	
  1071                           
  1072                           ; 2 bytes @ 0x1D
  1073  003D                     	ds	2
  1074  003F                     ___ftmul@cntr:	
  1075  003F                     sprintf@_val:	
  1076                           ; 1 bytes @ 0x1F
  1077                           
  1078                           
  1079                           ; 4 bytes @ 0x1F
  1080  003F                     	ds	1
  1081  0040                     ___ftmul@sign:	
  1082                           
  1083                           ; 1 bytes @ 0x20
  1084  0040                     	ds	1
  1085  0041                     ?___ftadd:	
  1086  0041                     ?___ftdiv:	
  1087                           ; 3 bytes @ 0x21
  1088                           
  1089  0041                     ___ftadd@f1:	
  1090                           ; 3 bytes @ 0x21
  1091                           
  1092  0041                     ___ftdiv@f2:	
  1093                           ; 3 bytes @ 0x21
  1094                           
  1095                           
  1096                           ; 3 bytes @ 0x21
  1097  0041                     	ds	2
  1098  0043                     sprintf@flag:	
  1099                           
  1100                           ; 1 bytes @ 0x23
  1101  0043                     	ds	1
  1102  0044                     sprintf@width:	
  1103  0044                     ___ftadd@f2:	
  1104                           ; 2 bytes @ 0x24
  1105                           
  1106  0044                     ___ftdiv@f1:	
  1107                           ; 3 bytes @ 0x24
  1108                           
  1109                           
  1110                           ; 3 bytes @ 0x24
  1111  0044                     	ds	2
  1112  0046                     sprintf@c:	
  1113                           
  1114                           ; 1 bytes @ 0x26
  1115  0046                     	ds	1
  1116  0047                     ??___ftadd:	
  1117  0047                     ??___ftdiv:	
  1118                           ; 0 bytes @ 0x27
  1119                           
  1120  0047                     sprintf@sp:	
  1121                           ; 0 bytes @ 0x27
  1122                           
  1123                           
  1124                           ; 1 bytes @ 0x27
  1125  0047                     	ds	1
  1126  0048                     ??_displayDataDHT11:	
  1127  0048                     ??_displayTime:	
  1128                           ; 0 bytes @ 0x28
  1129                           
  1130  0048                     ??_setHoursStart:	
  1131                           ; 0 bytes @ 0x28
  1132                           
  1133  0048                     ??_setHoursEnd:	
  1134                           ; 0 bytes @ 0x28
  1135                           
  1136  0048                     ??_setMinutesStart:	
  1137                           ; 0 bytes @ 0x28
  1138                           
  1139  0048                     ??_setMinutesEnd:	
  1140                           ; 0 bytes @ 0x28
  1141                           
  1142                           
  1143                           ; 0 bytes @ 0x28
  1144  0048                     	ds	2
  1145  004A                     displayDataDHT11@buffer:	
  1146                           
  1147                           ; 15 bytes @ 0x2A
  1148  004A                     	ds	1
  1149  004B                     ___ftadd@sign:	
  1150  004B                     ___ftdiv@cntr:	
  1151                           ; 1 bytes @ 0x2B
  1152                           
  1153                           
  1154                           ; 1 bytes @ 0x2B
  1155  004B                     	ds	1
  1156  004C                     ___ftadd@exp2:	
  1157  004C                     ___ftdiv@f3:	
  1158                           ; 1 bytes @ 0x2C
  1159                           
  1160  004C                     displayTime@timeFormat:	
  1161                           ; 3 bytes @ 0x2C
  1162                           
  1163                           
  1164                           ; 16 bytes @ 0x2C
  1165  004C                     	ds	1
  1166  004D                     ___ftadd@exp1:	
  1167                           
  1168                           ; 1 bytes @ 0x2D
  1169  004D                     	ds	1
  1170  004E                     ?___fttol:	
  1171  004E                     ___fttol@f1:	
  1172                           ; 4 bytes @ 0x2E
  1173                           
  1174                           
  1175                           ; 3 bytes @ 0x2E
  1176  004E                     	ds	1
  1177  004F                     ___ftdiv@exp:	
  1178                           
  1179                           ; 1 bytes @ 0x2F
  1180  004F                     	ds	1
  1181  0050                     ___ftdiv@sign:	
  1182                           
  1183                           ; 1 bytes @ 0x30
  1184  0050                     	ds	1
  1185  0051                     ?_CalcMQ135:	
  1186  0051                     CalcMQ135@RAW_ADC:	
  1187                           ; 3 bytes @ 0x31
  1188                           
  1189                           
  1190                           ; 2 bytes @ 0x31
  1191  0051                     	ds	1
  1192  0052                     ??___fttol:	
  1193                           
  1194                           ; 0 bytes @ 0x32
  1195  0052                     	ds	2
  1196  0054                     ??_CalcMQ135:	
  1197  0054                     ??_runMQ135:	
  1198                           ; 0 bytes @ 0x34
  1199                           
  1200                           
  1201                           ; 0 bytes @ 0x34
  1202  0054                     	ds	2
  1203  0056                     ___fttol@sign1:	
  1204                           
  1205                           ; 1 bytes @ 0x36
  1206  0056                     	ds	1
  1207  0057                     ___fttol@lval:	
  1208                           
  1209                           ; 4 bytes @ 0x37
  1210  0057                     	ds	2
  1211  0059                     ??_runDHT11:	
  1212                           
  1213                           ; 0 bytes @ 0x39
  1214  0059                     	ds	2
  1215  005B                     ___fttol@exp1:	
  1216                           
  1217                           ; 1 bytes @ 0x3B
  1218  005B                     	ds	1
  1219  005C                     ??_displayPPM:	
  1220                           
  1221                           ; 0 bytes @ 0x3C
  1222  005C                     	ds	1
  1223  005D                     ??_main:	
  1224                           
  1225                           ; 0 bytes @ 0x3D
  1226  005D                     	ds	8
  1227                           
  1228                           	psect	maintext
  1229  03F7                     __pmaintext:	
  1230 ;;
  1231 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1232 ;;
  1233 ;; *************** function _main *****************
  1234 ;; Defined at:
  1235 ;;		line 29 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;		None
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  buffer         16   39[BANK1 ] unsigned char [16]
  1240 ;; Return value:  Size  Location     Type
  1241 ;;		None               void
  1242 ;; Registers used:
  1243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 17F/0
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1249 ;;      Params:         0       0       0       0       0
  1250 ;;      Locals:         0       0      16       0       0
  1251 ;;      Temps:          0       8       0       0       0
  1252 ;;      Totals:         0       8      16       0       0
  1253 ;;Total ram usage:       24 bytes
  1254 ;; Hardware stack levels required when called:    6
  1255 ;; This function calls:
  1256 ;;		_activateHumidifier
  1257 ;;		_checkMode
  1258 ;;		_checkSEL
  1259 ;;		_checkTime
  1260 ;;		_displayDataDHT11
  1261 ;;		_displayPPM
  1262 ;;		_displayTime
  1263 ;;		_handlePPM
  1264 ;;		_initInterrupts
  1265 ;;		_initPorts
  1266 ;;		_initRegisters
  1267 ;;		_printToLCD
  1268 ;;		_runClock
  1269 ;;		_runDHT11
  1270 ;;		_runMQ135
  1271 ;;		_setCursor
  1272 ;;		_setHoursEnd
  1273 ;;		_setHoursStart
  1274 ;;		_setMinutesEnd
  1275 ;;		_setMinutesStart
  1276 ;;		_sprintf
  1277 ;;		_startUpSequence
  1278 ;; This function is called by:
  1279 ;;		Startup code after reset
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _main
  1285  03F7                     _main:	
  1286                           
  1287                           ;main.c: 31: char buffer[16];
  1288                           ;main.c: 33: initPorts();
  1289                           
  1290                           ;incstack = 0
  1291                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1292  03F7  160A  118A  22C0  120A  118A  	fcall	_initPorts
  1293                           
  1294                           ;main.c: 35: initRegisters();
  1295  03FC  160A  118A  229F  120A  118A  	fcall	_initRegisters
  1296                           
  1297                           ;main.c: 37: initInterrupts();
  1298  0401  160A  118A  228F  120A  118A  	fcall	_initInterrupts
  1299                           
  1300                           ;main.c: 39: startUpSequence();
  1301  0406  160A  118A  255A  120A  118A  	fcall	_startUpSequence
  1302                           
  1303                           ;main.c: 63: switch (mode)
  1304  040B  2DF0               	goto	l3009
  1305  040C                     l3037:	
  1306                           ;main.c: 67: {
  1307                           ;main.c: 68: case 0:
  1308                           
  1309                           ;main.c: 66: switch (SEL)
  1310                           
  1311                           ;main.c: 64: {
  1312                           ;main.c: 65: case STAT:
  1313                           
  1314                           
  1315                           ;main.c: 69: setCursor(0, 0);
  1316  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1317  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1318  040E  01A2               	clrf	setCursor@column
  1319  040F  3000               	movlw	0
  1320  0410  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1321                           
  1322                           ;main.c: 70: displayDataDHT11();
  1323  0415  160A  118A  26DF  120A  118A  	fcall	_displayDataDHT11
  1324                           
  1325                           ;main.c: 71: setCursor(2, 0);
  1326  041A  1283               	bcf	3,5	;RP0=0, select bank0
  1327  041B  1303               	bcf	3,6	;RP1=0, select bank0
  1328  041C  01A2               	clrf	setCursor@column
  1329  041D  3002               	movlw	2
  1330  041E  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1331                           
  1332                           ;main.c: 72: displayPPM();
  1333  0423  120A  118A  2632  120A  118A  	fcall	_displayPPM
  1334                           
  1335                           ;main.c: 73: break;
  1336  0428  2DF0               	goto	l3009
  1337  0429                     l3043:	
  1338                           ;main.c: 74: case 1:
  1339                           
  1340                           
  1341                           ;main.c: 75: setCursor(0, 0);
  1342  0429  1283               	bcf	3,5	;RP0=0, select bank0
  1343  042A  1303               	bcf	3,6	;RP1=0, select bank0
  1344  042B  01A2               	clrf	setCursor@column
  1345  042C  3000               	movlw	0
  1346  042D  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1347                           
  1348                           ;main.c: 76: displayTime();
  1349  0432  160A  118A  231C  120A  118A  	fcall	_displayTime
  1350                           
  1351                           ;main.c: 77: setCursor(1, 0);
  1352  0437  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0438  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0439  01A2               	clrf	setCursor@column
  1355  043A  3001               	movlw	1
  1356  043B  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1357                           
  1358                           ;main.c: 78: sprintf(buffer, "RUN: %02d:%02d-%02d:%02d", savedHoursStart, savedMinutesSt
      +                          art, savedHoursEnd, savedMinutesEnd);
  1359  0440  301C               	movlw	low (STR_22| (0+32768))
  1360  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1361  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1362  0443  00AE               	movwf	sprintf@f
  1363  0444  3090               	movlw	high (STR_22| (0+32768))
  1364  0445  00AF               	movwf	sprintf@f+1
  1365  0446  0868               	movf	_savedHoursStart,w	;volatile
  1366  0447  00DD               	movwf	??_main
  1367  0448  01DE               	clrf	??_main+1
  1368  0449  085D               	movf	??_main,w
  1369  044A  00B0               	movwf	?_sprintf+2
  1370  044B  085E               	movf	??_main+1,w
  1371  044C  00B1               	movwf	?_sprintf+3
  1372  044D  086A               	movf	_savedMinutesStart,w	;volatile
  1373  044E  00DF               	movwf	??_main+2
  1374  044F  01E0               	clrf	??_main+3
  1375  0450  085F               	movf	??_main+2,w
  1376  0451  00B2               	movwf	?_sprintf+4
  1377  0452  0860               	movf	??_main+3,w
  1378  0453  00B3               	movwf	?_sprintf+5
  1379  0454  0867               	movf	_savedHoursEnd,w	;volatile
  1380  0455  00E1               	movwf	??_main+4
  1381  0456  01E2               	clrf	??_main+5
  1382  0457  0861               	movf	??_main+4,w
  1383  0458  00B4               	movwf	?_sprintf+6
  1384  0459  0862               	movf	??_main+5,w
  1385  045A  00B5               	movwf	?_sprintf+7
  1386  045B  0869               	movf	_savedMinutesEnd,w	;volatile
  1387  045C  00E3               	movwf	??_main+6
  1388  045D  01E4               	clrf	??_main+7
  1389  045E  0863               	movf	??_main+6,w
  1390  045F  00B6               	movwf	?_sprintf+8
  1391  0460  0864               	movf	??_main+7,w
  1392  0461  00B7               	movwf	?_sprintf+9
  1393  0462  30C7               	movlw	main@buffer& (0+255)
  1394  0463  120A  158A  2601  120A  118A  	fcall	_sprintf
  1395                           
  1396                           ;main.c: 79: printToLCD(buffer);
  1397  0468  30C7               	movlw	main@buffer& (0+255)
  1398  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1399  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1400  046B  00A2               	movwf	printToLCD@str
  1401  046C  3000               	movlw	0
  1402  046D  00A3               	movwf	printToLCD@str+1
  1403  046E  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1404                           
  1405                           ;main.c: 83: }
  1406                           
  1407                           ;main.c: 82: break;
  1408                           
  1409                           ;main.c: 81: default:
  1410                           
  1411                           ;main.c: 80: break;
  1412  0473  2DF0               	goto	l3009
  1413  0474                     l3051:	
  1414  0474  1683               	bsf	3,5	;RP0=1, select bank1
  1415  0475  1303               	bcf	3,6	;RP1=0, select bank1
  1416  0476  0861               	movf	_SEL^(0+128),w	;volatile
  1417                           
  1418                           ; Switch size 1, requested type "space"
  1419                           ; Number of cases is 2, Range of values is 0 to 1
  1420                           ; switch strategies available:
  1421                           ; Name         Instructions Cycles
  1422                           ; simple_byte            7     4 (average)
  1423                           ; direct_byte           14     8 (fixed)
  1424                           ; jumptable            260     6 (fixed)
  1425                           ;	Chosen strategy is simple_byte
  1426  0477  3A00               	xorlw	0	; case 0
  1427  0478  1903               	skipnz
  1428  0479  2C0C               	goto	l3037
  1429  047A  3A01               	xorlw	1	; case 1
  1430  047B  1903               	skipnz
  1431  047C  2C29               	goto	l3043
  1432  047D  2DF0               	goto	l3009
  1433                           
  1434                           ;main.c: 84: break;
  1435  047E  2DF0               	goto	l3009
  1436  047F                     l3053:	
  1437                           ;main.c: 85: case SET_TIME_START:
  1438                           
  1439                           
  1440                           ;main.c: 86: setCursor(0, 0);
  1441  047F  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0480  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0481  01A2               	clrf	setCursor@column
  1444  0482  3000               	movlw	0
  1445  0483  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1446                           
  1447                           ;main.c: 87: printToLCD("Set SCHED - START");
  1448  0488  3035               	movlw	low (STR_23| (0+32768))
  1449  0489  1283               	bcf	3,5	;RP0=0, select bank0
  1450  048A  1303               	bcf	3,6	;RP1=0, select bank0
  1451  048B  00A2               	movwf	printToLCD@str
  1452  048C  3090               	movlw	high (STR_23| (0+32768))
  1453  048D  00A3               	movwf	printToLCD@str+1
  1454  048E  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1455                           
  1456                           ;main.c: 88: setCursor(1, 0);
  1457  0493  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0494  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0495  01A2               	clrf	setCursor@column
  1460  0496  3001               	movlw	1
  1461  0497  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1462                           
  1463                           ;main.c: 89: switch (SEL)
  1464  049C  2D2D               	goto	l3081
  1465  049D                     l3059:	
  1466                           ;main.c: 90: {
  1467                           ;main.c: 91: case 0:
  1468                           
  1469                           
  1470                           ;main.c: 92: printToLCD("START HOURS");
  1471  049D  3097               	movlw	low (STR_24| (0+32768))
  1472  049E  1283               	bcf	3,5	;RP0=0, select bank0
  1473  049F  1303               	bcf	3,6	;RP1=0, select bank0
  1474  04A0  00A2               	movwf	printToLCD@str
  1475  04A1  3090               	movlw	high (STR_24| (0+32768))
  1476  04A2  00A3               	movwf	printToLCD@str+1
  1477  04A3  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1478                           
  1479                           ;main.c: 93: setCursor(3, 0);
  1480  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1481  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1482  04AA  01A2               	clrf	setCursor@column
  1483  04AB  3003               	movlw	3
  1484  04AC  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1485                           
  1486                           ;main.c: 94: sprintf(buffer, "START: %02d:%02d", savedHoursStart, savedMinutesStart);
  1487  04B1  3047               	movlw	low (STR_25| (0+32768))
  1488  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  1489  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  1490  04B4  00AE               	movwf	sprintf@f
  1491  04B5  3090               	movlw	high (STR_25| (0+32768))
  1492  04B6  00AF               	movwf	sprintf@f+1
  1493  04B7  0868               	movf	_savedHoursStart,w	;volatile
  1494  04B8  00DD               	movwf	??_main
  1495  04B9  01DE               	clrf	??_main+1
  1496  04BA  085D               	movf	??_main,w
  1497  04BB  00B0               	movwf	?_sprintf+2
  1498  04BC  085E               	movf	??_main+1,w
  1499  04BD  00B1               	movwf	?_sprintf+3
  1500  04BE  086A               	movf	_savedMinutesStart,w	;volatile
  1501  04BF  00DF               	movwf	??_main+2
  1502  04C0  01E0               	clrf	??_main+3
  1503  04C1  085F               	movf	??_main+2,w
  1504  04C2  00B2               	movwf	?_sprintf+4
  1505  04C3  0860               	movf	??_main+3,w
  1506  04C4  00B3               	movwf	?_sprintf+5
  1507  04C5  30C7               	movlw	main@buffer& (0+255)
  1508  04C6  120A  158A  2601  120A  118A  	fcall	_sprintf
  1509                           
  1510                           ;main.c: 95: printToLCD(buffer);
  1511  04CB  30C7               	movlw	main@buffer& (0+255)
  1512  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  1513  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  1514  04CE  00A2               	movwf	printToLCD@str
  1515  04CF  3000               	movlw	0
  1516  04D0  00A3               	movwf	printToLCD@str+1
  1517  04D1  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1518                           
  1519                           ;main.c: 96: setCursor(2, 0);
  1520  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1521  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1522  04D8  01A2               	clrf	setCursor@column
  1523  04D9  3002               	movlw	2
  1524  04DA  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1525                           
  1526                           ;main.c: 97: setHoursStart();
  1527  04DF  120A  158A  20C1  120A  118A  	fcall	_setHoursStart
  1528                           
  1529                           ;main.c: 98: break;
  1530  04E4  2DF0               	goto	l3009
  1531  04E5                     l3069:	
  1532                           ;main.c: 99: case 1:
  1533                           
  1534                           
  1535                           ;main.c: 100: printToLCD("START MINS");
  1536  04E5  30A3               	movlw	low (STR_26| (0+32768))
  1537  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1538  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1539  04E8  00A2               	movwf	printToLCD@str
  1540  04E9  3090               	movlw	high (STR_26| (0+32768))
  1541  04EA  00A3               	movwf	printToLCD@str+1
  1542  04EB  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1543                           
  1544                           ;main.c: 101: setCursor(3, 0);
  1545  04F0  1283               	bcf	3,5	;RP0=0, select bank0
  1546  04F1  1303               	bcf	3,6	;RP1=0, select bank0
  1547  04F2  01A2               	clrf	setCursor@column
  1548  04F3  3003               	movlw	3
  1549  04F4  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1550                           
  1551                           ;main.c: 102: sprintf(buffer, "START: %02d:%02d", savedHoursStart, savedMinutesStart);
  1552  04F9  3047               	movlw	low (STR_25| (0+32768))
  1553  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1554  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1555  04FC  00AE               	movwf	sprintf@f
  1556  04FD  3090               	movlw	high (STR_25| (0+32768))
  1557  04FE  00AF               	movwf	sprintf@f+1
  1558  04FF  0868               	movf	_savedHoursStart,w	;volatile
  1559  0500  00DD               	movwf	??_main
  1560  0501  01DE               	clrf	??_main+1
  1561  0502  085D               	movf	??_main,w
  1562  0503  00B0               	movwf	?_sprintf+2
  1563  0504  085E               	movf	??_main+1,w
  1564  0505  00B1               	movwf	?_sprintf+3
  1565  0506  086A               	movf	_savedMinutesStart,w	;volatile
  1566  0507  00DF               	movwf	??_main+2
  1567  0508  01E0               	clrf	??_main+3
  1568  0509  085F               	movf	??_main+2,w
  1569  050A  00B2               	movwf	?_sprintf+4
  1570  050B  0860               	movf	??_main+3,w
  1571  050C  00B3               	movwf	?_sprintf+5
  1572  050D  30C7               	movlw	main@buffer& (0+255)
  1573  050E  120A  158A  2601  120A  118A  	fcall	_sprintf
  1574                           
  1575                           ;main.c: 103: printToLCD(buffer);
  1576  0513  30C7               	movlw	main@buffer& (0+255)
  1577  0514  1283               	bcf	3,5	;RP0=0, select bank0
  1578  0515  1303               	bcf	3,6	;RP1=0, select bank0
  1579  0516  00A2               	movwf	printToLCD@str
  1580  0517  3000               	movlw	0
  1581  0518  00A3               	movwf	printToLCD@str+1
  1582  0519  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1583                           
  1584                           ;main.c: 104: setCursor(2, 0);
  1585  051E  1283               	bcf	3,5	;RP0=0, select bank0
  1586  051F  1303               	bcf	3,6	;RP1=0, select bank0
  1587  0520  01A2               	clrf	setCursor@column
  1588  0521  3002               	movlw	2
  1589  0522  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1590                           
  1591                           ;main.c: 105: setMinutesStart();
  1592  0527  120A  158A  2213  120A  118A  	fcall	_setMinutesStart
  1593                           
  1594                           ;main.c: 109: }
  1595                           
  1596                           ;main.c: 108: break;
  1597                           
  1598                           ;main.c: 107: default:
  1599                           
  1600                           ;main.c: 106: break;
  1601  052C  2DF0               	goto	l3009
  1602  052D                     l3081:	
  1603  052D  1683               	bsf	3,5	;RP0=1, select bank1
  1604  052E  1303               	bcf	3,6	;RP1=0, select bank1
  1605  052F  0861               	movf	_SEL^(0+128),w	;volatile
  1606                           
  1607                           ; Switch size 1, requested type "space"
  1608                           ; Number of cases is 2, Range of values is 0 to 1
  1609                           ; switch strategies available:
  1610                           ; Name         Instructions Cycles
  1611                           ; simple_byte            7     4 (average)
  1612                           ; direct_byte           14     8 (fixed)
  1613                           ; jumptable            260     6 (fixed)
  1614                           ;	Chosen strategy is simple_byte
  1615  0530  3A00               	xorlw	0	; case 0
  1616  0531  1903               	skipnz
  1617  0532  2C9D               	goto	l3059
  1618  0533  3A01               	xorlw	1	; case 1
  1619  0534  1903               	skipnz
  1620  0535  2CE5               	goto	l3069
  1621  0536  2DF0               	goto	l3009
  1622                           
  1623                           ;main.c: 110: break;
  1624  0537  2DF0               	goto	l3009
  1625  0538                     l3083:	
  1626                           ;main.c: 111: case SET_TIME_END:
  1627                           
  1628                           
  1629                           ;main.c: 112: setCursor(0, 0);
  1630  0538  1283               	bcf	3,5	;RP0=0, select bank0
  1631  0539  1303               	bcf	3,6	;RP1=0, select bank0
  1632  053A  01A2               	clrf	setCursor@column
  1633  053B  3000               	movlw	0
  1634  053C  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1635                           
  1636                           ;main.c: 113: printToLCD("Set SCHED - END");
  1637  0541  3068               	movlw	low (STR_28| (0+32768))
  1638  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1639  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1640  0544  00A2               	movwf	printToLCD@str
  1641  0545  3090               	movlw	high (STR_28| (0+32768))
  1642  0546  00A3               	movwf	printToLCD@str+1
  1643  0547  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1644                           
  1645                           ;main.c: 114: setCursor(1, 0);
  1646  054C  1283               	bcf	3,5	;RP0=0, select bank0
  1647  054D  1303               	bcf	3,6	;RP1=0, select bank0
  1648  054E  01A2               	clrf	setCursor@column
  1649  054F  3001               	movlw	1
  1650  0550  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1651                           
  1652                           ;main.c: 115: switch (SEL)
  1653  0555  2DE6               	goto	l3111
  1654  0556                     l3089:	
  1655                           ;main.c: 116: {
  1656                           ;main.c: 117: case 0:
  1657                           
  1658                           
  1659                           ;main.c: 118: printToLCD("END HOURS");
  1660  0556  30B8               	movlw	low (STR_29| (0+32768))
  1661  0557  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0558  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0559  00A2               	movwf	printToLCD@str
  1664  055A  3090               	movlw	high (STR_29| (0+32768))
  1665  055B  00A3               	movwf	printToLCD@str+1
  1666  055C  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1667                           
  1668                           ;main.c: 119: setCursor(3, 0);
  1669  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0563  01A2               	clrf	setCursor@column
  1672  0564  3003               	movlw	3
  1673  0565  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1674                           
  1675                           ;main.c: 120: sprintf(buffer, "END: %02d:%02d", savedHoursEnd, savedMinutesEnd);
  1676  056A  3088               	movlw	low (STR_30| (0+32768))
  1677  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1678  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1679  056D  00AE               	movwf	sprintf@f
  1680  056E  3090               	movlw	high (STR_30| (0+32768))
  1681  056F  00AF               	movwf	sprintf@f+1
  1682  0570  0867               	movf	_savedHoursEnd,w	;volatile
  1683  0571  00DD               	movwf	??_main
  1684  0572  01DE               	clrf	??_main+1
  1685  0573  085D               	movf	??_main,w
  1686  0574  00B0               	movwf	?_sprintf+2
  1687  0575  085E               	movf	??_main+1,w
  1688  0576  00B1               	movwf	?_sprintf+3
  1689  0577  0869               	movf	_savedMinutesEnd,w	;volatile
  1690  0578  00DF               	movwf	??_main+2
  1691  0579  01E0               	clrf	??_main+3
  1692  057A  085F               	movf	??_main+2,w
  1693  057B  00B2               	movwf	?_sprintf+4
  1694  057C  0860               	movf	??_main+3,w
  1695  057D  00B3               	movwf	?_sprintf+5
  1696  057E  30C7               	movlw	main@buffer& (0+255)
  1697  057F  120A  158A  2601  120A  118A  	fcall	_sprintf
  1698                           
  1699                           ;main.c: 121: printToLCD(buffer);
  1700  0584  30C7               	movlw	main@buffer& (0+255)
  1701  0585  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0586  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0587  00A2               	movwf	printToLCD@str
  1704  0588  3000               	movlw	0
  1705  0589  00A3               	movwf	printToLCD@str+1
  1706  058A  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1707                           
  1708                           ;main.c: 122: setCursor(2, 0);
  1709  058F  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0590  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0591  01A2               	clrf	setCursor@column
  1712  0592  3002               	movlw	2
  1713  0593  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1714                           
  1715                           ;main.c: 123: setHoursEnd();
  1716  0598  120A  158A  2018  120A  118A  	fcall	_setHoursEnd
  1717                           
  1718                           ;main.c: 124: break;
  1719  059D  2DF0               	goto	l3009
  1720  059E                     l3099:	
  1721                           ;main.c: 125: case 1:
  1722                           
  1723                           
  1724                           ;main.c: 126: printToLCD("END MINS");
  1725  059E  30E9               	movlw	low (STR_31| (0+32768))
  1726  059F  1283               	bcf	3,5	;RP0=0, select bank0
  1727  05A0  1303               	bcf	3,6	;RP1=0, select bank0
  1728  05A1  00A2               	movwf	printToLCD@str
  1729  05A2  3090               	movlw	high (STR_31| (0+32768))
  1730  05A3  00A3               	movwf	printToLCD@str+1
  1731  05A4  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1732                           
  1733                           ;main.c: 127: setCursor(3, 0);
  1734  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  1735  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  1736  05AB  01A2               	clrf	setCursor@column
  1737  05AC  3003               	movlw	3
  1738  05AD  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1739                           
  1740                           ;main.c: 128: sprintf(buffer, "END: %02d:%02d", savedHoursEnd, savedMinutesEnd);
  1741  05B2  3088               	movlw	low (STR_30| (0+32768))
  1742  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  1743  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  1744  05B5  00AE               	movwf	sprintf@f
  1745  05B6  3090               	movlw	high (STR_30| (0+32768))
  1746  05B7  00AF               	movwf	sprintf@f+1
  1747  05B8  0867               	movf	_savedHoursEnd,w	;volatile
  1748  05B9  00DD               	movwf	??_main
  1749  05BA  01DE               	clrf	??_main+1
  1750  05BB  085D               	movf	??_main,w
  1751  05BC  00B0               	movwf	?_sprintf+2
  1752  05BD  085E               	movf	??_main+1,w
  1753  05BE  00B1               	movwf	?_sprintf+3
  1754  05BF  0869               	movf	_savedMinutesEnd,w	;volatile
  1755  05C0  00DF               	movwf	??_main+2
  1756  05C1  01E0               	clrf	??_main+3
  1757  05C2  085F               	movf	??_main+2,w
  1758  05C3  00B2               	movwf	?_sprintf+4
  1759  05C4  0860               	movf	??_main+3,w
  1760  05C5  00B3               	movwf	?_sprintf+5
  1761  05C6  30C7               	movlw	main@buffer& (0+255)
  1762  05C7  120A  158A  2601  120A  118A  	fcall	_sprintf
  1763                           
  1764                           ;main.c: 129: printToLCD(buffer);
  1765  05CC  30C7               	movlw	main@buffer& (0+255)
  1766  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  1767  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  1768  05CF  00A2               	movwf	printToLCD@str
  1769  05D0  3000               	movlw	0
  1770  05D1  00A3               	movwf	printToLCD@str+1
  1771  05D2  160A  118A  2389  120A  118A  	fcall	_printToLCD
  1772                           
  1773                           ;main.c: 130: setCursor(2, 0);
  1774  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1775  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  1776  05D9  01A2               	clrf	setCursor@column
  1777  05DA  3002               	movlw	2
  1778  05DB  160A  118A  23FA  120A  118A  	fcall	_setCursor
  1779                           
  1780                           ;main.c: 131: setMinutesEnd();
  1781  05E0  120A  158A  216A  120A  118A  	fcall	_setMinutesEnd
  1782                           
  1783                           ;main.c: 135: }
  1784                           
  1785                           ;main.c: 134: break;
  1786                           
  1787                           ;main.c: 133: default:
  1788                           
  1789                           ;main.c: 132: break;
  1790  05E5  2DF0               	goto	l3009
  1791  05E6                     l3111:	
  1792  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  1793  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  1794  05E8  0861               	movf	_SEL^(0+128),w	;volatile
  1795                           
  1796                           ; Switch size 1, requested type "space"
  1797                           ; Number of cases is 2, Range of values is 0 to 1
  1798                           ; switch strategies available:
  1799                           ; Name         Instructions Cycles
  1800                           ; simple_byte            7     4 (average)
  1801                           ; direct_byte           14     8 (fixed)
  1802                           ; jumptable            260     6 (fixed)
  1803                           ;	Chosen strategy is simple_byte
  1804  05E9  3A00               	xorlw	0	; case 0
  1805  05EA  1903               	skipnz
  1806  05EB  2D56               	goto	l3089
  1807  05EC  3A01               	xorlw	1	; case 1
  1808  05ED  1903               	skipnz
  1809  05EE  2D9E               	goto	l3099
  1810  05EF  2DF0               	goto	l3009
  1811  05F0                     l3009:	
  1812                           ;main.c: 40: while (1)
  1813                           
  1814                           ;main.c: 139: }
  1815                           
  1816                           ;main.c: 138: break;
  1817                           
  1818                           ;main.c: 137: default:
  1819                           
  1820                           ;main.c: 136: break;
  1821                           
  1822                           
  1823                           ;main.c: 41: {
  1824                           ;main.c: 43: GIE = 0;
  1825  05F0  138B               	bcf	11,7	;volatile
  1826                           
  1827                           ;main.c: 44: PEIE = 0;
  1828  05F1  130B               	bcf	11,6	;volatile
  1829                           
  1830                           ;main.c: 46: if (mode == STAT && SEL == 0)
  1831  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  1832  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  1833  05F4  08E2               	movf	_mode^(0+128),f
  1834  05F5  1D03               	skipz
  1835  05F6  2DFF               	goto	l3019
  1836  05F7  08E1               	movf	_SEL^(0+128),f	;volatile
  1837  05F8  1D03               	skipz
  1838  05F9  2DFF               	goto	l3019
  1839                           
  1840                           ;main.c: 47: {
  1841                           ;main.c: 48: runDHT11();
  1842  05FA  160A  118A  24E1  120A  118A  	fcall	_runDHT11
  1843  05FF                     l3019:	
  1844                           
  1845                           ;main.c: 49: }
  1846                           ;main.c: 51: runMQ135();
  1847  05FF  160A  118A  2340  120A  118A  	fcall	_runMQ135
  1848                           
  1849                           ;main.c: 52: runClock();
  1850  0604  160A  118A  22DF  120A  118A  	fcall	_runClock
  1851                           
  1852                           ;main.c: 54: GIE = 1;
  1853  0609  178B               	bsf	11,7	;volatile
  1854                           
  1855                           ;main.c: 55: PEIE = 1;
  1856  060A  170B               	bsf	11,6	;volatile
  1857                           
  1858                           ;main.c: 57: checkMode();
  1859  060B  160A  118A  22FC  120A  118A  	fcall	_checkMode
  1860                           
  1861                           ;main.c: 58: checkSEL();
  1862  0610  160A  118A  2477  120A  118A  	fcall	_checkSEL
  1863                           
  1864                           ;main.c: 59: checkTime();
  1865  0615  160A  118A  2687  120A  118A  	fcall	_checkTime
  1866                           
  1867                           ;main.c: 60: handlePPM();
  1868  061A  160A  118A  244B  120A  118A  	fcall	_handlePPM
  1869                           
  1870                           ;main.c: 61: activateHumidifier();
  1871  061F  160A  118A  22B2  120A  118A  	fcall	_activateHumidifier
  1872  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1873  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1874  0626  0862               	movf	_mode^(0+128),w
  1875                           
  1876                           ; Switch size 1, requested type "space"
  1877                           ; Number of cases is 3, Range of values is 0 to 2
  1878                           ; switch strategies available:
  1879                           ; Name         Instructions Cycles
  1880                           ; simple_byte           10     6 (average)
  1881                           ; direct_byte           17     8 (fixed)
  1882                           ; jumptable            260     6 (fixed)
  1883                           ;	Chosen strategy is simple_byte
  1884  0627  3A00               	xorlw	0	; case 0
  1885  0628  1903               	skipnz
  1886  0629  2C74               	goto	l3051
  1887  062A  3A01               	xorlw	1	; case 1
  1888  062B  1903               	skipnz
  1889  062C  2C7F               	goto	l3053
  1890  062D  3A03               	xorlw	3	; case 2
  1891  062E  1903               	skipnz
  1892  062F  2D38               	goto	l3083
  1893  0630  2DF0               	goto	l3009
  1894  0631  2DF0               	goto	l3009
  1895  0632                     __end_of_main:	
  1896                           
  1897                           	psect	text1
  1898  155A                     __ptext1:	
  1899 ;; *************** function _startUpSequence *****************
  1900 ;; Defined at:
  1901 ;;		line 178 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;		None
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;		None
  1906 ;; Return value:  Size  Location     Type
  1907 ;;		None               void
  1908 ;; Registers used:
  1909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1910 ;; Tracked objects:
  1911 ;;		On entry : 0/0
  1912 ;;		On exit  : 0/0
  1913 ;;		Unchanged: 0/0
  1914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1915 ;;      Params:         0       0       0       0       0
  1916 ;;      Locals:         0       0       0       0       0
  1917 ;;      Temps:          0       3       0       0       0
  1918 ;;      Totals:         0       3       0       0       0
  1919 ;;Total ram usage:        3 bytes
  1920 ;; Hardware stack levels used:    1
  1921 ;; Hardware stack levels required when called:    4
  1922 ;; This function calls:
  1923 ;;		_initDHT11
  1924 ;;		_initLCD
  1925 ;;		_instCTRL
  1926 ;;		_printToLCD
  1927 ;;		_setCursor
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _startUpSequence
  1935  155A                     _startUpSequence:	
  1936                           
  1937                           ;main.c: 181: initLCD();
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in _startUpSequence: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1941  155A  160A  118A  2637  160A  118A  	fcall	_initLCD
  1942                           
  1943                           ;main.c: 182: _delay((unsigned long)((500)*(4000000/4000.0)));
  1944  155F  3003               	movlw	3
  1945  1560  1283               	bcf	3,5	;RP0=0, select bank0
  1946  1561  1303               	bcf	3,6	;RP1=0, select bank0
  1947  1562  00A8               	movwf	??_startUpSequence+2
  1948  1563  308A               	movlw	138
  1949  1564  00A7               	movwf	??_startUpSequence+1
  1950  1565  3056               	movlw	86
  1951  1566  00A6               	movwf	??_startUpSequence
  1952  1567                     u4277:	
  1953  1567  0BA6               	decfsz	??_startUpSequence,f
  1954  1568  2D67               	goto	u4277
  1955  1569  0BA7               	decfsz	??_startUpSequence+1,f
  1956  156A  2D67               	goto	u4277
  1957  156B  0BA8               	decfsz	??_startUpSequence+2,f
  1958  156C  2D67               	goto	u4277
  1959  156D  2D6E               	nop2
  1960                           
  1961                           ;main.c: 183: setCursor(0, 0);
  1962  156E  1283               	bcf	3,5	;RP0=0, select bank0
  1963  156F  1303               	bcf	3,6	;RP1=0, select bank0
  1964  1570  01A2               	clrf	setCursor@column
  1965  1571  3000               	movlw	0
  1966  1572  160A  118A  23FA  160A  118A  	fcall	_setCursor
  1967                           
  1968                           ;main.c: 184: printToLCD("Initializing...");
  1969  1577  3058               	movlw	low (STR_33| (0+32768))
  1970  1578  1283               	bcf	3,5	;RP0=0, select bank0
  1971  1579  1303               	bcf	3,6	;RP1=0, select bank0
  1972  157A  00A2               	movwf	printToLCD@str
  1973  157B  3090               	movlw	high (STR_33| (0+32768))
  1974  157C  00A3               	movwf	printToLCD@str+1
  1975  157D  160A  118A  2389  160A  118A  	fcall	_printToLCD
  1976                           
  1977                           ;main.c: 186: initDHT11();
  1978  1582  160A  118A  2288  160A  118A  	fcall	_initDHT11
  1979                           
  1980                           ;main.c: 187: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1981  1587  300B               	movlw	11
  1982  1588  1283               	bcf	3,5	;RP0=0, select bank0
  1983  1589  1303               	bcf	3,6	;RP1=0, select bank0
  1984  158A  00A8               	movwf	??_startUpSequence+2
  1985  158B  3026               	movlw	38
  1986  158C  00A7               	movwf	??_startUpSequence+1
  1987  158D  3066               	movlw	102
  1988  158E  00A6               	movwf	??_startUpSequence
  1989  158F                     u4287:	
  1990  158F  0BA6               	decfsz	??_startUpSequence,f
  1991  1590  2D8F               	goto	u4287
  1992  1591  0BA7               	decfsz	??_startUpSequence+1,f
  1993  1592  2D8F               	goto	u4287
  1994  1593  0BA8               	decfsz	??_startUpSequence+2,f
  1995  1594  2D8F               	goto	u4287
  1996  1595  2D96               	nop2
  1997                           
  1998                           ;main.c: 188: instCTRL(0x01);
  1999  1596  3001               	movlw	1
  2000  1597  120A  158A  2005   	fcall	_instCTRL
  2001  159A  0008               	return
  2002  159B                     __end_of_startUpSequence:	
  2003                           
  2004                           	psect	text2
  2005  1637                     __ptext2:	
  2006 ;; *************** function _initLCD *****************
  2007 ;; Defined at:
  2008 ;;		line 43 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;		None               void
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0, pclath, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2022 ;;      Params:         0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0
  2024 ;;      Temps:          0       2       0       0       0
  2025 ;;      Totals:         0       2       0       0       0
  2026 ;;Total ram usage:        2 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    3
  2029 ;; This function calls:
  2030 ;;		_instCTRL
  2031 ;; This function is called by:
  2032 ;;		_startUpSequence
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           
  2037                           ;psect for function _initLCD
  2038  1637                     _initLCD:	
  2039                           
  2040                           ;lcd_functions.h: 45: _delay((unsigned long)((20)*(4000000/4000.0)));
  2041                           
  2042                           ;incstack = 0
  2043                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  2044  1637  301A               	movlw	26
  2045  1638  1283               	bcf	3,5	;RP0=0, select bank0
  2046  1639  1303               	bcf	3,6	;RP1=0, select bank0
  2047  163A  00A3               	movwf	??_initLCD+1
  2048  163B  30F8               	movlw	248
  2049  163C  00A2               	movwf	??_initLCD
  2050  163D                     u4297:	
  2051  163D  0BA2               	decfsz	??_initLCD,f
  2052  163E  2E3D               	goto	u4297
  2053  163F  0BA3               	decfsz	??_initLCD+1,f
  2054  1640  2E3D               	goto	u4297
  2055  1641  0000               	nop
  2056                           
  2057                           ;lcd_functions.h: 46: instCTRL(0x30);
  2058  1642  3030               	movlw	48
  2059  1643  120A  158A  2005  160A  118A  	fcall	_instCTRL
  2060                           
  2061                           ;lcd_functions.h: 47: _delay((unsigned long)((5)*(4000000/4000.0)));
  2062  1648  3007               	movlw	7
  2063  1649  1283               	bcf	3,5	;RP0=0, select bank0
  2064  164A  1303               	bcf	3,6	;RP1=0, select bank0
  2065  164B  00A3               	movwf	??_initLCD+1
  2066  164C  307D               	movlw	125
  2067  164D  00A2               	movwf	??_initLCD
  2068  164E                     u4307:	
  2069  164E  0BA2               	decfsz	??_initLCD,f
  2070  164F  2E4E               	goto	u4307
  2071  1650  0BA3               	decfsz	??_initLCD+1,f
  2072  1651  2E4E               	goto	u4307
  2073                           
  2074                           ;lcd_functions.h: 48: instCTRL(0x30);
  2075  1652  3030               	movlw	48
  2076  1653  120A  158A  2005  160A  118A  	fcall	_instCTRL
  2077                           
  2078                           ;lcd_functions.h: 49: _delay((unsigned long)((200)*(4000000/4000000.0)));
  2079  1658  3042               	movlw	66
  2080  1659  1283               	bcf	3,5	;RP0=0, select bank0
  2081  165A  1303               	bcf	3,6	;RP1=0, select bank0
  2082  165B  00A2               	movwf	??_initLCD
  2083  165C                     u4317:	
  2084  165C  0BA2               	decfsz	??_initLCD,f
  2085  165D  2E5C               	goto	u4317
  2086  165E  0000               	nop
  2087                           
  2088                           ;lcd_functions.h: 50: instCTRL(0x30);
  2089  165F  3030               	movlw	48
  2090  1660  120A  158A  2005  160A  118A  	fcall	_instCTRL
  2091                           
  2092                           ;lcd_functions.h: 52: instCTRL(0x38);
  2093  1665  3038               	movlw	56
  2094  1666  120A  158A  2005  160A  118A  	fcall	_instCTRL
  2095                           
  2096                           ;lcd_functions.h: 53: instCTRL(0x0C);
  2097  166B  300C               	movlw	12
  2098  166C  120A  158A  2005  160A  118A  	fcall	_instCTRL
  2099                           
  2100                           ;lcd_functions.h: 54: instCTRL(0x01);
  2101  1671  3001               	movlw	1
  2102  1672  120A  158A  2005  160A  118A  	fcall	_instCTRL
  2103                           
  2104                           ;lcd_functions.h: 55: _delay((unsigned long)((2)*(4000000/4000.0)));
  2105  1677  3003               	movlw	3
  2106  1678  1283               	bcf	3,5	;RP0=0, select bank0
  2107  1679  1303               	bcf	3,6	;RP1=0, select bank0
  2108  167A  00A3               	movwf	??_initLCD+1
  2109  167B  3097               	movlw	151
  2110  167C  00A2               	movwf	??_initLCD
  2111  167D                     u4327:	
  2112  167D  0BA2               	decfsz	??_initLCD,f
  2113  167E  2E7D               	goto	u4327
  2114  167F  0BA3               	decfsz	??_initLCD+1,f
  2115  1680  2E7D               	goto	u4327
  2116  1681  2E82               	nop2
  2117                           
  2118                           ;lcd_functions.h: 56: instCTRL(0x06);
  2119  1682  3006               	movlw	6
  2120  1683  120A  158A  2005   	fcall	_instCTRL
  2121  1686  0008               	return
  2122  1687                     __end_of_initLCD:	
  2123                           
  2124                           	psect	text3
  2125  1288                     __ptext3:	
  2126 ;; *************** function _initDHT11 *****************
  2127 ;; Defined at:
  2128 ;;		line 22 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;		None               void
  2135 ;; Registers used:
  2136 ;;		None
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2142 ;;      Params:         0       0       0       0       0
  2143 ;;      Locals:         0       0       0       0       0
  2144 ;;      Temps:          0       0       0       0       0
  2145 ;;      Totals:         0       0       0       0       0
  2146 ;;Total ram usage:        0 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    2
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_startUpSequence
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _initDHT11
  2158  1288                     _initDHT11:	
  2159                           
  2160                           ;dht11_module.h: 24: TRISBbits.TRISB2 = 0;
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _initDHT11: []
  2164  1288  1683               	bsf	3,5	;RP0=1, select bank1
  2165  1289  1303               	bcf	3,6	;RP1=0, select bank1
  2166  128A  1106               	bcf	6,2	;volatile
  2167                           
  2168                           ;dht11_module.h: 25: PORTBbits.RB2 = 1;
  2169  128B  1283               	bcf	3,5	;RP0=0, select bank0
  2170  128C  1303               	bcf	3,6	;RP1=0, select bank0
  2171  128D  1506               	bsf	6,2	;volatile
  2172  128E  0008               	return
  2173  128F                     __end_of_initDHT11:	
  2174                           
  2175                           	psect	text4
  2176  0A13                     __ptext4:	
  2177 ;; *************** function _setMinutesStart *****************
  2178 ;; Defined at:
  2179 ;;		line 133 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler
      +.h"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;		None
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;		None
  2184 ;; Return value:  Size  Location     Type
  2185 ;;		None               void
  2186 ;; Registers used:
  2187 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2193 ;;      Params:         0       0       0       0       0
  2194 ;;      Locals:         0       0       0       0       0
  2195 ;;      Temps:          0       2       0       0       0
  2196 ;;      Totals:         0       2       0       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used:    1
  2199 ;; Hardware stack levels required when called:    4
  2200 ;; This function calls:
  2201 ;;		___awmod
  2202 ;;		_printToLCD
  2203 ;;		_sprintf
  2204 ;; This function is called by:
  2205 ;;		_main
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           
  2210                           ;psect for function _setMinutesStart
  2211  0A13                     _setMinutesStart:	
  2212                           
  2213                           ;time_scheduler.h: 135: keyValid = (PORTB & 0x08) >> 3;
  2214                           
  2215                           ;incstack = 0
  2216                           ; Regs used in _setMinutesStart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2217  0A13  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0A14  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0A15  0806               	movf	6,w	;volatile
  2220  0A16  00C8               	movwf	??_setMinutesStart
  2221  0A17  3003               	movlw	3
  2222  0A18                     u3745:	
  2223  0A18  1003               	clrc
  2224  0A19  0CC8               	rrf	??_setMinutesStart,f
  2225  0A1A  3EFF               	addlw	-1
  2226  0A1B  1D03               	skipz
  2227  0A1C  2A18               	goto	u3745
  2228  0A1D  0848               	movf	??_setMinutesStart,w
  2229  0A1E  3901               	andlw	1
  2230  0A1F  00C9               	movwf	??_setMinutesStart+1
  2231  0A20  0849               	movf	??_setMinutesStart+1,w
  2232  0A21  00EC               	movwf	_keyValid
  2233                           
  2234                           ;time_scheduler.h: 136: key = (PORTB & 0xF0) >> 4;
  2235  0A22  0806               	movf	6,w	;volatile
  2236  0A23  00C8               	movwf	??_setMinutesStart
  2237  0A24  3004               	movlw	4
  2238  0A25                     u3755:	
  2239  0A25  1003               	clrc
  2240  0A26  0CC8               	rrf	??_setMinutesStart,f
  2241  0A27  3EFF               	addlw	-1
  2242  0A28  1D03               	skipz
  2243  0A29  2A25               	goto	u3755
  2244  0A2A  0848               	movf	??_setMinutesStart,w
  2245  0A2B  390F               	andlw	15
  2246  0A2C  00C9               	movwf	??_setMinutesStart+1
  2247  0A2D  0849               	movf	??_setMinutesStart+1,w
  2248  0A2E  00EB               	movwf	_key
  2249                           
  2250                           ;time_scheduler.h: 138: _delay((unsigned long)((50)*(4000000/4000.0)));
  2251  0A2F  3041               	movlw	65
  2252  0A30  00C9               	movwf	??_setMinutesStart+1
  2253  0A31  30EE               	movlw	238
  2254  0A32  00C8               	movwf	??_setMinutesStart
  2255  0A33                     u4337:	
  2256  0A33  0BC8               	decfsz	??_setMinutesStart,f
  2257  0A34  2A33               	goto	u4337
  2258  0A35  0BC9               	decfsz	??_setMinutesStart+1,f
  2259  0A36  2A33               	goto	u4337
  2260  0A37  0000               	nop
  2261                           
  2262                           ;time_scheduler.h: 140: if (keyValid && key != lastKeyState)
  2263  0A38  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0A39  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0A3A  086C               	movf	_keyValid,w
  2266  0A3B  1903               	btfsc	3,2
  2267  0A3C  2AB4               	goto	l2835
  2268  0A3D  086B               	movf	_key,w
  2269  0A3E  0666               	xorwf	_lastKeyState,w
  2270  0A3F  1903               	skipnz
  2271  0A40  2AB4               	goto	l2835
  2272                           
  2273                           ;time_scheduler.h: 141: {
  2274                           ;time_scheduler.h: 142: if (key == 0b00000000)
  2275  0A41  08EB               	movf	_key,f
  2276  0A42  1D03               	skipz
  2277  0A43  2A5E               	goto	l2819
  2278                           
  2279                           ;time_scheduler.h: 143: {
  2280                           ;time_scheduler.h: 144: savedMinutesStart = (savedMinutesStart + 5) % 60;
  2281  0A44  303C               	movlw	60
  2282  0A45  00A0               	movwf	___awmod@divisor
  2283  0A46  3000               	movlw	0
  2284  0A47  00A1               	movwf	___awmod@divisor+1
  2285  0A48  086A               	movf	_savedMinutesStart,w	;volatile
  2286  0A49  3E05               	addlw	5
  2287  0A4A  00A2               	movwf	___awmod@dividend
  2288  0A4B  3000               	movlw	0
  2289  0A4C  1803               	skipnc
  2290  0A4D  3001               	movlw	1
  2291  0A4E  00A3               	movwf	___awmod@dividend+1
  2292  0A4F  160A  118A  25E8  120A  158A  	fcall	___awmod
  2293  0A54  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0A55  1303               	bcf	3,6	;RP1=0, select bank0
  2295  0A56  0820               	movf	?___awmod,w
  2296  0A57  00C8               	movwf	??_setMinutesStart
  2297  0A58  0848               	movf	??_setMinutesStart,w
  2298  0A59  00EA               	movwf	_savedMinutesStart	;volatile
  2299                           
  2300                           ;time_scheduler.h: 145: sprintf(debugInfo, "INC: %02d", savedMinutesStart);
  2301  0A5A  30CC               	movlw	low (STR_10| (0+32768))
  2302  0A5B  00AE               	movwf	sprintf@f
  2303  0A5C  3090               	movlw	high (STR_10| (0+32768))
  2304  0A5D  2A87               	goto	L1
  2305  0A5E                     l2819:	
  2306                           ;time_scheduler.h: 146: }
  2307                           
  2308                           
  2309                           ;time_scheduler.h: 147: else if (key == 0b00001100)
  2310  0A5E  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0A5F  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0A60  086B               	movf	_key,w
  2313  0A61  3A0C               	xorlw	12
  2314  0A62  1D03               	skipz
  2315  0A63  2A7E               	goto	l2825
  2316                           
  2317                           ;time_scheduler.h: 148: {
  2318                           ;time_scheduler.h: 149: savedMinutesStart = (savedMinutesStart - 5 + 60) % 60;
  2319  0A64  303C               	movlw	60
  2320  0A65  00A0               	movwf	___awmod@divisor
  2321  0A66  3000               	movlw	0
  2322  0A67  00A1               	movwf	___awmod@divisor+1
  2323  0A68  086A               	movf	_savedMinutesStart,w	;volatile
  2324  0A69  3E37               	addlw	55
  2325  0A6A  00A2               	movwf	___awmod@dividend
  2326  0A6B  3000               	movlw	0
  2327  0A6C  1803               	skipnc
  2328  0A6D  3001               	movlw	1
  2329  0A6E  00A3               	movwf	___awmod@dividend+1
  2330  0A6F  160A  118A  25E8  120A  158A  	fcall	___awmod
  2331  0A74  1283               	bcf	3,5	;RP0=0, select bank0
  2332  0A75  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0A76  0820               	movf	?___awmod,w
  2334  0A77  00C8               	movwf	??_setMinutesStart
  2335  0A78  0848               	movf	??_setMinutesStart,w
  2336  0A79  00EA               	movwf	_savedMinutesStart	;volatile
  2337                           
  2338                           ;time_scheduler.h: 150: sprintf(debugInfo, "DEC: %02d", savedMinutesStart);
  2339  0A7A  30C2               	movlw	low (STR_11| (0+32768))
  2340  0A7B  00AE               	movwf	sprintf@f
  2341  0A7C  3090               	movlw	high (STR_11| (0+32768))
  2342  0A7D  2A87               	goto	L1
  2343  0A7E                     l2825:	
  2344                           ;time_scheduler.h: 151: }
  2345                           
  2346                           
  2347                           ;time_scheduler.h: 152: else if (key == 0b00001101)
  2348  0A7E  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0A7F  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0A80  086B               	movf	_key,w
  2351  0A81  3A0D               	xorlw	13
  2352  0A82  1D03               	skipz
  2353  0A83  2A95               	goto	l222
  2354                           
  2355                           ;time_scheduler.h: 153: {
  2356                           ;time_scheduler.h: 154: sprintf(debugInfo, "SET: %02d", savedMinutesStart);
  2357  0A84  30D6               	movlw	low (STR_12| (0+32768))
  2358  0A85  00AE               	movwf	sprintf@f
  2359  0A86  3090               	movlw	high (STR_12| (0+32768))
  2360  0A87                     L1:	
  2361  0A87  00AF               	movwf	sprintf@f+1
  2362  0A88  086A               	movf	_savedMinutesStart,w	;volatile
  2363  0A89  00C8               	movwf	??_setMinutesStart
  2364  0A8A  01C9               	clrf	??_setMinutesStart+1
  2365  0A8B  0848               	movf	??_setMinutesStart,w
  2366  0A8C  00B0               	movwf	?_sprintf+2
  2367  0A8D  0849               	movf	??_setMinutesStart+1,w
  2368  0A8E  00B1               	movwf	?_sprintf+3
  2369  0A8F  30E3               	movlw	_debugInfo& (0+255)
  2370  0A90  120A  158A  2601  120A  158A  	fcall	_sprintf
  2371  0A95                     l222:	
  2372                           
  2373                           ;time_scheduler.h: 155: }
  2374                           ;time_scheduler.h: 157: printToLCD(debugInfo);
  2375  0A95  30E3               	movlw	_debugInfo& (0+255)
  2376  0A96  1283               	bcf	3,5	;RP0=0, select bank0
  2377  0A97  1303               	bcf	3,6	;RP1=0, select bank0
  2378  0A98  00A2               	movwf	printToLCD@str
  2379  0A99  3000               	movlw	0
  2380  0A9A  00A3               	movwf	printToLCD@str+1
  2381  0A9B  160A  118A  2389  120A  158A  	fcall	_printToLCD
  2382                           
  2383                           ;time_scheduler.h: 158: lastKeyState = key;
  2384  0AA0  1283               	bcf	3,5	;RP0=0, select bank0
  2385  0AA1  1303               	bcf	3,6	;RP1=0, select bank0
  2386  0AA2  086B               	movf	_key,w
  2387  0AA3  00C8               	movwf	??_setMinutesStart
  2388  0AA4  0848               	movf	??_setMinutesStart,w
  2389  0AA5  00E6               	movwf	_lastKeyState
  2390  0AA6                     l2833:	
  2391                           ;time_scheduler.h: 160: while ((PORTB & 0x08) != 0)
  2392                           
  2393  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  2394  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  2395  0AA8  1D86               	btfss	6,3	;volatile
  2396  0AA9  0008               	return
  2397                           
  2398                           ;time_scheduler.h: 161: {
  2399                           ;time_scheduler.h: 162: _delay((unsigned long)((10)*(4000000/4000.0)));
  2400  0AAA  300D               	movlw	13
  2401  0AAB  00C9               	movwf	??_setMinutesStart+1
  2402  0AAC  30FB               	movlw	251
  2403  0AAD  00C8               	movwf	??_setMinutesStart
  2404  0AAE                     u4347:	
  2405  0AAE  0BC8               	decfsz	??_setMinutesStart,f
  2406  0AAF  2AAE               	goto	u4347
  2407  0AB0  0BC9               	decfsz	??_setMinutesStart+1,f
  2408  0AB1  2AAE               	goto	u4347
  2409  0AB2  2AB3               	nop2
  2410  0AB3  2AA6               	goto	l2833
  2411  0AB4                     l2835:	
  2412                           ;time_scheduler.h: 163: }
  2413                           ;time_scheduler.h: 164: }
  2414                           
  2415                           
  2416                           ;time_scheduler.h: 165: else if (!keyValid)
  2417  0AB4  08EC               	movf	_keyValid,f
  2418  0AB5  1D03               	skipz
  2419  0AB6  0008               	return
  2420                           
  2421                           ;time_scheduler.h: 166: {
  2422                           ;time_scheduler.h: 167: lastKeyState = 0xFF;
  2423  0AB7  30FF               	movlw	255
  2424  0AB8  00C8               	movwf	??_setMinutesStart
  2425  0AB9  0848               	movf	??_setMinutesStart,w
  2426  0ABA  00E6               	movwf	_lastKeyState
  2427  0ABB  0008               	return
  2428  0ABC                     __end_of_setMinutesStart:	
  2429                           
  2430                           	psect	text5
  2431  096A                     __ptext5:	
  2432 ;; *************** function _setMinutesEnd *****************
  2433 ;; Defined at:
  2434 ;;		line 171 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler
      +.h"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;		None
  2439 ;; Return value:  Size  Location     Type
  2440 ;;		None               void
  2441 ;; Registers used:
  2442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2448 ;;      Params:         0       0       0       0       0
  2449 ;;      Locals:         0       0       0       0       0
  2450 ;;      Temps:          0       2       0       0       0
  2451 ;;      Totals:         0       2       0       0       0
  2452 ;;Total ram usage:        2 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    4
  2455 ;; This function calls:
  2456 ;;		___awmod
  2457 ;;		_printToLCD
  2458 ;;		_sprintf
  2459 ;; This function is called by:
  2460 ;;		_main
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           
  2465                           ;psect for function _setMinutesEnd
  2466  096A                     _setMinutesEnd:	
  2467                           
  2468                           ;time_scheduler.h: 173: keyValid = (PORTB & 0x08) >> 3;
  2469                           
  2470                           ;incstack = 0
  2471                           ; Regs used in _setMinutesEnd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2472  096A  1283               	bcf	3,5	;RP0=0, select bank0
  2473  096B  1303               	bcf	3,6	;RP1=0, select bank0
  2474  096C  0806               	movf	6,w	;volatile
  2475  096D  00C8               	movwf	??_setMinutesEnd
  2476  096E  3003               	movlw	3
  2477  096F                     u3835:	
  2478  096F  1003               	clrc
  2479  0970  0CC8               	rrf	??_setMinutesEnd,f
  2480  0971  3EFF               	addlw	-1
  2481  0972  1D03               	skipz
  2482  0973  296F               	goto	u3835
  2483  0974  0848               	movf	??_setMinutesEnd,w
  2484  0975  3901               	andlw	1
  2485  0976  00C9               	movwf	??_setMinutesEnd+1
  2486  0977  0849               	movf	??_setMinutesEnd+1,w
  2487  0978  00EC               	movwf	_keyValid
  2488                           
  2489                           ;time_scheduler.h: 174: key = (PORTB & 0xF0) >> 4;
  2490  0979  0806               	movf	6,w	;volatile
  2491  097A  00C8               	movwf	??_setMinutesEnd
  2492  097B  3004               	movlw	4
  2493  097C                     u3845:	
  2494  097C  1003               	clrc
  2495  097D  0CC8               	rrf	??_setMinutesEnd,f
  2496  097E  3EFF               	addlw	-1
  2497  097F  1D03               	skipz
  2498  0980  297C               	goto	u3845
  2499  0981  0848               	movf	??_setMinutesEnd,w
  2500  0982  390F               	andlw	15
  2501  0983  00C9               	movwf	??_setMinutesEnd+1
  2502  0984  0849               	movf	??_setMinutesEnd+1,w
  2503  0985  00EB               	movwf	_key
  2504                           
  2505                           ;time_scheduler.h: 176: _delay((unsigned long)((50)*(4000000/4000.0)));
  2506  0986  3041               	movlw	65
  2507  0987  00C9               	movwf	??_setMinutesEnd+1
  2508  0988  30EE               	movlw	238
  2509  0989  00C8               	movwf	??_setMinutesEnd
  2510  098A                     u4357:	
  2511  098A  0BC8               	decfsz	??_setMinutesEnd,f
  2512  098B  298A               	goto	u4357
  2513  098C  0BC9               	decfsz	??_setMinutesEnd+1,f
  2514  098D  298A               	goto	u4357
  2515  098E  0000               	nop
  2516                           
  2517                           ;time_scheduler.h: 178: if (keyValid && key != lastKeyState)
  2518  098F  1283               	bcf	3,5	;RP0=0, select bank0
  2519  0990  1303               	bcf	3,6	;RP1=0, select bank0
  2520  0991  086C               	movf	_keyValid,w
  2521  0992  1903               	btfsc	3,2
  2522  0993  2A0B               	goto	l2869
  2523  0994  086B               	movf	_key,w
  2524  0995  0666               	xorwf	_lastKeyState,w
  2525  0996  1903               	skipnz
  2526  0997  2A0B               	goto	l2869
  2527                           
  2528                           ;time_scheduler.h: 179: {
  2529                           ;time_scheduler.h: 180: if (key == 0b00000000)
  2530  0998  08EB               	movf	_key,f
  2531  0999  1D03               	skipz
  2532  099A  29B5               	goto	l2853
  2533                           
  2534                           ;time_scheduler.h: 181: {
  2535                           ;time_scheduler.h: 182: savedMinutesEnd = (savedMinutesEnd + 5) % 60;
  2536  099B  303C               	movlw	60
  2537  099C  00A0               	movwf	___awmod@divisor
  2538  099D  3000               	movlw	0
  2539  099E  00A1               	movwf	___awmod@divisor+1
  2540  099F  0869               	movf	_savedMinutesEnd,w	;volatile
  2541  09A0  3E05               	addlw	5
  2542  09A1  00A2               	movwf	___awmod@dividend
  2543  09A2  3000               	movlw	0
  2544  09A3  1803               	skipnc
  2545  09A4  3001               	movlw	1
  2546  09A5  00A3               	movwf	___awmod@dividend+1
  2547  09A6  160A  118A  25E8  120A  158A  	fcall	___awmod
  2548  09AB  1283               	bcf	3,5	;RP0=0, select bank0
  2549  09AC  1303               	bcf	3,6	;RP1=0, select bank0
  2550  09AD  0820               	movf	?___awmod,w
  2551  09AE  00C8               	movwf	??_setMinutesEnd
  2552  09AF  0848               	movf	??_setMinutesEnd,w
  2553  09B0  00E9               	movwf	_savedMinutesEnd	;volatile
  2554                           
  2555                           ;time_scheduler.h: 183: sprintf(debugInfo, "INC: %02d", savedMinutesEnd);
  2556  09B1  30CC               	movlw	low (STR_10| (0+32768))
  2557  09B2  00AE               	movwf	sprintf@f
  2558  09B3  3090               	movlw	high (STR_10| (0+32768))
  2559  09B4  29DE               	goto	L2
  2560  09B5                     l2853:	
  2561                           ;time_scheduler.h: 184: }
  2562                           
  2563                           
  2564                           ;time_scheduler.h: 185: else if (key == 0b00001100)
  2565  09B5  1283               	bcf	3,5	;RP0=0, select bank0
  2566  09B6  1303               	bcf	3,6	;RP1=0, select bank0
  2567  09B7  086B               	movf	_key,w
  2568  09B8  3A0C               	xorlw	12
  2569  09B9  1D03               	skipz
  2570  09BA  29D5               	goto	l2859
  2571                           
  2572                           ;time_scheduler.h: 186: {
  2573                           ;time_scheduler.h: 187: savedMinutesEnd = (savedMinutesEnd - 5 + 60) % 60;
  2574  09BB  303C               	movlw	60
  2575  09BC  00A0               	movwf	___awmod@divisor
  2576  09BD  3000               	movlw	0
  2577  09BE  00A1               	movwf	___awmod@divisor+1
  2578  09BF  0869               	movf	_savedMinutesEnd,w	;volatile
  2579  09C0  3E37               	addlw	55
  2580  09C1  00A2               	movwf	___awmod@dividend
  2581  09C2  3000               	movlw	0
  2582  09C3  1803               	skipnc
  2583  09C4  3001               	movlw	1
  2584  09C5  00A3               	movwf	___awmod@dividend+1
  2585  09C6  160A  118A  25E8  120A  158A  	fcall	___awmod
  2586  09CB  1283               	bcf	3,5	;RP0=0, select bank0
  2587  09CC  1303               	bcf	3,6	;RP1=0, select bank0
  2588  09CD  0820               	movf	?___awmod,w
  2589  09CE  00C8               	movwf	??_setMinutesEnd
  2590  09CF  0848               	movf	??_setMinutesEnd,w
  2591  09D0  00E9               	movwf	_savedMinutesEnd	;volatile
  2592                           
  2593                           ;time_scheduler.h: 188: sprintf(debugInfo, "DEC: %02d", savedMinutesEnd);
  2594  09D1  30C2               	movlw	low (STR_11| (0+32768))
  2595  09D2  00AE               	movwf	sprintf@f
  2596  09D3  3090               	movlw	high (STR_11| (0+32768))
  2597  09D4  29DE               	goto	L2
  2598  09D5                     l2859:	
  2599                           ;time_scheduler.h: 189: }
  2600                           
  2601                           
  2602                           ;time_scheduler.h: 190: else if (key == 0b00001101)
  2603  09D5  1283               	bcf	3,5	;RP0=0, select bank0
  2604  09D6  1303               	bcf	3,6	;RP1=0, select bank0
  2605  09D7  086B               	movf	_key,w
  2606  09D8  3A0D               	xorlw	13
  2607  09D9  1D03               	skipz
  2608  09DA  29EC               	goto	l236
  2609                           
  2610                           ;time_scheduler.h: 191: {
  2611                           ;time_scheduler.h: 192: sprintf(debugInfo, "SET: %02d", savedMinutesEnd);
  2612  09DB  30D6               	movlw	low (STR_12| (0+32768))
  2613  09DC  00AE               	movwf	sprintf@f
  2614  09DD  3090               	movlw	high (STR_12| (0+32768))
  2615  09DE                     L2:	
  2616  09DE  00AF               	movwf	sprintf@f+1
  2617  09DF  0869               	movf	_savedMinutesEnd,w	;volatile
  2618  09E0  00C8               	movwf	??_setMinutesEnd
  2619  09E1  01C9               	clrf	??_setMinutesEnd+1
  2620  09E2  0848               	movf	??_setMinutesEnd,w
  2621  09E3  00B0               	movwf	?_sprintf+2
  2622  09E4  0849               	movf	??_setMinutesEnd+1,w
  2623  09E5  00B1               	movwf	?_sprintf+3
  2624  09E6  30E3               	movlw	_debugInfo& (0+255)
  2625  09E7  120A  158A  2601  120A  158A  	fcall	_sprintf
  2626  09EC                     l236:	
  2627                           
  2628                           ;time_scheduler.h: 193: }
  2629                           ;time_scheduler.h: 195: printToLCD(debugInfo);
  2630  09EC  30E3               	movlw	_debugInfo& (0+255)
  2631  09ED  1283               	bcf	3,5	;RP0=0, select bank0
  2632  09EE  1303               	bcf	3,6	;RP1=0, select bank0
  2633  09EF  00A2               	movwf	printToLCD@str
  2634  09F0  3000               	movlw	0
  2635  09F1  00A3               	movwf	printToLCD@str+1
  2636  09F2  160A  118A  2389  120A  158A  	fcall	_printToLCD
  2637                           
  2638                           ;time_scheduler.h: 196: lastKeyState = key;
  2639  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  2640  09F8  1303               	bcf	3,6	;RP1=0, select bank0
  2641  09F9  086B               	movf	_key,w
  2642  09FA  00C8               	movwf	??_setMinutesEnd
  2643  09FB  0848               	movf	??_setMinutesEnd,w
  2644  09FC  00E6               	movwf	_lastKeyState
  2645  09FD                     l2867:	
  2646                           ;time_scheduler.h: 198: while ((PORTB & 0x08) != 0)
  2647                           
  2648  09FD  1283               	bcf	3,5	;RP0=0, select bank0
  2649  09FE  1303               	bcf	3,6	;RP1=0, select bank0
  2650  09FF  1D86               	btfss	6,3	;volatile
  2651  0A00  0008               	return
  2652                           
  2653                           ;time_scheduler.h: 199: {
  2654                           ;time_scheduler.h: 200: _delay((unsigned long)((10)*(4000000/4000.0)));
  2655  0A01  300D               	movlw	13
  2656  0A02  00C9               	movwf	??_setMinutesEnd+1
  2657  0A03  30FB               	movlw	251
  2658  0A04  00C8               	movwf	??_setMinutesEnd
  2659  0A05                     u4367:	
  2660  0A05  0BC8               	decfsz	??_setMinutesEnd,f
  2661  0A06  2A05               	goto	u4367
  2662  0A07  0BC9               	decfsz	??_setMinutesEnd+1,f
  2663  0A08  2A05               	goto	u4367
  2664  0A09  2A0A               	nop2
  2665  0A0A  29FD               	goto	l2867
  2666  0A0B                     l2869:	
  2667                           ;time_scheduler.h: 201: }
  2668                           ;time_scheduler.h: 202: }
  2669                           
  2670                           
  2671                           ;time_scheduler.h: 203: else if (!keyValid)
  2672  0A0B  08EC               	movf	_keyValid,f
  2673  0A0C  1D03               	skipz
  2674  0A0D  0008               	return
  2675                           
  2676                           ;time_scheduler.h: 204: {
  2677                           ;time_scheduler.h: 205: lastKeyState = 0xFF;
  2678  0A0E  30FF               	movlw	255
  2679  0A0F  00C8               	movwf	??_setMinutesEnd
  2680  0A10  0848               	movf	??_setMinutesEnd,w
  2681  0A11  00E6               	movwf	_lastKeyState
  2682  0A12  0008               	return
  2683  0A13                     __end_of_setMinutesEnd:	
  2684                           
  2685                           	psect	text6
  2686  08C1                     __ptext6:	
  2687 ;; *************** function _setHoursStart *****************
  2688 ;; Defined at:
  2689 ;;		line 56 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;		None
  2692 ;; Auto vars:     Size  Location     Type
  2693 ;;		None
  2694 ;; Return value:  Size  Location     Type
  2695 ;;		None               void
  2696 ;; Registers used:
  2697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2703 ;;      Params:         0       0       0       0       0
  2704 ;;      Locals:         0       0       0       0       0
  2705 ;;      Temps:          0       2       0       0       0
  2706 ;;      Totals:         0       2       0       0       0
  2707 ;;Total ram usage:        2 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    4
  2710 ;; This function calls:
  2711 ;;		___awmod
  2712 ;;		_printToLCD
  2713 ;;		_sprintf
  2714 ;; This function is called by:
  2715 ;;		_main
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _setHoursStart
  2721  08C1                     _setHoursStart:	
  2722                           
  2723                           ;time_scheduler.h: 58: keyValid = (PORTB & 0x08) >> 3;
  2724                           
  2725                           ;incstack = 0
  2726                           ; Regs used in _setHoursStart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2727  08C1  1283               	bcf	3,5	;RP0=0, select bank0
  2728  08C2  1303               	bcf	3,6	;RP1=0, select bank0
  2729  08C3  0806               	movf	6,w	;volatile
  2730  08C4  00C8               	movwf	??_setHoursStart
  2731  08C5  3003               	movlw	3
  2732  08C6                     u3565:	
  2733  08C6  1003               	clrc
  2734  08C7  0CC8               	rrf	??_setHoursStart,f
  2735  08C8  3EFF               	addlw	-1
  2736  08C9  1D03               	skipz
  2737  08CA  28C6               	goto	u3565
  2738  08CB  0848               	movf	??_setHoursStart,w
  2739  08CC  3901               	andlw	1
  2740  08CD  00C9               	movwf	??_setHoursStart+1
  2741  08CE  0849               	movf	??_setHoursStart+1,w
  2742  08CF  00EC               	movwf	_keyValid
  2743                           
  2744                           ;time_scheduler.h: 59: key = (PORTB & 0xF0) >> 4;
  2745  08D0  0806               	movf	6,w	;volatile
  2746  08D1  00C8               	movwf	??_setHoursStart
  2747  08D2  3004               	movlw	4
  2748  08D3                     u3575:	
  2749  08D3  1003               	clrc
  2750  08D4  0CC8               	rrf	??_setHoursStart,f
  2751  08D5  3EFF               	addlw	-1
  2752  08D6  1D03               	skipz
  2753  08D7  28D3               	goto	u3575
  2754  08D8  0848               	movf	??_setHoursStart,w
  2755  08D9  390F               	andlw	15
  2756  08DA  00C9               	movwf	??_setHoursStart+1
  2757  08DB  0849               	movf	??_setHoursStart+1,w
  2758  08DC  00EB               	movwf	_key
  2759                           
  2760                           ;time_scheduler.h: 61: _delay((unsigned long)((50)*(4000000/4000.0)));
  2761  08DD  3041               	movlw	65
  2762  08DE  00C9               	movwf	??_setHoursStart+1
  2763  08DF  30EE               	movlw	238
  2764  08E0  00C8               	movwf	??_setHoursStart
  2765  08E1                     u4377:	
  2766  08E1  0BC8               	decfsz	??_setHoursStart,f
  2767  08E2  28E1               	goto	u4377
  2768  08E3  0BC9               	decfsz	??_setHoursStart+1,f
  2769  08E4  28E1               	goto	u4377
  2770  08E5  0000               	nop
  2771                           
  2772                           ;time_scheduler.h: 63: if (keyValid && key != lastKeyState)
  2773  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  2774  08E7  1303               	bcf	3,6	;RP1=0, select bank0
  2775  08E8  086C               	movf	_keyValid,w
  2776  08E9  1903               	btfsc	3,2
  2777  08EA  2962               	goto	l2767
  2778  08EB  086B               	movf	_key,w
  2779  08EC  0666               	xorwf	_lastKeyState,w
  2780  08ED  1903               	skipnz
  2781  08EE  2962               	goto	l2767
  2782                           
  2783                           ;time_scheduler.h: 64: {
  2784                           ;time_scheduler.h: 65: if (key == 0b00000000)
  2785  08EF  08EB               	movf	_key,f
  2786  08F0  1D03               	skipz
  2787  08F1  290C               	goto	l2751
  2788                           
  2789                           ;time_scheduler.h: 66: {
  2790                           ;time_scheduler.h: 67: savedHoursStart = (savedHoursStart + 1) % 24;
  2791  08F2  3018               	movlw	24
  2792  08F3  00A0               	movwf	___awmod@divisor
  2793  08F4  3000               	movlw	0
  2794  08F5  00A1               	movwf	___awmod@divisor+1
  2795  08F6  0868               	movf	_savedHoursStart,w	;volatile
  2796  08F7  3E01               	addlw	1
  2797  08F8  00A2               	movwf	___awmod@dividend
  2798  08F9  3000               	movlw	0
  2799  08FA  1803               	skipnc
  2800  08FB  3001               	movlw	1
  2801  08FC  00A3               	movwf	___awmod@dividend+1
  2802  08FD  160A  118A  25E8  120A  158A  	fcall	___awmod
  2803  0902  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0903  1303               	bcf	3,6	;RP1=0, select bank0
  2805  0904  0820               	movf	?___awmod,w
  2806  0905  00C8               	movwf	??_setHoursStart
  2807  0906  0848               	movf	??_setHoursStart,w
  2808  0907  00E8               	movwf	_savedHoursStart	;volatile
  2809                           
  2810                           ;time_scheduler.h: 68: sprintf(debugInfo, "INC: %02d", savedHoursStart);
  2811  0908  30CC               	movlw	low (STR_10| (0+32768))
  2812  0909  00AE               	movwf	sprintf@f
  2813  090A  3090               	movlw	high (STR_10| (0+32768))
  2814  090B  2935               	goto	L3
  2815  090C                     l2751:	
  2816                           ;time_scheduler.h: 69: }
  2817                           
  2818                           
  2819                           ;time_scheduler.h: 70: else if (key == 0b00001100)
  2820  090C  1283               	bcf	3,5	;RP0=0, select bank0
  2821  090D  1303               	bcf	3,6	;RP1=0, select bank0
  2822  090E  086B               	movf	_key,w
  2823  090F  3A0C               	xorlw	12
  2824  0910  1D03               	skipz
  2825  0911  292C               	goto	l2757
  2826                           
  2827                           ;time_scheduler.h: 71: {
  2828                           ;time_scheduler.h: 72: savedHoursStart = (savedHoursStart - 1 + 24) % 24;
  2829  0912  3018               	movlw	24
  2830  0913  00A0               	movwf	___awmod@divisor
  2831  0914  3000               	movlw	0
  2832  0915  00A1               	movwf	___awmod@divisor+1
  2833  0916  0868               	movf	_savedHoursStart,w	;volatile
  2834  0917  3E17               	addlw	23
  2835  0918  00A2               	movwf	___awmod@dividend
  2836  0919  3000               	movlw	0
  2837  091A  1803               	skipnc
  2838  091B  3001               	movlw	1
  2839  091C  00A3               	movwf	___awmod@dividend+1
  2840  091D  160A  118A  25E8  120A  158A  	fcall	___awmod
  2841  0922  1283               	bcf	3,5	;RP0=0, select bank0
  2842  0923  1303               	bcf	3,6	;RP1=0, select bank0
  2843  0924  0820               	movf	?___awmod,w
  2844  0925  00C8               	movwf	??_setHoursStart
  2845  0926  0848               	movf	??_setHoursStart,w
  2846  0927  00E8               	movwf	_savedHoursStart	;volatile
  2847                           
  2848                           ;time_scheduler.h: 73: sprintf(debugInfo, "DEC: %02d", savedHoursStart);
  2849  0928  30C2               	movlw	low (STR_11| (0+32768))
  2850  0929  00AE               	movwf	sprintf@f
  2851  092A  3090               	movlw	high (STR_11| (0+32768))
  2852  092B  2935               	goto	L3
  2853  092C                     l2757:	
  2854                           ;time_scheduler.h: 74: }
  2855                           
  2856                           
  2857                           ;time_scheduler.h: 75: else if (key == 0b00001101)
  2858  092C  1283               	bcf	3,5	;RP0=0, select bank0
  2859  092D  1303               	bcf	3,6	;RP1=0, select bank0
  2860  092E  086B               	movf	_key,w
  2861  092F  3A0D               	xorlw	13
  2862  0930  1D03               	skipz
  2863  0931  2943               	goto	l194
  2864                           
  2865                           ;time_scheduler.h: 76: {
  2866                           ;time_scheduler.h: 77: sprintf(debugInfo, "SET: %02d", savedHoursStart);
  2867  0932  30D6               	movlw	low (STR_12| (0+32768))
  2868  0933  00AE               	movwf	sprintf@f
  2869  0934  3090               	movlw	high (STR_12| (0+32768))
  2870  0935                     L3:	
  2871  0935  00AF               	movwf	sprintf@f+1
  2872  0936  0868               	movf	_savedHoursStart,w	;volatile
  2873  0937  00C8               	movwf	??_setHoursStart
  2874  0938  01C9               	clrf	??_setHoursStart+1
  2875  0939  0848               	movf	??_setHoursStart,w
  2876  093A  00B0               	movwf	?_sprintf+2
  2877  093B  0849               	movf	??_setHoursStart+1,w
  2878  093C  00B1               	movwf	?_sprintf+3
  2879  093D  30E3               	movlw	_debugInfo& (0+255)
  2880  093E  120A  158A  2601  120A  158A  	fcall	_sprintf
  2881  0943                     l194:	
  2882                           
  2883                           ;time_scheduler.h: 79: }
  2884                           ;time_scheduler.h: 81: printToLCD(debugInfo);
  2885  0943  30E3               	movlw	_debugInfo& (0+255)
  2886  0944  1283               	bcf	3,5	;RP0=0, select bank0
  2887  0945  1303               	bcf	3,6	;RP1=0, select bank0
  2888  0946  00A2               	movwf	printToLCD@str
  2889  0947  3000               	movlw	0
  2890  0948  00A3               	movwf	printToLCD@str+1
  2891  0949  160A  118A  2389  120A  158A  	fcall	_printToLCD
  2892                           
  2893                           ;time_scheduler.h: 82: lastKeyState = key;
  2894  094E  1283               	bcf	3,5	;RP0=0, select bank0
  2895  094F  1303               	bcf	3,6	;RP1=0, select bank0
  2896  0950  086B               	movf	_key,w
  2897  0951  00C8               	movwf	??_setHoursStart
  2898  0952  0848               	movf	??_setHoursStart,w
  2899  0953  00E6               	movwf	_lastKeyState
  2900  0954                     l2765:	
  2901                           ;time_scheduler.h: 84: while ((PORTB & 0x08) != 0)
  2902                           
  2903  0954  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0955  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0956  1D86               	btfss	6,3	;volatile
  2906  0957  0008               	return
  2907                           
  2908                           ;time_scheduler.h: 85: {
  2909                           ;time_scheduler.h: 86: _delay((unsigned long)((10)*(4000000/4000.0)));
  2910  0958  300D               	movlw	13
  2911  0959  00C9               	movwf	??_setHoursStart+1
  2912  095A  30FB               	movlw	251
  2913  095B  00C8               	movwf	??_setHoursStart
  2914  095C                     u4387:	
  2915  095C  0BC8               	decfsz	??_setHoursStart,f
  2916  095D  295C               	goto	u4387
  2917  095E  0BC9               	decfsz	??_setHoursStart+1,f
  2918  095F  295C               	goto	u4387
  2919  0960  2961               	nop2
  2920  0961  2954               	goto	l2765
  2921  0962                     l2767:	
  2922                           ;time_scheduler.h: 87: }
  2923                           ;time_scheduler.h: 88: }
  2924                           
  2925                           
  2926                           ;time_scheduler.h: 89: else if (!keyValid)
  2927  0962  08EC               	movf	_keyValid,f
  2928  0963  1D03               	skipz
  2929  0964  0008               	return
  2930                           
  2931                           ;time_scheduler.h: 90: {
  2932                           ;time_scheduler.h: 91: lastKeyState = 0xFF;
  2933  0965  30FF               	movlw	255
  2934  0966  00C8               	movwf	??_setHoursStart
  2935  0967  0848               	movf	??_setHoursStart,w
  2936  0968  00E6               	movwf	_lastKeyState
  2937  0969  0008               	return
  2938  096A                     __end_of_setHoursStart:	
  2939                           
  2940                           	psect	text7
  2941  0818                     __ptext7:	
  2942 ;; *************** function _setHoursEnd *****************
  2943 ;; Defined at:
  2944 ;;		line 95 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;		None               void
  2951 ;; Registers used:
  2952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2958 ;;      Params:         0       0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0
  2960 ;;      Temps:          0       2       0       0       0
  2961 ;;      Totals:         0       2       0       0       0
  2962 ;;Total ram usage:        2 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    4
  2965 ;; This function calls:
  2966 ;;		___awmod
  2967 ;;		_printToLCD
  2968 ;;		_sprintf
  2969 ;; This function is called by:
  2970 ;;		_main
  2971 ;; This function uses a non-reentrant model
  2972 ;;
  2973                           
  2974                           
  2975                           ;psect for function _setHoursEnd
  2976  0818                     _setHoursEnd:	
  2977                           
  2978                           ;time_scheduler.h: 97: keyValid = (PORTB & 0x08) >> 3;
  2979                           
  2980                           ;incstack = 0
  2981                           ; Regs used in _setHoursEnd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2982  0818  1283               	bcf	3,5	;RP0=0, select bank0
  2983  0819  1303               	bcf	3,6	;RP1=0, select bank0
  2984  081A  0806               	movf	6,w	;volatile
  2985  081B  00C8               	movwf	??_setHoursEnd
  2986  081C  3003               	movlw	3
  2987  081D                     u3655:	
  2988  081D  1003               	clrc
  2989  081E  0CC8               	rrf	??_setHoursEnd,f
  2990  081F  3EFF               	addlw	-1
  2991  0820  1D03               	skipz
  2992  0821  281D               	goto	u3655
  2993  0822  0848               	movf	??_setHoursEnd,w
  2994  0823  3901               	andlw	1
  2995  0824  00C9               	movwf	??_setHoursEnd+1
  2996  0825  0849               	movf	??_setHoursEnd+1,w
  2997  0826  00EC               	movwf	_keyValid
  2998                           
  2999                           ;time_scheduler.h: 98: key = (PORTB & 0xF0) >> 4;
  3000  0827  0806               	movf	6,w	;volatile
  3001  0828  00C8               	movwf	??_setHoursEnd
  3002  0829  3004               	movlw	4
  3003  082A                     u3665:	
  3004  082A  1003               	clrc
  3005  082B  0CC8               	rrf	??_setHoursEnd,f
  3006  082C  3EFF               	addlw	-1
  3007  082D  1D03               	skipz
  3008  082E  282A               	goto	u3665
  3009  082F  0848               	movf	??_setHoursEnd,w
  3010  0830  390F               	andlw	15
  3011  0831  00C9               	movwf	??_setHoursEnd+1
  3012  0832  0849               	movf	??_setHoursEnd+1,w
  3013  0833  00EB               	movwf	_key
  3014                           
  3015                           ;time_scheduler.h: 100: _delay((unsigned long)((50)*(4000000/4000.0)));
  3016  0834  3041               	movlw	65
  3017  0835  00C9               	movwf	??_setHoursEnd+1
  3018  0836  30EE               	movlw	238
  3019  0837  00C8               	movwf	??_setHoursEnd
  3020  0838                     u4397:	
  3021  0838  0BC8               	decfsz	??_setHoursEnd,f
  3022  0839  2838               	goto	u4397
  3023  083A  0BC9               	decfsz	??_setHoursEnd+1,f
  3024  083B  2838               	goto	u4397
  3025  083C  0000               	nop
  3026                           
  3027                           ;time_scheduler.h: 102: if (keyValid && key != lastKeyState)
  3028  083D  1283               	bcf	3,5	;RP0=0, select bank0
  3029  083E  1303               	bcf	3,6	;RP1=0, select bank0
  3030  083F  086C               	movf	_keyValid,w
  3031  0840  1903               	btfsc	3,2
  3032  0841  28B9               	goto	l2801
  3033  0842  086B               	movf	_key,w
  3034  0843  0666               	xorwf	_lastKeyState,w
  3035  0844  1903               	skipnz
  3036  0845  28B9               	goto	l2801
  3037                           
  3038                           ;time_scheduler.h: 103: {
  3039                           ;time_scheduler.h: 104: if (key == 0b00000000)
  3040  0846  08EB               	movf	_key,f
  3041  0847  1D03               	skipz
  3042  0848  2863               	goto	l2785
  3043                           
  3044                           ;time_scheduler.h: 105: {
  3045                           ;time_scheduler.h: 106: savedHoursEnd = (savedHoursEnd + 1) % 24;
  3046  0849  3018               	movlw	24
  3047  084A  00A0               	movwf	___awmod@divisor
  3048  084B  3000               	movlw	0
  3049  084C  00A1               	movwf	___awmod@divisor+1
  3050  084D  0867               	movf	_savedHoursEnd,w	;volatile
  3051  084E  3E01               	addlw	1
  3052  084F  00A2               	movwf	___awmod@dividend
  3053  0850  3000               	movlw	0
  3054  0851  1803               	skipnc
  3055  0852  3001               	movlw	1
  3056  0853  00A3               	movwf	___awmod@dividend+1
  3057  0854  160A  118A  25E8  120A  158A  	fcall	___awmod
  3058  0859  1283               	bcf	3,5	;RP0=0, select bank0
  3059  085A  1303               	bcf	3,6	;RP1=0, select bank0
  3060  085B  0820               	movf	?___awmod,w
  3061  085C  00C8               	movwf	??_setHoursEnd
  3062  085D  0848               	movf	??_setHoursEnd,w
  3063  085E  00E7               	movwf	_savedHoursEnd	;volatile
  3064                           
  3065                           ;time_scheduler.h: 107: sprintf(debugInfo, "INC: %02d", savedHoursEnd);
  3066  085F  30CC               	movlw	low (STR_10| (0+32768))
  3067  0860  00AE               	movwf	sprintf@f
  3068  0861  3090               	movlw	high (STR_10| (0+32768))
  3069  0862  288C               	goto	L4
  3070  0863                     l2785:	
  3071                           ;time_scheduler.h: 108: }
  3072                           
  3073                           
  3074                           ;time_scheduler.h: 109: else if (key == 0b00001100)
  3075  0863  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0864  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0865  086B               	movf	_key,w
  3078  0866  3A0C               	xorlw	12
  3079  0867  1D03               	skipz
  3080  0868  2883               	goto	l2791
  3081                           
  3082                           ;time_scheduler.h: 110: {
  3083                           ;time_scheduler.h: 111: savedHoursEnd = (savedHoursEnd - 1 + 24) % 24;
  3084  0869  3018               	movlw	24
  3085  086A  00A0               	movwf	___awmod@divisor
  3086  086B  3000               	movlw	0
  3087  086C  00A1               	movwf	___awmod@divisor+1
  3088  086D  0867               	movf	_savedHoursEnd,w	;volatile
  3089  086E  3E17               	addlw	23
  3090  086F  00A2               	movwf	___awmod@dividend
  3091  0870  3000               	movlw	0
  3092  0871  1803               	skipnc
  3093  0872  3001               	movlw	1
  3094  0873  00A3               	movwf	___awmod@dividend+1
  3095  0874  160A  118A  25E8  120A  158A  	fcall	___awmod
  3096  0879  1283               	bcf	3,5	;RP0=0, select bank0
  3097  087A  1303               	bcf	3,6	;RP1=0, select bank0
  3098  087B  0820               	movf	?___awmod,w
  3099  087C  00C8               	movwf	??_setHoursEnd
  3100  087D  0848               	movf	??_setHoursEnd,w
  3101  087E  00E7               	movwf	_savedHoursEnd	;volatile
  3102                           
  3103                           ;time_scheduler.h: 112: sprintf(debugInfo, "DEC: %02d", savedHoursEnd);
  3104  087F  30C2               	movlw	low (STR_11| (0+32768))
  3105  0880  00AE               	movwf	sprintf@f
  3106  0881  3090               	movlw	high (STR_11| (0+32768))
  3107  0882  288C               	goto	L4
  3108  0883                     l2791:	
  3109                           ;time_scheduler.h: 113: }
  3110                           
  3111                           
  3112                           ;time_scheduler.h: 114: else if (key == 0b00001101)
  3113  0883  1283               	bcf	3,5	;RP0=0, select bank0
  3114  0884  1303               	bcf	3,6	;RP1=0, select bank0
  3115  0885  086B               	movf	_key,w
  3116  0886  3A0D               	xorlw	13
  3117  0887  1D03               	skipz
  3118  0888  289A               	goto	l208
  3119                           
  3120                           ;time_scheduler.h: 115: {
  3121                           ;time_scheduler.h: 116: sprintf(debugInfo, "SET: %02d", savedHoursEnd);
  3122  0889  30D6               	movlw	low (STR_12| (0+32768))
  3123  088A  00AE               	movwf	sprintf@f
  3124  088B  3090               	movlw	high (STR_12| (0+32768))
  3125  088C                     L4:	
  3126  088C  00AF               	movwf	sprintf@f+1
  3127  088D  0867               	movf	_savedHoursEnd,w	;volatile
  3128  088E  00C8               	movwf	??_setHoursEnd
  3129  088F  01C9               	clrf	??_setHoursEnd+1
  3130  0890  0848               	movf	??_setHoursEnd,w
  3131  0891  00B0               	movwf	?_sprintf+2
  3132  0892  0849               	movf	??_setHoursEnd+1,w
  3133  0893  00B1               	movwf	?_sprintf+3
  3134  0894  30E3               	movlw	_debugInfo& (0+255)
  3135  0895  120A  158A  2601  120A  158A  	fcall	_sprintf
  3136  089A                     l208:	
  3137                           
  3138                           ;time_scheduler.h: 117: }
  3139                           ;time_scheduler.h: 119: printToLCD(debugInfo);
  3140  089A  30E3               	movlw	_debugInfo& (0+255)
  3141  089B  1283               	bcf	3,5	;RP0=0, select bank0
  3142  089C  1303               	bcf	3,6	;RP1=0, select bank0
  3143  089D  00A2               	movwf	printToLCD@str
  3144  089E  3000               	movlw	0
  3145  089F  00A3               	movwf	printToLCD@str+1
  3146  08A0  160A  118A  2389  120A  158A  	fcall	_printToLCD
  3147                           
  3148                           ;time_scheduler.h: 120: lastKeyState = key;
  3149  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  3150  08A6  1303               	bcf	3,6	;RP1=0, select bank0
  3151  08A7  086B               	movf	_key,w
  3152  08A8  00C8               	movwf	??_setHoursEnd
  3153  08A9  0848               	movf	??_setHoursEnd,w
  3154  08AA  00E6               	movwf	_lastKeyState
  3155  08AB                     l2799:	
  3156                           ;time_scheduler.h: 122: while ((PORTB & 0x08) != 0)
  3157                           
  3158  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  3159  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  3160  08AD  1D86               	btfss	6,3	;volatile
  3161  08AE  0008               	return
  3162                           
  3163                           ;time_scheduler.h: 123: {
  3164                           ;time_scheduler.h: 124: _delay((unsigned long)((10)*(4000000/4000.0)));
  3165  08AF  300D               	movlw	13
  3166  08B0  00C9               	movwf	??_setHoursEnd+1
  3167  08B1  30FB               	movlw	251
  3168  08B2  00C8               	movwf	??_setHoursEnd
  3169  08B3                     u4407:	
  3170  08B3  0BC8               	decfsz	??_setHoursEnd,f
  3171  08B4  28B3               	goto	u4407
  3172  08B5  0BC9               	decfsz	??_setHoursEnd+1,f
  3173  08B6  28B3               	goto	u4407
  3174  08B7  28B8               	nop2
  3175  08B8  28AB               	goto	l2799
  3176  08B9                     l2801:	
  3177                           ;time_scheduler.h: 125: }
  3178                           ;time_scheduler.h: 126: }
  3179                           
  3180                           
  3181                           ;time_scheduler.h: 127: else if (!keyValid)
  3182  08B9  08EC               	movf	_keyValid,f
  3183  08BA  1D03               	skipz
  3184  08BB  0008               	return
  3185                           
  3186                           ;time_scheduler.h: 128: {
  3187                           ;time_scheduler.h: 129: lastKeyState = 0xFF;
  3188  08BC  30FF               	movlw	255
  3189  08BD  00C8               	movwf	??_setHoursEnd
  3190  08BE  0848               	movf	??_setHoursEnd,w
  3191  08BF  00E6               	movwf	_lastKeyState
  3192  08C0  0008               	return
  3193  08C1                     __end_of_setHoursEnd:	
  3194                           
  3195                           	psect	text8
  3196  15E8                     __ptext8:	
  3197 ;; *************** function ___awmod *****************
  3198 ;; Defined at:
  3199 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;  divisor         2    0[BANK0 ] int 
  3202 ;;  dividend        2    2[BANK0 ] int 
  3203 ;; Auto vars:     Size  Location     Type
  3204 ;;  sign            1    6[BANK0 ] unsigned char 
  3205 ;;  counter         1    5[BANK0 ] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  2    0[BANK0 ] int 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3215 ;;      Params:         0       4       0       0       0
  3216 ;;      Locals:         0       2       0       0       0
  3217 ;;      Temps:          0       1       0       0       0
  3218 ;;      Totals:         0       7       0       0       0
  3219 ;;Total ram usage:        7 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    2
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_setHoursStart
  3226 ;;		_setHoursEnd
  3227 ;;		_setMinutesStart
  3228 ;;		_setMinutesEnd
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232                           
  3233                           ;psect for function ___awmod
  3234  15E8                     ___awmod:	
  3235                           
  3236                           ;incstack = 0
  3237                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3238  15E8  1283               	bcf	3,5	;RP0=0, select bank0
  3239  15E9  1303               	bcf	3,6	;RP1=0, select bank0
  3240  15EA  01A6               	clrf	___awmod@sign
  3241  15EB  1FA3               	btfss	___awmod@dividend+1,7
  3242  15EC  2DF4               	goto	l2569
  3243  15ED  09A2               	comf	___awmod@dividend,f
  3244  15EE  09A3               	comf	___awmod@dividend+1,f
  3245  15EF  0AA2               	incf	___awmod@dividend,f
  3246  15F0  1903               	skipnz
  3247  15F1  0AA3               	incf	___awmod@dividend+1,f
  3248  15F2  01A6               	clrf	___awmod@sign
  3249  15F3  0AA6               	incf	___awmod@sign,f
  3250  15F4                     l2569:	
  3251  15F4  1FA1               	btfss	___awmod@divisor+1,7
  3252  15F5  2DFB               	goto	l2573
  3253  15F6  09A0               	comf	___awmod@divisor,f
  3254  15F7  09A1               	comf	___awmod@divisor+1,f
  3255  15F8  0AA0               	incf	___awmod@divisor,f
  3256  15F9  1903               	skipnz
  3257  15FA  0AA1               	incf	___awmod@divisor+1,f
  3258  15FB                     l2573:	
  3259  15FB  0821               	movf	___awmod@divisor+1,w
  3260  15FC  0420               	iorwf	___awmod@divisor,w
  3261  15FD  1903               	skipnz
  3262  15FE  2E28               	goto	l2591
  3263  15FF  01A5               	clrf	___awmod@counter
  3264  1600  0AA5               	incf	___awmod@counter,f
  3265  1601                     l2581:	
  3266  1601  1BA1               	btfsc	___awmod@divisor+1,7
  3267  1602  2E0F               	goto	l2583
  3268  1603  3001               	movlw	1
  3269  1604                     u3275:	
  3270  1604  1003               	clrc
  3271  1605  0DA0               	rlf	___awmod@divisor,f
  3272  1606  0DA1               	rlf	___awmod@divisor+1,f
  3273  1607  3EFF               	addlw	-1
  3274  1608  1D03               	skipz
  3275  1609  2E04               	goto	u3275
  3276  160A  3001               	movlw	1
  3277  160B  00A4               	movwf	??___awmod
  3278  160C  0824               	movf	??___awmod,w
  3279  160D  07A5               	addwf	___awmod@counter,f
  3280  160E  2E01               	goto	l2581
  3281  160F                     l2583:	
  3282  160F  0821               	movf	___awmod@divisor+1,w
  3283  1610  0223               	subwf	___awmod@dividend+1,w
  3284  1611  1D03               	skipz
  3285  1612  2E15               	goto	u3295
  3286  1613  0820               	movf	___awmod@divisor,w
  3287  1614  0222               	subwf	___awmod@dividend,w
  3288  1615                     u3295:	
  3289  1615  1C03               	skipc
  3290  1616  2E1D               	goto	l2587
  3291  1617  0820               	movf	___awmod@divisor,w
  3292  1618  02A2               	subwf	___awmod@dividend,f
  3293  1619  0821               	movf	___awmod@divisor+1,w
  3294  161A  1C03               	skipc
  3295  161B  03A3               	decf	___awmod@dividend+1,f
  3296  161C  02A3               	subwf	___awmod@dividend+1,f
  3297  161D                     l2587:	
  3298  161D  3001               	movlw	1
  3299  161E                     u3305:	
  3300  161E  1003               	clrc
  3301  161F  0CA1               	rrf	___awmod@divisor+1,f
  3302  1620  0CA0               	rrf	___awmod@divisor,f
  3303  1621  3EFF               	addlw	-1
  3304  1622  1D03               	skipz
  3305  1623  2E1E               	goto	u3305
  3306  1624  3001               	movlw	1
  3307  1625  02A5               	subwf	___awmod@counter,f
  3308  1626  1D03               	btfss	3,2
  3309  1627  2E0F               	goto	l2583
  3310  1628                     l2591:	
  3311  1628  0826               	movf	___awmod@sign,w
  3312  1629  1903               	btfsc	3,2
  3313  162A  2E30               	goto	l2595
  3314  162B  09A2               	comf	___awmod@dividend,f
  3315  162C  09A3               	comf	___awmod@dividend+1,f
  3316  162D  0AA2               	incf	___awmod@dividend,f
  3317  162E  1903               	skipnz
  3318  162F  0AA3               	incf	___awmod@dividend+1,f
  3319  1630                     l2595:	
  3320  1630  0823               	movf	___awmod@dividend+1,w
  3321  1631  01A1               	clrf	?___awmod+1
  3322  1632  07A1               	addwf	?___awmod+1,f
  3323  1633  0822               	movf	___awmod@dividend,w
  3324  1634  01A0               	clrf	?___awmod
  3325  1635  07A0               	addwf	?___awmod,f
  3326  1636  0008               	return
  3327  1637                     __end_of___awmod:	
  3328                           
  3329                           	psect	text9
  3330  1340                     __ptext9:	
  3331 ;; *************** function _runMQ135 *****************
  3332 ;; Defined at:
  3333 ;;		line 32 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;		None               void
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0, pclath, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3347 ;;      Params:         0       0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0
  3350 ;;      Totals:         0       0       0       0       0
  3351 ;;Total ram usage:        0 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    5
  3354 ;; This function calls:
  3355 ;;		_CalcMQ135
  3356 ;;		_readADC
  3357 ;; This function is called by:
  3358 ;;		_main
  3359 ;; This function uses a non-reentrant model
  3360 ;;
  3361                           
  3362                           
  3363                           ;psect for function _runMQ135
  3364  1340                     _runMQ135:	
  3365                           
  3366                           ;mq135_module.h: 34: PPM = CalcMQ135(readADC(0));
  3367                           
  3368                           ;incstack = 0
  3369                           ; Regs used in _runMQ135: [wreg+status,2+status,0+pclath+cstack]
  3370  1340  3000               	movlw	0
  3371  1341  160A  118A  2422  160A  118A  	fcall	_readADC
  3372  1346  1283               	bcf	3,5	;RP0=0, select bank0
  3373  1347  1303               	bcf	3,6	;RP1=0, select bank0
  3374  1348  0821               	movf	?_readADC+1,w
  3375  1349  01D2               	clrf	CalcMQ135@RAW_ADC+1
  3376  134A  07D2               	addwf	CalcMQ135@RAW_ADC+1,f
  3377  134B  0820               	movf	?_readADC,w
  3378  134C  01D1               	clrf	CalcMQ135@RAW_ADC
  3379  134D  07D1               	addwf	CalcMQ135@RAW_ADC,f
  3380  134E  120A  118A  2050   	fcall	_CalcMQ135
  3381  1351  1283               	bcf	3,5	;RP0=0, select bank0
  3382  1352  1303               	bcf	3,6	;RP1=0, select bank0
  3383  1353  0851               	movf	?_CalcMQ135,w
  3384  1354  1683               	bsf	3,5	;RP0=1, select bank1
  3385  1355  1303               	bcf	3,6	;RP1=0, select bank1
  3386  1356  00DC               	movwf	_PPM^(0+128)	;volatile
  3387  1357  1283               	bcf	3,5	;RP0=0, select bank0
  3388  1358  1303               	bcf	3,6	;RP1=0, select bank0
  3389  1359  0852               	movf	?_CalcMQ135+1,w
  3390  135A  1683               	bsf	3,5	;RP0=1, select bank1
  3391  135B  1303               	bcf	3,6	;RP1=0, select bank1
  3392  135C  00DD               	movwf	(_PPM+1)^(0+128)	;volatile
  3393  135D  1283               	bcf	3,5	;RP0=0, select bank0
  3394  135E  1303               	bcf	3,6	;RP1=0, select bank0
  3395  135F  0853               	movf	?_CalcMQ135+2,w
  3396  1360  1683               	bsf	3,5	;RP0=1, select bank1
  3397  1361  1303               	bcf	3,6	;RP1=0, select bank1
  3398  1362  00DE               	movwf	(_PPM+2)^(0+128)	;volatile
  3399  1363  0008               	return
  3400  1364                     __end_of_runMQ135:	
  3401                           
  3402                           	psect	text10
  3403  1422                     __ptext10:	
  3404 ;; *************** function _readADC *****************
  3405 ;; Defined at:
  3406 ;;		line 23 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\common_dependen
      +cies.h"
  3407 ;; Parameters:    Size  Location     Type
  3408 ;;  channel         1    wreg     unsigned char 
  3409 ;; Auto vars:     Size  Location     Type
  3410 ;;  channel         1    4[BANK0 ] unsigned char 
  3411 ;; Return value:  Size  Location     Type
  3412 ;;                  2    0[BANK0 ] int 
  3413 ;; Registers used:
  3414 ;;		wreg, status,2, status,0
  3415 ;; Tracked objects:
  3416 ;;		On entry : 0/0
  3417 ;;		On exit  : 0/0
  3418 ;;		Unchanged: 0/0
  3419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3420 ;;      Params:         0       2       0       0       0
  3421 ;;      Locals:         0       1       0       0       0
  3422 ;;      Temps:          0       2       0       0       0
  3423 ;;      Totals:         0       5       0       0       0
  3424 ;;Total ram usage:        5 bytes
  3425 ;; Hardware stack levels used:    1
  3426 ;; Hardware stack levels required when called:    2
  3427 ;; This function calls:
  3428 ;;		Nothing
  3429 ;; This function is called by:
  3430 ;;		_runMQ135
  3431 ;; This function uses a non-reentrant model
  3432 ;;
  3433                           
  3434                           
  3435                           ;psect for function _readADC
  3436  1422                     _readADC:	
  3437                           
  3438                           ;incstack = 0
  3439                           ; Regs used in _readADC: [wreg+status,2+status,0]
  3440                           ;readADC@channel stored from wreg
  3441  1422  1283               	bcf	3,5	;RP0=0, select bank0
  3442  1423  1303               	bcf	3,6	;RP1=0, select bank0
  3443  1424  00A4               	movwf	readADC@channel
  3444                           
  3445                           ;common_dependencies.h: 25: ADCON0 &= 0xC3;
  3446  1425  30C3               	movlw	195
  3447  1426  00A2               	movwf	??_readADC
  3448  1427  0822               	movf	??_readADC,w
  3449  1428  059F               	andwf	31,f	;volatile
  3450                           
  3451                           ;common_dependencies.h: 26: ADCON0 |= (channel << 3);
  3452  1429  0824               	movf	readADC@channel,w
  3453  142A  00A2               	movwf	??_readADC
  3454  142B  3002               	movlw	2
  3455  142C                     u3115:	
  3456  142C  1003               	clrc
  3457  142D  0DA2               	rlf	??_readADC,f
  3458  142E  3EFF               	addlw	-1
  3459  142F  1D03               	skipz
  3460  1430  2C2C               	goto	u3115
  3461  1431  1003               	clrc
  3462  1432  0D22               	rlf	??_readADC,w
  3463  1433  00A3               	movwf	??_readADC+1
  3464  1434  0823               	movf	??_readADC+1,w
  3465  1435  049F               	iorwf	31,f	;volatile
  3466                           
  3467                           ;common_dependencies.h: 27: _delay((unsigned long)((20)*(4000000/4000000.0)));
  3468  1436  3006               	movlw	6
  3469  1437  00A2               	movwf	??_readADC
  3470  1438                     u4417:	
  3471  1438  0BA2               	decfsz	??_readADC,f
  3472  1439  2C38               	goto	u4417
  3473  143A  0000               	nop
  3474                           
  3475                           ;common_dependencies.h: 28: GO_DONE = 1;
  3476  143B  1283               	bcf	3,5	;RP0=0, select bank0
  3477  143C  1303               	bcf	3,6	;RP1=0, select bank0
  3478  143D  151F               	bsf	31,2	;volatile
  3479  143E                     l69:	
  3480                           ;common_dependencies.h: 30: ;
  3481                           
  3482                           ;common_dependencies.h: 29: while (GO_DONE)
  3483                           
  3484  143E  191F               	btfsc	31,2	;volatile
  3485  143F  2C3E               	goto	l69
  3486                           
  3487                           ;common_dependencies.h: 31: return ((ADRESH << 8) + ADRESL);
  3488  1440  081E               	movf	30,w	;volatile
  3489  1441  01A1               	clrf	?_readADC+1
  3490  1442  07A1               	addwf	?_readADC+1,f
  3491  1443  1683               	bsf	3,5	;RP0=1, select bank1
  3492  1444  1303               	bcf	3,6	;RP1=0, select bank1
  3493  1445  081E               	movf	30,w	;volatile
  3494  1446  1283               	bcf	3,5	;RP0=0, select bank0
  3495  1447  1303               	bcf	3,6	;RP1=0, select bank0
  3496  1448  01A0               	clrf	?_readADC
  3497  1449  07A0               	addwf	?_readADC,f
  3498  144A  0008               	return
  3499  144B                     __end_of_readADC:	
  3500                           
  3501                           	psect	text11
  3502  0050                     __ptext11:	
  3503 ;; *************** function _CalcMQ135 *****************
  3504 ;; Defined at:
  3505 ;;		line 93 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  RAW_ADC         2   49[BANK0 ] int 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;  ratio           3   36[BANK1 ] float 
  3510 ;;  co2             3   33[BANK1 ] float 
  3511 ;;  ratio5          3   30[BANK1 ] float 
  3512 ;;  ratio4          3   27[BANK1 ] float 
  3513 ;;  ratio3          3   24[BANK1 ] float 
  3514 ;;  ratio2          3   21[BANK1 ] float 
  3515 ;;  ratio6          3    3[BANK1 ] float 
  3516 ;;  voltage         3    0[BANK1 ] float 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  3   49[BANK0 ] float 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2, status,0, pclath, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3526 ;;      Params:         0       3       0       0       0
  3527 ;;      Locals:         0       0      39       0       0
  3528 ;;      Temps:          0       0       0       0       0
  3529 ;;      Totals:         0       3      39       0       0
  3530 ;;Total ram usage:       42 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; Hardware stack levels required when called:    4
  3533 ;; This function calls:
  3534 ;;		___awtoft
  3535 ;;		___ftadd
  3536 ;;		___ftdiv
  3537 ;;		___ftmul
  3538 ;; This function is called by:
  3539 ;;		_runMQ135
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           
  3544                           ;psect for function _CalcMQ135
  3545  0050                     _CalcMQ135:	
  3546                           
  3547                           ;mq135_module.h: 95: float voltage = (RAW_ADC * 5.0) / 1023.0;
  3548                           
  3549                           ;incstack = 0
  3550                           ; Regs used in _CalcMQ135: [wreg+status,2+status,0+pclath+cstack]
  3551  0050  30C0               	movlw	192
  3552  0051  1283               	bcf	3,5	;RP0=0, select bank0
  3553  0052  1303               	bcf	3,6	;RP1=0, select bank0
  3554  0053  00C1               	movwf	___ftdiv@f2
  3555  0054  307F               	movlw	127
  3556  0055  00C2               	movwf	___ftdiv@f2+1
  3557  0056  3044               	movlw	68
  3558  0057  00C3               	movwf	___ftdiv@f2+2
  3559  0058  3000               	movlw	0
  3560  0059  00B1               	movwf	___ftmul@f1
  3561  005A  30A0               	movlw	160
  3562  005B  00B2               	movwf	___ftmul@f1+1
  3563  005C  3040               	movlw	64
  3564  005D  00B3               	movwf	___ftmul@f1+2
  3565  005E  0852               	movf	CalcMQ135@RAW_ADC+1,w
  3566  005F  01A9               	clrf	___awtoft@c+1
  3567  0060  07A9               	addwf	___awtoft@c+1,f
  3568  0061  0851               	movf	CalcMQ135@RAW_ADC,w
  3569  0062  01A8               	clrf	___awtoft@c
  3570  0063  07A8               	addwf	___awtoft@c,f
  3571  0064  160A  118A  2364  120A  118A  	fcall	___awtoft
  3572  0069  1283               	bcf	3,5	;RP0=0, select bank0
  3573  006A  1303               	bcf	3,6	;RP1=0, select bank0
  3574  006B  0828               	movf	?___awtoft,w
  3575  006C  00B4               	movwf	___ftmul@f2
  3576  006D  0829               	movf	?___awtoft+1,w
  3577  006E  00B5               	movwf	___ftmul@f2+1
  3578  006F  082A               	movf	?___awtoft+2,w
  3579  0070  00B6               	movwf	___ftmul@f2+2
  3580  0071  120A  158A  2425  120A  118A  	fcall	___ftmul
  3581  0076  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0077  1303               	bcf	3,6	;RP1=0, select bank0
  3583  0078  0831               	movf	?___ftmul,w
  3584  0079  00C4               	movwf	___ftdiv@f1
  3585  007A  0832               	movf	?___ftmul+1,w
  3586  007B  00C5               	movwf	___ftdiv@f1+1
  3587  007C  0833               	movf	?___ftmul+2,w
  3588  007D  00C6               	movwf	___ftdiv@f1+2
  3589  007E  120A  158A  236D  120A  118A  	fcall	___ftdiv
  3590  0083  1283               	bcf	3,5	;RP0=0, select bank0
  3591  0084  1303               	bcf	3,6	;RP1=0, select bank0
  3592  0085  0841               	movf	?___ftdiv,w
  3593  0086  1683               	bsf	3,5	;RP0=1, select bank1
  3594  0087  1303               	bcf	3,6	;RP1=0, select bank1
  3595  0088  00A0               	movwf	CalcMQ135@voltage^(0+128)
  3596  0089  1283               	bcf	3,5	;RP0=0, select bank0
  3597  008A  1303               	bcf	3,6	;RP1=0, select bank0
  3598  008B  0842               	movf	?___ftdiv+1,w
  3599  008C  1683               	bsf	3,5	;RP0=1, select bank1
  3600  008D  1303               	bcf	3,6	;RP1=0, select bank1
  3601  008E  00A1               	movwf	(CalcMQ135@voltage+1)^(0+128)
  3602  008F  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0090  1303               	bcf	3,6	;RP1=0, select bank0
  3604  0091  0843               	movf	?___ftdiv+2,w
  3605  0092  1683               	bsf	3,5	;RP0=1, select bank1
  3606  0093  1303               	bcf	3,6	;RP1=0, select bank1
  3607  0094  00A2               	movwf	(CalcMQ135@voltage+2)^(0+128)
  3608                           
  3609                           ;mq135_module.h: 96: float ratio = voltage / 5.0;
  3610  0095  3000               	movlw	0
  3611  0096  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0097  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0098  00C1               	movwf	___ftdiv@f2
  3614  0099  30A0               	movlw	160
  3615  009A  00C2               	movwf	___ftdiv@f2+1
  3616  009B  3040               	movlw	64
  3617  009C  00C3               	movwf	___ftdiv@f2+2
  3618  009D  1683               	bsf	3,5	;RP0=1, select bank1
  3619  009E  1303               	bcf	3,6	;RP1=0, select bank1
  3620  009F  0820               	movf	CalcMQ135@voltage^(0+128),w
  3621  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  3622  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  3623  00A2  00C4               	movwf	___ftdiv@f1
  3624  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  3625  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  3626  00A5  0821               	movf	(CalcMQ135@voltage+1)^(0+128),w
  3627  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  3628  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  3629  00A8  00C5               	movwf	___ftdiv@f1+1
  3630  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  3631  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  3632  00AB  0822               	movf	(CalcMQ135@voltage+2)^(0+128),w
  3633  00AC  1283               	bcf	3,5	;RP0=0, select bank0
  3634  00AD  1303               	bcf	3,6	;RP1=0, select bank0
  3635  00AE  00C6               	movwf	___ftdiv@f1+2
  3636  00AF  120A  158A  236D  120A  118A  	fcall	___ftdiv
  3637  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  3638  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  3639  00B6  0841               	movf	?___ftdiv,w
  3640  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  3641  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  3642  00B9  00C4               	movwf	CalcMQ135@ratio^(0+128)
  3643  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  3644  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  3645  00BC  0842               	movf	?___ftdiv+1,w
  3646  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  3647  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  3648  00BF  00C5               	movwf	(CalcMQ135@ratio+1)^(0+128)
  3649  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  3650  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  3651  00C2  0843               	movf	?___ftdiv+2,w
  3652  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  3653  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  3654  00C5  00C6               	movwf	(CalcMQ135@ratio+2)^(0+128)
  3655                           
  3656                           ;mq135_module.h: 99: float ratio2 = ratio * ratio;
  3657  00C6  0844               	movf	CalcMQ135@ratio^(0+128),w
  3658  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  3659  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  3660  00C9  00B1               	movwf	___ftmul@f1
  3661  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  3662  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  3663  00CC  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3664  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  3665  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  3666  00CF  00B2               	movwf	___ftmul@f1+1
  3667  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  3668  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  3669  00D2  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3670  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  3671  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  3672  00D5  00B3               	movwf	___ftmul@f1+2
  3673  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  3674  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  3675  00D8  0844               	movf	CalcMQ135@ratio^(0+128),w
  3676  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  3677  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  3678  00DB  00B4               	movwf	___ftmul@f2
  3679  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  3680  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  3681  00DE  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3682  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  3683  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  3684  00E1  00B5               	movwf	___ftmul@f2+1
  3685  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  3686  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  3687  00E4  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3688  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  3689  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  3690  00E7  00B6               	movwf	___ftmul@f2+2
  3691  00E8  120A  158A  2425  120A  118A  	fcall	___ftmul
  3692  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  3693  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  3694  00EF  0831               	movf	?___ftmul,w
  3695  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  3696  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  3697  00F2  00B5               	movwf	CalcMQ135@ratio2^(0+128)
  3698  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  3699  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  3700  00F5  0832               	movf	?___ftmul+1,w
  3701  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  3702  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  3703  00F8  00B6               	movwf	(CalcMQ135@ratio2+1)^(0+128)
  3704  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  3705  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  3706  00FB  0833               	movf	?___ftmul+2,w
  3707  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  3708  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  3709  00FE  00B7               	movwf	(CalcMQ135@ratio2+2)^(0+128)
  3710                           
  3711                           ;mq135_module.h: 100: float ratio3 = ratio2 * ratio;
  3712  00FF  0844               	movf	CalcMQ135@ratio^(0+128),w
  3713  0100  1283               	bcf	3,5	;RP0=0, select bank0
  3714  0101  1303               	bcf	3,6	;RP1=0, select bank0
  3715  0102  00B1               	movwf	___ftmul@f1
  3716  0103  1683               	bsf	3,5	;RP0=1, select bank1
  3717  0104  1303               	bcf	3,6	;RP1=0, select bank1
  3718  0105  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3719  0106  1283               	bcf	3,5	;RP0=0, select bank0
  3720  0107  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0108  00B2               	movwf	___ftmul@f1+1
  3722  0109  1683               	bsf	3,5	;RP0=1, select bank1
  3723  010A  1303               	bcf	3,6	;RP1=0, select bank1
  3724  010B  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3725  010C  1283               	bcf	3,5	;RP0=0, select bank0
  3726  010D  1303               	bcf	3,6	;RP1=0, select bank0
  3727  010E  00B3               	movwf	___ftmul@f1+2
  3728  010F  1683               	bsf	3,5	;RP0=1, select bank1
  3729  0110  1303               	bcf	3,6	;RP1=0, select bank1
  3730  0111  0835               	movf	CalcMQ135@ratio2^(0+128),w
  3731  0112  1283               	bcf	3,5	;RP0=0, select bank0
  3732  0113  1303               	bcf	3,6	;RP1=0, select bank0
  3733  0114  00B4               	movwf	___ftmul@f2
  3734  0115  1683               	bsf	3,5	;RP0=1, select bank1
  3735  0116  1303               	bcf	3,6	;RP1=0, select bank1
  3736  0117  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  3737  0118  1283               	bcf	3,5	;RP0=0, select bank0
  3738  0119  1303               	bcf	3,6	;RP1=0, select bank0
  3739  011A  00B5               	movwf	___ftmul@f2+1
  3740  011B  1683               	bsf	3,5	;RP0=1, select bank1
  3741  011C  1303               	bcf	3,6	;RP1=0, select bank1
  3742  011D  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  3743  011E  1283               	bcf	3,5	;RP0=0, select bank0
  3744  011F  1303               	bcf	3,6	;RP1=0, select bank0
  3745  0120  00B6               	movwf	___ftmul@f2+2
  3746  0121  120A  158A  2425  120A  118A  	fcall	___ftmul
  3747  0126  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0127  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0128  0831               	movf	?___ftmul,w
  3750  0129  1683               	bsf	3,5	;RP0=1, select bank1
  3751  012A  1303               	bcf	3,6	;RP1=0, select bank1
  3752  012B  00B8               	movwf	CalcMQ135@ratio3^(0+128)
  3753  012C  1283               	bcf	3,5	;RP0=0, select bank0
  3754  012D  1303               	bcf	3,6	;RP1=0, select bank0
  3755  012E  0832               	movf	?___ftmul+1,w
  3756  012F  1683               	bsf	3,5	;RP0=1, select bank1
  3757  0130  1303               	bcf	3,6	;RP1=0, select bank1
  3758  0131  00B9               	movwf	(CalcMQ135@ratio3+1)^(0+128)
  3759  0132  1283               	bcf	3,5	;RP0=0, select bank0
  3760  0133  1303               	bcf	3,6	;RP1=0, select bank0
  3761  0134  0833               	movf	?___ftmul+2,w
  3762  0135  1683               	bsf	3,5	;RP0=1, select bank1
  3763  0136  1303               	bcf	3,6	;RP1=0, select bank1
  3764  0137  00BA               	movwf	(CalcMQ135@ratio3+2)^(0+128)
  3765                           
  3766                           ;mq135_module.h: 101: float ratio4 = ratio3 * ratio;
  3767  0138  0844               	movf	CalcMQ135@ratio^(0+128),w
  3768  0139  1283               	bcf	3,5	;RP0=0, select bank0
  3769  013A  1303               	bcf	3,6	;RP1=0, select bank0
  3770  013B  00B1               	movwf	___ftmul@f1
  3771  013C  1683               	bsf	3,5	;RP0=1, select bank1
  3772  013D  1303               	bcf	3,6	;RP1=0, select bank1
  3773  013E  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3774  013F  1283               	bcf	3,5	;RP0=0, select bank0
  3775  0140  1303               	bcf	3,6	;RP1=0, select bank0
  3776  0141  00B2               	movwf	___ftmul@f1+1
  3777  0142  1683               	bsf	3,5	;RP0=1, select bank1
  3778  0143  1303               	bcf	3,6	;RP1=0, select bank1
  3779  0144  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3780  0145  1283               	bcf	3,5	;RP0=0, select bank0
  3781  0146  1303               	bcf	3,6	;RP1=0, select bank0
  3782  0147  00B3               	movwf	___ftmul@f1+2
  3783  0148  1683               	bsf	3,5	;RP0=1, select bank1
  3784  0149  1303               	bcf	3,6	;RP1=0, select bank1
  3785  014A  0838               	movf	CalcMQ135@ratio3^(0+128),w
  3786  014B  1283               	bcf	3,5	;RP0=0, select bank0
  3787  014C  1303               	bcf	3,6	;RP1=0, select bank0
  3788  014D  00B4               	movwf	___ftmul@f2
  3789  014E  1683               	bsf	3,5	;RP0=1, select bank1
  3790  014F  1303               	bcf	3,6	;RP1=0, select bank1
  3791  0150  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  3792  0151  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0152  1303               	bcf	3,6	;RP1=0, select bank0
  3794  0153  00B5               	movwf	___ftmul@f2+1
  3795  0154  1683               	bsf	3,5	;RP0=1, select bank1
  3796  0155  1303               	bcf	3,6	;RP1=0, select bank1
  3797  0156  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  3798  0157  1283               	bcf	3,5	;RP0=0, select bank0
  3799  0158  1303               	bcf	3,6	;RP1=0, select bank0
  3800  0159  00B6               	movwf	___ftmul@f2+2
  3801  015A  120A  158A  2425  120A  118A  	fcall	___ftmul
  3802  015F  1283               	bcf	3,5	;RP0=0, select bank0
  3803  0160  1303               	bcf	3,6	;RP1=0, select bank0
  3804  0161  0831               	movf	?___ftmul,w
  3805  0162  1683               	bsf	3,5	;RP0=1, select bank1
  3806  0163  1303               	bcf	3,6	;RP1=0, select bank1
  3807  0164  00BB               	movwf	CalcMQ135@ratio4^(0+128)
  3808  0165  1283               	bcf	3,5	;RP0=0, select bank0
  3809  0166  1303               	bcf	3,6	;RP1=0, select bank0
  3810  0167  0832               	movf	?___ftmul+1,w
  3811  0168  1683               	bsf	3,5	;RP0=1, select bank1
  3812  0169  1303               	bcf	3,6	;RP1=0, select bank1
  3813  016A  00BC               	movwf	(CalcMQ135@ratio4+1)^(0+128)
  3814  016B  1283               	bcf	3,5	;RP0=0, select bank0
  3815  016C  1303               	bcf	3,6	;RP1=0, select bank0
  3816  016D  0833               	movf	?___ftmul+2,w
  3817  016E  1683               	bsf	3,5	;RP0=1, select bank1
  3818  016F  1303               	bcf	3,6	;RP1=0, select bank1
  3819  0170  00BD               	movwf	(CalcMQ135@ratio4+2)^(0+128)
  3820                           
  3821                           ;mq135_module.h: 102: float ratio5 = ratio4 * ratio;
  3822  0171  0844               	movf	CalcMQ135@ratio^(0+128),w
  3823  0172  1283               	bcf	3,5	;RP0=0, select bank0
  3824  0173  1303               	bcf	3,6	;RP1=0, select bank0
  3825  0174  00B1               	movwf	___ftmul@f1
  3826  0175  1683               	bsf	3,5	;RP0=1, select bank1
  3827  0176  1303               	bcf	3,6	;RP1=0, select bank1
  3828  0177  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3829  0178  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0179  1303               	bcf	3,6	;RP1=0, select bank0
  3831  017A  00B2               	movwf	___ftmul@f1+1
  3832  017B  1683               	bsf	3,5	;RP0=1, select bank1
  3833  017C  1303               	bcf	3,6	;RP1=0, select bank1
  3834  017D  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3835  017E  1283               	bcf	3,5	;RP0=0, select bank0
  3836  017F  1303               	bcf	3,6	;RP1=0, select bank0
  3837  0180  00B3               	movwf	___ftmul@f1+2
  3838  0181  1683               	bsf	3,5	;RP0=1, select bank1
  3839  0182  1303               	bcf	3,6	;RP1=0, select bank1
  3840  0183  083B               	movf	CalcMQ135@ratio4^(0+128),w
  3841  0184  1283               	bcf	3,5	;RP0=0, select bank0
  3842  0185  1303               	bcf	3,6	;RP1=0, select bank0
  3843  0186  00B4               	movwf	___ftmul@f2
  3844  0187  1683               	bsf	3,5	;RP0=1, select bank1
  3845  0188  1303               	bcf	3,6	;RP1=0, select bank1
  3846  0189  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  3847  018A  1283               	bcf	3,5	;RP0=0, select bank0
  3848  018B  1303               	bcf	3,6	;RP1=0, select bank0
  3849  018C  00B5               	movwf	___ftmul@f2+1
  3850  018D  1683               	bsf	3,5	;RP0=1, select bank1
  3851  018E  1303               	bcf	3,6	;RP1=0, select bank1
  3852  018F  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  3853  0190  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0191  1303               	bcf	3,6	;RP1=0, select bank0
  3855  0192  00B6               	movwf	___ftmul@f2+2
  3856  0193  120A  158A  2425  120A  118A  	fcall	___ftmul
  3857  0198  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0199  1303               	bcf	3,6	;RP1=0, select bank0
  3859  019A  0831               	movf	?___ftmul,w
  3860  019B  1683               	bsf	3,5	;RP0=1, select bank1
  3861  019C  1303               	bcf	3,6	;RP1=0, select bank1
  3862  019D  00BE               	movwf	CalcMQ135@ratio5^(0+128)
  3863  019E  1283               	bcf	3,5	;RP0=0, select bank0
  3864  019F  1303               	bcf	3,6	;RP1=0, select bank0
  3865  01A0  0832               	movf	?___ftmul+1,w
  3866  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  3867  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  3868  01A3  00BF               	movwf	(CalcMQ135@ratio5+1)^(0+128)
  3869  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  3870  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  3871  01A6  0833               	movf	?___ftmul+2,w
  3872  01A7  1683               	bsf	3,5	;RP0=1, select bank1
  3873  01A8  1303               	bcf	3,6	;RP1=0, select bank1
  3874  01A9  00C0               	movwf	(CalcMQ135@ratio5+2)^(0+128)
  3875                           
  3876                           ;mq135_module.h: 103: float ratio6 = ratio5 * ratio;
  3877  01AA  0844               	movf	CalcMQ135@ratio^(0+128),w
  3878  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  3879  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  3880  01AD  00B1               	movwf	___ftmul@f1
  3881  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  3882  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  3883  01B0  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3884  01B1  1283               	bcf	3,5	;RP0=0, select bank0
  3885  01B2  1303               	bcf	3,6	;RP1=0, select bank0
  3886  01B3  00B2               	movwf	___ftmul@f1+1
  3887  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  3888  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  3889  01B6  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3890  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  3891  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  3892  01B9  00B3               	movwf	___ftmul@f1+2
  3893  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  3894  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  3895  01BC  083E               	movf	CalcMQ135@ratio5^(0+128),w
  3896  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  3897  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  3898  01BF  00B4               	movwf	___ftmul@f2
  3899  01C0  1683               	bsf	3,5	;RP0=1, select bank1
  3900  01C1  1303               	bcf	3,6	;RP1=0, select bank1
  3901  01C2  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  3902  01C3  1283               	bcf	3,5	;RP0=0, select bank0
  3903  01C4  1303               	bcf	3,6	;RP1=0, select bank0
  3904  01C5  00B5               	movwf	___ftmul@f2+1
  3905  01C6  1683               	bsf	3,5	;RP0=1, select bank1
  3906  01C7  1303               	bcf	3,6	;RP1=0, select bank1
  3907  01C8  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  3908  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  3909  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  3910  01CB  00B6               	movwf	___ftmul@f2+2
  3911  01CC  120A  158A  2425  120A  118A  	fcall	___ftmul
  3912  01D1  1283               	bcf	3,5	;RP0=0, select bank0
  3913  01D2  1303               	bcf	3,6	;RP1=0, select bank0
  3914  01D3  0831               	movf	?___ftmul,w
  3915  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  3916  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  3917  01D6  00A3               	movwf	CalcMQ135@ratio6^(0+128)
  3918  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  3919  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  3920  01D9  0832               	movf	?___ftmul+1,w
  3921  01DA  1683               	bsf	3,5	;RP0=1, select bank1
  3922  01DB  1303               	bcf	3,6	;RP1=0, select bank1
  3923  01DC  00A4               	movwf	(CalcMQ135@ratio6+1)^(0+128)
  3924  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  3925  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  3926  01DF  0833               	movf	?___ftmul+2,w
  3927  01E0  1683               	bsf	3,5	;RP0=1, select bank1
  3928  01E1  1303               	bcf	3,6	;RP1=0, select bank1
  3929  01E2  00A5               	movwf	(CalcMQ135@ratio6+2)^(0+128)
  3930                           
  3931                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  3932                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  3933  01E3  309C               	movlw	156
  3934  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  3935  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  3936  01E6  00B1               	movwf	___ftmul@f1
  3937  01E7  30B2               	movlw	178
  3938  01E8  00B2               	movwf	___ftmul@f1+1
  3939  01E9  303F               	movlw	63
  3940  01EA  00B3               	movwf	___ftmul@f1+2
  3941  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  3942  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  3943  01ED  0835               	movf	CalcMQ135@ratio2^(0+128),w
  3944  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  3945  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  3946  01F0  00B4               	movwf	___ftmul@f2
  3947  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  3948  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  3949  01F3  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  3950  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  3951  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  3952  01F6  00B5               	movwf	___ftmul@f2+1
  3953  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  3954  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  3955  01F9  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  3956  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  3957  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  3958  01FC  00B6               	movwf	___ftmul@f2+2
  3959  01FD  120A  158A  2425  120A  118A  	fcall	___ftmul
  3960  0202  1283               	bcf	3,5	;RP0=0, select bank0
  3961  0203  1303               	bcf	3,6	;RP1=0, select bank0
  3962  0204  0831               	movf	?___ftmul,w
  3963  0205  00C1               	movwf	___ftadd@f1
  3964  0206  0832               	movf	?___ftmul+1,w
  3965  0207  00C2               	movwf	___ftadd@f1+1
  3966  0208  0833               	movf	?___ftmul+2,w
  3967  0209  00C3               	movwf	___ftadd@f1+2
  3968  020A  30A9               	movlw	169
  3969  020B  00B1               	movwf	___ftmul@f1
  3970  020C  30DE               	movlw	222
  3971  020D  00B2               	movwf	___ftmul@f1+1
  3972  020E  303C               	movlw	60
  3973  020F  00B3               	movwf	___ftmul@f1+2
  3974  0210  1683               	bsf	3,5	;RP0=1, select bank1
  3975  0211  1303               	bcf	3,6	;RP1=0, select bank1
  3976  0212  0844               	movf	CalcMQ135@ratio^(0+128),w
  3977  0213  1283               	bcf	3,5	;RP0=0, select bank0
  3978  0214  1303               	bcf	3,6	;RP1=0, select bank0
  3979  0215  00B4               	movwf	___ftmul@f2
  3980  0216  1683               	bsf	3,5	;RP0=1, select bank1
  3981  0217  1303               	bcf	3,6	;RP1=0, select bank1
  3982  0218  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3983  0219  1283               	bcf	3,5	;RP0=0, select bank0
  3984  021A  1303               	bcf	3,6	;RP1=0, select bank0
  3985  021B  00B5               	movwf	___ftmul@f2+1
  3986  021C  1683               	bsf	3,5	;RP0=1, select bank1
  3987  021D  1303               	bcf	3,6	;RP1=0, select bank1
  3988  021E  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3989  021F  1283               	bcf	3,5	;RP0=0, select bank0
  3990  0220  1303               	bcf	3,6	;RP1=0, select bank0
  3991  0221  00B6               	movwf	___ftmul@f2+2
  3992  0222  120A  158A  2425  120A  118A  	fcall	___ftmul
  3993  0227  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0228  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0229  0831               	movf	?___ftmul,w
  3996  022A  00C4               	movwf	___ftadd@f2
  3997  022B  0832               	movf	?___ftmul+1,w
  3998  022C  00C5               	movwf	___ftadd@f2+1
  3999  022D  0833               	movf	?___ftmul+2,w
  4000  022E  00C6               	movwf	___ftadd@f2+2
  4001  022F  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4002  0234  1283               	bcf	3,5	;RP0=0, select bank0
  4003  0235  1303               	bcf	3,6	;RP1=0, select bank0
  4004  0236  0841               	movf	?___ftadd,w
  4005  0237  1683               	bsf	3,5	;RP0=1, select bank1
  4006  0238  1303               	bcf	3,6	;RP1=0, select bank1
  4007  0239  00A6               	movwf	_CalcMQ135$774^(0+128)
  4008  023A  1283               	bcf	3,5	;RP0=0, select bank0
  4009  023B  1303               	bcf	3,6	;RP1=0, select bank0
  4010  023C  0842               	movf	?___ftadd+1,w
  4011  023D  1683               	bsf	3,5	;RP0=1, select bank1
  4012  023E  1303               	bcf	3,6	;RP1=0, select bank1
  4013  023F  00A7               	movwf	(_CalcMQ135$774+1)^(0+128)
  4014  0240  1283               	bcf	3,5	;RP0=0, select bank0
  4015  0241  1303               	bcf	3,6	;RP1=0, select bank0
  4016  0242  0843               	movf	?___ftadd+2,w
  4017  0243  1683               	bsf	3,5	;RP0=1, select bank1
  4018  0244  1303               	bcf	3,6	;RP1=0, select bank1
  4019  0245  00A8               	movwf	(_CalcMQ135$774+2)^(0+128)
  4020                           
  4021                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  4022                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  4023  0246  30EE               	movlw	238
  4024  0247  1283               	bcf	3,5	;RP0=0, select bank0
  4025  0248  1303               	bcf	3,6	;RP1=0, select bank0
  4026  0249  00B1               	movwf	___ftmul@f1
  4027  024A  30EB               	movlw	235
  4028  024B  00B2               	movwf	___ftmul@f1+1
  4029  024C  303A               	movlw	58
  4030  024D  00B3               	movwf	___ftmul@f1+2
  4031  024E  1683               	bsf	3,5	;RP0=1, select bank1
  4032  024F  1303               	bcf	3,6	;RP1=0, select bank1
  4033  0250  0838               	movf	CalcMQ135@ratio3^(0+128),w
  4034  0251  1283               	bcf	3,5	;RP0=0, select bank0
  4035  0252  1303               	bcf	3,6	;RP1=0, select bank0
  4036  0253  00B4               	movwf	___ftmul@f2
  4037  0254  1683               	bsf	3,5	;RP0=1, select bank1
  4038  0255  1303               	bcf	3,6	;RP1=0, select bank1
  4039  0256  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  4040  0257  1283               	bcf	3,5	;RP0=0, select bank0
  4041  0258  1303               	bcf	3,6	;RP1=0, select bank0
  4042  0259  00B5               	movwf	___ftmul@f2+1
  4043  025A  1683               	bsf	3,5	;RP0=1, select bank1
  4044  025B  1303               	bcf	3,6	;RP1=0, select bank1
  4045  025C  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  4046  025D  1283               	bcf	3,5	;RP0=0, select bank0
  4047  025E  1303               	bcf	3,6	;RP1=0, select bank0
  4048  025F  00B6               	movwf	___ftmul@f2+2
  4049  0260  120A  158A  2425  120A  118A  	fcall	___ftmul
  4050  0265  1283               	bcf	3,5	;RP0=0, select bank0
  4051  0266  1303               	bcf	3,6	;RP1=0, select bank0
  4052  0267  0831               	movf	?___ftmul,w
  4053  0268  00C1               	movwf	___ftadd@f1
  4054  0269  0832               	movf	?___ftmul+1,w
  4055  026A  00C2               	movwf	___ftadd@f1+1
  4056  026B  0833               	movf	?___ftmul+2,w
  4057  026C  00C3               	movwf	___ftadd@f1+2
  4058  026D  1683               	bsf	3,5	;RP0=1, select bank1
  4059  026E  1303               	bcf	3,6	;RP1=0, select bank1
  4060  026F  0826               	movf	_CalcMQ135$774^(0+128),w
  4061  0270  1283               	bcf	3,5	;RP0=0, select bank0
  4062  0271  1303               	bcf	3,6	;RP1=0, select bank0
  4063  0272  00C4               	movwf	___ftadd@f2
  4064  0273  1683               	bsf	3,5	;RP0=1, select bank1
  4065  0274  1303               	bcf	3,6	;RP1=0, select bank1
  4066  0275  0827               	movf	(_CalcMQ135$774+1)^(0+128),w
  4067  0276  1283               	bcf	3,5	;RP0=0, select bank0
  4068  0277  1303               	bcf	3,6	;RP1=0, select bank0
  4069  0278  00C5               	movwf	___ftadd@f2+1
  4070  0279  1683               	bsf	3,5	;RP0=1, select bank1
  4071  027A  1303               	bcf	3,6	;RP1=0, select bank1
  4072  027B  0828               	movf	(_CalcMQ135$774+2)^(0+128),w
  4073  027C  1283               	bcf	3,5	;RP0=0, select bank0
  4074  027D  1303               	bcf	3,6	;RP1=0, select bank0
  4075  027E  00C6               	movwf	___ftadd@f2+2
  4076  027F  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4077  0284  1283               	bcf	3,5	;RP0=0, select bank0
  4078  0285  1303               	bcf	3,6	;RP1=0, select bank0
  4079  0286  0841               	movf	?___ftadd,w
  4080  0287  1683               	bsf	3,5	;RP0=1, select bank1
  4081  0288  1303               	bcf	3,6	;RP1=0, select bank1
  4082  0289  00A9               	movwf	_CalcMQ135$775^(0+128)
  4083  028A  1283               	bcf	3,5	;RP0=0, select bank0
  4084  028B  1303               	bcf	3,6	;RP1=0, select bank0
  4085  028C  0842               	movf	?___ftadd+1,w
  4086  028D  1683               	bsf	3,5	;RP0=1, select bank1
  4087  028E  1303               	bcf	3,6	;RP1=0, select bank1
  4088  028F  00AA               	movwf	(_CalcMQ135$775+1)^(0+128)
  4089  0290  1283               	bcf	3,5	;RP0=0, select bank0
  4090  0291  1303               	bcf	3,6	;RP1=0, select bank0
  4091  0292  0843               	movf	?___ftadd+2,w
  4092  0293  1683               	bsf	3,5	;RP0=1, select bank1
  4093  0294  1303               	bcf	3,6	;RP1=0, select bank1
  4094  0295  00AB               	movwf	(_CalcMQ135$775+2)^(0+128)
  4095                           
  4096                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  4097                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  4098  0296  3074               	movlw	116
  4099  0297  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0298  1303               	bcf	3,6	;RP1=0, select bank0
  4101  0299  00B1               	movwf	___ftmul@f1
  4102  029A  305A               	movlw	90
  4103  029B  00B2               	movwf	___ftmul@f1+1
  4104  029C  30BB               	movlw	187
  4105  029D  00B3               	movwf	___ftmul@f1+2
  4106  029E  1683               	bsf	3,5	;RP0=1, select bank1
  4107  029F  1303               	bcf	3,6	;RP1=0, select bank1
  4108  02A0  083B               	movf	CalcMQ135@ratio4^(0+128),w
  4109  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  4110  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  4111  02A3  00B4               	movwf	___ftmul@f2
  4112  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  4113  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  4114  02A6  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  4115  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  4116  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  4117  02A9  00B5               	movwf	___ftmul@f2+1
  4118  02AA  1683               	bsf	3,5	;RP0=1, select bank1
  4119  02AB  1303               	bcf	3,6	;RP1=0, select bank1
  4120  02AC  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  4121  02AD  1283               	bcf	3,5	;RP0=0, select bank0
  4122  02AE  1303               	bcf	3,6	;RP1=0, select bank0
  4123  02AF  00B6               	movwf	___ftmul@f2+2
  4124  02B0  120A  158A  2425  120A  118A  	fcall	___ftmul
  4125  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  4126  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  4127  02B7  0831               	movf	?___ftmul,w
  4128  02B8  00C1               	movwf	___ftadd@f1
  4129  02B9  0832               	movf	?___ftmul+1,w
  4130  02BA  00C2               	movwf	___ftadd@f1+1
  4131  02BB  0833               	movf	?___ftmul+2,w
  4132  02BC  00C3               	movwf	___ftadd@f1+2
  4133  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  4134  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  4135  02BF  0829               	movf	_CalcMQ135$775^(0+128),w
  4136  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  4137  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  4138  02C2  00C4               	movwf	___ftadd@f2
  4139  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  4140  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  4141  02C5  082A               	movf	(_CalcMQ135$775+1)^(0+128),w
  4142  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  4143  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  4144  02C8  00C5               	movwf	___ftadd@f2+1
  4145  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  4146  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  4147  02CB  082B               	movf	(_CalcMQ135$775+2)^(0+128),w
  4148  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  4149  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  4150  02CE  00C6               	movwf	___ftadd@f2+2
  4151  02CF  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4152  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  4153  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  4154  02D6  0841               	movf	?___ftadd,w
  4155  02D7  1683               	bsf	3,5	;RP0=1, select bank1
  4156  02D8  1303               	bcf	3,6	;RP1=0, select bank1
  4157  02D9  00AC               	movwf	_CalcMQ135$776^(0+128)
  4158  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  4159  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  4160  02DC  0842               	movf	?___ftadd+1,w
  4161  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  4162  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  4163  02DF  00AD               	movwf	(_CalcMQ135$776+1)^(0+128)
  4164  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  4165  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  4166  02E2  0843               	movf	?___ftadd+2,w
  4167  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  4168  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  4169  02E5  00AE               	movwf	(_CalcMQ135$776+2)^(0+128)
  4170                           
  4171                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  4172                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  4173  02E6  3010               	movlw	16
  4174  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  4175  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  4176  02E9  00B1               	movwf	___ftmul@f1
  4177  02EA  30FC               	movlw	252
  4178  02EB  00B2               	movwf	___ftmul@f1+1
  4179  02EC  30BA               	movlw	186
  4180  02ED  00B3               	movwf	___ftmul@f1+2
  4181  02EE  1683               	bsf	3,5	;RP0=1, select bank1
  4182  02EF  1303               	bcf	3,6	;RP1=0, select bank1
  4183  02F0  083E               	movf	CalcMQ135@ratio5^(0+128),w
  4184  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  4185  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  4186  02F3  00B4               	movwf	___ftmul@f2
  4187  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  4188  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  4189  02F6  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  4190  02F7  1283               	bcf	3,5	;RP0=0, select bank0
  4191  02F8  1303               	bcf	3,6	;RP1=0, select bank0
  4192  02F9  00B5               	movwf	___ftmul@f2+1
  4193  02FA  1683               	bsf	3,5	;RP0=1, select bank1
  4194  02FB  1303               	bcf	3,6	;RP1=0, select bank1
  4195  02FC  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  4196  02FD  1283               	bcf	3,5	;RP0=0, select bank0
  4197  02FE  1303               	bcf	3,6	;RP1=0, select bank0
  4198  02FF  00B6               	movwf	___ftmul@f2+2
  4199  0300  120A  158A  2425  120A  118A  	fcall	___ftmul
  4200  0305  1283               	bcf	3,5	;RP0=0, select bank0
  4201  0306  1303               	bcf	3,6	;RP1=0, select bank0
  4202  0307  0831               	movf	?___ftmul,w
  4203  0308  00C1               	movwf	___ftadd@f1
  4204  0309  0832               	movf	?___ftmul+1,w
  4205  030A  00C2               	movwf	___ftadd@f1+1
  4206  030B  0833               	movf	?___ftmul+2,w
  4207  030C  00C3               	movwf	___ftadd@f1+2
  4208  030D  1683               	bsf	3,5	;RP0=1, select bank1
  4209  030E  1303               	bcf	3,6	;RP1=0, select bank1
  4210  030F  082C               	movf	_CalcMQ135$776^(0+128),w
  4211  0310  1283               	bcf	3,5	;RP0=0, select bank0
  4212  0311  1303               	bcf	3,6	;RP1=0, select bank0
  4213  0312  00C4               	movwf	___ftadd@f2
  4214  0313  1683               	bsf	3,5	;RP0=1, select bank1
  4215  0314  1303               	bcf	3,6	;RP1=0, select bank1
  4216  0315  082D               	movf	(_CalcMQ135$776+1)^(0+128),w
  4217  0316  1283               	bcf	3,5	;RP0=0, select bank0
  4218  0317  1303               	bcf	3,6	;RP1=0, select bank0
  4219  0318  00C5               	movwf	___ftadd@f2+1
  4220  0319  1683               	bsf	3,5	;RP0=1, select bank1
  4221  031A  1303               	bcf	3,6	;RP1=0, select bank1
  4222  031B  082E               	movf	(_CalcMQ135$776+2)^(0+128),w
  4223  031C  1283               	bcf	3,5	;RP0=0, select bank0
  4224  031D  1303               	bcf	3,6	;RP1=0, select bank0
  4225  031E  00C6               	movwf	___ftadd@f2+2
  4226  031F  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4227  0324  1283               	bcf	3,5	;RP0=0, select bank0
  4228  0325  1303               	bcf	3,6	;RP1=0, select bank0
  4229  0326  0841               	movf	?___ftadd,w
  4230  0327  1683               	bsf	3,5	;RP0=1, select bank1
  4231  0328  1303               	bcf	3,6	;RP1=0, select bank1
  4232  0329  00AF               	movwf	_CalcMQ135$777^(0+128)
  4233  032A  1283               	bcf	3,5	;RP0=0, select bank0
  4234  032B  1303               	bcf	3,6	;RP1=0, select bank0
  4235  032C  0842               	movf	?___ftadd+1,w
  4236  032D  1683               	bsf	3,5	;RP0=1, select bank1
  4237  032E  1303               	bcf	3,6	;RP1=0, select bank1
  4238  032F  00B0               	movwf	(_CalcMQ135$777+1)^(0+128)
  4239  0330  1283               	bcf	3,5	;RP0=0, select bank0
  4240  0331  1303               	bcf	3,6	;RP1=0, select bank0
  4241  0332  0843               	movf	?___ftadd+2,w
  4242  0333  1683               	bsf	3,5	;RP0=1, select bank1
  4243  0334  1303               	bcf	3,6	;RP1=0, select bank1
  4244  0335  00B1               	movwf	(_CalcMQ135$777+2)^(0+128)
  4245                           
  4246                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  4247                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  4248  0336  30A8               	movlw	168
  4249  0337  1283               	bcf	3,5	;RP0=0, select bank0
  4250  0338  1303               	bcf	3,6	;RP1=0, select bank0
  4251  0339  00B1               	movwf	___ftmul@f1
  4252  033A  3090               	movlw	144
  4253  033B  00B2               	movwf	___ftmul@f1+1
  4254  033C  303F               	movlw	63
  4255  033D  00B3               	movwf	___ftmul@f1+2
  4256  033E  1683               	bsf	3,5	;RP0=1, select bank1
  4257  033F  1303               	bcf	3,6	;RP1=0, select bank1
  4258  0340  0823               	movf	CalcMQ135@ratio6^(0+128),w
  4259  0341  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0342  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0343  00B4               	movwf	___ftmul@f2
  4262  0344  1683               	bsf	3,5	;RP0=1, select bank1
  4263  0345  1303               	bcf	3,6	;RP1=0, select bank1
  4264  0346  0824               	movf	(CalcMQ135@ratio6+1)^(0+128),w
  4265  0347  1283               	bcf	3,5	;RP0=0, select bank0
  4266  0348  1303               	bcf	3,6	;RP1=0, select bank0
  4267  0349  00B5               	movwf	___ftmul@f2+1
  4268  034A  1683               	bsf	3,5	;RP0=1, select bank1
  4269  034B  1303               	bcf	3,6	;RP1=0, select bank1
  4270  034C  0825               	movf	(CalcMQ135@ratio6+2)^(0+128),w
  4271  034D  1283               	bcf	3,5	;RP0=0, select bank0
  4272  034E  1303               	bcf	3,6	;RP1=0, select bank0
  4273  034F  00B6               	movwf	___ftmul@f2+2
  4274  0350  120A  158A  2425  120A  118A  	fcall	___ftmul
  4275  0355  1283               	bcf	3,5	;RP0=0, select bank0
  4276  0356  1303               	bcf	3,6	;RP1=0, select bank0
  4277  0357  0831               	movf	?___ftmul,w
  4278  0358  00C1               	movwf	___ftadd@f1
  4279  0359  0832               	movf	?___ftmul+1,w
  4280  035A  00C2               	movwf	___ftadd@f1+1
  4281  035B  0833               	movf	?___ftmul+2,w
  4282  035C  00C3               	movwf	___ftadd@f1+2
  4283  035D  1683               	bsf	3,5	;RP0=1, select bank1
  4284  035E  1303               	bcf	3,6	;RP1=0, select bank1
  4285  035F  082F               	movf	_CalcMQ135$777^(0+128),w
  4286  0360  1283               	bcf	3,5	;RP0=0, select bank0
  4287  0361  1303               	bcf	3,6	;RP1=0, select bank0
  4288  0362  00C4               	movwf	___ftadd@f2
  4289  0363  1683               	bsf	3,5	;RP0=1, select bank1
  4290  0364  1303               	bcf	3,6	;RP1=0, select bank1
  4291  0365  0830               	movf	(_CalcMQ135$777+1)^(0+128),w
  4292  0366  1283               	bcf	3,5	;RP0=0, select bank0
  4293  0367  1303               	bcf	3,6	;RP1=0, select bank0
  4294  0368  00C5               	movwf	___ftadd@f2+1
  4295  0369  1683               	bsf	3,5	;RP0=1, select bank1
  4296  036A  1303               	bcf	3,6	;RP1=0, select bank1
  4297  036B  0831               	movf	(_CalcMQ135$777+2)^(0+128),w
  4298  036C  1283               	bcf	3,5	;RP0=0, select bank0
  4299  036D  1303               	bcf	3,6	;RP1=0, select bank0
  4300  036E  00C6               	movwf	___ftadd@f2+2
  4301  036F  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4302  0374  1283               	bcf	3,5	;RP0=0, select bank0
  4303  0375  1303               	bcf	3,6	;RP1=0, select bank0
  4304  0376  0841               	movf	?___ftadd,w
  4305  0377  1683               	bsf	3,5	;RP0=1, select bank1
  4306  0378  1303               	bcf	3,6	;RP1=0, select bank1
  4307  0379  00B2               	movwf	_CalcMQ135$778^(0+128)
  4308  037A  1283               	bcf	3,5	;RP0=0, select bank0
  4309  037B  1303               	bcf	3,6	;RP1=0, select bank0
  4310  037C  0842               	movf	?___ftadd+1,w
  4311  037D  1683               	bsf	3,5	;RP0=1, select bank1
  4312  037E  1303               	bcf	3,6	;RP1=0, select bank1
  4313  037F  00B3               	movwf	(_CalcMQ135$778+1)^(0+128)
  4314  0380  1283               	bcf	3,5	;RP0=0, select bank0
  4315  0381  1303               	bcf	3,6	;RP1=0, select bank0
  4316  0382  0843               	movf	?___ftadd+2,w
  4317  0383  1683               	bsf	3,5	;RP0=1, select bank1
  4318  0384  1303               	bcf	3,6	;RP1=0, select bank1
  4319  0385  00B4               	movwf	(_CalcMQ135$778+2)^(0+128)
  4320                           
  4321                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  4322                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  4323  0386  3080               	movlw	128
  4324  0387  1283               	bcf	3,5	;RP0=0, select bank0
  4325  0388  1303               	bcf	3,6	;RP1=0, select bank0
  4326  0389  00C1               	movwf	___ftadd@f1
  4327  038A  30B7               	movlw	183
  4328  038B  00C2               	movwf	___ftadd@f1+1
  4329  038C  3039               	movlw	57
  4330  038D  00C3               	movwf	___ftadd@f1+2
  4331  038E  1683               	bsf	3,5	;RP0=1, select bank1
  4332  038F  1303               	bcf	3,6	;RP1=0, select bank1
  4333  0390  0832               	movf	_CalcMQ135$778^(0+128),w
  4334  0391  1283               	bcf	3,5	;RP0=0, select bank0
  4335  0392  1303               	bcf	3,6	;RP1=0, select bank0
  4336  0393  00C4               	movwf	___ftadd@f2
  4337  0394  1683               	bsf	3,5	;RP0=1, select bank1
  4338  0395  1303               	bcf	3,6	;RP1=0, select bank1
  4339  0396  0833               	movf	(_CalcMQ135$778+1)^(0+128),w
  4340  0397  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0398  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0399  00C5               	movwf	___ftadd@f2+1
  4343  039A  1683               	bsf	3,5	;RP0=1, select bank1
  4344  039B  1303               	bcf	3,6	;RP1=0, select bank1
  4345  039C  0834               	movf	(_CalcMQ135$778+2)^(0+128),w
  4346  039D  1283               	bcf	3,5	;RP0=0, select bank0
  4347  039E  1303               	bcf	3,6	;RP1=0, select bank0
  4348  039F  00C6               	movwf	___ftadd@f2+2
  4349  03A0  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4350  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  4351  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  4352  03A7  0841               	movf	?___ftadd,w
  4353  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  4354  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  4355  03AA  00C1               	movwf	CalcMQ135@co2^(0+128)
  4356  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  4357  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  4358  03AD  0842               	movf	?___ftadd+1,w
  4359  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  4360  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  4361  03B0  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  4362  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  4363  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  4364  03B3  0843               	movf	?___ftadd+2,w
  4365  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  4366  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  4367  03B6  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  4368                           
  4369                           ;mq135_module.h: 109: co2 *= 415.58;
  4370  03B7  30CA               	movlw	202
  4371  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  4372  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  4373  03BA  00B1               	movwf	___ftmul@f1
  4374  03BB  30CF               	movlw	207
  4375  03BC  00B2               	movwf	___ftmul@f1+1
  4376  03BD  3043               	movlw	67
  4377  03BE  00B3               	movwf	___ftmul@f1+2
  4378  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  4379  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  4380  03C1  0841               	movf	CalcMQ135@co2^(0+128),w
  4381  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  4382  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  4383  03C4  00B4               	movwf	___ftmul@f2
  4384  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  4385  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  4386  03C7  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  4387  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  4388  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  4389  03CA  00B5               	movwf	___ftmul@f2+1
  4390  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  4391  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  4392  03CD  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  4393  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  4394  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  4395  03D0  00B6               	movwf	___ftmul@f2+2
  4396  03D1  120A  158A  2425   	fcall	___ftmul
  4397  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  4398  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  4399  03D6  0831               	movf	?___ftmul,w
  4400  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  4401  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  4402  03D9  00C1               	movwf	CalcMQ135@co2^(0+128)
  4403  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  4404  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  4405  03DC  0832               	movf	?___ftmul+1,w
  4406  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  4407  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  4408  03DF  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  4409  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  4410  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  4411  03E2  0833               	movf	?___ftmul+2,w
  4412  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  4413  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  4414  03E5  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  4415                           
  4416                           ;mq135_module.h: 110: return co2;
  4417  03E6  0841               	movf	CalcMQ135@co2^(0+128),w
  4418  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  4419  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  4420  03E9  00D1               	movwf	?_CalcMQ135
  4421  03EA  1683               	bsf	3,5	;RP0=1, select bank1
  4422  03EB  1303               	bcf	3,6	;RP1=0, select bank1
  4423  03EC  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  4424  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  4425  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  4426  03EF  00D2               	movwf	?_CalcMQ135+1
  4427  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  4428  03F1  1303               	bcf	3,6	;RP1=0, select bank1
  4429  03F2  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  4430  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  4431  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  4432  03F5  00D3               	movwf	?_CalcMQ135+2
  4433  03F6  0008               	return
  4434  03F7                     __end_of_CalcMQ135:	
  4435                           
  4436                           	psect	text12
  4437  0B6D                     __ptext12:	
  4438 ;; *************** function ___ftdiv *****************
  4439 ;; Defined at:
  4440 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4441 ;; Parameters:    Size  Location     Type
  4442 ;;  f2              3   33[BANK0 ] float 
  4443 ;;  f1              3   36[BANK0 ] float 
  4444 ;; Auto vars:     Size  Location     Type
  4445 ;;  f3              3   44[BANK0 ] float 
  4446 ;;  sign            1   48[BANK0 ] unsigned char 
  4447 ;;  exp             1   47[BANK0 ] unsigned char 
  4448 ;;  cntr            1   43[BANK0 ] unsigned char 
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  3   33[BANK0 ] float 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0, pclath, cstack
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4458 ;;      Params:         0       6       0       0       0
  4459 ;;      Locals:         0       6       0       0       0
  4460 ;;      Temps:          0       4       0       0       0
  4461 ;;      Totals:         0      16       0       0       0
  4462 ;;Total ram usage:       16 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    3
  4465 ;; This function calls:
  4466 ;;		___ftpack
  4467 ;; This function is called by:
  4468 ;;		_CalcMQ135
  4469 ;; This function uses a non-reentrant model
  4470 ;;
  4471                           
  4472                           
  4473                           ;psect for function ___ftdiv
  4474  0B6D                     ___ftdiv:	
  4475                           
  4476                           ;incstack = 0
  4477                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4478  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  4479  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  4480  0B6F  0844               	movf	___ftdiv@f1,w
  4481  0B70  00C7               	movwf	??___ftdiv
  4482  0B71  0845               	movf	___ftdiv@f1+1,w
  4483  0B72  00C8               	movwf	??___ftdiv+1
  4484  0B73  0846               	movf	___ftdiv@f1+2,w
  4485  0B74  00C9               	movwf	??___ftdiv+2
  4486  0B75  1003               	clrc
  4487  0B76  0D48               	rlf	??___ftdiv+1,w
  4488  0B77  0D49               	rlf	??___ftdiv+2,w
  4489  0B78  00CA               	movwf	??___ftdiv+3
  4490  0B79  084A               	movf	??___ftdiv+3,w
  4491  0B7A  00CF               	movwf	___ftdiv@exp
  4492  0B7B  08CF               	movf	___ftdiv@exp,f
  4493  0B7C  1D03               	skipz
  4494  0B7D  2B85               	goto	l2355
  4495  0B7E  3000               	movlw	0
  4496  0B7F  00C1               	movwf	?___ftdiv
  4497  0B80  3000               	movlw	0
  4498  0B81  00C2               	movwf	?___ftdiv+1
  4499  0B82  3000               	movlw	0
  4500  0B83  00C3               	movwf	?___ftdiv+2
  4501  0B84  0008               	return
  4502  0B85                     l2355:	
  4503  0B85  0841               	movf	___ftdiv@f2,w
  4504  0B86  00C7               	movwf	??___ftdiv
  4505  0B87  0842               	movf	___ftdiv@f2+1,w
  4506  0B88  00C8               	movwf	??___ftdiv+1
  4507  0B89  0843               	movf	___ftdiv@f2+2,w
  4508  0B8A  00C9               	movwf	??___ftdiv+2
  4509  0B8B  1003               	clrc
  4510  0B8C  0D48               	rlf	??___ftdiv+1,w
  4511  0B8D  0D49               	rlf	??___ftdiv+2,w
  4512  0B8E  00CA               	movwf	??___ftdiv+3
  4513  0B8F  084A               	movf	??___ftdiv+3,w
  4514  0B90  00D0               	movwf	___ftdiv@sign
  4515  0B91  08D0               	movf	___ftdiv@sign,f
  4516  0B92  1D03               	skipz
  4517  0B93  2B9B               	goto	l2361
  4518  0B94  3000               	movlw	0
  4519  0B95  00C1               	movwf	?___ftdiv
  4520  0B96  3000               	movlw	0
  4521  0B97  00C2               	movwf	?___ftdiv+1
  4522  0B98  3000               	movlw	0
  4523  0B99  00C3               	movwf	?___ftdiv+2
  4524  0B9A  0008               	return
  4525  0B9B                     l2361:	
  4526  0B9B  3000               	movlw	0
  4527  0B9C  00CC               	movwf	___ftdiv@f3
  4528  0B9D  3000               	movlw	0
  4529  0B9E  00CD               	movwf	___ftdiv@f3+1
  4530  0B9F  3000               	movlw	0
  4531  0BA0  00CE               	movwf	___ftdiv@f3+2
  4532  0BA1  3089               	movlw	137
  4533  0BA2  0750               	addwf	___ftdiv@sign,w
  4534  0BA3  00C7               	movwf	??___ftdiv
  4535  0BA4  0847               	movf	??___ftdiv,w
  4536  0BA5  02CF               	subwf	___ftdiv@exp,f
  4537  0BA6  0844               	movf	___ftdiv@f1,w
  4538  0BA7  00C7               	movwf	??___ftdiv
  4539  0BA8  0845               	movf	___ftdiv@f1+1,w
  4540  0BA9  00C8               	movwf	??___ftdiv+1
  4541  0BAA  0846               	movf	___ftdiv@f1+2,w
  4542  0BAB  00C9               	movwf	??___ftdiv+2
  4543  0BAC  3010               	movlw	16
  4544  0BAD                     u2915:	
  4545  0BAD  1003               	clrc
  4546  0BAE  0CC9               	rrf	??___ftdiv+2,f
  4547  0BAF  0CC8               	rrf	??___ftdiv+1,f
  4548  0BB0  0CC7               	rrf	??___ftdiv,f
  4549  0BB1  3EFF               	addlw	-1
  4550  0BB2  1D03               	skipz
  4551  0BB3  2BAD               	goto	u2915
  4552  0BB4  0847               	movf	??___ftdiv,w
  4553  0BB5  00CA               	movwf	??___ftdiv+3
  4554  0BB6  084A               	movf	??___ftdiv+3,w
  4555  0BB7  00D0               	movwf	___ftdiv@sign
  4556  0BB8  0841               	movf	___ftdiv@f2,w
  4557  0BB9  00C7               	movwf	??___ftdiv
  4558  0BBA  0842               	movf	___ftdiv@f2+1,w
  4559  0BBB  00C8               	movwf	??___ftdiv+1
  4560  0BBC  0843               	movf	___ftdiv@f2+2,w
  4561  0BBD  00C9               	movwf	??___ftdiv+2
  4562  0BBE  3010               	movlw	16
  4563  0BBF                     u2925:	
  4564  0BBF  1003               	clrc
  4565  0BC0  0CC9               	rrf	??___ftdiv+2,f
  4566  0BC1  0CC8               	rrf	??___ftdiv+1,f
  4567  0BC2  0CC7               	rrf	??___ftdiv,f
  4568  0BC3  3EFF               	addlw	-1
  4569  0BC4  1D03               	skipz
  4570  0BC5  2BBF               	goto	u2925
  4571  0BC6  0847               	movf	??___ftdiv,w
  4572  0BC7  00CA               	movwf	??___ftdiv+3
  4573  0BC8  084A               	movf	??___ftdiv+3,w
  4574  0BC9  06D0               	xorwf	___ftdiv@sign,f
  4575  0BCA  3080               	movlw	128
  4576  0BCB  00C7               	movwf	??___ftdiv
  4577  0BCC  0847               	movf	??___ftdiv,w
  4578  0BCD  05D0               	andwf	___ftdiv@sign,f
  4579  0BCE  17C5               	bsf	___ftdiv@f1+1,7
  4580  0BCF  30FF               	movlw	255
  4581  0BD0  05C4               	andwf	___ftdiv@f1,f
  4582  0BD1  30FF               	movlw	255
  4583  0BD2  05C5               	andwf	___ftdiv@f1+1,f
  4584  0BD3  3000               	movlw	0
  4585  0BD4  05C6               	andwf	___ftdiv@f1+2,f
  4586  0BD5  17C2               	bsf	___ftdiv@f2+1,7
  4587  0BD6  30FF               	movlw	255
  4588  0BD7  05C1               	andwf	___ftdiv@f2,f
  4589  0BD8  30FF               	movlw	255
  4590  0BD9  05C2               	andwf	___ftdiv@f2+1,f
  4591  0BDA  3000               	movlw	0
  4592  0BDB  05C3               	andwf	___ftdiv@f2+2,f
  4593  0BDC  3018               	movlw	24
  4594  0BDD  00C7               	movwf	??___ftdiv
  4595  0BDE  0847               	movf	??___ftdiv,w
  4596  0BDF  00CB               	movwf	___ftdiv@cntr
  4597  0BE0                     l2375:	
  4598  0BE0  3001               	movlw	1
  4599  0BE1                     u2935:	
  4600  0BE1  1003               	clrc
  4601  0BE2  0DCC               	rlf	___ftdiv@f3,f
  4602  0BE3  0DCD               	rlf	___ftdiv@f3+1,f
  4603  0BE4  0DCE               	rlf	___ftdiv@f3+2,f
  4604  0BE5  3EFF               	addlw	-1
  4605  0BE6  1D03               	skipz
  4606  0BE7  2BE1               	goto	u2935
  4607  0BE8  0843               	movf	___ftdiv@f2+2,w
  4608  0BE9  0246               	subwf	___ftdiv@f1+2,w
  4609  0BEA  1D03               	skipz
  4610  0BEB  2BF2               	goto	u2945
  4611  0BEC  0842               	movf	___ftdiv@f2+1,w
  4612  0BED  0245               	subwf	___ftdiv@f1+1,w
  4613  0BEE  1D03               	skipz
  4614  0BEF  2BF2               	goto	u2945
  4615  0BF0  0841               	movf	___ftdiv@f2,w
  4616  0BF1  0244               	subwf	___ftdiv@f1,w
  4617  0BF2                     u2945:	
  4618  0BF2  1C03               	skipc
  4619  0BF3  2BFF               	goto	l2383
  4620  0BF4  0841               	movf	___ftdiv@f2,w
  4621  0BF5  02C4               	subwf	___ftdiv@f1,f
  4622  0BF6  0842               	movf	___ftdiv@f2+1,w
  4623  0BF7  1C03               	skipc
  4624  0BF8  0F42               	incfsz	___ftdiv@f2+1,w
  4625  0BF9  02C5               	subwf	___ftdiv@f1+1,f
  4626  0BFA  0843               	movf	___ftdiv@f2+2,w
  4627  0BFB  1C03               	skipc
  4628  0BFC  0A43               	incf	___ftdiv@f2+2,w
  4629  0BFD  02C6               	subwf	___ftdiv@f1+2,f
  4630  0BFE  144C               	bsf	___ftdiv@f3,0
  4631  0BFF                     l2383:	
  4632  0BFF  3001               	movlw	1
  4633  0C00                     u2955:	
  4634  0C00  1003               	clrc
  4635  0C01  0DC4               	rlf	___ftdiv@f1,f
  4636  0C02  0DC5               	rlf	___ftdiv@f1+1,f
  4637  0C03  0DC6               	rlf	___ftdiv@f1+2,f
  4638  0C04  3EFF               	addlw	-1
  4639  0C05  1D03               	skipz
  4640  0C06  2C00               	goto	u2955
  4641  0C07  3001               	movlw	1
  4642  0C08  02CB               	subwf	___ftdiv@cntr,f
  4643  0C09  1D03               	btfss	3,2
  4644  0C0A  2BE0               	goto	l2375
  4645  0C0B  084C               	movf	___ftdiv@f3,w
  4646  0C0C  00A0               	movwf	___ftpack@arg
  4647  0C0D  084D               	movf	___ftdiv@f3+1,w
  4648  0C0E  00A1               	movwf	___ftpack@arg+1
  4649  0C0F  084E               	movf	___ftdiv@f3+2,w
  4650  0C10  00A2               	movwf	___ftpack@arg+2
  4651  0C11  084F               	movf	___ftdiv@exp,w
  4652  0C12  00C7               	movwf	??___ftdiv
  4653  0C13  0847               	movf	??___ftdiv,w
  4654  0C14  00A3               	movwf	___ftpack@exp
  4655  0C15  0850               	movf	___ftdiv@sign,w
  4656  0C16  00C8               	movwf	??___ftdiv+1
  4657  0C17  0848               	movf	??___ftdiv+1,w
  4658  0C18  00A4               	movwf	___ftpack@sign
  4659  0C19  160A  118A  2796   	fcall	___ftpack
  4660  0C1C  1283               	bcf	3,5	;RP0=0, select bank0
  4661  0C1D  1303               	bcf	3,6	;RP1=0, select bank0
  4662  0C1E  0820               	movf	?___ftpack,w
  4663  0C1F  00C1               	movwf	?___ftdiv
  4664  0C20  0821               	movf	?___ftpack+1,w
  4665  0C21  00C2               	movwf	?___ftdiv+1
  4666  0C22  0822               	movf	?___ftpack+2,w
  4667  0C23  00C3               	movwf	?___ftdiv+2
  4668  0C24  0008               	return
  4669  0C25                     __end_of___ftdiv:	
  4670                           
  4671                           	psect	text13
  4672  14E1                     __ptext13:	
  4673 ;; *************** function _runDHT11 *****************
  4674 ;; Defined at:
  4675 ;;		line 90 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;		None
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;		None
  4680 ;; Return value:  Size  Location     Type
  4681 ;;		None               void
  4682 ;; Registers used:
  4683 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4689 ;;      Params:         0       0       0       0       0
  4690 ;;      Locals:         0       0       0       0       0
  4691 ;;      Temps:          0       3       0       0       0
  4692 ;;      Totals:         0       3       0       0       0
  4693 ;;Total ram usage:        3 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    5
  4696 ;; This function calls:
  4697 ;;		_displayDataDHT11
  4698 ;;		_printToLCD
  4699 ;;		_readDHT11
  4700 ;;		_setCursor
  4701 ;; This function is called by:
  4702 ;;		_main
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           
  4707                           ;psect for function _runDHT11
  4708  14E1                     _runDHT11:	
  4709                           
  4710                           ;dht11_module.h: 92: if (readDHT11(&temperature, &humidity))
  4711                           
  4712                           ;incstack = 0
  4713                           ; Regs used in _runDHT11: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4714  14E1  306E               	movlw	_humidity& (0+255)
  4715  14E2  1283               	bcf	3,5	;RP0=0, select bank0
  4716  14E3  1303               	bcf	3,6	;RP1=0, select bank0
  4717  14E4  00D9               	movwf	??_runDHT11
  4718  14E5  0859               	movf	??_runDHT11,w
  4719  14E6  00A0               	movwf	readDHT11@humidity
  4720  14E7  306F               	movlw	_temperature& (0+255)
  4721  14E8  120A  158A  22BC  160A  118A  	fcall	_readDHT11
  4722  14ED  3A00               	xorlw	0
  4723  14EE  1903               	skipnz
  4724  14EF  2CF6               	goto	l2675
  4725                           
  4726                           ;dht11_module.h: 93: {
  4727                           ;dht11_module.h: 94: displayDataDHT11();
  4728  14F0  160A  118A  26DF  160A  118A  	fcall	_displayDataDHT11
  4729                           
  4730                           ;dht11_module.h: 95: }
  4731  14F5  2D0A               	goto	l2679
  4732  14F6                     l2675:	
  4733                           
  4734                           ;dht11_module.h: 96: else
  4735                           ;dht11_module.h: 97: {
  4736                           ;dht11_module.h: 98: setCursor(0, 0);
  4737  14F6  1283               	bcf	3,5	;RP0=0, select bank0
  4738  14F7  1303               	bcf	3,6	;RP1=0, select bank0
  4739  14F8  01A2               	clrf	setCursor@column
  4740  14F9  3000               	movlw	0
  4741  14FA  160A  118A  23FA  160A  118A  	fcall	_setCursor
  4742                           
  4743                           ;dht11_module.h: 99: printToLCD("ERROR!");
  4744  14FF  300B               	movlw	low (STR_3| (0+32768))
  4745  1500  1283               	bcf	3,5	;RP0=0, select bank0
  4746  1501  1303               	bcf	3,6	;RP1=0, select bank0
  4747  1502  00A2               	movwf	printToLCD@str
  4748  1503  3091               	movlw	high (STR_3| (0+32768))
  4749  1504  00A3               	movwf	printToLCD@str+1
  4750  1505  160A  118A  2389  160A  118A  	fcall	_printToLCD
  4751  150A                     l2679:	
  4752                           
  4753                           ;dht11_module.h: 100: }
  4754                           ;dht11_module.h: 101: _delay((unsigned long)((500)*(4000000/4000.0)));
  4755  150A  3003               	movlw	3
  4756  150B  1283               	bcf	3,5	;RP0=0, select bank0
  4757  150C  1303               	bcf	3,6	;RP1=0, select bank0
  4758  150D  00DB               	movwf	??_runDHT11+2
  4759  150E  308A               	movlw	138
  4760  150F  00DA               	movwf	??_runDHT11+1
  4761  1510  3056               	movlw	86
  4762  1511  00D9               	movwf	??_runDHT11
  4763  1512                     u4427:	
  4764  1512  0BD9               	decfsz	??_runDHT11,f
  4765  1513  2D12               	goto	u4427
  4766  1514  0BDA               	decfsz	??_runDHT11+1,f
  4767  1515  2D12               	goto	u4427
  4768  1516  0BDB               	decfsz	??_runDHT11+2,f
  4769  1517  2D12               	goto	u4427
  4770  1518  2D19               	nop2
  4771  1519  0008               	return
  4772  151A                     __end_of_runDHT11:	
  4773                           
  4774                           	psect	text14
  4775  0ABC                     __ptext14:	
  4776 ;; *************** function _readDHT11 *****************
  4777 ;; Defined at:
  4778 ;;		line 28 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  temperature     1    wreg     PTR unsigned char 
  4781 ;;		 -> temperature(1), 
  4782 ;;  humidity        1    0[BANK0 ] PTR unsigned char 
  4783 ;;		 -> humidity(1), 
  4784 ;; Auto vars:     Size  Location     Type
  4785 ;;  temperature     1    7[BANK0 ] PTR unsigned char 
  4786 ;;		 -> temperature(1), 
  4787 ;;  bits            5    8[BANK0 ] unsigned char [5]
  4788 ;;  j               1   14[BANK0 ] unsigned char 
  4789 ;;  i               1   13[BANK0 ] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      unsigned char 
  4792 ;; Registers used:
  4793 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4799 ;;      Params:         0       1       0       0       0
  4800 ;;      Locals:         0       8       0       0       0
  4801 ;;      Temps:          0       6       0       0       0
  4802 ;;      Totals:         0      15       0       0       0
  4803 ;;Total ram usage:       15 bytes
  4804 ;; Hardware stack levels used:    1
  4805 ;; Hardware stack levels required when called:    2
  4806 ;; This function calls:
  4807 ;;		Nothing
  4808 ;; This function is called by:
  4809 ;;		_runDHT11
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813                           
  4814                           ;psect for function _readDHT11
  4815  0ABC                     _readDHT11:	
  4816                           
  4817                           ;incstack = 0
  4818                           ; Regs used in _readDHT11: [wreg-fsr0h+status,2+status,0]
  4819                           ;readDHT11@temperature stored from wreg
  4820  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4821  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4822  0ABE  00A7               	movwf	readDHT11@temperature
  4823                           
  4824                           ;dht11_module.h: 30: uint8_t bits[5] = {0};
  4825  0ABF  3028               	movlw	readDHT11@bits& (0+255)
  4826  0AC0  0084               	movwf	4
  4827  0AC1  1683               	bsf	3,5	;RP0=1, select bank1
  4828  0AC2  1303               	bcf	3,6	;RP1=0, select bank1
  4829  0AC3  0857               	movf	readDHT11@F1225^(0+128),w
  4830  0AC4  1383               	bcf	3,7	;select IRP bank0
  4831  0AC5  0080               	movwf	0
  4832  0AC6  0A84               	incf	4,f
  4833  0AC7  0858               	movf	(readDHT11@F1225^(0+128)+1),w
  4834  0AC8  0080               	movwf	0
  4835  0AC9  0A84               	incf	4,f
  4836  0ACA  0859               	movf	(readDHT11@F1225^(0+128)+2),w
  4837  0ACB  0080               	movwf	0
  4838  0ACC  0A84               	incf	4,f
  4839  0ACD  085A               	movf	(readDHT11@F1225^(0+128)+3),w
  4840  0ACE  0080               	movwf	0
  4841  0ACF  0A84               	incf	4,f
  4842  0AD0  085B               	movf	(readDHT11@F1225^(0+128)+4),w
  4843  0AD1  0080               	movwf	0
  4844                           
  4845                           ;dht11_module.h: 31: uint8_t i, j;
  4846                           ;dht11_module.h: 34: TRISBbits.TRISB2 = 0;
  4847  0AD2  1106               	bcf	6,2	;volatile
  4848                           
  4849                           ;dht11_module.h: 35: PORTBbits.RB2 = 0;
  4850  0AD3  1283               	bcf	3,5	;RP0=0, select bank0
  4851  0AD4  1303               	bcf	3,6	;RP1=0, select bank0
  4852  0AD5  1106               	bcf	6,2	;volatile
  4853                           
  4854                           ;dht11_module.h: 36: _delay((unsigned long)((18)*(4000000/4000.0)));
  4855  0AD6  3018               	movlw	24
  4856  0AD7  00A2               	movwf	??_readDHT11+1
  4857  0AD8  305F               	movlw	95
  4858  0AD9  00A1               	movwf	??_readDHT11
  4859  0ADA                     u4437:	
  4860  0ADA  0BA1               	decfsz	??_readDHT11,f
  4861  0ADB  2ADA               	goto	u4437
  4862  0ADC  0BA2               	decfsz	??_readDHT11+1,f
  4863  0ADD  2ADA               	goto	u4437
  4864                           
  4865                           ;dht11_module.h: 37: PORTBbits.RB2 = 1;
  4866  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  4867  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  4868  0AE0  1506               	bsf	6,2	;volatile
  4869                           
  4870                           ;dht11_module.h: 38: _delay((unsigned long)((20)*(4000000/4000000.0)));
  4871  0AE1  3006               	movlw	6
  4872  0AE2  00A1               	movwf	??_readDHT11
  4873  0AE3                     u4447:	
  4874  0AE3  0BA1               	decfsz	??_readDHT11,f
  4875  0AE4  2AE3               	goto	u4447
  4876  0AE5  0000               	nop
  4877                           
  4878                           ;dht11_module.h: 39: TRISBbits.TRISB2 = 1;
  4879  0AE6  1683               	bsf	3,5	;RP0=1, select bank1
  4880  0AE7  1303               	bcf	3,6	;RP1=0, select bank1
  4881  0AE8  1506               	bsf	6,2	;volatile
  4882                           
  4883                           ;dht11_module.h: 42: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4884  0AE9  300D               	movlw	13
  4885  0AEA  1283               	bcf	3,5	;RP0=0, select bank0
  4886  0AEB  1303               	bcf	3,6	;RP1=0, select bank0
  4887  0AEC  00A1               	movwf	??_readDHT11
  4888  0AED                     u4457:	
  4889  0AED  0BA1               	decfsz	??_readDHT11,f
  4890  0AEE  2AED               	goto	u4457
  4891                           
  4892                           ;dht11_module.h: 43: if (PORTBbits.RB2)
  4893  0AEF  1283               	bcf	3,5	;RP0=0, select bank0
  4894  0AF0  1303               	bcf	3,6	;RP1=0, select bank0
  4895  0AF1  1D06               	btfss	6,2	;volatile
  4896  0AF2  2AF5               	goto	l2493
  4897                           
  4898                           ;dht11_module.h: 44: return 0;
  4899  0AF3  3000               	movlw	0
  4900  0AF4  0008               	return
  4901  0AF5                     l2493:	
  4902                           
  4903                           ;dht11_module.h: 45: _delay((unsigned long)((80)*(4000000/4000000.0)));
  4904  0AF5  301A               	movlw	26
  4905  0AF6  00A1               	movwf	??_readDHT11
  4906  0AF7                     u4467:	
  4907  0AF7  0BA1               	decfsz	??_readDHT11,f
  4908  0AF8  2AF7               	goto	u4467
  4909  0AF9  0000               	nop
  4910                           
  4911                           ;dht11_module.h: 46: if (!PORTBbits.RB2)
  4912  0AFA  1283               	bcf	3,5	;RP0=0, select bank0
  4913  0AFB  1303               	bcf	3,6	;RP1=0, select bank0
  4914  0AFC  1906               	btfsc	6,2	;volatile
  4915  0AFD  2B00               	goto	l2501
  4916                           
  4917                           ;dht11_module.h: 47: return 0;
  4918  0AFE  3000               	movlw	0
  4919  0AFF  0008               	return
  4920  0B00                     l2501:	
  4921                           
  4922                           ;dht11_module.h: 48: _delay((unsigned long)((80)*(4000000/4000000.0)));
  4923  0B00  301A               	movlw	26
  4924  0B01  00A1               	movwf	??_readDHT11
  4925  0B02                     u4477:	
  4926  0B02  0BA1               	decfsz	??_readDHT11,f
  4927  0B03  2B02               	goto	u4477
  4928  0B04  0000               	nop
  4929                           
  4930                           ;dht11_module.h: 51: for (j = 0; j < 5; j++)
  4931  0B05  1283               	bcf	3,5	;RP0=0, select bank0
  4932  0B06  1303               	bcf	3,6	;RP1=0, select bank0
  4933  0B07  01AE               	clrf	readDHT11@j
  4934  0B08  3005               	movlw	5
  4935  0B09  022E               	subwf	readDHT11@j,w
  4936  0B0A  1803               	btfsc	3,0
  4937  0B0B  2B42               	goto	l2529
  4938  0B0C                     l2509:	
  4939                           
  4940                           ;dht11_module.h: 52: {
  4941                           ;dht11_module.h: 53: for (i = 0; i < 8; i++)
  4942  0B0C  01AD               	clrf	readDHT11@i
  4943  0B0D  3008               	movlw	8
  4944  0B0E  022D               	subwf	readDHT11@i,w
  4945  0B0F  1803               	btfsc	3,0
  4946  0B10  2B3A               	goto	l2525
  4947  0B11                     l116:	
  4948                           ;dht11_module.h: 56: ;
  4949                           
  4950                           ;dht11_module.h: 54: {
  4951                           ;dht11_module.h: 55: while (!PORTBbits.RB2)
  4952                           
  4953  0B11  1D06               	btfss	6,2	;volatile
  4954  0B12  2B11               	goto	l116
  4955                           
  4956                           ;dht11_module.h: 57: _delay((unsigned long)((30)*(4000000/4000000.0)));
  4957  0B13  3009               	movlw	9
  4958  0B14  00A1               	movwf	??_readDHT11
  4959  0B15                     u4487:	
  4960  0B15  0BA1               	decfsz	??_readDHT11,f
  4961  0B16  2B15               	goto	u4487
  4962  0B17  2B18               	nop2	;nop
  4963                           
  4964                           ;dht11_module.h: 58: if (PORTBbits.RB2)
  4965  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  4966  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  4967  0B1A  1D06               	btfss	6,2	;volatile
  4968  0B1B  2B32               	goto	l2521
  4969                           
  4970                           ;dht11_module.h: 59: {
  4971                           ;dht11_module.h: 60: bits[j] |= (1 << (7 - i));
  4972  0B1C  3001               	movlw	1
  4973  0B1D  00A1               	movwf	??_readDHT11
  4974  0B1E  032D               	decf	readDHT11@i,w
  4975  0B1F  3AFF               	xorlw	255
  4976  0B20  3E07               	addlw	7
  4977  0B21  3E01               	addlw	1
  4978  0B22  2B25               	goto	u3194
  4979  0B23                     u3195:	
  4980  0B23  1003               	clrc
  4981  0B24  0DA1               	rlf	??_readDHT11,f
  4982  0B25                     u3194:	
  4983  0B25  3EFF               	addlw	-1
  4984  0B26  1D03               	skipz
  4985  0B27  2B23               	goto	u3195
  4986  0B28  0821               	movf	??_readDHT11,w
  4987  0B29  00A2               	movwf	??_readDHT11+1
  4988  0B2A  082E               	movf	readDHT11@j,w
  4989  0B2B  3E28               	addlw	readDHT11@bits& (0+255)
  4990  0B2C  0084               	movwf	4
  4991  0B2D  0822               	movf	??_readDHT11+1,w
  4992  0B2E  1383               	bcf	3,7	;select IRP bank0
  4993  0B2F  0480               	iorwf	0,f
  4994  0B30                     l120:	
  4995                           ;dht11_module.h: 62: ;
  4996                           
  4997                           ;dht11_module.h: 61: while (PORTBbits.RB2)
  4998                           
  4999  0B30  1906               	btfsc	6,2	;volatile
  5000  0B31  2B30               	goto	l120
  5001  0B32                     l2521:	
  5002  0B32  3001               	movlw	1
  5003  0B33  00A1               	movwf	??_readDHT11
  5004  0B34  0821               	movf	??_readDHT11,w
  5005  0B35  07AD               	addwf	readDHT11@i,f
  5006  0B36  3008               	movlw	8
  5007  0B37  022D               	subwf	readDHT11@i,w
  5008  0B38  1C03               	skipc
  5009  0B39  2B11               	goto	l116
  5010  0B3A                     l2525:	
  5011  0B3A  3001               	movlw	1
  5012  0B3B  00A1               	movwf	??_readDHT11
  5013  0B3C  0821               	movf	??_readDHT11,w
  5014  0B3D  07AE               	addwf	readDHT11@j,f
  5015  0B3E  3005               	movlw	5
  5016  0B3F  022E               	subwf	readDHT11@j,w
  5017  0B40  1C03               	skipc
  5018  0B41  2B0C               	goto	l2509
  5019  0B42                     l2529:	
  5020                           
  5021                           ;dht11_module.h: 63: }
  5022                           ;dht11_module.h: 64: }
  5023                           ;dht11_module.h: 65: }
  5024                           ;dht11_module.h: 68: if (bits[4] != (bits[0] + bits[1] + bits[2] + bits[3]))
  5025  0B42  0828               	movf	readDHT11@bits,w
  5026  0B43  0729               	addwf	readDHT11@bits+1,w
  5027  0B44  00A1               	movwf	??_readDHT11
  5028  0B45  01A2               	clrf	??_readDHT11+1
  5029  0B46  0DA2               	rlf	??_readDHT11+1,f
  5030  0B47  082A               	movf	readDHT11@bits+2,w
  5031  0B48  0721               	addwf	??_readDHT11,w
  5032  0B49  00A3               	movwf	??_readDHT11+2
  5033  0B4A  3000               	movlw	0
  5034  0B4B  1803               	skipnc
  5035  0B4C  3001               	movlw	1
  5036  0B4D  0722               	addwf	??_readDHT11+1,w
  5037  0B4E  00A4               	movwf	??_readDHT11+3
  5038  0B4F  082B               	movf	readDHT11@bits+3,w
  5039  0B50  0723               	addwf	??_readDHT11+2,w
  5040  0B51  00A5               	movwf	??_readDHT11+4
  5041  0B52  3000               	movlw	0
  5042  0B53  1803               	skipnc
  5043  0B54  3001               	movlw	1
  5044  0B55  0724               	addwf	??_readDHT11+3,w
  5045  0B56  00A6               	movwf	??_readDHT11+5
  5046  0B57  082C               	movf	readDHT11@bits+4,w
  5047  0B58  0625               	xorwf	??_readDHT11+4,w
  5048  0B59  0426               	iorwf	??_readDHT11+5,w
  5049  0B5A  1903               	skipnz
  5050  0B5B  2B5E               	goto	l2535
  5051                           
  5052                           ;dht11_module.h: 69: return 0;
  5053  0B5C  3000               	movlw	0
  5054  0B5D  0008               	return
  5055  0B5E                     l2535:	
  5056                           
  5057                           ;dht11_module.h: 71: *humidity = bits[0];
  5058  0B5E  0828               	movf	readDHT11@bits,w
  5059  0B5F  00A1               	movwf	??_readDHT11
  5060  0B60  0820               	movf	readDHT11@humidity,w
  5061  0B61  0084               	movwf	4
  5062  0B62  0821               	movf	??_readDHT11,w
  5063  0B63  1383               	bcf	3,7	;select IRP bank0
  5064  0B64  0080               	movwf	0
  5065                           
  5066                           ;dht11_module.h: 72: *temperature = bits[2];
  5067  0B65  082A               	movf	readDHT11@bits+2,w
  5068  0B66  00A1               	movwf	??_readDHT11
  5069  0B67  0827               	movf	readDHT11@temperature,w
  5070  0B68  0084               	movwf	4
  5071  0B69  0821               	movf	??_readDHT11,w
  5072  0B6A  0080               	movwf	0
  5073                           
  5074                           ;dht11_module.h: 74: return 1;
  5075  0B6B  3001               	movlw	1
  5076  0B6C  0008               	return
  5077  0B6D                     __end_of_readDHT11:	
  5078                           
  5079                           	psect	text15
  5080  16DF                     __ptext15:	
  5081 ;; *************** function _displayDataDHT11 *****************
  5082 ;; Defined at:
  5083 ;;		line 77 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;  buffer         15   42[BANK0 ] unsigned char [15]
  5088 ;; Return value:  Size  Location     Type
  5089 ;;		None               void
  5090 ;; Registers used:
  5091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5097 ;;      Params:         0       0       0       0       0
  5098 ;;      Locals:         0      15       0       0       0
  5099 ;;      Temps:          0       2       0       0       0
  5100 ;;      Totals:         0      17       0       0       0
  5101 ;;Total ram usage:       17 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    4
  5104 ;; This function calls:
  5105 ;;		_printToLCD
  5106 ;;		_setCursor
  5107 ;;		_sprintf
  5108 ;; This function is called by:
  5109 ;;		_runDHT11
  5110 ;;		_main
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           
  5115                           ;psect for function _displayDataDHT11
  5116  16DF                     _displayDataDHT11:	
  5117                           
  5118                           ;dht11_module.h: 79: char buffer[15];
  5119                           ;dht11_module.h: 80: _delay((unsigned long)((2)*(4000000/4000.0)));
  5120                           
  5121                           ;incstack = 0
  5122                           ; Regs used in _displayDataDHT11: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5123  16DF  3003               	movlw	3
  5124  16E0  1283               	bcf	3,5	;RP0=0, select bank0
  5125  16E1  1303               	bcf	3,6	;RP1=0, select bank0
  5126  16E2  00C9               	movwf	??_displayDataDHT11+1
  5127  16E3  3097               	movlw	151
  5128  16E4  00C8               	movwf	??_displayDataDHT11
  5129  16E5                     u4497:	
  5130  16E5  0BC8               	decfsz	??_displayDataDHT11,f
  5131  16E6  2EE5               	goto	u4497
  5132  16E7  0BC9               	decfsz	??_displayDataDHT11+1,f
  5133  16E8  2EE5               	goto	u4497
  5134  16E9  2EEA               	nop2
  5135                           
  5136                           ;dht11_module.h: 82: setCursor(0, 0);
  5137  16EA  1283               	bcf	3,5	;RP0=0, select bank0
  5138  16EB  1303               	bcf	3,6	;RP1=0, select bank0
  5139  16EC  01A2               	clrf	setCursor@column
  5140  16ED  3000               	movlw	0
  5141  16EE  160A  118A  23FA  160A  118A  	fcall	_setCursor
  5142                           
  5143                           ;dht11_module.h: 83: sprintf(buffer, "TEMP: %dC", temperature);
  5144  16F3  30AE               	movlw	low (STR_1| (0+32768))
  5145  16F4  1283               	bcf	3,5	;RP0=0, select bank0
  5146  16F5  1303               	bcf	3,6	;RP1=0, select bank0
  5147  16F6  00AE               	movwf	sprintf@f
  5148  16F7  3090               	movlw	high (STR_1| (0+32768))
  5149  16F8  00AF               	movwf	sprintf@f+1
  5150  16F9  086F               	movf	_temperature,w
  5151  16FA  00C8               	movwf	??_displayDataDHT11
  5152  16FB  01C9               	clrf	??_displayDataDHT11+1
  5153  16FC  0848               	movf	??_displayDataDHT11,w
  5154  16FD  00B0               	movwf	?_sprintf+2
  5155  16FE  0849               	movf	??_displayDataDHT11+1,w
  5156  16FF  00B1               	movwf	?_sprintf+3
  5157  1700  304A               	movlw	displayDataDHT11@buffer& (0+255)
  5158  1701  120A  158A  2601  160A  118A  	fcall	_sprintf
  5159                           
  5160                           ;dht11_module.h: 84: printToLCD(buffer);
  5161  1706  304A               	movlw	displayDataDHT11@buffer& (0+255)
  5162  1707  1283               	bcf	3,5	;RP0=0, select bank0
  5163  1708  1303               	bcf	3,6	;RP1=0, select bank0
  5164  1709  00A2               	movwf	printToLCD@str
  5165  170A  3000               	movlw	0
  5166  170B  00A3               	movwf	printToLCD@str+1
  5167  170C  160A  118A  2389  160A  118A  	fcall	_printToLCD
  5168                           
  5169                           ;dht11_module.h: 85: setCursor(1, 0);
  5170  1711  1283               	bcf	3,5	;RP0=0, select bank0
  5171  1712  1303               	bcf	3,6	;RP1=0, select bank0
  5172  1713  01A2               	clrf	setCursor@column
  5173  1714  3001               	movlw	1
  5174  1715  160A  118A  23FA  160A  118A  	fcall	_setCursor
  5175                           
  5176                           ;dht11_module.h: 86: sprintf(buffer, "HMDT: %d", humidity);
  5177  171A  30F2               	movlw	low (STR_2| (0+32768))
  5178  171B  1283               	bcf	3,5	;RP0=0, select bank0
  5179  171C  1303               	bcf	3,6	;RP1=0, select bank0
  5180  171D  00AE               	movwf	sprintf@f
  5181  171E  3090               	movlw	high (STR_2| (0+32768))
  5182  171F  00AF               	movwf	sprintf@f+1
  5183  1720  086E               	movf	_humidity,w
  5184  1721  00C8               	movwf	??_displayDataDHT11
  5185  1722  01C9               	clrf	??_displayDataDHT11+1
  5186  1723  0848               	movf	??_displayDataDHT11,w
  5187  1724  00B0               	movwf	?_sprintf+2
  5188  1725  0849               	movf	??_displayDataDHT11+1,w
  5189  1726  00B1               	movwf	?_sprintf+3
  5190  1727  304A               	movlw	displayDataDHT11@buffer& (0+255)
  5191  1728  120A  158A  2601  160A  118A  	fcall	_sprintf
  5192                           
  5193                           ;dht11_module.h: 87: printToLCD(buffer);
  5194  172D  304A               	movlw	displayDataDHT11@buffer& (0+255)
  5195  172E  1283               	bcf	3,5	;RP0=0, select bank0
  5196  172F  1303               	bcf	3,6	;RP1=0, select bank0
  5197  1730  00A2               	movwf	printToLCD@str
  5198  1731  3000               	movlw	0
  5199  1732  00A3               	movwf	printToLCD@str+1
  5200  1733  160A  118A  2389   	fcall	_printToLCD
  5201  1736  0008               	return
  5202  1737                     __end_of_displayDataDHT11:	
  5203                           
  5204                           	psect	text16
  5205  13FA                     __ptext16:	
  5206 ;; *************** function _setCursor *****************
  5207 ;; Defined at:
  5208 ;;		line 59 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  row             1    wreg     unsigned char 
  5211 ;;  column          1    2[BANK0 ] unsigned char 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  row             1    4[BANK0 ] unsigned char 
  5214 ;;  address         1    5[BANK0 ] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;		None               void
  5217 ;; Registers used:
  5218 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5224 ;;      Params:         0       1       0       0       0
  5225 ;;      Locals:         0       2       0       0       0
  5226 ;;      Temps:          0       1       0       0       0
  5227 ;;      Totals:         0       4       0       0       0
  5228 ;;Total ram usage:        4 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    3
  5231 ;; This function calls:
  5232 ;;		_instCTRL
  5233 ;; This function is called by:
  5234 ;;		_displayDataDHT11
  5235 ;;		_runDHT11
  5236 ;;		_main
  5237 ;;		_startUpSequence
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           
  5242                           ;psect for function _setCursor
  5243  13FA                     _setCursor:	
  5244                           
  5245                           ;incstack = 0
  5246                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5247                           ;setCursor@row stored from wreg
  5248  13FA  1283               	bcf	3,5	;RP0=0, select bank0
  5249  13FB  1303               	bcf	3,6	;RP1=0, select bank0
  5250  13FC  00A4               	movwf	setCursor@row
  5251                           
  5252                           ;lcd_functions.h: 61: unsigned char address;
  5253                           ;lcd_functions.h: 62: switch (row)
  5254  13FD  2C0A               	goto	l2127
  5255  13FE                     l2115:	
  5256                           ;lcd_functions.h: 63: {
  5257                           ;lcd_functions.h: 64: case 0:
  5258                           
  5259  13FE  2C08               	goto	l2123
  5260  13FF                     l2117:	
  5261                           ;lcd_functions.h: 67: case 1:
  5262                           
  5263                           ;lcd_functions.h: 66: break;
  5264                           
  5265                           ;lcd_functions.h: 65: address = 0x00;
  5266                           
  5267                           
  5268                           ;lcd_functions.h: 68: address = 0x40;
  5269  13FF  3040               	movlw	64
  5270  1400  2C04               	goto	L6
  5271  1401                     l2119:	
  5272                           ;lcd_functions.h: 70: case 2:
  5273                           
  5274                           ;lcd_functions.h: 69: break;
  5275                           
  5276                           
  5277                           ;lcd_functions.h: 71: address = 0x14;
  5278  1401  3014               	movlw	20
  5279  1402  2C04               	goto	L6
  5280  1403                     l2121:	
  5281                           ;lcd_functions.h: 73: case 3:
  5282                           
  5283                           ;lcd_functions.h: 72: break;
  5284                           
  5285                           
  5286                           ;lcd_functions.h: 74: address = 0x54;
  5287  1403  3054               	movlw	84
  5288  1404                     L6:	
  5289  1404  00A3               	movwf	??_setCursor
  5290  1405  0823               	movf	??_setCursor,w
  5291  1406  00A5               	movwf	setCursor@address
  5292                           
  5293                           ;lcd_functions.h: 75: break;
  5294  1407  2C18               	goto	l2129
  5295  1408                     l2123:	
  5296                           ;lcd_functions.h: 76: default:
  5297                           
  5298                           
  5299                           ;lcd_functions.h: 77: address = 0x00;
  5300  1408  01A5               	clrf	setCursor@address
  5301                           
  5302                           ;lcd_functions.h: 79: }
  5303                           
  5304                           ;lcd_functions.h: 78: break;
  5305  1409  2C18               	goto	l2129
  5306  140A                     l2127:	
  5307  140A  0824               	movf	setCursor@row,w
  5308                           
  5309                           ; Switch size 1, requested type "space"
  5310                           ; Number of cases is 4, Range of values is 0 to 3
  5311                           ; switch strategies available:
  5312                           ; Name         Instructions Cycles
  5313                           ; simple_byte           13     7 (average)
  5314                           ; direct_byte           20     8 (fixed)
  5315                           ; jumptable            260     6 (fixed)
  5316                           ;	Chosen strategy is simple_byte
  5317  140B  3A00               	xorlw	0	; case 0
  5318  140C  1903               	skipnz
  5319  140D  2BFE               	goto	l2115
  5320  140E  3A01               	xorlw	1	; case 1
  5321  140F  1903               	skipnz
  5322  1410  2BFF               	goto	l2117
  5323  1411  3A03               	xorlw	3	; case 2
  5324  1412  1903               	skipnz
  5325  1413  2C01               	goto	l2119
  5326  1414  3A01               	xorlw	1	; case 3
  5327  1415  1903               	skipnz
  5328  1416  2C03               	goto	l2121
  5329  1417  2C08               	goto	l2123
  5330  1418                     l2129:	
  5331                           
  5332                           ;lcd_functions.h: 80: address += column;
  5333  1418  0822               	movf	setCursor@column,w
  5334  1419  00A3               	movwf	??_setCursor
  5335  141A  0823               	movf	??_setCursor,w
  5336  141B  07A5               	addwf	setCursor@address,f
  5337                           
  5338                           ;lcd_functions.h: 81: instCTRL(0x80 | address);
  5339  141C  0825               	movf	setCursor@address,w
  5340  141D  3880               	iorlw	128
  5341  141E  120A  158A  2005   	fcall	_instCTRL
  5342  1421  0008               	return
  5343  1422                     __end_of_setCursor:	
  5344                           
  5345                           	psect	text17
  5346  12DF                     __ptext17:	
  5347 ;; *************** function _runClock *****************
  5348 ;; Defined at:
  5349 ;;		line 34 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;		None
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;		None
  5354 ;; Return value:  Size  Location     Type
  5355 ;;		None               void
  5356 ;; Registers used:
  5357 ;;		wreg, status,2, status,0
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5363 ;;      Params:         0       0       0       0       0
  5364 ;;      Locals:         0       0       0       0       0
  5365 ;;      Temps:          0       2       0       0       0
  5366 ;;      Totals:         0       2       0       0       0
  5367 ;;Total ram usage:        2 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; Hardware stack levels required when called:    2
  5370 ;; This function calls:
  5371 ;;		Nothing
  5372 ;; This function is called by:
  5373 ;;		_main
  5374 ;; This function uses a non-reentrant model
  5375 ;;
  5376                           
  5377                           
  5378                           ;psect for function _runClock
  5379  12DF                     _runClock:	
  5380                           
  5381                           ;time_scheduler.h: 37: minutes++;
  5382                           
  5383                           ;incstack = 0
  5384                           ; Regs used in _runClock: [wreg+status,2+status,0]
  5385  12DF  3001               	movlw	1
  5386  12E0  1283               	bcf	3,5	;RP0=0, select bank0
  5387  12E1  1303               	bcf	3,6	;RP1=0, select bank0
  5388  12E2  00A0               	movwf	??_runClock
  5389  12E3  0820               	movf	??_runClock,w
  5390  12E4  07ED               	addwf	_minutes,f	;volatile
  5391                           
  5392                           ;time_scheduler.h: 38: if (minutes >= 60)
  5393  12E5  303C               	movlw	60
  5394  12E6  026D               	subwf	_minutes,w	;volatile
  5395  12E7  1C03               	skipc
  5396  12E8  2AF2               	goto	l2733
  5397                           
  5398                           ;time_scheduler.h: 39: {
  5399                           ;time_scheduler.h: 40: minutes = 0;
  5400  12E9  01ED               	clrf	_minutes	;volatile
  5401                           
  5402                           ;time_scheduler.h: 41: hours++;
  5403  12EA  3001               	movlw	1
  5404  12EB  00A0               	movwf	??_runClock
  5405  12EC  0820               	movf	??_runClock,w
  5406  12ED  07E5               	addwf	_hours,f	;volatile
  5407                           
  5408                           ;time_scheduler.h: 42: if (hours >= 24)
  5409  12EE  3018               	movlw	24
  5410  12EF  0265               	subwf	_hours,w	;volatile
  5411  12F0  1803               	btfsc	3,0
  5412                           
  5413                           ;time_scheduler.h: 43: {
  5414                           ;time_scheduler.h: 44: hours = 0;
  5415  12F1  01E5               	clrf	_hours	;volatile
  5416  12F2                     l2733:	
  5417                           
  5418                           ;time_scheduler.h: 45: }
  5419                           ;time_scheduler.h: 46: }
  5420                           ;time_scheduler.h: 47: _delay((unsigned long)((100)*(4000000/4000.0)));
  5421  12F2  3082               	movlw	130
  5422  12F3  00A1               	movwf	??_runClock+1
  5423  12F4  30DD               	movlw	221
  5424  12F5  00A0               	movwf	??_runClock
  5425  12F6                     u4507:	
  5426  12F6  0BA0               	decfsz	??_runClock,f
  5427  12F7  2AF6               	goto	u4507
  5428  12F8  0BA1               	decfsz	??_runClock+1,f
  5429  12F9  2AF6               	goto	u4507
  5430  12FA  2AFB               	nop2
  5431  12FB  0008               	return
  5432  12FC                     __end_of_runClock:	
  5433                           
  5434                           	psect	text18
  5435  129F                     __ptext18:	
  5436 ;; *************** function _initRegisters *****************
  5437 ;; Defined at:
  5438 ;;		line 162 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;		None
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;		None
  5443 ;; Return value:  Size  Location     Type
  5444 ;;		None               void
  5445 ;; Registers used:
  5446 ;;		wreg
  5447 ;; Tracked objects:
  5448 ;;		On entry : 0/0
  5449 ;;		On exit  : 0/0
  5450 ;;		Unchanged: 0/0
  5451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5452 ;;      Params:         0       0       0       0       0
  5453 ;;      Locals:         0       0       0       0       0
  5454 ;;      Temps:          0       0       0       0       0
  5455 ;;      Totals:         0       0       0       0       0
  5456 ;;Total ram usage:        0 bytes
  5457 ;; Hardware stack levels used:    1
  5458 ;; Hardware stack levels required when called:    2
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_main
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           
  5467                           ;psect for function _initRegisters
  5468  129F                     _initRegisters:	
  5469                           
  5470                           ;main.c: 165: ADCON1 = 0x80;
  5471                           
  5472                           ;incstack = 0
  5473                           ; Regs used in _initRegisters: [wreg]
  5474  129F  3080               	movlw	128
  5475  12A0  1683               	bsf	3,5	;RP0=1, select bank1
  5476  12A1  1303               	bcf	3,6	;RP1=0, select bank1
  5477  12A2  009F               	movwf	31	;volatile
  5478                           
  5479                           ;main.c: 166: ADCON0 = 0x01;
  5480  12A3  3001               	movlw	1
  5481  12A4  1283               	bcf	3,5	;RP0=0, select bank0
  5482  12A5  1303               	bcf	3,6	;RP1=0, select bank0
  5483  12A6  009F               	movwf	31	;volatile
  5484  12A7  0008               	return
  5485  12A8                     __end_of_initRegisters:	
  5486                           
  5487                           	psect	text19
  5488  12C0                     __ptext19:	
  5489 ;; *************** function _initPorts *****************
  5490 ;; Defined at:
  5491 ;;		line 153 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;		None
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;		None               void
  5498 ;; Registers used:
  5499 ;;		wreg, status,2
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5505 ;;      Params:         0       0       0       0       0
  5506 ;;      Locals:         0       0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0
  5508 ;;      Totals:         0       0       0       0       0
  5509 ;;Total ram usage:        0 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    2
  5512 ;; This function calls:
  5513 ;;		Nothing
  5514 ;; This function is called by:
  5515 ;;		_main
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           
  5520                           ;psect for function _initPorts
  5521  12C0                     _initPorts:	
  5522                           
  5523                           ;main.c: 155: TRISA = 0xFF;
  5524                           
  5525                           ;incstack = 0
  5526                           ; Regs used in _initPorts: [wreg+status,2]
  5527  12C0  30FF               	movlw	255
  5528  12C1  1683               	bsf	3,5	;RP0=1, select bank1
  5529  12C2  1303               	bcf	3,6	;RP1=0, select bank1
  5530  12C3  0085               	movwf	5	;volatile
  5531                           
  5532                           ;main.c: 156: TRISB = 0xFF;
  5533  12C4  30FF               	movlw	255
  5534  12C5  0086               	movwf	6	;volatile
  5535                           
  5536                           ;main.c: 157: TRISC = 0x00;
  5537  12C6  0187               	clrf	7	;volatile
  5538                           
  5539                           ;main.c: 158: PORTC = 0b00111000;
  5540  12C7  3038               	movlw	56
  5541  12C8  1283               	bcf	3,5	;RP0=0, select bank0
  5542  12C9  1303               	bcf	3,6	;RP1=0, select bank0
  5543  12CA  0087               	movwf	7	;volatile
  5544                           
  5545                           ;main.c: 159: TRISD = 0x00;
  5546  12CB  1683               	bsf	3,5	;RP0=1, select bank1
  5547  12CC  1303               	bcf	3,6	;RP1=0, select bank1
  5548  12CD  0188               	clrf	8	;volatile
  5549  12CE  0008               	return
  5550  12CF                     __end_of_initPorts:	
  5551                           
  5552                           	psect	text20
  5553  128F                     __ptext20:	
  5554 ;; *************** function _initInterrupts *****************
  5555 ;; Defined at:
  5556 ;;		line 169 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  5557 ;; Parameters:    Size  Location     Type
  5558 ;;		None
  5559 ;; Auto vars:     Size  Location     Type
  5560 ;;		None
  5561 ;; Return value:  Size  Location     Type
  5562 ;;		None               void
  5563 ;; Registers used:
  5564 ;;		None
  5565 ;; Tracked objects:
  5566 ;;		On entry : 0/0
  5567 ;;		On exit  : 0/0
  5568 ;;		Unchanged: 0/0
  5569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5570 ;;      Params:         0       0       0       0       0
  5571 ;;      Locals:         0       0       0       0       0
  5572 ;;      Temps:          0       0       0       0       0
  5573 ;;      Totals:         0       0       0       0       0
  5574 ;;Total ram usage:        0 bytes
  5575 ;; Hardware stack levels used:    1
  5576 ;; Hardware stack levels required when called:    2
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_main
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584                           
  5585                           ;psect for function _initInterrupts
  5586  128F                     _initInterrupts:	
  5587                           
  5588                           ;main.c: 171: INTE = 1;
  5589                           
  5590                           ;incstack = 0
  5591                           ; Regs used in _initInterrupts: []
  5592  128F  160B               	bsf	11,4	;volatile
  5593                           
  5594                           ;main.c: 172: INTF = 0;
  5595  1290  108B               	bcf	11,1	;volatile
  5596                           
  5597                           ;main.c: 173: INTEDG = 1;
  5598  1291  1683               	bsf	3,5	;RP0=1, select bank1
  5599  1292  1303               	bcf	3,6	;RP1=0, select bank1
  5600  1293  1701               	bsf	1,6	;volatile
  5601                           
  5602                           ;main.c: 174: GIE = 1;
  5603  1294  178B               	bsf	11,7	;volatile
  5604                           
  5605                           ;main.c: 175: PEIE = 1;
  5606  1295  170B               	bsf	11,6	;volatile
  5607  1296  0008               	return
  5608  1297                     __end_of_initInterrupts:	
  5609                           
  5610                           	psect	text21
  5611  144B                     __ptext21:	
  5612 ;; *************** function _handlePPM *****************
  5613 ;; Defined at:
  5614 ;;		line 54 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  5615 ;; Parameters:    Size  Location     Type
  5616 ;;		None
  5617 ;; Auto vars:     Size  Location     Type
  5618 ;;		None
  5619 ;; Return value:  Size  Location     Type
  5620 ;;                  1    wreg      unsigned char 
  5621 ;; Registers used:
  5622 ;;		wreg, status,2, status,0, pclath, cstack
  5623 ;; Tracked objects:
  5624 ;;		On entry : 0/0
  5625 ;;		On exit  : 0/0
  5626 ;;		Unchanged: 0/0
  5627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5628 ;;      Params:         0       0       0       0       0
  5629 ;;      Locals:         0       0       0       0       0
  5630 ;;      Temps:          0       0       0       0       0
  5631 ;;      Totals:         0       0       0       0       0
  5632 ;;Total ram usage:        0 bytes
  5633 ;; Hardware stack levels used:    1
  5634 ;; Hardware stack levels required when called:    3
  5635 ;; This function calls:
  5636 ;;		___ftge
  5637 ;; This function is called by:
  5638 ;;		_main
  5639 ;; This function uses a non-reentrant model
  5640 ;;
  5641                           
  5642                           
  5643                           ;psect for function _handlePPM
  5644  144B                     _handlePPM:	
  5645                           
  5646                           ;mq135_module.h: 56: if (PPM > 9)
  5647                           
  5648                           ;incstack = 0
  5649                           ; Regs used in _handlePPM: [wreg+status,2+status,0+pclath+cstack]
  5650  144B  3000               	movlw	0
  5651  144C  1283               	bcf	3,5	;RP0=0, select bank0
  5652  144D  1303               	bcf	3,6	;RP1=0, select bank0
  5653  144E  00A0               	movwf	___ftge@ff1
  5654  144F  3010               	movlw	16
  5655  1450  00A1               	movwf	___ftge@ff1+1
  5656  1451  3041               	movlw	65
  5657  1452  00A2               	movwf	___ftge@ff1+2
  5658  1453  1683               	bsf	3,5	;RP0=1, select bank1
  5659  1454  1303               	bcf	3,6	;RP1=0, select bank1
  5660  1455  085C               	movf	_PPM^(0+128),w	;volatile
  5661  1456  1283               	bcf	3,5	;RP0=0, select bank0
  5662  1457  1303               	bcf	3,6	;RP1=0, select bank0
  5663  1458  00A3               	movwf	___ftge@ff2
  5664  1459  1683               	bsf	3,5	;RP0=1, select bank1
  5665  145A  1303               	bcf	3,6	;RP1=0, select bank1
  5666  145B  085D               	movf	(_PPM+1)^(0+128),w	;volatile
  5667  145C  1283               	bcf	3,5	;RP0=0, select bank0
  5668  145D  1303               	bcf	3,6	;RP1=0, select bank0
  5669  145E  00A4               	movwf	___ftge@ff2+1
  5670  145F  1683               	bsf	3,5	;RP0=1, select bank1
  5671  1460  1303               	bcf	3,6	;RP1=0, select bank1
  5672  1461  085E               	movf	(_PPM+2)^(0+128),w	;volatile
  5673  1462  1283               	bcf	3,5	;RP0=0, select bank0
  5674  1463  1303               	bcf	3,6	;RP1=0, select bank0
  5675  1464  00A5               	movwf	___ftge@ff2+2
  5676  1465  160A  118A  2737  160A  118A  	fcall	___ftge
  5677  146A  1803               	btfsc	3,0
  5678  146B  2C72               	goto	l150
  5679                           
  5680                           ;mq135_module.h: 57: {
  5681                           ;mq135_module.h: 58: PORTCbits.RC5 = 0;
  5682  146C  1283               	bcf	3,5	;RP0=0, select bank0
  5683  146D  1303               	bcf	3,6	;RP1=0, select bank0
  5684  146E  1287               	bcf	7,5	;volatile
  5685                           
  5686                           ;mq135_module.h: 59: ppmFlag = 1;
  5687  146F  01FC               	clrf	_ppmFlag
  5688  1470  0AFC               	incf	_ppmFlag,f
  5689                           
  5690                           ;mq135_module.h: 61: }
  5691                           
  5692                           ;mq135_module.h: 60: return 1;
  5693                           ;	Return value of _handlePPM is never used
  5694  1471  0008               	return
  5695  1472                     l150:	
  5696                           
  5697                           ;mq135_module.h: 62: else
  5698                           ;mq135_module.h: 63: {
  5699                           ;mq135_module.h: 64: PORTCbits.RC5 = 1;
  5700  1472  1283               	bcf	3,5	;RP0=0, select bank0
  5701  1473  1303               	bcf	3,6	;RP1=0, select bank0
  5702  1474  1687               	bsf	7,5	;volatile
  5703                           
  5704                           ;mq135_module.h: 65: ppmFlag = 0;
  5705  1475  01FC               	clrf	_ppmFlag
  5706                           
  5707                           ;mq135_module.h: 66: return 0;
  5708                           ;	Return value of _handlePPM is never used
  5709  1476  0008               	return
  5710  1477                     __end_of_handlePPM:	
  5711                           
  5712                           	psect	text22
  5713  1737                     __ptext22:	
  5714 ;; *************** function ___ftge *****************
  5715 ;; Defined at:
  5716 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  ff1             3    0[BANK0 ] float 
  5719 ;;  ff2             3    3[BANK0 ] float 
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;		None
  5722 ;; Return value:  Size  Location     Type
  5723 ;;		None               void
  5724 ;; Registers used:
  5725 ;;		wreg, status,2, status,0
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5731 ;;      Params:         0       6       0       0       0
  5732 ;;      Locals:         0       0       0       0       0
  5733 ;;      Temps:          0       6       0       0       0
  5734 ;;      Totals:         0      12       0       0       0
  5735 ;;Total ram usage:       12 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    2
  5738 ;; This function calls:
  5739 ;;		Nothing
  5740 ;; This function is called by:
  5741 ;;		_handlePPM
  5742 ;; This function uses a non-reentrant model
  5743 ;;
  5744                           
  5745                           
  5746                           ;psect for function ___ftge
  5747  1737                     ___ftge:	
  5748                           
  5749                           ;incstack = 0
  5750                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5751  1737  1283               	bcf	3,5	;RP0=0, select bank0
  5752  1738  1303               	bcf	3,6	;RP1=0, select bank0
  5753  1739  1FA2               	btfss	___ftge@ff1+2,7
  5754  173A  2F60               	goto	l2603
  5755  173B  3000               	movlw	0
  5756  173C  00A6               	movwf	??___ftge
  5757  173D  3000               	movlw	0
  5758  173E  00A7               	movwf	??___ftge+1
  5759  173F  3080               	movlw	128
  5760  1740  00A8               	movwf	??___ftge+2
  5761  1741  0920               	comf	___ftge@ff1,w
  5762  1742  00A9               	movwf	??___ftge+3
  5763  1743  0921               	comf	___ftge@ff1+1,w
  5764  1744  00AA               	movwf	??___ftge+4
  5765  1745  0922               	comf	___ftge@ff1+2,w
  5766  1746  00AB               	movwf	??___ftge+5
  5767  1747  0AA9               	incf	??___ftge+3,f
  5768  1748  1903               	skipnz
  5769  1749  0AAA               	incf	??___ftge+4,f
  5770  174A  1903               	skipnz
  5771  174B  0AAB               	incf	??___ftge+5,f
  5772  174C  0829               	movf	??___ftge+3,w
  5773  174D  07A6               	addwf	??___ftge,f
  5774  174E  082A               	movf	??___ftge+4,w
  5775  174F  1803               	skipnc
  5776  1750  0F2A               	incfsz	??___ftge+4,w
  5777  1751  2F53               	goto	u3341
  5778  1752  2F54               	goto	u3342
  5779  1753                     u3341:	
  5780  1753  07A7               	addwf	??___ftge+1,f
  5781  1754                     u3342:	
  5782  1754  082B               	movf	??___ftge+5,w
  5783  1755  1803               	skipnc
  5784  1756  0F2B               	incfsz	??___ftge+5,w
  5785  1757  2F59               	goto	u3343
  5786  1758  2F5A               	goto	u3344
  5787  1759                     u3343:	
  5788  1759  07A8               	addwf	??___ftge+2,f
  5789  175A                     u3344:	
  5790  175A  0826               	movf	??___ftge,w
  5791  175B  00A0               	movwf	___ftge@ff1
  5792  175C  0827               	movf	??___ftge+1,w
  5793  175D  00A1               	movwf	___ftge@ff1+1
  5794  175E  0828               	movf	??___ftge+2,w
  5795  175F  00A2               	movwf	___ftge@ff1+2
  5796  1760                     l2603:	
  5797  1760  1FA5               	btfss	___ftge@ff2+2,7
  5798  1761  2F87               	goto	l2607
  5799  1762  3000               	movlw	0
  5800  1763  00A6               	movwf	??___ftge
  5801  1764  3000               	movlw	0
  5802  1765  00A7               	movwf	??___ftge+1
  5803  1766  3080               	movlw	128
  5804  1767  00A8               	movwf	??___ftge+2
  5805  1768  0923               	comf	___ftge@ff2,w
  5806  1769  00A9               	movwf	??___ftge+3
  5807  176A  0924               	comf	___ftge@ff2+1,w
  5808  176B  00AA               	movwf	??___ftge+4
  5809  176C  0925               	comf	___ftge@ff2+2,w
  5810  176D  00AB               	movwf	??___ftge+5
  5811  176E  0AA9               	incf	??___ftge+3,f
  5812  176F  1903               	skipnz
  5813  1770  0AAA               	incf	??___ftge+4,f
  5814  1771  1903               	skipnz
  5815  1772  0AAB               	incf	??___ftge+5,f
  5816  1773  0829               	movf	??___ftge+3,w
  5817  1774  07A6               	addwf	??___ftge,f
  5818  1775  082A               	movf	??___ftge+4,w
  5819  1776  1803               	skipnc
  5820  1777  0F2A               	incfsz	??___ftge+4,w
  5821  1778  2F7A               	goto	u3361
  5822  1779  2F7B               	goto	u3362
  5823  177A                     u3361:	
  5824  177A  07A7               	addwf	??___ftge+1,f
  5825  177B                     u3362:	
  5826  177B  082B               	movf	??___ftge+5,w
  5827  177C  1803               	skipnc
  5828  177D  0F2B               	incfsz	??___ftge+5,w
  5829  177E  2F80               	goto	u3363
  5830  177F  2F81               	goto	u3364
  5831  1780                     u3363:	
  5832  1780  07A8               	addwf	??___ftge+2,f
  5833  1781                     u3364:	
  5834  1781  0826               	movf	??___ftge,w
  5835  1782  00A3               	movwf	___ftge@ff2
  5836  1783  0827               	movf	??___ftge+1,w
  5837  1784  00A4               	movwf	___ftge@ff2+1
  5838  1785  0828               	movf	??___ftge+2,w
  5839  1786  00A5               	movwf	___ftge@ff2+2
  5840  1787                     l2607:	
  5841  1787  3080               	movlw	128
  5842  1788  06A2               	xorwf	___ftge@ff1+2,f
  5843  1789  3080               	movlw	128
  5844  178A  06A5               	xorwf	___ftge@ff2+2,f
  5845  178B  0825               	movf	___ftge@ff2+2,w
  5846  178C  0222               	subwf	___ftge@ff1+2,w
  5847  178D  1D03               	skipz
  5848  178E  0008               	return
  5849  178F  0824               	movf	___ftge@ff2+1,w
  5850  1790  0221               	subwf	___ftge@ff1+1,w
  5851  1791  1D03               	skipz
  5852  1792  0008               	return
  5853  1793  0823               	movf	___ftge@ff2,w
  5854  1794  0220               	subwf	___ftge@ff1,w
  5855  1795  0008               	return
  5856  1796                     __end_of___ftge:	
  5857                           
  5858                           	psect	text23
  5859  131C                     __ptext23:	
  5860 ;; *************** function _displayTime *****************
  5861 ;; Defined at:
  5862 ;;		line 50 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  5863 ;; Parameters:    Size  Location     Type
  5864 ;;		None
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  timeFormat     16   44[BANK0 ] unsigned char [16]
  5867 ;; Return value:  Size  Location     Type
  5868 ;;		None               void
  5869 ;; Registers used:
  5870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5876 ;;      Params:         0       0       0       0       0
  5877 ;;      Locals:         0      16       0       0       0
  5878 ;;      Temps:          0       4       0       0       0
  5879 ;;      Totals:         0      20       0       0       0
  5880 ;;Total ram usage:       20 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    4
  5883 ;; This function calls:
  5884 ;;		_printToLCD
  5885 ;;		_sprintf
  5886 ;; This function is called by:
  5887 ;;		_main
  5888 ;; This function uses a non-reentrant model
  5889 ;;
  5890                           
  5891                           
  5892                           ;psect for function _displayTime
  5893  131C                     _displayTime:	
  5894                           
  5895                           ;time_scheduler.h: 52: char timeFormat[16];
  5896                           ;time_scheduler.h: 53: sprintf(timeFormat, "Time: %02d:%02d", hours, minutes);
  5897                           
  5898                           ;incstack = 0
  5899                           ; Regs used in _displayTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5900  131C  3078               	movlw	low (STR_9| (0+32768))
  5901  131D  1283               	bcf	3,5	;RP0=0, select bank0
  5902  131E  1303               	bcf	3,6	;RP1=0, select bank0
  5903  131F  00AE               	movwf	sprintf@f
  5904  1320  3090               	movlw	high (STR_9| (0+32768))
  5905  1321  00AF               	movwf	sprintf@f+1
  5906  1322  0865               	movf	_hours,w	;volatile
  5907  1323  00C8               	movwf	??_displayTime
  5908  1324  01C9               	clrf	??_displayTime+1
  5909  1325  0848               	movf	??_displayTime,w
  5910  1326  00B0               	movwf	?_sprintf+2
  5911  1327  0849               	movf	??_displayTime+1,w
  5912  1328  00B1               	movwf	?_sprintf+3
  5913  1329  086D               	movf	_minutes,w	;volatile
  5914  132A  00CA               	movwf	??_displayTime+2
  5915  132B  01CB               	clrf	??_displayTime+3
  5916  132C  084A               	movf	??_displayTime+2,w
  5917  132D  00B2               	movwf	?_sprintf+4
  5918  132E  084B               	movf	??_displayTime+3,w
  5919  132F  00B3               	movwf	?_sprintf+5
  5920  1330  304C               	movlw	displayTime@timeFormat& (0+255)
  5921  1331  120A  158A  2601  160A  118A  	fcall	_sprintf
  5922                           
  5923                           ;time_scheduler.h: 54: printToLCD(timeFormat);
  5924  1336  304C               	movlw	displayTime@timeFormat& (0+255)
  5925  1337  1283               	bcf	3,5	;RP0=0, select bank0
  5926  1338  1303               	bcf	3,6	;RP1=0, select bank0
  5927  1339  00A2               	movwf	printToLCD@str
  5928  133A  3000               	movlw	0
  5929  133B  00A3               	movwf	printToLCD@str+1
  5930  133C  160A  118A  2389   	fcall	_printToLCD
  5931  133F  0008               	return
  5932  1340                     __end_of_displayTime:	
  5933                           
  5934                           	psect	text24
  5935  0632                     __ptext24:	
  5936 ;; *************** function _displayPPM *****************
  5937 ;; Defined at:
  5938 ;;		line 37 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;		None
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  strBuffer      20    0[BANK1 ] unsigned char [20]
  5943 ;;  ppmFraction     2   22[BANK1 ] int 
  5944 ;;  ppmWhole        2   20[BANK1 ] int 
  5945 ;;  bufPtr          1   24[BANK1 ] PTR unsigned char 
  5946 ;;		 -> displayPPM@strBuffer(20), 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;		None               void
  5949 ;; Registers used:
  5950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5956 ;;      Params:         0       0       0       0       0
  5957 ;;      Locals:         0       0      25       0       0
  5958 ;;      Temps:          0       1       0       0       0
  5959 ;;      Totals:         0       1      25       0       0
  5960 ;;Total ram usage:       26 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:    4
  5963 ;; This function calls:
  5964 ;;		___awtoft
  5965 ;;		___ftadd
  5966 ;;		___ftmul
  5967 ;;		___ftneg
  5968 ;;		___fttol
  5969 ;;		_printToLCD
  5970 ;;		_sprintf
  5971 ;; This function is called by:
  5972 ;;		_main
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function _displayPPM
  5978  0632                     _displayPPM:	
  5979                           
  5980                           ;mq135_module.h: 39: char strBuffer[20];
  5981                           ;mq135_module.h: 40: int ppmWhole = (int)PPM;
  5982                           
  5983                           ;incstack = 0
  5984                           ; Regs used in _displayPPM: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5985  0632  1683               	bsf	3,5	;RP0=1, select bank1
  5986  0633  1303               	bcf	3,6	;RP1=0, select bank1
  5987  0634  085C               	movf	_PPM^(0+128),w	;volatile
  5988  0635  1283               	bcf	3,5	;RP0=0, select bank0
  5989  0636  1303               	bcf	3,6	;RP1=0, select bank0
  5990  0637  00CE               	movwf	___fttol@f1
  5991  0638  1683               	bsf	3,5	;RP0=1, select bank1
  5992  0639  1303               	bcf	3,6	;RP1=0, select bank1
  5993  063A  085D               	movf	(_PPM+1)^(0+128),w	;volatile
  5994  063B  1283               	bcf	3,5	;RP0=0, select bank0
  5995  063C  1303               	bcf	3,6	;RP1=0, select bank0
  5996  063D  00CF               	movwf	___fttol@f1+1
  5997  063E  1683               	bsf	3,5	;RP0=1, select bank1
  5998  063F  1303               	bcf	3,6	;RP1=0, select bank1
  5999  0640  085E               	movf	(_PPM+2)^(0+128),w	;volatile
  6000  0641  1283               	bcf	3,5	;RP0=0, select bank0
  6001  0642  1303               	bcf	3,6	;RP1=0, select bank0
  6002  0643  00D0               	movwf	___fttol@f1+2
  6003  0644  120A  118A  275B  120A  118A  	fcall	___fttol
  6004  0649  1283               	bcf	3,5	;RP0=0, select bank0
  6005  064A  1303               	bcf	3,6	;RP1=0, select bank0
  6006  064B  084F               	movf	?___fttol+1,w
  6007  064C  1683               	bsf	3,5	;RP0=1, select bank1
  6008  064D  1303               	bcf	3,6	;RP1=0, select bank1
  6009  064E  01B5               	clrf	(displayPPM@ppmWhole+1)^(0+128)
  6010  064F  07B5               	addwf	(displayPPM@ppmWhole+1)^(0+128),f
  6011  0650  1283               	bcf	3,5	;RP0=0, select bank0
  6012  0651  1303               	bcf	3,6	;RP1=0, select bank0
  6013  0652  084E               	movf	?___fttol,w
  6014  0653  1683               	bsf	3,5	;RP0=1, select bank1
  6015  0654  1303               	bcf	3,6	;RP1=0, select bank1
  6016  0655  01B4               	clrf	displayPPM@ppmWhole^(0+128)
  6017  0656  07B4               	addwf	displayPPM@ppmWhole^(0+128),f
  6018                           
  6019                           ;mq135_module.h: 41: int ppmFraction = (int)((PPM - ppmWhole) * 100);
  6020  0657  0835               	movf	(displayPPM@ppmWhole+1)^(0+128),w
  6021  0658  1283               	bcf	3,5	;RP0=0, select bank0
  6022  0659  1303               	bcf	3,6	;RP1=0, select bank0
  6023  065A  01A9               	clrf	___awtoft@c+1
  6024  065B  07A9               	addwf	___awtoft@c+1,f
  6025  065C  1683               	bsf	3,5	;RP0=1, select bank1
  6026  065D  1303               	bcf	3,6	;RP1=0, select bank1
  6027  065E  0834               	movf	displayPPM@ppmWhole^(0+128),w
  6028  065F  1283               	bcf	3,5	;RP0=0, select bank0
  6029  0660  1303               	bcf	3,6	;RP1=0, select bank0
  6030  0661  01A8               	clrf	___awtoft@c
  6031  0662  07A8               	addwf	___awtoft@c,f
  6032  0663  160A  118A  2364  120A  118A  	fcall	___awtoft
  6033  0668  1283               	bcf	3,5	;RP0=0, select bank0
  6034  0669  1303               	bcf	3,6	;RP1=0, select bank0
  6035  066A  0828               	movf	?___awtoft,w
  6036  066B  00AE               	movwf	___ftneg@f1
  6037  066C  0829               	movf	?___awtoft+1,w
  6038  066D  00AF               	movwf	___ftneg@f1+1
  6039  066E  082A               	movf	?___awtoft+2,w
  6040  066F  00B0               	movwf	___ftneg@f1+2
  6041  0670  160A  118A  22A8  120A  118A  	fcall	___ftneg
  6042  0675  1283               	bcf	3,5	;RP0=0, select bank0
  6043  0676  1303               	bcf	3,6	;RP1=0, select bank0
  6044  0677  082E               	movf	?___ftneg,w
  6045  0678  00C4               	movwf	___ftadd@f2
  6046  0679  082F               	movf	?___ftneg+1,w
  6047  067A  00C5               	movwf	___ftadd@f2+1
  6048  067B  0830               	movf	?___ftneg+2,w
  6049  067C  00C6               	movwf	___ftadd@f2+2
  6050  067D  1683               	bsf	3,5	;RP0=1, select bank1
  6051  067E  1303               	bcf	3,6	;RP1=0, select bank1
  6052  067F  085C               	movf	_PPM^(0+128),w	;volatile
  6053  0680  1283               	bcf	3,5	;RP0=0, select bank0
  6054  0681  1303               	bcf	3,6	;RP1=0, select bank0
  6055  0682  00C1               	movwf	___ftadd@f1
  6056  0683  1683               	bsf	3,5	;RP0=1, select bank1
  6057  0684  1303               	bcf	3,6	;RP1=0, select bank1
  6058  0685  085D               	movf	(_PPM+1)^(0+128),w	;volatile
  6059  0686  1283               	bcf	3,5	;RP0=0, select bank0
  6060  0687  1303               	bcf	3,6	;RP1=0, select bank0
  6061  0688  00C2               	movwf	___ftadd@f1+1
  6062  0689  1683               	bsf	3,5	;RP0=1, select bank1
  6063  068A  1303               	bcf	3,6	;RP1=0, select bank1
  6064  068B  085E               	movf	(_PPM+2)^(0+128),w	;volatile
  6065  068C  1283               	bcf	3,5	;RP0=0, select bank0
  6066  068D  1303               	bcf	3,6	;RP1=0, select bank0
  6067  068E  00C3               	movwf	___ftadd@f1+2
  6068  068F  120A  158A  24F8  120A  118A  	fcall	___ftadd
  6069  0694  1283               	bcf	3,5	;RP0=0, select bank0
  6070  0695  1303               	bcf	3,6	;RP1=0, select bank0
  6071  0696  0841               	movf	?___ftadd,w
  6072  0697  00B4               	movwf	___ftmul@f2
  6073  0698  0842               	movf	?___ftadd+1,w
  6074  0699  00B5               	movwf	___ftmul@f2+1
  6075  069A  0843               	movf	?___ftadd+2,w
  6076  069B  00B6               	movwf	___ftmul@f2+2
  6077  069C  3000               	movlw	0
  6078  069D  00B1               	movwf	___ftmul@f1
  6079  069E  30C8               	movlw	200
  6080  069F  00B2               	movwf	___ftmul@f1+1
  6081  06A0  3042               	movlw	66
  6082  06A1  00B3               	movwf	___ftmul@f1+2
  6083  06A2  120A  158A  2425  120A  118A  	fcall	___ftmul
  6084  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  6085  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  6086  06A9  0831               	movf	?___ftmul,w
  6087  06AA  00CE               	movwf	___fttol@f1
  6088  06AB  0832               	movf	?___ftmul+1,w
  6089  06AC  00CF               	movwf	___fttol@f1+1
  6090  06AD  0833               	movf	?___ftmul+2,w
  6091  06AE  00D0               	movwf	___fttol@f1+2
  6092  06AF  120A  118A  275B  120A  118A  	fcall	___fttol
  6093  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  6094  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  6095  06B6  084F               	movf	?___fttol+1,w
  6096  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  6097  06B8  1303               	bcf	3,6	;RP1=0, select bank1
  6098  06B9  01B7               	clrf	(displayPPM@ppmFraction+1)^(0+128)
  6099  06BA  07B7               	addwf	(displayPPM@ppmFraction+1)^(0+128),f
  6100  06BB  1283               	bcf	3,5	;RP0=0, select bank0
  6101  06BC  1303               	bcf	3,6	;RP1=0, select bank0
  6102  06BD  084E               	movf	?___fttol,w
  6103  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  6104  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  6105  06C0  01B6               	clrf	displayPPM@ppmFraction^(0+128)
  6106  06C1  07B6               	addwf	displayPPM@ppmFraction^(0+128),f
  6107                           
  6108                           ;mq135_module.h: 44: char *bufPtr = strBuffer;
  6109  06C2  30A0               	movlw	displayPPM@strBuffer& (0+255)
  6110  06C3  1283               	bcf	3,5	;RP0=0, select bank0
  6111  06C4  1303               	bcf	3,6	;RP1=0, select bank0
  6112  06C5  00DC               	movwf	??_displayPPM
  6113  06C6  085C               	movf	??_displayPPM,w
  6114  06C7  1683               	bsf	3,5	;RP0=1, select bank1
  6115  06C8  1303               	bcf	3,6	;RP1=0, select bank1
  6116  06C9  00B8               	movwf	displayPPM@bufPtr^(0+128)
  6117                           
  6118                           ;mq135_module.h: 45: bufPtr += sprintf(bufPtr, "CO2: ");
  6119  06CA  3012               	movlw	low (STR_4| (0+32768))
  6120  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  6121  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  6122  06CD  00AE               	movwf	sprintf@f
  6123  06CE  3091               	movlw	high (STR_4| (0+32768))
  6124  06CF  00AF               	movwf	sprintf@f+1
  6125  06D0  1683               	bsf	3,5	;RP0=1, select bank1
  6126  06D1  1303               	bcf	3,6	;RP1=0, select bank1
  6127  06D2  0838               	movf	displayPPM@bufPtr^(0+128),w
  6128  06D3  120A  158A  2601  120A  118A  	fcall	_sprintf
  6129  06D8  1283               	bcf	3,5	;RP0=0, select bank0
  6130  06D9  1303               	bcf	3,6	;RP1=0, select bank0
  6131  06DA  082E               	movf	?_sprintf,w
  6132  06DB  00DC               	movwf	??_displayPPM
  6133  06DC  085C               	movf	??_displayPPM,w
  6134  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  6135  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  6136  06DF  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  6137                           
  6138                           ;mq135_module.h: 46: bufPtr += sprintf(bufPtr, "%d", ppmWhole);
  6139  06E0  30F8               	movlw	low ((STR_2+6)| (0+32768))
  6140  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  6141  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  6142  06E3  00AE               	movwf	sprintf@f
  6143  06E4  3090               	movlw	high ((STR_2+6)| (0+32768))
  6144  06E5  00AF               	movwf	sprintf@f+1
  6145  06E6  1683               	bsf	3,5	;RP0=1, select bank1
  6146  06E7  1303               	bcf	3,6	;RP1=0, select bank1
  6147  06E8  0835               	movf	(displayPPM@ppmWhole+1)^(0+128),w
  6148  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  6149  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  6150  06EB  01B1               	clrf	?_sprintf+3
  6151  06EC  07B1               	addwf	?_sprintf+3,f
  6152  06ED  1683               	bsf	3,5	;RP0=1, select bank1
  6153  06EE  1303               	bcf	3,6	;RP1=0, select bank1
  6154  06EF  0834               	movf	displayPPM@ppmWhole^(0+128),w
  6155  06F0  1283               	bcf	3,5	;RP0=0, select bank0
  6156  06F1  1303               	bcf	3,6	;RP1=0, select bank0
  6157  06F2  01B0               	clrf	?_sprintf+2
  6158  06F3  07B0               	addwf	?_sprintf+2,f
  6159  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  6160  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  6161  06F6  0838               	movf	displayPPM@bufPtr^(0+128),w
  6162  06F7  120A  158A  2601  120A  118A  	fcall	_sprintf
  6163  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  6164  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  6165  06FE  082E               	movf	?_sprintf,w
  6166  06FF  00DC               	movwf	??_displayPPM
  6167  0700  085C               	movf	??_displayPPM,w
  6168  0701  1683               	bsf	3,5	;RP0=1, select bank1
  6169  0702  1303               	bcf	3,6	;RP1=0, select bank1
  6170  0703  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  6171                           
  6172                           ;mq135_module.h: 47: *bufPtr++ = '.';
  6173  0704  302E               	movlw	46
  6174  0705  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0706  1303               	bcf	3,6	;RP1=0, select bank0
  6176  0707  00DC               	movwf	??_displayPPM
  6177  0708  1683               	bsf	3,5	;RP0=1, select bank1
  6178  0709  1303               	bcf	3,6	;RP1=0, select bank1
  6179  070A  0838               	movf	displayPPM@bufPtr^(0+128),w
  6180  070B  0084               	movwf	4
  6181  070C  1283               	bcf	3,5	;RP0=0, select bank0
  6182  070D  1303               	bcf	3,6	;RP1=0, select bank0
  6183  070E  085C               	movf	??_displayPPM,w
  6184  070F  1383               	bcf	3,7	;select IRP bank0
  6185  0710  0080               	movwf	0
  6186  0711  3001               	movlw	1
  6187  0712  00DC               	movwf	??_displayPPM
  6188  0713  085C               	movf	??_displayPPM,w
  6189  0714  1683               	bsf	3,5	;RP0=1, select bank1
  6190  0715  1303               	bcf	3,6	;RP1=0, select bank1
  6191  0716  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  6192                           
  6193                           ;mq135_module.h: 48: if (ppmFraction < 10)
  6194  0717  0837               	movf	(displayPPM@ppmFraction+1)^(0+128),w
  6195  0718  3A80               	xorlw	128
  6196  0719  00FF               	movwf	127
  6197  071A  3080               	movlw	128
  6198  071B  027F               	subwf	127,w
  6199  071C  1D03               	skipz
  6200  071D  2F20               	goto	u3525
  6201  071E  300A               	movlw	10
  6202  071F  0236               	subwf	displayPPM@ppmFraction^(0+128),w
  6203  0720                     u3525:	
  6204  0720  1803               	skipnc
  6205  0721  2F35               	goto	l2707
  6206                           
  6207                           ;mq135_module.h: 49: *bufPtr++ = '0';
  6208  0722  3030               	movlw	48
  6209  0723  1283               	bcf	3,5	;RP0=0, select bank0
  6210  0724  1303               	bcf	3,6	;RP1=0, select bank0
  6211  0725  00DC               	movwf	??_displayPPM
  6212  0726  1683               	bsf	3,5	;RP0=1, select bank1
  6213  0727  1303               	bcf	3,6	;RP1=0, select bank1
  6214  0728  0838               	movf	displayPPM@bufPtr^(0+128),w
  6215  0729  0084               	movwf	4
  6216  072A  1283               	bcf	3,5	;RP0=0, select bank0
  6217  072B  1303               	bcf	3,6	;RP1=0, select bank0
  6218  072C  085C               	movf	??_displayPPM,w
  6219  072D  1383               	bcf	3,7	;select IRP bank0
  6220  072E  0080               	movwf	0
  6221  072F  3001               	movlw	1
  6222  0730  00DC               	movwf	??_displayPPM
  6223  0731  085C               	movf	??_displayPPM,w
  6224  0732  1683               	bsf	3,5	;RP0=1, select bank1
  6225  0733  1303               	bcf	3,6	;RP1=0, select bank1
  6226  0734  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  6227  0735                     l2707:	
  6228                           
  6229                           ;mq135_module.h: 50: sprintf(bufPtr, "%d ppm  ", ppmFraction);
  6230  0735  30E0               	movlw	low (STR_6| (0+32768))
  6231  0736  1283               	bcf	3,5	;RP0=0, select bank0
  6232  0737  1303               	bcf	3,6	;RP1=0, select bank0
  6233  0738  00AE               	movwf	sprintf@f
  6234  0739  3090               	movlw	high (STR_6| (0+32768))
  6235  073A  00AF               	movwf	sprintf@f+1
  6236  073B  1683               	bsf	3,5	;RP0=1, select bank1
  6237  073C  1303               	bcf	3,6	;RP1=0, select bank1
  6238  073D  0837               	movf	(displayPPM@ppmFraction+1)^(0+128),w
  6239  073E  1283               	bcf	3,5	;RP0=0, select bank0
  6240  073F  1303               	bcf	3,6	;RP1=0, select bank0
  6241  0740  01B1               	clrf	?_sprintf+3
  6242  0741  07B1               	addwf	?_sprintf+3,f
  6243  0742  1683               	bsf	3,5	;RP0=1, select bank1
  6244  0743  1303               	bcf	3,6	;RP1=0, select bank1
  6245  0744  0836               	movf	displayPPM@ppmFraction^(0+128),w
  6246  0745  1283               	bcf	3,5	;RP0=0, select bank0
  6247  0746  1303               	bcf	3,6	;RP1=0, select bank0
  6248  0747  01B0               	clrf	?_sprintf+2
  6249  0748  07B0               	addwf	?_sprintf+2,f
  6250  0749  1683               	bsf	3,5	;RP0=1, select bank1
  6251  074A  1303               	bcf	3,6	;RP1=0, select bank1
  6252  074B  0838               	movf	displayPPM@bufPtr^(0+128),w
  6253  074C  120A  158A  2601  120A  118A  	fcall	_sprintf
  6254                           
  6255                           ;mq135_module.h: 51: printToLCD(strBuffer);
  6256  0751  30A0               	movlw	displayPPM@strBuffer& (0+255)
  6257  0752  1283               	bcf	3,5	;RP0=0, select bank0
  6258  0753  1303               	bcf	3,6	;RP1=0, select bank0
  6259  0754  00A2               	movwf	printToLCD@str
  6260  0755  3000               	movlw	0
  6261  0756  00A3               	movwf	printToLCD@str+1
  6262  0757  160A  118A  2389   	fcall	_printToLCD
  6263  075A  0008               	return
  6264  075B                     __end_of_displayPPM:	
  6265                           
  6266                           	psect	text25
  6267  0E01                     __ptext25:	
  6268 ;; *************** function _sprintf *****************
  6269 ;; Defined at:
  6270 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  sp              1    wreg     PTR unsigned char 
  6273 ;;		 -> main@buffer(16), debugInfo(10), displayTime@timeFormat(16), displayPPM@strBuffer(20), 
  6274 ;;		 -> displayDataDHT11@buffer(15), 
  6275 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  6276 ;;		 -> STR_32(15), STR_30(15), STR_27(17), STR_25(17), 
  6277 ;;		 -> STR_22(25), STR_21(10), STR_20(10), STR_19(10), 
  6278 ;;		 -> STR_18(10), STR_17(10), STR_16(10), STR_15(10), 
  6279 ;;		 -> STR_14(10), STR_13(10), STR_12(10), STR_11(10), 
  6280 ;;		 -> STR_10(10), STR_9(16), STR_6(9), STR_5(3), 
  6281 ;;		 -> STR_4(6), STR_2(9), STR_1(10), 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  sp              1   39[BANK0 ] PTR unsigned char 
  6284 ;;		 -> main@buffer(16), debugInfo(10), displayTime@timeFormat(16), displayPPM@strBuffer(20), 
  6285 ;;		 -> displayDataDHT11@buffer(15), 
  6286 ;;  _val            4   31[BANK0 ] struct .
  6287 ;;  width           2   36[BANK0 ] int 
  6288 ;;  ccnt            2   29[BANK0 ] int 
  6289 ;;  c               1   38[BANK0 ] char 
  6290 ;;  flag            1   35[BANK0 ] unsigned char 
  6291 ;;  prec            1   28[BANK0 ] char 
  6292 ;;  ap              1   27[BANK0 ] PTR void [1]
  6293 ;;		 -> ?_sprintf(2), 
  6294 ;; Return value:  Size  Location     Type
  6295 ;;                  2   14[BANK0 ] int 
  6296 ;; Registers used:
  6297 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6298 ;; Tracked objects:
  6299 ;;		On entry : 0/0
  6300 ;;		On exit  : 0/0
  6301 ;;		Unchanged: 0/0
  6302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6303 ;;      Params:         0      10       0       0       0
  6304 ;;      Locals:         0      13       0       0       0
  6305 ;;      Temps:          0       3       0       0       0
  6306 ;;      Totals:         0      26       0       0       0
  6307 ;;Total ram usage:       26 bytes
  6308 ;; Hardware stack levels used:    1
  6309 ;; Hardware stack levels required when called:    3
  6310 ;; This function calls:
  6311 ;;		___lwdiv
  6312 ;;		___lwmod
  6313 ;;		___wmul
  6314 ;;		_isdigit
  6315 ;; This function is called by:
  6316 ;;		_displayDataDHT11
  6317 ;;		_displayPPM
  6318 ;;		_displayTime
  6319 ;;		_setHoursStart
  6320 ;;		_setHoursEnd
  6321 ;;		_setMinutesStart
  6322 ;;		_setMinutesEnd
  6323 ;;		_main
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           
  6328                           ;psect for function _sprintf
  6329  0E01                     _sprintf:	
  6330                           
  6331                           ;incstack = 0
  6332                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6333                           ;sprintf@sp stored from wreg
  6334  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  6335  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  6336  0E03  00C7               	movwf	sprintf@sp
  6337                           
  6338                           ;doprnt.c: 494: va_list ap;
  6339                           ;doprnt.c: 499: signed char c;
  6340                           ;doprnt.c: 501: int width;
  6341                           ;doprnt.c: 506: signed char prec;
  6342                           ;doprnt.c: 508: unsigned char flag;
  6343                           ;doprnt.c: 510: int ccnt = 0;
  6344  0E04  01BD               	clrf	sprintf@ccnt
  6345  0E05  01BE               	clrf	sprintf@ccnt+1
  6346                           
  6347                           ;doprnt.c: 527: union {
  6348                           ;doprnt.c: 528: unsigned int _val;
  6349                           ;doprnt.c: 529: struct {
  6350                           ;doprnt.c: 530: const char * _cp;
  6351                           ;doprnt.c: 531: unsigned _len;
  6352                           ;doprnt.c: 532: } _str;
  6353                           ;doprnt.c: 533: } _val;
  6354                           ;doprnt.c: 542: *ap = __va_start();
  6355  0E06  3030               	movlw	(?_sprintf+2)& (0+255)
  6356  0E07  00B8               	movwf	??_sprintf
  6357  0E08  0838               	movf	??_sprintf,w
  6358  0E09  00BB               	movwf	sprintf@ap
  6359  0E0A                     l2257:	
  6360                           ;doprnt.c: 545: while(c = *f++) {
  6361                           
  6362  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  6363  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  6364  0E0C  082F               	movf	sprintf@f+1,w
  6365  0E0D  00B9               	movwf	??_sprintf+1
  6366  0E0E  082E               	movf	sprintf@f,w
  6367  0E0F  00B8               	movwf	??_sprintf
  6368  0E10  0AAE               	incf	sprintf@f,f
  6369  0E11  1903               	skipnz
  6370  0E12  0AAF               	incf	sprintf@f+1,f
  6371  0E13  0839               	movf	??_sprintf+1,w
  6372  0E14  00FF               	movwf	127
  6373  0E15  0838               	movf	??_sprintf,w
  6374  0E16  0084               	movwf	4
  6375  0E17  160A  118A  2000  120A  158A  	fcall	stringtab
  6376  0E1C  00BA               	movwf	??_sprintf+2
  6377  0E1D  083A               	movf	??_sprintf+2,w
  6378  0E1E  00C6               	movwf	sprintf@c
  6379  0E1F  08C6               	movf	sprintf@c,f
  6380  0E20  1903               	btfsc	3,2
  6381  0E21  2FF3               	goto	l2259
  6382                           
  6383                           ;doprnt.c: 547: if(c != '%')
  6384  0E22  0846               	movf	sprintf@c,w
  6385  0E23  3A25               	xorlw	37
  6386  0E24  1903               	skipnz
  6387  0E25  2E38               	goto	l2153
  6388                           
  6389                           ;doprnt.c: 549: {
  6390                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
  6391  0E26  0846               	movf	sprintf@c,w
  6392  0E27  00B8               	movwf	??_sprintf
  6393  0E28  0847               	movf	sprintf@sp,w
  6394  0E29  0084               	movwf	4
  6395  0E2A  0838               	movf	??_sprintf,w
  6396  0E2B  1383               	bcf	3,7	;select IRP bank0
  6397  0E2C  0080               	movwf	0
  6398  0E2D  3001               	movlw	1
  6399  0E2E  00B8               	movwf	??_sprintf
  6400  0E2F  0838               	movf	??_sprintf,w
  6401  0E30  07C7               	addwf	sprintf@sp,f
  6402  0E31  3001               	movlw	1
  6403  0E32  07BD               	addwf	sprintf@ccnt,f
  6404  0E33  1803               	skipnc
  6405  0E34  0ABE               	incf	sprintf@ccnt+1,f
  6406  0E35  3000               	movlw	0
  6407  0E36  07BE               	addwf	sprintf@ccnt+1,f
  6408                           
  6409                           ;doprnt.c: 551: continue;
  6410  0E37  2E0A               	goto	l2257
  6411  0E38                     l2153:	
  6412                           
  6413                           ;doprnt.c: 552: }
  6414                           ;doprnt.c: 555: width = 0;
  6415  0E38  01C4               	clrf	sprintf@width
  6416  0E39  01C5               	clrf	sprintf@width+1
  6417                           
  6418                           ;doprnt.c: 557: flag = 0;
  6419  0E3A  01C3               	clrf	sprintf@flag
  6420                           
  6421                           ;doprnt.c: 560: switch(*f) {
  6422                           
  6423                           ;doprnt.c: 559: for(;;) {
  6424  0E3B  2E41               	goto	l2157
  6425  0E3C                     l346:	
  6426                           ;doprnt.c: 588: case '0':
  6427                           
  6428                           
  6429                           ;doprnt.c: 589: flag |= 0x04;
  6430  0E3C  1543               	bsf	sprintf@flag,2
  6431                           
  6432                           ;doprnt.c: 590: f++;
  6433  0E3D  3001               	movlw	1
  6434  0E3E  07AE               	addwf	sprintf@f,f
  6435  0E3F  1803               	skipnc
  6436  0E40  0AAF               	incf	sprintf@f+1,f
  6437  0E41                     l2157:	
  6438                           ;doprnt.c: 593: }
  6439                           
  6440                           ;doprnt.c: 591: continue;
  6441                           
  6442  0E41  082F               	movf	sprintf@f+1,w
  6443  0E42  00FF               	movwf	127
  6444  0E43  082E               	movf	sprintf@f,w
  6445  0E44  0084               	movwf	4
  6446  0E45  160A  118A  2000  120A  158A  	fcall	stringtab
  6447                           
  6448                           ; Switch size 1, requested type "space"
  6449                           ; Number of cases is 1, Range of values is 48 to 48
  6450                           ; switch strategies available:
  6451                           ; Name         Instructions Cycles
  6452                           ; simple_byte            4     3 (average)
  6453                           ; direct_byte           14    11 (fixed)
  6454                           ; jumptable            263     9 (fixed)
  6455                           ;	Chosen strategy is simple_byte
  6456  0E4A  3A30               	xorlw	48	; case 48
  6457  0E4B  1903               	skipnz
  6458  0E4C  2E3C               	goto	l346
  6459  0E4D  2E4E               	goto	l2159
  6460  0E4E                     l2159:	
  6461                           ;doprnt.c: 595: }
  6462                           
  6463                           ;doprnt.c: 594: break;
  6464                           
  6465                           
  6466                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  6467  0E4E  082F               	movf	sprintf@f+1,w
  6468  0E4F  00FF               	movwf	127
  6469  0E50  082E               	movf	sprintf@f,w
  6470  0E51  0084               	movwf	4
  6471  0E52  160A  118A  2000  120A  158A  	fcall	stringtab
  6472  0E57  160A  118A  22CF  120A  158A  	fcall	_isdigit
  6473  0E5C  1C03               	btfss	3,0
  6474  0E5D  2EA4               	goto	l2173
  6475                           
  6476                           ;doprnt.c: 607: width = 0;
  6477  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  6478  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  6479  0E60  01C4               	clrf	sprintf@width
  6480  0E61  01C5               	clrf	sprintf@width+1
  6481  0E62                     l2163:	
  6482                           ;doprnt.c: 608: do {
  6483                           
  6484                           
  6485                           ;doprnt.c: 609: width *= 10;
  6486  0E62  300A               	movlw	10
  6487  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  6488  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  6489  0E65  00A0               	movwf	___wmul@multiplier
  6490  0E66  3000               	movlw	0
  6491  0E67  00A1               	movwf	___wmul@multiplier+1
  6492  0E68  0845               	movf	sprintf@width+1,w
  6493  0E69  01A3               	clrf	___wmul@multiplicand+1
  6494  0E6A  07A3               	addwf	___wmul@multiplicand+1,f
  6495  0E6B  0844               	movf	sprintf@width,w
  6496  0E6C  01A2               	clrf	___wmul@multiplicand
  6497  0E6D  07A2               	addwf	___wmul@multiplicand,f
  6498  0E6E  160A  118A  23AE  120A  158A  	fcall	___wmul
  6499  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  6500  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  6501  0E75  0821               	movf	?___wmul+1,w
  6502  0E76  01C5               	clrf	sprintf@width+1
  6503  0E77  07C5               	addwf	sprintf@width+1,f
  6504  0E78  0820               	movf	?___wmul,w
  6505  0E79  01C4               	clrf	sprintf@width
  6506  0E7A  07C4               	addwf	sprintf@width,f
  6507                           
  6508                           ;doprnt.c: 610: width += *f++ - '0';
  6509  0E7B  082F               	movf	sprintf@f+1,w
  6510  0E7C  00FF               	movwf	127
  6511  0E7D  082E               	movf	sprintf@f,w
  6512  0E7E  0084               	movwf	4
  6513  0E7F  160A  118A  2000  120A  158A  	fcall	stringtab
  6514  0E84  3ED0               	addlw	208
  6515  0E85  00B8               	movwf	??_sprintf
  6516  0E86  30FF               	movlw	255
  6517  0E87  1803               	skipnc
  6518  0E88  3000               	movlw	0
  6519  0E89  00B9               	movwf	??_sprintf+1
  6520  0E8A  0838               	movf	??_sprintf,w
  6521  0E8B  07C4               	addwf	sprintf@width,f
  6522  0E8C  1803               	skipnc
  6523  0E8D  0AC5               	incf	sprintf@width+1,f
  6524  0E8E  0839               	movf	??_sprintf+1,w
  6525  0E8F  07C5               	addwf	sprintf@width+1,f
  6526  0E90  3001               	movlw	1
  6527  0E91  07AE               	addwf	sprintf@f,f
  6528  0E92  1803               	skipnc
  6529  0E93  0AAF               	incf	sprintf@f+1,f
  6530                           
  6531                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  6532  0E94  082F               	movf	sprintf@f+1,w
  6533  0E95  00FF               	movwf	127
  6534  0E96  082E               	movf	sprintf@f,w
  6535  0E97  0084               	movwf	4
  6536  0E98  160A  118A  2000  120A  158A  	fcall	stringtab
  6537  0E9D  160A  118A  22CF  120A  158A  	fcall	_isdigit
  6538  0EA2  1803               	btfsc	3,0
  6539  0EA3  2E62               	goto	l2163
  6540  0EA4                     l2173:	
  6541                           ;doprnt.c: 831: }
  6542                           
  6543                           ;doprnt.c: 822: continue;
  6544                           
  6545                           ;doprnt.c: 811: default:
  6546                           
  6547                           ;doprnt.c: 707: case 'i':
  6548                           ;doprnt.c: 708: break;
  6549                           
  6550                           ;doprnt.c: 706: case 'd':
  6551                           
  6552                           ;doprnt.c: 647: goto alldone;
  6553                           
  6554                           ;doprnt.c: 646: case 0:
  6555                           
  6556                           ;doprnt.c: 617: }
  6557                           ;doprnt.c: 644: switch(c = *f++) {
  6558                           
  6559  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  6560  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  6561  0EA6  082F               	movf	sprintf@f+1,w
  6562  0EA7  00B9               	movwf	??_sprintf+1
  6563  0EA8  082E               	movf	sprintf@f,w
  6564  0EA9  00B8               	movwf	??_sprintf
  6565  0EAA  0AAE               	incf	sprintf@f,f
  6566  0EAB  1903               	skipnz
  6567  0EAC  0AAF               	incf	sprintf@f+1,f
  6568  0EAD  0839               	movf	??_sprintf+1,w
  6569  0EAE  00FF               	movwf	127
  6570  0EAF  0838               	movf	??_sprintf,w
  6571  0EB0  0084               	movwf	4
  6572  0EB1  160A  118A  2000  120A  158A  	fcall	stringtab
  6573  0EB6  00C6               	movwf	sprintf@c
  6574                           
  6575                           ; Switch size 1, requested type "space"
  6576                           ; Number of cases is 3, Range of values is 0 to 105
  6577                           ; switch strategies available:
  6578                           ; Name         Instructions Cycles
  6579                           ; simple_byte           10     6 (average)
  6580                           ; jumptable            260     6 (fixed)
  6581                           ;	Chosen strategy is simple_byte
  6582  0EB7  3A00               	xorlw	0	; case 0
  6583  0EB8  1903               	skipnz
  6584  0EB9  2FF3               	goto	l2259
  6585  0EBA  3A64               	xorlw	100	; case 100
  6586  0EBB  1903               	skipnz
  6587  0EBC  2EC1               	goto	l2175
  6588  0EBD  3A0D               	xorlw	13	; case 105
  6589  0EBE  1903               	skipnz
  6590  0EBF  2EC1               	goto	l2175
  6591  0EC0  2E0A               	goto	l2257
  6592  0EC1                     l2175:	
  6593                           
  6594                           ;doprnt.c: 1262: {
  6595                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6596  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  6597  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  6598  0EC3  083B               	movf	sprintf@ap,w
  6599  0EC4  0084               	movwf	4
  6600  0EC5  1383               	bcf	3,7	;select IRP bank0
  6601  0EC6  0800               	movf	0,w
  6602  0EC7  00BF               	movwf	sprintf@_val
  6603  0EC8  0A84               	incf	4,f
  6604  0EC9  0800               	movf	0,w
  6605  0ECA  00C0               	movwf	sprintf@_val+1
  6606  0ECB  3002               	movlw	2
  6607  0ECC  00B8               	movwf	??_sprintf
  6608  0ECD  0838               	movf	??_sprintf,w
  6609  0ECE  07BB               	addwf	sprintf@ap,f
  6610                           
  6611                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  6612  0ECF  1FC0               	btfss	sprintf@_val+1,7
  6613  0ED0  2EDA               	goto	l2185
  6614                           
  6615                           ;doprnt.c: 1271: flag |= 0x03;
  6616  0ED1  3003               	movlw	3
  6617  0ED2  00B8               	movwf	??_sprintf
  6618  0ED3  0838               	movf	??_sprintf,w
  6619  0ED4  04C3               	iorwf	sprintf@flag,f
  6620                           
  6621                           ;doprnt.c: 1272: _val._val = -_val._val;
  6622  0ED5  09BF               	comf	sprintf@_val,f
  6623  0ED6  09C0               	comf	sprintf@_val+1,f
  6624  0ED7  0ABF               	incf	sprintf@_val,f
  6625  0ED8  1903               	skipnz
  6626  0ED9  0AC0               	incf	sprintf@_val+1,f
  6627  0EDA                     l2185:	
  6628                           
  6629                           ;doprnt.c: 1273: }
  6630                           ;doprnt.c: 1275: }
  6631                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6632  0EDA  01C6               	clrf	sprintf@c
  6633  0EDB  0AC6               	incf	sprintf@c,f
  6634  0EDC  0846               	movf	sprintf@c,w
  6635  0EDD  3A05               	xorlw	5
  6636  0EDE  1903               	btfsc	3,2
  6637  0EDF  2F05               	goto	l2197
  6638  0EE0                     l2189:	
  6639                           
  6640                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  6641  0EE0  0846               	movf	sprintf@c,w
  6642  0EE1  00B8               	movwf	??_sprintf
  6643  0EE2  0738               	addwf	??_sprintf,w
  6644  0EE3  3E12               	addlw	low (_dpowers| (0+32768))
  6645  0EE4  0084               	movwf	4
  6646  0EE5  3090               	movlw	high (_dpowers| (0+32768))
  6647  0EE6  1803               	skipnc
  6648  0EE7  3E01               	addlw	1
  6649  0EE8  00FF               	movwf	127
  6650  0EE9  160A  118A  2000  120A  158A  	fcall	stringtab
  6651  0EEE  00B9               	movwf	??_sprintf+1
  6652  0EEF  160A  118A  2000  120A  158A  	fcall	stringtab
  6653  0EF4  00BA               	movwf	??_sprintf+2
  6654  0EF5  083A               	movf	??_sprintf+2,w
  6655  0EF6  0240               	subwf	sprintf@_val+1,w
  6656  0EF7  1D03               	skipz
  6657  0EF8  2EFB               	goto	u2505
  6658  0EF9  0839               	movf	??_sprintf+1,w
  6659  0EFA  023F               	subwf	sprintf@_val,w
  6660  0EFB                     u2505:	
  6661  0EFB  1C03               	btfss	3,0
  6662  0EFC  2F05               	goto	l2197
  6663                           
  6664                           ;doprnt.c: 1316: break;
  6665  0EFD  3001               	movlw	1
  6666  0EFE  00B8               	movwf	??_sprintf
  6667  0EFF  0838               	movf	??_sprintf,w
  6668  0F00  07C6               	addwf	sprintf@c,f
  6669  0F01  0846               	movf	sprintf@c,w
  6670  0F02  3A05               	xorlw	5
  6671  0F03  1D03               	skipz
  6672  0F04  2EE0               	goto	l2189
  6673  0F05                     l2197:	
  6674                           
  6675                           ;doprnt.c: 1354: if(width && flag & 0x03)
  6676  0F05  0845               	movf	sprintf@width+1,w
  6677  0F06  0444               	iorwf	sprintf@width,w
  6678  0F07  1903               	skipnz
  6679  0F08  2F13               	goto	l364
  6680  0F09  0843               	movf	sprintf@flag,w
  6681  0F0A  3903               	andlw	3
  6682  0F0B  1903               	btfsc	3,2
  6683  0F0C  2F13               	goto	l364
  6684                           
  6685                           ;doprnt.c: 1355: width--;
  6686  0F0D  30FF               	movlw	255
  6687  0F0E  07C4               	addwf	sprintf@width,f
  6688  0F0F  1803               	skipnc
  6689  0F10  0AC5               	incf	sprintf@width+1,f
  6690  0F11  30FF               	movlw	255
  6691  0F12  07C5               	addwf	sprintf@width+1,f
  6692  0F13                     l364:	
  6693                           
  6694                           ;doprnt.c: 1390: if(width > c)
  6695  0F13  0846               	movf	sprintf@c,w
  6696  0F14  00B8               	movwf	??_sprintf
  6697  0F15  01B9               	clrf	??_sprintf+1
  6698  0F16  1BB8               	btfsc	??_sprintf,7
  6699  0F17  03B9               	decf	??_sprintf+1,f
  6700  0F18  0839               	movf	??_sprintf+1,w
  6701  0F19  3A80               	xorlw	128
  6702  0F1A  00BA               	movwf	??_sprintf+2
  6703  0F1B  0845               	movf	sprintf@width+1,w
  6704  0F1C  3A80               	xorlw	128
  6705  0F1D  023A               	subwf	??_sprintf+2,w
  6706  0F1E  1D03               	skipz
  6707  0F1F  2F22               	goto	u2545
  6708  0F20  0844               	movf	sprintf@width,w
  6709  0F21  0238               	subwf	??_sprintf,w
  6710  0F22                     u2545:	
  6711  0F22  1803               	skipnc
  6712  0F23  2F32               	goto	l2205
  6713                           
  6714                           ;doprnt.c: 1391: width -= c;
  6715  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  6716  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  6717  0F26  0846               	movf	sprintf@c,w
  6718  0F27  00B8               	movwf	??_sprintf
  6719  0F28  01B9               	clrf	??_sprintf+1
  6720  0F29  1BB8               	btfsc	??_sprintf,7
  6721  0F2A  03B9               	decf	??_sprintf+1,f
  6722  0F2B  0838               	movf	??_sprintf,w
  6723  0F2C  02C4               	subwf	sprintf@width,f
  6724  0F2D  0839               	movf	??_sprintf+1,w
  6725  0F2E  1C03               	skipc
  6726  0F2F  03C5               	decf	sprintf@width+1,f
  6727  0F30  02C5               	subwf	sprintf@width+1,f
  6728  0F31  2F36               	goto	l2207
  6729  0F32                     l2205:	
  6730                           
  6731                           ;doprnt.c: 1392: else
  6732                           ;doprnt.c: 1393: width = 0;
  6733  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  6734  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  6735  0F34  01C4               	clrf	sprintf@width
  6736  0F35  01C5               	clrf	sprintf@width+1
  6737  0F36                     l2207:	
  6738                           
  6739                           ;doprnt.c: 1396: if(flag & 0x04) {
  6740  0F36  1D43               	btfss	sprintf@flag,2
  6741  0F37  2F69               	goto	l2227
  6742                           
  6743                           ;doprnt.c: 1401: if(flag & 0x03)
  6744  0F38  0843               	movf	sprintf@flag,w
  6745  0F39  3903               	andlw	3
  6746  0F3A  1903               	btfsc	3,2
  6747  0F3B  2F4D               	goto	l2217
  6748                           
  6749                           ;doprnt.c: 1402: ((*sp++ = ('-')),(++ccnt));
  6750  0F3C  302D               	movlw	45
  6751  0F3D  00B8               	movwf	??_sprintf
  6752  0F3E  0847               	movf	sprintf@sp,w
  6753  0F3F  0084               	movwf	4
  6754  0F40  0838               	movf	??_sprintf,w
  6755  0F41  1383               	bcf	3,7	;select IRP bank0
  6756  0F42  0080               	movwf	0
  6757  0F43  3001               	movlw	1
  6758  0F44  00B8               	movwf	??_sprintf
  6759  0F45  0838               	movf	??_sprintf,w
  6760  0F46  07C7               	addwf	sprintf@sp,f
  6761  0F47  3001               	movlw	1
  6762  0F48  07BD               	addwf	sprintf@ccnt,f
  6763  0F49  1803               	skipnc
  6764  0F4A  0ABE               	incf	sprintf@ccnt+1,f
  6765  0F4B  3000               	movlw	0
  6766  0F4C  07BE               	addwf	sprintf@ccnt+1,f
  6767  0F4D                     l2217:	
  6768                           
  6769                           ;doprnt.c: 1424: if(width)
  6770  0F4D  0845               	movf	sprintf@width+1,w
  6771  0F4E  0444               	iorwf	sprintf@width,w
  6772  0F4F  1903               	skipnz
  6773  0F50  2F9D               	goto	l2245
  6774                           
  6775                           ;doprnt.c: 1426: ((*sp++ = ('0')),(++ccnt));
  6776                           
  6777                           ;doprnt.c: 1425: do
  6778  0F51  3030               	movlw	48
  6779  0F52  00B8               	movwf	??_sprintf
  6780  0F53  0847               	movf	sprintf@sp,w
  6781  0F54  0084               	movwf	4
  6782  0F55  0838               	movf	??_sprintf,w
  6783  0F56  1383               	bcf	3,7	;select IRP bank0
  6784  0F57  0080               	movwf	0
  6785  0F58  3001               	movlw	1
  6786  0F59  00B8               	movwf	??_sprintf
  6787  0F5A  0838               	movf	??_sprintf,w
  6788  0F5B  07C7               	addwf	sprintf@sp,f
  6789  0F5C  3001               	movlw	1
  6790  0F5D  07BD               	addwf	sprintf@ccnt,f
  6791  0F5E  1803               	skipnc
  6792  0F5F  0ABE               	incf	sprintf@ccnt+1,f
  6793  0F60  3000               	movlw	0
  6794  0F61  07BE               	addwf	sprintf@ccnt+1,f
  6795                           
  6796                           ;doprnt.c: 1427: while(--width);
  6797  0F62  30FF               	movlw	255
  6798  0F63  07C4               	addwf	sprintf@width,f
  6799  0F64  1803               	skipnc
  6800  0F65  0AC5               	incf	sprintf@width+1,f
  6801  0F66  30FF               	movlw	255
  6802  0F67  07C5               	addwf	sprintf@width+1,f
  6803  0F68  2F4D               	goto	l2217
  6804  0F69                     l2227:	
  6805                           ;doprnt.c: 1429: } else
  6806                           
  6807                           
  6808                           ;doprnt.c: 1431: {
  6809                           ;doprnt.c: 1433: if(width
  6810                           ;doprnt.c: 1437: )
  6811  0F69  0845               	movf	sprintf@width+1,w
  6812  0F6A  0444               	iorwf	sprintf@width,w
  6813  0F6B  1903               	skipnz
  6814  0F6C  2F88               	goto	l2237
  6815  0F6D                     l2229:	
  6816                           ;doprnt.c: 1438: do
  6817                           
  6818                           
  6819                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
  6820  0F6D  3020               	movlw	32
  6821  0F6E  00B8               	movwf	??_sprintf
  6822  0F6F  0847               	movf	sprintf@sp,w
  6823  0F70  0084               	movwf	4
  6824  0F71  0838               	movf	??_sprintf,w
  6825  0F72  1383               	bcf	3,7	;select IRP bank0
  6826  0F73  0080               	movwf	0
  6827  0F74  3001               	movlw	1
  6828  0F75  00B8               	movwf	??_sprintf
  6829  0F76  0838               	movf	??_sprintf,w
  6830  0F77  07C7               	addwf	sprintf@sp,f
  6831  0F78  3001               	movlw	1
  6832  0F79  07BD               	addwf	sprintf@ccnt,f
  6833  0F7A  1803               	skipnc
  6834  0F7B  0ABE               	incf	sprintf@ccnt+1,f
  6835  0F7C  3000               	movlw	0
  6836  0F7D  07BE               	addwf	sprintf@ccnt+1,f
  6837                           
  6838                           ;doprnt.c: 1440: while(--width);
  6839  0F7E  30FF               	movlw	255
  6840  0F7F  07C4               	addwf	sprintf@width,f
  6841  0F80  1803               	skipnc
  6842  0F81  0AC5               	incf	sprintf@width+1,f
  6843  0F82  30FF               	movlw	255
  6844  0F83  07C5               	addwf	sprintf@width+1,f
  6845  0F84  0845               	movf	sprintf@width+1,w
  6846  0F85  0444               	iorwf	sprintf@width,w
  6847  0F86  1D03               	skipz
  6848  0F87  2F6D               	goto	l2229
  6849  0F88                     l2237:	
  6850                           
  6851                           ;doprnt.c: 1447: if(flag & 0x03)
  6852  0F88  0843               	movf	sprintf@flag,w
  6853  0F89  3903               	andlw	3
  6854  0F8A  1903               	btfsc	3,2
  6855  0F8B  2F9D               	goto	l2245
  6856                           
  6857                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
  6858  0F8C  302D               	movlw	45
  6859  0F8D  00B8               	movwf	??_sprintf
  6860  0F8E  0847               	movf	sprintf@sp,w
  6861  0F8F  0084               	movwf	4
  6862  0F90  0838               	movf	??_sprintf,w
  6863  0F91  1383               	bcf	3,7	;select IRP bank0
  6864  0F92  0080               	movwf	0
  6865  0F93  3001               	movlw	1
  6866  0F94  00B8               	movwf	??_sprintf
  6867  0F95  0838               	movf	??_sprintf,w
  6868  0F96  07C7               	addwf	sprintf@sp,f
  6869  0F97  3001               	movlw	1
  6870  0F98  07BD               	addwf	sprintf@ccnt,f
  6871  0F99  1803               	skipnc
  6872  0F9A  0ABE               	incf	sprintf@ccnt+1,f
  6873  0F9B  3000               	movlw	0
  6874  0F9C  07BE               	addwf	sprintf@ccnt+1,f
  6875  0F9D                     l2245:	
  6876                           
  6877                           ;doprnt.c: 1478: }
  6878                           ;doprnt.c: 1481: prec = c;
  6879  0F9D  0846               	movf	sprintf@c,w
  6880  0F9E  00B8               	movwf	??_sprintf
  6881  0F9F  0838               	movf	??_sprintf,w
  6882  0FA0  00BC               	movwf	sprintf@prec
  6883  0FA1                     l2255:	
  6884                           ;doprnt.c: 1483: while(prec--) {
  6885                           
  6886  0FA1  30FF               	movlw	-1
  6887  0FA2  00B8               	movwf	??_sprintf
  6888  0FA3  0838               	movf	??_sprintf,w
  6889  0FA4  07BC               	addwf	sprintf@prec,f
  6890  0FA5  083C               	movf	sprintf@prec,w
  6891  0FA6  3AFF               	xorlw	-1
  6892  0FA7  1903               	btfsc	3,2
  6893  0FA8  2E0A               	goto	l2257
  6894                           
  6895                           ;doprnt.c: 1487: {
  6896                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  6897  0FA9  300A               	movlw	10
  6898  0FAA  00A8               	movwf	___lwmod@divisor
  6899  0FAB  3000               	movlw	0
  6900  0FAC  00A9               	movwf	___lwmod@divisor+1
  6901  0FAD  083C               	movf	sprintf@prec,w
  6902  0FAE  00B8               	movwf	??_sprintf
  6903  0FAF  0738               	addwf	??_sprintf,w
  6904  0FB0  3E12               	addlw	low (_dpowers| (0+32768))
  6905  0FB1  0084               	movwf	4
  6906  0FB2  3090               	movlw	high (_dpowers| (0+32768))
  6907  0FB3  1803               	skipnc
  6908  0FB4  3E01               	addlw	1
  6909  0FB5  00FF               	movwf	127
  6910  0FB6  160A  118A  2000  120A  158A  	fcall	stringtab
  6911  0FBB  00A0               	movwf	___lwdiv@divisor
  6912  0FBC  160A  118A  2000  120A  158A  	fcall	stringtab
  6913  0FC1  00A1               	movwf	___lwdiv@divisor+1
  6914  0FC2  0840               	movf	sprintf@_val+1,w
  6915  0FC3  01A3               	clrf	___lwdiv@dividend+1
  6916  0FC4  07A3               	addwf	___lwdiv@dividend+1,f
  6917  0FC5  083F               	movf	sprintf@_val,w
  6918  0FC6  01A2               	clrf	___lwdiv@dividend
  6919  0FC7  07A2               	addwf	___lwdiv@dividend,f
  6920  0FC8  160A  118A  251A  120A  158A  	fcall	___lwdiv
  6921  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  6922  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  6923  0FCF  0821               	movf	?___lwdiv+1,w
  6924  0FD0  01AB               	clrf	___lwmod@dividend+1
  6925  0FD1  07AB               	addwf	___lwmod@dividend+1,f
  6926  0FD2  0820               	movf	?___lwdiv,w
  6927  0FD3  01AA               	clrf	___lwmod@dividend
  6928  0FD4  07AA               	addwf	___lwmod@dividend,f
  6929  0FD5  160A  118A  24AB  120A  158A  	fcall	___lwmod
  6930  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  6931  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  6932  0FDC  0828               	movf	?___lwmod,w
  6933  0FDD  3E30               	addlw	48
  6934  0FDE  00B9               	movwf	??_sprintf+1
  6935  0FDF  0839               	movf	??_sprintf+1,w
  6936  0FE0  00C6               	movwf	sprintf@c
  6937                           
  6938                           ;doprnt.c: 1532: }
  6939                           ;doprnt.c: 1533: ((*sp++ = (c)),(++ccnt));
  6940  0FE1  0846               	movf	sprintf@c,w
  6941  0FE2  00B8               	movwf	??_sprintf
  6942  0FE3  0847               	movf	sprintf@sp,w
  6943  0FE4  0084               	movwf	4
  6944  0FE5  0838               	movf	??_sprintf,w
  6945  0FE6  1383               	bcf	3,7	;select IRP bank0
  6946  0FE7  0080               	movwf	0
  6947  0FE8  3001               	movlw	1
  6948  0FE9  00B8               	movwf	??_sprintf
  6949  0FEA  0838               	movf	??_sprintf,w
  6950  0FEB  07C7               	addwf	sprintf@sp,f
  6951  0FEC  3001               	movlw	1
  6952  0FED  07BD               	addwf	sprintf@ccnt,f
  6953  0FEE  1803               	skipnc
  6954  0FEF  0ABE               	incf	sprintf@ccnt+1,f
  6955  0FF0  3000               	movlw	0
  6956  0FF1  07BE               	addwf	sprintf@ccnt+1,f
  6957  0FF2  2FA1               	goto	l2255
  6958  0FF3                     l2259:	
  6959                           ;doprnt.c: 1534: }
  6960                           ;doprnt.c: 1542: }
  6961                           ;doprnt.c: 1544: alldone:
  6962                           
  6963                           
  6964                           ;doprnt.c: 1547: *sp = 0;
  6965  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  6966  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  6967  0FF5  0847               	movf	sprintf@sp,w
  6968  0FF6  0084               	movwf	4
  6969  0FF7  1383               	bcf	3,7	;select IRP bank0
  6970  0FF8  0180               	clrf	0
  6971                           
  6972                           ;doprnt.c: 1549: return ccnt;
  6973  0FF9  083E               	movf	sprintf@ccnt+1,w
  6974  0FFA  01AF               	clrf	?_sprintf+1
  6975  0FFB  07AF               	addwf	?_sprintf+1,f
  6976  0FFC  083D               	movf	sprintf@ccnt,w
  6977  0FFD  01AE               	clrf	?_sprintf
  6978  0FFE  07AE               	addwf	?_sprintf,f
  6979  0FFF  0008               	return
  6980  1000                     __end_of_sprintf:	
  6981                           
  6982                           	psect	text26
  6983  12CF                     __ptext26:	
  6984 ;; *************** function _isdigit *****************
  6985 ;; Defined at:
  6986 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  c               1    wreg     unsigned char 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;  c               1    1[BANK0 ] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;		None               void
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7000 ;;      Params:         0       0       0       0       0
  7001 ;;      Locals:         0       2       0       0       0
  7002 ;;      Temps:          0       0       0       0       0
  7003 ;;      Totals:         0       2       0       0       0
  7004 ;;Total ram usage:        2 bytes
  7005 ;; Hardware stack levels used:    1
  7006 ;; Hardware stack levels required when called:    2
  7007 ;; This function calls:
  7008 ;;		Nothing
  7009 ;; This function is called by:
  7010 ;;		_sprintf
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function _isdigit
  7016  12CF                     _isdigit:	
  7017                           
  7018                           ;incstack = 0
  7019                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  7020                           ;isdigit@c stored from wreg
  7021  12CF  1283               	bcf	3,5	;RP0=0, select bank0
  7022  12D0  1303               	bcf	3,6	;RP1=0, select bank0
  7023  12D1  00A1               	movwf	isdigit@c
  7024  12D2  01A0               	clrf	_isdigit$528
  7025  12D3  303A               	movlw	58
  7026  12D4  0221               	subwf	isdigit@c,w
  7027  12D5  1803               	skipnc
  7028  12D6  2ADD               	goto	l2019
  7029  12D7  3030               	movlw	48
  7030  12D8  0221               	subwf	isdigit@c,w
  7031  12D9  1C03               	skipc
  7032  12DA  2ADD               	goto	l2019
  7033  12DB  01A0               	clrf	_isdigit$528
  7034  12DC  0AA0               	incf	_isdigit$528,f
  7035  12DD                     l2019:	
  7036  12DD  0C20               	rrf	_isdigit$528,w
  7037  12DE  0008               	return
  7038  12DF                     __end_of_isdigit:	
  7039                           
  7040                           	psect	text27
  7041  13AE                     __ptext27:	
  7042 ;; *************** function ___wmul *****************
  7043 ;; Defined at:
  7044 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7047 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  product         2    4[BANK0 ] unsigned int 
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  2    0[BANK0 ] unsigned int 
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7059 ;;      Params:         0       4       0       0       0
  7060 ;;      Locals:         0       2       0       0       0
  7061 ;;      Temps:          0       0       0       0       0
  7062 ;;      Totals:         0       6       0       0       0
  7063 ;;Total ram usage:        6 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    2
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_sprintf
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           
  7074                           ;psect for function ___wmul
  7075  13AE                     ___wmul:	
  7076                           
  7077                           ;incstack = 0
  7078                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7079  13AE  1283               	bcf	3,5	;RP0=0, select bank0
  7080  13AF  1303               	bcf	3,6	;RP1=0, select bank0
  7081  13B0  01A4               	clrf	___wmul@product
  7082  13B1  01A5               	clrf	___wmul@product+1
  7083  13B2                     l2025:	
  7084  13B2  1C20               	btfss	___wmul@multiplier,0
  7085  13B3  2BBA               	goto	l465
  7086  13B4  0822               	movf	___wmul@multiplicand,w
  7087  13B5  07A4               	addwf	___wmul@product,f
  7088  13B6  1803               	skipnc
  7089  13B7  0AA5               	incf	___wmul@product+1,f
  7090  13B8  0823               	movf	___wmul@multiplicand+1,w
  7091  13B9  07A5               	addwf	___wmul@product+1,f
  7092  13BA                     l465:	
  7093  13BA  3001               	movlw	1
  7094  13BB                     u2175:	
  7095  13BB  1003               	clrc
  7096  13BC  0DA2               	rlf	___wmul@multiplicand,f
  7097  13BD  0DA3               	rlf	___wmul@multiplicand+1,f
  7098  13BE  3EFF               	addlw	-1
  7099  13BF  1D03               	skipz
  7100  13C0  2BBB               	goto	u2175
  7101  13C1  3001               	movlw	1
  7102  13C2                     u2185:	
  7103  13C2  1003               	clrc
  7104  13C3  0CA1               	rrf	___wmul@multiplier+1,f
  7105  13C4  0CA0               	rrf	___wmul@multiplier,f
  7106  13C5  3EFF               	addlw	-1
  7107  13C6  1D03               	skipz
  7108  13C7  2BC2               	goto	u2185
  7109  13C8  0821               	movf	___wmul@multiplier+1,w
  7110  13C9  0420               	iorwf	___wmul@multiplier,w
  7111  13CA  1D03               	skipz
  7112  13CB  2BB2               	goto	l2025
  7113  13CC  0825               	movf	___wmul@product+1,w
  7114  13CD  01A1               	clrf	?___wmul+1
  7115  13CE  07A1               	addwf	?___wmul+1,f
  7116  13CF  0824               	movf	___wmul@product,w
  7117  13D0  01A0               	clrf	?___wmul
  7118  13D1  07A0               	addwf	?___wmul,f
  7119  13D2  0008               	return
  7120  13D3                     __end_of___wmul:	
  7121                           
  7122                           	psect	text28
  7123  14AB                     __ptext28:	
  7124 ;; *************** function ___lwmod *****************
  7125 ;; Defined at:
  7126 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  7127 ;; Parameters:    Size  Location     Type
  7128 ;;  divisor         2    8[BANK0 ] unsigned int 
  7129 ;;  dividend        2   10[BANK0 ] unsigned int 
  7130 ;; Auto vars:     Size  Location     Type
  7131 ;;  counter         1   13[BANK0 ] unsigned char 
  7132 ;; Return value:  Size  Location     Type
  7133 ;;                  2    8[BANK0 ] unsigned int 
  7134 ;; Registers used:
  7135 ;;		wreg, status,2, status,0
  7136 ;; Tracked objects:
  7137 ;;		On entry : 0/0
  7138 ;;		On exit  : 0/0
  7139 ;;		Unchanged: 0/0
  7140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7141 ;;      Params:         0       4       0       0       0
  7142 ;;      Locals:         0       1       0       0       0
  7143 ;;      Temps:          0       1       0       0       0
  7144 ;;      Totals:         0       6       0       0       0
  7145 ;;Total ram usage:        6 bytes
  7146 ;; Hardware stack levels used:    1
  7147 ;; Hardware stack levels required when called:    2
  7148 ;; This function calls:
  7149 ;;		Nothing
  7150 ;; This function is called by:
  7151 ;;		_sprintf
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           
  7156                           ;psect for function ___lwmod
  7157  14AB                     ___lwmod:	
  7158                           
  7159                           ;incstack = 0
  7160                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7161  14AB  1283               	bcf	3,5	;RP0=0, select bank0
  7162  14AC  1303               	bcf	3,6	;RP1=0, select bank0
  7163  14AD  0829               	movf	___lwmod@divisor+1,w
  7164  14AE  0428               	iorwf	___lwmod@divisor,w
  7165  14AF  1903               	skipnz
  7166  14B0  2CDA               	goto	l2109
  7167  14B1  01AD               	clrf	___lwmod@counter
  7168  14B2  0AAD               	incf	___lwmod@counter,f
  7169  14B3                     l2099:	
  7170  14B3  1BA9               	btfsc	___lwmod@divisor+1,7
  7171  14B4  2CC1               	goto	l2101
  7172  14B5  3001               	movlw	1
  7173  14B6                     u2395:	
  7174  14B6  1003               	clrc
  7175  14B7  0DA8               	rlf	___lwmod@divisor,f
  7176  14B8  0DA9               	rlf	___lwmod@divisor+1,f
  7177  14B9  3EFF               	addlw	-1
  7178  14BA  1D03               	skipz
  7179  14BB  2CB6               	goto	u2395
  7180  14BC  3001               	movlw	1
  7181  14BD  00AC               	movwf	??___lwmod
  7182  14BE  082C               	movf	??___lwmod,w
  7183  14BF  07AD               	addwf	___lwmod@counter,f
  7184  14C0  2CB3               	goto	l2099
  7185  14C1                     l2101:	
  7186  14C1  0829               	movf	___lwmod@divisor+1,w
  7187  14C2  022B               	subwf	___lwmod@dividend+1,w
  7188  14C3  1D03               	skipz
  7189  14C4  2CC7               	goto	u2415
  7190  14C5  0828               	movf	___lwmod@divisor,w
  7191  14C6  022A               	subwf	___lwmod@dividend,w
  7192  14C7                     u2415:	
  7193  14C7  1C03               	skipc
  7194  14C8  2CCF               	goto	l2105
  7195  14C9  0828               	movf	___lwmod@divisor,w
  7196  14CA  02AA               	subwf	___lwmod@dividend,f
  7197  14CB  0829               	movf	___lwmod@divisor+1,w
  7198  14CC  1C03               	skipc
  7199  14CD  03AB               	decf	___lwmod@dividend+1,f
  7200  14CE  02AB               	subwf	___lwmod@dividend+1,f
  7201  14CF                     l2105:	
  7202  14CF  3001               	movlw	1
  7203  14D0                     u2425:	
  7204  14D0  1003               	clrc
  7205  14D1  0CA9               	rrf	___lwmod@divisor+1,f
  7206  14D2  0CA8               	rrf	___lwmod@divisor,f
  7207  14D3  3EFF               	addlw	-1
  7208  14D4  1D03               	skipz
  7209  14D5  2CD0               	goto	u2425
  7210  14D6  3001               	movlw	1
  7211  14D7  02AD               	subwf	___lwmod@counter,f
  7212  14D8  1D03               	btfss	3,2
  7213  14D9  2CC1               	goto	l2101
  7214  14DA                     l2109:	
  7215  14DA  082B               	movf	___lwmod@dividend+1,w
  7216  14DB  01A9               	clrf	?___lwmod+1
  7217  14DC  07A9               	addwf	?___lwmod+1,f
  7218  14DD  082A               	movf	___lwmod@dividend,w
  7219  14DE  01A8               	clrf	?___lwmod
  7220  14DF  07A8               	addwf	?___lwmod,f
  7221  14E0  0008               	return
  7222  14E1                     __end_of___lwmod:	
  7223                           
  7224                           	psect	text29
  7225  151A                     __ptext29:	
  7226 ;; *************** function ___lwdiv *****************
  7227 ;; Defined at:
  7228 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  7229 ;; Parameters:    Size  Location     Type
  7230 ;;  divisor         2    0[BANK0 ] unsigned int 
  7231 ;;  dividend        2    2[BANK0 ] unsigned int 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  quotient        2    5[BANK0 ] unsigned int 
  7234 ;;  counter         1    7[BANK0 ] unsigned char 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  2    0[BANK0 ] unsigned int 
  7237 ;; Registers used:
  7238 ;;		wreg, status,2, status,0
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7244 ;;      Params:         0       4       0       0       0
  7245 ;;      Locals:         0       3       0       0       0
  7246 ;;      Temps:          0       1       0       0       0
  7247 ;;      Totals:         0       8       0       0       0
  7248 ;;Total ram usage:        8 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    2
  7251 ;; This function calls:
  7252 ;;		Nothing
  7253 ;; This function is called by:
  7254 ;;		_sprintf
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           
  7259                           ;psect for function ___lwdiv
  7260  151A                     ___lwdiv:	
  7261                           
  7262                           ;incstack = 0
  7263                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7264  151A  1283               	bcf	3,5	;RP0=0, select bank0
  7265  151B  1303               	bcf	3,6	;RP1=0, select bank0
  7266  151C  01A5               	clrf	___lwdiv@quotient
  7267  151D  01A6               	clrf	___lwdiv@quotient+1
  7268  151E  0821               	movf	___lwdiv@divisor+1,w
  7269  151F  0420               	iorwf	___lwdiv@divisor,w
  7270  1520  1903               	skipnz
  7271  1521  2D53               	goto	l2087
  7272  1522  01A7               	clrf	___lwdiv@counter
  7273  1523  0AA7               	incf	___lwdiv@counter,f
  7274  1524                     l2075:	
  7275  1524  1BA1               	btfsc	___lwdiv@divisor+1,7
  7276  1525  2D32               	goto	l2077
  7277  1526  3001               	movlw	1
  7278  1527                     u2325:	
  7279  1527  1003               	clrc
  7280  1528  0DA0               	rlf	___lwdiv@divisor,f
  7281  1529  0DA1               	rlf	___lwdiv@divisor+1,f
  7282  152A  3EFF               	addlw	-1
  7283  152B  1D03               	skipz
  7284  152C  2D27               	goto	u2325
  7285  152D  3001               	movlw	1
  7286  152E  00A4               	movwf	??___lwdiv
  7287  152F  0824               	movf	??___lwdiv,w
  7288  1530  07A7               	addwf	___lwdiv@counter,f
  7289  1531  2D24               	goto	l2075
  7290  1532                     l2077:	
  7291  1532  3001               	movlw	1
  7292  1533                     u2345:	
  7293  1533  1003               	clrc
  7294  1534  0DA5               	rlf	___lwdiv@quotient,f
  7295  1535  0DA6               	rlf	___lwdiv@quotient+1,f
  7296  1536  3EFF               	addlw	-1
  7297  1537  1D03               	skipz
  7298  1538  2D33               	goto	u2345
  7299  1539  0821               	movf	___lwdiv@divisor+1,w
  7300  153A  0223               	subwf	___lwdiv@dividend+1,w
  7301  153B  1D03               	skipz
  7302  153C  2D3F               	goto	u2355
  7303  153D  0820               	movf	___lwdiv@divisor,w
  7304  153E  0222               	subwf	___lwdiv@dividend,w
  7305  153F                     u2355:	
  7306  153F  1C03               	skipc
  7307  1540  2D48               	goto	l2083
  7308  1541  0820               	movf	___lwdiv@divisor,w
  7309  1542  02A2               	subwf	___lwdiv@dividend,f
  7310  1543  0821               	movf	___lwdiv@divisor+1,w
  7311  1544  1C03               	skipc
  7312  1545  03A3               	decf	___lwdiv@dividend+1,f
  7313  1546  02A3               	subwf	___lwdiv@dividend+1,f
  7314  1547  1425               	bsf	___lwdiv@quotient,0
  7315  1548                     l2083:	
  7316  1548  3001               	movlw	1
  7317  1549                     u2365:	
  7318  1549  1003               	clrc
  7319  154A  0CA1               	rrf	___lwdiv@divisor+1,f
  7320  154B  0CA0               	rrf	___lwdiv@divisor,f
  7321  154C  3EFF               	addlw	-1
  7322  154D  1D03               	skipz
  7323  154E  2D49               	goto	u2365
  7324  154F  3001               	movlw	1
  7325  1550  02A7               	subwf	___lwdiv@counter,f
  7326  1551  1D03               	btfss	3,2
  7327  1552  2D32               	goto	l2077
  7328  1553                     l2087:	
  7329  1553  0826               	movf	___lwdiv@quotient+1,w
  7330  1554  01A1               	clrf	?___lwdiv+1
  7331  1555  07A1               	addwf	?___lwdiv+1,f
  7332  1556  0825               	movf	___lwdiv@quotient,w
  7333  1557  01A0               	clrf	?___lwdiv
  7334  1558  07A0               	addwf	?___lwdiv,f
  7335  1559  0008               	return
  7336  155A                     __end_of___lwdiv:	
  7337                           
  7338                           	psect	text30
  7339  1389                     __ptext30:	
  7340 ;; *************** function _printToLCD *****************
  7341 ;; Defined at:
  7342 ;;		line 84 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  str             2    2[BANK0 ] PTR const unsigned char 
  7345 ;;		 -> STR_33(16), STR_31(9), STR_29(10), STR_28(16), 
  7346 ;;		 -> STR_26(11), STR_24(12), STR_23(18), main@buffer(16), 
  7347 ;;		 -> debugInfo(10), displayTime@timeFormat(16), STR_8(8), STR_7(8), 
  7348 ;;		 -> displayPPM@strBuffer(20), STR_3(7), displayDataDHT11@buffer(15), 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;		None
  7351 ;; Return value:  Size  Location     Type
  7352 ;;		None               void
  7353 ;; Registers used:
  7354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7360 ;;      Params:         0       2       0       0       0
  7361 ;;      Locals:         0       0       0       0       0
  7362 ;;      Temps:          0       0       0       0       0
  7363 ;;      Totals:         0       2       0       0       0
  7364 ;;Total ram usage:        2 bytes
  7365 ;; Hardware stack levels used:    1
  7366 ;; Hardware stack levels required when called:    3
  7367 ;; This function calls:
  7368 ;;		_dataCTRL
  7369 ;; This function is called by:
  7370 ;;		_displayDataDHT11
  7371 ;;		_runDHT11
  7372 ;;		_displayPPM
  7373 ;;		_displayTime
  7374 ;;		_setHoursStart
  7375 ;;		_setHoursEnd
  7376 ;;		_setMinutesStart
  7377 ;;		_setMinutesEnd
  7378 ;;		_main
  7379 ;;		_startUpSequence
  7380 ;;		_printStatusPPM
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           
  7385                           ;psect for function _printToLCD
  7386  1389                     _printToLCD:	
  7387  1389                     l2139:	
  7388                           ;lcd_functions.h: 86: while (*str)
  7389                           
  7390                           ;incstack = 0
  7391                           ; Regs used in _printToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7392                           
  7393  1389  1283               	bcf	3,5	;RP0=0, select bank0
  7394  138A  1303               	bcf	3,6	;RP1=0, select bank0
  7395  138B  0823               	movf	printToLCD@str+1,w
  7396  138C  00FF               	movwf	127
  7397  138D  0822               	movf	printToLCD@str,w
  7398  138E  0084               	movwf	4
  7399  138F  160A  118A  2000  160A  118A  	fcall	stringtab
  7400  1394  3800               	iorlw	0
  7401  1395  1903               	btfsc	3,2
  7402  1396  0008               	return
  7403                           
  7404                           ;lcd_functions.h: 87: {
  7405                           ;lcd_functions.h: 88: dataCTRL(*str);
  7406  1397  1283               	bcf	3,5	;RP0=0, select bank0
  7407  1398  1303               	bcf	3,6	;RP1=0, select bank0
  7408  1399  0823               	movf	printToLCD@str+1,w
  7409  139A  00FF               	movwf	127
  7410  139B  0822               	movf	printToLCD@str,w
  7411  139C  0084               	movwf	4
  7412  139D  160A  118A  2000  160A  118A  	fcall	stringtab
  7413  13A2  120A  118A  27E9  160A  118A  	fcall	_dataCTRL
  7414                           
  7415                           ;lcd_functions.h: 89: str++;
  7416  13A7  3001               	movlw	1
  7417  13A8  1283               	bcf	3,5	;RP0=0, select bank0
  7418  13A9  1303               	bcf	3,6	;RP1=0, select bank0
  7419  13AA  07A2               	addwf	printToLCD@str,f
  7420  13AB  1803               	skipnc
  7421  13AC  0AA3               	incf	printToLCD@str+1,f
  7422  13AD  2B89               	goto	l2139
  7423  13AE                     __end_of_printToLCD:	
  7424                           
  7425                           	psect	text31
  7426  07E9                     __ptext31:	
  7427 ;; *************** function _dataCTRL *****************
  7428 ;; Defined at:
  7429 ;;		line 33 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  DAT             1    wreg     unsigned char 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  DAT             1    1[BANK0 ] unsigned char 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;		None               void
  7436 ;; Registers used:
  7437 ;;		wreg
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7443 ;;      Params:         0       0       0       0       0
  7444 ;;      Locals:         0       1       0       0       0
  7445 ;;      Temps:          0       1       0       0       0
  7446 ;;      Totals:         0       2       0       0       0
  7447 ;;Total ram usage:        2 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    2
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_printToLCD
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           
  7458                           ;psect for function _dataCTRL
  7459  07E9                     _dataCTRL:	
  7460                           
  7461                           ;incstack = 0
  7462                           ; Regs used in _dataCTRL: [wreg]
  7463                           ;dataCTRL@DAT stored from wreg
  7464  07E9  1283               	bcf	3,5	;RP0=0, select bank0
  7465  07EA  1303               	bcf	3,6	;RP1=0, select bank0
  7466  07EB  00A1               	movwf	dataCTRL@DAT
  7467                           
  7468                           ;lcd_functions.h: 35: PORTD = DAT;
  7469  07EC  0821               	movf	dataCTRL@DAT,w
  7470  07ED  0088               	movwf	8	;volatile
  7471                           
  7472                           ;lcd_functions.h: 36: RC0 = 1;
  7473  07EE  1407               	bsf	7,0	;volatile
  7474                           
  7475                           ;lcd_functions.h: 37: RC1 = 0;
  7476  07EF  1087               	bcf	7,1	;volatile
  7477                           
  7478                           ;lcd_functions.h: 38: RC2 = 1;
  7479  07F0  1507               	bsf	7,2	;volatile
  7480                           
  7481                           ;lcd_functions.h: 39: _delay((unsigned long)((1)*(4000000/4000.0)));
  7482  07F1  30F9               	movlw	249
  7483  07F2  00A0               	movwf	??_dataCTRL
  7484  07F3                     u4517:	
  7485  07F3  0000               	nop
  7486  07F4  0BA0               	decfsz	??_dataCTRL,f
  7487  07F5  2FF3               	goto	u4517
  7488  07F6  2FF7               	nop2	;nop
  7489  07F7  0000               	nop
  7490                           
  7491                           ;lcd_functions.h: 40: RC2 = 0;
  7492  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  7493  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  7494  07FA  1107               	bcf	7,2	;volatile
  7495  07FB  0008               	return
  7496  07FC                     __end_of_dataCTRL:	
  7497                           
  7498                           	psect	text32
  7499  075B                     __ptext32:	
  7500 ;; *************** function ___fttol *****************
  7501 ;; Defined at:
  7502 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  7503 ;; Parameters:    Size  Location     Type
  7504 ;;  f1              3   46[BANK0 ] float 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;  lval            4   55[BANK0 ] unsigned long 
  7507 ;;  exp1            1   59[BANK0 ] unsigned char 
  7508 ;;  sign1           1   54[BANK0 ] unsigned char 
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  4   46[BANK0 ] long 
  7511 ;; Registers used:
  7512 ;;		wreg, status,2, status,0
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7518 ;;      Params:         0       4       0       0       0
  7519 ;;      Locals:         0       6       0       0       0
  7520 ;;      Temps:          0       4       0       0       0
  7521 ;;      Totals:         0      14       0       0       0
  7522 ;;Total ram usage:       14 bytes
  7523 ;; Hardware stack levels used:    1
  7524 ;; Hardware stack levels required when called:    2
  7525 ;; This function calls:
  7526 ;;		Nothing
  7527 ;; This function is called by:
  7528 ;;		_displayPPM
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           
  7533                           ;psect for function ___fttol
  7534  075B                     ___fttol:	
  7535                           
  7536                           ;incstack = 0
  7537                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7538  075B  1283               	bcf	3,5	;RP0=0, select bank0
  7539  075C  1303               	bcf	3,6	;RP1=0, select bank0
  7540  075D  084E               	movf	___fttol@f1,w
  7541  075E  00D2               	movwf	??___fttol
  7542  075F  084F               	movf	___fttol@f1+1,w
  7543  0760  00D3               	movwf	??___fttol+1
  7544  0761  0850               	movf	___fttol@f1+2,w
  7545  0762  00D4               	movwf	??___fttol+2
  7546  0763  1003               	clrc
  7547  0764  0D53               	rlf	??___fttol+1,w
  7548  0765  0D54               	rlf	??___fttol+2,w
  7549  0766  00D5               	movwf	??___fttol+3
  7550  0767  0855               	movf	??___fttol+3,w
  7551  0768  00DB               	movwf	___fttol@exp1
  7552  0769  08DB               	movf	___fttol@exp1,f
  7553  076A  1D03               	skipz
  7554  076B  2F75               	goto	l2633
  7555  076C  3000               	movlw	0
  7556  076D  00D1               	movwf	?___fttol+3
  7557  076E  3000               	movlw	0
  7558  076F  00D0               	movwf	?___fttol+2
  7559  0770  3000               	movlw	0
  7560  0771  00CF               	movwf	?___fttol+1
  7561  0772  3000               	movlw	0
  7562  0773  00CE               	movwf	?___fttol
  7563  0774  0008               	return
  7564  0775                     l2633:	
  7565  0775  084E               	movf	___fttol@f1,w
  7566  0776  00D2               	movwf	??___fttol
  7567  0777  084F               	movf	___fttol@f1+1,w
  7568  0778  00D3               	movwf	??___fttol+1
  7569  0779  0850               	movf	___fttol@f1+2,w
  7570  077A  00D4               	movwf	??___fttol+2
  7571  077B  3017               	movlw	23
  7572  077C                     u3405:	
  7573  077C  1003               	clrc
  7574  077D  0CD4               	rrf	??___fttol+2,f
  7575  077E  0CD3               	rrf	??___fttol+1,f
  7576  077F  0CD2               	rrf	??___fttol,f
  7577  0780  3EFF               	addlw	-1
  7578  0781  1D03               	skipz
  7579  0782  2F7C               	goto	u3405
  7580  0783  0852               	movf	??___fttol,w
  7581  0784  00D5               	movwf	??___fttol+3
  7582  0785  0855               	movf	??___fttol+3,w
  7583  0786  00D6               	movwf	___fttol@sign1
  7584  0787  17CF               	bsf	___fttol@f1+1,7
  7585  0788  30FF               	movlw	255
  7586  0789  05CE               	andwf	___fttol@f1,f
  7587  078A  30FF               	movlw	255
  7588  078B  05CF               	andwf	___fttol@f1+1,f
  7589  078C  3000               	movlw	0
  7590  078D  05D0               	andwf	___fttol@f1+2,f
  7591  078E  084E               	movf	___fttol@f1,w
  7592  078F  00D7               	movwf	___fttol@lval
  7593  0790  084F               	movf	___fttol@f1+1,w
  7594  0791  00D8               	movwf	___fttol@lval+1
  7595  0792  0850               	movf	___fttol@f1+2,w
  7596  0793  00D9               	movwf	___fttol@lval+2
  7597  0794  01DA               	clrf	___fttol@lval+3
  7598  0795  308E               	movlw	142
  7599  0796  02DB               	subwf	___fttol@exp1,f
  7600  0797  1FDB               	btfss	___fttol@exp1,7
  7601  0798  2FB7               	goto	l2653
  7602  0799  085B               	movf	___fttol@exp1,w
  7603  079A  3A80               	xorlw	128
  7604  079B  3E8F               	addlw	143
  7605  079C  1803               	skipnc
  7606  079D  2FA7               	goto	l2651
  7607  079E  3000               	movlw	0
  7608  079F  00D1               	movwf	?___fttol+3
  7609  07A0  3000               	movlw	0
  7610  07A1  00D0               	movwf	?___fttol+2
  7611  07A2  3000               	movlw	0
  7612  07A3  00CF               	movwf	?___fttol+1
  7613  07A4  3000               	movlw	0
  7614  07A5  00CE               	movwf	?___fttol
  7615  07A6  0008               	return
  7616  07A7                     l2651:	
  7617  07A7  3001               	movlw	1
  7618  07A8                     u3435:	
  7619  07A8  1003               	clrc
  7620  07A9  0CDA               	rrf	___fttol@lval+3,f
  7621  07AA  0CD9               	rrf	___fttol@lval+2,f
  7622  07AB  0CD8               	rrf	___fttol@lval+1,f
  7623  07AC  0CD7               	rrf	___fttol@lval,f
  7624  07AD  3EFF               	addlw	-1
  7625  07AE  1D03               	skipz
  7626  07AF  2FA8               	goto	u3435
  7627  07B0  3001               	movlw	1
  7628  07B1  00D2               	movwf	??___fttol
  7629  07B2  0852               	movf	??___fttol,w
  7630  07B3  07DB               	addwf	___fttol@exp1,f
  7631  07B4  1903               	btfsc	3,2
  7632  07B5  2FD2               	goto	l2663
  7633  07B6  2FA7               	goto	l2651
  7634  07B7                     l2653:	
  7635  07B7  3018               	movlw	24
  7636  07B8  025B               	subwf	___fttol@exp1,w
  7637  07B9  1C03               	skipc
  7638  07BA  2FCF               	goto	l2661
  7639  07BB  3000               	movlw	0
  7640  07BC  00D1               	movwf	?___fttol+3
  7641  07BD  3000               	movlw	0
  7642  07BE  00D0               	movwf	?___fttol+2
  7643  07BF  3000               	movlw	0
  7644  07C0  00CF               	movwf	?___fttol+1
  7645  07C1  3000               	movlw	0
  7646  07C2  00CE               	movwf	?___fttol
  7647  07C3  0008               	return
  7648  07C4                     l2659:	
  7649  07C4  3001               	movlw	1
  7650  07C5  00D2               	movwf	??___fttol
  7651  07C6                     u3465:	
  7652  07C6  1003               	clrc
  7653  07C7  0DD7               	rlf	___fttol@lval,f
  7654  07C8  0DD8               	rlf	___fttol@lval+1,f
  7655  07C9  0DD9               	rlf	___fttol@lval+2,f
  7656  07CA  0DDA               	rlf	___fttol@lval+3,f
  7657  07CB  0BD2               	decfsz	??___fttol,f
  7658  07CC  2FC6               	goto	u3465
  7659  07CD  3001               	movlw	1
  7660  07CE  02DB               	subwf	___fttol@exp1,f
  7661  07CF                     l2661:	
  7662  07CF  08DB               	movf	___fttol@exp1,f
  7663  07D0  1D03               	skipz
  7664  07D1  2FC4               	goto	l2659
  7665  07D2                     l2663:	
  7666  07D2  0856               	movf	___fttol@sign1,w
  7667  07D3  1903               	btfsc	3,2
  7668  07D4  2FE0               	goto	l2667
  7669  07D5  09D7               	comf	___fttol@lval,f
  7670  07D6  09D8               	comf	___fttol@lval+1,f
  7671  07D7  09D9               	comf	___fttol@lval+2,f
  7672  07D8  09DA               	comf	___fttol@lval+3,f
  7673  07D9  0AD7               	incf	___fttol@lval,f
  7674  07DA  1903               	skipnz
  7675  07DB  0AD8               	incf	___fttol@lval+1,f
  7676  07DC  1903               	skipnz
  7677  07DD  0AD9               	incf	___fttol@lval+2,f
  7678  07DE  1903               	skipnz
  7679  07DF  0ADA               	incf	___fttol@lval+3,f
  7680  07E0                     l2667:	
  7681  07E0  085A               	movf	___fttol@lval+3,w
  7682  07E1  00D1               	movwf	?___fttol+3
  7683  07E2  0859               	movf	___fttol@lval+2,w
  7684  07E3  00D0               	movwf	?___fttol+2
  7685  07E4  0858               	movf	___fttol@lval+1,w
  7686  07E5  00CF               	movwf	?___fttol+1
  7687  07E6  0857               	movf	___fttol@lval,w
  7688  07E7  00CE               	movwf	?___fttol
  7689  07E8  0008               	return
  7690  07E9                     __end_of___fttol:	
  7691                           
  7692                           	psect	text33
  7693  12A8                     __ptext33:	
  7694 ;; *************** function ___ftneg *****************
  7695 ;; Defined at:
  7696 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7697 ;; Parameters:    Size  Location     Type
  7698 ;;  f1              3   14[BANK0 ] float 
  7699 ;; Auto vars:     Size  Location     Type
  7700 ;;		None
  7701 ;; Return value:  Size  Location     Type
  7702 ;;                  3   14[BANK0 ] float 
  7703 ;; Registers used:
  7704 ;;		wreg
  7705 ;; Tracked objects:
  7706 ;;		On entry : 0/0
  7707 ;;		On exit  : 0/0
  7708 ;;		Unchanged: 0/0
  7709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7710 ;;      Params:         0       3       0       0       0
  7711 ;;      Locals:         0       0       0       0       0
  7712 ;;      Temps:          0       0       0       0       0
  7713 ;;      Totals:         0       3       0       0       0
  7714 ;;Total ram usage:        3 bytes
  7715 ;; Hardware stack levels used:    1
  7716 ;; Hardware stack levels required when called:    2
  7717 ;; This function calls:
  7718 ;;		Nothing
  7719 ;; This function is called by:
  7720 ;;		_displayPPM
  7721 ;; This function uses a non-reentrant model
  7722 ;;
  7723                           
  7724                           
  7725                           ;psect for function ___ftneg
  7726  12A8                     ___ftneg:	
  7727                           
  7728                           ;incstack = 0
  7729                           ; Regs used in ___ftneg: [wreg]
  7730  12A8  1283               	bcf	3,5	;RP0=0, select bank0
  7731  12A9  1303               	bcf	3,6	;RP1=0, select bank0
  7732  12AA  0830               	movf	___ftneg@f1+2,w
  7733  12AB  042F               	iorwf	___ftneg@f1+1,w
  7734  12AC  042E               	iorwf	___ftneg@f1,w
  7735  12AD  1903               	skipnz
  7736  12AE  0008               	return
  7737  12AF  3080               	movlw	128
  7738  12B0  06B0               	xorwf	___ftneg@f1+2,f
  7739  12B1  0008               	return
  7740  12B2                     __end_of___ftneg:	
  7741                           
  7742                           	psect	text34
  7743  0C25                     __ptext34:	
  7744 ;; *************** function ___ftmul *****************
  7745 ;; Defined at:
  7746 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;  f1              3   17[BANK0 ] float 
  7749 ;;  f2              3   20[BANK0 ] float 
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;  f3_as_produc    3   28[BANK0 ] unsigned um
  7752 ;;  sign            1   32[BANK0 ] unsigned char 
  7753 ;;  cntr            1   31[BANK0 ] unsigned char 
  7754 ;;  exp             1   27[BANK0 ] unsigned char 
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  3   17[BANK0 ] float 
  7757 ;; Registers used:
  7758 ;;		wreg, status,2, status,0, pclath, cstack
  7759 ;; Tracked objects:
  7760 ;;		On entry : 0/0
  7761 ;;		On exit  : 0/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7764 ;;      Params:         0       6       0       0       0
  7765 ;;      Locals:         0       6       0       0       0
  7766 ;;      Temps:          0       4       0       0       0
  7767 ;;      Totals:         0      16       0       0       0
  7768 ;;Total ram usage:       16 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    3
  7771 ;; This function calls:
  7772 ;;		___ftpack
  7773 ;; This function is called by:
  7774 ;;		_displayPPM
  7775 ;;		_CalcMQ135
  7776 ;; This function uses a non-reentrant model
  7777 ;;
  7778                           
  7779                           
  7780                           ;psect for function ___ftmul
  7781  0C25                     ___ftmul:	
  7782                           
  7783                           ;incstack = 0
  7784                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7785  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  7786  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  7787  0C27  0831               	movf	___ftmul@f1,w
  7788  0C28  00B7               	movwf	??___ftmul
  7789  0C29  0832               	movf	___ftmul@f1+1,w
  7790  0C2A  00B8               	movwf	??___ftmul+1
  7791  0C2B  0833               	movf	___ftmul@f1+2,w
  7792  0C2C  00B9               	movwf	??___ftmul+2
  7793  0C2D  1003               	clrc
  7794  0C2E  0D38               	rlf	??___ftmul+1,w
  7795  0C2F  0D39               	rlf	??___ftmul+2,w
  7796  0C30  00BA               	movwf	??___ftmul+3
  7797  0C31  083A               	movf	??___ftmul+3,w
  7798  0C32  00BB               	movwf	___ftmul@exp
  7799  0C33  08BB               	movf	___ftmul@exp,f
  7800  0C34  1D03               	skipz
  7801  0C35  2C3D               	goto	l2397
  7802  0C36  3000               	movlw	0
  7803  0C37  00B1               	movwf	?___ftmul
  7804  0C38  3000               	movlw	0
  7805  0C39  00B2               	movwf	?___ftmul+1
  7806  0C3A  3000               	movlw	0
  7807  0C3B  00B3               	movwf	?___ftmul+2
  7808  0C3C  0008               	return
  7809  0C3D                     l2397:	
  7810  0C3D  0834               	movf	___ftmul@f2,w
  7811  0C3E  00B7               	movwf	??___ftmul
  7812  0C3F  0835               	movf	___ftmul@f2+1,w
  7813  0C40  00B8               	movwf	??___ftmul+1
  7814  0C41  0836               	movf	___ftmul@f2+2,w
  7815  0C42  00B9               	movwf	??___ftmul+2
  7816  0C43  1003               	clrc
  7817  0C44  0D38               	rlf	??___ftmul+1,w
  7818  0C45  0D39               	rlf	??___ftmul+2,w
  7819  0C46  00BA               	movwf	??___ftmul+3
  7820  0C47  083A               	movf	??___ftmul+3,w
  7821  0C48  00C0               	movwf	___ftmul@sign
  7822  0C49  08C0               	movf	___ftmul@sign,f
  7823  0C4A  1D03               	skipz
  7824  0C4B  2C53               	goto	l2403
  7825  0C4C  3000               	movlw	0
  7826  0C4D  00B1               	movwf	?___ftmul
  7827  0C4E  3000               	movlw	0
  7828  0C4F  00B2               	movwf	?___ftmul+1
  7829  0C50  3000               	movlw	0
  7830  0C51  00B3               	movwf	?___ftmul+2
  7831  0C52  0008               	return
  7832  0C53                     l2403:	
  7833  0C53  0840               	movf	___ftmul@sign,w
  7834  0C54  3E7B               	addlw	123
  7835  0C55  00B7               	movwf	??___ftmul
  7836  0C56  0837               	movf	??___ftmul,w
  7837  0C57  07BB               	addwf	___ftmul@exp,f
  7838  0C58  0831               	movf	___ftmul@f1,w
  7839  0C59  00B7               	movwf	??___ftmul
  7840  0C5A  0832               	movf	___ftmul@f1+1,w
  7841  0C5B  00B8               	movwf	??___ftmul+1
  7842  0C5C  0833               	movf	___ftmul@f1+2,w
  7843  0C5D  00B9               	movwf	??___ftmul+2
  7844  0C5E  3010               	movlw	16
  7845  0C5F                     u2995:	
  7846  0C5F  1003               	clrc
  7847  0C60  0CB9               	rrf	??___ftmul+2,f
  7848  0C61  0CB8               	rrf	??___ftmul+1,f
  7849  0C62  0CB7               	rrf	??___ftmul,f
  7850  0C63  3EFF               	addlw	-1
  7851  0C64  1D03               	skipz
  7852  0C65  2C5F               	goto	u2995
  7853  0C66  0837               	movf	??___ftmul,w
  7854  0C67  00BA               	movwf	??___ftmul+3
  7855  0C68  083A               	movf	??___ftmul+3,w
  7856  0C69  00C0               	movwf	___ftmul@sign
  7857  0C6A  0834               	movf	___ftmul@f2,w
  7858  0C6B  00B7               	movwf	??___ftmul
  7859  0C6C  0835               	movf	___ftmul@f2+1,w
  7860  0C6D  00B8               	movwf	??___ftmul+1
  7861  0C6E  0836               	movf	___ftmul@f2+2,w
  7862  0C6F  00B9               	movwf	??___ftmul+2
  7863  0C70  3010               	movlw	16
  7864  0C71                     u3005:	
  7865  0C71  1003               	clrc
  7866  0C72  0CB9               	rrf	??___ftmul+2,f
  7867  0C73  0CB8               	rrf	??___ftmul+1,f
  7868  0C74  0CB7               	rrf	??___ftmul,f
  7869  0C75  3EFF               	addlw	-1
  7870  0C76  1D03               	skipz
  7871  0C77  2C71               	goto	u3005
  7872  0C78  0837               	movf	??___ftmul,w
  7873  0C79  00BA               	movwf	??___ftmul+3
  7874  0C7A  083A               	movf	??___ftmul+3,w
  7875  0C7B  06C0               	xorwf	___ftmul@sign,f
  7876  0C7C  3080               	movlw	128
  7877  0C7D  00B7               	movwf	??___ftmul
  7878  0C7E  0837               	movf	??___ftmul,w
  7879  0C7F  05C0               	andwf	___ftmul@sign,f
  7880  0C80  17B2               	bsf	___ftmul@f1+1,7
  7881  0C81  17B5               	bsf	___ftmul@f2+1,7
  7882  0C82  30FF               	movlw	255
  7883  0C83  05B4               	andwf	___ftmul@f2,f
  7884  0C84  30FF               	movlw	255
  7885  0C85  05B5               	andwf	___ftmul@f2+1,f
  7886  0C86  3000               	movlw	0
  7887  0C87  05B6               	andwf	___ftmul@f2+2,f
  7888  0C88  3000               	movlw	0
  7889  0C89  00BC               	movwf	___ftmul@f3_as_product
  7890  0C8A  3000               	movlw	0
  7891  0C8B  00BD               	movwf	___ftmul@f3_as_product+1
  7892  0C8C  3000               	movlw	0
  7893  0C8D  00BE               	movwf	___ftmul@f3_as_product+2
  7894  0C8E  3007               	movlw	7
  7895  0C8F  00B7               	movwf	??___ftmul
  7896  0C90  0837               	movf	??___ftmul,w
  7897  0C91  00BF               	movwf	___ftmul@cntr
  7898  0C92                     l2415:	
  7899  0C92  1C31               	btfss	___ftmul@f1,0
  7900  0C93  2CA2               	goto	l2419
  7901  0C94  0834               	movf	___ftmul@f2,w
  7902  0C95  07BC               	addwf	___ftmul@f3_as_product,f
  7903  0C96  0835               	movf	___ftmul@f2+1,w
  7904  0C97  1103               	clrz
  7905  0C98  1803               	skipnc
  7906  0C99  0A35               	incf	___ftmul@f2+1,w
  7907  0C9A  1D03               	btfss	3,2
  7908  0C9B  07BD               	addwf	___ftmul@f3_as_product+1,f
  7909  0C9C  0836               	movf	___ftmul@f2+2,w
  7910  0C9D  1103               	clrz
  7911  0C9E  1803               	skipnc
  7912  0C9F  0A36               	incf	___ftmul@f2+2,w
  7913  0CA0  1D03               	btfss	3,2
  7914  0CA1  07BE               	addwf	___ftmul@f3_as_product+2,f
  7915  0CA2                     l2419:	
  7916  0CA2  3001               	movlw	1
  7917  0CA3                     u3035:	
  7918  0CA3  1003               	clrc
  7919  0CA4  0CB3               	rrf	___ftmul@f1+2,f
  7920  0CA5  0CB2               	rrf	___ftmul@f1+1,f
  7921  0CA6  0CB1               	rrf	___ftmul@f1,f
  7922  0CA7  3EFF               	addlw	-1
  7923  0CA8  1D03               	skipz
  7924  0CA9  2CA3               	goto	u3035
  7925  0CAA  3001               	movlw	1
  7926  0CAB                     u3045:	
  7927  0CAB  1003               	clrc
  7928  0CAC  0DB4               	rlf	___ftmul@f2,f
  7929  0CAD  0DB5               	rlf	___ftmul@f2+1,f
  7930  0CAE  0DB6               	rlf	___ftmul@f2+2,f
  7931  0CAF  3EFF               	addlw	-1
  7932  0CB0  1D03               	skipz
  7933  0CB1  2CAB               	goto	u3045
  7934  0CB2  3001               	movlw	1
  7935  0CB3  02BF               	subwf	___ftmul@cntr,f
  7936  0CB4  1D03               	btfss	3,2
  7937  0CB5  2C92               	goto	l2415
  7938  0CB6  3009               	movlw	9
  7939  0CB7  00B7               	movwf	??___ftmul
  7940  0CB8  0837               	movf	??___ftmul,w
  7941  0CB9  00BF               	movwf	___ftmul@cntr
  7942  0CBA                     l2427:	
  7943  0CBA  1C31               	btfss	___ftmul@f1,0
  7944  0CBB  2CCA               	goto	l2431
  7945  0CBC  0834               	movf	___ftmul@f2,w
  7946  0CBD  07BC               	addwf	___ftmul@f3_as_product,f
  7947  0CBE  0835               	movf	___ftmul@f2+1,w
  7948  0CBF  1103               	clrz
  7949  0CC0  1803               	skipnc
  7950  0CC1  0A35               	incf	___ftmul@f2+1,w
  7951  0CC2  1D03               	btfss	3,2
  7952  0CC3  07BD               	addwf	___ftmul@f3_as_product+1,f
  7953  0CC4  0836               	movf	___ftmul@f2+2,w
  7954  0CC5  1103               	clrz
  7955  0CC6  1803               	skipnc
  7956  0CC7  0A36               	incf	___ftmul@f2+2,w
  7957  0CC8  1D03               	btfss	3,2
  7958  0CC9  07BE               	addwf	___ftmul@f3_as_product+2,f
  7959  0CCA                     l2431:	
  7960  0CCA  3001               	movlw	1
  7961  0CCB                     u3085:	
  7962  0CCB  1003               	clrc
  7963  0CCC  0CB3               	rrf	___ftmul@f1+2,f
  7964  0CCD  0CB2               	rrf	___ftmul@f1+1,f
  7965  0CCE  0CB1               	rrf	___ftmul@f1,f
  7966  0CCF  3EFF               	addlw	-1
  7967  0CD0  1D03               	skipz
  7968  0CD1  2CCB               	goto	u3085
  7969  0CD2  3001               	movlw	1
  7970  0CD3                     u3095:	
  7971  0CD3  1003               	clrc
  7972  0CD4  0CBE               	rrf	___ftmul@f3_as_product+2,f
  7973  0CD5  0CBD               	rrf	___ftmul@f3_as_product+1,f
  7974  0CD6  0CBC               	rrf	___ftmul@f3_as_product,f
  7975  0CD7  3EFF               	addlw	-1
  7976  0CD8  1D03               	skipz
  7977  0CD9  2CD3               	goto	u3095
  7978  0CDA  3001               	movlw	1
  7979  0CDB  02BF               	subwf	___ftmul@cntr,f
  7980  0CDC  1D03               	btfss	3,2
  7981  0CDD  2CBA               	goto	l2427
  7982  0CDE  083C               	movf	___ftmul@f3_as_product,w
  7983  0CDF  00A0               	movwf	___ftpack@arg
  7984  0CE0  083D               	movf	___ftmul@f3_as_product+1,w
  7985  0CE1  00A1               	movwf	___ftpack@arg+1
  7986  0CE2  083E               	movf	___ftmul@f3_as_product+2,w
  7987  0CE3  00A2               	movwf	___ftpack@arg+2
  7988  0CE4  083B               	movf	___ftmul@exp,w
  7989  0CE5  00B7               	movwf	??___ftmul
  7990  0CE6  0837               	movf	??___ftmul,w
  7991  0CE7  00A3               	movwf	___ftpack@exp
  7992  0CE8  0840               	movf	___ftmul@sign,w
  7993  0CE9  00B8               	movwf	??___ftmul+1
  7994  0CEA  0838               	movf	??___ftmul+1,w
  7995  0CEB  00A4               	movwf	___ftpack@sign
  7996  0CEC  160A  118A  2796   	fcall	___ftpack
  7997  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  7998  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  7999  0CF1  0820               	movf	?___ftpack,w
  8000  0CF2  00B1               	movwf	?___ftmul
  8001  0CF3  0821               	movf	?___ftpack+1,w
  8002  0CF4  00B2               	movwf	?___ftmul+1
  8003  0CF5  0822               	movf	?___ftpack+2,w
  8004  0CF6  00B3               	movwf	?___ftmul+2
  8005  0CF7  0008               	return
  8006  0CF8                     __end_of___ftmul:	
  8007                           
  8008                           	psect	text35
  8009  0CF8                     __ptext35:	
  8010 ;; *************** function ___ftadd *****************
  8011 ;; Defined at:
  8012 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  8013 ;; Parameters:    Size  Location     Type
  8014 ;;  f1              3   33[BANK0 ] float 
  8015 ;;  f2              3   36[BANK0 ] float 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  exp1            1   45[BANK0 ] unsigned char 
  8018 ;;  exp2            1   44[BANK0 ] unsigned char 
  8019 ;;  sign            1   43[BANK0 ] unsigned char 
  8020 ;; Return value:  Size  Location     Type
  8021 ;;                  3   33[BANK0 ] float 
  8022 ;; Registers used:
  8023 ;;		wreg, status,2, status,0, pclath, cstack
  8024 ;; Tracked objects:
  8025 ;;		On entry : 0/0
  8026 ;;		On exit  : 0/0
  8027 ;;		Unchanged: 0/0
  8028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8029 ;;      Params:         0       6       0       0       0
  8030 ;;      Locals:         0       3       0       0       0
  8031 ;;      Temps:          0       4       0       0       0
  8032 ;;      Totals:         0      13       0       0       0
  8033 ;;Total ram usage:       13 bytes
  8034 ;; Hardware stack levels used:    1
  8035 ;; Hardware stack levels required when called:    3
  8036 ;; This function calls:
  8037 ;;		___ftpack
  8038 ;; This function is called by:
  8039 ;;		_displayPPM
  8040 ;;		_CalcMQ135
  8041 ;; This function uses a non-reentrant model
  8042 ;;
  8043                           
  8044                           
  8045                           ;psect for function ___ftadd
  8046  0CF8                     ___ftadd:	
  8047                           
  8048                           ;incstack = 0
  8049                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  8050  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  8051  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  8052  0CFA  0841               	movf	___ftadd@f1,w
  8053  0CFB  00C7               	movwf	??___ftadd
  8054  0CFC  0842               	movf	___ftadd@f1+1,w
  8055  0CFD  00C8               	movwf	??___ftadd+1
  8056  0CFE  0843               	movf	___ftadd@f1+2,w
  8057  0CFF  00C9               	movwf	??___ftadd+2
  8058  0D00  1003               	clrc
  8059  0D01  0D48               	rlf	??___ftadd+1,w
  8060  0D02  0D49               	rlf	??___ftadd+2,w
  8061  0D03  00CA               	movwf	??___ftadd+3
  8062  0D04  084A               	movf	??___ftadd+3,w
  8063  0D05  00CD               	movwf	___ftadd@exp1
  8064  0D06  0844               	movf	___ftadd@f2,w
  8065  0D07  00C7               	movwf	??___ftadd
  8066  0D08  0845               	movf	___ftadd@f2+1,w
  8067  0D09  00C8               	movwf	??___ftadd+1
  8068  0D0A  0846               	movf	___ftadd@f2+2,w
  8069  0D0B  00C9               	movwf	??___ftadd+2
  8070  0D0C  1003               	clrc
  8071  0D0D  0D48               	rlf	??___ftadd+1,w
  8072  0D0E  0D49               	rlf	??___ftadd+2,w
  8073  0D0F  00CA               	movwf	??___ftadd+3
  8074  0D10  084A               	movf	??___ftadd+3,w
  8075  0D11  00CC               	movwf	___ftadd@exp2
  8076  0D12  084D               	movf	___ftadd@exp1,w
  8077  0D13  1903               	btfsc	3,2
  8078  0D14  2D21               	goto	l2285
  8079  0D15  084C               	movf	___ftadd@exp2,w
  8080  0D16  024D               	subwf	___ftadd@exp1,w
  8081  0D17  1803               	skipnc
  8082  0D18  2D28               	goto	l2289
  8083  0D19  034D               	decf	___ftadd@exp1,w
  8084  0D1A  3AFF               	xorlw	255
  8085  0D1B  074C               	addwf	___ftadd@exp2,w
  8086  0D1C  00C7               	movwf	??___ftadd
  8087  0D1D  3019               	movlw	25
  8088  0D1E  0247               	subwf	??___ftadd,w
  8089  0D1F  1C03               	skipc
  8090  0D20  2D28               	goto	l2289
  8091  0D21                     l2285:	
  8092  0D21  0844               	movf	___ftadd@f2,w
  8093  0D22  00C1               	movwf	?___ftadd
  8094  0D23  0845               	movf	___ftadd@f2+1,w
  8095  0D24  00C2               	movwf	?___ftadd+1
  8096  0D25  0846               	movf	___ftadd@f2+2,w
  8097  0D26  00C3               	movwf	?___ftadd+2
  8098  0D27  0008               	return
  8099  0D28                     l2289:	
  8100  0D28  084C               	movf	___ftadd@exp2,w
  8101  0D29  1903               	btfsc	3,2
  8102  0D2A  0008               	return
  8103  0D2B  084D               	movf	___ftadd@exp1,w
  8104  0D2C  024C               	subwf	___ftadd@exp2,w
  8105  0D2D  1803               	skipnc
  8106  0D2E  2D37               	goto	l2295
  8107  0D2F  034C               	decf	___ftadd@exp2,w
  8108  0D30  3AFF               	xorlw	255
  8109  0D31  074D               	addwf	___ftadd@exp1,w
  8110  0D32  00C7               	movwf	??___ftadd
  8111  0D33  3019               	movlw	25
  8112  0D34  0247               	subwf	??___ftadd,w
  8113  0D35  1803               	btfsc	3,0
  8114  0D36  0008               	return
  8115  0D37                     l2295:	
  8116  0D37  3006               	movlw	6
  8117  0D38  00C7               	movwf	??___ftadd
  8118  0D39  0847               	movf	??___ftadd,w
  8119  0D3A  00CB               	movwf	___ftadd@sign
  8120  0D3B  1BC3               	btfsc	___ftadd@f1+2,7
  8121  0D3C  17CB               	bsf	___ftadd@sign,7
  8122  0D3D  1BC6               	btfsc	___ftadd@f2+2,7
  8123  0D3E  174B               	bsf	___ftadd@sign,6
  8124  0D3F  17C2               	bsf	___ftadd@f1+1,7
  8125  0D40  30FF               	movlw	255
  8126  0D41  05C1               	andwf	___ftadd@f1,f
  8127  0D42  30FF               	movlw	255
  8128  0D43  05C2               	andwf	___ftadd@f1+1,f
  8129  0D44  3000               	movlw	0
  8130  0D45  05C3               	andwf	___ftadd@f1+2,f
  8131  0D46  17C5               	bsf	___ftadd@f2+1,7
  8132  0D47  30FF               	movlw	255
  8133  0D48  05C4               	andwf	___ftadd@f2,f
  8134  0D49  30FF               	movlw	255
  8135  0D4A  05C5               	andwf	___ftadd@f2+1,f
  8136  0D4B  3000               	movlw	0
  8137  0D4C  05C6               	andwf	___ftadd@f2+2,f
  8138  0D4D  084C               	movf	___ftadd@exp2,w
  8139  0D4E  024D               	subwf	___ftadd@exp1,w
  8140  0D4F  1803               	skipnc
  8141  0D50  2D77               	goto	l2317
  8142  0D51                     l2307:	
  8143  0D51  3001               	movlw	1
  8144  0D52                     u2745:	
  8145  0D52  1003               	clrc
  8146  0D53  0DC4               	rlf	___ftadd@f2,f
  8147  0D54  0DC5               	rlf	___ftadd@f2+1,f
  8148  0D55  0DC6               	rlf	___ftadd@f2+2,f
  8149  0D56  3EFF               	addlw	-1
  8150  0D57  1D03               	skipz
  8151  0D58  2D52               	goto	u2745
  8152  0D59  3001               	movlw	1
  8153  0D5A  02CC               	subwf	___ftadd@exp2,f
  8154  0D5B  084C               	movf	___ftadd@exp2,w
  8155  0D5C  064D               	xorwf	___ftadd@exp1,w
  8156  0D5D  1903               	skipnz
  8157  0D5E  2D72               	goto	l2315
  8158  0D5F  3001               	movlw	1
  8159  0D60  02CB               	subwf	___ftadd@sign,f
  8160  0D61  084B               	movf	___ftadd@sign,w
  8161  0D62  3907               	andlw	7
  8162  0D63  1903               	btfsc	3,2
  8163  0D64  2D72               	goto	l2315
  8164  0D65  2D51               	goto	l2307
  8165  0D66                     l2313:	
  8166  0D66  3001               	movlw	1
  8167  0D67                     u2775:	
  8168  0D67  1003               	clrc
  8169  0D68  0CC3               	rrf	___ftadd@f1+2,f
  8170  0D69  0CC2               	rrf	___ftadd@f1+1,f
  8171  0D6A  0CC1               	rrf	___ftadd@f1,f
  8172  0D6B  3EFF               	addlw	-1
  8173  0D6C  1D03               	skipz
  8174  0D6D  2D67               	goto	u2775
  8175  0D6E  3001               	movlw	1
  8176  0D6F  00C7               	movwf	??___ftadd
  8177  0D70  0847               	movf	??___ftadd,w
  8178  0D71  07CD               	addwf	___ftadd@exp1,f
  8179  0D72                     l2315:	
  8180  0D72  084D               	movf	___ftadd@exp1,w
  8181  0D73  064C               	xorwf	___ftadd@exp2,w
  8182  0D74  1903               	btfsc	3,2
  8183  0D75  2DA0               	goto	l655
  8184  0D76  2D66               	goto	l2313
  8185  0D77                     l2317:	
  8186  0D77  084D               	movf	___ftadd@exp1,w
  8187  0D78  024C               	subwf	___ftadd@exp2,w
  8188  0D79  1803               	skipnc
  8189  0D7A  2DA0               	goto	l655
  8190  0D7B                     l2319:	
  8191  0D7B  3001               	movlw	1
  8192  0D7C                     u2805:	
  8193  0D7C  1003               	clrc
  8194  0D7D  0DC1               	rlf	___ftadd@f1,f
  8195  0D7E  0DC2               	rlf	___ftadd@f1+1,f
  8196  0D7F  0DC3               	rlf	___ftadd@f1+2,f
  8197  0D80  3EFF               	addlw	-1
  8198  0D81  1D03               	skipz
  8199  0D82  2D7C               	goto	u2805
  8200  0D83  3001               	movlw	1
  8201  0D84  02CD               	subwf	___ftadd@exp1,f
  8202  0D85  084C               	movf	___ftadd@exp2,w
  8203  0D86  064D               	xorwf	___ftadd@exp1,w
  8204  0D87  1903               	skipnz
  8205  0D88  2D9C               	goto	l2327
  8206  0D89  3001               	movlw	1
  8207  0D8A  02CB               	subwf	___ftadd@sign,f
  8208  0D8B  084B               	movf	___ftadd@sign,w
  8209  0D8C  3907               	andlw	7
  8210  0D8D  1903               	btfsc	3,2
  8211  0D8E  2D9C               	goto	l2327
  8212  0D8F  2D7B               	goto	l2319
  8213  0D90                     l2325:	
  8214  0D90  3001               	movlw	1
  8215  0D91                     u2835:	
  8216  0D91  1003               	clrc
  8217  0D92  0CC6               	rrf	___ftadd@f2+2,f
  8218  0D93  0CC5               	rrf	___ftadd@f2+1,f
  8219  0D94  0CC4               	rrf	___ftadd@f2,f
  8220  0D95  3EFF               	addlw	-1
  8221  0D96  1D03               	skipz
  8222  0D97  2D91               	goto	u2835
  8223  0D98  3001               	movlw	1
  8224  0D99  00C7               	movwf	??___ftadd
  8225  0D9A  0847               	movf	??___ftadd,w
  8226  0D9B  07CC               	addwf	___ftadd@exp2,f
  8227  0D9C                     l2327:	
  8228  0D9C  084D               	movf	___ftadd@exp1,w
  8229  0D9D  064C               	xorwf	___ftadd@exp2,w
  8230  0D9E  1D03               	skipz
  8231  0D9F  2D90               	goto	l2325
  8232  0DA0                     l655:	
  8233  0DA0  1FCB               	btfss	___ftadd@sign,7
  8234  0DA1  2DB2               	goto	l2331
  8235  0DA2  30FF               	movlw	255
  8236  0DA3  06C1               	xorwf	___ftadd@f1,f
  8237  0DA4  30FF               	movlw	255
  8238  0DA5  06C2               	xorwf	___ftadd@f1+1,f
  8239  0DA6  30FF               	movlw	255
  8240  0DA7  06C3               	xorwf	___ftadd@f1+2,f
  8241  0DA8  3001               	movlw	1
  8242  0DA9  07C1               	addwf	___ftadd@f1,f
  8243  0DAA  3000               	movlw	0
  8244  0DAB  1803               	skipnc
  8245  0DAC  3001               	movlw	1
  8246  0DAD  07C2               	addwf	___ftadd@f1+1,f
  8247  0DAE  3000               	movlw	0
  8248  0DAF  1803               	skipnc
  8249  0DB0  3001               	movlw	1
  8250  0DB1  07C3               	addwf	___ftadd@f1+2,f
  8251  0DB2                     l2331:	
  8252  0DB2  1F4B               	btfss	___ftadd@sign,6
  8253  0DB3  2DC4               	goto	l2335
  8254  0DB4  30FF               	movlw	255
  8255  0DB5  06C4               	xorwf	___ftadd@f2,f
  8256  0DB6  30FF               	movlw	255
  8257  0DB7  06C5               	xorwf	___ftadd@f2+1,f
  8258  0DB8  30FF               	movlw	255
  8259  0DB9  06C6               	xorwf	___ftadd@f2+2,f
  8260  0DBA  3001               	movlw	1
  8261  0DBB  07C4               	addwf	___ftadd@f2,f
  8262  0DBC  3000               	movlw	0
  8263  0DBD  1803               	skipnc
  8264  0DBE  3001               	movlw	1
  8265  0DBF  07C5               	addwf	___ftadd@f2+1,f
  8266  0DC0  3000               	movlw	0
  8267  0DC1  1803               	skipnc
  8268  0DC2  3001               	movlw	1
  8269  0DC3  07C6               	addwf	___ftadd@f2+2,f
  8270  0DC4                     l2335:	
  8271  0DC4  01CB               	clrf	___ftadd@sign
  8272  0DC5  0841               	movf	___ftadd@f1,w
  8273  0DC6  07C4               	addwf	___ftadd@f2,f
  8274  0DC7  0842               	movf	___ftadd@f1+1,w
  8275  0DC8  1103               	clrz
  8276  0DC9  1803               	skipnc
  8277  0DCA  0A42               	incf	___ftadd@f1+1,w
  8278  0DCB  1D03               	btfss	3,2
  8279  0DCC  07C5               	addwf	___ftadd@f2+1,f
  8280  0DCD  0843               	movf	___ftadd@f1+2,w
  8281  0DCE  1103               	clrz
  8282  0DCF  1803               	skipnc
  8283  0DD0  0A43               	incf	___ftadd@f1+2,w
  8284  0DD1  1D03               	btfss	3,2
  8285  0DD2  07C6               	addwf	___ftadd@f2+2,f
  8286  0DD3  1FC6               	btfss	___ftadd@f2+2,7
  8287  0DD4  2DE7               	goto	l2345
  8288  0DD5  30FF               	movlw	255
  8289  0DD6  06C4               	xorwf	___ftadd@f2,f
  8290  0DD7  30FF               	movlw	255
  8291  0DD8  06C5               	xorwf	___ftadd@f2+1,f
  8292  0DD9  30FF               	movlw	255
  8293  0DDA  06C6               	xorwf	___ftadd@f2+2,f
  8294  0DDB  3001               	movlw	1
  8295  0DDC  07C4               	addwf	___ftadd@f2,f
  8296  0DDD  3000               	movlw	0
  8297  0DDE  1803               	skipnc
  8298  0DDF  3001               	movlw	1
  8299  0DE0  07C5               	addwf	___ftadd@f2+1,f
  8300  0DE1  3000               	movlw	0
  8301  0DE2  1803               	skipnc
  8302  0DE3  3001               	movlw	1
  8303  0DE4  07C6               	addwf	___ftadd@f2+2,f
  8304  0DE5  01CB               	clrf	___ftadd@sign
  8305  0DE6  0ACB               	incf	___ftadd@sign,f
  8306  0DE7                     l2345:	
  8307  0DE7  0844               	movf	___ftadd@f2,w
  8308  0DE8  00A0               	movwf	___ftpack@arg
  8309  0DE9  0845               	movf	___ftadd@f2+1,w
  8310  0DEA  00A1               	movwf	___ftpack@arg+1
  8311  0DEB  0846               	movf	___ftadd@f2+2,w
  8312  0DEC  00A2               	movwf	___ftpack@arg+2
  8313  0DED  084D               	movf	___ftadd@exp1,w
  8314  0DEE  00C7               	movwf	??___ftadd
  8315  0DEF  0847               	movf	??___ftadd,w
  8316  0DF0  00A3               	movwf	___ftpack@exp
  8317  0DF1  084B               	movf	___ftadd@sign,w
  8318  0DF2  00C8               	movwf	??___ftadd+1
  8319  0DF3  0848               	movf	??___ftadd+1,w
  8320  0DF4  00A4               	movwf	___ftpack@sign
  8321  0DF5  160A  118A  2796   	fcall	___ftpack
  8322  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  8323  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  8324  0DFA  0820               	movf	?___ftpack,w
  8325  0DFB  00C1               	movwf	?___ftadd
  8326  0DFC  0821               	movf	?___ftpack+1,w
  8327  0DFD  00C2               	movwf	?___ftadd+1
  8328  0DFE  0822               	movf	?___ftpack+2,w
  8329  0DFF  00C3               	movwf	?___ftadd+2
  8330  0E00  0008               	return
  8331  0E01                     __end_of___ftadd:	
  8332                           
  8333                           	psect	text36
  8334  1364                     __ptext36:	
  8335 ;; *************** function ___awtoft *****************
  8336 ;; Defined at:
  8337 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;  c               2    8[BANK0 ] int 
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;  sign            1   13[BANK0 ] unsigned char 
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  3    8[BANK0 ] float 
  8344 ;; Registers used:
  8345 ;;		wreg, status,2, status,0, pclath, cstack
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8351 ;;      Params:         0       3       0       0       0
  8352 ;;      Locals:         0       1       0       0       0
  8353 ;;      Temps:          0       2       0       0       0
  8354 ;;      Totals:         0       6       0       0       0
  8355 ;;Total ram usage:        6 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; Hardware stack levels required when called:    3
  8358 ;; This function calls:
  8359 ;;		___ftpack
  8360 ;; This function is called by:
  8361 ;;		_displayPPM
  8362 ;;		_CalcMQ135
  8363 ;; This function uses a non-reentrant model
  8364 ;;
  8365                           
  8366                           
  8367                           ;psect for function ___awtoft
  8368  1364                     ___awtoft:	
  8369                           
  8370                           ;incstack = 0
  8371                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8372  1364  1283               	bcf	3,5	;RP0=0, select bank0
  8373  1365  1303               	bcf	3,6	;RP1=0, select bank0
  8374  1366  01AD               	clrf	___awtoft@sign
  8375  1367  1FA9               	btfss	___awtoft@c+1,7
  8376  1368  2B70               	goto	l2273
  8377  1369  09A8               	comf	___awtoft@c,f
  8378  136A  09A9               	comf	___awtoft@c+1,f
  8379  136B  0AA8               	incf	___awtoft@c,f
  8380  136C  1903               	skipnz
  8381  136D  0AA9               	incf	___awtoft@c+1,f
  8382  136E  01AD               	clrf	___awtoft@sign
  8383  136F  0AAD               	incf	___awtoft@sign,f
  8384  1370                     l2273:	
  8385  1370  0828               	movf	___awtoft@c,w
  8386  1371  00A0               	movwf	___ftpack@arg
  8387  1372  0829               	movf	___awtoft@c+1,w
  8388  1373  00A1               	movwf	___ftpack@arg+1
  8389  1374  01A2               	clrf	___ftpack@arg+2
  8390  1375  308E               	movlw	142
  8391  1376  00AB               	movwf	??___awtoft
  8392  1377  082B               	movf	??___awtoft,w
  8393  1378  00A3               	movwf	___ftpack@exp
  8394  1379  082D               	movf	___awtoft@sign,w
  8395  137A  00AC               	movwf	??___awtoft+1
  8396  137B  082C               	movf	??___awtoft+1,w
  8397  137C  00A4               	movwf	___ftpack@sign
  8398  137D  160A  118A  2796   	fcall	___ftpack
  8399  1380  1283               	bcf	3,5	;RP0=0, select bank0
  8400  1381  1303               	bcf	3,6	;RP1=0, select bank0
  8401  1382  0820               	movf	?___ftpack,w
  8402  1383  00A8               	movwf	?___awtoft
  8403  1384  0821               	movf	?___ftpack+1,w
  8404  1385  00A9               	movwf	?___awtoft+1
  8405  1386  0822               	movf	?___ftpack+2,w
  8406  1387  00AA               	movwf	?___awtoft+2
  8407  1388  0008               	return
  8408  1389                     __end_of___awtoft:	
  8409                           
  8410                           	psect	text37
  8411  1796                     __ptext37:	
  8412 ;; *************** function ___ftpack *****************
  8413 ;; Defined at:
  8414 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  arg             3    0[BANK0 ] unsigned um
  8417 ;;  exp             1    3[BANK0 ] unsigned char 
  8418 ;;  sign            1    4[BANK0 ] unsigned char 
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;		None
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  3    0[BANK0 ] float 
  8423 ;; Registers used:
  8424 ;;		wreg, status,2, status,0
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8430 ;;      Params:         0       5       0       0       0
  8431 ;;      Locals:         0       0       0       0       0
  8432 ;;      Temps:          0       3       0       0       0
  8433 ;;      Totals:         0       8       0       0       0
  8434 ;;Total ram usage:        8 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:    2
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		___awtoft
  8441 ;;		___ftadd
  8442 ;;		___ftdiv
  8443 ;;		___ftmul
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           
  8448                           ;psect for function ___ftpack
  8449  1796                     ___ftpack:	
  8450                           
  8451                           ;incstack = 0
  8452                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8453  1796  1283               	bcf	3,5	;RP0=0, select bank0
  8454  1797  1303               	bcf	3,6	;RP1=0, select bank0
  8455  1798  0823               	movf	___ftpack@exp,w
  8456  1799  1903               	btfsc	3,2
  8457  179A  2FA0               	goto	l2039
  8458  179B  0822               	movf	___ftpack@arg+2,w
  8459  179C  0421               	iorwf	___ftpack@arg+1,w
  8460  179D  0420               	iorwf	___ftpack@arg,w
  8461  179E  1D03               	skipz
  8462  179F  2FB3               	goto	l2045
  8463  17A0                     l2039:	
  8464  17A0  3000               	movlw	0
  8465  17A1  00A0               	movwf	?___ftpack
  8466  17A2  3000               	movlw	0
  8467  17A3  00A1               	movwf	?___ftpack+1
  8468  17A4  3000               	movlw	0
  8469  17A5  00A2               	movwf	?___ftpack+2
  8470  17A6  0008               	return
  8471  17A7                     l2043:	
  8472  17A7  3001               	movlw	1
  8473  17A8  00A5               	movwf	??___ftpack
  8474  17A9  0825               	movf	??___ftpack,w
  8475  17AA  07A3               	addwf	___ftpack@exp,f
  8476  17AB  3001               	movlw	1
  8477  17AC                     u2225:	
  8478  17AC  1003               	clrc
  8479  17AD  0CA2               	rrf	___ftpack@arg+2,f
  8480  17AE  0CA1               	rrf	___ftpack@arg+1,f
  8481  17AF  0CA0               	rrf	___ftpack@arg,f
  8482  17B0  3EFF               	addlw	-1
  8483  17B1  1D03               	skipz
  8484  17B2  2FAC               	goto	u2225
  8485  17B3                     l2045:	
  8486  17B3  30FE               	movlw	254
  8487  17B4  0522               	andwf	___ftpack@arg+2,w
  8488  17B5  1903               	btfsc	3,2
  8489  17B6  2FCE               	goto	l626
  8490  17B7  2FA7               	goto	l2043
  8491  17B8                     l2047:	
  8492  17B8  3001               	movlw	1
  8493  17B9  00A5               	movwf	??___ftpack
  8494  17BA  0825               	movf	??___ftpack,w
  8495  17BB  07A3               	addwf	___ftpack@exp,f
  8496  17BC  3001               	movlw	1
  8497  17BD  07A0               	addwf	___ftpack@arg,f
  8498  17BE  3000               	movlw	0
  8499  17BF  1803               	skipnc
  8500  17C0  3001               	movlw	1
  8501  17C1  07A1               	addwf	___ftpack@arg+1,f
  8502  17C2  3000               	movlw	0
  8503  17C3  1803               	skipnc
  8504  17C4  3001               	movlw	1
  8505  17C5  07A2               	addwf	___ftpack@arg+2,f
  8506  17C6  3001               	movlw	1
  8507  17C7                     u2245:	
  8508  17C7  1003               	clrc
  8509  17C8  0CA2               	rrf	___ftpack@arg+2,f
  8510  17C9  0CA1               	rrf	___ftpack@arg+1,f
  8511  17CA  0CA0               	rrf	___ftpack@arg,f
  8512  17CB  3EFF               	addlw	-1
  8513  17CC  1D03               	skipz
  8514  17CD  2FC7               	goto	u2245
  8515  17CE                     l626:	
  8516  17CE  30FF               	movlw	255
  8517  17CF  0522               	andwf	___ftpack@arg+2,w
  8518  17D0  1903               	btfsc	3,2
  8519  17D1  2FDD               	goto	l2055
  8520  17D2  2FB8               	goto	l2047
  8521  17D3                     l2053:	
  8522  17D3  3001               	movlw	1
  8523  17D4  02A3               	subwf	___ftpack@exp,f
  8524  17D5  3001               	movlw	1
  8525  17D6                     u2265:	
  8526  17D6  1003               	clrc
  8527  17D7  0DA0               	rlf	___ftpack@arg,f
  8528  17D8  0DA1               	rlf	___ftpack@arg+1,f
  8529  17D9  0DA2               	rlf	___ftpack@arg+2,f
  8530  17DA  3EFF               	addlw	-1
  8531  17DB  1D03               	skipz
  8532  17DC  2FD6               	goto	u2265
  8533  17DD                     l2055:	
  8534  17DD  1FA1               	btfss	___ftpack@arg+1,7
  8535  17DE  2FD3               	goto	l2053
  8536  17DF  1823               	btfsc	___ftpack@exp,0
  8537  17E0  2FE7               	goto	l632
  8538  17E1  30FF               	movlw	255
  8539  17E2  05A0               	andwf	___ftpack@arg,f
  8540  17E3  307F               	movlw	127
  8541  17E4  05A1               	andwf	___ftpack@arg+1,f
  8542  17E5  30FF               	movlw	255
  8543  17E6  05A2               	andwf	___ftpack@arg+2,f
  8544  17E7                     l632:	
  8545  17E7  1003               	clrc
  8546  17E8  0CA3               	rrf	___ftpack@exp,f
  8547  17E9  0823               	movf	___ftpack@exp,w
  8548  17EA  00A5               	movwf	??___ftpack
  8549  17EB  01A6               	clrf	??___ftpack+1
  8550  17EC  01A7               	clrf	??___ftpack+2
  8551  17ED  3010               	movlw	16
  8552  17EE                     u2295:	
  8553  17EE  1003               	clrc
  8554  17EF  0DA5               	rlf	??___ftpack,f
  8555  17F0  0DA6               	rlf	??___ftpack+1,f
  8556  17F1  0DA7               	rlf	??___ftpack+2,f
  8557  17F2  3EFF               	addlw	-1
  8558  17F3  1D03               	skipz
  8559  17F4  2FEE               	goto	u2295
  8560  17F5  0825               	movf	??___ftpack,w
  8561  17F6  04A0               	iorwf	___ftpack@arg,f
  8562  17F7  0826               	movf	??___ftpack+1,w
  8563  17F8  04A1               	iorwf	___ftpack@arg+1,f
  8564  17F9  0827               	movf	??___ftpack+2,w
  8565  17FA  04A2               	iorwf	___ftpack@arg+2,f
  8566  17FB  0824               	movf	___ftpack@sign,w
  8567  17FC  1903               	btfsc	3,2
  8568  17FD  0008               	return
  8569  17FE  17A2               	bsf	___ftpack@arg+2,7
  8570  17FF  0008               	return
  8571  1800                     __end_of___ftpack:	
  8572                           
  8573                           	psect	text38
  8574  1687                     __ptext38:	
  8575 ;; *************** function _checkTime *****************
  8576 ;; Defined at:
  8577 ;;		line 209 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler
      +.h"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;		None
  8582 ;; Return value:  Size  Location     Type
  8583 ;;		None               void
  8584 ;; Registers used:
  8585 ;;		wreg
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8591 ;;      Params:         0       0       0       0       0
  8592 ;;      Locals:         0       0       0       0       0
  8593 ;;      Temps:          0       0       0       0       0
  8594 ;;      Totals:         0       0       0       0       0
  8595 ;;Total ram usage:        0 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:    2
  8598 ;; This function calls:
  8599 ;;		Nothing
  8600 ;; This function is called by:
  8601 ;;		_main
  8602 ;; This function uses a non-reentrant model
  8603 ;;
  8604                           
  8605                           
  8606                           ;psect for function _checkTime
  8607  1687                     _checkTime:	
  8608                           
  8609                           ;time_scheduler.h: 211: if (hours == savedHoursEnd && minutes == savedMinutesEnd)
  8610                           
  8611                           ;incstack = 0
  8612                           ; Regs used in _checkTime: [wreg]
  8613  1687  1283               	bcf	3,5	;RP0=0, select bank0
  8614  1688  1303               	bcf	3,6	;RP1=0, select bank0
  8615  1689  0865               	movf	_hours,w	;volatile
  8616  168A  0667               	xorwf	_savedHoursEnd,w	;volatile
  8617  168B  1D03               	skipz
  8618  168C  2E93               	goto	l2879
  8619  168D  086D               	movf	_minutes,w	;volatile
  8620  168E  0669               	xorwf	_savedMinutesEnd,w	;volatile
  8621  168F  1D03               	skipz
  8622  1690  2E93               	goto	l2879
  8623                           
  8624                           ;time_scheduler.h: 212: {
  8625                           ;time_scheduler.h: 213: PORTCbits.RC4 = 1;
  8626  1691  1607               	bsf	7,4	;volatile
  8627                           
  8628                           ;time_scheduler.h: 214: }
  8629  1692  0008               	return
  8630  1693                     l2879:	
  8631                           
  8632                           ;time_scheduler.h: 215: else if (savedHoursEnd > savedHoursStart)
  8633  1693  0867               	movf	_savedHoursEnd,w	;volatile
  8634  1694  0268               	subwf	_savedHoursStart,w	;volatile
  8635  1695  1803               	skipnc
  8636  1696  2EB3               	goto	l2893
  8637                           
  8638                           ;time_scheduler.h: 216: {
  8639                           ;time_scheduler.h: 218: if ((hours > savedHoursStart || (hours == savedHoursStart && min
      +                          utes >= savedMinutesStart)) &&
  8640                           ;time_scheduler.h: 219: (hours < savedHoursEnd || (hours == savedHoursEnd && minutes < s
      +                          avedMinutesEnd)))
  8641  1697  0865               	movf	_hours,w	;volatile
  8642  1698  0268               	subwf	_savedHoursStart,w	;volatile
  8643  1699  1C03               	skipc
  8644  169A  2EA3               	goto	l2887
  8645  169B  0865               	movf	_hours,w	;volatile
  8646  169C  0668               	xorwf	_savedHoursStart,w	;volatile
  8647  169D  1D03               	skipz
  8648  169E  2EB1               	goto	l251
  8649  169F  086A               	movf	_savedMinutesStart,w	;volatile
  8650  16A0  026D               	subwf	_minutes,w	;volatile
  8651  16A1  1C03               	skipc
  8652  16A2  2EB1               	goto	l251
  8653  16A3                     l2887:	
  8654  16A3  0867               	movf	_savedHoursEnd,w	;volatile
  8655  16A4  0265               	subwf	_hours,w	;volatile
  8656  16A5  1C03               	skipc
  8657  16A6  2EAF               	goto	l255
  8658  16A7  0865               	movf	_hours,w	;volatile
  8659  16A8  0667               	xorwf	_savedHoursEnd,w	;volatile
  8660  16A9  1D03               	skipz
  8661  16AA  2EB1               	goto	l251
  8662  16AB  0869               	movf	_savedMinutesEnd,w	;volatile
  8663  16AC  026D               	subwf	_minutes,w	;volatile
  8664  16AD  1803               	skipnc
  8665  16AE  2EB1               	goto	l251
  8666  16AF                     l255:	
  8667                           
  8668                           ;time_scheduler.h: 220: {
  8669                           ;time_scheduler.h: 221: PORTCbits.RC4 = 0;
  8670  16AF  1207               	bcf	7,4	;volatile
  8671                           
  8672                           ;time_scheduler.h: 222: }
  8673  16B0  0008               	return
  8674  16B1                     l251:	
  8675                           
  8676                           ;time_scheduler.h: 223: else
  8677                           ;time_scheduler.h: 224: {
  8678                           ;time_scheduler.h: 225: PORTCbits.RC4 = 1;
  8679  16B1  1607               	bsf	7,4	;volatile
  8680                           
  8681                           ;time_scheduler.h: 226: }
  8682                           ;time_scheduler.h: 227: }
  8683  16B2  0008               	return
  8684  16B3                     l2893:	
  8685                           
  8686                           ;time_scheduler.h: 228: else if (savedHoursEnd < savedHoursStart)
  8687  16B3  0868               	movf	_savedHoursStart,w	;volatile
  8688  16B4  0267               	subwf	_savedHoursEnd,w	;volatile
  8689  16B5  1803               	skipnc
  8690  16B6  2ED3               	goto	l2907
  8691                           
  8692                           ;time_scheduler.h: 229: {
  8693                           ;time_scheduler.h: 231: if ((hours > savedHoursStart || (hours == savedHoursStart && min
      +                          utes >= savedMinutesStart)) ||
  8694                           ;time_scheduler.h: 232: (hours < savedHoursEnd || (hours == savedHoursEnd && minutes < s
      +                          avedMinutesEnd)))
  8695  16B7  0865               	movf	_hours,w	;volatile
  8696  16B8  0268               	subwf	_savedHoursStart,w	;volatile
  8697  16B9  1C03               	skipc
  8698  16BA  2ECF               	goto	l261
  8699  16BB  0865               	movf	_hours,w	;volatile
  8700  16BC  0668               	xorwf	_savedHoursStart,w	;volatile
  8701  16BD  1D03               	skipz
  8702  16BE  2EC3               	goto	l2901
  8703  16BF  086A               	movf	_savedMinutesStart,w	;volatile
  8704  16C0  026D               	subwf	_minutes,w	;volatile
  8705  16C1  1803               	skipnc
  8706  16C2  2ECF               	goto	l261
  8707  16C3                     l2901:	
  8708  16C3  0867               	movf	_savedHoursEnd,w	;volatile
  8709  16C4  0265               	subwf	_hours,w	;volatile
  8710  16C5  1C03               	skipc
  8711  16C6  2ECF               	goto	l261
  8712  16C7  0865               	movf	_hours,w	;volatile
  8713  16C8  0667               	xorwf	_savedHoursEnd,w	;volatile
  8714  16C9  1D03               	skipz
  8715  16CA  2ED1               	goto	l259
  8716  16CB  0869               	movf	_savedMinutesEnd,w	;volatile
  8717  16CC  026D               	subwf	_minutes,w	;volatile
  8718  16CD  1803               	skipnc
  8719  16CE  2ED1               	goto	l259
  8720  16CF                     l261:	
  8721                           
  8722                           ;time_scheduler.h: 233: {
  8723                           ;time_scheduler.h: 234: PORTCbits.RC4 = 0;
  8724  16CF  1207               	bcf	7,4	;volatile
  8725                           
  8726                           ;time_scheduler.h: 235: }
  8727  16D0  0008               	return
  8728  16D1                     l259:	
  8729                           
  8730                           ;time_scheduler.h: 236: else
  8731                           ;time_scheduler.h: 237: {
  8732                           ;time_scheduler.h: 238: PORTCbits.RC4 = 1;
  8733  16D1  1607               	bsf	7,4	;volatile
  8734                           
  8735                           ;time_scheduler.h: 239: }
  8736                           ;time_scheduler.h: 240: }
  8737  16D2  0008               	return
  8738  16D3                     l2907:	
  8739                           
  8740                           ;time_scheduler.h: 241: else
  8741                           ;time_scheduler.h: 242: {
  8742                           ;time_scheduler.h: 243: if (minutes >= savedMinutesStart && minutes < savedMinutesEnd)
  8743  16D3  086A               	movf	_savedMinutesStart,w	;volatile
  8744  16D4  026D               	subwf	_minutes,w	;volatile
  8745  16D5  1C03               	skipc
  8746  16D6  2EDD               	goto	l268
  8747  16D7  0869               	movf	_savedMinutesEnd,w	;volatile
  8748  16D8  026D               	subwf	_minutes,w	;volatile
  8749  16D9  1803               	skipnc
  8750  16DA  2EDD               	goto	l268
  8751                           
  8752                           ;time_scheduler.h: 244: {
  8753                           ;time_scheduler.h: 245: PORTCbits.RC4 = 0;
  8754  16DB  1207               	bcf	7,4	;volatile
  8755                           
  8756                           ;time_scheduler.h: 246: }
  8757  16DC  0008               	return
  8758  16DD                     l268:	
  8759                           
  8760                           ;time_scheduler.h: 247: else
  8761                           ;time_scheduler.h: 248: {
  8762                           ;time_scheduler.h: 249: PORTCbits.RC4 = 1;
  8763  16DD  1607               	bsf	7,4	;volatile
  8764  16DE  0008               	return
  8765  16DF                     __end_of_checkTime:	
  8766                           
  8767                           	psect	text39
  8768  1477                     __ptext39:	
  8769 ;; *************** function _checkSEL *****************
  8770 ;; Defined at:
  8771 ;;		line 201 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  8772 ;; Parameters:    Size  Location     Type
  8773 ;;		None
  8774 ;; Auto vars:     Size  Location     Type
  8775 ;;  currentRB1St    2    4[BANK0 ] int 
  8776 ;; Return value:  Size  Location     Type
  8777 ;;		None               void
  8778 ;; Registers used:
  8779 ;;		wreg, status,2, status,0, pclath, cstack
  8780 ;; Tracked objects:
  8781 ;;		On entry : 0/0
  8782 ;;		On exit  : 0/0
  8783 ;;		Unchanged: 0/0
  8784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8785 ;;      Params:         0       0       0       0       0
  8786 ;;      Locals:         0       2       0       0       0
  8787 ;;      Temps:          0       2       0       0       0
  8788 ;;      Totals:         0       4       0       0       0
  8789 ;;Total ram usage:        4 bytes
  8790 ;; Hardware stack levels used:    1
  8791 ;; Hardware stack levels required when called:    3
  8792 ;; This function calls:
  8793 ;;		_instCTRL
  8794 ;; This function is called by:
  8795 ;;		_main
  8796 ;; This function uses a non-reentrant model
  8797 ;;
  8798                           
  8799                           
  8800                           ;psect for function _checkSEL
  8801  1477                     _checkSEL:	
  8802                           
  8803                           ;main.c: 203: static int lastRB1State = 0;
  8804                           ;main.c: 204: int currentRB1State = RB1;
  8805                           
  8806                           ;incstack = 0
  8807                           ; Regs used in _checkSEL: [wreg+status,2+status,0+pclath+cstack]
  8808  1477  1003               	clrc
  8809  1478  1283               	bcf	3,5	;RP0=0, select bank0
  8810  1479  1303               	bcf	3,6	;RP1=0, select bank0
  8811  147A  1886               	btfsc	6,1	;volatile
  8812  147B  1403               	setc
  8813  147C  3000               	movlw	0
  8814  147D  1803               	skipnc
  8815  147E  3001               	movlw	1
  8816  147F  00A2               	movwf	??_checkSEL
  8817  1480  01A3               	clrf	??_checkSEL+1
  8818  1481  0822               	movf	??_checkSEL,w
  8819  1482  00A4               	movwf	checkSEL@currentRB1State
  8820  1483  0823               	movf	??_checkSEL+1,w
  8821  1484  00A5               	movwf	checkSEL@currentRB1State+1
  8822                           
  8823                           ;main.c: 205: if (currentRB1State == 1 && lastRB1State == 0)
  8824  1485  3001               	movlw	1
  8825  1486  0624               	xorwf	checkSEL@currentRB1State,w
  8826  1487  0425               	iorwf	checkSEL@currentRB1State+1,w
  8827  1488  1D03               	skipz
  8828  1489  2C9C               	goto	l2955
  8829  148A  1683               	bsf	3,5	;RP0=1, select bank1
  8830  148B  1303               	bcf	3,6	;RP1=0, select bank1
  8831  148C  0860               	movf	(checkSEL@lastRB1State+1)^(0+128),w
  8832  148D  045F               	iorwf	checkSEL@lastRB1State^(0+128),w
  8833  148E  1D03               	skipz
  8834  148F  2C9C               	goto	l2955
  8835                           
  8836                           ;main.c: 206: {
  8837                           ;main.c: 207: SEL ^= 1;
  8838  1490  3001               	movlw	1
  8839  1491  1283               	bcf	3,5	;RP0=0, select bank0
  8840  1492  1303               	bcf	3,6	;RP1=0, select bank0
  8841  1493  00A2               	movwf	??_checkSEL
  8842  1494  0822               	movf	??_checkSEL,w
  8843  1495  1683               	bsf	3,5	;RP0=1, select bank1
  8844  1496  1303               	bcf	3,6	;RP1=0, select bank1
  8845  1497  06E1               	xorwf	_SEL^(0+128),f	;volatile
  8846                           
  8847                           ;main.c: 208: instCTRL(0x01);
  8848  1498  3001               	movlw	1
  8849  1499  120A  158A  2005   	fcall	_instCTRL
  8850  149C                     l2955:	
  8851                           
  8852                           ;main.c: 209: }
  8853                           ;main.c: 210: lastRB1State = currentRB1State;
  8854  149C  1283               	bcf	3,5	;RP0=0, select bank0
  8855  149D  1303               	bcf	3,6	;RP1=0, select bank0
  8856  149E  0825               	movf	checkSEL@currentRB1State+1,w
  8857  149F  1683               	bsf	3,5	;RP0=1, select bank1
  8858  14A0  1303               	bcf	3,6	;RP1=0, select bank1
  8859  14A1  01E0               	clrf	(checkSEL@lastRB1State+1)^(0+128)
  8860  14A2  07E0               	addwf	(checkSEL@lastRB1State+1)^(0+128),f
  8861  14A3  1283               	bcf	3,5	;RP0=0, select bank0
  8862  14A4  1303               	bcf	3,6	;RP1=0, select bank0
  8863  14A5  0824               	movf	checkSEL@currentRB1State,w
  8864  14A6  1683               	bsf	3,5	;RP0=1, select bank1
  8865  14A7  1303               	bcf	3,6	;RP1=0, select bank1
  8866  14A8  01DF               	clrf	checkSEL@lastRB1State^(0+128)
  8867  14A9  07DF               	addwf	checkSEL@lastRB1State^(0+128),f
  8868  14AA  0008               	return
  8869  14AB                     __end_of_checkSEL:	
  8870                           
  8871                           	psect	text40
  8872  12FC                     __ptext40:	
  8873 ;; *************** function _checkMode *****************
  8874 ;; Defined at:
  8875 ;;		line 191 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;		None
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;		None               void
  8882 ;; Registers used:
  8883 ;;		wreg, status,2, status,0, pclath, cstack
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8889 ;;      Params:         0       0       0       0       0
  8890 ;;      Locals:         0       0       0       0       0
  8891 ;;      Temps:          0       2       0       0       0
  8892 ;;      Totals:         0       2       0       0       0
  8893 ;;Total ram usage:        2 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; Hardware stack levels required when called:    3
  8896 ;; This function calls:
  8897 ;;		_instCTRL
  8898 ;; This function is called by:
  8899 ;;		_main
  8900 ;; This function uses a non-reentrant model
  8901 ;;
  8902                           
  8903                           
  8904                           ;psect for function _checkMode
  8905  12FC                     _checkMode:	
  8906                           
  8907                           ;main.c: 193: if (lastMode != mode)
  8908                           
  8909                           ;incstack = 0
  8910                           ; Regs used in _checkMode: [wreg+status,2+status,0+pclath+cstack]
  8911  12FC  087D               	movf	_lastMode,w
  8912  12FD  1683               	bsf	3,5	;RP0=1, select bank1
  8913  12FE  1303               	bcf	3,6	;RP1=0, select bank1
  8914  12FF  0662               	xorwf	_mode^(0+128),w
  8915  1300  1903               	skipnz
  8916  1301  0008               	return
  8917                           
  8918                           ;main.c: 194: {
  8919                           ;main.c: 195: instCTRL(0x01);
  8920  1302  3001               	movlw	1
  8921  1303  120A  158A  2005  160A  118A  	fcall	_instCTRL
  8922                           
  8923                           ;main.c: 196: _delay((unsigned long)((50)*(4000000/4000.0)));
  8924  1308  3041               	movlw	65
  8925  1309  1283               	bcf	3,5	;RP0=0, select bank0
  8926  130A  1303               	bcf	3,6	;RP1=0, select bank0
  8927  130B  00A3               	movwf	??_checkMode+1
  8928  130C  30EE               	movlw	238
  8929  130D  00A2               	movwf	??_checkMode
  8930  130E                     u4527:	
  8931  130E  0BA2               	decfsz	??_checkMode,f
  8932  130F  2B0E               	goto	u4527
  8933  1310  0BA3               	decfsz	??_checkMode+1,f
  8934  1311  2B0E               	goto	u4527
  8935  1312  0000               	nop
  8936                           
  8937                           ;main.c: 197: lastMode = mode;
  8938  1313  1683               	bsf	3,5	;RP0=1, select bank1
  8939  1314  1303               	bcf	3,6	;RP1=0, select bank1
  8940  1315  0862               	movf	_mode^(0+128),w
  8941  1316  1283               	bcf	3,5	;RP0=0, select bank0
  8942  1317  1303               	bcf	3,6	;RP1=0, select bank0
  8943  1318  00A2               	movwf	??_checkMode
  8944  1319  0822               	movf	??_checkMode,w
  8945  131A  00FD               	movwf	_lastMode
  8946  131B  0008               	return
  8947  131C                     __end_of_checkMode:	
  8948                           
  8949                           	psect	text41
  8950  0805                     __ptext41:	
  8951 ;; *************** function _instCTRL *****************
  8952 ;; Defined at:
  8953 ;;		line 23 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;  CMD             1    wreg     unsigned char 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;  CMD             1    1[BANK0 ] unsigned char 
  8958 ;; Return value:  Size  Location     Type
  8959 ;;		None               void
  8960 ;; Registers used:
  8961 ;;		wreg
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8967 ;;      Params:         0       0       0       0       0
  8968 ;;      Locals:         0       1       0       0       0
  8969 ;;      Temps:          0       1       0       0       0
  8970 ;;      Totals:         0       2       0       0       0
  8971 ;;Total ram usage:        2 bytes
  8972 ;; Hardware stack levels used:    1
  8973 ;; Hardware stack levels required when called:    2
  8974 ;; This function calls:
  8975 ;;		Nothing
  8976 ;; This function is called by:
  8977 ;;		_initLCD
  8978 ;;		_setCursor
  8979 ;;		_startUpSequence
  8980 ;;		_checkMode
  8981 ;;		_checkSEL
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           
  8986                           ;psect for function _instCTRL
  8987  0805                     _instCTRL:	
  8988                           
  8989                           ;incstack = 0
  8990                           ; Regs used in _instCTRL: [wreg]
  8991                           ;instCTRL@CMD stored from wreg
  8992  0805  1283               	bcf	3,5	;RP0=0, select bank0
  8993  0806  1303               	bcf	3,6	;RP1=0, select bank0
  8994  0807  00A1               	movwf	instCTRL@CMD
  8995                           
  8996                           ;lcd_functions.h: 25: PORTD = CMD;
  8997  0808  0821               	movf	instCTRL@CMD,w
  8998  0809  0088               	movwf	8	;volatile
  8999                           
  9000                           ;lcd_functions.h: 26: RC0 = 0;
  9001  080A  1007               	bcf	7,0	;volatile
  9002                           
  9003                           ;lcd_functions.h: 27: RC1 = 0;
  9004  080B  1087               	bcf	7,1	;volatile
  9005                           
  9006                           ;lcd_functions.h: 28: RC2 = 1;
  9007  080C  1507               	bsf	7,2	;volatile
  9008                           
  9009                           ;lcd_functions.h: 29: _delay((unsigned long)((1)*(4000000/4000.0)));
  9010  080D  30F9               	movlw	249
  9011  080E  00A0               	movwf	??_instCTRL
  9012  080F                     u4537:	
  9013  080F  0000               	nop
  9014  0810  0BA0               	decfsz	??_instCTRL,f
  9015  0811  280F               	goto	u4537
  9016  0812  2813               	nop2	;nop
  9017  0813  0000               	nop
  9018                           
  9019                           ;lcd_functions.h: 30: RC2 = 0;
  9020  0814  1283               	bcf	3,5	;RP0=0, select bank0
  9021  0815  1303               	bcf	3,6	;RP1=0, select bank0
  9022  0816  1107               	bcf	7,2	;volatile
  9023  0817  0008               	return
  9024  0818                     __end_of_instCTRL:	
  9025                           
  9026                           	psect	text42
  9027  12B2                     __ptext42:	
  9028 ;; *************** function _activateHumidifier *****************
  9029 ;; Defined at:
  9030 ;;		line 104 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h
      +"
  9031 ;; Parameters:    Size  Location     Type
  9032 ;;		None
  9033 ;; Auto vars:     Size  Location     Type
  9034 ;;		None
  9035 ;; Return value:  Size  Location     Type
  9036 ;;		None               void
  9037 ;; Registers used:
  9038 ;;		wreg
  9039 ;; Tracked objects:
  9040 ;;		On entry : 0/0
  9041 ;;		On exit  : 0/0
  9042 ;;		Unchanged: 0/0
  9043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9044 ;;      Params:         0       0       0       0       0
  9045 ;;      Locals:         0       0       0       0       0
  9046 ;;      Temps:          0       0       0       0       0
  9047 ;;      Totals:         0       0       0       0       0
  9048 ;;Total ram usage:        0 bytes
  9049 ;; Hardware stack levels used:    1
  9050 ;; Hardware stack levels required when called:    2
  9051 ;; This function calls:
  9052 ;;		Nothing
  9053 ;; This function is called by:
  9054 ;;		_main
  9055 ;; This function uses a non-reentrant model
  9056 ;;
  9057                           
  9058                           
  9059                           ;psect for function _activateHumidifier
  9060  12B2                     _activateHumidifier:	
  9061                           
  9062                           ;dht11_module.h: 106: if (humidity > 50 && temperature > 25)
  9063                           
  9064                           ;incstack = 0
  9065                           ; Regs used in _activateHumidifier: [wreg]
  9066  12B2  3033               	movlw	51
  9067  12B3  1283               	bcf	3,5	;RP0=0, select bank0
  9068  12B4  1303               	bcf	3,6	;RP1=0, select bank0
  9069  12B5  026E               	subwf	_humidity,w
  9070  12B6  1C03               	skipc
  9071  12B7  2ABE               	goto	l134
  9072  12B8  301A               	movlw	26
  9073  12B9  026F               	subwf	_temperature,w
  9074  12BA  1C03               	skipc
  9075  12BB  2ABE               	goto	l134
  9076                           
  9077                           ;dht11_module.h: 107: {
  9078                           ;dht11_module.h: 108: PORTCbits.RC3 = 0;
  9079  12BC  1187               	bcf	7,3	;volatile
  9080                           
  9081                           ;dht11_module.h: 109: }
  9082  12BD  0008               	return
  9083  12BE                     l134:	
  9084                           
  9085                           ;dht11_module.h: 110: else
  9086                           ;dht11_module.h: 111: {
  9087                           ;dht11_module.h: 112: PORTCbits.RC3 = 1;
  9088  12BE  1587               	bsf	7,3	;volatile
  9089  12BF  0008               	return
  9090  12C0                     __end_of_activateHumidifier:	
  9091                           
  9092                           	psect	text43
  9093  13D3                     __ptext43:	
  9094 ;; *************** function _ISR *****************
  9095 ;; Defined at:
  9096 ;;		line 144 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;		None
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;		None               void
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0, pclath, cstack
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9110 ;;      Params:         0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0
  9112 ;;      Temps:          5       0       0       0       0
  9113 ;;      Totals:         5       0       0       0       0
  9114 ;;Total ram usage:        5 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    1
  9117 ;; This function calls:
  9118 ;;		i1___awmod
  9119 ;; This function is called by:
  9120 ;;		Interrupt level 1
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function _ISR
  9126  13D3                     _ISR:	
  9127                           
  9128                           ;main.c: 146: if (INTF)
  9129  13D3  1C8B               	btfss	11,1	;volatile
  9130  13D4  2BEE               	goto	i1l308
  9131                           
  9132                           ;main.c: 147: {
  9133                           ;main.c: 148: INTF = 0;
  9134  13D5  108B               	bcf	11,1	;volatile
  9135                           
  9136                           ;main.c: 149: mode = (mode + 1) % 3;
  9137  13D6  3003               	movlw	3
  9138  13D7  00F0               	movwf	i1___awmod@divisor
  9139  13D8  3000               	movlw	0
  9140  13D9  00F1               	movwf	i1___awmod@divisor+1
  9141  13DA  1683               	bsf	3,5	;RP0=1, select bank1
  9142  13DB  1303               	bcf	3,6	;RP1=0, select bank1
  9143  13DC  0862               	movf	_mode^(0+128),w
  9144  13DD  3E01               	addlw	1
  9145  13DE  00F2               	movwf	i1___awmod@dividend
  9146  13DF  3000               	movlw	0
  9147  13E0  1803               	skipnc
  9148  13E1  3001               	movlw	1
  9149  13E2  00F3               	movwf	i1___awmod@dividend+1
  9150  13E3  160A  118A  259B  160A  118A  	fcall	i1___awmod
  9151  13E8  0870               	movf	?i1___awmod,w
  9152  13E9  00F7               	movwf	??_ISR
  9153  13EA  0877               	movf	??_ISR,w
  9154  13EB  1683               	bsf	3,5	;RP0=1, select bank1
  9155  13EC  1303               	bcf	3,6	;RP1=0, select bank1
  9156  13ED  00E2               	movwf	_mode^(0+128)
  9157  13EE                     i1l308:	
  9158  13EE  087B               	movf	??_ISR+4,w
  9159  13EF  1283               	bcf	3,5	;RP0=0, select bank0
  9160  13F0  00FF               	movwf	127
  9161  13F1  087A               	movf	??_ISR+3,w
  9162  13F2  008A               	movwf	10
  9163  13F3  0879               	movf	??_ISR+2,w
  9164  13F4  0084               	movwf	4
  9165  13F5  0E78               	swapf	(??_ISR+1)^(0+-128),w
  9166  13F6  0083               	movwf	3
  9167  13F7  0EFE               	swapf	126,f
  9168  13F8  0E7E               	swapf	126,w
  9169  13F9  0009               	retfie
  9170  13FA                     __end_of_ISR:	
  9171                           
  9172                           	psect	intentry
  9173  0004                     __pintentry:	
  9174                           ;incstack = 0
  9175                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9176                           
  9177  0004                     interrupt_function:	
  9178  007E                     saved_w	set	btemp
  9179  0004  00FE               	movwf	btemp
  9180  0005  0E03               	swapf	3,w
  9181  0006  00F8               	movwf	??_ISR+1
  9182  0007  0804               	movf	4,w
  9183  0008  00F9               	movwf	??_ISR+2
  9184  0009  080A               	movf	10,w
  9185  000A  00FA               	movwf	??_ISR+3
  9186  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9187  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9188  000D  087F               	movf	btemp+1,w
  9189  000E  00FB               	movwf	??_ISR+4
  9190  000F  160A  118A  2BD3   	ljmp	_ISR
  9191                           
  9192                           	psect	text44
  9193  159B                     __ptext44:	
  9194 ;; *************** function i1___awmod *****************
  9195 ;; Defined at:
  9196 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  9197 ;; Parameters:    Size  Location     Type
  9198 ;;  divisor         2    0[COMMON] int 
  9199 ;;  dividend        2    2[COMMON] int 
  9200 ;; Auto vars:     Size  Location     Type
  9201 ;;  __awmod         1    6[COMMON] unsigned char 
  9202 ;;  __awmod         1    5[COMMON] unsigned char 
  9203 ;; Return value:  Size  Location     Type
  9204 ;;                  2    0[COMMON] int 
  9205 ;; Registers used:
  9206 ;;		wreg, status,2, status,0
  9207 ;; Tracked objects:
  9208 ;;		On entry : 0/0
  9209 ;;		On exit  : 0/0
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9212 ;;      Params:         4       0       0       0       0
  9213 ;;      Locals:         2       0       0       0       0
  9214 ;;      Temps:          1       0       0       0       0
  9215 ;;      Totals:         7       0       0       0       0
  9216 ;;Total ram usage:        7 bytes
  9217 ;; Hardware stack levels used:    1
  9218 ;; This function calls:
  9219 ;;		Nothing
  9220 ;; This function is called by:
  9221 ;;		_ISR
  9222 ;; This function uses a non-reentrant model
  9223 ;;
  9224                           
  9225                           
  9226                           ;psect for function i1___awmod
  9227  159B                     i1___awmod:	
  9228                           
  9229                           ;incstack = 0
  9230                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  9231  159B  01F6               	clrf	i1___awmod@sign
  9232  159C  1FF3               	btfss	i1___awmod@dividend+1,7
  9233  159D  2DA5               	goto	i1l2965
  9234  159E  09F2               	comf	i1___awmod@dividend,f
  9235  159F  09F3               	comf	i1___awmod@dividend+1,f
  9236  15A0  0AF2               	incf	i1___awmod@dividend,f
  9237  15A1  1903               	skipnz
  9238  15A2  0AF3               	incf	i1___awmod@dividend+1,f
  9239  15A3  01F6               	clrf	i1___awmod@sign
  9240  15A4  0AF6               	incf	i1___awmod@sign,f
  9241  15A5                     i1l2965:	
  9242  15A5  1FF1               	btfss	i1___awmod@divisor+1,7
  9243  15A6  2DAC               	goto	i1l2969
  9244  15A7  09F0               	comf	i1___awmod@divisor,f
  9245  15A8  09F1               	comf	i1___awmod@divisor+1,f
  9246  15A9  0AF0               	incf	i1___awmod@divisor,f
  9247  15AA  1903               	skipnz
  9248  15AB  0AF1               	incf	i1___awmod@divisor+1,f
  9249  15AC                     i1l2969:	
  9250  15AC  0871               	movf	i1___awmod@divisor+1,w
  9251  15AD  0470               	iorwf	i1___awmod@divisor,w
  9252  15AE  1903               	skipnz
  9253  15AF  2DD9               	goto	i1l2987
  9254  15B0  01F5               	clrf	i1___awmod@counter
  9255  15B1  0AF5               	incf	i1___awmod@counter,f
  9256  15B2                     i1l2977:	
  9257  15B2  1BF1               	btfsc	i1___awmod@divisor+1,7
  9258  15B3  2DC0               	goto	i1l2979
  9259  15B4  3001               	movlw	1
  9260  15B5                     u416_25:	
  9261  15B5  1003               	clrc
  9262  15B6  0DF0               	rlf	i1___awmod@divisor,f
  9263  15B7  0DF1               	rlf	i1___awmod@divisor+1,f
  9264  15B8  3EFF               	addlw	-1
  9265  15B9  1D03               	skipz
  9266  15BA  2DB5               	goto	u416_25
  9267  15BB  3001               	movlw	1
  9268  15BC  00F4               	movwf	??i1___awmod
  9269  15BD  0874               	movf	??i1___awmod,w
  9270  15BE  07F5               	addwf	i1___awmod@counter,f
  9271  15BF  2DB2               	goto	i1l2977
  9272  15C0                     i1l2979:	
  9273  15C0  0871               	movf	i1___awmod@divisor+1,w
  9274  15C1  0273               	subwf	i1___awmod@dividend+1,w
  9275  15C2  1D03               	skipz
  9276  15C3  2DC6               	goto	u418_25
  9277  15C4  0870               	movf	i1___awmod@divisor,w
  9278  15C5  0272               	subwf	i1___awmod@dividend,w
  9279  15C6                     u418_25:	
  9280  15C6  1C03               	skipc
  9281  15C7  2DCE               	goto	i1l2983
  9282  15C8  0870               	movf	i1___awmod@divisor,w
  9283  15C9  02F2               	subwf	i1___awmod@dividend,f
  9284  15CA  0871               	movf	i1___awmod@divisor+1,w
  9285  15CB  1C03               	skipc
  9286  15CC  03F3               	decf	i1___awmod@dividend+1,f
  9287  15CD  02F3               	subwf	i1___awmod@dividend+1,f
  9288  15CE                     i1l2983:	
  9289  15CE  3001               	movlw	1
  9290  15CF                     u419_25:	
  9291  15CF  1003               	clrc
  9292  15D0  0CF1               	rrf	i1___awmod@divisor+1,f
  9293  15D1  0CF0               	rrf	i1___awmod@divisor,f
  9294  15D2  3EFF               	addlw	-1
  9295  15D3  1D03               	skipz
  9296  15D4  2DCF               	goto	u419_25
  9297  15D5  3001               	movlw	1
  9298  15D6  02F5               	subwf	i1___awmod@counter,f
  9299  15D7  1D03               	btfss	3,2
  9300  15D8  2DC0               	goto	i1l2979
  9301  15D9                     i1l2987:	
  9302  15D9  0876               	movf	i1___awmod@sign,w
  9303  15DA  1903               	btfsc	3,2
  9304  15DB  2DE1               	goto	i1l2991
  9305  15DC  09F2               	comf	i1___awmod@dividend,f
  9306  15DD  09F3               	comf	i1___awmod@dividend+1,f
  9307  15DE  0AF2               	incf	i1___awmod@dividend,f
  9308  15DF  1903               	skipnz
  9309  15E0  0AF3               	incf	i1___awmod@dividend+1,f
  9310  15E1                     i1l2991:	
  9311  15E1  0873               	movf	i1___awmod@dividend+1,w
  9312  15E2  01F1               	clrf	?i1___awmod+1
  9313  15E3  07F1               	addwf	?i1___awmod+1,f
  9314  15E4  0872               	movf	i1___awmod@dividend,w
  9315  15E5  01F0               	clrf	?i1___awmod
  9316  15E6  07F0               	addwf	?i1___awmod,f
  9317  15E7  0008               	return
  9318  15E8                     __end_ofi1___awmod:	
  9319  007E                     btemp	set	126	;btemp
  9320  007E                     wtemp	set	126
  9321  007E                     wtemp0	set	126
  9322  0080                     wtemp1	set	128
  9323  0082                     wtemp2	set	130
  9324  0084                     wtemp3	set	132
  9325  0086                     wtemp4	set	134
  9326  0088                     wtemp5	set	136
  9327  007F                     wtemp6	set	127
  9328  007E                     ttemp	set	126
  9329  007E                     ttemp0	set	126
  9330  0081                     ttemp1	set	129
  9331  0084                     ttemp2	set	132
  9332  0087                     ttemp3	set	135
  9333  007F                     ttemp4	set	127
  9334  007E                     ltemp	set	126
  9335  007E                     ltemp0	set	126
  9336  0082                     ltemp1	set	130
  9337  0086                     ltemp2	set	134
  9338  0080                     ltemp3	set	128


Data Sizes:
    Strings     252
    Constant    10
    Data        7
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     69      80
    BANK1            80     55      77
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_32(CODE[15]), STR_30(CODE[15]), STR_27(CODE[17]), STR_25(CODE[17]), 
		 -> STR_22(CODE[25]), STR_21(CODE[10]), STR_20(CODE[10]), STR_19(CODE[10]), 
		 -> STR_18(CODE[10]), STR_17(CODE[10]), STR_16(CODE[10]), STR_15(CODE[10]), 
		 -> STR_14(CODE[10]), STR_13(CODE[10]), STR_12(CODE[10]), STR_11(CODE[10]), 
		 -> STR_10(CODE[10]), STR_9(CODE[16]), STR_6(CODE[9]), STR_5(CODE[3]), 
		 -> STR_4(CODE[6]), STR_2(CODE[9]), STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK1[16]), debugInfo(BANK1[10]), displayTime@timeFormat(BANK0[16]), displayPPM@strBuffer(BANK1[20]), 
		 -> displayDataDHT11@buffer(BANK0[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S332$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    displayPPM@bufPtr	PTR unsigned char  size(1) Largest target is 20
		 -> displayPPM@strBuffer(BANK1[20]), 

    readDHT11@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> temperature(BANK0[1]), 

    readDHT11@humidity	PTR unsigned char  size(1) Largest target is 1
		 -> humidity(BANK0[1]), 

    printToLCD@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_33(CODE[16]), STR_31(CODE[9]), STR_29(CODE[10]), STR_28(CODE[16]), 
		 -> STR_26(CODE[11]), STR_24(CODE[12]), STR_23(CODE[18]), main@buffer(BANK1[16]), 
		 -> debugInfo(BANK1[10]), displayTime@timeFormat(BANK0[16]), STR_8(CODE[8]), STR_7(CODE[8]), 
		 -> displayPPM@strBuffer(BANK1[20]), STR_3(CODE[7]), displayDataDHT11@buffer(BANK0[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___awmod

Critical Paths under _main in BANK0

    _main->_displayPPM
    _startUpSequence->_setCursor
    _initLCD->_instCTRL
    _setMinutesStart->_sprintf
    _setMinutesEnd->_sprintf
    _setHoursStart->_sprintf
    _setHoursEnd->_sprintf
    _runMQ135->_CalcMQ135
    _CalcMQ135->___ftdiv
    ___ftdiv->___ftmul
    _runDHT11->_displayDataDHT11
    _displayDataDHT11->_sprintf
    _setCursor->_instCTRL
    _handlePPM->___ftge
    _displayTime->_sprintf
    _displayPPM->___fttol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _printToLCD->_dataCTRL
    ___fttol->___ftadd
    ___ftneg->___awtoft
    ___ftmul->___ftneg
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _checkSEL->_instCTRL
    _checkMode->_instCTRL

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _runMQ135->_CalcMQ135

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   79204
                                             61 BANK0      8     8      0
                                             39 BANK1     16    16      0
                 _activateHumidifier
                          _checkMode
                           _checkSEL
                          _checkTime
                   _displayDataDHT11
                         _displayPPM
                        _displayTime
                          _handlePPM
                     _initInterrupts
                          _initPorts
                      _initRegisters
                         _printToLCD
                           _runClock
                           _runDHT11
                           _runMQ135
                          _setCursor
                        _setHoursEnd
                      _setHoursStart
                      _setMinutesEnd
                    _setMinutesStart
                            _sprintf
                    _startUpSequence
 ---------------------------------------------------------------------------------
 (1) _startUpSequence                                      3     3      0    2484
                                              6 BANK0      3     3      0
                          _initDHT11
                            _initLCD
                           _instCTRL
                         _printToLCD
                          _setCursor
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              2 BANK0      2     2      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (2) _initDHT11                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setMinutesStart                                      2     2      0    6060
                                             40 BANK0      2     2      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setMinutesEnd                                        2     2      0    6060
                                             40 BANK0      2     2      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setHoursStart                                        2     2      0    6060
                                             40 BANK0      2     2      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setHoursEnd                                          2     2      0    6060
                                             40 BANK0      2     2      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1198
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _runMQ135                                             0     0      0   11540
                          _CalcMQ135
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CalcMQ135                                           42    39      3   11518
                                             49 BANK0      3     0      3
                                              0 BANK1     39    39      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2177
                                             33 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _runDHT11                                             3     3      0    9004
                                             57 BANK0      3     3      0
                   _displayDataDHT11
                         _printToLCD
                          _readDHT11
                          _setCursor
 ---------------------------------------------------------------------------------
 (2) _readDHT11                                           15    14      1     444
                                              0 BANK0     15    14      1
 ---------------------------------------------------------------------------------
 (2) _displayDataDHT11                                    17    17      0    6120
                                             40 BANK0     17    17      0
                         _printToLCD
                          _setCursor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _setCursor                                            4     3      1    1154
                                              2 BANK0      4     3      1
                           _instCTRL
 ---------------------------------------------------------------------------------
 (1) _runClock                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initRegisters                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handlePPM                                            0     0      0     242
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     242
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         20    20      0    4922
                                             40 BANK0     20    20      0
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _displayPPM                                          26    26      0   14311
                                             60 BANK0      1     1      0
                                              0 BANK1     25    25      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    16     10    3576
                                             14 BANK0     26    16     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _printToLCD                                           2     0      2    1286
                                              2 BANK0      2     0      2
                           _dataCTRL
 ---------------------------------------------------------------------------------
 (3) _dataCTRL                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                             46 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                             14 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3495
                                             17 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3347
                                             33 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1882
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1685
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _checkTime                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkSEL                                             4     4      0      67
                                              2 BANK0      4     4      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (1) _checkMode                                            2     2      0      22
                                              2 BANK0      2     2      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (3) _instCTRL                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _activateHumidifier                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  5     5      0     348
                                              7 COMMON     5     5      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateHumidifier
   _checkMode
     _instCTRL
   _checkSEL
     _instCTRL
   _checkTime
   _displayDataDHT11
     _printToLCD
       _dataCTRL
     _setCursor
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _displayPPM
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _displayTime
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _handlePPM
     ___ftge
   _initInterrupts
   _initPorts
   _initRegisters
   _printToLCD
     _dataCTRL
   _runClock
   _runDHT11
     _displayDataDHT11
       _printToLCD
         _dataCTRL
       _setCursor
         _instCTRL
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _printToLCD
       _dataCTRL
     _readDHT11
     _setCursor
       _instCTRL
   _runMQ135
     _CalcMQ135
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       _readADC (ARG)
     _readADC
   _setCursor
     _instCTRL
   _setHoursEnd
     ___awmod
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setHoursStart
     ___awmod
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setMinutesEnd
     ___awmod
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setMinutesStart
     ___awmod
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _startUpSequence
     _initDHT11
     _initLCD
       _instCTRL
     _instCTRL
     _printToLCD
       _dataCTRL
     _setCursor
       _instCTRL

 _ISR (ROOT)
   i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     37      4D       7       96.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     45      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AB      12        0.0%
ABS                  0      0      AB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri May 17 17:27:22 2024

                          pc 0002                 ?_displayTime 0070                  __CFG_CP$OFF 0000  
                         l69 143E                           fsr 0004          ___wmul@multiplicand 0022  
   __size_of_setMinutesStart 00A9                 ___ftadd@exp1 004D                 ___ftadd@exp2 004C  
               ___ftadd@sign 004B                          l120 0B30                          l116 0B11  
                        l134 12BE                          l150 1472                          l222 0A95  
                        l208 089A                          l251 16B1                          l236 09EC  
                        l261 16CF                          l255 16AF                          l346 0E3C  
                        l194 0943                          l259 16D1                          l268 16DD  
                        l364 0F13                          l632 17E7                          l465 13BA  
                        l626 17CE                          l655 0DA0                          _GIE 005F  
                        _RB1 0031                          _RC0 0038                          _RC1 0039  
                        _RC2 003A                 __CFG_CPD$OFF 0000                          _ISR 13D3  
                        _SEL 00E1                          _PPM 00DC                          _key 006B  
                        fsr0 0004                          indf 0000                 ___awmod@sign 0026  
               __CFG_FOSC$HS 0000                printToLCD@str 0022                 __CFG_LVP$OFF 0000  
                       ?_ISR 0070                 ___ftdiv@cntr 004B                 ___ftdiv@sign 0050  
                       l2101 14C1                         l2105 14CF                         l2025 13B2  
                       l2121 1403                         l2043 17A7                         l2019 12DD  
                       l2123 1408                         l2115 13FE                         l2053 17D3  
                       l2045 17B3                         l2109 14DA                         l2205 0F32  
                       l2117 13FF                         l2055 17DD                         l2047 17B8  
                       l2039 17A0                         l2207 0F36                         l2119 1401  
                       l2127 140A                         l3111 05E6                         l2313 0D66  
                       l2217 0F4D                         l2153 0E38                         l2129 1418  
                       l3009 05F0                         l2331 0DB2                         l2315 0D72  
                       l2307 0D51                         l2403 0C53                         l2139 1389  
                       l2083 1548                         l2075 1524                         l2227 0F69  
                       l2163 0E62                         l3043 0429                         l3051 0474  
                       l3019 05FF                         l2325 0D90                         l2317 0D77  
                       l2077 1532                         l2229 0F6D                         l2237 0F88  
                       l2245 0F9D                         l2173 0EA4                         l2157 0E41  
                       l2501 0B00                         l3053 047F                         l3037 040C  
                       l2335 0DC4                         l2327 0D9C                         l2319 0D7B  
                       l2431 0CCA                         l2415 0C92                         l2087 1553  
                       l2255 0FA1                         l2175 0EC1                         l2159 0E4E  
                       l2273 1370                         l2345 0DE7                         l2185 0EDA  
                       l2257 0E0A                         l2521 0B32                         l2361 0B9B  
                       l3081 052D                         l2427 0CBA                         l2419 0CA2  
                       l2099 14B3                         l2259 0FF3                         l2603 1760  
                       l2355 0B85                         l3083 0538                         l3059 049D  
                       l2285 0D21                         l2197 0F05                         l2189 0EE0  
                       l2525 0B3A                         l2509 0B0C                         l3069 04E5  
                       l2295 0D37                         l2607 1787                         l2535 0B5E  
                       l2383 0BFF                         l2375 0BE0                         l2289 0D28  
                       l2633 0775                         l2529 0B42                         l2801 08B9  
                       l3089 0556                         l2651 07A7                         l2707 0735  
                       l3099 059E                         l2901 16C3                         l2397 0C3D  
                       l2661 07CF                         l2653 07B7                         l2733 12F2  
                       l2493 0AF5                         l2581 1601                         l2573 15FB  
                       l2663 07D2                         l2583 160F                         l2591 1628  
                       l2751 090C                         l2569 15F4                         l2833 0AA6  
                       l2825 0A7E                         l2907 16D3                         l2667 07E0  
                       l2659 07C4                         l2675 14F6                         l2595 1630  
                       l2587 161D                         l2819 0A5E                         l2835 0AB4  
                       l2765 0954                         l2757 092C                         l2853 09B5  
                       l2679 150A                         l2791 0883                         l2767 0962  
                       l2785 0863                         l2955 149C                         l2867 09FD  
                       l2859 09D5                         l2893 16B3                         l2869 0A0B  
                       l2887 16A3                         l2879 1693                         l2799 08AB  
                       STR_1 10AE                         STR_2 10F2                         STR_3 110B  
                       STR_4 1112                         STR_5 10F8                         STR_6 10E0  
                       STR_7 10FB                         STR_8 1103                         STR_9 1078  
                       u3005 0C71                         u2225 17AC                         u3035 0CA3  
                       u3115 142C                         u2245 17C7                         u3045 0CAB  
                       u2325 1527                         u2415 14C7                         u2175 13BB  
                       u2265 17D6                         u2345 1533                         u2425 14D0  
                       u2185 13C2                         u2505 0EFB                         u3305 161E  
                       u2355 153F                         u3085 0CCB                         u3405 077C  
                       u2365 1549                         u3341 1753                         u3342 1754  
                       u2295 17EE                         u3095 0CD3                         u3343 1759  
                       u3344 175A                         u2545 0F22                         u3361 177A  
                       u3362 177B                         u3194 0B25                         u3435 07A8  
                       u2395 14B6                         u3363 1780                         u3195 0B23  
                       u3275 1604                         u4307 164E                         u3364 1781  
                       u2805 0D7C                         u3525 0720                         u4317 165C  
                       u3295 1615                         u4407 08B3                         u4327 167D  
                       u2745 0D52                         u3465 07C6                         u4417 1438  
                       u4337 0A33                         u2835 0D91                         u4507 12F6  
                       u4427 1512                         u2915 0BAD                         u4347 0AAE  
                       _PEIE 005E                         u4517 07F3                         u4437 0ADA  
                       u2925 0BBF                         u3565 08C6                         u4357 098A  
                       u4277 1567                         _INTE 005C                         _INTF 0059  
                       u4527 130E                         u2775 0D67                         u4447 0AE3  
                       u2935 0BE1                         u3655 081D                         u3575 08D3  
                       u4367 0A05                         u4287 158F                         u4537 080F  
                       u4457 0AED                         u2945 0BF2                         u3665 082A  
                       u4377 08E1                         u3745 0A18                         u4297 163D  
                       u4467 0AF7                         u2955 0C00                         u4387 095C  
                       u3835 096F                         u3755 0A25                         u4477 0B02  
                       u4397 0838                         u3845 097C                         u4487 0B15  
                       u4497 16E5                         u2995 0C5F                 __CFG_WRT$OFF 0000  
                       _main 03F7                 ___ftpack@arg 0020                         _mode 00E2  
               ___ftpack@exp 0023                         btemp 007E            ??_startUpSequence 0026  
              __CFG_BOREN$ON 0000                         ltemp 007E                         start 0012  
                       ttemp 007E                         wtemp 007E        displayPPM@ppmFraction 00B6  
               ___ftmul@cntr 003F                 ___ftmul@sign 0040                        ??_ISR 0077  
               ___fttol@exp1 005B                 ___fttol@lval 0057                        ?_main 0070  
            __end_of___ftadd 0E01                        STR_10 10CC                        STR_11 10C2  
                      STR_20 10C2                        STR_12 10D6                        STR_13 10CC  
                      STR_21 10D6                        STR_14 10C2                        STR_30 1088  
                      STR_22 101C                        STR_15 10D6                        STR_31 10E9  
                      STR_23 1035                        STR_16 10CC                        STR_32 1088  
                      STR_24 1097                        STR_17 10C2                        STR_33 1058  
                      STR_25 1047                __CFG_WDTE$OFF 0000                        STR_18 10D6  
                      STR_26 10A3                        STR_19 10CC                        STR_27 1047  
                      STR_28 1068              __end_of___awmod 1637                        STR_29 10B8  
            __end_of___ftdiv 0C25              __end_of___ftneg 12B2              __end_of___ftmul 0CF8  
            __end_of___fttol 07E9              __end_of___lwdiv 155A                        i1l308 13EE  
            __end_of___lwmod 14E1                        _PORTB 0006                        _PORTC 0007  
                      _PORTD 0008                        _TRISA 0085                        _TRISB 0086  
                      _TRISC 0087                        _TRISD 0088                 CalcMQ135@co2 00C1  
             i1___awmod@sign 0076              __end_of_readADC 144B              __end_of_initLCD 1687  
              ___awtoft@sign 002D              __end_of_dpowers 101C       displayDataDHT11@buffer 004A  
            __end_of_isdigit 12DF                        _hours 0065                ___ftpack@sign 0024  
                      pclath 000A                        ltemp0 007E                        ltemp1 0082  
                      ltemp2 0086                        ltemp3 0080           _activateHumidifier 12B2  
         __size_of_CalcMQ135 03A7                        ttemp0 007E                        ttemp1 0081  
                      ttemp2 0084                        ttemp3 0087                        ttemp4 007F  
                      status 0003                        wtemp0 007E                        wtemp1 0080  
                      wtemp2 0082                        wtemp3 0084                        wtemp4 0086  
                      wtemp5 0088                        wtemp6 007F              __end_of_sprintf 1000  
         __size_ofi1___awmod 004D        __end_of_setHoursStart 096A        __end_of_setMinutesEnd 0A13  
        ?_activateHumidifier 0070              __initialization 0015           displayPPM@ppmWhole 00B4  
               __end_of_main 0632       __size_of_initRegisters 0009                       ??_main 005D  
              ___fttol@sign1 0056                 ?_setHoursEnd 0070         ??_activateHumidifier 0020  
          ??_setMinutesStart 0048                       _ADCON0 001F                       _ADCON1 009F  
                     _ADRESH 001E                       _ADRESL 009E             __end_of___awtoft 1389  
           __end_of___ftpack 1800                       i1l2965 15A5                       i1l2991 15E1  
                     i1l2983 15CE                       i1l2977 15B2                       i1l2969 15AC  
                     i1l2979 15C0                       i1l2987 15D9                       _INTEDG 040E  
                     u416_25 15B5                       u418_25 15C6                       u419_25 15CF  
           __end_of_dataCTRL 07FC             __end_of_checkSEL 14AB                  instCTRL@CMD 0021  
             __CFG_PWRTE$OFF 0000                       ___ftge 1737                       ___wmul 13AE  
                  ??___ftadd 0047                    ??___awmod 0024                    ??___ftdiv 0047  
                  ??___ftneg 0031                    ??___ftmul 0037                    ??___fttol 0052  
                  ??___lwdiv 0024                    ??___lwmod 002C             __end_of_instCTRL 0818  
      displayTime@timeFormat 004C            ?_displayDataDHT11 0070              ___awmod@divisor 0020  
            ___awmod@counter 0025            __end_of_CalcMQ135 03F7         __size_of_displayTime 0024  
         ??_displayDataDHT11 0048             __end_of_runDHT11 151A        ___ftmul@f3_as_product 003C  
                  ??_readADC 0022                    ??_initLCD 0022            __end_ofi1___awmod 15E8  
           __end_of_runMQ135 1364                 __pdataCOMMON 007D                    ??_isdigit 0020  
                     saved_w 007E             __end_of_runClock 12FC                    ??_sprintf 0038  
              _initRegisters 129F      __end_of__initialization 004C                   ___ftadd@f1 0041  
                 ___ftadd@f2 0044                   ___ftge@ff1 0020                   ___ftge@ff2 0023  
                 ___ftdiv@f1 0044                   ___ftdiv@f2 0041                   ___ftdiv@f3 004C  
                 ___ftneg@f1 002E                   ___awtoft@c 0028                   ___ftmul@f1 0031  
                 ___ftmul@f2 0034                   ___fttol@f1 004E               __pcstackCOMMON 0070  
               __pidataBANK0 1282           __size_of_checkMode 0020           __size_of_checkTime 0058  
    __size_of_initInterrupts 0008             setCursor@address 0025           __size_of_handlePPM 002C  
        displayPPM@strBuffer 00A0              _startUpSequence 155A               ?_initRegisters 0070  
               sprintf@width 0044           __size_of_initDHT11 0007           __size_of_readDHT11 00B1  
                 __pbssBANK0 006B                   __pbssBANK1 00D7           __size_of_initPorts 000F  
                 __pmaintext 03F7                      ?___ftge 0020                      ?___wmul 0020  
         __size_of_setCursor 0028                   __pintentry 0004                    ?___awtoft 0028  
                  ?___ftpack 0020                    ?_dataCTRL 0070                    ?_checkSEL 0070  
                    _GO_DONE 00FA                   _displayPPM 0632         __size_of_setHoursEnd 00A9  
          __end_of_checkMode 131C            __end_of_checkTime 16DF                   __stringtab 1000  
                  ?_instCTRL 0070            __end_of_handlePPM 1477                    ?_runDHT11 0070  
                  ?_runMQ135 0070               CalcMQ135@ratio 00C4              _savedHoursStart 0068  
                  ?_runClock 0070              __size_of___ftge 005F                      ___ftadd 0CF8  
                    ___awmod 15E8                      ___ftdiv 0B6D                      ___ftneg 12A8  
            __size_of___wmul 0025                      ___ftmul 0C25                      ___fttol 075B  
                    ___lwdiv 151A                      ___lwmod 14AB            __end_of_initDHT11 128F  
            _savedMinutesEnd 0069              _setMinutesStart 0A13            __end_of_readDHT11 0B6D  
                 ??___awtoft 002B                   ??___ftpack 0025      __end_of_startUpSequence 159B  
                    __ptext1 155A                      __ptext2 1637                      __ptext3 1288  
                    __ptext4 0A13                      __ptext5 096A                      __ptext6 08C1  
                    __ptext7 0818                      __ptext8 15E8                      __ptext9 1340  
                 ??_dataCTRL 0020                      _readADC 1422                      _initLCD 1637  
               __size_of_ISR 0027            __end_of_initPorts 12CF                      _dpowers 1012  
                 ??_checkSEL 0022                      _isdigit 12CF             ___awmod@dividend 0022  
                    _ppmFlag 007C                      _minutes 006D              ??_initRegisters 0020  
              readDHT11@bits 0028                      _sprintf 0E01                      clrloop0 1298  
       end_of_initialization 004C            __end_of_setCursor 1422                   ??_instCTRL 0020  
                 ??_runDHT11 0059                   ??_runMQ135 0054                   ??_runClock 0020  
             _initInterrupts 128F                 __pstringtext 1000                   _printToLCD 1389  
                  _PORTBbits 0006                    _PORTCbits 0007       __size_of_setHoursStart 00A9  
                  _CalcMQ135 0050                    _TRISBbits 0086  __size_of_activateHumidifier 000E  
                ?_displayPPM 0070       __size_of_setMinutesEnd 00A9                    i1___awmod 159B  
  __size_of_displayDataDHT11 0058                  ___ftdiv@exp 004F                   main@buffer 00C7  
           displayPPM@bufPtr 00B8             CalcMQ135@RAW_ADC 0051      __end_of_setMinutesStart 0ABC  
     __end_of_initInterrupts 1297                  ___ftmul@exp 003B                ??_displayTime 0048  
             __end_of___ftge 1796               __end_of___wmul 13D3                __pidataCOMMON 07FC  
           ?_startUpSequence 0070                   readDHT11@i 002D                   readDHT11@j 002E  
        start_initialization 0015                   ?_CalcMQ135 0051                  __end_of_ISR 13FA  
                 ?i1___awmod 0070                 _lastKeyState 0066                _setHoursStart 08C1  
            ?_initInterrupts 0070                _savedHoursEnd 0067                _setMinutesEnd 096A  
           CalcMQ135@voltage 00A0                     ??___ftge 0026                     ??___wmul 0024  
        __size_of_displayPPM 0129                  __pdataBANK0 0065           i1___awmod@dividend 0072  
                ?_printToLCD 0022            __size_of___awtoft 0025            __size_of___ftpack 006A  
        __end_of_displayTime 1340                  __pbssCOMMON 007C                    ___latbits 0002  
              __pcstackBANK0 0020                __pcstackBANK1 00A0            __size_of_dataCTRL 0013  
        __end_of__stringdata 1118            __size_of_checkSEL 0034              setCursor@column 0022  
                sprintf@ccnt 003D                  sprintf@_val 003F            _savedMinutesStart 006A  
                sprintf@flag 0043                  sprintf@prec 003C                    _checkMode 12FC  
                  _checkTime 1687               ?_setHoursStart 0070                    _debugInfo 00E3  
          __size_of_instCTRL 0013             ___lwdiv@dividend 0022               ?_setMinutesEnd 0070  
           ?_setMinutesStart 0070                    _handlePPM 144B            __size_of_runDHT11 0039  
          __size_of_runMQ135 0024                     ?___ftadd 0041                     ?___awmod 0020  
                   ?___ftdiv 0041                     ?___ftneg 002E                     ?___ftmul 0031  
                   ?___fttol 004E                     ?___lwdiv 0020                     ?___lwmod 0028  
          __size_of_runClock 001D                     ?_readADC 0020                     ?_initLCD 0070  
                  _initDHT11 1288                    _readDHT11 0ABC                     ?_isdigit 0070  
              ??_setHoursEnd 0048                  ??_CalcMQ135 0054                  ??i1___awmod 0074  
                  _initPorts 12C0             ___lwdiv@quotient 0025                 setCursor@row 0024  
                   ?_sprintf 002E             _displayDataDHT11 16DF         readDHT11@temperature 0027  
          interrupt_function 0004               ___wmul@product 0024                   ?_checkMode 0070  
                 ?_checkTime 0070          __size_of_printToLCD 0025                    _setCursor 13FA  
                  clear_ram0 1297                  dataCTRL@DAT 0021                   ?_handlePPM 0070  
                _displayTime 131C                  __stringbase 1012                  __stringdata 101C  
          ___wmul@multiplier 0020                   ?_initDHT11 0070                   ?_readDHT11 0020  
               ??_displayPPM 005C                   ?_initPorts 0070        __end_of_initRegisters 12A8  
        __end_of_setHoursEnd 08C1              ??_setHoursStart 0048                   ?_setCursor 0022  
            ??_setMinutesEnd 0048              CalcMQ135@ratio2 00B5              CalcMQ135@ratio3 00B8  
            CalcMQ135@ratio4 00BB              CalcMQ135@ratio5 00BE              CalcMQ135@ratio6 00A3  
          i1___awmod@divisor 0070            i1___awmod@counter 0075           __end_of_displayPPM 075B  
           __size_of___ftadd 0109             __size_of___awmod 004F             __size_of___ftdiv 00B8  
           __size_of___ftneg 000A             __size_of___ftmul 00D3             __size_of___fttol 008E  
           __size_of___lwdiv 0040             __size_of___lwmod 0036               readADC@channel 0024  
                   ___awtoft 1364                     ___ftpack 1796           __end_of__stringtab 1012  
                _isdigit$528 0020                     _dataCTRL 07E9   __end_of_activateHumidifier 12C0  
                   _checkSEL 1477             __size_of_readADC 0029             __size_of_initLCD 0050  
           __size_of_isdigit 0010              ___lwdiv@divisor 0020              ___lwdiv@counter 0027  
                   __ptext10 1422                     __ptext11 0050                     __ptext20 128F  
                   __ptext12 0B6D                     __ptext21 144B                     __ptext13 14E1  
                   __ptext30 1389                     __ptext22 1737                     __ptext14 0ABC  
                   __ptext31 07E9                     __ptext23 131C                     __ptext15 16DF  
                   __ptext40 12FC                     __ptext32 075B                     __ptext24 0632  
                   __ptext16 13FA                     __ptext41 0805                     __ptext33 12A8  
                   __ptext25 0E01                     __ptext17 12DF                     __ptext42 12B2  
                   __ptext34 0C25                     __ptext26 12CF                     __ptext18 129F  
                   __ptext43 13D3                     __ptext35 0CF8                     __ptext27 13AE  
                   __ptext19 12C0                     __ptext44 159B                     __ptext36 1364  
                   __ptext28 14AB                     __ptext37 1796                     __ptext29 151A  
                   __ptext38 1687                     __ptext39 1477               readDHT11@F1225 00D7  
           __size_of_sprintf 01FF                     _keyValid 006C                     _lastMode 007D  
           ??_initInterrupts 0020                     _instCTRL 0805                __size_of_main 023B  
                ??_checkMode 0022                  ??_checkTime 0020                     _humidity 006E  
                   _runDHT11 14E1                     _runMQ135 1340                  ??_handlePPM 002C  
                   _runClock 12DF         checkSEL@lastRB1State 00DF                 ??_printToLCD 0024  
                ??_initDHT11 0020                  ??_readDHT11 0021                  _setHoursEnd 0818  
                   isdigit@c 0021                  ??_initPorts 0020     __size_of_startUpSequence 0041  
                   intlevel1 0000                    sprintf@ap 003B                    sprintf@sp 0047  
           ___lwmod@dividend 002A                  ??_setCursor 0023           __end_of_printToLCD 13AE  
                  stringcode 100A     __end_of_displayDataDHT11 1737            readDHT11@humidity 0020  
              _CalcMQ135$774 00A6                _CalcMQ135$775 00A9                _CalcMQ135$776 00AC  
              _CalcMQ135$777 00AF                _CalcMQ135$778 00B2                  _temperature 006F  
                   sprintf@c 0046                     sprintf@f 002E              ___lwmod@divisor 0028  
            ___lwmod@counter 002D                     stringtab 1000      checkSEL@currentRB1State 0024  
