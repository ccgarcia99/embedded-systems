

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon May 20 07:54:26 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,inline,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	intentry,global,class=CODE,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	dabs	1,0x7E,2
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123                           
   124                           	psect	idataBANK0
   125  12AE                     __pidataBANK0:	
   126                           
   127                           ;initializer for _hours
   128  12AE  3404               	retlw	4
   129                           
   130                           ;initializer for _lastKeyState
   131  12AF  34FF               	retlw	255
   132                           
   133                           ;initializer for _savedHoursEnd
   134  12B0  340A               	retlw	10
   135                           
   136                           ;initializer for _savedHoursStart
   137  12B1  3409               	retlw	9
   138                           
   139                           ;initializer for _savedMinutesEnd
   140  12B2  341E               	retlw	30
   141                           
   142                           ;initializer for _savedMinutesStart
   143  12B3  341E               	retlw	30
   144                           
   145                           	psect	idataBANK1
   146  07FE                     __pidataBANK1:	
   147                           
   148                           ;initializer for _lastMode
   149  07FE  34FF               	retlw	255
   150                           
   151                           	psect	stringtext
   152  1000                     __pstringtext:	
   153  1000                     stringtab:	
   154  1000                     __stringtab:	
   155                           
   156                           ;	String table - string pointers are 2 bytes each
   157  1000  1BFF               	btfsc	btemp+1,7
   158  1001  280A               	ljmp	stringcode
   159  1002  1383               	bcf	3,7
   160  1003  187F               	btfsc	btemp+1,0
   161  1004  1783               	bsf	3,7
   162  1005  0800               	movf	0,w
   163  1006  0A84               	incf	4,f
   164  1007  1903               	skipnz
   165  1008  0AFF               	incf	btemp+1,f
   166  1009  0008               	return
   167  100A                     stringcode:	
   168  100A  087F               	movf	btemp+1,w
   169  100B  397F               	andlw	127
   170  100C  008A               	movwf	10
   171  100D  0804               	movf	4,w
   172  100E  0A84               	incf	4,f
   173  100F  1903               	skipnz
   174  1010  0AFF               	incf	btemp+1,f
   175  1011  0082               	movwf	2
   176  1012                     __stringbase:	
   177  1012                     __end_of__stringtab:	
   178  1012                     _dpowers:	
   179  1012  3401               	retlw	1
   180  1013  3400               	retlw	0
   181  1014  340A               	retlw	10
   182  1015  3400               	retlw	0
   183  1016  3464               	retlw	100
   184  1017  3400               	retlw	0
   185  1018  34E8               	retlw	232
   186  1019  3403               	retlw	3
   187  101A  3410               	retlw	16
   188  101B  3427               	retlw	39
   189  101C                     __end_of_dpowers:	
   190  001F                     _ADCON0	set	31
   191  001E                     _ADRESH	set	30
   192  0006                     _PORTB	set	6
   193  0006                     _PORTBbits	set	6
   194  0007                     _PORTC	set	7
   195  0007                     _PORTCbits	set	7
   196  0008                     _PORTD	set	8
   197  005F                     _GIE	set	95
   198  00FA                     _GO_DONE	set	250
   199  005C                     _INTE	set	92
   200  0059                     _INTF	set	89
   201  005E                     _PEIE	set	94
   202  0031                     _RB1	set	49
   203  0038                     _RC0	set	56
   204  0039                     _RC1	set	57
   205  003A                     _RC2	set	58
   206  009F                     _ADCON1	set	159
   207  009E                     _ADRESL	set	158
   208  0085                     _TRISA	set	133
   209  0086                     _TRISB	set	134
   210  0086                     _TRISBbits	set	134
   211  0087                     _TRISC	set	135
   212  0088                     _TRISD	set	136
   213  040E                     _INTEDG	set	1038
   214  101C                     __stringdata:	
   215  101C                     STR_21:	
   216  101C  3452               	retlw	82	;'R'
   217  101D  3455               	retlw	85	;'U'
   218  101E  344E               	retlw	78	;'N'
   219  101F  343A               	retlw	58	;':'
   220  1020  3420               	retlw	32	;' '
   221  1021  3425               	retlw	37	;'%'
   222  1022  3430               	retlw	48	;'0'
   223  1023  3432               	retlw	50	;'2'
   224  1024  3464               	retlw	100	;'d'
   225  1025  343A               	retlw	58	;':'
   226  1026  3425               	retlw	37	;'%'
   227  1027  3430               	retlw	48	;'0'
   228  1028  3432               	retlw	50	;'2'
   229  1029  3464               	retlw	100	;'d'
   230  102A  342D               	retlw	45	;'-'
   231  102B  3425               	retlw	37	;'%'
   232  102C  3430               	retlw	48	;'0'
   233  102D  3432               	retlw	50	;'2'
   234  102E  3464               	retlw	100	;'d'
   235  102F  343A               	retlw	58	;':'
   236  1030  3425               	retlw	37	;'%'
   237  1031  3430               	retlw	48	;'0'
   238  1032  3432               	retlw	50	;'2'
   239  1033  3464               	retlw	100	;'d'
   240  1034  3400               	retlw	0
   241  1035                     STR_22:	
   242  1035  3453               	retlw	83	;'S'
   243  1036  3465               	retlw	101	;'e'
   244  1037  3474               	retlw	116	;'t'
   245  1038  3420               	retlw	32	;' '
   246  1039  3453               	retlw	83	;'S'
   247  103A  3443               	retlw	67	;'C'
   248  103B  3448               	retlw	72	;'H'
   249  103C  3445               	retlw	69	;'E'
   250  103D  3444               	retlw	68	;'D'
   251  103E  3420               	retlw	32	;' '
   252  103F  342D               	retlw	45	;'-'
   253  1040  3420               	retlw	32	;' '
   254  1041  3453               	retlw	83	;'S'
   255  1042  3454               	retlw	84	;'T'
   256  1043  3441               	retlw	65	;'A'
   257  1044  3452               	retlw	82	;'R'
   258  1045  3454               	retlw	84	;'T'
   259  1046  3400               	retlw	0
   260  1047                     STR_1:	
   261  1047  3454               	retlw	84	;'T'
   262  1048  344D               	retlw	77	;'M'
   263  1049  3450               	retlw	80	;'P'
   264  104A  343A               	retlw	58	;':'
   265  104B  3420               	retlw	32	;' '
   266  104C  3425               	retlw	37	;'%'
   267  104D  3464               	retlw	100	;'d'
   268  104E  3443               	retlw	67	;'C'
   269  104F  3420               	retlw	32	;' '
   270  1050  3448               	retlw	72	;'H'
   271  1051  344D               	retlw	77	;'M'
   272  1052  3444               	retlw	68	;'D'
   273  1053  3454               	retlw	84	;'T'
   274  1054  343A               	retlw	58	;':'
   275  1055  3420               	retlw	32	;' '
   276  1056  3425               	retlw	37	;'%'
   277  1057  3464               	retlw	100	;'d'
   278  1058  3400               	retlw	0
   279  1059                     STR_24:	
   280  1059  3453               	retlw	83	;'S'
   281  105A  3454               	retlw	84	;'T'
   282  105B  3441               	retlw	65	;'A'
   283  105C  3452               	retlw	82	;'R'
   284  105D  3454               	retlw	84	;'T'
   285  105E  343A               	retlw	58	;':'
   286  105F  3420               	retlw	32	;' '
   287  1060  3425               	retlw	37	;'%'
   288  1061  3430               	retlw	48	;'0'
   289  1062  3432               	retlw	50	;'2'
   290  1063  3464               	retlw	100	;'d'
   291  1064  343A               	retlw	58	;':'
   292  1065  3425               	retlw	37	;'%'
   293  1066  3430               	retlw	48	;'0'
   294  1067  3432               	retlw	50	;'2'
   295  1068  3464               	retlw	100	;'d'
   296  1069  3400               	retlw	0
   297  106A                     STR_32:	
   298  106A  3449               	retlw	73	;'I'
   299  106B  346E               	retlw	110	;'n'
   300  106C  3469               	retlw	105	;'i'
   301  106D  3474               	retlw	116	;'t'
   302  106E  3469               	retlw	105	;'i'
   303  106F  3461               	retlw	97	;'a'
   304  1070  346C               	retlw	108	;'l'
   305  1071  3469               	retlw	105	;'i'
   306  1072  347A               	retlw	122	;'z'
   307  1073  3469               	retlw	105	;'i'
   308  1074  346E               	retlw	110	;'n'
   309  1075  3467               	retlw	103	;'g'
   310  1076  342E               	retlw	46	;'.'
   311  1077  342E               	retlw	46	;'.'
   312  1078  342E               	retlw	46	;'.'
   313  1079  3400               	retlw	0
   314  107A                     STR_27:	
   315  107A  3453               	retlw	83	;'S'
   316  107B  3465               	retlw	101	;'e'
   317  107C  3474               	retlw	116	;'t'
   318  107D  3420               	retlw	32	;' '
   319  107E  3453               	retlw	83	;'S'
   320  107F  3443               	retlw	67	;'C'
   321  1080  3448               	retlw	72	;'H'
   322  1081  3445               	retlw	69	;'E'
   323  1082  3444               	retlw	68	;'D'
   324  1083  3420               	retlw	32	;' '
   325  1084  342D               	retlw	45	;'-'
   326  1085  3420               	retlw	32	;' '
   327  1086  3445               	retlw	69	;'E'
   328  1087  344E               	retlw	78	;'N'
   329  1088  3444               	retlw	68	;'D'
   330  1089  3400               	retlw	0
   331  108A                     STR_8:	
   332  108A  3454               	retlw	84	;'T'
   333  108B  3469               	retlw	105	;'i'
   334  108C  346D               	retlw	109	;'m'
   335  108D  3465               	retlw	101	;'e'
   336  108E  343A               	retlw	58	;':'
   337  108F  3420               	retlw	32	;' '
   338  1090  3425               	retlw	37	;'%'
   339  1091  3430               	retlw	48	;'0'
   340  1092  3432               	retlw	50	;'2'
   341  1093  3464               	retlw	100	;'d'
   342  1094  343A               	retlw	58	;':'
   343  1095  3425               	retlw	37	;'%'
   344  1096  3430               	retlw	48	;'0'
   345  1097  3432               	retlw	50	;'2'
   346  1098  3464               	retlw	100	;'d'
   347  1099  3400               	retlw	0
   348  109A                     STR_29:	
   349  109A  3445               	retlw	69	;'E'
   350  109B  344E               	retlw	78	;'N'
   351  109C  3444               	retlw	68	;'D'
   352  109D  343A               	retlw	58	;':'
   353  109E  3420               	retlw	32	;' '
   354  109F  3425               	retlw	37	;'%'
   355  10A0  3430               	retlw	48	;'0'
   356  10A1  3432               	retlw	50	;'2'
   357  10A2  3464               	retlw	100	;'d'
   358  10A3  343A               	retlw	58	;':'
   359  10A4  3425               	retlw	37	;'%'
   360  10A5  3430               	retlw	48	;'0'
   361  10A6  3432               	retlw	50	;'2'
   362  10A7  3464               	retlw	100	;'d'
   363  10A8  3400               	retlw	0
   364  10A9                     STR_23:	
   365  10A9  3453               	retlw	83	;'S'
   366  10AA  3454               	retlw	84	;'T'
   367  10AB  3441               	retlw	65	;'A'
   368  10AC  3452               	retlw	82	;'R'
   369  10AD  3454               	retlw	84	;'T'
   370  10AE  3420               	retlw	32	;' '
   371  10AF  3448               	retlw	72	;'H'
   372  10B0  344F               	retlw	79	;'O'
   373  10B1  3455               	retlw	85	;'U'
   374  10B2  3452               	retlw	82	;'R'
   375  10B3  3453               	retlw	83	;'S'
   376  10B4  3400               	retlw	0
   377  10B5                     STR_25:	
   378  10B5  3453               	retlw	83	;'S'
   379  10B6  3454               	retlw	84	;'T'
   380  10B7  3441               	retlw	65	;'A'
   381  10B8  3452               	retlw	82	;'R'
   382  10B9  3454               	retlw	84	;'T'
   383  10BA  3420               	retlw	32	;' '
   384  10BB  344D               	retlw	77	;'M'
   385  10BC  3449               	retlw	73	;'I'
   386  10BD  344E               	retlw	78	;'N'
   387  10BE  3453               	retlw	83	;'S'
   388  10BF  3400               	retlw	0
   389  10C0                     STR_28:	
   390  10C0  3445               	retlw	69	;'E'
   391  10C1  344E               	retlw	78	;'N'
   392  10C2  3444               	retlw	68	;'D'
   393  10C3  3420               	retlw	32	;' '
   394  10C4  3448               	retlw	72	;'H'
   395  10C5  344F               	retlw	79	;'O'
   396  10C6  3455               	retlw	85	;'U'
   397  10C7  3452               	retlw	82	;'R'
   398  10C8  3453               	retlw	83	;'S'
   399  10C9  3400               	retlw	0
   400  10CA                     STR_10:	
   401  10CA  3444               	retlw	68	;'D'
   402  10CB  3445               	retlw	69	;'E'
   403  10CC  3443               	retlw	67	;'C'
   404  10CD  343A               	retlw	58	;':'
   405  10CE  3420               	retlw	32	;' '
   406  10CF  3425               	retlw	37	;'%'
   407  10D0  3430               	retlw	48	;'0'
   408  10D1  3432               	retlw	50	;'2'
   409  10D2  3464               	retlw	100	;'d'
   410  10D3  3400               	retlw	0
   411  10D4                     STR_9:	
   412  10D4  3449               	retlw	73	;'I'
   413  10D5  344E               	retlw	78	;'N'
   414  10D6  3443               	retlw	67	;'C'
   415  10D7  343A               	retlw	58	;':'
   416  10D8  3420               	retlw	32	;' '
   417  10D9  3425               	retlw	37	;'%'
   418  10DA  3430               	retlw	48	;'0'
   419  10DB  3432               	retlw	50	;'2'
   420  10DC  3464               	retlw	100	;'d'
   421  10DD  3400               	retlw	0
   422  10DE                     STR_11:	
   423  10DE  3453               	retlw	83	;'S'
   424  10DF  3445               	retlw	69	;'E'
   425  10E0  3454               	retlw	84	;'T'
   426  10E1  343A               	retlw	58	;':'
   427  10E2  3420               	retlw	32	;' '
   428  10E3  3425               	retlw	37	;'%'
   429  10E4  3430               	retlw	48	;'0'
   430  10E5  3432               	retlw	50	;'2'
   431  10E6  3464               	retlw	100	;'d'
   432  10E7  3400               	retlw	0
   433  10E8                     STR_5:	
   434  10E8  3425               	retlw	37	;'%'
   435  10E9  3464               	retlw	100	;'d'
   436  10EA  3420               	retlw	32	;' '
   437  10EB  3470               	retlw	112	;'p'
   438  10EC  3470               	retlw	112	;'p'
   439  10ED  346D               	retlw	109	;'m'
   440  10EE  3420               	retlw	32	;' '
   441  10EF  3420               	retlw	32	;' '
   442  10F0  3400               	retlw	0
   443  10F1                     STR_30:	
   444  10F1  3445               	retlw	69	;'E'
   445  10F2  344E               	retlw	78	;'N'
   446  10F3  3444               	retlw	68	;'D'
   447  10F4  3420               	retlw	32	;' '
   448  10F5  344D               	retlw	77	;'M'
   449  10F6  3449               	retlw	73	;'I'
   450  10F7  344E               	retlw	78	;'N'
   451  10F8  3453               	retlw	83	;'S'
   452  10F9  3400               	retlw	0
   453  10FA                     STR_6:	
   454  10FA  3450               	retlw	80	;'P'
   455  10FB  3455               	retlw	85	;'U'
   456  10FC  3452               	retlw	82	;'R'
   457  10FD  3446               	retlw	70	;'F'
   458  10FE  3420               	retlw	32	;' '
   459  10FF  3448               	retlw	72	;'H'
   460  1100  3449               	retlw	73	;'I'
   461  1101  3400               	retlw	0
   462  1102                     STR_7:	
   463  1102  3450               	retlw	80	;'P'
   464  1103  3455               	retlw	85	;'U'
   465  1104  3452               	retlw	82	;'R'
   466  1105  3446               	retlw	70	;'F'
   467  1106  3420               	retlw	32	;' '
   468  1107  344C               	retlw	76	;'L'
   469  1108  344F               	retlw	79	;'O'
   470  1109  3400               	retlw	0
   471  110A                     STR_2:	
   472  110A  3445               	retlw	69	;'E'
   473  110B  3452               	retlw	82	;'R'
   474  110C  3452               	retlw	82	;'R'
   475  110D  344F               	retlw	79	;'O'
   476  110E  3452               	retlw	82	;'R'
   477  110F  3421               	retlw	33	;'!'
   478  1110  3400               	retlw	0
   479  1111                     STR_3:	
   480  1111  3443               	retlw	67	;'C'
   481  1112  344F               	retlw	79	;'O'
   482  1113  3432               	retlw	50	;'2'
   483  1114  343A               	retlw	58	;':'
   484  1115  3420               	retlw	32	;' '
   485  1116  3400               	retlw	0
   486  1117                     __end_of__stringdata:	
   487                           
   488                           ; #config settings
   489  0000                     
   490                           	psect	cinit
   491  0015                     start_initialization:	
   492  0015                     __initialization:	
   493                           
   494                           ; Clear objects allocated to BANK0
   495  0015  01EC               	clrf	__pbssBANK0& (0+127)
   496  0016  01ED               	clrf	(__pbssBANK0+1)& (0+127)
   497  0017  01EE               	clrf	(__pbssBANK0+2)& (0+127)
   498  0018  01EF               	clrf	(__pbssBANK0+3)& (0+127)
   499                           
   500                           ; Clear objects allocated to BANK1
   501  0019  1383               	bcf	3,7	;select IRP bank0
   502  001A  30D7               	movlw	low __pbssBANK1
   503  001B  0084               	movwf	4
   504  001C  30EF               	movlw	low (__pbssBANK1+24)
   505  001D  160A  118A  22C3  120A  118A  	fcall	clear_ram0
   506                           
   507                           ; Initialize objects allocated to BANK1
   508  0022  1683               	bsf	3,5	;RP0=1, select bank1
   509  0023  1303               	bcf	3,6	;RP1=0, select bank1
   510  0024  120A  118A  27FE  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   511  0029  00EF               	movwf	__pdataBANK1& (0+127)
   512                           
   513                           ; Initialize objects allocated to BANK0
   514  002A  1283               	bcf	3,5	;RP0=0, select bank0
   515  002B  1303               	bcf	3,6	;RP1=0, select bank0
   516  002C  160A  118A  22AE  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   517  0031  00E6               	movwf	__pdataBANK0& (0+127)
   518  0032  160A  118A  22AF  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   519  0037  00E7               	movwf	(__pdataBANK0+1)& (0+127)
   520  0038  160A  118A  22B0  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   521  003D  00E8               	movwf	(__pdataBANK0+2)& (0+127)
   522  003E  160A  118A  22B1  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   523  0043  00E9               	movwf	(__pdataBANK0+3)& (0+127)
   524  0044  160A  118A  22B2  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   525  0049  00EA               	movwf	(__pdataBANK0+4)& (0+127)
   526  004A  160A  118A  22B3   	fcall	__pidataBANK0+5	;fetch initializer
   527  004D  00EB               	movwf	(__pdataBANK0+5)& (0+127)
   528  004E                     end_of_initialization:	
   529                           ;End of C runtime variable initialization code
   530                           
   531  004E                     __end_of__initialization:	
   532  004E  0183               	clrf	3
   533  004F  120A  118A  2BF9   	ljmp	_main	;jump to C main() function
   534                           
   535                           	psect	bssBANK0
   536  006C                     __pbssBANK0:	
   537  006C                     _key:	
   538  006C                     	ds	1
   539  006D                     _keyValid:	
   540  006D                     	ds	1
   541  006E                     _minutes:	
   542  006E                     	ds	1
   543  006F                     _temperature:	
   544  006F                     	ds	1
   545                           
   546                           	psect	dataBANK0
   547  0066                     __pdataBANK0:	
   548  0066                     _hours:	
   549  0066                     	ds	1
   550  0067                     _lastKeyState:	
   551  0067                     	ds	1
   552  0068                     _savedHoursEnd:	
   553  0068                     	ds	1
   554  0069                     _savedHoursStart:	
   555  0069                     	ds	1
   556  006A                     _savedMinutesEnd:	
   557  006A                     	ds	1
   558  006B                     _savedMinutesStart:	
   559  006B                     	ds	1
   560                           
   561                           	psect	bssBANK1
   562  00D7                     __pbssBANK1:	
   563  00D7                     readDHT11@F1225:	
   564  00D7                     	ds	5
   565  00DC                     _PPM:	
   566  00DC                     	ds	3
   567  00DF                     checkSEL@lastRB1State:	
   568  00DF                     	ds	2
   569  00E1                     _SEL:	
   570  00E1                     	ds	1
   571  00E2                     _mode:	
   572  00E2                     	ds	1
   573  00E3                     _ppmFlag:	
   574  00E3                     	ds	1
   575  00E4                     _debugInfo:	
   576  00E4                     	ds	10
   577  00EE                     _humidity:	
   578  00EE                     	ds	1
   579                           
   580                           	psect	dataBANK1
   581  00EF                     __pdataBANK1:	
   582  00EF                     _lastMode:	
   583  00EF                     	ds	1
   584                           
   585                           	psect	clrtext
   586  12C3                     clear_ram0:	
   587                           ;	Called with FSR containing the base address, and
   588                           ;	W with the last address+1
   589                           
   590  12C3  0064               	clrwdt	;clear the watchdog before getting into this loop
   591  12C4                     clrloop0:	
   592  12C4  0180               	clrf	0	;clear RAM location pointed to by FSR
   593  12C5  0A84               	incf	4,f	;increment pointer
   594  12C6  0604               	xorwf	4,w	;XOR with final address
   595  12C7  1903               	btfsc	3,2	;have we reached the end yet?
   596  12C8  3400               	retlw	0	;all done for this memory range, return
   597  12C9  0604               	xorwf	4,w	;XOR again to restore value
   598  12CA  2AC4               	goto	clrloop0	;do the next byte
   599                           
   600                           	psect	cstackBANK1
   601  00A0                     __pcstackBANK1:	
   602  00A0                     CalcMQ135@voltage:	
   603  00A0                     displayPPM@strBuffer:	
   604                           ; 3 bytes @ 0x0
   605                           
   606                           
   607                           ; 20 bytes @ 0x0
   608  00A0                     	ds	3
   609  00A3                     CalcMQ135@ratio6:	
   610                           
   611                           ; 3 bytes @ 0x3
   612  00A3                     	ds	3
   613  00A6                     _CalcMQ135$773:	
   614                           
   615                           ; 3 bytes @ 0x6
   616  00A6                     	ds	3
   617  00A9                     _CalcMQ135$774:	
   618                           
   619                           ; 3 bytes @ 0x9
   620  00A9                     	ds	3
   621  00AC                     _CalcMQ135$775:	
   622                           
   623                           ; 3 bytes @ 0xC
   624  00AC                     	ds	3
   625  00AF                     _CalcMQ135$776:	
   626                           
   627                           ; 3 bytes @ 0xF
   628  00AF                     	ds	3
   629  00B2                     _CalcMQ135$777:	
   630                           
   631                           ; 3 bytes @ 0x12
   632  00B2                     	ds	2
   633  00B4                     displayPPM@ppmWhole:	
   634                           
   635                           ; 2 bytes @ 0x14
   636  00B4                     	ds	1
   637  00B5                     CalcMQ135@ratio2:	
   638                           
   639                           ; 3 bytes @ 0x15
   640  00B5                     	ds	1
   641  00B6                     displayPPM@ppmFraction:	
   642                           
   643                           ; 2 bytes @ 0x16
   644  00B6                     	ds	2
   645  00B8                     displayPPM@bufPtr:	
   646  00B8                     CalcMQ135@ratio3:	
   647                           ; 1 bytes @ 0x18
   648                           
   649                           
   650                           ; 3 bytes @ 0x18
   651  00B8                     	ds	3
   652  00BB                     CalcMQ135@ratio4:	
   653                           
   654                           ; 3 bytes @ 0x1B
   655  00BB                     	ds	3
   656  00BE                     CalcMQ135@ratio5:	
   657                           
   658                           ; 3 bytes @ 0x1E
   659  00BE                     	ds	3
   660  00C1                     CalcMQ135@co2:	
   661                           
   662                           ; 3 bytes @ 0x21
   663  00C1                     	ds	3
   664  00C4                     CalcMQ135@ratio:	
   665                           
   666                           ; 3 bytes @ 0x24
   667  00C4                     	ds	3
   668  00C7                     main@buffer:	
   669                           
   670                           ; 16 bytes @ 0x27
   671  00C7                     	ds	16
   672                           
   673                           	psect	cstackCOMMON
   674  0070                     __pcstackCOMMON:	
   675  0070                     ?_initPorts:	
   676  0070                     ?_initRegisters:	
   677                           ; 0 bytes @ 0x0
   678                           
   679  0070                     ?_initInterrupts:	
   680                           ; 0 bytes @ 0x0
   681                           
   682  0070                     ?_startUpSequence:	
   683                           ; 0 bytes @ 0x0
   684                           
   685  0070                     ?_checkMode:	
   686                           ; 0 bytes @ 0x0
   687                           
   688  0070                     ?_checkSEL:	
   689                           ; 0 bytes @ 0x0
   690                           
   691  0070                     ?_isdigit:	
   692                           ; 0 bytes @ 0x0
   693                           
   694  0070                     ?_instCTRL:	
   695                           ; 1 bit 
   696                           
   697  0070                     ?_dataCTRL:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ?_initLCD:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_initDHT11:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_displayDataDHT11:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_runDHT11:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_activateHumidifier:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_runMQ135:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?_displayPPM:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?_runClock:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?_displayTime:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0070                     ?_setHoursStart:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ?_setHoursEnd:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     ?_setMinutesStart:	
   734                           ; 0 bytes @ 0x0
   735                           
   736  0070                     ?_setMinutesEnd:	
   737                           ; 0 bytes @ 0x0
   738                           
   739  0070                     ?_checkTime:	
   740                           ; 0 bytes @ 0x0
   741                           
   742  0070                     ?_main:	
   743                           ; 0 bytes @ 0x0
   744                           
   745  0070                     ?_ISR:	
   746                           ; 0 bytes @ 0x0
   747                           
   748  0070                     ?_handlePPM:	
   749                           ; 0 bytes @ 0x0
   750                           
   751  0070                     ?i1___awmod:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     i1___awmod@divisor:	
   755                           ; 2 bytes @ 0x0
   756                           
   757                           
   758                           ; 2 bytes @ 0x0
   759  0070                     	ds	2
   760  0072                     i1___awmod@dividend:	
   761                           
   762                           ; 2 bytes @ 0x2
   763  0072                     	ds	2
   764  0074                     ??i1___awmod:	
   765                           
   766                           ; 0 bytes @ 0x4
   767  0074                     	ds	1
   768  0075                     i1___awmod@counter:	
   769                           
   770                           ; 1 bytes @ 0x5
   771  0075                     	ds	1
   772  0076                     i1___awmod@sign:	
   773                           
   774                           ; 1 bytes @ 0x6
   775  0076                     	ds	1
   776  0077                     ??_ISR:	
   777                           
   778                           ; 0 bytes @ 0x7
   779  0077                     	ds	7
   780                           
   781                           	psect	cstackBANK0
   782  0020                     __pcstackBANK0:	
   783  0020                     ??_initPorts:	
   784  0020                     ??_initRegisters:	
   785                           ; 0 bytes @ 0x0
   786                           
   787  0020                     ??_initInterrupts:	
   788                           ; 0 bytes @ 0x0
   789                           
   790  0020                     ??_isdigit:	
   791                           ; 0 bytes @ 0x0
   792                           
   793  0020                     ??_instCTRL:	
   794                           ; 0 bytes @ 0x0
   795                           
   796  0020                     ??_dataCTRL:	
   797                           ; 0 bytes @ 0x0
   798                           
   799  0020                     ??_initDHT11:	
   800                           ; 0 bytes @ 0x0
   801                           
   802  0020                     ??_activateHumidifier:	
   803                           ; 0 bytes @ 0x0
   804                           
   805  0020                     ??_runClock:	
   806                           ; 0 bytes @ 0x0
   807                           
   808  0020                     ??_checkTime:	
   809                           ; 0 bytes @ 0x0
   810                           
   811  0020                     ?___ftge:	
   812                           ; 0 bytes @ 0x0
   813                           
   814  0020                     ?_readDHT11:	
   815                           ; 1 bit 
   816                           
   817  0020                     ?_readADC:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0020                     ?___wmul:	
   821                           ; 2 bytes @ 0x0
   822                           
   823  0020                     ?___awmod:	
   824                           ; 2 bytes @ 0x0
   825                           
   826  0020                     ?___lwdiv:	
   827                           ; 2 bytes @ 0x0
   828                           
   829  0020                     ?___ftpack:	
   830                           ; 2 bytes @ 0x0
   831                           
   832  0020                     readDHT11@humidity:	
   833                           ; 3 bytes @ 0x0
   834                           
   835  0020                     _isdigit$527:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0020                     ___wmul@multiplier:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0020                     ___awmod@divisor:	
   842                           ; 2 bytes @ 0x0
   843                           
   844  0020                     ___lwdiv@divisor:	
   845                           ; 2 bytes @ 0x0
   846                           
   847  0020                     ___ftpack@arg:	
   848                           ; 2 bytes @ 0x0
   849                           
   850  0020                     ___ftge@ff1:	
   851                           ; 3 bytes @ 0x0
   852                           
   853                           
   854                           ; 3 bytes @ 0x0
   855  0020                     	ds	1
   856  0021                     ??_readDHT11:	
   857  0021                     instCTRL@CMD:	
   858                           ; 0 bytes @ 0x1
   859                           
   860  0021                     dataCTRL@DAT:	
   861                           ; 1 bytes @ 0x1
   862                           
   863  0021                     isdigit@c:	
   864                           ; 1 bytes @ 0x1
   865                           
   866                           
   867                           ; 1 bytes @ 0x1
   868  0021                     	ds	1
   869  0022                     ??_checkMode:	
   870  0022                     ??_checkSEL:	
   871                           ; 0 bytes @ 0x2
   872                           
   873  0022                     ??_readADC:	
   874                           ; 0 bytes @ 0x2
   875                           
   876  0022                     ??_initLCD:	
   877                           ; 0 bytes @ 0x2
   878                           
   879  0022                     ?_setCursor:	
   880                           ; 0 bytes @ 0x2
   881                           
   882  0022                     ?_printToLCD:	
   883                           ; 0 bytes @ 0x2
   884                           
   885  0022                     setCursor@column:	
   886                           ; 0 bytes @ 0x2
   887                           
   888  0022                     printToLCD@str:	
   889                           ; 1 bytes @ 0x2
   890                           
   891  0022                     ___wmul@multiplicand:	
   892                           ; 2 bytes @ 0x2
   893                           
   894  0022                     ___awmod@dividend:	
   895                           ; 2 bytes @ 0x2
   896                           
   897  0022                     ___lwdiv@dividend:	
   898                           ; 2 bytes @ 0x2
   899                           
   900                           
   901                           ; 2 bytes @ 0x2
   902  0022                     	ds	1
   903  0023                     ??_setCursor:	
   904  0023                     ___ftpack@exp:	
   905                           ; 0 bytes @ 0x3
   906                           
   907  0023                     ___ftge@ff2:	
   908                           ; 1 bytes @ 0x3
   909                           
   910                           
   911                           ; 3 bytes @ 0x3
   912  0023                     	ds	1
   913  0024                     ??_printToLCD:	
   914  0024                     ??___wmul:	
   915                           ; 0 bytes @ 0x4
   916                           
   917  0024                     ??___awmod:	
   918                           ; 0 bytes @ 0x4
   919                           
   920  0024                     ??___lwdiv:	
   921                           ; 0 bytes @ 0x4
   922                           
   923  0024                     readADC@channel:	
   924                           ; 0 bytes @ 0x4
   925                           
   926  0024                     setCursor@row:	
   927                           ; 1 bytes @ 0x4
   928                           
   929  0024                     ___ftpack@sign:	
   930                           ; 1 bytes @ 0x4
   931                           
   932  0024                     checkSEL@currentRB1State:	
   933                           ; 1 bytes @ 0x4
   934                           
   935  0024                     ___wmul@product:	
   936                           ; 2 bytes @ 0x4
   937                           
   938                           
   939                           ; 2 bytes @ 0x4
   940  0024                     	ds	1
   941  0025                     ??___ftpack:	
   942  0025                     setCursor@address:	
   943                           ; 0 bytes @ 0x5
   944                           
   945  0025                     ___awmod@counter:	
   946                           ; 1 bytes @ 0x5
   947                           
   948  0025                     ___lwdiv@quotient:	
   949                           ; 1 bytes @ 0x5
   950                           
   951                           
   952                           ; 2 bytes @ 0x5
   953  0025                     	ds	1
   954  0026                     ??_startUpSequence:	
   955  0026                     ??___ftge:	
   956                           ; 0 bytes @ 0x6
   957                           
   958  0026                     ___awmod@sign:	
   959                           ; 0 bytes @ 0x6
   960                           
   961                           
   962                           ; 1 bytes @ 0x6
   963  0026                     	ds	1
   964  0027                     readDHT11@temperature:	
   965  0027                     ___lwdiv@counter:	
   966                           ; 1 bytes @ 0x7
   967                           
   968                           
   969                           ; 1 bytes @ 0x7
   970  0027                     	ds	1
   971  0028                     ?___lwmod:	
   972  0028                     ?___awtoft:	
   973                           ; 2 bytes @ 0x8
   974                           
   975  0028                     ___awtoft@c:	
   976                           ; 3 bytes @ 0x8
   977                           
   978  0028                     ___lwmod@divisor:	
   979                           ; 2 bytes @ 0x8
   980                           
   981  0028                     readDHT11@bits:	
   982                           ; 2 bytes @ 0x8
   983                           
   984                           
   985                           ; 5 bytes @ 0x8
   986  0028                     	ds	2
   987  002A                     ___lwmod@dividend:	
   988                           
   989                           ; 2 bytes @ 0xA
   990  002A                     	ds	1
   991  002B                     ??___awtoft:	
   992                           
   993                           ; 0 bytes @ 0xB
   994  002B                     	ds	1
   995  002C                     ??_handlePPM:	
   996  002C                     ??___lwmod:	
   997                           ; 0 bytes @ 0xC
   998                           
   999                           
  1000                           ; 0 bytes @ 0xC
  1001  002C                     	ds	1
  1002  002D                     readDHT11@i:	
  1003  002D                     ___awtoft@sign:	
  1004                           ; 1 bytes @ 0xD
  1005                           
  1006  002D                     ___lwmod@counter:	
  1007                           ; 1 bytes @ 0xD
  1008                           
  1009                           
  1010                           ; 1 bytes @ 0xD
  1011  002D                     	ds	1
  1012  002E                     ?_sprintf:	
  1013  002E                     ?___ftneg:	
  1014                           ; 2 bytes @ 0xE
  1015                           
  1016  002E                     readDHT11@j:	
  1017                           ; 3 bytes @ 0xE
  1018                           
  1019  002E                     sprintf@f:	
  1020                           ; 1 bytes @ 0xE
  1021                           
  1022  002E                     ___ftneg@f1:	
  1023                           ; 2 bytes @ 0xE
  1024                           
  1025                           
  1026                           ; 3 bytes @ 0xE
  1027  002E                     	ds	3
  1028  0031                     ??___ftneg:	
  1029  0031                     ?___ftmul:	
  1030                           ; 0 bytes @ 0x11
  1031                           
  1032  0031                     ___ftmul@f1:	
  1033                           ; 3 bytes @ 0x11
  1034                           
  1035                           
  1036                           ; 3 bytes @ 0x11
  1037  0031                     	ds	3
  1038  0034                     ___ftmul@f2:	
  1039                           
  1040                           ; 3 bytes @ 0x14
  1041  0034                     	ds	3
  1042  0037                     ??___ftmul:	
  1043                           
  1044                           ; 0 bytes @ 0x17
  1045  0037                     	ds	1
  1046  0038                     ??_sprintf:	
  1047                           
  1048                           ; 0 bytes @ 0x18
  1049  0038                     	ds	3
  1050  003B                     sprintf@ap:	
  1051  003B                     ___ftmul@exp:	
  1052                           ; 1 bytes @ 0x1B
  1053                           
  1054                           
  1055                           ; 1 bytes @ 0x1B
  1056  003B                     	ds	1
  1057  003C                     sprintf@prec:	
  1058  003C                     ___ftmul@f3_as_product:	
  1059                           ; 1 bytes @ 0x1C
  1060                           
  1061                           
  1062                           ; 3 bytes @ 0x1C
  1063  003C                     	ds	1
  1064  003D                     sprintf@ccnt:	
  1065                           
  1066                           ; 2 bytes @ 0x1D
  1067  003D                     	ds	2
  1068  003F                     ___ftmul@cntr:	
  1069  003F                     sprintf@_val:	
  1070                           ; 1 bytes @ 0x1F
  1071                           
  1072                           
  1073                           ; 4 bytes @ 0x1F
  1074  003F                     	ds	1
  1075  0040                     ___ftmul@sign:	
  1076                           
  1077                           ; 1 bytes @ 0x20
  1078  0040                     	ds	1
  1079  0041                     ?___ftadd:	
  1080  0041                     ?___ftdiv:	
  1081                           ; 3 bytes @ 0x21
  1082                           
  1083  0041                     ___ftadd@f1:	
  1084                           ; 3 bytes @ 0x21
  1085                           
  1086  0041                     ___ftdiv@f2:	
  1087                           ; 3 bytes @ 0x21
  1088                           
  1089                           
  1090                           ; 3 bytes @ 0x21
  1091  0041                     	ds	2
  1092  0043                     sprintf@flag:	
  1093                           
  1094                           ; 1 bytes @ 0x23
  1095  0043                     	ds	1
  1096  0044                     sprintf@width:	
  1097  0044                     ___ftadd@f2:	
  1098                           ; 2 bytes @ 0x24
  1099                           
  1100  0044                     ___ftdiv@f1:	
  1101                           ; 3 bytes @ 0x24
  1102                           
  1103                           
  1104                           ; 3 bytes @ 0x24
  1105  0044                     	ds	2
  1106  0046                     sprintf@c:	
  1107                           
  1108                           ; 1 bytes @ 0x26
  1109  0046                     	ds	1
  1110  0047                     ??___ftadd:	
  1111  0047                     ??___ftdiv:	
  1112                           ; 0 bytes @ 0x27
  1113                           
  1114  0047                     sprintf@sp:	
  1115                           ; 0 bytes @ 0x27
  1116                           
  1117                           
  1118                           ; 1 bytes @ 0x27
  1119  0047                     	ds	1
  1120  0048                     ??_displayDataDHT11:	
  1121  0048                     ??_displayTime:	
  1122                           ; 0 bytes @ 0x28
  1123                           
  1124  0048                     ??_setHoursStart:	
  1125                           ; 0 bytes @ 0x28
  1126                           
  1127  0048                     ??_setHoursEnd:	
  1128                           ; 0 bytes @ 0x28
  1129                           
  1130  0048                     ??_setMinutesStart:	
  1131                           ; 0 bytes @ 0x28
  1132                           
  1133  0048                     ??_setMinutesEnd:	
  1134                           ; 0 bytes @ 0x28
  1135                           
  1136                           
  1137                           ; 0 bytes @ 0x28
  1138  0048                     	ds	3
  1139  004B                     ___ftadd@sign:	
  1140  004B                     ___ftdiv@cntr:	
  1141                           ; 1 bytes @ 0x2B
  1142                           
  1143                           
  1144                           ; 1 bytes @ 0x2B
  1145  004B                     	ds	1
  1146  004C                     ___ftadd@exp2:	
  1147  004C                     ___ftdiv@f3:	
  1148                           ; 1 bytes @ 0x2C
  1149                           
  1150  004C                     displayDataDHT11@buffer:	
  1151                           ; 3 bytes @ 0x2C
  1152                           
  1153  004C                     displayTime@timeFormat:	
  1154                           ; 15 bytes @ 0x2C
  1155                           
  1156                           
  1157                           ; 16 bytes @ 0x2C
  1158  004C                     	ds	1
  1159  004D                     ___ftadd@exp1:	
  1160                           
  1161                           ; 1 bytes @ 0x2D
  1162  004D                     	ds	1
  1163  004E                     ?___fttol:	
  1164  004E                     ___fttol@f1:	
  1165                           ; 4 bytes @ 0x2E
  1166                           
  1167                           
  1168                           ; 3 bytes @ 0x2E
  1169  004E                     	ds	1
  1170  004F                     ___ftdiv@exp:	
  1171                           
  1172                           ; 1 bytes @ 0x2F
  1173  004F                     	ds	1
  1174  0050                     ___ftdiv@sign:	
  1175                           
  1176                           ; 1 bytes @ 0x30
  1177  0050                     	ds	1
  1178  0051                     ?_CalcMQ135:	
  1179  0051                     CalcMQ135@RAW_ADC:	
  1180                           ; 3 bytes @ 0x31
  1181                           
  1182                           
  1183                           ; 2 bytes @ 0x31
  1184  0051                     	ds	1
  1185  0052                     ??___fttol:	
  1186                           
  1187                           ; 0 bytes @ 0x32
  1188  0052                     	ds	2
  1189  0054                     ??_CalcMQ135:	
  1190  0054                     ??_runMQ135:	
  1191                           ; 0 bytes @ 0x34
  1192                           
  1193                           
  1194                           ; 0 bytes @ 0x34
  1195  0054                     	ds	2
  1196  0056                     ___fttol@sign1:	
  1197                           
  1198                           ; 1 bytes @ 0x36
  1199  0056                     	ds	1
  1200  0057                     ___fttol@lval:	
  1201                           
  1202                           ; 4 bytes @ 0x37
  1203  0057                     	ds	4
  1204  005B                     ??_runDHT11:	
  1205  005B                     ___fttol@exp1:	
  1206                           ; 0 bytes @ 0x3B
  1207                           
  1208                           
  1209                           ; 1 bytes @ 0x3B
  1210  005B                     	ds	1
  1211  005C                     ??_displayPPM:	
  1212                           
  1213                           ; 0 bytes @ 0x3C
  1214  005C                     	ds	2
  1215  005E                     ??_main:	
  1216                           
  1217                           ; 0 bytes @ 0x3E
  1218  005E                     	ds	8
  1219                           
  1220                           	psect	maintext
  1221  03F9                     __pmaintext:	
  1222 ;;
  1223 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
  1224 ;;
  1225 ;; *************** function _main *****************
  1226 ;; Defined at:
  1227 ;;		line 29 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  buffer         16   39[BANK1 ] unsigned char [16]
  1232 ;; Return value:  Size  Location     Type
  1233 ;;		None               void
  1234 ;; Registers used:
  1235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 17F/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1241 ;;      Params:         0       0       0       0       0
  1242 ;;      Locals:         0       0      16       0       0
  1243 ;;      Temps:          0       8       0       0       0
  1244 ;;      Totals:         0       8      16       0       0
  1245 ;;Total ram usage:       24 bytes
  1246 ;; Hardware stack levels required when called:    6
  1247 ;; This function calls:
  1248 ;;		_activateHumidifier
  1249 ;;		_checkMode
  1250 ;;		_checkSEL
  1251 ;;		_checkTime
  1252 ;;		_displayDataDHT11
  1253 ;;		_displayPPM
  1254 ;;		_displayTime
  1255 ;;		_handlePPM
  1256 ;;		_initInterrupts
  1257 ;;		_initPorts
  1258 ;;		_initRegisters
  1259 ;;		_instCTRL
  1260 ;;		_printToLCD
  1261 ;;		_runClock
  1262 ;;		_runDHT11
  1263 ;;		_runMQ135
  1264 ;;		_setCursor
  1265 ;;		_setHoursEnd
  1266 ;;		_setHoursStart
  1267 ;;		_setMinutesEnd
  1268 ;;		_setMinutesStart
  1269 ;;		_sprintf
  1270 ;;		_startUpSequence
  1271 ;; This function is called by:
  1272 ;;		Startup code after reset
  1273 ;; This function uses a non-reentrant model
  1274 ;;
  1275                           
  1276                           
  1277                           ;psect for function _main
  1278  03F9                     _main:	
  1279                           
  1280                           ;main.c: 31: char buffer[16];
  1281                           ;main.c: 33: initPorts();
  1282                           
  1283                           ;incstack = 0
  1284                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1285  03F9  160A  118A  22D4  120A  118A  	fcall	_initPorts
  1286                           
  1287                           ;main.c: 35: initRegisters();
  1288  03FE  160A  118A  22CB  120A  118A  	fcall	_initRegisters
  1289                           
  1290                           ;main.c: 37: initInterrupts();
  1291  0403  160A  118A  22BB  120A  118A  	fcall	_initInterrupts
  1292                           
  1293                           ;main.c: 39: startUpSequence();
  1294  0408  120A  158A  2001  120A  118A  	fcall	_startUpSequence
  1295                           
  1296                           ;main.c: 60: switch (mode)
  1297  040D  2DD4               	goto	l2986
  1298  040E                     l3012:	
  1299                           ;main.c: 61: {
  1300                           ;main.c: 62: case STAT:
  1301                           
  1302                           
  1303                           ;main.c: 63: displayDataDHT11();
  1304  040E  160A  118A  2541  120A  118A  	fcall	_displayDataDHT11
  1305                           
  1306                           ;main.c: 64: instCTRL(0xC0);
  1307  0413  30C0               	movlw	192
  1308  0414  160A  118A  2304  120A  118A  	fcall	_instCTRL
  1309                           
  1310                           ;main.c: 65: displayPPM();
  1311  0419  120A  118A  2613  120A  118A  	fcall	_displayPPM
  1312                           
  1313                           ;main.c: 66: instCTRL(0x94);
  1314  041E  3094               	movlw	148
  1315  041F  160A  118A  2304  120A  118A  	fcall	_instCTRL
  1316                           
  1317                           ;main.c: 67: displayTime();
  1318  0424  160A  118A  2369  120A  118A  	fcall	_displayTime
  1319                           
  1320                           ;main.c: 68: instCTRL(0xD4);
  1321  0429  30D4               	movlw	212
  1322  042A  160A  118A  2304  120A  118A  	fcall	_instCTRL
  1323                           
  1324                           ;main.c: 69: sprintf(buffer, "RUN: %02d:%02d-%02d:%02d", savedHoursStart, savedMinutesSt
      +                          art, savedHoursEnd, savedMinutesEnd);
  1325  042F  301C               	movlw	low (STR_21| (0+32768))
  1326  0430  1283               	bcf	3,5	;RP0=0, select bank0
  1327  0431  1303               	bcf	3,6	;RP1=0, select bank0
  1328  0432  00AE               	movwf	sprintf@f
  1329  0433  3090               	movlw	high (STR_21| (0+32768))
  1330  0434  00AF               	movwf	sprintf@f+1
  1331  0435  0869               	movf	_savedHoursStart,w	;volatile
  1332  0436  00DE               	movwf	??_main
  1333  0437  01DF               	clrf	??_main+1
  1334  0438  085E               	movf	??_main,w
  1335  0439  00B0               	movwf	?_sprintf+2
  1336  043A  085F               	movf	??_main+1,w
  1337  043B  00B1               	movwf	?_sprintf+3
  1338  043C  086B               	movf	_savedMinutesStart,w	;volatile
  1339  043D  00E0               	movwf	??_main+2
  1340  043E  01E1               	clrf	??_main+3
  1341  043F  0860               	movf	??_main+2,w
  1342  0440  00B2               	movwf	?_sprintf+4
  1343  0441  0861               	movf	??_main+3,w
  1344  0442  00B3               	movwf	?_sprintf+5
  1345  0443  0868               	movf	_savedHoursEnd,w	;volatile
  1346  0444  00E2               	movwf	??_main+4
  1347  0445  01E3               	clrf	??_main+5
  1348  0446  0862               	movf	??_main+4,w
  1349  0447  00B4               	movwf	?_sprintf+6
  1350  0448  0863               	movf	??_main+5,w
  1351  0449  00B5               	movwf	?_sprintf+7
  1352  044A  086A               	movf	_savedMinutesEnd,w	;volatile
  1353  044B  00E4               	movwf	??_main+6
  1354  044C  01E5               	clrf	??_main+7
  1355  044D  0864               	movf	??_main+6,w
  1356  044E  00B6               	movwf	?_sprintf+8
  1357  044F  0865               	movf	??_main+7,w
  1358  0450  00B7               	movwf	?_sprintf+9
  1359  0451  30C7               	movlw	main@buffer& (0+255)
  1360  0452  120A  158A  2601  120A  118A  	fcall	_sprintf
  1361                           
  1362                           ;main.c: 70: printToLCD(buffer);
  1363  0457  30C7               	movlw	main@buffer& (0+255)
  1364  0458  1283               	bcf	3,5	;RP0=0, select bank0
  1365  0459  1303               	bcf	3,6	;RP1=0, select bank0
  1366  045A  00A2               	movwf	printToLCD@str
  1367  045B  3000               	movlw	0
  1368  045C  00A3               	movwf	printToLCD@str+1
  1369  045D  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1370                           
  1371                           ;main.c: 71: break;
  1372  0462  2DD4               	goto	l2986
  1373  0463                     l3022:	
  1374                           ;main.c: 72: case SET_TIME_START:
  1375                           
  1376                           
  1377                           ;main.c: 73: setCursor(0, 0);
  1378  0463  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0464  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0465  01A2               	clrf	setCursor@column
  1381  0466  3000               	movlw	0
  1382  0467  160A  118A  2420  120A  118A  	fcall	_setCursor
  1383                           
  1384                           ;main.c: 74: printToLCD("Set SCHED - START");
  1385  046C  3035               	movlw	low (STR_22| (0+32768))
  1386  046D  1283               	bcf	3,5	;RP0=0, select bank0
  1387  046E  1303               	bcf	3,6	;RP1=0, select bank0
  1388  046F  00A2               	movwf	printToLCD@str
  1389  0470  3090               	movlw	high (STR_22| (0+32768))
  1390  0471  00A3               	movwf	printToLCD@str+1
  1391  0472  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1392                           
  1393                           ;main.c: 75: setCursor(1, 0);
  1394  0477  1283               	bcf	3,5	;RP0=0, select bank0
  1395  0478  1303               	bcf	3,6	;RP1=0, select bank0
  1396  0479  01A2               	clrf	setCursor@column
  1397  047A  3001               	movlw	1
  1398  047B  160A  118A  2420  120A  118A  	fcall	_setCursor
  1399                           
  1400                           ;main.c: 76: switch (SEL)
  1401  0480  2D11               	goto	l3050
  1402  0481                     l3028:	
  1403                           ;main.c: 77: {
  1404                           ;main.c: 78: case 0:
  1405                           
  1406                           
  1407                           ;main.c: 79: printToLCD("START HOURS");
  1408  0481  30A9               	movlw	low (STR_23| (0+32768))
  1409  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0484  00A2               	movwf	printToLCD@str
  1412  0485  3090               	movlw	high (STR_23| (0+32768))
  1413  0486  00A3               	movwf	printToLCD@str+1
  1414  0487  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1415                           
  1416                           ;main.c: 80: setCursor(3, 0);
  1417  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1418  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1419  048E  01A2               	clrf	setCursor@column
  1420  048F  3003               	movlw	3
  1421  0490  160A  118A  2420  120A  118A  	fcall	_setCursor
  1422                           
  1423                           ;main.c: 81: sprintf(buffer, "START: %02d:%02d", savedHoursStart, savedMinutesStart);
  1424  0495  3059               	movlw	low (STR_24| (0+32768))
  1425  0496  1283               	bcf	3,5	;RP0=0, select bank0
  1426  0497  1303               	bcf	3,6	;RP1=0, select bank0
  1427  0498  00AE               	movwf	sprintf@f
  1428  0499  3090               	movlw	high (STR_24| (0+32768))
  1429  049A  00AF               	movwf	sprintf@f+1
  1430  049B  0869               	movf	_savedHoursStart,w	;volatile
  1431  049C  00DE               	movwf	??_main
  1432  049D  01DF               	clrf	??_main+1
  1433  049E  085E               	movf	??_main,w
  1434  049F  00B0               	movwf	?_sprintf+2
  1435  04A0  085F               	movf	??_main+1,w
  1436  04A1  00B1               	movwf	?_sprintf+3
  1437  04A2  086B               	movf	_savedMinutesStart,w	;volatile
  1438  04A3  00E0               	movwf	??_main+2
  1439  04A4  01E1               	clrf	??_main+3
  1440  04A5  0860               	movf	??_main+2,w
  1441  04A6  00B2               	movwf	?_sprintf+4
  1442  04A7  0861               	movf	??_main+3,w
  1443  04A8  00B3               	movwf	?_sprintf+5
  1444  04A9  30C7               	movlw	main@buffer& (0+255)
  1445  04AA  120A  158A  2601  120A  118A  	fcall	_sprintf
  1446                           
  1447                           ;main.c: 82: printToLCD(buffer);
  1448  04AF  30C7               	movlw	main@buffer& (0+255)
  1449  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  1450  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  1451  04B2  00A2               	movwf	printToLCD@str
  1452  04B3  3000               	movlw	0
  1453  04B4  00A3               	movwf	printToLCD@str+1
  1454  04B5  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1455                           
  1456                           ;main.c: 83: setCursor(2, 0);
  1457  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1458  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1459  04BC  01A2               	clrf	setCursor@column
  1460  04BD  3002               	movlw	2
  1461  04BE  160A  118A  2420  120A  118A  	fcall	_setCursor
  1462                           
  1463                           ;main.c: 84: setHoursStart();
  1464  04C3  120A  158A  2179  120A  118A  	fcall	_setHoursStart
  1465                           
  1466                           ;main.c: 85: break;
  1467  04C8  2DD4               	goto	l2986
  1468  04C9                     l3038:	
  1469                           ;main.c: 86: case 1:
  1470                           
  1471                           
  1472                           ;main.c: 87: printToLCD("START MINS");
  1473  04C9  30B5               	movlw	low (STR_25| (0+32768))
  1474  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  1475  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  1476  04CC  00A2               	movwf	printToLCD@str
  1477  04CD  3090               	movlw	high (STR_25| (0+32768))
  1478  04CE  00A3               	movwf	printToLCD@str+1
  1479  04CF  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1480                           
  1481                           ;main.c: 88: setCursor(3, 0);
  1482  04D4  1283               	bcf	3,5	;RP0=0, select bank0
  1483  04D5  1303               	bcf	3,6	;RP1=0, select bank0
  1484  04D6  01A2               	clrf	setCursor@column
  1485  04D7  3003               	movlw	3
  1486  04D8  160A  118A  2420  120A  118A  	fcall	_setCursor
  1487                           
  1488                           ;main.c: 89: sprintf(buffer, "START: %02d:%02d", savedHoursStart, savedMinutesStart);
  1489  04DD  3059               	movlw	low (STR_24| (0+32768))
  1490  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  1491  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  1492  04E0  00AE               	movwf	sprintf@f
  1493  04E1  3090               	movlw	high (STR_24| (0+32768))
  1494  04E2  00AF               	movwf	sprintf@f+1
  1495  04E3  0869               	movf	_savedHoursStart,w	;volatile
  1496  04E4  00DE               	movwf	??_main
  1497  04E5  01DF               	clrf	??_main+1
  1498  04E6  085E               	movf	??_main,w
  1499  04E7  00B0               	movwf	?_sprintf+2
  1500  04E8  085F               	movf	??_main+1,w
  1501  04E9  00B1               	movwf	?_sprintf+3
  1502  04EA  086B               	movf	_savedMinutesStart,w	;volatile
  1503  04EB  00E0               	movwf	??_main+2
  1504  04EC  01E1               	clrf	??_main+3
  1505  04ED  0860               	movf	??_main+2,w
  1506  04EE  00B2               	movwf	?_sprintf+4
  1507  04EF  0861               	movf	??_main+3,w
  1508  04F0  00B3               	movwf	?_sprintf+5
  1509  04F1  30C7               	movlw	main@buffer& (0+255)
  1510  04F2  120A  158A  2601  120A  118A  	fcall	_sprintf
  1511                           
  1512                           ;main.c: 90: printToLCD(buffer);
  1513  04F7  30C7               	movlw	main@buffer& (0+255)
  1514  04F8  1283               	bcf	3,5	;RP0=0, select bank0
  1515  04F9  1303               	bcf	3,6	;RP1=0, select bank0
  1516  04FA  00A2               	movwf	printToLCD@str
  1517  04FB  3000               	movlw	0
  1518  04FC  00A3               	movwf	printToLCD@str+1
  1519  04FD  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1520                           
  1521                           ;main.c: 91: setCursor(2, 0);
  1522  0502  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0503  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0504  01A2               	clrf	setCursor@column
  1525  0505  3002               	movlw	2
  1526  0506  160A  118A  2420  120A  118A  	fcall	_setCursor
  1527                           
  1528                           ;main.c: 92: setMinutesStart();
  1529  050B  120A  158A  22CB  120A  118A  	fcall	_setMinutesStart
  1530                           
  1531                           ;main.c: 96: }
  1532                           
  1533                           ;main.c: 95: break;
  1534                           
  1535                           ;main.c: 94: default:
  1536                           
  1537                           ;main.c: 93: break;
  1538  0510  2DD4               	goto	l2986
  1539  0511                     l3050:	
  1540  0511  1683               	bsf	3,5	;RP0=1, select bank1
  1541  0512  1303               	bcf	3,6	;RP1=0, select bank1
  1542  0513  0861               	movf	_SEL^(0+128),w	;volatile
  1543                           
  1544                           ; Switch size 1, requested type "space"
  1545                           ; Number of cases is 2, Range of values is 0 to 1
  1546                           ; switch strategies available:
  1547                           ; Name         Instructions Cycles
  1548                           ; simple_byte            7     4 (average)
  1549                           ; direct_byte           14     8 (fixed)
  1550                           ; jumptable            260     6 (fixed)
  1551                           ;	Chosen strategy is simple_byte
  1552  0514  3A00               	xorlw	0	; case 0
  1553  0515  1903               	skipnz
  1554  0516  2C81               	goto	l3028
  1555  0517  3A01               	xorlw	1	; case 1
  1556  0518  1903               	skipnz
  1557  0519  2CC9               	goto	l3038
  1558  051A  2DD4               	goto	l2986
  1559                           
  1560                           ;main.c: 97: break;
  1561  051B  2DD4               	goto	l2986
  1562  051C                     l3052:	
  1563                           ;main.c: 98: case SET_TIME_END:
  1564                           
  1565                           
  1566                           ;main.c: 99: setCursor(0, 0);
  1567  051C  1283               	bcf	3,5	;RP0=0, select bank0
  1568  051D  1303               	bcf	3,6	;RP1=0, select bank0
  1569  051E  01A2               	clrf	setCursor@column
  1570  051F  3000               	movlw	0
  1571  0520  160A  118A  2420  120A  118A  	fcall	_setCursor
  1572                           
  1573                           ;main.c: 100: printToLCD("Set SCHED - END");
  1574  0525  307A               	movlw	low (STR_27| (0+32768))
  1575  0526  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0527  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0528  00A2               	movwf	printToLCD@str
  1578  0529  3090               	movlw	high (STR_27| (0+32768))
  1579  052A  00A3               	movwf	printToLCD@str+1
  1580  052B  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1581                           
  1582                           ;main.c: 101: setCursor(1, 0);
  1583  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0532  01A2               	clrf	setCursor@column
  1586  0533  3001               	movlw	1
  1587  0534  160A  118A  2420  120A  118A  	fcall	_setCursor
  1588                           
  1589                           ;main.c: 102: switch (SEL)
  1590  0539  2DCA               	goto	l3080
  1591  053A                     l3058:	
  1592                           ;main.c: 103: {
  1593                           ;main.c: 104: case 0:
  1594                           
  1595                           
  1596                           ;main.c: 105: printToLCD("END HOURS");
  1597  053A  30C0               	movlw	low (STR_28| (0+32768))
  1598  053B  1283               	bcf	3,5	;RP0=0, select bank0
  1599  053C  1303               	bcf	3,6	;RP1=0, select bank0
  1600  053D  00A2               	movwf	printToLCD@str
  1601  053E  3090               	movlw	high (STR_28| (0+32768))
  1602  053F  00A3               	movwf	printToLCD@str+1
  1603  0540  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1604                           
  1605                           ;main.c: 106: setCursor(3, 0);
  1606  0545  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0546  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0547  01A2               	clrf	setCursor@column
  1609  0548  3003               	movlw	3
  1610  0549  160A  118A  2420  120A  118A  	fcall	_setCursor
  1611                           
  1612                           ;main.c: 107: sprintf(buffer, "END: %02d:%02d", savedHoursEnd, savedMinutesEnd);
  1613  054E  309A               	movlw	low (STR_29| (0+32768))
  1614  054F  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0550  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0551  00AE               	movwf	sprintf@f
  1617  0552  3090               	movlw	high (STR_29| (0+32768))
  1618  0553  00AF               	movwf	sprintf@f+1
  1619  0554  0868               	movf	_savedHoursEnd,w	;volatile
  1620  0555  00DE               	movwf	??_main
  1621  0556  01DF               	clrf	??_main+1
  1622  0557  085E               	movf	??_main,w
  1623  0558  00B0               	movwf	?_sprintf+2
  1624  0559  085F               	movf	??_main+1,w
  1625  055A  00B1               	movwf	?_sprintf+3
  1626  055B  086A               	movf	_savedMinutesEnd,w	;volatile
  1627  055C  00E0               	movwf	??_main+2
  1628  055D  01E1               	clrf	??_main+3
  1629  055E  0860               	movf	??_main+2,w
  1630  055F  00B2               	movwf	?_sprintf+4
  1631  0560  0861               	movf	??_main+3,w
  1632  0561  00B3               	movwf	?_sprintf+5
  1633  0562  30C7               	movlw	main@buffer& (0+255)
  1634  0563  120A  158A  2601  120A  118A  	fcall	_sprintf
  1635                           
  1636                           ;main.c: 108: printToLCD(buffer);
  1637  0568  30C7               	movlw	main@buffer& (0+255)
  1638  0569  1283               	bcf	3,5	;RP0=0, select bank0
  1639  056A  1303               	bcf	3,6	;RP1=0, select bank0
  1640  056B  00A2               	movwf	printToLCD@str
  1641  056C  3000               	movlw	0
  1642  056D  00A3               	movwf	printToLCD@str+1
  1643  056E  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1644                           
  1645                           ;main.c: 109: setCursor(2, 0);
  1646  0573  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0574  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0575  01A2               	clrf	setCursor@column
  1649  0576  3002               	movlw	2
  1650  0577  160A  118A  2420  120A  118A  	fcall	_setCursor
  1651                           
  1652                           ;main.c: 110: setHoursEnd();
  1653  057C  120A  158A  20D0  120A  118A  	fcall	_setHoursEnd
  1654                           
  1655                           ;main.c: 111: break;
  1656  0581  2DD4               	goto	l2986
  1657  0582                     l3068:	
  1658                           ;main.c: 112: case 1:
  1659                           
  1660                           
  1661                           ;main.c: 113: printToLCD("END MINS");
  1662  0582  30F1               	movlw	low (STR_30| (0+32768))
  1663  0583  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0584  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0585  00A2               	movwf	printToLCD@str
  1666  0586  3090               	movlw	high (STR_30| (0+32768))
  1667  0587  00A3               	movwf	printToLCD@str+1
  1668  0588  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1669                           
  1670                           ;main.c: 114: setCursor(3, 0);
  1671  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1672  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1673  058F  01A2               	clrf	setCursor@column
  1674  0590  3003               	movlw	3
  1675  0591  160A  118A  2420  120A  118A  	fcall	_setCursor
  1676                           
  1677                           ;main.c: 115: sprintf(buffer, "END: %02d:%02d", savedHoursEnd, savedMinutesEnd);
  1678  0596  309A               	movlw	low (STR_29| (0+32768))
  1679  0597  1283               	bcf	3,5	;RP0=0, select bank0
  1680  0598  1303               	bcf	3,6	;RP1=0, select bank0
  1681  0599  00AE               	movwf	sprintf@f
  1682  059A  3090               	movlw	high (STR_29| (0+32768))
  1683  059B  00AF               	movwf	sprintf@f+1
  1684  059C  0868               	movf	_savedHoursEnd,w	;volatile
  1685  059D  00DE               	movwf	??_main
  1686  059E  01DF               	clrf	??_main+1
  1687  059F  085E               	movf	??_main,w
  1688  05A0  00B0               	movwf	?_sprintf+2
  1689  05A1  085F               	movf	??_main+1,w
  1690  05A2  00B1               	movwf	?_sprintf+3
  1691  05A3  086A               	movf	_savedMinutesEnd,w	;volatile
  1692  05A4  00E0               	movwf	??_main+2
  1693  05A5  01E1               	clrf	??_main+3
  1694  05A6  0860               	movf	??_main+2,w
  1695  05A7  00B2               	movwf	?_sprintf+4
  1696  05A8  0861               	movf	??_main+3,w
  1697  05A9  00B3               	movwf	?_sprintf+5
  1698  05AA  30C7               	movlw	main@buffer& (0+255)
  1699  05AB  120A  158A  2601  120A  118A  	fcall	_sprintf
  1700                           
  1701                           ;main.c: 116: printToLCD(buffer);
  1702  05B0  30C7               	movlw	main@buffer& (0+255)
  1703  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1704  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1705  05B3  00A2               	movwf	printToLCD@str
  1706  05B4  3000               	movlw	0
  1707  05B5  00A3               	movwf	printToLCD@str+1
  1708  05B6  160A  118A  23D6  120A  118A  	fcall	_printToLCD
  1709                           
  1710                           ;main.c: 117: setCursor(2, 0);
  1711  05BB  1283               	bcf	3,5	;RP0=0, select bank0
  1712  05BC  1303               	bcf	3,6	;RP1=0, select bank0
  1713  05BD  01A2               	clrf	setCursor@column
  1714  05BE  3002               	movlw	2
  1715  05BF  160A  118A  2420  120A  118A  	fcall	_setCursor
  1716                           
  1717                           ;main.c: 118: setMinutesEnd();
  1718  05C4  120A  158A  2222  120A  118A  	fcall	_setMinutesEnd
  1719                           
  1720                           ;main.c: 122: }
  1721                           
  1722                           ;main.c: 121: break;
  1723                           
  1724                           ;main.c: 120: default:
  1725                           
  1726                           ;main.c: 119: break;
  1727  05C9  2DD4               	goto	l2986
  1728  05CA                     l3080:	
  1729  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  1730  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  1731  05CC  0861               	movf	_SEL^(0+128),w	;volatile
  1732                           
  1733                           ; Switch size 1, requested type "space"
  1734                           ; Number of cases is 2, Range of values is 0 to 1
  1735                           ; switch strategies available:
  1736                           ; Name         Instructions Cycles
  1737                           ; simple_byte            7     4 (average)
  1738                           ; direct_byte           14     8 (fixed)
  1739                           ; jumptable            260     6 (fixed)
  1740                           ;	Chosen strategy is simple_byte
  1741  05CD  3A00               	xorlw	0	; case 0
  1742  05CE  1903               	skipnz
  1743  05CF  2D3A               	goto	l3058
  1744  05D0  3A01               	xorlw	1	; case 1
  1745  05D1  1903               	skipnz
  1746  05D2  2D82               	goto	l3068
  1747  05D3  2DD4               	goto	l2986
  1748  05D4                     l2986:	
  1749                           ;main.c: 40: while (1)
  1750                           
  1751                           ;main.c: 126: }
  1752                           
  1753                           ;main.c: 125: break;
  1754                           
  1755                           ;main.c: 124: default:
  1756                           
  1757                           ;main.c: 123: break;
  1758                           
  1759                           
  1760                           ;main.c: 41: {
  1761                           ;main.c: 43: GIE = 0;
  1762  05D4  138B               	bcf	11,7	;volatile
  1763                           
  1764                           ;main.c: 44: PEIE = 0;
  1765  05D5  130B               	bcf	11,6	;volatile
  1766                           
  1767                           ;main.c: 45: if(mode == STAT)
  1768  05D6  1683               	bsf	3,5	;RP0=1, select bank1
  1769  05D7  1303               	bcf	3,6	;RP1=0, select bank1
  1770  05D8  08E2               	movf	_mode^(0+128),f
  1771  05D9  1D03               	skipz
  1772  05DA  2DE0               	goto	l2994
  1773                           
  1774                           ;main.c: 46: {
  1775                           ;main.c: 47: runDHT11();
  1776  05DB  160A  118A  257A  120A  118A  	fcall	_runDHT11
  1777  05E0                     l2994:	
  1778                           
  1779                           ;main.c: 48: }
  1780                           ;main.c: 49: GIE = 1;
  1781  05E0  178B               	bsf	11,7	;volatile
  1782                           
  1783                           ;main.c: 50: PEIE = 1;
  1784  05E1  170B               	bsf	11,6	;volatile
  1785                           
  1786                           ;main.c: 51: runMQ135();
  1787  05E2  160A  118A  238D  120A  118A  	fcall	_runMQ135
  1788                           
  1789                           ;main.c: 52: runClock();
  1790  05E7  160A  118A  232A  120A  118A  	fcall	_runClock
  1791                           
  1792                           ;main.c: 54: checkMode();
  1793  05EC  160A  118A  2347  120A  118A  	fcall	_checkMode
  1794                           
  1795                           ;main.c: 55: checkSEL();
  1796  05F1  160A  118A  24A1  120A  118A  	fcall	_checkSEL
  1797                           
  1798                           ;main.c: 56: checkTime();
  1799  05F6  160A  118A  26DF  120A  118A  	fcall	_checkTime
  1800                           
  1801                           ;main.c: 57: handlePPM();
  1802  05FB  160A  118A  2471  120A  118A  	fcall	_handlePPM
  1803                           
  1804                           ;main.c: 58: activateHumidifier();
  1805  0600  160A  118A  22F3  120A  118A  	fcall	_activateHumidifier
  1806  0605  1683               	bsf	3,5	;RP0=1, select bank1
  1807  0606  1303               	bcf	3,6	;RP1=0, select bank1
  1808  0607  0862               	movf	_mode^(0+128),w
  1809                           
  1810                           ; Switch size 1, requested type "space"
  1811                           ; Number of cases is 3, Range of values is 0 to 2
  1812                           ; switch strategies available:
  1813                           ; Name         Instructions Cycles
  1814                           ; simple_byte           10     6 (average)
  1815                           ; direct_byte           17     8 (fixed)
  1816                           ; jumptable            260     6 (fixed)
  1817                           ;	Chosen strategy is simple_byte
  1818  0608  3A00               	xorlw	0	; case 0
  1819  0609  1903               	skipnz
  1820  060A  2C0E               	goto	l3012
  1821  060B  3A01               	xorlw	1	; case 1
  1822  060C  1903               	skipnz
  1823  060D  2C63               	goto	l3022
  1824  060E  3A03               	xorlw	3	; case 2
  1825  060F  1903               	skipnz
  1826  0610  2D1C               	goto	l3052
  1827  0611  2DD4               	goto	l2986
  1828  0612  2DD4               	goto	l2986
  1829  0613                     __end_of_main:	
  1830                           
  1831                           	psect	text1
  1832  0801                     __ptext1:	
  1833 ;; *************** function _startUpSequence *****************
  1834 ;; Defined at:
  1835 ;;		line 167 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  1836 ;; Parameters:    Size  Location     Type
  1837 ;;		None
  1838 ;; Auto vars:     Size  Location     Type
  1839 ;;		None
  1840 ;; Return value:  Size  Location     Type
  1841 ;;		None               void
  1842 ;; Registers used:
  1843 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1844 ;; Tracked objects:
  1845 ;;		On entry : 0/0
  1846 ;;		On exit  : 0/0
  1847 ;;		Unchanged: 0/0
  1848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1849 ;;      Params:         0       0       0       0       0
  1850 ;;      Locals:         0       0       0       0       0
  1851 ;;      Temps:          0       3       0       0       0
  1852 ;;      Totals:         0       3       0       0       0
  1853 ;;Total ram usage:        3 bytes
  1854 ;; Hardware stack levels used:    1
  1855 ;; Hardware stack levels required when called:    4
  1856 ;; This function calls:
  1857 ;;		_initDHT11
  1858 ;;		_initLCD
  1859 ;;		_instCTRL
  1860 ;;		_printToLCD
  1861 ;;		_setCursor
  1862 ;; This function is called by:
  1863 ;;		_main
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _startUpSequence
  1869  0801                     _startUpSequence:	
  1870                           
  1871                           ;main.c: 170: initLCD();
  1872                           
  1873                           ;incstack = 0
  1874                           ; Regs used in _startUpSequence: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1875  0801  160A  118A  268F  120A  158A  	fcall	_initLCD
  1876                           
  1877                           ;main.c: 171: _delay((unsigned long)((500)*(4000000/4000.0)));
  1878  0806  3003               	movlw	3
  1879  0807  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0808  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0809  00A8               	movwf	??_startUpSequence+2
  1882  080A  308A               	movlw	138
  1883  080B  00A7               	movwf	??_startUpSequence+1
  1884  080C  3056               	movlw	86
  1885  080D  00A6               	movwf	??_startUpSequence
  1886  080E                     u4257:	
  1887  080E  0BA6               	decfsz	??_startUpSequence,f
  1888  080F  280E               	goto	u4257
  1889  0810  0BA7               	decfsz	??_startUpSequence+1,f
  1890  0811  280E               	goto	u4257
  1891  0812  0BA8               	decfsz	??_startUpSequence+2,f
  1892  0813  280E               	goto	u4257
  1893  0814  2815               	nop2
  1894                           
  1895                           ;main.c: 172: setCursor(0, 0);
  1896  0815  1283               	bcf	3,5	;RP0=0, select bank0
  1897  0816  1303               	bcf	3,6	;RP1=0, select bank0
  1898  0817  01A2               	clrf	setCursor@column
  1899  0818  3000               	movlw	0
  1900  0819  160A  118A  2420  120A  158A  	fcall	_setCursor
  1901                           
  1902                           ;main.c: 173: printToLCD("Initializing...");
  1903  081E  306A               	movlw	low (STR_32| (0+32768))
  1904  081F  1283               	bcf	3,5	;RP0=0, select bank0
  1905  0820  1303               	bcf	3,6	;RP1=0, select bank0
  1906  0821  00A2               	movwf	printToLCD@str
  1907  0822  3090               	movlw	high (STR_32| (0+32768))
  1908  0823  00A3               	movwf	printToLCD@str+1
  1909  0824  160A  118A  23D6  120A  158A  	fcall	_printToLCD
  1910                           
  1911                           ;main.c: 175: initDHT11();
  1912  0829  160A  118A  22B4  120A  158A  	fcall	_initDHT11
  1913                           
  1914                           ;main.c: 176: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1915  082E  300B               	movlw	11
  1916  082F  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0830  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0831  00A8               	movwf	??_startUpSequence+2
  1919  0832  3026               	movlw	38
  1920  0833  00A7               	movwf	??_startUpSequence+1
  1921  0834  3066               	movlw	102
  1922  0835  00A6               	movwf	??_startUpSequence
  1923  0836                     u4267:	
  1924  0836  0BA6               	decfsz	??_startUpSequence,f
  1925  0837  2836               	goto	u4267
  1926  0838  0BA7               	decfsz	??_startUpSequence+1,f
  1927  0839  2836               	goto	u4267
  1928  083A  0BA8               	decfsz	??_startUpSequence+2,f
  1929  083B  2836               	goto	u4267
  1930  083C  283D               	nop2
  1931                           
  1932                           ;main.c: 177: instCTRL(0x01);
  1933  083D  3001               	movlw	1
  1934  083E  160A  118A  2304   	fcall	_instCTRL
  1935  0841  0008               	return
  1936  0842                     __end_of_startUpSequence:	
  1937                           
  1938                           	psect	text2
  1939  168F                     __ptext2:	
  1940 ;; *************** function _initLCD *****************
  1941 ;; Defined at:
  1942 ;;		line 43 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;		None               void
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1956 ;;      Params:         0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0
  1958 ;;      Temps:          0       2       0       0       0
  1959 ;;      Totals:         0       2       0       0       0
  1960 ;;Total ram usage:        2 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    3
  1963 ;; This function calls:
  1964 ;;		_instCTRL
  1965 ;; This function is called by:
  1966 ;;		_startUpSequence
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _initLCD
  1972  168F                     _initLCD:	
  1973                           
  1974                           ;lcd_functions.h: 45: _delay((unsigned long)((20)*(4000000/4000.0)));
  1975                           
  1976                           ;incstack = 0
  1977                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  1978  168F  301A               	movlw	26
  1979  1690  1283               	bcf	3,5	;RP0=0, select bank0
  1980  1691  1303               	bcf	3,6	;RP1=0, select bank0
  1981  1692  00A3               	movwf	??_initLCD+1
  1982  1693  30F8               	movlw	248
  1983  1694  00A2               	movwf	??_initLCD
  1984  1695                     u4277:	
  1985  1695  0BA2               	decfsz	??_initLCD,f
  1986  1696  2E95               	goto	u4277
  1987  1697  0BA3               	decfsz	??_initLCD+1,f
  1988  1698  2E95               	goto	u4277
  1989  1699  0000               	nop
  1990                           
  1991                           ;lcd_functions.h: 46: instCTRL(0x30);
  1992  169A  3030               	movlw	48
  1993  169B  160A  118A  2304  160A  118A  	fcall	_instCTRL
  1994                           
  1995                           ;lcd_functions.h: 47: _delay((unsigned long)((5)*(4000000/4000.0)));
  1996  16A0  3007               	movlw	7
  1997  16A1  1283               	bcf	3,5	;RP0=0, select bank0
  1998  16A2  1303               	bcf	3,6	;RP1=0, select bank0
  1999  16A3  00A3               	movwf	??_initLCD+1
  2000  16A4  307D               	movlw	125
  2001  16A5  00A2               	movwf	??_initLCD
  2002  16A6                     u4287:	
  2003  16A6  0BA2               	decfsz	??_initLCD,f
  2004  16A7  2EA6               	goto	u4287
  2005  16A8  0BA3               	decfsz	??_initLCD+1,f
  2006  16A9  2EA6               	goto	u4287
  2007                           
  2008                           ;lcd_functions.h: 48: instCTRL(0x30);
  2009  16AA  3030               	movlw	48
  2010  16AB  160A  118A  2304  160A  118A  	fcall	_instCTRL
  2011                           
  2012                           ;lcd_functions.h: 49: _delay((unsigned long)((200)*(4000000/4000000.0)));
  2013  16B0  3042               	movlw	66
  2014  16B1  1283               	bcf	3,5	;RP0=0, select bank0
  2015  16B2  1303               	bcf	3,6	;RP1=0, select bank0
  2016  16B3  00A2               	movwf	??_initLCD
  2017  16B4                     u4297:	
  2018  16B4  0BA2               	decfsz	??_initLCD,f
  2019  16B5  2EB4               	goto	u4297
  2020  16B6  0000               	nop
  2021                           
  2022                           ;lcd_functions.h: 50: instCTRL(0x30);
  2023  16B7  3030               	movlw	48
  2024  16B8  160A  118A  2304  160A  118A  	fcall	_instCTRL
  2025                           
  2026                           ;lcd_functions.h: 52: instCTRL(0x38);
  2027  16BD  3038               	movlw	56
  2028  16BE  160A  118A  2304  160A  118A  	fcall	_instCTRL
  2029                           
  2030                           ;lcd_functions.h: 53: instCTRL(0x0C);
  2031  16C3  300C               	movlw	12
  2032  16C4  160A  118A  2304  160A  118A  	fcall	_instCTRL
  2033                           
  2034                           ;lcd_functions.h: 54: instCTRL(0x01);
  2035  16C9  3001               	movlw	1
  2036  16CA  160A  118A  2304  160A  118A  	fcall	_instCTRL
  2037                           
  2038                           ;lcd_functions.h: 55: _delay((unsigned long)((2)*(4000000/4000.0)));
  2039  16CF  3003               	movlw	3
  2040  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2041  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2042  16D2  00A3               	movwf	??_initLCD+1
  2043  16D3  3097               	movlw	151
  2044  16D4  00A2               	movwf	??_initLCD
  2045  16D5                     u4307:	
  2046  16D5  0BA2               	decfsz	??_initLCD,f
  2047  16D6  2ED5               	goto	u4307
  2048  16D7  0BA3               	decfsz	??_initLCD+1,f
  2049  16D8  2ED5               	goto	u4307
  2050  16D9  2EDA               	nop2
  2051                           
  2052                           ;lcd_functions.h: 56: instCTRL(0x06);
  2053  16DA  3006               	movlw	6
  2054  16DB  160A  118A  2304   	fcall	_instCTRL
  2055  16DE  0008               	return
  2056  16DF                     __end_of_initLCD:	
  2057                           
  2058                           	psect	text3
  2059  12B4                     __ptext3:	
  2060 ;; *************** function _initDHT11 *****************
  2061 ;; Defined at:
  2062 ;;		line 22 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;		None               void
  2069 ;; Registers used:
  2070 ;;		None
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2076 ;;      Params:         0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0
  2079 ;;      Totals:         0       0       0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used:    1
  2082 ;; Hardware stack levels required when called:    2
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_startUpSequence
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function _initDHT11
  2092  12B4                     _initDHT11:	
  2093                           
  2094                           ;dht11_module.h: 24: TRISBbits.TRISB2 = 0;
  2095                           
  2096                           ;incstack = 0
  2097                           ; Regs used in _initDHT11: []
  2098  12B4  1683               	bsf	3,5	;RP0=1, select bank1
  2099  12B5  1303               	bcf	3,6	;RP1=0, select bank1
  2100  12B6  1106               	bcf	6,2	;volatile
  2101                           
  2102                           ;dht11_module.h: 25: PORTBbits.RB2 = 1;
  2103  12B7  1283               	bcf	3,5	;RP0=0, select bank0
  2104  12B8  1303               	bcf	3,6	;RP1=0, select bank0
  2105  12B9  1506               	bsf	6,2	;volatile
  2106  12BA  0008               	return
  2107  12BB                     __end_of_initDHT11:	
  2108                           
  2109                           	psect	text4
  2110  0ACB                     __ptext4:	
  2111 ;; *************** function _setMinutesStart *****************
  2112 ;; Defined at:
  2113 ;;		line 133 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler
      +.h"
  2114 ;; Parameters:    Size  Location     Type
  2115 ;;		None
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;		None
  2118 ;; Return value:  Size  Location     Type
  2119 ;;		None               void
  2120 ;; Registers used:
  2121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2122 ;; Tracked objects:
  2123 ;;		On entry : 0/0
  2124 ;;		On exit  : 0/0
  2125 ;;		Unchanged: 0/0
  2126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2127 ;;      Params:         0       0       0       0       0
  2128 ;;      Locals:         0       0       0       0       0
  2129 ;;      Temps:          0       2       0       0       0
  2130 ;;      Totals:         0       2       0       0       0
  2131 ;;Total ram usage:        2 bytes
  2132 ;; Hardware stack levels used:    1
  2133 ;; Hardware stack levels required when called:    4
  2134 ;; This function calls:
  2135 ;;		___awmod
  2136 ;;		_printToLCD
  2137 ;;		_sprintf
  2138 ;; This function is called by:
  2139 ;;		_main
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           
  2144                           ;psect for function _setMinutesStart
  2145  0ACB                     _setMinutesStart:	
  2146                           
  2147                           ;time_scheduler.h: 135: keyValid = (PORTB & 0x08) >> 3;
  2148                           
  2149                           ;incstack = 0
  2150                           ; Regs used in _setMinutesStart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2151  0ACB  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0ACC  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0ACD  0806               	movf	6,w	;volatile
  2154  0ACE  00C8               	movwf	??_setMinutesStart
  2155  0ACF  3003               	movlw	3
  2156  0AD0                     u3735:	
  2157  0AD0  1003               	clrc
  2158  0AD1  0CC8               	rrf	??_setMinutesStart,f
  2159  0AD2  3EFF               	addlw	-1
  2160  0AD3  1D03               	skipz
  2161  0AD4  2AD0               	goto	u3735
  2162  0AD5  0848               	movf	??_setMinutesStart,w
  2163  0AD6  3901               	andlw	1
  2164  0AD7  00C9               	movwf	??_setMinutesStart+1
  2165  0AD8  0849               	movf	??_setMinutesStart+1,w
  2166  0AD9  00ED               	movwf	_keyValid
  2167                           
  2168                           ;time_scheduler.h: 136: key = (PORTB & 0xF0) >> 4;
  2169  0ADA  0806               	movf	6,w	;volatile
  2170  0ADB  00C8               	movwf	??_setMinutesStart
  2171  0ADC  3004               	movlw	4
  2172  0ADD                     u3745:	
  2173  0ADD  1003               	clrc
  2174  0ADE  0CC8               	rrf	??_setMinutesStart,f
  2175  0ADF  3EFF               	addlw	-1
  2176  0AE0  1D03               	skipz
  2177  0AE1  2ADD               	goto	u3745
  2178  0AE2  0848               	movf	??_setMinutesStart,w
  2179  0AE3  390F               	andlw	15
  2180  0AE4  00C9               	movwf	??_setMinutesStart+1
  2181  0AE5  0849               	movf	??_setMinutesStart+1,w
  2182  0AE6  00EC               	movwf	_key
  2183                           
  2184                           ;time_scheduler.h: 138: _delay((unsigned long)((50)*(4000000/4000.0)));
  2185  0AE7  3041               	movlw	65
  2186  0AE8  00C9               	movwf	??_setMinutesStart+1
  2187  0AE9  30EE               	movlw	238
  2188  0AEA  00C8               	movwf	??_setMinutesStart
  2189  0AEB                     u4317:	
  2190  0AEB  0BC8               	decfsz	??_setMinutesStart,f
  2191  0AEC  2AEB               	goto	u4317
  2192  0AED  0BC9               	decfsz	??_setMinutesStart+1,f
  2193  0AEE  2AEB               	goto	u4317
  2194  0AEF  0000               	nop
  2195                           
  2196                           ;time_scheduler.h: 140: if (keyValid && key != lastKeyState)
  2197  0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  2198  0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  2199  0AF2  086D               	movf	_keyValid,w
  2200  0AF3  1903               	btfsc	3,2
  2201  0AF4  2B6C               	goto	l2812
  2202  0AF5  086C               	movf	_key,w
  2203  0AF6  0667               	xorwf	_lastKeyState,w
  2204  0AF7  1903               	skipnz
  2205  0AF8  2B6C               	goto	l2812
  2206                           
  2207                           ;time_scheduler.h: 141: {
  2208                           ;time_scheduler.h: 142: if (key == 0b00000000)
  2209  0AF9  08EC               	movf	_key,f
  2210  0AFA  1D03               	skipz
  2211  0AFB  2B16               	goto	l2796
  2212                           
  2213                           ;time_scheduler.h: 143: {
  2214                           ;time_scheduler.h: 144: savedMinutesStart = (savedMinutesStart + 5) % 60;
  2215  0AFC  303C               	movlw	60
  2216  0AFD  00A0               	movwf	___awmod@divisor
  2217  0AFE  3000               	movlw	0
  2218  0AFF  00A1               	movwf	___awmod@divisor+1
  2219  0B00  086B               	movf	_savedMinutesStart,w	;volatile
  2220  0B01  3E05               	addlw	5
  2221  0B02  00A2               	movwf	___awmod@dividend
  2222  0B03  3000               	movlw	0
  2223  0B04  1803               	skipnc
  2224  0B05  3001               	movlw	1
  2225  0B06  00A3               	movwf	___awmod@dividend+1
  2226  0B07  160A  118A  2640  120A  158A  	fcall	___awmod
  2227  0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  2228  0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  2229  0B0E  0820               	movf	?___awmod,w
  2230  0B0F  00C8               	movwf	??_setMinutesStart
  2231  0B10  0848               	movf	??_setMinutesStart,w
  2232  0B11  00EB               	movwf	_savedMinutesStart	;volatile
  2233                           
  2234                           ;time_scheduler.h: 145: sprintf(debugInfo, "INC: %02d", savedMinutesStart);
  2235  0B12  30D4               	movlw	low (STR_9| (0+32768))
  2236  0B13  00AE               	movwf	sprintf@f
  2237  0B14  3090               	movlw	high (STR_9| (0+32768))
  2238  0B15  2B3F               	goto	L1
  2239  0B16                     l2796:	
  2240                           ;time_scheduler.h: 146: }
  2241                           
  2242                           
  2243                           ;time_scheduler.h: 147: else if (key == 0b00001100)
  2244  0B16  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0B17  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0B18  086C               	movf	_key,w
  2247  0B19  3A0C               	xorlw	12
  2248  0B1A  1D03               	skipz
  2249  0B1B  2B36               	goto	l2802
  2250                           
  2251                           ;time_scheduler.h: 148: {
  2252                           ;time_scheduler.h: 149: savedMinutesStart = (savedMinutesStart - 5 + 60) % 60;
  2253  0B1C  303C               	movlw	60
  2254  0B1D  00A0               	movwf	___awmod@divisor
  2255  0B1E  3000               	movlw	0
  2256  0B1F  00A1               	movwf	___awmod@divisor+1
  2257  0B20  086B               	movf	_savedMinutesStart,w	;volatile
  2258  0B21  3E37               	addlw	55
  2259  0B22  00A2               	movwf	___awmod@dividend
  2260  0B23  3000               	movlw	0
  2261  0B24  1803               	skipnc
  2262  0B25  3001               	movlw	1
  2263  0B26  00A3               	movwf	___awmod@dividend+1
  2264  0B27  160A  118A  2640  120A  158A  	fcall	___awmod
  2265  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  2266  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  2267  0B2E  0820               	movf	?___awmod,w
  2268  0B2F  00C8               	movwf	??_setMinutesStart
  2269  0B30  0848               	movf	??_setMinutesStart,w
  2270  0B31  00EB               	movwf	_savedMinutesStart	;volatile
  2271                           
  2272                           ;time_scheduler.h: 150: sprintf(debugInfo, "DEC: %02d", savedMinutesStart);
  2273  0B32  30CA               	movlw	low (STR_10| (0+32768))
  2274  0B33  00AE               	movwf	sprintf@f
  2275  0B34  3090               	movlw	high (STR_10| (0+32768))
  2276  0B35  2B3F               	goto	L1
  2277  0B36                     l2802:	
  2278                           ;time_scheduler.h: 151: }
  2279                           
  2280                           
  2281                           ;time_scheduler.h: 152: else if (key == 0b00001101)
  2282  0B36  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0B37  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0B38  086C               	movf	_key,w
  2285  0B39  3A0D               	xorlw	13
  2286  0B3A  1D03               	skipz
  2287  0B3B  2B4D               	goto	l224
  2288                           
  2289                           ;time_scheduler.h: 153: {
  2290                           ;time_scheduler.h: 154: sprintf(debugInfo, "SET: %02d", savedMinutesStart);
  2291  0B3C  30DE               	movlw	low (STR_11| (0+32768))
  2292  0B3D  00AE               	movwf	sprintf@f
  2293  0B3E  3090               	movlw	high (STR_11| (0+32768))
  2294  0B3F                     L1:	
  2295  0B3F  00AF               	movwf	sprintf@f+1
  2296  0B40  086B               	movf	_savedMinutesStart,w	;volatile
  2297  0B41  00C8               	movwf	??_setMinutesStart
  2298  0B42  01C9               	clrf	??_setMinutesStart+1
  2299  0B43  0848               	movf	??_setMinutesStart,w
  2300  0B44  00B0               	movwf	?_sprintf+2
  2301  0B45  0849               	movf	??_setMinutesStart+1,w
  2302  0B46  00B1               	movwf	?_sprintf+3
  2303  0B47  30E4               	movlw	_debugInfo& (0+255)
  2304  0B48  120A  158A  2601  120A  158A  	fcall	_sprintf
  2305  0B4D                     l224:	
  2306                           
  2307                           ;time_scheduler.h: 155: }
  2308                           ;time_scheduler.h: 157: printToLCD(debugInfo);
  2309  0B4D  30E4               	movlw	_debugInfo& (0+255)
  2310  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  2311  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  2312  0B50  00A2               	movwf	printToLCD@str
  2313  0B51  3000               	movlw	0
  2314  0B52  00A3               	movwf	printToLCD@str+1
  2315  0B53  160A  118A  23D6  120A  158A  	fcall	_printToLCD
  2316                           
  2317                           ;time_scheduler.h: 158: lastKeyState = key;
  2318  0B58  1283               	bcf	3,5	;RP0=0, select bank0
  2319  0B59  1303               	bcf	3,6	;RP1=0, select bank0
  2320  0B5A  086C               	movf	_key,w
  2321  0B5B  00C8               	movwf	??_setMinutesStart
  2322  0B5C  0848               	movf	??_setMinutesStart,w
  2323  0B5D  00E7               	movwf	_lastKeyState
  2324  0B5E                     l2810:	
  2325                           ;time_scheduler.h: 160: while ((PORTB & 0x08) != 0)
  2326                           
  2327  0B5E  1283               	bcf	3,5	;RP0=0, select bank0
  2328  0B5F  1303               	bcf	3,6	;RP1=0, select bank0
  2329  0B60  1D86               	btfss	6,3	;volatile
  2330  0B61  0008               	return
  2331                           
  2332                           ;time_scheduler.h: 161: {
  2333                           ;time_scheduler.h: 162: _delay((unsigned long)((10)*(4000000/4000.0)));
  2334  0B62  300D               	movlw	13
  2335  0B63  00C9               	movwf	??_setMinutesStart+1
  2336  0B64  30FB               	movlw	251
  2337  0B65  00C8               	movwf	??_setMinutesStart
  2338  0B66                     u4327:	
  2339  0B66  0BC8               	decfsz	??_setMinutesStart,f
  2340  0B67  2B66               	goto	u4327
  2341  0B68  0BC9               	decfsz	??_setMinutesStart+1,f
  2342  0B69  2B66               	goto	u4327
  2343  0B6A  2B6B               	nop2
  2344  0B6B  2B5E               	goto	l2810
  2345  0B6C                     l2812:	
  2346                           ;time_scheduler.h: 163: }
  2347                           ;time_scheduler.h: 164: }
  2348                           
  2349                           
  2350                           ;time_scheduler.h: 165: else if (!keyValid)
  2351  0B6C  08ED               	movf	_keyValid,f
  2352  0B6D  1D03               	skipz
  2353  0B6E  0008               	return
  2354                           
  2355                           ;time_scheduler.h: 166: {
  2356                           ;time_scheduler.h: 167: lastKeyState = 0xFF;
  2357  0B6F  30FF               	movlw	255
  2358  0B70  00C8               	movwf	??_setMinutesStart
  2359  0B71  0848               	movf	??_setMinutesStart,w
  2360  0B72  00E7               	movwf	_lastKeyState
  2361  0B73  0008               	return
  2362  0B74                     __end_of_setMinutesStart:	
  2363                           
  2364                           	psect	text5
  2365  0A22                     __ptext5:	
  2366 ;; *************** function _setMinutesEnd *****************
  2367 ;; Defined at:
  2368 ;;		line 171 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler
      +.h"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;		None
  2371 ;; Auto vars:     Size  Location     Type
  2372 ;;		None
  2373 ;; Return value:  Size  Location     Type
  2374 ;;		None               void
  2375 ;; Registers used:
  2376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2377 ;; Tracked objects:
  2378 ;;		On entry : 0/0
  2379 ;;		On exit  : 0/0
  2380 ;;		Unchanged: 0/0
  2381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2382 ;;      Params:         0       0       0       0       0
  2383 ;;      Locals:         0       0       0       0       0
  2384 ;;      Temps:          0       2       0       0       0
  2385 ;;      Totals:         0       2       0       0       0
  2386 ;;Total ram usage:        2 bytes
  2387 ;; Hardware stack levels used:    1
  2388 ;; Hardware stack levels required when called:    4
  2389 ;; This function calls:
  2390 ;;		___awmod
  2391 ;;		_printToLCD
  2392 ;;		_sprintf
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _setMinutesEnd
  2400  0A22                     _setMinutesEnd:	
  2401                           
  2402                           ;time_scheduler.h: 173: keyValid = (PORTB & 0x08) >> 3;
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in _setMinutesEnd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2406  0A22  1283               	bcf	3,5	;RP0=0, select bank0
  2407  0A23  1303               	bcf	3,6	;RP1=0, select bank0
  2408  0A24  0806               	movf	6,w	;volatile
  2409  0A25  00C8               	movwf	??_setMinutesEnd
  2410  0A26  3003               	movlw	3
  2411  0A27                     u3825:	
  2412  0A27  1003               	clrc
  2413  0A28  0CC8               	rrf	??_setMinutesEnd,f
  2414  0A29  3EFF               	addlw	-1
  2415  0A2A  1D03               	skipz
  2416  0A2B  2A27               	goto	u3825
  2417  0A2C  0848               	movf	??_setMinutesEnd,w
  2418  0A2D  3901               	andlw	1
  2419  0A2E  00C9               	movwf	??_setMinutesEnd+1
  2420  0A2F  0849               	movf	??_setMinutesEnd+1,w
  2421  0A30  00ED               	movwf	_keyValid
  2422                           
  2423                           ;time_scheduler.h: 174: key = (PORTB & 0xF0) >> 4;
  2424  0A31  0806               	movf	6,w	;volatile
  2425  0A32  00C8               	movwf	??_setMinutesEnd
  2426  0A33  3004               	movlw	4
  2427  0A34                     u3835:	
  2428  0A34  1003               	clrc
  2429  0A35  0CC8               	rrf	??_setMinutesEnd,f
  2430  0A36  3EFF               	addlw	-1
  2431  0A37  1D03               	skipz
  2432  0A38  2A34               	goto	u3835
  2433  0A39  0848               	movf	??_setMinutesEnd,w
  2434  0A3A  390F               	andlw	15
  2435  0A3B  00C9               	movwf	??_setMinutesEnd+1
  2436  0A3C  0849               	movf	??_setMinutesEnd+1,w
  2437  0A3D  00EC               	movwf	_key
  2438                           
  2439                           ;time_scheduler.h: 176: _delay((unsigned long)((50)*(4000000/4000.0)));
  2440  0A3E  3041               	movlw	65
  2441  0A3F  00C9               	movwf	??_setMinutesEnd+1
  2442  0A40  30EE               	movlw	238
  2443  0A41  00C8               	movwf	??_setMinutesEnd
  2444  0A42                     u4337:	
  2445  0A42  0BC8               	decfsz	??_setMinutesEnd,f
  2446  0A43  2A42               	goto	u4337
  2447  0A44  0BC9               	decfsz	??_setMinutesEnd+1,f
  2448  0A45  2A42               	goto	u4337
  2449  0A46  0000               	nop
  2450                           
  2451                           ;time_scheduler.h: 178: if (keyValid && key != lastKeyState)
  2452  0A47  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0A48  1303               	bcf	3,6	;RP1=0, select bank0
  2454  0A49  086D               	movf	_keyValid,w
  2455  0A4A  1903               	btfsc	3,2
  2456  0A4B  2AC3               	goto	l2846
  2457  0A4C  086C               	movf	_key,w
  2458  0A4D  0667               	xorwf	_lastKeyState,w
  2459  0A4E  1903               	skipnz
  2460  0A4F  2AC3               	goto	l2846
  2461                           
  2462                           ;time_scheduler.h: 179: {
  2463                           ;time_scheduler.h: 180: if (key == 0b00000000)
  2464  0A50  08EC               	movf	_key,f
  2465  0A51  1D03               	skipz
  2466  0A52  2A6D               	goto	l2830
  2467                           
  2468                           ;time_scheduler.h: 181: {
  2469                           ;time_scheduler.h: 182: savedMinutesEnd = (savedMinutesEnd + 5) % 60;
  2470  0A53  303C               	movlw	60
  2471  0A54  00A0               	movwf	___awmod@divisor
  2472  0A55  3000               	movlw	0
  2473  0A56  00A1               	movwf	___awmod@divisor+1
  2474  0A57  086A               	movf	_savedMinutesEnd,w	;volatile
  2475  0A58  3E05               	addlw	5
  2476  0A59  00A2               	movwf	___awmod@dividend
  2477  0A5A  3000               	movlw	0
  2478  0A5B  1803               	skipnc
  2479  0A5C  3001               	movlw	1
  2480  0A5D  00A3               	movwf	___awmod@dividend+1
  2481  0A5E  160A  118A  2640  120A  158A  	fcall	___awmod
  2482  0A63  1283               	bcf	3,5	;RP0=0, select bank0
  2483  0A64  1303               	bcf	3,6	;RP1=0, select bank0
  2484  0A65  0820               	movf	?___awmod,w
  2485  0A66  00C8               	movwf	??_setMinutesEnd
  2486  0A67  0848               	movf	??_setMinutesEnd,w
  2487  0A68  00EA               	movwf	_savedMinutesEnd	;volatile
  2488                           
  2489                           ;time_scheduler.h: 183: sprintf(debugInfo, "INC: %02d", savedMinutesEnd);
  2490  0A69  30D4               	movlw	low (STR_9| (0+32768))
  2491  0A6A  00AE               	movwf	sprintf@f
  2492  0A6B  3090               	movlw	high (STR_9| (0+32768))
  2493  0A6C  2A96               	goto	L2
  2494  0A6D                     l2830:	
  2495                           ;time_scheduler.h: 184: }
  2496                           
  2497                           
  2498                           ;time_scheduler.h: 185: else if (key == 0b00001100)
  2499  0A6D  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0A6E  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0A6F  086C               	movf	_key,w
  2502  0A70  3A0C               	xorlw	12
  2503  0A71  1D03               	skipz
  2504  0A72  2A8D               	goto	l2836
  2505                           
  2506                           ;time_scheduler.h: 186: {
  2507                           ;time_scheduler.h: 187: savedMinutesEnd = (savedMinutesEnd - 5 + 60) % 60;
  2508  0A73  303C               	movlw	60
  2509  0A74  00A0               	movwf	___awmod@divisor
  2510  0A75  3000               	movlw	0
  2511  0A76  00A1               	movwf	___awmod@divisor+1
  2512  0A77  086A               	movf	_savedMinutesEnd,w	;volatile
  2513  0A78  3E37               	addlw	55
  2514  0A79  00A2               	movwf	___awmod@dividend
  2515  0A7A  3000               	movlw	0
  2516  0A7B  1803               	skipnc
  2517  0A7C  3001               	movlw	1
  2518  0A7D  00A3               	movwf	___awmod@dividend+1
  2519  0A7E  160A  118A  2640  120A  158A  	fcall	___awmod
  2520  0A83  1283               	bcf	3,5	;RP0=0, select bank0
  2521  0A84  1303               	bcf	3,6	;RP1=0, select bank0
  2522  0A85  0820               	movf	?___awmod,w
  2523  0A86  00C8               	movwf	??_setMinutesEnd
  2524  0A87  0848               	movf	??_setMinutesEnd,w
  2525  0A88  00EA               	movwf	_savedMinutesEnd	;volatile
  2526                           
  2527                           ;time_scheduler.h: 188: sprintf(debugInfo, "DEC: %02d", savedMinutesEnd);
  2528  0A89  30CA               	movlw	low (STR_10| (0+32768))
  2529  0A8A  00AE               	movwf	sprintf@f
  2530  0A8B  3090               	movlw	high (STR_10| (0+32768))
  2531  0A8C  2A96               	goto	L2
  2532  0A8D                     l2836:	
  2533                           ;time_scheduler.h: 189: }
  2534                           
  2535                           
  2536                           ;time_scheduler.h: 190: else if (key == 0b00001101)
  2537  0A8D  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0A8E  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0A8F  086C               	movf	_key,w
  2540  0A90  3A0D               	xorlw	13
  2541  0A91  1D03               	skipz
  2542  0A92  2AA4               	goto	l238
  2543                           
  2544                           ;time_scheduler.h: 191: {
  2545                           ;time_scheduler.h: 192: sprintf(debugInfo, "SET: %02d", savedMinutesEnd);
  2546  0A93  30DE               	movlw	low (STR_11| (0+32768))
  2547  0A94  00AE               	movwf	sprintf@f
  2548  0A95  3090               	movlw	high (STR_11| (0+32768))
  2549  0A96                     L2:	
  2550  0A96  00AF               	movwf	sprintf@f+1
  2551  0A97  086A               	movf	_savedMinutesEnd,w	;volatile
  2552  0A98  00C8               	movwf	??_setMinutesEnd
  2553  0A99  01C9               	clrf	??_setMinutesEnd+1
  2554  0A9A  0848               	movf	??_setMinutesEnd,w
  2555  0A9B  00B0               	movwf	?_sprintf+2
  2556  0A9C  0849               	movf	??_setMinutesEnd+1,w
  2557  0A9D  00B1               	movwf	?_sprintf+3
  2558  0A9E  30E4               	movlw	_debugInfo& (0+255)
  2559  0A9F  120A  158A  2601  120A  158A  	fcall	_sprintf
  2560  0AA4                     l238:	
  2561                           
  2562                           ;time_scheduler.h: 193: }
  2563                           ;time_scheduler.h: 195: printToLCD(debugInfo);
  2564  0AA4  30E4               	movlw	_debugInfo& (0+255)
  2565  0AA5  1283               	bcf	3,5	;RP0=0, select bank0
  2566  0AA6  1303               	bcf	3,6	;RP1=0, select bank0
  2567  0AA7  00A2               	movwf	printToLCD@str
  2568  0AA8  3000               	movlw	0
  2569  0AA9  00A3               	movwf	printToLCD@str+1
  2570  0AAA  160A  118A  23D6  120A  158A  	fcall	_printToLCD
  2571                           
  2572                           ;time_scheduler.h: 196: lastKeyState = key;
  2573  0AAF  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0AB0  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0AB1  086C               	movf	_key,w
  2576  0AB2  00C8               	movwf	??_setMinutesEnd
  2577  0AB3  0848               	movf	??_setMinutesEnd,w
  2578  0AB4  00E7               	movwf	_lastKeyState
  2579  0AB5                     l2844:	
  2580                           ;time_scheduler.h: 198: while ((PORTB & 0x08) != 0)
  2581                           
  2582  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  2583  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  2584  0AB7  1D86               	btfss	6,3	;volatile
  2585  0AB8  0008               	return
  2586                           
  2587                           ;time_scheduler.h: 199: {
  2588                           ;time_scheduler.h: 200: _delay((unsigned long)((10)*(4000000/4000.0)));
  2589  0AB9  300D               	movlw	13
  2590  0ABA  00C9               	movwf	??_setMinutesEnd+1
  2591  0ABB  30FB               	movlw	251
  2592  0ABC  00C8               	movwf	??_setMinutesEnd
  2593  0ABD                     u4347:	
  2594  0ABD  0BC8               	decfsz	??_setMinutesEnd,f
  2595  0ABE  2ABD               	goto	u4347
  2596  0ABF  0BC9               	decfsz	??_setMinutesEnd+1,f
  2597  0AC0  2ABD               	goto	u4347
  2598  0AC1  2AC2               	nop2
  2599  0AC2  2AB5               	goto	l2844
  2600  0AC3                     l2846:	
  2601                           ;time_scheduler.h: 201: }
  2602                           ;time_scheduler.h: 202: }
  2603                           
  2604                           
  2605                           ;time_scheduler.h: 203: else if (!keyValid)
  2606  0AC3  08ED               	movf	_keyValid,f
  2607  0AC4  1D03               	skipz
  2608  0AC5  0008               	return
  2609                           
  2610                           ;time_scheduler.h: 204: {
  2611                           ;time_scheduler.h: 205: lastKeyState = 0xFF;
  2612  0AC6  30FF               	movlw	255
  2613  0AC7  00C8               	movwf	??_setMinutesEnd
  2614  0AC8  0848               	movf	??_setMinutesEnd,w
  2615  0AC9  00E7               	movwf	_lastKeyState
  2616  0ACA  0008               	return
  2617  0ACB                     __end_of_setMinutesEnd:	
  2618                           
  2619                           	psect	text6
  2620  0979                     __ptext6:	
  2621 ;; *************** function _setHoursStart *****************
  2622 ;; Defined at:
  2623 ;;		line 56 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  2624 ;; Parameters:    Size  Location     Type
  2625 ;;		None
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;		None
  2628 ;; Return value:  Size  Location     Type
  2629 ;;		None               void
  2630 ;; Registers used:
  2631 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2632 ;; Tracked objects:
  2633 ;;		On entry : 0/0
  2634 ;;		On exit  : 0/0
  2635 ;;		Unchanged: 0/0
  2636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2637 ;;      Params:         0       0       0       0       0
  2638 ;;      Locals:         0       0       0       0       0
  2639 ;;      Temps:          0       2       0       0       0
  2640 ;;      Totals:         0       2       0       0       0
  2641 ;;Total ram usage:        2 bytes
  2642 ;; Hardware stack levels used:    1
  2643 ;; Hardware stack levels required when called:    4
  2644 ;; This function calls:
  2645 ;;		___awmod
  2646 ;;		_printToLCD
  2647 ;;		_sprintf
  2648 ;; This function is called by:
  2649 ;;		_main
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function _setHoursStart
  2655  0979                     _setHoursStart:	
  2656                           
  2657                           ;time_scheduler.h: 58: keyValid = (PORTB & 0x08) >> 3;
  2658                           
  2659                           ;incstack = 0
  2660                           ; Regs used in _setHoursStart: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2661  0979  1283               	bcf	3,5	;RP0=0, select bank0
  2662  097A  1303               	bcf	3,6	;RP1=0, select bank0
  2663  097B  0806               	movf	6,w	;volatile
  2664  097C  00C8               	movwf	??_setHoursStart
  2665  097D  3003               	movlw	3
  2666  097E                     u3555:	
  2667  097E  1003               	clrc
  2668  097F  0CC8               	rrf	??_setHoursStart,f
  2669  0980  3EFF               	addlw	-1
  2670  0981  1D03               	skipz
  2671  0982  297E               	goto	u3555
  2672  0983  0848               	movf	??_setHoursStart,w
  2673  0984  3901               	andlw	1
  2674  0985  00C9               	movwf	??_setHoursStart+1
  2675  0986  0849               	movf	??_setHoursStart+1,w
  2676  0987  00ED               	movwf	_keyValid
  2677                           
  2678                           ;time_scheduler.h: 59: key = (PORTB & 0xF0) >> 4;
  2679  0988  0806               	movf	6,w	;volatile
  2680  0989  00C8               	movwf	??_setHoursStart
  2681  098A  3004               	movlw	4
  2682  098B                     u3565:	
  2683  098B  1003               	clrc
  2684  098C  0CC8               	rrf	??_setHoursStart,f
  2685  098D  3EFF               	addlw	-1
  2686  098E  1D03               	skipz
  2687  098F  298B               	goto	u3565
  2688  0990  0848               	movf	??_setHoursStart,w
  2689  0991  390F               	andlw	15
  2690  0992  00C9               	movwf	??_setHoursStart+1
  2691  0993  0849               	movf	??_setHoursStart+1,w
  2692  0994  00EC               	movwf	_key
  2693                           
  2694                           ;time_scheduler.h: 61: _delay((unsigned long)((50)*(4000000/4000.0)));
  2695  0995  3041               	movlw	65
  2696  0996  00C9               	movwf	??_setHoursStart+1
  2697  0997  30EE               	movlw	238
  2698  0998  00C8               	movwf	??_setHoursStart
  2699  0999                     u4357:	
  2700  0999  0BC8               	decfsz	??_setHoursStart,f
  2701  099A  2999               	goto	u4357
  2702  099B  0BC9               	decfsz	??_setHoursStart+1,f
  2703  099C  2999               	goto	u4357
  2704  099D  0000               	nop
  2705                           
  2706                           ;time_scheduler.h: 63: if (keyValid && key != lastKeyState)
  2707  099E  1283               	bcf	3,5	;RP0=0, select bank0
  2708  099F  1303               	bcf	3,6	;RP1=0, select bank0
  2709  09A0  086D               	movf	_keyValid,w
  2710  09A1  1903               	btfsc	3,2
  2711  09A2  2A1A               	goto	l2744
  2712  09A3  086C               	movf	_key,w
  2713  09A4  0667               	xorwf	_lastKeyState,w
  2714  09A5  1903               	skipnz
  2715  09A6  2A1A               	goto	l2744
  2716                           
  2717                           ;time_scheduler.h: 64: {
  2718                           ;time_scheduler.h: 65: if (key == 0b00000000)
  2719  09A7  08EC               	movf	_key,f
  2720  09A8  1D03               	skipz
  2721  09A9  29C4               	goto	l2728
  2722                           
  2723                           ;time_scheduler.h: 66: {
  2724                           ;time_scheduler.h: 67: savedHoursStart = (savedHoursStart + 1) % 24;
  2725  09AA  3018               	movlw	24
  2726  09AB  00A0               	movwf	___awmod@divisor
  2727  09AC  3000               	movlw	0
  2728  09AD  00A1               	movwf	___awmod@divisor+1
  2729  09AE  0869               	movf	_savedHoursStart,w	;volatile
  2730  09AF  3E01               	addlw	1
  2731  09B0  00A2               	movwf	___awmod@dividend
  2732  09B1  3000               	movlw	0
  2733  09B2  1803               	skipnc
  2734  09B3  3001               	movlw	1
  2735  09B4  00A3               	movwf	___awmod@dividend+1
  2736  09B5  160A  118A  2640  120A  158A  	fcall	___awmod
  2737  09BA  1283               	bcf	3,5	;RP0=0, select bank0
  2738  09BB  1303               	bcf	3,6	;RP1=0, select bank0
  2739  09BC  0820               	movf	?___awmod,w
  2740  09BD  00C8               	movwf	??_setHoursStart
  2741  09BE  0848               	movf	??_setHoursStart,w
  2742  09BF  00E9               	movwf	_savedHoursStart	;volatile
  2743                           
  2744                           ;time_scheduler.h: 68: sprintf(debugInfo, "INC: %02d", savedHoursStart);
  2745  09C0  30D4               	movlw	low (STR_9| (0+32768))
  2746  09C1  00AE               	movwf	sprintf@f
  2747  09C2  3090               	movlw	high (STR_9| (0+32768))
  2748  09C3  29ED               	goto	L3
  2749  09C4                     l2728:	
  2750                           ;time_scheduler.h: 69: }
  2751                           
  2752                           
  2753                           ;time_scheduler.h: 70: else if (key == 0b00001100)
  2754  09C4  1283               	bcf	3,5	;RP0=0, select bank0
  2755  09C5  1303               	bcf	3,6	;RP1=0, select bank0
  2756  09C6  086C               	movf	_key,w
  2757  09C7  3A0C               	xorlw	12
  2758  09C8  1D03               	skipz
  2759  09C9  29E4               	goto	l2734
  2760                           
  2761                           ;time_scheduler.h: 71: {
  2762                           ;time_scheduler.h: 72: savedHoursStart = (savedHoursStart - 1 + 24) % 24;
  2763  09CA  3018               	movlw	24
  2764  09CB  00A0               	movwf	___awmod@divisor
  2765  09CC  3000               	movlw	0
  2766  09CD  00A1               	movwf	___awmod@divisor+1
  2767  09CE  0869               	movf	_savedHoursStart,w	;volatile
  2768  09CF  3E17               	addlw	23
  2769  09D0  00A2               	movwf	___awmod@dividend
  2770  09D1  3000               	movlw	0
  2771  09D2  1803               	skipnc
  2772  09D3  3001               	movlw	1
  2773  09D4  00A3               	movwf	___awmod@dividend+1
  2774  09D5  160A  118A  2640  120A  158A  	fcall	___awmod
  2775  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  2776  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  2777  09DC  0820               	movf	?___awmod,w
  2778  09DD  00C8               	movwf	??_setHoursStart
  2779  09DE  0848               	movf	??_setHoursStart,w
  2780  09DF  00E9               	movwf	_savedHoursStart	;volatile
  2781                           
  2782                           ;time_scheduler.h: 73: sprintf(debugInfo, "DEC: %02d", savedHoursStart);
  2783  09E0  30CA               	movlw	low (STR_10| (0+32768))
  2784  09E1  00AE               	movwf	sprintf@f
  2785  09E2  3090               	movlw	high (STR_10| (0+32768))
  2786  09E3  29ED               	goto	L3
  2787  09E4                     l2734:	
  2788                           ;time_scheduler.h: 74: }
  2789                           
  2790                           
  2791                           ;time_scheduler.h: 75: else if (key == 0b00001101)
  2792  09E4  1283               	bcf	3,5	;RP0=0, select bank0
  2793  09E5  1303               	bcf	3,6	;RP1=0, select bank0
  2794  09E6  086C               	movf	_key,w
  2795  09E7  3A0D               	xorlw	13
  2796  09E8  1D03               	skipz
  2797  09E9  29FB               	goto	l196
  2798                           
  2799                           ;time_scheduler.h: 76: {
  2800                           ;time_scheduler.h: 77: sprintf(debugInfo, "SET: %02d", savedHoursStart);
  2801  09EA  30DE               	movlw	low (STR_11| (0+32768))
  2802  09EB  00AE               	movwf	sprintf@f
  2803  09EC  3090               	movlw	high (STR_11| (0+32768))
  2804  09ED                     L3:	
  2805  09ED  00AF               	movwf	sprintf@f+1
  2806  09EE  0869               	movf	_savedHoursStart,w	;volatile
  2807  09EF  00C8               	movwf	??_setHoursStart
  2808  09F0  01C9               	clrf	??_setHoursStart+1
  2809  09F1  0848               	movf	??_setHoursStart,w
  2810  09F2  00B0               	movwf	?_sprintf+2
  2811  09F3  0849               	movf	??_setHoursStart+1,w
  2812  09F4  00B1               	movwf	?_sprintf+3
  2813  09F5  30E4               	movlw	_debugInfo& (0+255)
  2814  09F6  120A  158A  2601  120A  158A  	fcall	_sprintf
  2815  09FB                     l196:	
  2816                           
  2817                           ;time_scheduler.h: 79: }
  2818                           ;time_scheduler.h: 81: printToLCD(debugInfo);
  2819  09FB  30E4               	movlw	_debugInfo& (0+255)
  2820  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  2821  09FD  1303               	bcf	3,6	;RP1=0, select bank0
  2822  09FE  00A2               	movwf	printToLCD@str
  2823  09FF  3000               	movlw	0
  2824  0A00  00A3               	movwf	printToLCD@str+1
  2825  0A01  160A  118A  23D6  120A  158A  	fcall	_printToLCD
  2826                           
  2827                           ;time_scheduler.h: 82: lastKeyState = key;
  2828  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  2829  0A07  1303               	bcf	3,6	;RP1=0, select bank0
  2830  0A08  086C               	movf	_key,w
  2831  0A09  00C8               	movwf	??_setHoursStart
  2832  0A0A  0848               	movf	??_setHoursStart,w
  2833  0A0B  00E7               	movwf	_lastKeyState
  2834  0A0C                     l2742:	
  2835                           ;time_scheduler.h: 84: while ((PORTB & 0x08) != 0)
  2836                           
  2837  0A0C  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0A0D  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0A0E  1D86               	btfss	6,3	;volatile
  2840  0A0F  0008               	return
  2841                           
  2842                           ;time_scheduler.h: 85: {
  2843                           ;time_scheduler.h: 86: _delay((unsigned long)((10)*(4000000/4000.0)));
  2844  0A10  300D               	movlw	13
  2845  0A11  00C9               	movwf	??_setHoursStart+1
  2846  0A12  30FB               	movlw	251
  2847  0A13  00C8               	movwf	??_setHoursStart
  2848  0A14                     u4367:	
  2849  0A14  0BC8               	decfsz	??_setHoursStart,f
  2850  0A15  2A14               	goto	u4367
  2851  0A16  0BC9               	decfsz	??_setHoursStart+1,f
  2852  0A17  2A14               	goto	u4367
  2853  0A18  2A19               	nop2
  2854  0A19  2A0C               	goto	l2742
  2855  0A1A                     l2744:	
  2856                           ;time_scheduler.h: 87: }
  2857                           ;time_scheduler.h: 88: }
  2858                           
  2859                           
  2860                           ;time_scheduler.h: 89: else if (!keyValid)
  2861  0A1A  08ED               	movf	_keyValid,f
  2862  0A1B  1D03               	skipz
  2863  0A1C  0008               	return
  2864                           
  2865                           ;time_scheduler.h: 90: {
  2866                           ;time_scheduler.h: 91: lastKeyState = 0xFF;
  2867  0A1D  30FF               	movlw	255
  2868  0A1E  00C8               	movwf	??_setHoursStart
  2869  0A1F  0848               	movf	??_setHoursStart,w
  2870  0A20  00E7               	movwf	_lastKeyState
  2871  0A21  0008               	return
  2872  0A22                     __end_of_setHoursStart:	
  2873                           
  2874                           	psect	text7
  2875  08D0                     __ptext7:	
  2876 ;; *************** function _setHoursEnd *****************
  2877 ;; Defined at:
  2878 ;;		line 95 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;		None
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;		None
  2883 ;; Return value:  Size  Location     Type
  2884 ;;		None               void
  2885 ;; Registers used:
  2886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2892 ;;      Params:         0       0       0       0       0
  2893 ;;      Locals:         0       0       0       0       0
  2894 ;;      Temps:          0       2       0       0       0
  2895 ;;      Totals:         0       2       0       0       0
  2896 ;;Total ram usage:        2 bytes
  2897 ;; Hardware stack levels used:    1
  2898 ;; Hardware stack levels required when called:    4
  2899 ;; This function calls:
  2900 ;;		___awmod
  2901 ;;		_printToLCD
  2902 ;;		_sprintf
  2903 ;; This function is called by:
  2904 ;;		_main
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           
  2909                           ;psect for function _setHoursEnd
  2910  08D0                     _setHoursEnd:	
  2911                           
  2912                           ;time_scheduler.h: 97: keyValid = (PORTB & 0x08) >> 3;
  2913                           
  2914                           ;incstack = 0
  2915                           ; Regs used in _setHoursEnd: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2916  08D0  1283               	bcf	3,5	;RP0=0, select bank0
  2917  08D1  1303               	bcf	3,6	;RP1=0, select bank0
  2918  08D2  0806               	movf	6,w	;volatile
  2919  08D3  00C8               	movwf	??_setHoursEnd
  2920  08D4  3003               	movlw	3
  2921  08D5                     u3645:	
  2922  08D5  1003               	clrc
  2923  08D6  0CC8               	rrf	??_setHoursEnd,f
  2924  08D7  3EFF               	addlw	-1
  2925  08D8  1D03               	skipz
  2926  08D9  28D5               	goto	u3645
  2927  08DA  0848               	movf	??_setHoursEnd,w
  2928  08DB  3901               	andlw	1
  2929  08DC  00C9               	movwf	??_setHoursEnd+1
  2930  08DD  0849               	movf	??_setHoursEnd+1,w
  2931  08DE  00ED               	movwf	_keyValid
  2932                           
  2933                           ;time_scheduler.h: 98: key = (PORTB & 0xF0) >> 4;
  2934  08DF  0806               	movf	6,w	;volatile
  2935  08E0  00C8               	movwf	??_setHoursEnd
  2936  08E1  3004               	movlw	4
  2937  08E2                     u3655:	
  2938  08E2  1003               	clrc
  2939  08E3  0CC8               	rrf	??_setHoursEnd,f
  2940  08E4  3EFF               	addlw	-1
  2941  08E5  1D03               	skipz
  2942  08E6  28E2               	goto	u3655
  2943  08E7  0848               	movf	??_setHoursEnd,w
  2944  08E8  390F               	andlw	15
  2945  08E9  00C9               	movwf	??_setHoursEnd+1
  2946  08EA  0849               	movf	??_setHoursEnd+1,w
  2947  08EB  00EC               	movwf	_key
  2948                           
  2949                           ;time_scheduler.h: 100: _delay((unsigned long)((50)*(4000000/4000.0)));
  2950  08EC  3041               	movlw	65
  2951  08ED  00C9               	movwf	??_setHoursEnd+1
  2952  08EE  30EE               	movlw	238
  2953  08EF  00C8               	movwf	??_setHoursEnd
  2954  08F0                     u4377:	
  2955  08F0  0BC8               	decfsz	??_setHoursEnd,f
  2956  08F1  28F0               	goto	u4377
  2957  08F2  0BC9               	decfsz	??_setHoursEnd+1,f
  2958  08F3  28F0               	goto	u4377
  2959  08F4  0000               	nop
  2960                           
  2961                           ;time_scheduler.h: 102: if (keyValid && key != lastKeyState)
  2962  08F5  1283               	bcf	3,5	;RP0=0, select bank0
  2963  08F6  1303               	bcf	3,6	;RP1=0, select bank0
  2964  08F7  086D               	movf	_keyValid,w
  2965  08F8  1903               	btfsc	3,2
  2966  08F9  2971               	goto	l2778
  2967  08FA  086C               	movf	_key,w
  2968  08FB  0667               	xorwf	_lastKeyState,w
  2969  08FC  1903               	skipnz
  2970  08FD  2971               	goto	l2778
  2971                           
  2972                           ;time_scheduler.h: 103: {
  2973                           ;time_scheduler.h: 104: if (key == 0b00000000)
  2974  08FE  08EC               	movf	_key,f
  2975  08FF  1D03               	skipz
  2976  0900  291B               	goto	l2762
  2977                           
  2978                           ;time_scheduler.h: 105: {
  2979                           ;time_scheduler.h: 106: savedHoursEnd = (savedHoursEnd + 1) % 24;
  2980  0901  3018               	movlw	24
  2981  0902  00A0               	movwf	___awmod@divisor
  2982  0903  3000               	movlw	0
  2983  0904  00A1               	movwf	___awmod@divisor+1
  2984  0905  0868               	movf	_savedHoursEnd,w	;volatile
  2985  0906  3E01               	addlw	1
  2986  0907  00A2               	movwf	___awmod@dividend
  2987  0908  3000               	movlw	0
  2988  0909  1803               	skipnc
  2989  090A  3001               	movlw	1
  2990  090B  00A3               	movwf	___awmod@dividend+1
  2991  090C  160A  118A  2640  120A  158A  	fcall	___awmod
  2992  0911  1283               	bcf	3,5	;RP0=0, select bank0
  2993  0912  1303               	bcf	3,6	;RP1=0, select bank0
  2994  0913  0820               	movf	?___awmod,w
  2995  0914  00C8               	movwf	??_setHoursEnd
  2996  0915  0848               	movf	??_setHoursEnd,w
  2997  0916  00E8               	movwf	_savedHoursEnd	;volatile
  2998                           
  2999                           ;time_scheduler.h: 107: sprintf(debugInfo, "INC: %02d", savedHoursEnd);
  3000  0917  30D4               	movlw	low (STR_9| (0+32768))
  3001  0918  00AE               	movwf	sprintf@f
  3002  0919  3090               	movlw	high (STR_9| (0+32768))
  3003  091A  2944               	goto	L4
  3004  091B                     l2762:	
  3005                           ;time_scheduler.h: 108: }
  3006                           
  3007                           
  3008                           ;time_scheduler.h: 109: else if (key == 0b00001100)
  3009  091B  1283               	bcf	3,5	;RP0=0, select bank0
  3010  091C  1303               	bcf	3,6	;RP1=0, select bank0
  3011  091D  086C               	movf	_key,w
  3012  091E  3A0C               	xorlw	12
  3013  091F  1D03               	skipz
  3014  0920  293B               	goto	l2768
  3015                           
  3016                           ;time_scheduler.h: 110: {
  3017                           ;time_scheduler.h: 111: savedHoursEnd = (savedHoursEnd - 1 + 24) % 24;
  3018  0921  3018               	movlw	24
  3019  0922  00A0               	movwf	___awmod@divisor
  3020  0923  3000               	movlw	0
  3021  0924  00A1               	movwf	___awmod@divisor+1
  3022  0925  0868               	movf	_savedHoursEnd,w	;volatile
  3023  0926  3E17               	addlw	23
  3024  0927  00A2               	movwf	___awmod@dividend
  3025  0928  3000               	movlw	0
  3026  0929  1803               	skipnc
  3027  092A  3001               	movlw	1
  3028  092B  00A3               	movwf	___awmod@dividend+1
  3029  092C  160A  118A  2640  120A  158A  	fcall	___awmod
  3030  0931  1283               	bcf	3,5	;RP0=0, select bank0
  3031  0932  1303               	bcf	3,6	;RP1=0, select bank0
  3032  0933  0820               	movf	?___awmod,w
  3033  0934  00C8               	movwf	??_setHoursEnd
  3034  0935  0848               	movf	??_setHoursEnd,w
  3035  0936  00E8               	movwf	_savedHoursEnd	;volatile
  3036                           
  3037                           ;time_scheduler.h: 112: sprintf(debugInfo, "DEC: %02d", savedHoursEnd);
  3038  0937  30CA               	movlw	low (STR_10| (0+32768))
  3039  0938  00AE               	movwf	sprintf@f
  3040  0939  3090               	movlw	high (STR_10| (0+32768))
  3041  093A  2944               	goto	L4
  3042  093B                     l2768:	
  3043                           ;time_scheduler.h: 113: }
  3044                           
  3045                           
  3046                           ;time_scheduler.h: 114: else if (key == 0b00001101)
  3047  093B  1283               	bcf	3,5	;RP0=0, select bank0
  3048  093C  1303               	bcf	3,6	;RP1=0, select bank0
  3049  093D  086C               	movf	_key,w
  3050  093E  3A0D               	xorlw	13
  3051  093F  1D03               	skipz
  3052  0940  2952               	goto	l210
  3053                           
  3054                           ;time_scheduler.h: 115: {
  3055                           ;time_scheduler.h: 116: sprintf(debugInfo, "SET: %02d", savedHoursEnd);
  3056  0941  30DE               	movlw	low (STR_11| (0+32768))
  3057  0942  00AE               	movwf	sprintf@f
  3058  0943  3090               	movlw	high (STR_11| (0+32768))
  3059  0944                     L4:	
  3060  0944  00AF               	movwf	sprintf@f+1
  3061  0945  0868               	movf	_savedHoursEnd,w	;volatile
  3062  0946  00C8               	movwf	??_setHoursEnd
  3063  0947  01C9               	clrf	??_setHoursEnd+1
  3064  0948  0848               	movf	??_setHoursEnd,w
  3065  0949  00B0               	movwf	?_sprintf+2
  3066  094A  0849               	movf	??_setHoursEnd+1,w
  3067  094B  00B1               	movwf	?_sprintf+3
  3068  094C  30E4               	movlw	_debugInfo& (0+255)
  3069  094D  120A  158A  2601  120A  158A  	fcall	_sprintf
  3070  0952                     l210:	
  3071                           
  3072                           ;time_scheduler.h: 117: }
  3073                           ;time_scheduler.h: 119: printToLCD(debugInfo);
  3074  0952  30E4               	movlw	_debugInfo& (0+255)
  3075  0953  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0954  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0955  00A2               	movwf	printToLCD@str
  3078  0956  3000               	movlw	0
  3079  0957  00A3               	movwf	printToLCD@str+1
  3080  0958  160A  118A  23D6  120A  158A  	fcall	_printToLCD
  3081                           
  3082                           ;time_scheduler.h: 120: lastKeyState = key;
  3083  095D  1283               	bcf	3,5	;RP0=0, select bank0
  3084  095E  1303               	bcf	3,6	;RP1=0, select bank0
  3085  095F  086C               	movf	_key,w
  3086  0960  00C8               	movwf	??_setHoursEnd
  3087  0961  0848               	movf	??_setHoursEnd,w
  3088  0962  00E7               	movwf	_lastKeyState
  3089  0963                     l2776:	
  3090                           ;time_scheduler.h: 122: while ((PORTB & 0x08) != 0)
  3091                           
  3092  0963  1283               	bcf	3,5	;RP0=0, select bank0
  3093  0964  1303               	bcf	3,6	;RP1=0, select bank0
  3094  0965  1D86               	btfss	6,3	;volatile
  3095  0966  0008               	return
  3096                           
  3097                           ;time_scheduler.h: 123: {
  3098                           ;time_scheduler.h: 124: _delay((unsigned long)((10)*(4000000/4000.0)));
  3099  0967  300D               	movlw	13
  3100  0968  00C9               	movwf	??_setHoursEnd+1
  3101  0969  30FB               	movlw	251
  3102  096A  00C8               	movwf	??_setHoursEnd
  3103  096B                     u4387:	
  3104  096B  0BC8               	decfsz	??_setHoursEnd,f
  3105  096C  296B               	goto	u4387
  3106  096D  0BC9               	decfsz	??_setHoursEnd+1,f
  3107  096E  296B               	goto	u4387
  3108  096F  2970               	nop2
  3109  0970  2963               	goto	l2776
  3110  0971                     l2778:	
  3111                           ;time_scheduler.h: 125: }
  3112                           ;time_scheduler.h: 126: }
  3113                           
  3114                           
  3115                           ;time_scheduler.h: 127: else if (!keyValid)
  3116  0971  08ED               	movf	_keyValid,f
  3117  0972  1D03               	skipz
  3118  0973  0008               	return
  3119                           
  3120                           ;time_scheduler.h: 128: {
  3121                           ;time_scheduler.h: 129: lastKeyState = 0xFF;
  3122  0974  30FF               	movlw	255
  3123  0975  00C8               	movwf	??_setHoursEnd
  3124  0976  0848               	movf	??_setHoursEnd,w
  3125  0977  00E7               	movwf	_lastKeyState
  3126  0978  0008               	return
  3127  0979                     __end_of_setHoursEnd:	
  3128                           
  3129                           	psect	text8
  3130  1640                     __ptext8:	
  3131 ;; *************** function ___awmod *****************
  3132 ;; Defined at:
  3133 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  divisor         2    0[BANK0 ] int 
  3136 ;;  dividend        2    2[BANK0 ] int 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  sign            1    6[BANK0 ] unsigned char 
  3139 ;;  counter         1    5[BANK0 ] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  2    0[BANK0 ] int 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3149 ;;      Params:         0       4       0       0       0
  3150 ;;      Locals:         0       2       0       0       0
  3151 ;;      Temps:          0       1       0       0       0
  3152 ;;      Totals:         0       7       0       0       0
  3153 ;;Total ram usage:        7 bytes
  3154 ;; Hardware stack levels used:    1
  3155 ;; Hardware stack levels required when called:    2
  3156 ;; This function calls:
  3157 ;;		Nothing
  3158 ;; This function is called by:
  3159 ;;		_setHoursStart
  3160 ;;		_setHoursEnd
  3161 ;;		_setMinutesStart
  3162 ;;		_setMinutesEnd
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           
  3167                           ;psect for function ___awmod
  3168  1640                     ___awmod:	
  3169                           
  3170                           ;incstack = 0
  3171                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3172  1640  1283               	bcf	3,5	;RP0=0, select bank0
  3173  1641  1303               	bcf	3,6	;RP1=0, select bank0
  3174  1642  01A6               	clrf	___awmod@sign
  3175  1643  1FA3               	btfss	___awmod@dividend+1,7
  3176  1644  2E4C               	goto	l2548
  3177  1645  09A2               	comf	___awmod@dividend,f
  3178  1646  09A3               	comf	___awmod@dividend+1,f
  3179  1647  0AA2               	incf	___awmod@dividend,f
  3180  1648  1903               	skipnz
  3181  1649  0AA3               	incf	___awmod@dividend+1,f
  3182  164A  01A6               	clrf	___awmod@sign
  3183  164B  0AA6               	incf	___awmod@sign,f
  3184  164C                     l2548:	
  3185  164C  1FA1               	btfss	___awmod@divisor+1,7
  3186  164D  2E53               	goto	l2552
  3187  164E  09A0               	comf	___awmod@divisor,f
  3188  164F  09A1               	comf	___awmod@divisor+1,f
  3189  1650  0AA0               	incf	___awmod@divisor,f
  3190  1651  1903               	skipnz
  3191  1652  0AA1               	incf	___awmod@divisor+1,f
  3192  1653                     l2552:	
  3193  1653  0821               	movf	___awmod@divisor+1,w
  3194  1654  0420               	iorwf	___awmod@divisor,w
  3195  1655  1903               	skipnz
  3196  1656  2E80               	goto	l2570
  3197  1657  01A5               	clrf	___awmod@counter
  3198  1658  0AA5               	incf	___awmod@counter,f
  3199  1659                     l2560:	
  3200  1659  1BA1               	btfsc	___awmod@divisor+1,7
  3201  165A  2E67               	goto	l2562
  3202  165B  3001               	movlw	1
  3203  165C                     u3265:	
  3204  165C  1003               	clrc
  3205  165D  0DA0               	rlf	___awmod@divisor,f
  3206  165E  0DA1               	rlf	___awmod@divisor+1,f
  3207  165F  3EFF               	addlw	-1
  3208  1660  1D03               	skipz
  3209  1661  2E5C               	goto	u3265
  3210  1662  3001               	movlw	1
  3211  1663  00A4               	movwf	??___awmod
  3212  1664  0824               	movf	??___awmod,w
  3213  1665  07A5               	addwf	___awmod@counter,f
  3214  1666  2E59               	goto	l2560
  3215  1667                     l2562:	
  3216  1667  0821               	movf	___awmod@divisor+1,w
  3217  1668  0223               	subwf	___awmod@dividend+1,w
  3218  1669  1D03               	skipz
  3219  166A  2E6D               	goto	u3285
  3220  166B  0820               	movf	___awmod@divisor,w
  3221  166C  0222               	subwf	___awmod@dividend,w
  3222  166D                     u3285:	
  3223  166D  1C03               	skipc
  3224  166E  2E75               	goto	l2566
  3225  166F  0820               	movf	___awmod@divisor,w
  3226  1670  02A2               	subwf	___awmod@dividend,f
  3227  1671  0821               	movf	___awmod@divisor+1,w
  3228  1672  1C03               	skipc
  3229  1673  03A3               	decf	___awmod@dividend+1,f
  3230  1674  02A3               	subwf	___awmod@dividend+1,f
  3231  1675                     l2566:	
  3232  1675  3001               	movlw	1
  3233  1676                     u3295:	
  3234  1676  1003               	clrc
  3235  1677  0CA1               	rrf	___awmod@divisor+1,f
  3236  1678  0CA0               	rrf	___awmod@divisor,f
  3237  1679  3EFF               	addlw	-1
  3238  167A  1D03               	skipz
  3239  167B  2E76               	goto	u3295
  3240  167C  3001               	movlw	1
  3241  167D  02A5               	subwf	___awmod@counter,f
  3242  167E  1D03               	btfss	3,2
  3243  167F  2E67               	goto	l2562
  3244  1680                     l2570:	
  3245  1680  0826               	movf	___awmod@sign,w
  3246  1681  1903               	btfsc	3,2
  3247  1682  2E88               	goto	l2574
  3248  1683  09A2               	comf	___awmod@dividend,f
  3249  1684  09A3               	comf	___awmod@dividend+1,f
  3250  1685  0AA2               	incf	___awmod@dividend,f
  3251  1686  1903               	skipnz
  3252  1687  0AA3               	incf	___awmod@dividend+1,f
  3253  1688                     l2574:	
  3254  1688  0823               	movf	___awmod@dividend+1,w
  3255  1689  01A1               	clrf	?___awmod+1
  3256  168A  07A1               	addwf	?___awmod+1,f
  3257  168B  0822               	movf	___awmod@dividend,w
  3258  168C  01A0               	clrf	?___awmod
  3259  168D  07A0               	addwf	?___awmod,f
  3260  168E  0008               	return
  3261  168F                     __end_of___awmod:	
  3262                           
  3263                           	psect	text9
  3264  138D                     __ptext9:	
  3265 ;; *************** function _runMQ135 *****************
  3266 ;; Defined at:
  3267 ;;		line 32 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;		None
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0, pclath, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3281 ;;      Params:         0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0
  3284 ;;      Totals:         0       0       0       0       0
  3285 ;;Total ram usage:        0 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    5
  3288 ;; This function calls:
  3289 ;;		_CalcMQ135
  3290 ;;		_readADC
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           
  3297                           ;psect for function _runMQ135
  3298  138D                     _runMQ135:	
  3299                           
  3300                           ;mq135_module.h: 34: PPM = CalcMQ135(readADC(0));
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _runMQ135: [wreg+status,2+status,0+pclath+cstack]
  3304  138D  3000               	movlw	0
  3305  138E  160A  118A  2448  160A  118A  	fcall	_readADC
  3306  1393  1283               	bcf	3,5	;RP0=0, select bank0
  3307  1394  1303               	bcf	3,6	;RP1=0, select bank0
  3308  1395  0821               	movf	?_readADC+1,w
  3309  1396  01D2               	clrf	CalcMQ135@RAW_ADC+1
  3310  1397  07D2               	addwf	CalcMQ135@RAW_ADC+1,f
  3311  1398  0820               	movf	?_readADC,w
  3312  1399  01D1               	clrf	CalcMQ135@RAW_ADC
  3313  139A  07D1               	addwf	CalcMQ135@RAW_ADC,f
  3314  139B  120A  118A  2052   	fcall	_CalcMQ135
  3315  139E  1283               	bcf	3,5	;RP0=0, select bank0
  3316  139F  1303               	bcf	3,6	;RP1=0, select bank0
  3317  13A0  0851               	movf	?_CalcMQ135,w
  3318  13A1  1683               	bsf	3,5	;RP0=1, select bank1
  3319  13A2  1303               	bcf	3,6	;RP1=0, select bank1
  3320  13A3  00DC               	movwf	_PPM^(0+128)	;volatile
  3321  13A4  1283               	bcf	3,5	;RP0=0, select bank0
  3322  13A5  1303               	bcf	3,6	;RP1=0, select bank0
  3323  13A6  0852               	movf	?_CalcMQ135+1,w
  3324  13A7  1683               	bsf	3,5	;RP0=1, select bank1
  3325  13A8  1303               	bcf	3,6	;RP1=0, select bank1
  3326  13A9  00DD               	movwf	(_PPM+1)^(0+128)	;volatile
  3327  13AA  1283               	bcf	3,5	;RP0=0, select bank0
  3328  13AB  1303               	bcf	3,6	;RP1=0, select bank0
  3329  13AC  0853               	movf	?_CalcMQ135+2,w
  3330  13AD  1683               	bsf	3,5	;RP0=1, select bank1
  3331  13AE  1303               	bcf	3,6	;RP1=0, select bank1
  3332  13AF  00DE               	movwf	(_PPM+2)^(0+128)	;volatile
  3333  13B0  0008               	return
  3334  13B1                     __end_of_runMQ135:	
  3335                           
  3336                           	psect	text10
  3337  1448                     __ptext10:	
  3338 ;; *************** function _readADC *****************
  3339 ;; Defined at:
  3340 ;;		line 23 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\common_dependen
      +cies.h"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  channel         1    wreg     unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  channel         1    4[BANK0 ] unsigned char 
  3345 ;; Return value:  Size  Location     Type
  3346 ;;                  2    0[BANK0 ] int 
  3347 ;; Registers used:
  3348 ;;		wreg, status,2, status,0
  3349 ;; Tracked objects:
  3350 ;;		On entry : 0/0
  3351 ;;		On exit  : 0/0
  3352 ;;		Unchanged: 0/0
  3353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3354 ;;      Params:         0       2       0       0       0
  3355 ;;      Locals:         0       1       0       0       0
  3356 ;;      Temps:          0       2       0       0       0
  3357 ;;      Totals:         0       5       0       0       0
  3358 ;;Total ram usage:        5 bytes
  3359 ;; Hardware stack levels used:    1
  3360 ;; Hardware stack levels required when called:    2
  3361 ;; This function calls:
  3362 ;;		Nothing
  3363 ;; This function is called by:
  3364 ;;		_runMQ135
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           
  3369                           ;psect for function _readADC
  3370  1448                     _readADC:	
  3371                           
  3372                           ;incstack = 0
  3373                           ; Regs used in _readADC: [wreg+status,2+status,0]
  3374                           ;readADC@channel stored from wreg
  3375  1448  1283               	bcf	3,5	;RP0=0, select bank0
  3376  1449  1303               	bcf	3,6	;RP1=0, select bank0
  3377  144A  00A4               	movwf	readADC@channel
  3378                           
  3379                           ;common_dependencies.h: 25: ADCON0 &= 0xC3;
  3380  144B  30C3               	movlw	195
  3381  144C  00A2               	movwf	??_readADC
  3382  144D  0822               	movf	??_readADC,w
  3383  144E  059F               	andwf	31,f	;volatile
  3384                           
  3385                           ;common_dependencies.h: 26: ADCON0 |= (channel << 3);
  3386  144F  0824               	movf	readADC@channel,w
  3387  1450  00A2               	movwf	??_readADC
  3388  1451  3002               	movlw	2
  3389  1452                     u3105:	
  3390  1452  1003               	clrc
  3391  1453  0DA2               	rlf	??_readADC,f
  3392  1454  3EFF               	addlw	-1
  3393  1455  1D03               	skipz
  3394  1456  2C52               	goto	u3105
  3395  1457  1003               	clrc
  3396  1458  0D22               	rlf	??_readADC,w
  3397  1459  00A3               	movwf	??_readADC+1
  3398  145A  0823               	movf	??_readADC+1,w
  3399  145B  049F               	iorwf	31,f	;volatile
  3400                           
  3401                           ;common_dependencies.h: 27: _delay((unsigned long)((20)*(4000000/4000000.0)));
  3402  145C  3006               	movlw	6
  3403  145D  00A2               	movwf	??_readADC
  3404  145E                     u4397:	
  3405  145E  0BA2               	decfsz	??_readADC,f
  3406  145F  2C5E               	goto	u4397
  3407  1460  0000               	nop
  3408                           
  3409                           ;common_dependencies.h: 28: GO_DONE = 1;
  3410  1461  1283               	bcf	3,5	;RP0=0, select bank0
  3411  1462  1303               	bcf	3,6	;RP1=0, select bank0
  3412  1463  151F               	bsf	31,2	;volatile
  3413  1464                     l69:	
  3414                           ;common_dependencies.h: 30: ;
  3415                           
  3416                           ;common_dependencies.h: 29: while (GO_DONE)
  3417                           
  3418  1464  191F               	btfsc	31,2	;volatile
  3419  1465  2C64               	goto	l69
  3420                           
  3421                           ;common_dependencies.h: 31: return ((ADRESH << 8) + ADRESL);
  3422  1466  081E               	movf	30,w	;volatile
  3423  1467  01A1               	clrf	?_readADC+1
  3424  1468  07A1               	addwf	?_readADC+1,f
  3425  1469  1683               	bsf	3,5	;RP0=1, select bank1
  3426  146A  1303               	bcf	3,6	;RP1=0, select bank1
  3427  146B  081E               	movf	30,w	;volatile
  3428  146C  1283               	bcf	3,5	;RP0=0, select bank0
  3429  146D  1303               	bcf	3,6	;RP1=0, select bank0
  3430  146E  01A0               	clrf	?_readADC
  3431  146F  07A0               	addwf	?_readADC,f
  3432  1470  0008               	return
  3433  1471                     __end_of_readADC:	
  3434                           
  3435                           	psect	text11
  3436  0052                     __ptext11:	
  3437 ;; *************** function _CalcMQ135 *****************
  3438 ;; Defined at:
  3439 ;;		line 93 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  RAW_ADC         2   49[BANK0 ] int 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  ratio           3   36[BANK1 ] float 
  3444 ;;  co2             3   33[BANK1 ] float 
  3445 ;;  ratio5          3   30[BANK1 ] float 
  3446 ;;  ratio4          3   27[BANK1 ] float 
  3447 ;;  ratio3          3   24[BANK1 ] float 
  3448 ;;  ratio2          3   21[BANK1 ] float 
  3449 ;;  ratio6          3    3[BANK1 ] float 
  3450 ;;  voltage         3    0[BANK1 ] float 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  3   49[BANK0 ] float 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0, pclath, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3460 ;;      Params:         0       3       0       0       0
  3461 ;;      Locals:         0       0      39       0       0
  3462 ;;      Temps:          0       0       0       0       0
  3463 ;;      Totals:         0       3      39       0       0
  3464 ;;Total ram usage:       42 bytes
  3465 ;; Hardware stack levels used:    1
  3466 ;; Hardware stack levels required when called:    4
  3467 ;; This function calls:
  3468 ;;		___awtoft
  3469 ;;		___ftadd
  3470 ;;		___ftdiv
  3471 ;;		___ftmul
  3472 ;; This function is called by:
  3473 ;;		_runMQ135
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function _CalcMQ135
  3479  0052                     _CalcMQ135:	
  3480                           
  3481                           ;mq135_module.h: 95: float voltage = (RAW_ADC * 5.0) / 1023.0;
  3482                           
  3483                           ;incstack = 0
  3484                           ; Regs used in _CalcMQ135: [wreg+status,2+status,0+pclath+cstack]
  3485  0052  30C0               	movlw	192
  3486  0053  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0054  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0055  00C1               	movwf	___ftdiv@f2
  3489  0056  307F               	movlw	127
  3490  0057  00C2               	movwf	___ftdiv@f2+1
  3491  0058  3044               	movlw	68
  3492  0059  00C3               	movwf	___ftdiv@f2+2
  3493  005A  3000               	movlw	0
  3494  005B  00B1               	movwf	___ftmul@f1
  3495  005C  30A0               	movlw	160
  3496  005D  00B2               	movwf	___ftmul@f1+1
  3497  005E  3040               	movlw	64
  3498  005F  00B3               	movwf	___ftmul@f1+2
  3499  0060  0852               	movf	CalcMQ135@RAW_ADC+1,w
  3500  0061  01A9               	clrf	___awtoft@c+1
  3501  0062  07A9               	addwf	___awtoft@c+1,f
  3502  0063  0851               	movf	CalcMQ135@RAW_ADC,w
  3503  0064  01A8               	clrf	___awtoft@c
  3504  0065  07A8               	addwf	___awtoft@c,f
  3505  0066  160A  118A  23B1  120A  118A  	fcall	___awtoft
  3506  006B  1283               	bcf	3,5	;RP0=0, select bank0
  3507  006C  1303               	bcf	3,6	;RP1=0, select bank0
  3508  006D  0828               	movf	?___awtoft,w
  3509  006E  00B4               	movwf	___ftmul@f2
  3510  006F  0829               	movf	?___awtoft+1,w
  3511  0070  00B5               	movwf	___ftmul@f2+1
  3512  0071  082A               	movf	?___awtoft+2,w
  3513  0072  00B6               	movwf	___ftmul@f2+2
  3514  0073  120A  158A  2425  120A  118A  	fcall	___ftmul
  3515  0078  1283               	bcf	3,5	;RP0=0, select bank0
  3516  0079  1303               	bcf	3,6	;RP1=0, select bank0
  3517  007A  0831               	movf	?___ftmul,w
  3518  007B  00C4               	movwf	___ftdiv@f1
  3519  007C  0832               	movf	?___ftmul+1,w
  3520  007D  00C5               	movwf	___ftdiv@f1+1
  3521  007E  0833               	movf	?___ftmul+2,w
  3522  007F  00C6               	movwf	___ftdiv@f1+2
  3523  0080  120A  118A  273C  120A  118A  	fcall	___ftdiv
  3524  0085  1283               	bcf	3,5	;RP0=0, select bank0
  3525  0086  1303               	bcf	3,6	;RP1=0, select bank0
  3526  0087  0841               	movf	?___ftdiv,w
  3527  0088  1683               	bsf	3,5	;RP0=1, select bank1
  3528  0089  1303               	bcf	3,6	;RP1=0, select bank1
  3529  008A  00A0               	movwf	CalcMQ135@voltage^(0+128)
  3530  008B  1283               	bcf	3,5	;RP0=0, select bank0
  3531  008C  1303               	bcf	3,6	;RP1=0, select bank0
  3532  008D  0842               	movf	?___ftdiv+1,w
  3533  008E  1683               	bsf	3,5	;RP0=1, select bank1
  3534  008F  1303               	bcf	3,6	;RP1=0, select bank1
  3535  0090  00A1               	movwf	(CalcMQ135@voltage+1)^(0+128)
  3536  0091  1283               	bcf	3,5	;RP0=0, select bank0
  3537  0092  1303               	bcf	3,6	;RP1=0, select bank0
  3538  0093  0843               	movf	?___ftdiv+2,w
  3539  0094  1683               	bsf	3,5	;RP0=1, select bank1
  3540  0095  1303               	bcf	3,6	;RP1=0, select bank1
  3541  0096  00A2               	movwf	(CalcMQ135@voltage+2)^(0+128)
  3542                           
  3543                           ;mq135_module.h: 96: float ratio = voltage / 5.0;
  3544  0097  3000               	movlw	0
  3545  0098  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0099  1303               	bcf	3,6	;RP1=0, select bank0
  3547  009A  00C1               	movwf	___ftdiv@f2
  3548  009B  30A0               	movlw	160
  3549  009C  00C2               	movwf	___ftdiv@f2+1
  3550  009D  3040               	movlw	64
  3551  009E  00C3               	movwf	___ftdiv@f2+2
  3552  009F  1683               	bsf	3,5	;RP0=1, select bank1
  3553  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  3554  00A1  0820               	movf	CalcMQ135@voltage^(0+128),w
  3555  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  3556  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  3557  00A4  00C4               	movwf	___ftdiv@f1
  3558  00A5  1683               	bsf	3,5	;RP0=1, select bank1
  3559  00A6  1303               	bcf	3,6	;RP1=0, select bank1
  3560  00A7  0821               	movf	(CalcMQ135@voltage+1)^(0+128),w
  3561  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  3562  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  3563  00AA  00C5               	movwf	___ftdiv@f1+1
  3564  00AB  1683               	bsf	3,5	;RP0=1, select bank1
  3565  00AC  1303               	bcf	3,6	;RP1=0, select bank1
  3566  00AD  0822               	movf	(CalcMQ135@voltage+2)^(0+128),w
  3567  00AE  1283               	bcf	3,5	;RP0=0, select bank0
  3568  00AF  1303               	bcf	3,6	;RP1=0, select bank0
  3569  00B0  00C6               	movwf	___ftdiv@f1+2
  3570  00B1  120A  118A  273C  120A  118A  	fcall	___ftdiv
  3571  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  3572  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  3573  00B8  0841               	movf	?___ftdiv,w
  3574  00B9  1683               	bsf	3,5	;RP0=1, select bank1
  3575  00BA  1303               	bcf	3,6	;RP1=0, select bank1
  3576  00BB  00C4               	movwf	CalcMQ135@ratio^(0+128)
  3577  00BC  1283               	bcf	3,5	;RP0=0, select bank0
  3578  00BD  1303               	bcf	3,6	;RP1=0, select bank0
  3579  00BE  0842               	movf	?___ftdiv+1,w
  3580  00BF  1683               	bsf	3,5	;RP0=1, select bank1
  3581  00C0  1303               	bcf	3,6	;RP1=0, select bank1
  3582  00C1  00C5               	movwf	(CalcMQ135@ratio+1)^(0+128)
  3583  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  3584  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  3585  00C4  0843               	movf	?___ftdiv+2,w
  3586  00C5  1683               	bsf	3,5	;RP0=1, select bank1
  3587  00C6  1303               	bcf	3,6	;RP1=0, select bank1
  3588  00C7  00C6               	movwf	(CalcMQ135@ratio+2)^(0+128)
  3589                           
  3590                           ;mq135_module.h: 99: float ratio2 = ratio * ratio;
  3591  00C8  0844               	movf	CalcMQ135@ratio^(0+128),w
  3592  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  3593  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  3594  00CB  00B1               	movwf	___ftmul@f1
  3595  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  3596  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  3597  00CE  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3598  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  3599  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  3600  00D1  00B2               	movwf	___ftmul@f1+1
  3601  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  3602  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  3603  00D4  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3604  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  3605  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  3606  00D7  00B3               	movwf	___ftmul@f1+2
  3607  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  3608  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  3609  00DA  0844               	movf	CalcMQ135@ratio^(0+128),w
  3610  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  3611  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  3612  00DD  00B4               	movwf	___ftmul@f2
  3613  00DE  1683               	bsf	3,5	;RP0=1, select bank1
  3614  00DF  1303               	bcf	3,6	;RP1=0, select bank1
  3615  00E0  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3616  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  3617  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  3618  00E3  00B5               	movwf	___ftmul@f2+1
  3619  00E4  1683               	bsf	3,5	;RP0=1, select bank1
  3620  00E5  1303               	bcf	3,6	;RP1=0, select bank1
  3621  00E6  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3622  00E7  1283               	bcf	3,5	;RP0=0, select bank0
  3623  00E8  1303               	bcf	3,6	;RP1=0, select bank0
  3624  00E9  00B6               	movwf	___ftmul@f2+2
  3625  00EA  120A  158A  2425  120A  118A  	fcall	___ftmul
  3626  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  3627  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  3628  00F1  0831               	movf	?___ftmul,w
  3629  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  3630  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  3631  00F4  00B5               	movwf	CalcMQ135@ratio2^(0+128)
  3632  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  3633  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  3634  00F7  0832               	movf	?___ftmul+1,w
  3635  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  3636  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  3637  00FA  00B6               	movwf	(CalcMQ135@ratio2+1)^(0+128)
  3638  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  3639  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  3640  00FD  0833               	movf	?___ftmul+2,w
  3641  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  3642  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  3643  0100  00B7               	movwf	(CalcMQ135@ratio2+2)^(0+128)
  3644                           
  3645                           ;mq135_module.h: 100: float ratio3 = ratio2 * ratio;
  3646  0101  0844               	movf	CalcMQ135@ratio^(0+128),w
  3647  0102  1283               	bcf	3,5	;RP0=0, select bank0
  3648  0103  1303               	bcf	3,6	;RP1=0, select bank0
  3649  0104  00B1               	movwf	___ftmul@f1
  3650  0105  1683               	bsf	3,5	;RP0=1, select bank1
  3651  0106  1303               	bcf	3,6	;RP1=0, select bank1
  3652  0107  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3653  0108  1283               	bcf	3,5	;RP0=0, select bank0
  3654  0109  1303               	bcf	3,6	;RP1=0, select bank0
  3655  010A  00B2               	movwf	___ftmul@f1+1
  3656  010B  1683               	bsf	3,5	;RP0=1, select bank1
  3657  010C  1303               	bcf	3,6	;RP1=0, select bank1
  3658  010D  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3659  010E  1283               	bcf	3,5	;RP0=0, select bank0
  3660  010F  1303               	bcf	3,6	;RP1=0, select bank0
  3661  0110  00B3               	movwf	___ftmul@f1+2
  3662  0111  1683               	bsf	3,5	;RP0=1, select bank1
  3663  0112  1303               	bcf	3,6	;RP1=0, select bank1
  3664  0113  0835               	movf	CalcMQ135@ratio2^(0+128),w
  3665  0114  1283               	bcf	3,5	;RP0=0, select bank0
  3666  0115  1303               	bcf	3,6	;RP1=0, select bank0
  3667  0116  00B4               	movwf	___ftmul@f2
  3668  0117  1683               	bsf	3,5	;RP0=1, select bank1
  3669  0118  1303               	bcf	3,6	;RP1=0, select bank1
  3670  0119  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  3671  011A  1283               	bcf	3,5	;RP0=0, select bank0
  3672  011B  1303               	bcf	3,6	;RP1=0, select bank0
  3673  011C  00B5               	movwf	___ftmul@f2+1
  3674  011D  1683               	bsf	3,5	;RP0=1, select bank1
  3675  011E  1303               	bcf	3,6	;RP1=0, select bank1
  3676  011F  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  3677  0120  1283               	bcf	3,5	;RP0=0, select bank0
  3678  0121  1303               	bcf	3,6	;RP1=0, select bank0
  3679  0122  00B6               	movwf	___ftmul@f2+2
  3680  0123  120A  158A  2425  120A  118A  	fcall	___ftmul
  3681  0128  1283               	bcf	3,5	;RP0=0, select bank0
  3682  0129  1303               	bcf	3,6	;RP1=0, select bank0
  3683  012A  0831               	movf	?___ftmul,w
  3684  012B  1683               	bsf	3,5	;RP0=1, select bank1
  3685  012C  1303               	bcf	3,6	;RP1=0, select bank1
  3686  012D  00B8               	movwf	CalcMQ135@ratio3^(0+128)
  3687  012E  1283               	bcf	3,5	;RP0=0, select bank0
  3688  012F  1303               	bcf	3,6	;RP1=0, select bank0
  3689  0130  0832               	movf	?___ftmul+1,w
  3690  0131  1683               	bsf	3,5	;RP0=1, select bank1
  3691  0132  1303               	bcf	3,6	;RP1=0, select bank1
  3692  0133  00B9               	movwf	(CalcMQ135@ratio3+1)^(0+128)
  3693  0134  1283               	bcf	3,5	;RP0=0, select bank0
  3694  0135  1303               	bcf	3,6	;RP1=0, select bank0
  3695  0136  0833               	movf	?___ftmul+2,w
  3696  0137  1683               	bsf	3,5	;RP0=1, select bank1
  3697  0138  1303               	bcf	3,6	;RP1=0, select bank1
  3698  0139  00BA               	movwf	(CalcMQ135@ratio3+2)^(0+128)
  3699                           
  3700                           ;mq135_module.h: 101: float ratio4 = ratio3 * ratio;
  3701  013A  0844               	movf	CalcMQ135@ratio^(0+128),w
  3702  013B  1283               	bcf	3,5	;RP0=0, select bank0
  3703  013C  1303               	bcf	3,6	;RP1=0, select bank0
  3704  013D  00B1               	movwf	___ftmul@f1
  3705  013E  1683               	bsf	3,5	;RP0=1, select bank1
  3706  013F  1303               	bcf	3,6	;RP1=0, select bank1
  3707  0140  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3708  0141  1283               	bcf	3,5	;RP0=0, select bank0
  3709  0142  1303               	bcf	3,6	;RP1=0, select bank0
  3710  0143  00B2               	movwf	___ftmul@f1+1
  3711  0144  1683               	bsf	3,5	;RP0=1, select bank1
  3712  0145  1303               	bcf	3,6	;RP1=0, select bank1
  3713  0146  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3714  0147  1283               	bcf	3,5	;RP0=0, select bank0
  3715  0148  1303               	bcf	3,6	;RP1=0, select bank0
  3716  0149  00B3               	movwf	___ftmul@f1+2
  3717  014A  1683               	bsf	3,5	;RP0=1, select bank1
  3718  014B  1303               	bcf	3,6	;RP1=0, select bank1
  3719  014C  0838               	movf	CalcMQ135@ratio3^(0+128),w
  3720  014D  1283               	bcf	3,5	;RP0=0, select bank0
  3721  014E  1303               	bcf	3,6	;RP1=0, select bank0
  3722  014F  00B4               	movwf	___ftmul@f2
  3723  0150  1683               	bsf	3,5	;RP0=1, select bank1
  3724  0151  1303               	bcf	3,6	;RP1=0, select bank1
  3725  0152  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  3726  0153  1283               	bcf	3,5	;RP0=0, select bank0
  3727  0154  1303               	bcf	3,6	;RP1=0, select bank0
  3728  0155  00B5               	movwf	___ftmul@f2+1
  3729  0156  1683               	bsf	3,5	;RP0=1, select bank1
  3730  0157  1303               	bcf	3,6	;RP1=0, select bank1
  3731  0158  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  3732  0159  1283               	bcf	3,5	;RP0=0, select bank0
  3733  015A  1303               	bcf	3,6	;RP1=0, select bank0
  3734  015B  00B6               	movwf	___ftmul@f2+2
  3735  015C  120A  158A  2425  120A  118A  	fcall	___ftmul
  3736  0161  1283               	bcf	3,5	;RP0=0, select bank0
  3737  0162  1303               	bcf	3,6	;RP1=0, select bank0
  3738  0163  0831               	movf	?___ftmul,w
  3739  0164  1683               	bsf	3,5	;RP0=1, select bank1
  3740  0165  1303               	bcf	3,6	;RP1=0, select bank1
  3741  0166  00BB               	movwf	CalcMQ135@ratio4^(0+128)
  3742  0167  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0168  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0169  0832               	movf	?___ftmul+1,w
  3745  016A  1683               	bsf	3,5	;RP0=1, select bank1
  3746  016B  1303               	bcf	3,6	;RP1=0, select bank1
  3747  016C  00BC               	movwf	(CalcMQ135@ratio4+1)^(0+128)
  3748  016D  1283               	bcf	3,5	;RP0=0, select bank0
  3749  016E  1303               	bcf	3,6	;RP1=0, select bank0
  3750  016F  0833               	movf	?___ftmul+2,w
  3751  0170  1683               	bsf	3,5	;RP0=1, select bank1
  3752  0171  1303               	bcf	3,6	;RP1=0, select bank1
  3753  0172  00BD               	movwf	(CalcMQ135@ratio4+2)^(0+128)
  3754                           
  3755                           ;mq135_module.h: 102: float ratio5 = ratio4 * ratio;
  3756  0173  0844               	movf	CalcMQ135@ratio^(0+128),w
  3757  0174  1283               	bcf	3,5	;RP0=0, select bank0
  3758  0175  1303               	bcf	3,6	;RP1=0, select bank0
  3759  0176  00B1               	movwf	___ftmul@f1
  3760  0177  1683               	bsf	3,5	;RP0=1, select bank1
  3761  0178  1303               	bcf	3,6	;RP1=0, select bank1
  3762  0179  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3763  017A  1283               	bcf	3,5	;RP0=0, select bank0
  3764  017B  1303               	bcf	3,6	;RP1=0, select bank0
  3765  017C  00B2               	movwf	___ftmul@f1+1
  3766  017D  1683               	bsf	3,5	;RP0=1, select bank1
  3767  017E  1303               	bcf	3,6	;RP1=0, select bank1
  3768  017F  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3769  0180  1283               	bcf	3,5	;RP0=0, select bank0
  3770  0181  1303               	bcf	3,6	;RP1=0, select bank0
  3771  0182  00B3               	movwf	___ftmul@f1+2
  3772  0183  1683               	bsf	3,5	;RP0=1, select bank1
  3773  0184  1303               	bcf	3,6	;RP1=0, select bank1
  3774  0185  083B               	movf	CalcMQ135@ratio4^(0+128),w
  3775  0186  1283               	bcf	3,5	;RP0=0, select bank0
  3776  0187  1303               	bcf	3,6	;RP1=0, select bank0
  3777  0188  00B4               	movwf	___ftmul@f2
  3778  0189  1683               	bsf	3,5	;RP0=1, select bank1
  3779  018A  1303               	bcf	3,6	;RP1=0, select bank1
  3780  018B  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  3781  018C  1283               	bcf	3,5	;RP0=0, select bank0
  3782  018D  1303               	bcf	3,6	;RP1=0, select bank0
  3783  018E  00B5               	movwf	___ftmul@f2+1
  3784  018F  1683               	bsf	3,5	;RP0=1, select bank1
  3785  0190  1303               	bcf	3,6	;RP1=0, select bank1
  3786  0191  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  3787  0192  1283               	bcf	3,5	;RP0=0, select bank0
  3788  0193  1303               	bcf	3,6	;RP1=0, select bank0
  3789  0194  00B6               	movwf	___ftmul@f2+2
  3790  0195  120A  158A  2425  120A  118A  	fcall	___ftmul
  3791  019A  1283               	bcf	3,5	;RP0=0, select bank0
  3792  019B  1303               	bcf	3,6	;RP1=0, select bank0
  3793  019C  0831               	movf	?___ftmul,w
  3794  019D  1683               	bsf	3,5	;RP0=1, select bank1
  3795  019E  1303               	bcf	3,6	;RP1=0, select bank1
  3796  019F  00BE               	movwf	CalcMQ135@ratio5^(0+128)
  3797  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  3798  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  3799  01A2  0832               	movf	?___ftmul+1,w
  3800  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  3801  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  3802  01A5  00BF               	movwf	(CalcMQ135@ratio5+1)^(0+128)
  3803  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  3804  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  3805  01A8  0833               	movf	?___ftmul+2,w
  3806  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  3807  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  3808  01AB  00C0               	movwf	(CalcMQ135@ratio5+2)^(0+128)
  3809                           
  3810                           ;mq135_module.h: 103: float ratio6 = ratio5 * ratio;
  3811  01AC  0844               	movf	CalcMQ135@ratio^(0+128),w
  3812  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  3813  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  3814  01AF  00B1               	movwf	___ftmul@f1
  3815  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  3816  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  3817  01B2  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3818  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  3819  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  3820  01B5  00B2               	movwf	___ftmul@f1+1
  3821  01B6  1683               	bsf	3,5	;RP0=1, select bank1
  3822  01B7  1303               	bcf	3,6	;RP1=0, select bank1
  3823  01B8  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3824  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  3825  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  3826  01BB  00B3               	movwf	___ftmul@f1+2
  3827  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  3828  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  3829  01BE  083E               	movf	CalcMQ135@ratio5^(0+128),w
  3830  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  3831  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  3832  01C1  00B4               	movwf	___ftmul@f2
  3833  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  3834  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  3835  01C4  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  3836  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  3837  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  3838  01C7  00B5               	movwf	___ftmul@f2+1
  3839  01C8  1683               	bsf	3,5	;RP0=1, select bank1
  3840  01C9  1303               	bcf	3,6	;RP1=0, select bank1
  3841  01CA  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  3842  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  3843  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  3844  01CD  00B6               	movwf	___ftmul@f2+2
  3845  01CE  120A  158A  2425  120A  118A  	fcall	___ftmul
  3846  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  3847  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  3848  01D5  0831               	movf	?___ftmul,w
  3849  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  3850  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  3851  01D8  00A3               	movwf	CalcMQ135@ratio6^(0+128)
  3852  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  3853  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  3854  01DB  0832               	movf	?___ftmul+1,w
  3855  01DC  1683               	bsf	3,5	;RP0=1, select bank1
  3856  01DD  1303               	bcf	3,6	;RP1=0, select bank1
  3857  01DE  00A4               	movwf	(CalcMQ135@ratio6+1)^(0+128)
  3858  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  3859  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  3860  01E1  0833               	movf	?___ftmul+2,w
  3861  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  3862  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  3863  01E4  00A5               	movwf	(CalcMQ135@ratio6+2)^(0+128)
  3864                           
  3865                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  3866                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  3867  01E5  309C               	movlw	156
  3868  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  3869  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  3870  01E8  00B1               	movwf	___ftmul@f1
  3871  01E9  30B2               	movlw	178
  3872  01EA  00B2               	movwf	___ftmul@f1+1
  3873  01EB  303F               	movlw	63
  3874  01EC  00B3               	movwf	___ftmul@f1+2
  3875  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  3876  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  3877  01EF  0835               	movf	CalcMQ135@ratio2^(0+128),w
  3878  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  3879  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  3880  01F2  00B4               	movwf	___ftmul@f2
  3881  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  3882  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  3883  01F5  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  3884  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  3885  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  3886  01F8  00B5               	movwf	___ftmul@f2+1
  3887  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  3888  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  3889  01FB  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  3890  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  3891  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  3892  01FE  00B6               	movwf	___ftmul@f2+2
  3893  01FF  120A  158A  2425  120A  118A  	fcall	___ftmul
  3894  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0206  0831               	movf	?___ftmul,w
  3897  0207  00C1               	movwf	___ftadd@f1
  3898  0208  0832               	movf	?___ftmul+1,w
  3899  0209  00C2               	movwf	___ftadd@f1+1
  3900  020A  0833               	movf	?___ftmul+2,w
  3901  020B  00C3               	movwf	___ftadd@f1+2
  3902  020C  30A9               	movlw	169
  3903  020D  00B1               	movwf	___ftmul@f1
  3904  020E  30DE               	movlw	222
  3905  020F  00B2               	movwf	___ftmul@f1+1
  3906  0210  303C               	movlw	60
  3907  0211  00B3               	movwf	___ftmul@f1+2
  3908  0212  1683               	bsf	3,5	;RP0=1, select bank1
  3909  0213  1303               	bcf	3,6	;RP1=0, select bank1
  3910  0214  0844               	movf	CalcMQ135@ratio^(0+128),w
  3911  0215  1283               	bcf	3,5	;RP0=0, select bank0
  3912  0216  1303               	bcf	3,6	;RP1=0, select bank0
  3913  0217  00B4               	movwf	___ftmul@f2
  3914  0218  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0219  1303               	bcf	3,6	;RP1=0, select bank1
  3916  021A  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  3917  021B  1283               	bcf	3,5	;RP0=0, select bank0
  3918  021C  1303               	bcf	3,6	;RP1=0, select bank0
  3919  021D  00B5               	movwf	___ftmul@f2+1
  3920  021E  1683               	bsf	3,5	;RP0=1, select bank1
  3921  021F  1303               	bcf	3,6	;RP1=0, select bank1
  3922  0220  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  3923  0221  1283               	bcf	3,5	;RP0=0, select bank0
  3924  0222  1303               	bcf	3,6	;RP1=0, select bank0
  3925  0223  00B6               	movwf	___ftmul@f2+2
  3926  0224  120A  158A  2425  120A  118A  	fcall	___ftmul
  3927  0229  1283               	bcf	3,5	;RP0=0, select bank0
  3928  022A  1303               	bcf	3,6	;RP1=0, select bank0
  3929  022B  0831               	movf	?___ftmul,w
  3930  022C  00C4               	movwf	___ftadd@f2
  3931  022D  0832               	movf	?___ftmul+1,w
  3932  022E  00C5               	movwf	___ftadd@f2+1
  3933  022F  0833               	movf	?___ftmul+2,w
  3934  0230  00C6               	movwf	___ftadd@f2+2
  3935  0231  120A  158A  24F8  120A  118A  	fcall	___ftadd
  3936  0236  1283               	bcf	3,5	;RP0=0, select bank0
  3937  0237  1303               	bcf	3,6	;RP1=0, select bank0
  3938  0238  0841               	movf	?___ftadd,w
  3939  0239  1683               	bsf	3,5	;RP0=1, select bank1
  3940  023A  1303               	bcf	3,6	;RP1=0, select bank1
  3941  023B  00A6               	movwf	_CalcMQ135$773^(0+128)
  3942  023C  1283               	bcf	3,5	;RP0=0, select bank0
  3943  023D  1303               	bcf	3,6	;RP1=0, select bank0
  3944  023E  0842               	movf	?___ftadd+1,w
  3945  023F  1683               	bsf	3,5	;RP0=1, select bank1
  3946  0240  1303               	bcf	3,6	;RP1=0, select bank1
  3947  0241  00A7               	movwf	(_CalcMQ135$773+1)^(0+128)
  3948  0242  1283               	bcf	3,5	;RP0=0, select bank0
  3949  0243  1303               	bcf	3,6	;RP1=0, select bank0
  3950  0244  0843               	movf	?___ftadd+2,w
  3951  0245  1683               	bsf	3,5	;RP0=1, select bank1
  3952  0246  1303               	bcf	3,6	;RP1=0, select bank1
  3953  0247  00A8               	movwf	(_CalcMQ135$773+2)^(0+128)
  3954                           
  3955                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  3956                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  3957  0248  30EE               	movlw	238
  3958  0249  1283               	bcf	3,5	;RP0=0, select bank0
  3959  024A  1303               	bcf	3,6	;RP1=0, select bank0
  3960  024B  00B1               	movwf	___ftmul@f1
  3961  024C  30EB               	movlw	235
  3962  024D  00B2               	movwf	___ftmul@f1+1
  3963  024E  303A               	movlw	58
  3964  024F  00B3               	movwf	___ftmul@f1+2
  3965  0250  1683               	bsf	3,5	;RP0=1, select bank1
  3966  0251  1303               	bcf	3,6	;RP1=0, select bank1
  3967  0252  0838               	movf	CalcMQ135@ratio3^(0+128),w
  3968  0253  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0254  1303               	bcf	3,6	;RP1=0, select bank0
  3970  0255  00B4               	movwf	___ftmul@f2
  3971  0256  1683               	bsf	3,5	;RP0=1, select bank1
  3972  0257  1303               	bcf	3,6	;RP1=0, select bank1
  3973  0258  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  3974  0259  1283               	bcf	3,5	;RP0=0, select bank0
  3975  025A  1303               	bcf	3,6	;RP1=0, select bank0
  3976  025B  00B5               	movwf	___ftmul@f2+1
  3977  025C  1683               	bsf	3,5	;RP0=1, select bank1
  3978  025D  1303               	bcf	3,6	;RP1=0, select bank1
  3979  025E  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  3980  025F  1283               	bcf	3,5	;RP0=0, select bank0
  3981  0260  1303               	bcf	3,6	;RP1=0, select bank0
  3982  0261  00B6               	movwf	___ftmul@f2+2
  3983  0262  120A  158A  2425  120A  118A  	fcall	___ftmul
  3984  0267  1283               	bcf	3,5	;RP0=0, select bank0
  3985  0268  1303               	bcf	3,6	;RP1=0, select bank0
  3986  0269  0831               	movf	?___ftmul,w
  3987  026A  00C1               	movwf	___ftadd@f1
  3988  026B  0832               	movf	?___ftmul+1,w
  3989  026C  00C2               	movwf	___ftadd@f1+1
  3990  026D  0833               	movf	?___ftmul+2,w
  3991  026E  00C3               	movwf	___ftadd@f1+2
  3992  026F  1683               	bsf	3,5	;RP0=1, select bank1
  3993  0270  1303               	bcf	3,6	;RP1=0, select bank1
  3994  0271  0826               	movf	_CalcMQ135$773^(0+128),w
  3995  0272  1283               	bcf	3,5	;RP0=0, select bank0
  3996  0273  1303               	bcf	3,6	;RP1=0, select bank0
  3997  0274  00C4               	movwf	___ftadd@f2
  3998  0275  1683               	bsf	3,5	;RP0=1, select bank1
  3999  0276  1303               	bcf	3,6	;RP1=0, select bank1
  4000  0277  0827               	movf	(_CalcMQ135$773+1)^(0+128),w
  4001  0278  1283               	bcf	3,5	;RP0=0, select bank0
  4002  0279  1303               	bcf	3,6	;RP1=0, select bank0
  4003  027A  00C5               	movwf	___ftadd@f2+1
  4004  027B  1683               	bsf	3,5	;RP0=1, select bank1
  4005  027C  1303               	bcf	3,6	;RP1=0, select bank1
  4006  027D  0828               	movf	(_CalcMQ135$773+2)^(0+128),w
  4007  027E  1283               	bcf	3,5	;RP0=0, select bank0
  4008  027F  1303               	bcf	3,6	;RP1=0, select bank0
  4009  0280  00C6               	movwf	___ftadd@f2+2
  4010  0281  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4011  0286  1283               	bcf	3,5	;RP0=0, select bank0
  4012  0287  1303               	bcf	3,6	;RP1=0, select bank0
  4013  0288  0841               	movf	?___ftadd,w
  4014  0289  1683               	bsf	3,5	;RP0=1, select bank1
  4015  028A  1303               	bcf	3,6	;RP1=0, select bank1
  4016  028B  00A9               	movwf	_CalcMQ135$774^(0+128)
  4017  028C  1283               	bcf	3,5	;RP0=0, select bank0
  4018  028D  1303               	bcf	3,6	;RP1=0, select bank0
  4019  028E  0842               	movf	?___ftadd+1,w
  4020  028F  1683               	bsf	3,5	;RP0=1, select bank1
  4021  0290  1303               	bcf	3,6	;RP1=0, select bank1
  4022  0291  00AA               	movwf	(_CalcMQ135$774+1)^(0+128)
  4023  0292  1283               	bcf	3,5	;RP0=0, select bank0
  4024  0293  1303               	bcf	3,6	;RP1=0, select bank0
  4025  0294  0843               	movf	?___ftadd+2,w
  4026  0295  1683               	bsf	3,5	;RP0=1, select bank1
  4027  0296  1303               	bcf	3,6	;RP1=0, select bank1
  4028  0297  00AB               	movwf	(_CalcMQ135$774+2)^(0+128)
  4029                           
  4030                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  4031                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  4032  0298  3074               	movlw	116
  4033  0299  1283               	bcf	3,5	;RP0=0, select bank0
  4034  029A  1303               	bcf	3,6	;RP1=0, select bank0
  4035  029B  00B1               	movwf	___ftmul@f1
  4036  029C  305A               	movlw	90
  4037  029D  00B2               	movwf	___ftmul@f1+1
  4038  029E  30BB               	movlw	187
  4039  029F  00B3               	movwf	___ftmul@f1+2
  4040  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  4041  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  4042  02A2  083B               	movf	CalcMQ135@ratio4^(0+128),w
  4043  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  4044  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  4045  02A5  00B4               	movwf	___ftmul@f2
  4046  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  4047  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  4048  02A8  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  4049  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  4050  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  4051  02AB  00B5               	movwf	___ftmul@f2+1
  4052  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  4053  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  4054  02AE  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  4055  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  4056  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  4057  02B1  00B6               	movwf	___ftmul@f2+2
  4058  02B2  120A  158A  2425  120A  118A  	fcall	___ftmul
  4059  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  4060  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  4061  02B9  0831               	movf	?___ftmul,w
  4062  02BA  00C1               	movwf	___ftadd@f1
  4063  02BB  0832               	movf	?___ftmul+1,w
  4064  02BC  00C2               	movwf	___ftadd@f1+1
  4065  02BD  0833               	movf	?___ftmul+2,w
  4066  02BE  00C3               	movwf	___ftadd@f1+2
  4067  02BF  1683               	bsf	3,5	;RP0=1, select bank1
  4068  02C0  1303               	bcf	3,6	;RP1=0, select bank1
  4069  02C1  0829               	movf	_CalcMQ135$774^(0+128),w
  4070  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  4071  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  4072  02C4  00C4               	movwf	___ftadd@f2
  4073  02C5  1683               	bsf	3,5	;RP0=1, select bank1
  4074  02C6  1303               	bcf	3,6	;RP1=0, select bank1
  4075  02C7  082A               	movf	(_CalcMQ135$774+1)^(0+128),w
  4076  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  4077  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  4078  02CA  00C5               	movwf	___ftadd@f2+1
  4079  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  4080  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  4081  02CD  082B               	movf	(_CalcMQ135$774+2)^(0+128),w
  4082  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  4083  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  4084  02D0  00C6               	movwf	___ftadd@f2+2
  4085  02D1  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4086  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  4087  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  4088  02D8  0841               	movf	?___ftadd,w
  4089  02D9  1683               	bsf	3,5	;RP0=1, select bank1
  4090  02DA  1303               	bcf	3,6	;RP1=0, select bank1
  4091  02DB  00AC               	movwf	_CalcMQ135$775^(0+128)
  4092  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  4093  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  4094  02DE  0842               	movf	?___ftadd+1,w
  4095  02DF  1683               	bsf	3,5	;RP0=1, select bank1
  4096  02E0  1303               	bcf	3,6	;RP1=0, select bank1
  4097  02E1  00AD               	movwf	(_CalcMQ135$775+1)^(0+128)
  4098  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  4099  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  4100  02E4  0843               	movf	?___ftadd+2,w
  4101  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  4102  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  4103  02E7  00AE               	movwf	(_CalcMQ135$775+2)^(0+128)
  4104                           
  4105                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  4106                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  4107  02E8  3010               	movlw	16
  4108  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  4109  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  4110  02EB  00B1               	movwf	___ftmul@f1
  4111  02EC  30FC               	movlw	252
  4112  02ED  00B2               	movwf	___ftmul@f1+1
  4113  02EE  30BA               	movlw	186
  4114  02EF  00B3               	movwf	___ftmul@f1+2
  4115  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  4116  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  4117  02F2  083E               	movf	CalcMQ135@ratio5^(0+128),w
  4118  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  4119  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  4120  02F5  00B4               	movwf	___ftmul@f2
  4121  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  4122  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  4123  02F8  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  4124  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  4125  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  4126  02FB  00B5               	movwf	___ftmul@f2+1
  4127  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  4128  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  4129  02FE  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  4130  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  4131  0300  1303               	bcf	3,6	;RP1=0, select bank0
  4132  0301  00B6               	movwf	___ftmul@f2+2
  4133  0302  120A  158A  2425  120A  118A  	fcall	___ftmul
  4134  0307  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0308  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0309  0831               	movf	?___ftmul,w
  4137  030A  00C1               	movwf	___ftadd@f1
  4138  030B  0832               	movf	?___ftmul+1,w
  4139  030C  00C2               	movwf	___ftadd@f1+1
  4140  030D  0833               	movf	?___ftmul+2,w
  4141  030E  00C3               	movwf	___ftadd@f1+2
  4142  030F  1683               	bsf	3,5	;RP0=1, select bank1
  4143  0310  1303               	bcf	3,6	;RP1=0, select bank1
  4144  0311  082C               	movf	_CalcMQ135$775^(0+128),w
  4145  0312  1283               	bcf	3,5	;RP0=0, select bank0
  4146  0313  1303               	bcf	3,6	;RP1=0, select bank0
  4147  0314  00C4               	movwf	___ftadd@f2
  4148  0315  1683               	bsf	3,5	;RP0=1, select bank1
  4149  0316  1303               	bcf	3,6	;RP1=0, select bank1
  4150  0317  082D               	movf	(_CalcMQ135$775+1)^(0+128),w
  4151  0318  1283               	bcf	3,5	;RP0=0, select bank0
  4152  0319  1303               	bcf	3,6	;RP1=0, select bank0
  4153  031A  00C5               	movwf	___ftadd@f2+1
  4154  031B  1683               	bsf	3,5	;RP0=1, select bank1
  4155  031C  1303               	bcf	3,6	;RP1=0, select bank1
  4156  031D  082E               	movf	(_CalcMQ135$775+2)^(0+128),w
  4157  031E  1283               	bcf	3,5	;RP0=0, select bank0
  4158  031F  1303               	bcf	3,6	;RP1=0, select bank0
  4159  0320  00C6               	movwf	___ftadd@f2+2
  4160  0321  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4161  0326  1283               	bcf	3,5	;RP0=0, select bank0
  4162  0327  1303               	bcf	3,6	;RP1=0, select bank0
  4163  0328  0841               	movf	?___ftadd,w
  4164  0329  1683               	bsf	3,5	;RP0=1, select bank1
  4165  032A  1303               	bcf	3,6	;RP1=0, select bank1
  4166  032B  00AF               	movwf	_CalcMQ135$776^(0+128)
  4167  032C  1283               	bcf	3,5	;RP0=0, select bank0
  4168  032D  1303               	bcf	3,6	;RP1=0, select bank0
  4169  032E  0842               	movf	?___ftadd+1,w
  4170  032F  1683               	bsf	3,5	;RP0=1, select bank1
  4171  0330  1303               	bcf	3,6	;RP1=0, select bank1
  4172  0331  00B0               	movwf	(_CalcMQ135$776+1)^(0+128)
  4173  0332  1283               	bcf	3,5	;RP0=0, select bank0
  4174  0333  1303               	bcf	3,6	;RP1=0, select bank0
  4175  0334  0843               	movf	?___ftadd+2,w
  4176  0335  1683               	bsf	3,5	;RP0=1, select bank1
  4177  0336  1303               	bcf	3,6	;RP1=0, select bank1
  4178  0337  00B1               	movwf	(_CalcMQ135$776+2)^(0+128)
  4179                           
  4180                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  4181                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  4182  0338  30A8               	movlw	168
  4183  0339  1283               	bcf	3,5	;RP0=0, select bank0
  4184  033A  1303               	bcf	3,6	;RP1=0, select bank0
  4185  033B  00B1               	movwf	___ftmul@f1
  4186  033C  3090               	movlw	144
  4187  033D  00B2               	movwf	___ftmul@f1+1
  4188  033E  303F               	movlw	63
  4189  033F  00B3               	movwf	___ftmul@f1+2
  4190  0340  1683               	bsf	3,5	;RP0=1, select bank1
  4191  0341  1303               	bcf	3,6	;RP1=0, select bank1
  4192  0342  0823               	movf	CalcMQ135@ratio6^(0+128),w
  4193  0343  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0344  1303               	bcf	3,6	;RP1=0, select bank0
  4195  0345  00B4               	movwf	___ftmul@f2
  4196  0346  1683               	bsf	3,5	;RP0=1, select bank1
  4197  0347  1303               	bcf	3,6	;RP1=0, select bank1
  4198  0348  0824               	movf	(CalcMQ135@ratio6+1)^(0+128),w
  4199  0349  1283               	bcf	3,5	;RP0=0, select bank0
  4200  034A  1303               	bcf	3,6	;RP1=0, select bank0
  4201  034B  00B5               	movwf	___ftmul@f2+1
  4202  034C  1683               	bsf	3,5	;RP0=1, select bank1
  4203  034D  1303               	bcf	3,6	;RP1=0, select bank1
  4204  034E  0825               	movf	(CalcMQ135@ratio6+2)^(0+128),w
  4205  034F  1283               	bcf	3,5	;RP0=0, select bank0
  4206  0350  1303               	bcf	3,6	;RP1=0, select bank0
  4207  0351  00B6               	movwf	___ftmul@f2+2
  4208  0352  120A  158A  2425  120A  118A  	fcall	___ftmul
  4209  0357  1283               	bcf	3,5	;RP0=0, select bank0
  4210  0358  1303               	bcf	3,6	;RP1=0, select bank0
  4211  0359  0831               	movf	?___ftmul,w
  4212  035A  00C1               	movwf	___ftadd@f1
  4213  035B  0832               	movf	?___ftmul+1,w
  4214  035C  00C2               	movwf	___ftadd@f1+1
  4215  035D  0833               	movf	?___ftmul+2,w
  4216  035E  00C3               	movwf	___ftadd@f1+2
  4217  035F  1683               	bsf	3,5	;RP0=1, select bank1
  4218  0360  1303               	bcf	3,6	;RP1=0, select bank1
  4219  0361  082F               	movf	_CalcMQ135$776^(0+128),w
  4220  0362  1283               	bcf	3,5	;RP0=0, select bank0
  4221  0363  1303               	bcf	3,6	;RP1=0, select bank0
  4222  0364  00C4               	movwf	___ftadd@f2
  4223  0365  1683               	bsf	3,5	;RP0=1, select bank1
  4224  0366  1303               	bcf	3,6	;RP1=0, select bank1
  4225  0367  0830               	movf	(_CalcMQ135$776+1)^(0+128),w
  4226  0368  1283               	bcf	3,5	;RP0=0, select bank0
  4227  0369  1303               	bcf	3,6	;RP1=0, select bank0
  4228  036A  00C5               	movwf	___ftadd@f2+1
  4229  036B  1683               	bsf	3,5	;RP0=1, select bank1
  4230  036C  1303               	bcf	3,6	;RP1=0, select bank1
  4231  036D  0831               	movf	(_CalcMQ135$776+2)^(0+128),w
  4232  036E  1283               	bcf	3,5	;RP0=0, select bank0
  4233  036F  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0370  00C6               	movwf	___ftadd@f2+2
  4235  0371  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4236  0376  1283               	bcf	3,5	;RP0=0, select bank0
  4237  0377  1303               	bcf	3,6	;RP1=0, select bank0
  4238  0378  0841               	movf	?___ftadd,w
  4239  0379  1683               	bsf	3,5	;RP0=1, select bank1
  4240  037A  1303               	bcf	3,6	;RP1=0, select bank1
  4241  037B  00B2               	movwf	_CalcMQ135$777^(0+128)
  4242  037C  1283               	bcf	3,5	;RP0=0, select bank0
  4243  037D  1303               	bcf	3,6	;RP1=0, select bank0
  4244  037E  0842               	movf	?___ftadd+1,w
  4245  037F  1683               	bsf	3,5	;RP0=1, select bank1
  4246  0380  1303               	bcf	3,6	;RP1=0, select bank1
  4247  0381  00B3               	movwf	(_CalcMQ135$777+1)^(0+128)
  4248  0382  1283               	bcf	3,5	;RP0=0, select bank0
  4249  0383  1303               	bcf	3,6	;RP1=0, select bank0
  4250  0384  0843               	movf	?___ftadd+2,w
  4251  0385  1683               	bsf	3,5	;RP0=1, select bank1
  4252  0386  1303               	bcf	3,6	;RP1=0, select bank1
  4253  0387  00B4               	movwf	(_CalcMQ135$777+2)^(0+128)
  4254                           
  4255                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  4256                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  4257  0388  3080               	movlw	128
  4258  0389  1283               	bcf	3,5	;RP0=0, select bank0
  4259  038A  1303               	bcf	3,6	;RP1=0, select bank0
  4260  038B  00C1               	movwf	___ftadd@f1
  4261  038C  30B7               	movlw	183
  4262  038D  00C2               	movwf	___ftadd@f1+1
  4263  038E  3039               	movlw	57
  4264  038F  00C3               	movwf	___ftadd@f1+2
  4265  0390  1683               	bsf	3,5	;RP0=1, select bank1
  4266  0391  1303               	bcf	3,6	;RP1=0, select bank1
  4267  0392  0832               	movf	_CalcMQ135$777^(0+128),w
  4268  0393  1283               	bcf	3,5	;RP0=0, select bank0
  4269  0394  1303               	bcf	3,6	;RP1=0, select bank0
  4270  0395  00C4               	movwf	___ftadd@f2
  4271  0396  1683               	bsf	3,5	;RP0=1, select bank1
  4272  0397  1303               	bcf	3,6	;RP1=0, select bank1
  4273  0398  0833               	movf	(_CalcMQ135$777+1)^(0+128),w
  4274  0399  1283               	bcf	3,5	;RP0=0, select bank0
  4275  039A  1303               	bcf	3,6	;RP1=0, select bank0
  4276  039B  00C5               	movwf	___ftadd@f2+1
  4277  039C  1683               	bsf	3,5	;RP0=1, select bank1
  4278  039D  1303               	bcf	3,6	;RP1=0, select bank1
  4279  039E  0834               	movf	(_CalcMQ135$777+2)^(0+128),w
  4280  039F  1283               	bcf	3,5	;RP0=0, select bank0
  4281  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  4282  03A1  00C6               	movwf	___ftadd@f2+2
  4283  03A2  120A  158A  24F8  120A  118A  	fcall	___ftadd
  4284  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  4285  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  4286  03A9  0841               	movf	?___ftadd,w
  4287  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  4288  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  4289  03AC  00C1               	movwf	CalcMQ135@co2^(0+128)
  4290  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  4291  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  4292  03AF  0842               	movf	?___ftadd+1,w
  4293  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  4294  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  4295  03B2  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  4296  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  4297  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  4298  03B5  0843               	movf	?___ftadd+2,w
  4299  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  4300  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  4301  03B8  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  4302                           
  4303                           ;mq135_module.h: 109: co2 *= 415.58;
  4304  03B9  30CA               	movlw	202
  4305  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  4306  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  4307  03BC  00B1               	movwf	___ftmul@f1
  4308  03BD  30CF               	movlw	207
  4309  03BE  00B2               	movwf	___ftmul@f1+1
  4310  03BF  3043               	movlw	67
  4311  03C0  00B3               	movwf	___ftmul@f1+2
  4312  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  4313  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  4314  03C3  0841               	movf	CalcMQ135@co2^(0+128),w
  4315  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  4316  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  4317  03C6  00B4               	movwf	___ftmul@f2
  4318  03C7  1683               	bsf	3,5	;RP0=1, select bank1
  4319  03C8  1303               	bcf	3,6	;RP1=0, select bank1
  4320  03C9  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  4321  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  4322  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  4323  03CC  00B5               	movwf	___ftmul@f2+1
  4324  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  4325  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  4326  03CF  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  4327  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  4328  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  4329  03D2  00B6               	movwf	___ftmul@f2+2
  4330  03D3  120A  158A  2425   	fcall	___ftmul
  4331  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  4332  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  4333  03D8  0831               	movf	?___ftmul,w
  4334  03D9  1683               	bsf	3,5	;RP0=1, select bank1
  4335  03DA  1303               	bcf	3,6	;RP1=0, select bank1
  4336  03DB  00C1               	movwf	CalcMQ135@co2^(0+128)
  4337  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  4338  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  4339  03DE  0832               	movf	?___ftmul+1,w
  4340  03DF  1683               	bsf	3,5	;RP0=1, select bank1
  4341  03E0  1303               	bcf	3,6	;RP1=0, select bank1
  4342  03E1  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  4343  03E2  1283               	bcf	3,5	;RP0=0, select bank0
  4344  03E3  1303               	bcf	3,6	;RP1=0, select bank0
  4345  03E4  0833               	movf	?___ftmul+2,w
  4346  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  4347  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  4348  03E7  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  4349                           
  4350                           ;mq135_module.h: 110: return co2;
  4351  03E8  0841               	movf	CalcMQ135@co2^(0+128),w
  4352  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  4353  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  4354  03EB  00D1               	movwf	?_CalcMQ135
  4355  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  4356  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  4357  03EE  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  4358  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  4359  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  4360  03F1  00D2               	movwf	?_CalcMQ135+1
  4361  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  4362  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  4363  03F4  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  4364  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  4365  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  4366  03F7  00D3               	movwf	?_CalcMQ135+2
  4367  03F8  0008               	return
  4368  03F9                     __end_of_CalcMQ135:	
  4369                           
  4370                           	psect	text12
  4371  073C                     __ptext12:	
  4372 ;; *************** function ___ftdiv *****************
  4373 ;; Defined at:
  4374 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  4375 ;; Parameters:    Size  Location     Type
  4376 ;;  f2              3   33[BANK0 ] float 
  4377 ;;  f1              3   36[BANK0 ] float 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  f3              3   44[BANK0 ] float 
  4380 ;;  sign            1   48[BANK0 ] unsigned char 
  4381 ;;  exp             1   47[BANK0 ] unsigned char 
  4382 ;;  cntr            1   43[BANK0 ] unsigned char 
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  3   33[BANK0 ] float 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0, pclath, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4392 ;;      Params:         0       6       0       0       0
  4393 ;;      Locals:         0       6       0       0       0
  4394 ;;      Temps:          0       4       0       0       0
  4395 ;;      Totals:         0      16       0       0       0
  4396 ;;Total ram usage:       16 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    3
  4399 ;; This function calls:
  4400 ;;		___ftpack
  4401 ;; This function is called by:
  4402 ;;		_CalcMQ135
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           
  4407                           ;psect for function ___ftdiv
  4408  073C                     ___ftdiv:	
  4409                           
  4410                           ;incstack = 0
  4411                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  4412  073C  1283               	bcf	3,5	;RP0=0, select bank0
  4413  073D  1303               	bcf	3,6	;RP1=0, select bank0
  4414  073E  0844               	movf	___ftdiv@f1,w
  4415  073F  00C7               	movwf	??___ftdiv
  4416  0740  0845               	movf	___ftdiv@f1+1,w
  4417  0741  00C8               	movwf	??___ftdiv+1
  4418  0742  0846               	movf	___ftdiv@f1+2,w
  4419  0743  00C9               	movwf	??___ftdiv+2
  4420  0744  1003               	clrc
  4421  0745  0D48               	rlf	??___ftdiv+1,w
  4422  0746  0D49               	rlf	??___ftdiv+2,w
  4423  0747  00CA               	movwf	??___ftdiv+3
  4424  0748  084A               	movf	??___ftdiv+3,w
  4425  0749  00CF               	movwf	___ftdiv@exp
  4426  074A  08CF               	movf	___ftdiv@exp,f
  4427  074B  1D03               	skipz
  4428  074C  2F54               	goto	l2320
  4429  074D  3000               	movlw	0
  4430  074E  00C1               	movwf	?___ftdiv
  4431  074F  3000               	movlw	0
  4432  0750  00C2               	movwf	?___ftdiv+1
  4433  0751  3000               	movlw	0
  4434  0752  00C3               	movwf	?___ftdiv+2
  4435  0753  0008               	return
  4436  0754                     l2320:	
  4437  0754  0841               	movf	___ftdiv@f2,w
  4438  0755  00C7               	movwf	??___ftdiv
  4439  0756  0842               	movf	___ftdiv@f2+1,w
  4440  0757  00C8               	movwf	??___ftdiv+1
  4441  0758  0843               	movf	___ftdiv@f2+2,w
  4442  0759  00C9               	movwf	??___ftdiv+2
  4443  075A  1003               	clrc
  4444  075B  0D48               	rlf	??___ftdiv+1,w
  4445  075C  0D49               	rlf	??___ftdiv+2,w
  4446  075D  00CA               	movwf	??___ftdiv+3
  4447  075E  084A               	movf	??___ftdiv+3,w
  4448  075F  00D0               	movwf	___ftdiv@sign
  4449  0760  08D0               	movf	___ftdiv@sign,f
  4450  0761  1D03               	skipz
  4451  0762  2F6A               	goto	l2326
  4452  0763  3000               	movlw	0
  4453  0764  00C1               	movwf	?___ftdiv
  4454  0765  3000               	movlw	0
  4455  0766  00C2               	movwf	?___ftdiv+1
  4456  0767  3000               	movlw	0
  4457  0768  00C3               	movwf	?___ftdiv+2
  4458  0769  0008               	return
  4459  076A                     l2326:	
  4460  076A  3000               	movlw	0
  4461  076B  00CC               	movwf	___ftdiv@f3
  4462  076C  3000               	movlw	0
  4463  076D  00CD               	movwf	___ftdiv@f3+1
  4464  076E  3000               	movlw	0
  4465  076F  00CE               	movwf	___ftdiv@f3+2
  4466  0770  3089               	movlw	137
  4467  0771  0750               	addwf	___ftdiv@sign,w
  4468  0772  00C7               	movwf	??___ftdiv
  4469  0773  0847               	movf	??___ftdiv,w
  4470  0774  02CF               	subwf	___ftdiv@exp,f
  4471  0775  0844               	movf	___ftdiv@f1,w
  4472  0776  00C7               	movwf	??___ftdiv
  4473  0777  0845               	movf	___ftdiv@f1+1,w
  4474  0778  00C8               	movwf	??___ftdiv+1
  4475  0779  0846               	movf	___ftdiv@f1+2,w
  4476  077A  00C9               	movwf	??___ftdiv+2
  4477  077B  3010               	movlw	16
  4478  077C                     u2905:	
  4479  077C  1003               	clrc
  4480  077D  0CC9               	rrf	??___ftdiv+2,f
  4481  077E  0CC8               	rrf	??___ftdiv+1,f
  4482  077F  0CC7               	rrf	??___ftdiv,f
  4483  0780  3EFF               	addlw	-1
  4484  0781  1D03               	skipz
  4485  0782  2F7C               	goto	u2905
  4486  0783  0847               	movf	??___ftdiv,w
  4487  0784  00CA               	movwf	??___ftdiv+3
  4488  0785  084A               	movf	??___ftdiv+3,w
  4489  0786  00D0               	movwf	___ftdiv@sign
  4490  0787  0841               	movf	___ftdiv@f2,w
  4491  0788  00C7               	movwf	??___ftdiv
  4492  0789  0842               	movf	___ftdiv@f2+1,w
  4493  078A  00C8               	movwf	??___ftdiv+1
  4494  078B  0843               	movf	___ftdiv@f2+2,w
  4495  078C  00C9               	movwf	??___ftdiv+2
  4496  078D  3010               	movlw	16
  4497  078E                     u2915:	
  4498  078E  1003               	clrc
  4499  078F  0CC9               	rrf	??___ftdiv+2,f
  4500  0790  0CC8               	rrf	??___ftdiv+1,f
  4501  0791  0CC7               	rrf	??___ftdiv,f
  4502  0792  3EFF               	addlw	-1
  4503  0793  1D03               	skipz
  4504  0794  2F8E               	goto	u2915
  4505  0795  0847               	movf	??___ftdiv,w
  4506  0796  00CA               	movwf	??___ftdiv+3
  4507  0797  084A               	movf	??___ftdiv+3,w
  4508  0798  06D0               	xorwf	___ftdiv@sign,f
  4509  0799  3080               	movlw	128
  4510  079A  00C7               	movwf	??___ftdiv
  4511  079B  0847               	movf	??___ftdiv,w
  4512  079C  05D0               	andwf	___ftdiv@sign,f
  4513  079D  17C5               	bsf	___ftdiv@f1+1,7
  4514  079E  30FF               	movlw	255
  4515  079F  05C4               	andwf	___ftdiv@f1,f
  4516  07A0  30FF               	movlw	255
  4517  07A1  05C5               	andwf	___ftdiv@f1+1,f
  4518  07A2  3000               	movlw	0
  4519  07A3  05C6               	andwf	___ftdiv@f1+2,f
  4520  07A4  17C2               	bsf	___ftdiv@f2+1,7
  4521  07A5  30FF               	movlw	255
  4522  07A6  05C1               	andwf	___ftdiv@f2,f
  4523  07A7  30FF               	movlw	255
  4524  07A8  05C2               	andwf	___ftdiv@f2+1,f
  4525  07A9  3000               	movlw	0
  4526  07AA  05C3               	andwf	___ftdiv@f2+2,f
  4527  07AB  3018               	movlw	24
  4528  07AC  00C7               	movwf	??___ftdiv
  4529  07AD  0847               	movf	??___ftdiv,w
  4530  07AE  00CB               	movwf	___ftdiv@cntr
  4531  07AF                     l2340:	
  4532  07AF  3001               	movlw	1
  4533  07B0                     u2925:	
  4534  07B0  1003               	clrc
  4535  07B1  0DCC               	rlf	___ftdiv@f3,f
  4536  07B2  0DCD               	rlf	___ftdiv@f3+1,f
  4537  07B3  0DCE               	rlf	___ftdiv@f3+2,f
  4538  07B4  3EFF               	addlw	-1
  4539  07B5  1D03               	skipz
  4540  07B6  2FB0               	goto	u2925
  4541  07B7  0843               	movf	___ftdiv@f2+2,w
  4542  07B8  0246               	subwf	___ftdiv@f1+2,w
  4543  07B9  1D03               	skipz
  4544  07BA  2FC1               	goto	u2935
  4545  07BB  0842               	movf	___ftdiv@f2+1,w
  4546  07BC  0245               	subwf	___ftdiv@f1+1,w
  4547  07BD  1D03               	skipz
  4548  07BE  2FC1               	goto	u2935
  4549  07BF  0841               	movf	___ftdiv@f2,w
  4550  07C0  0244               	subwf	___ftdiv@f1,w
  4551  07C1                     u2935:	
  4552  07C1  1C03               	skipc
  4553  07C2  2FCE               	goto	l2348
  4554  07C3  0841               	movf	___ftdiv@f2,w
  4555  07C4  02C4               	subwf	___ftdiv@f1,f
  4556  07C5  0842               	movf	___ftdiv@f2+1,w
  4557  07C6  1C03               	skipc
  4558  07C7  0F42               	incfsz	___ftdiv@f2+1,w
  4559  07C8  02C5               	subwf	___ftdiv@f1+1,f
  4560  07C9  0843               	movf	___ftdiv@f2+2,w
  4561  07CA  1C03               	skipc
  4562  07CB  0A43               	incf	___ftdiv@f2+2,w
  4563  07CC  02C6               	subwf	___ftdiv@f1+2,f
  4564  07CD  144C               	bsf	___ftdiv@f3,0
  4565  07CE                     l2348:	
  4566  07CE  3001               	movlw	1
  4567  07CF                     u2945:	
  4568  07CF  1003               	clrc
  4569  07D0  0DC4               	rlf	___ftdiv@f1,f
  4570  07D1  0DC5               	rlf	___ftdiv@f1+1,f
  4571  07D2  0DC6               	rlf	___ftdiv@f1+2,f
  4572  07D3  3EFF               	addlw	-1
  4573  07D4  1D03               	skipz
  4574  07D5  2FCF               	goto	u2945
  4575  07D6  3001               	movlw	1
  4576  07D7  02CB               	subwf	___ftdiv@cntr,f
  4577  07D8  1D03               	btfss	3,2
  4578  07D9  2FAF               	goto	l2340
  4579  07DA  084C               	movf	___ftdiv@f3,w
  4580  07DB  00A0               	movwf	___ftpack@arg
  4581  07DC  084D               	movf	___ftdiv@f3+1,w
  4582  07DD  00A1               	movwf	___ftpack@arg+1
  4583  07DE  084E               	movf	___ftdiv@f3+2,w
  4584  07DF  00A2               	movwf	___ftpack@arg+2
  4585  07E0  084F               	movf	___ftdiv@exp,w
  4586  07E1  00C7               	movwf	??___ftdiv
  4587  07E2  0847               	movf	??___ftdiv,w
  4588  07E3  00A3               	movwf	___ftpack@exp
  4589  07E4  0850               	movf	___ftdiv@sign,w
  4590  07E5  00C8               	movwf	??___ftdiv+1
  4591  07E6  0848               	movf	??___ftdiv+1,w
  4592  07E7  00A4               	movwf	___ftpack@sign
  4593  07E8  160A  118A  2796   	fcall	___ftpack
  4594  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  4595  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  4596  07ED  0820               	movf	?___ftpack,w
  4597  07EE  00C1               	movwf	?___ftdiv
  4598  07EF  0821               	movf	?___ftpack+1,w
  4599  07F0  00C2               	movwf	?___ftdiv+1
  4600  07F1  0822               	movf	?___ftpack+2,w
  4601  07F2  00C3               	movwf	?___ftdiv+2
  4602  07F3  0008               	return
  4603  07F4                     __end_of___ftdiv:	
  4604                           
  4605                           	psect	text13
  4606  157A                     __ptext13:	
  4607 ;; *************** function _runDHT11 *****************
  4608 ;; Defined at:
  4609 ;;		line 87 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;		None
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;		None               void
  4616 ;; Registers used:
  4617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4623 ;;      Params:         0       0       0       0       0
  4624 ;;      Locals:         0       0       0       0       0
  4625 ;;      Temps:          0       3       0       0       0
  4626 ;;      Totals:         0       3       0       0       0
  4627 ;;Total ram usage:        3 bytes
  4628 ;; Hardware stack levels used:    1
  4629 ;; Hardware stack levels required when called:    5
  4630 ;; This function calls:
  4631 ;;		_displayDataDHT11
  4632 ;;		_printToLCD
  4633 ;;		_readDHT11
  4634 ;;		_setCursor
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           
  4641                           ;psect for function _runDHT11
  4642  157A                     _runDHT11:	
  4643                           
  4644                           ;dht11_module.h: 89: if (readDHT11(&temperature, &humidity))
  4645                           
  4646                           ;incstack = 0
  4647                           ; Regs used in _runDHT11: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4648  157A  30EE               	movlw	_humidity& (0+255)
  4649  157B  1283               	bcf	3,5	;RP0=0, select bank0
  4650  157C  1303               	bcf	3,6	;RP1=0, select bank0
  4651  157D  00DB               	movwf	??_runDHT11
  4652  157E  085B               	movf	??_runDHT11,w
  4653  157F  00A0               	movwf	readDHT11@humidity
  4654  1580  306F               	movlw	_temperature& (0+255)
  4655  1581  120A  158A  2374  160A  118A  	fcall	_readDHT11
  4656  1586  3A00               	xorlw	0
  4657  1587  1903               	skipnz
  4658  1588  2D8F               	goto	l2654
  4659                           
  4660                           ;dht11_module.h: 90: {
  4661                           ;dht11_module.h: 91: displayDataDHT11();
  4662  1589  160A  118A  2541  160A  118A  	fcall	_displayDataDHT11
  4663                           
  4664                           ;dht11_module.h: 92: }
  4665  158E  2DA3               	goto	l2658
  4666  158F                     l2654:	
  4667                           
  4668                           ;dht11_module.h: 93: else
  4669                           ;dht11_module.h: 94: {
  4670                           ;dht11_module.h: 95: setCursor(0, 0);
  4671  158F  1283               	bcf	3,5	;RP0=0, select bank0
  4672  1590  1303               	bcf	3,6	;RP1=0, select bank0
  4673  1591  01A2               	clrf	setCursor@column
  4674  1592  3000               	movlw	0
  4675  1593  160A  118A  2420  160A  118A  	fcall	_setCursor
  4676                           
  4677                           ;dht11_module.h: 96: printToLCD("ERROR!");
  4678  1598  300A               	movlw	low (STR_2| (0+32768))
  4679  1599  1283               	bcf	3,5	;RP0=0, select bank0
  4680  159A  1303               	bcf	3,6	;RP1=0, select bank0
  4681  159B  00A2               	movwf	printToLCD@str
  4682  159C  3091               	movlw	high (STR_2| (0+32768))
  4683  159D  00A3               	movwf	printToLCD@str+1
  4684  159E  160A  118A  23D6  160A  118A  	fcall	_printToLCD
  4685  15A3                     l2658:	
  4686                           
  4687                           ;dht11_module.h: 97: }
  4688                           ;dht11_module.h: 98: _delay((unsigned long)((500)*(4000000/4000.0)));
  4689  15A3  3003               	movlw	3
  4690  15A4  1283               	bcf	3,5	;RP0=0, select bank0
  4691  15A5  1303               	bcf	3,6	;RP1=0, select bank0
  4692  15A6  00DD               	movwf	??_runDHT11+2
  4693  15A7  308A               	movlw	138
  4694  15A8  00DC               	movwf	??_runDHT11+1
  4695  15A9  3056               	movlw	86
  4696  15AA  00DB               	movwf	??_runDHT11
  4697  15AB                     u4407:	
  4698  15AB  0BDB               	decfsz	??_runDHT11,f
  4699  15AC  2DAB               	goto	u4407
  4700  15AD  0BDC               	decfsz	??_runDHT11+1,f
  4701  15AE  2DAB               	goto	u4407
  4702  15AF  0BDD               	decfsz	??_runDHT11+2,f
  4703  15B0  2DAB               	goto	u4407
  4704  15B1  2DB2               	nop2
  4705  15B2  0008               	return
  4706  15B3                     __end_of_runDHT11:	
  4707                           
  4708                           	psect	text14
  4709  1420                     __ptext14:	
  4710 ;; *************** function _setCursor *****************
  4711 ;; Defined at:
  4712 ;;		line 59 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  row             1    wreg     unsigned char 
  4715 ;;  column          1    2[BANK0 ] unsigned char 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  row             1    4[BANK0 ] unsigned char 
  4718 ;;  address         1    5[BANK0 ] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;		None               void
  4721 ;; Registers used:
  4722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4728 ;;      Params:         0       1       0       0       0
  4729 ;;      Locals:         0       2       0       0       0
  4730 ;;      Temps:          0       1       0       0       0
  4731 ;;      Totals:         0       4       0       0       0
  4732 ;;Total ram usage:        4 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    3
  4735 ;; This function calls:
  4736 ;;		_instCTRL
  4737 ;; This function is called by:
  4738 ;;		_runDHT11
  4739 ;;		_main
  4740 ;;		_startUpSequence
  4741 ;; This function uses a non-reentrant model
  4742 ;;
  4743                           
  4744                           
  4745                           ;psect for function _setCursor
  4746  1420                     _setCursor:	
  4747                           
  4748                           ;incstack = 0
  4749                           ; Regs used in _setCursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4750                           ;setCursor@row stored from wreg
  4751  1420  1283               	bcf	3,5	;RP0=0, select bank0
  4752  1421  1303               	bcf	3,6	;RP1=0, select bank0
  4753  1422  00A4               	movwf	setCursor@row
  4754                           
  4755                           ;lcd_functions.h: 61: unsigned char address;
  4756                           ;lcd_functions.h: 62: switch (row)
  4757  1423  2C30               	goto	l2448
  4758  1424                     l2436:	
  4759                           ;lcd_functions.h: 63: {
  4760                           ;lcd_functions.h: 64: case 0:
  4761                           
  4762  1424  2C2E               	goto	l2444
  4763  1425                     l2438:	
  4764                           ;lcd_functions.h: 67: case 1:
  4765                           
  4766                           ;lcd_functions.h: 66: break;
  4767                           
  4768                           ;lcd_functions.h: 65: address = 0x00;
  4769                           
  4770                           
  4771                           ;lcd_functions.h: 68: address = 0x40;
  4772  1425  3040               	movlw	64
  4773  1426  2C2A               	goto	L6
  4774  1427                     l2440:	
  4775                           ;lcd_functions.h: 70: case 2:
  4776                           
  4777                           ;lcd_functions.h: 69: break;
  4778                           
  4779                           
  4780                           ;lcd_functions.h: 71: address = 0x14;
  4781  1427  3014               	movlw	20
  4782  1428  2C2A               	goto	L6
  4783  1429                     l2442:	
  4784                           ;lcd_functions.h: 73: case 3:
  4785                           
  4786                           ;lcd_functions.h: 72: break;
  4787                           
  4788                           
  4789                           ;lcd_functions.h: 74: address = 0x54;
  4790  1429  3054               	movlw	84
  4791  142A                     L6:	
  4792  142A  00A3               	movwf	??_setCursor
  4793  142B  0823               	movf	??_setCursor,w
  4794  142C  00A5               	movwf	setCursor@address
  4795                           
  4796                           ;lcd_functions.h: 75: break;
  4797  142D  2C3E               	goto	l2450
  4798  142E                     l2444:	
  4799                           ;lcd_functions.h: 76: default:
  4800                           
  4801                           
  4802                           ;lcd_functions.h: 77: address = 0x00;
  4803  142E  01A5               	clrf	setCursor@address
  4804                           
  4805                           ;lcd_functions.h: 79: }
  4806                           
  4807                           ;lcd_functions.h: 78: break;
  4808  142F  2C3E               	goto	l2450
  4809  1430                     l2448:	
  4810  1430  0824               	movf	setCursor@row,w
  4811                           
  4812                           ; Switch size 1, requested type "space"
  4813                           ; Number of cases is 4, Range of values is 0 to 3
  4814                           ; switch strategies available:
  4815                           ; Name         Instructions Cycles
  4816                           ; simple_byte           13     7 (average)
  4817                           ; direct_byte           20     8 (fixed)
  4818                           ; jumptable            260     6 (fixed)
  4819                           ;	Chosen strategy is simple_byte
  4820  1431  3A00               	xorlw	0	; case 0
  4821  1432  1903               	skipnz
  4822  1433  2C24               	goto	l2436
  4823  1434  3A01               	xorlw	1	; case 1
  4824  1435  1903               	skipnz
  4825  1436  2C25               	goto	l2438
  4826  1437  3A03               	xorlw	3	; case 2
  4827  1438  1903               	skipnz
  4828  1439  2C27               	goto	l2440
  4829  143A  3A01               	xorlw	1	; case 3
  4830  143B  1903               	skipnz
  4831  143C  2C29               	goto	l2442
  4832  143D  2C2E               	goto	l2444
  4833  143E                     l2450:	
  4834                           
  4835                           ;lcd_functions.h: 80: address += column;
  4836  143E  0822               	movf	setCursor@column,w
  4837  143F  00A3               	movwf	??_setCursor
  4838  1440  0823               	movf	??_setCursor,w
  4839  1441  07A5               	addwf	setCursor@address,f
  4840                           
  4841                           ;lcd_functions.h: 81: instCTRL(0x80 | address);
  4842  1442  0825               	movf	setCursor@address,w
  4843  1443  3880               	iorlw	128
  4844  1444  160A  118A  2304   	fcall	_instCTRL
  4845  1447  0008               	return
  4846  1448                     __end_of_setCursor:	
  4847                           
  4848                           	psect	text15
  4849  0B74                     __ptext15:	
  4850 ;; *************** function _readDHT11 *****************
  4851 ;; Defined at:
  4852 ;;		line 28 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  temperature     1    wreg     PTR unsigned char 
  4855 ;;		 -> temperature(1), 
  4856 ;;  humidity        1    0[BANK0 ] PTR unsigned char 
  4857 ;;		 -> humidity(1), 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  temperature     1    7[BANK0 ] PTR unsigned char 
  4860 ;;		 -> temperature(1), 
  4861 ;;  bits            5    8[BANK0 ] unsigned char [5]
  4862 ;;  j               1   14[BANK0 ] unsigned char 
  4863 ;;  i               1   13[BANK0 ] unsigned char 
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      unsigned char 
  4866 ;; Registers used:
  4867 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4873 ;;      Params:         0       1       0       0       0
  4874 ;;      Locals:         0       8       0       0       0
  4875 ;;      Temps:          0       6       0       0       0
  4876 ;;      Totals:         0      15       0       0       0
  4877 ;;Total ram usage:       15 bytes
  4878 ;; Hardware stack levels used:    1
  4879 ;; Hardware stack levels required when called:    2
  4880 ;; This function calls:
  4881 ;;		Nothing
  4882 ;; This function is called by:
  4883 ;;		_runDHT11
  4884 ;; This function uses a non-reentrant model
  4885 ;;
  4886                           
  4887                           
  4888                           ;psect for function _readDHT11
  4889  0B74                     _readDHT11:	
  4890                           
  4891                           ;incstack = 0
  4892                           ; Regs used in _readDHT11: [wreg-fsr0h+status,2+status,0]
  4893                           ;readDHT11@temperature stored from wreg
  4894  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0B75  1303               	bcf	3,6	;RP1=0, select bank0
  4896  0B76  00A7               	movwf	readDHT11@temperature
  4897                           
  4898                           ;dht11_module.h: 30: uint8_t bits[5] = {0};
  4899  0B77  3028               	movlw	readDHT11@bits& (0+255)
  4900  0B78  0084               	movwf	4
  4901  0B79  1683               	bsf	3,5	;RP0=1, select bank1
  4902  0B7A  1303               	bcf	3,6	;RP1=0, select bank1
  4903  0B7B  0857               	movf	readDHT11@F1225^(0+128),w
  4904  0B7C  1383               	bcf	3,7	;select IRP bank0
  4905  0B7D  0080               	movwf	0
  4906  0B7E  0A84               	incf	4,f
  4907  0B7F  0858               	movf	(readDHT11@F1225^(0+128)+1),w
  4908  0B80  0080               	movwf	0
  4909  0B81  0A84               	incf	4,f
  4910  0B82  0859               	movf	(readDHT11@F1225^(0+128)+2),w
  4911  0B83  0080               	movwf	0
  4912  0B84  0A84               	incf	4,f
  4913  0B85  085A               	movf	(readDHT11@F1225^(0+128)+3),w
  4914  0B86  0080               	movwf	0
  4915  0B87  0A84               	incf	4,f
  4916  0B88  085B               	movf	(readDHT11@F1225^(0+128)+4),w
  4917  0B89  0080               	movwf	0
  4918                           
  4919                           ;dht11_module.h: 31: uint8_t i, j;
  4920                           ;dht11_module.h: 34: TRISBbits.TRISB2 = 0;
  4921  0B8A  1106               	bcf	6,2	;volatile
  4922                           
  4923                           ;dht11_module.h: 35: PORTBbits.RB2 = 0;
  4924  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  4925  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  4926  0B8D  1106               	bcf	6,2	;volatile
  4927                           
  4928                           ;dht11_module.h: 36: _delay((unsigned long)((18)*(4000000/4000.0)));
  4929  0B8E  3018               	movlw	24
  4930  0B8F  00A2               	movwf	??_readDHT11+1
  4931  0B90  305F               	movlw	95
  4932  0B91  00A1               	movwf	??_readDHT11
  4933  0B92                     u4417:	
  4934  0B92  0BA1               	decfsz	??_readDHT11,f
  4935  0B93  2B92               	goto	u4417
  4936  0B94  0BA2               	decfsz	??_readDHT11+1,f
  4937  0B95  2B92               	goto	u4417
  4938                           
  4939                           ;dht11_module.h: 37: PORTBbits.RB2 = 1;
  4940  0B96  1283               	bcf	3,5	;RP0=0, select bank0
  4941  0B97  1303               	bcf	3,6	;RP1=0, select bank0
  4942  0B98  1506               	bsf	6,2	;volatile
  4943                           
  4944                           ;dht11_module.h: 38: _delay((unsigned long)((20)*(4000000/4000000.0)));
  4945  0B99  3006               	movlw	6
  4946  0B9A  00A1               	movwf	??_readDHT11
  4947  0B9B                     u4427:	
  4948  0B9B  0BA1               	decfsz	??_readDHT11,f
  4949  0B9C  2B9B               	goto	u4427
  4950  0B9D  0000               	nop
  4951                           
  4952                           ;dht11_module.h: 39: TRISBbits.TRISB2 = 1;
  4953  0B9E  1683               	bsf	3,5	;RP0=1, select bank1
  4954  0B9F  1303               	bcf	3,6	;RP1=0, select bank1
  4955  0BA0  1506               	bsf	6,2	;volatile
  4956                           
  4957                           ;dht11_module.h: 42: _delay((unsigned long)((40)*(4000000/4000000.0)));
  4958  0BA1  300D               	movlw	13
  4959  0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  4960  0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  4961  0BA4  00A1               	movwf	??_readDHT11
  4962  0BA5                     u4437:	
  4963  0BA5  0BA1               	decfsz	??_readDHT11,f
  4964  0BA6  2BA5               	goto	u4437
  4965                           
  4966                           ;dht11_module.h: 43: if (PORTBbits.RB2)
  4967  0BA7  1283               	bcf	3,5	;RP0=0, select bank0
  4968  0BA8  1303               	bcf	3,6	;RP1=0, select bank0
  4969  0BA9  1D06               	btfss	6,2	;volatile
  4970  0BAA  2BAD               	goto	l2478
  4971                           
  4972                           ;dht11_module.h: 44: return 0;
  4973  0BAB  3000               	movlw	0
  4974  0BAC  0008               	return
  4975  0BAD                     l2478:	
  4976                           
  4977                           ;dht11_module.h: 45: _delay((unsigned long)((80)*(4000000/4000000.0)));
  4978  0BAD  301A               	movlw	26
  4979  0BAE  00A1               	movwf	??_readDHT11
  4980  0BAF                     u4447:	
  4981  0BAF  0BA1               	decfsz	??_readDHT11,f
  4982  0BB0  2BAF               	goto	u4447
  4983  0BB1  0000               	nop
  4984                           
  4985                           ;dht11_module.h: 46: if (!PORTBbits.RB2)
  4986  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  4987  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  4988  0BB4  1906               	btfsc	6,2	;volatile
  4989  0BB5  2BB8               	goto	l2486
  4990                           
  4991                           ;dht11_module.h: 47: return 0;
  4992  0BB6  3000               	movlw	0
  4993  0BB7  0008               	return
  4994  0BB8                     l2486:	
  4995                           
  4996                           ;dht11_module.h: 48: _delay((unsigned long)((80)*(4000000/4000000.0)));
  4997  0BB8  301A               	movlw	26
  4998  0BB9  00A1               	movwf	??_readDHT11
  4999  0BBA                     u4457:	
  5000  0BBA  0BA1               	decfsz	??_readDHT11,f
  5001  0BBB  2BBA               	goto	u4457
  5002  0BBC  0000               	nop
  5003                           
  5004                           ;dht11_module.h: 51: for (j = 0; j < 5; j++)
  5005  0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  5006  0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  5007  0BBF  01AE               	clrf	readDHT11@j
  5008  0BC0  3005               	movlw	5
  5009  0BC1  022E               	subwf	readDHT11@j,w
  5010  0BC2  1803               	btfsc	3,0
  5011  0BC3  2BFA               	goto	l2514
  5012  0BC4                     l2494:	
  5013                           
  5014                           ;dht11_module.h: 52: {
  5015                           ;dht11_module.h: 53: for (i = 0; i < 8; i++)
  5016  0BC4  01AD               	clrf	readDHT11@i
  5017  0BC5  3008               	movlw	8
  5018  0BC6  022D               	subwf	readDHT11@i,w
  5019  0BC7  1803               	btfsc	3,0
  5020  0BC8  2BF2               	goto	l2510
  5021  0BC9                     l116:	
  5022                           ;dht11_module.h: 56: ;
  5023                           
  5024                           ;dht11_module.h: 54: {
  5025                           ;dht11_module.h: 55: while (!PORTBbits.RB2)
  5026                           
  5027  0BC9  1D06               	btfss	6,2	;volatile
  5028  0BCA  2BC9               	goto	l116
  5029                           
  5030                           ;dht11_module.h: 57: _delay((unsigned long)((30)*(4000000/4000000.0)));
  5031  0BCB  3009               	movlw	9
  5032  0BCC  00A1               	movwf	??_readDHT11
  5033  0BCD                     u4467:	
  5034  0BCD  0BA1               	decfsz	??_readDHT11,f
  5035  0BCE  2BCD               	goto	u4467
  5036  0BCF  2BD0               	nop2	;nop
  5037                           
  5038                           ;dht11_module.h: 58: if (PORTBbits.RB2)
  5039  0BD0  1283               	bcf	3,5	;RP0=0, select bank0
  5040  0BD1  1303               	bcf	3,6	;RP1=0, select bank0
  5041  0BD2  1D06               	btfss	6,2	;volatile
  5042  0BD3  2BEA               	goto	l2506
  5043                           
  5044                           ;dht11_module.h: 59: {
  5045                           ;dht11_module.h: 60: bits[j] |= (1 << (7 - i));
  5046  0BD4  3001               	movlw	1
  5047  0BD5  00A1               	movwf	??_readDHT11
  5048  0BD6  032D               	decf	readDHT11@i,w
  5049  0BD7  3AFF               	xorlw	255
  5050  0BD8  3E07               	addlw	7
  5051  0BD9  3E01               	addlw	1
  5052  0BDA  2BDD               	goto	u3184
  5053  0BDB                     u3185:	
  5054  0BDB  1003               	clrc
  5055  0BDC  0DA1               	rlf	??_readDHT11,f
  5056  0BDD                     u3184:	
  5057  0BDD  3EFF               	addlw	-1
  5058  0BDE  1D03               	skipz
  5059  0BDF  2BDB               	goto	u3185
  5060  0BE0  0821               	movf	??_readDHT11,w
  5061  0BE1  00A2               	movwf	??_readDHT11+1
  5062  0BE2  082E               	movf	readDHT11@j,w
  5063  0BE3  3E28               	addlw	readDHT11@bits& (0+255)
  5064  0BE4  0084               	movwf	4
  5065  0BE5  0822               	movf	??_readDHT11+1,w
  5066  0BE6  1383               	bcf	3,7	;select IRP bank0
  5067  0BE7  0480               	iorwf	0,f
  5068  0BE8                     l120:	
  5069                           ;dht11_module.h: 62: ;
  5070                           
  5071                           ;dht11_module.h: 61: while (PORTBbits.RB2)
  5072                           
  5073  0BE8  1906               	btfsc	6,2	;volatile
  5074  0BE9  2BE8               	goto	l120
  5075  0BEA                     l2506:	
  5076  0BEA  3001               	movlw	1
  5077  0BEB  00A1               	movwf	??_readDHT11
  5078  0BEC  0821               	movf	??_readDHT11,w
  5079  0BED  07AD               	addwf	readDHT11@i,f
  5080  0BEE  3008               	movlw	8
  5081  0BEF  022D               	subwf	readDHT11@i,w
  5082  0BF0  1C03               	skipc
  5083  0BF1  2BC9               	goto	l116
  5084  0BF2                     l2510:	
  5085  0BF2  3001               	movlw	1
  5086  0BF3  00A1               	movwf	??_readDHT11
  5087  0BF4  0821               	movf	??_readDHT11,w
  5088  0BF5  07AE               	addwf	readDHT11@j,f
  5089  0BF6  3005               	movlw	5
  5090  0BF7  022E               	subwf	readDHT11@j,w
  5091  0BF8  1C03               	skipc
  5092  0BF9  2BC4               	goto	l2494
  5093  0BFA                     l2514:	
  5094                           
  5095                           ;dht11_module.h: 63: }
  5096                           ;dht11_module.h: 64: }
  5097                           ;dht11_module.h: 65: }
  5098                           ;dht11_module.h: 68: if (bits[4] != (bits[0] + bits[1] + bits[2] + bits[3]))
  5099  0BFA  0828               	movf	readDHT11@bits,w
  5100  0BFB  0729               	addwf	readDHT11@bits+1,w
  5101  0BFC  00A1               	movwf	??_readDHT11
  5102  0BFD  01A2               	clrf	??_readDHT11+1
  5103  0BFE  0DA2               	rlf	??_readDHT11+1,f
  5104  0BFF  082A               	movf	readDHT11@bits+2,w
  5105  0C00  0721               	addwf	??_readDHT11,w
  5106  0C01  00A3               	movwf	??_readDHT11+2
  5107  0C02  3000               	movlw	0
  5108  0C03  1803               	skipnc
  5109  0C04  3001               	movlw	1
  5110  0C05  0722               	addwf	??_readDHT11+1,w
  5111  0C06  00A4               	movwf	??_readDHT11+3
  5112  0C07  082B               	movf	readDHT11@bits+3,w
  5113  0C08  0723               	addwf	??_readDHT11+2,w
  5114  0C09  00A5               	movwf	??_readDHT11+4
  5115  0C0A  3000               	movlw	0
  5116  0C0B  1803               	skipnc
  5117  0C0C  3001               	movlw	1
  5118  0C0D  0724               	addwf	??_readDHT11+3,w
  5119  0C0E  00A6               	movwf	??_readDHT11+5
  5120  0C0F  082C               	movf	readDHT11@bits+4,w
  5121  0C10  0625               	xorwf	??_readDHT11+4,w
  5122  0C11  0426               	iorwf	??_readDHT11+5,w
  5123  0C12  1903               	skipnz
  5124  0C13  2C16               	goto	l2520
  5125                           
  5126                           ;dht11_module.h: 69: return 0;
  5127  0C14  3000               	movlw	0
  5128  0C15  0008               	return
  5129  0C16                     l2520:	
  5130                           
  5131                           ;dht11_module.h: 71: *humidity = bits[0];
  5132  0C16  0828               	movf	readDHT11@bits,w
  5133  0C17  00A1               	movwf	??_readDHT11
  5134  0C18  0820               	movf	readDHT11@humidity,w
  5135  0C19  0084               	movwf	4
  5136  0C1A  0821               	movf	??_readDHT11,w
  5137  0C1B  1383               	bcf	3,7	;select IRP bank0
  5138  0C1C  0080               	movwf	0
  5139                           
  5140                           ;dht11_module.h: 72: *temperature = bits[2];
  5141  0C1D  082A               	movf	readDHT11@bits+2,w
  5142  0C1E  00A1               	movwf	??_readDHT11
  5143  0C1F  0827               	movf	readDHT11@temperature,w
  5144  0C20  0084               	movwf	4
  5145  0C21  0821               	movf	??_readDHT11,w
  5146  0C22  0080               	movwf	0
  5147                           
  5148                           ;dht11_module.h: 74: return 1;
  5149  0C23  3001               	movlw	1
  5150  0C24  0008               	return
  5151  0C25                     __end_of_readDHT11:	
  5152                           
  5153                           	psect	text16
  5154  1541                     __ptext16:	
  5155 ;; *************** function _displayDataDHT11 *****************
  5156 ;; Defined at:
  5157 ;;		line 77 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;		None
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  buffer         15   44[BANK0 ] unsigned char [15]
  5162 ;; Return value:  Size  Location     Type
  5163 ;;		None               void
  5164 ;; Registers used:
  5165 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5171 ;;      Params:         0       0       0       0       0
  5172 ;;      Locals:         0      15       0       0       0
  5173 ;;      Temps:          0       4       0       0       0
  5174 ;;      Totals:         0      19       0       0       0
  5175 ;;Total ram usage:       19 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    4
  5178 ;; This function calls:
  5179 ;;		_instCTRL
  5180 ;;		_printToLCD
  5181 ;;		_sprintf
  5182 ;; This function is called by:
  5183 ;;		_runDHT11
  5184 ;;		_main
  5185 ;; This function uses a non-reentrant model
  5186 ;;
  5187                           
  5188                           
  5189                           ;psect for function _displayDataDHT11
  5190  1541                     _displayDataDHT11:	
  5191                           
  5192                           ;dht11_module.h: 79: char buffer[15];
  5193                           ;dht11_module.h: 80: _delay((unsigned long)((2)*(4000000/4000.0)));
  5194                           
  5195                           ;incstack = 0
  5196                           ; Regs used in _displayDataDHT11: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5197  1541  3003               	movlw	3
  5198  1542  1283               	bcf	3,5	;RP0=0, select bank0
  5199  1543  1303               	bcf	3,6	;RP1=0, select bank0
  5200  1544  00C9               	movwf	??_displayDataDHT11+1
  5201  1545  3097               	movlw	151
  5202  1546  00C8               	movwf	??_displayDataDHT11
  5203  1547                     u4477:	
  5204  1547  0BC8               	decfsz	??_displayDataDHT11,f
  5205  1548  2D47               	goto	u4477
  5206  1549  0BC9               	decfsz	??_displayDataDHT11+1,f
  5207  154A  2D47               	goto	u4477
  5208  154B  2D4C               	nop2
  5209                           
  5210                           ;dht11_module.h: 82: instCTRL(0x80);
  5211  154C  3080               	movlw	128
  5212  154D  160A  118A  2304  160A  118A  	fcall	_instCTRL
  5213                           
  5214                           ;dht11_module.h: 83: sprintf(buffer, "TMP: %dC HMDT: %d", temperature, humidity);
  5215  1552  3047               	movlw	low (STR_1| (0+32768))
  5216  1553  1283               	bcf	3,5	;RP0=0, select bank0
  5217  1554  1303               	bcf	3,6	;RP1=0, select bank0
  5218  1555  00AE               	movwf	sprintf@f
  5219  1556  3090               	movlw	high (STR_1| (0+32768))
  5220  1557  00AF               	movwf	sprintf@f+1
  5221  1558  086F               	movf	_temperature,w
  5222  1559  00C8               	movwf	??_displayDataDHT11
  5223  155A  01C9               	clrf	??_displayDataDHT11+1
  5224  155B  0848               	movf	??_displayDataDHT11,w
  5225  155C  00B0               	movwf	?_sprintf+2
  5226  155D  0849               	movf	??_displayDataDHT11+1,w
  5227  155E  00B1               	movwf	?_sprintf+3
  5228  155F  1683               	bsf	3,5	;RP0=1, select bank1
  5229  1560  1303               	bcf	3,6	;RP1=0, select bank1
  5230  1561  086E               	movf	_humidity^(0+128),w
  5231  1562  1283               	bcf	3,5	;RP0=0, select bank0
  5232  1563  1303               	bcf	3,6	;RP1=0, select bank0
  5233  1564  00CA               	movwf	??_displayDataDHT11+2
  5234  1565  01CB               	clrf	??_displayDataDHT11+3
  5235  1566  084A               	movf	??_displayDataDHT11+2,w
  5236  1567  00B2               	movwf	?_sprintf+4
  5237  1568  084B               	movf	??_displayDataDHT11+3,w
  5238  1569  00B3               	movwf	?_sprintf+5
  5239  156A  304C               	movlw	displayDataDHT11@buffer& (0+255)
  5240  156B  120A  158A  2601  160A  118A  	fcall	_sprintf
  5241                           
  5242                           ;dht11_module.h: 84: printToLCD(buffer);
  5243  1570  304C               	movlw	displayDataDHT11@buffer& (0+255)
  5244  1571  1283               	bcf	3,5	;RP0=0, select bank0
  5245  1572  1303               	bcf	3,6	;RP1=0, select bank0
  5246  1573  00A2               	movwf	printToLCD@str
  5247  1574  3000               	movlw	0
  5248  1575  00A3               	movwf	printToLCD@str+1
  5249  1576  160A  118A  23D6   	fcall	_printToLCD
  5250  1579  0008               	return
  5251  157A                     __end_of_displayDataDHT11:	
  5252                           
  5253                           	psect	text17
  5254  132A                     __ptext17:	
  5255 ;; *************** function _runClock *****************
  5256 ;; Defined at:
  5257 ;;		line 34 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;		None
  5262 ;; Return value:  Size  Location     Type
  5263 ;;		None               void
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5271 ;;      Params:         0       0       0       0       0
  5272 ;;      Locals:         0       0       0       0       0
  5273 ;;      Temps:          0       2       0       0       0
  5274 ;;      Totals:         0       2       0       0       0
  5275 ;;Total ram usage:        2 bytes
  5276 ;; Hardware stack levels used:    1
  5277 ;; Hardware stack levels required when called:    2
  5278 ;; This function calls:
  5279 ;;		Nothing
  5280 ;; This function is called by:
  5281 ;;		_main
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           
  5286                           ;psect for function _runClock
  5287  132A                     _runClock:	
  5288                           
  5289                           ;time_scheduler.h: 37: minutes++;
  5290                           
  5291                           ;incstack = 0
  5292                           ; Regs used in _runClock: [wreg+status,2+status,0]
  5293  132A  3001               	movlw	1
  5294  132B  1283               	bcf	3,5	;RP0=0, select bank0
  5295  132C  1303               	bcf	3,6	;RP1=0, select bank0
  5296  132D  00A0               	movwf	??_runClock
  5297  132E  0820               	movf	??_runClock,w
  5298  132F  07EE               	addwf	_minutes,f	;volatile
  5299                           
  5300                           ;time_scheduler.h: 38: if (minutes >= 60)
  5301  1330  303C               	movlw	60
  5302  1331  026E               	subwf	_minutes,w	;volatile
  5303  1332  1C03               	skipc
  5304  1333  2B3D               	goto	l2710
  5305                           
  5306                           ;time_scheduler.h: 39: {
  5307                           ;time_scheduler.h: 40: minutes = 0;
  5308  1334  01EE               	clrf	_minutes	;volatile
  5309                           
  5310                           ;time_scheduler.h: 41: hours++;
  5311  1335  3001               	movlw	1
  5312  1336  00A0               	movwf	??_runClock
  5313  1337  0820               	movf	??_runClock,w
  5314  1338  07E6               	addwf	_hours,f	;volatile
  5315                           
  5316                           ;time_scheduler.h: 42: if (hours >= 24)
  5317  1339  3018               	movlw	24
  5318  133A  0266               	subwf	_hours,w	;volatile
  5319  133B  1803               	btfsc	3,0
  5320                           
  5321                           ;time_scheduler.h: 43: {
  5322                           ;time_scheduler.h: 44: hours = 0;
  5323  133C  01E6               	clrf	_hours	;volatile
  5324  133D                     l2710:	
  5325                           
  5326                           ;time_scheduler.h: 45: }
  5327                           ;time_scheduler.h: 46: }
  5328                           ;time_scheduler.h: 47: _delay((unsigned long)((100)*(4000000/4000.0)));
  5329  133D  3082               	movlw	130
  5330  133E  00A1               	movwf	??_runClock+1
  5331  133F  30DD               	movlw	221
  5332  1340  00A0               	movwf	??_runClock
  5333  1341                     u4487:	
  5334  1341  0BA0               	decfsz	??_runClock,f
  5335  1342  2B41               	goto	u4487
  5336  1343  0BA1               	decfsz	??_runClock+1,f
  5337  1344  2B41               	goto	u4487
  5338  1345  2B46               	nop2
  5339  1346  0008               	return
  5340  1347                     __end_of_runClock:	
  5341                           
  5342                           	psect	text18
  5343  12CB                     __ptext18:	
  5344 ;; *************** function _initRegisters *****************
  5345 ;; Defined at:
  5346 ;;		line 151 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  5347 ;; Parameters:    Size  Location     Type
  5348 ;;		None
  5349 ;; Auto vars:     Size  Location     Type
  5350 ;;		None
  5351 ;; Return value:  Size  Location     Type
  5352 ;;		None               void
  5353 ;; Registers used:
  5354 ;;		wreg
  5355 ;; Tracked objects:
  5356 ;;		On entry : 0/0
  5357 ;;		On exit  : 0/0
  5358 ;;		Unchanged: 0/0
  5359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5360 ;;      Params:         0       0       0       0       0
  5361 ;;      Locals:         0       0       0       0       0
  5362 ;;      Temps:          0       0       0       0       0
  5363 ;;      Totals:         0       0       0       0       0
  5364 ;;Total ram usage:        0 bytes
  5365 ;; Hardware stack levels used:    1
  5366 ;; Hardware stack levels required when called:    2
  5367 ;; This function calls:
  5368 ;;		Nothing
  5369 ;; This function is called by:
  5370 ;;		_main
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           
  5375                           ;psect for function _initRegisters
  5376  12CB                     _initRegisters:	
  5377                           
  5378                           ;main.c: 154: ADCON1 = 0x80;
  5379                           
  5380                           ;incstack = 0
  5381                           ; Regs used in _initRegisters: [wreg]
  5382  12CB  3080               	movlw	128
  5383  12CC  1683               	bsf	3,5	;RP0=1, select bank1
  5384  12CD  1303               	bcf	3,6	;RP1=0, select bank1
  5385  12CE  009F               	movwf	31	;volatile
  5386                           
  5387                           ;main.c: 155: ADCON0 = 0x01;
  5388  12CF  3001               	movlw	1
  5389  12D0  1283               	bcf	3,5	;RP0=0, select bank0
  5390  12D1  1303               	bcf	3,6	;RP1=0, select bank0
  5391  12D2  009F               	movwf	31	;volatile
  5392  12D3  0008               	return
  5393  12D4                     __end_of_initRegisters:	
  5394                           
  5395                           	psect	text19
  5396  12D4                     __ptext19:	
  5397 ;; *************** function _initPorts *****************
  5398 ;; Defined at:
  5399 ;;		line 142 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  5400 ;; Parameters:    Size  Location     Type
  5401 ;;		None
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;		None
  5404 ;; Return value:  Size  Location     Type
  5405 ;;		None               void
  5406 ;; Registers used:
  5407 ;;		wreg, status,2
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5413 ;;      Params:         0       0       0       0       0
  5414 ;;      Locals:         0       0       0       0       0
  5415 ;;      Temps:          0       0       0       0       0
  5416 ;;      Totals:         0       0       0       0       0
  5417 ;;Total ram usage:        0 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    2
  5420 ;; This function calls:
  5421 ;;		Nothing
  5422 ;; This function is called by:
  5423 ;;		_main
  5424 ;; This function uses a non-reentrant model
  5425 ;;
  5426                           
  5427                           
  5428                           ;psect for function _initPorts
  5429  12D4                     _initPorts:	
  5430                           
  5431                           ;main.c: 144: TRISA = 0xFF;
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in _initPorts: [wreg+status,2]
  5435  12D4  30FF               	movlw	255
  5436  12D5  1683               	bsf	3,5	;RP0=1, select bank1
  5437  12D6  1303               	bcf	3,6	;RP1=0, select bank1
  5438  12D7  0085               	movwf	5	;volatile
  5439                           
  5440                           ;main.c: 145: TRISB = 0xFF;
  5441  12D8  30FF               	movlw	255
  5442  12D9  0086               	movwf	6	;volatile
  5443                           
  5444                           ;main.c: 146: TRISC = 0x00;
  5445  12DA  0187               	clrf	7	;volatile
  5446                           
  5447                           ;main.c: 147: PORTC = 0b00111000;
  5448  12DB  3038               	movlw	56
  5449  12DC  1283               	bcf	3,5	;RP0=0, select bank0
  5450  12DD  1303               	bcf	3,6	;RP1=0, select bank0
  5451  12DE  0087               	movwf	7	;volatile
  5452                           
  5453                           ;main.c: 148: TRISD = 0x00;
  5454  12DF  1683               	bsf	3,5	;RP0=1, select bank1
  5455  12E0  1303               	bcf	3,6	;RP1=0, select bank1
  5456  12E1  0188               	clrf	8	;volatile
  5457  12E2  0008               	return
  5458  12E3                     __end_of_initPorts:	
  5459                           
  5460                           	psect	text20
  5461  12BB                     __ptext20:	
  5462 ;; *************** function _initInterrupts *****************
  5463 ;; Defined at:
  5464 ;;		line 158 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;		None
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;		None
  5469 ;; Return value:  Size  Location     Type
  5470 ;;		None               void
  5471 ;; Registers used:
  5472 ;;		None
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5478 ;;      Params:         0       0       0       0       0
  5479 ;;      Locals:         0       0       0       0       0
  5480 ;;      Temps:          0       0       0       0       0
  5481 ;;      Totals:         0       0       0       0       0
  5482 ;;Total ram usage:        0 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    2
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_main
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           
  5493                           ;psect for function _initInterrupts
  5494  12BB                     _initInterrupts:	
  5495                           
  5496                           ;main.c: 160: INTE = 1;
  5497                           
  5498                           ;incstack = 0
  5499                           ; Regs used in _initInterrupts: []
  5500  12BB  160B               	bsf	11,4	;volatile
  5501                           
  5502                           ;main.c: 161: INTF = 0;
  5503  12BC  108B               	bcf	11,1	;volatile
  5504                           
  5505                           ;main.c: 162: INTEDG = 1;
  5506  12BD  1683               	bsf	3,5	;RP0=1, select bank1
  5507  12BE  1303               	bcf	3,6	;RP1=0, select bank1
  5508  12BF  1701               	bsf	1,6	;volatile
  5509                           
  5510                           ;main.c: 163: GIE = 1;
  5511  12C0  178B               	bsf	11,7	;volatile
  5512                           
  5513                           ;main.c: 164: PEIE = 1;
  5514  12C1  170B               	bsf	11,6	;volatile
  5515  12C2  0008               	return
  5516  12C3                     __end_of_initInterrupts:	
  5517                           
  5518                           	psect	text21
  5519  1471                     __ptext21:	
  5520 ;; *************** function _handlePPM *****************
  5521 ;; Defined at:
  5522 ;;		line 54 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;		None
  5525 ;; Auto vars:     Size  Location     Type
  5526 ;;		None
  5527 ;; Return value:  Size  Location     Type
  5528 ;;                  1    wreg      unsigned char 
  5529 ;; Registers used:
  5530 ;;		wreg, status,2, status,0, pclath, cstack
  5531 ;; Tracked objects:
  5532 ;;		On entry : 0/0
  5533 ;;		On exit  : 0/0
  5534 ;;		Unchanged: 0/0
  5535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5536 ;;      Params:         0       0       0       0       0
  5537 ;;      Locals:         0       0       0       0       0
  5538 ;;      Temps:          0       0       0       0       0
  5539 ;;      Totals:         0       0       0       0       0
  5540 ;;Total ram usage:        0 bytes
  5541 ;; Hardware stack levels used:    1
  5542 ;; Hardware stack levels required when called:    3
  5543 ;; This function calls:
  5544 ;;		___ftge
  5545 ;; This function is called by:
  5546 ;;		_main
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           
  5551                           ;psect for function _handlePPM
  5552  1471                     _handlePPM:	
  5553                           
  5554                           ;mq135_module.h: 56: if (PPM > 9)
  5555                           
  5556                           ;incstack = 0
  5557                           ; Regs used in _handlePPM: [wreg+status,2+status,0+pclath+cstack]
  5558  1471  3000               	movlw	0
  5559  1472  1283               	bcf	3,5	;RP0=0, select bank0
  5560  1473  1303               	bcf	3,6	;RP1=0, select bank0
  5561  1474  00A0               	movwf	___ftge@ff1
  5562  1475  3010               	movlw	16
  5563  1476  00A1               	movwf	___ftge@ff1+1
  5564  1477  3041               	movlw	65
  5565  1478  00A2               	movwf	___ftge@ff1+2
  5566  1479  1683               	bsf	3,5	;RP0=1, select bank1
  5567  147A  1303               	bcf	3,6	;RP1=0, select bank1
  5568  147B  085C               	movf	_PPM^(0+128),w	;volatile
  5569  147C  1283               	bcf	3,5	;RP0=0, select bank0
  5570  147D  1303               	bcf	3,6	;RP1=0, select bank0
  5571  147E  00A3               	movwf	___ftge@ff2
  5572  147F  1683               	bsf	3,5	;RP0=1, select bank1
  5573  1480  1303               	bcf	3,6	;RP1=0, select bank1
  5574  1481  085D               	movf	(_PPM+1)^(0+128),w	;volatile
  5575  1482  1283               	bcf	3,5	;RP0=0, select bank0
  5576  1483  1303               	bcf	3,6	;RP1=0, select bank0
  5577  1484  00A4               	movwf	___ftge@ff2+1
  5578  1485  1683               	bsf	3,5	;RP0=1, select bank1
  5579  1486  1303               	bcf	3,6	;RP1=0, select bank1
  5580  1487  085E               	movf	(_PPM+2)^(0+128),w	;volatile
  5581  1488  1283               	bcf	3,5	;RP0=0, select bank0
  5582  1489  1303               	bcf	3,6	;RP1=0, select bank0
  5583  148A  00A5               	movwf	___ftge@ff2+2
  5584  148B  160A  118A  2737  160A  118A  	fcall	___ftge
  5585  1490  1803               	btfsc	3,0
  5586  1491  2C9A               	goto	l152
  5587                           
  5588                           ;mq135_module.h: 57: {
  5589                           ;mq135_module.h: 58: PORTCbits.RC5 = 0;
  5590  1492  1283               	bcf	3,5	;RP0=0, select bank0
  5591  1493  1303               	bcf	3,6	;RP1=0, select bank0
  5592  1494  1287               	bcf	7,5	;volatile
  5593                           
  5594                           ;mq135_module.h: 59: ppmFlag = 1;
  5595  1495  1683               	bsf	3,5	;RP0=1, select bank1
  5596  1496  1303               	bcf	3,6	;RP1=0, select bank1
  5597  1497  01E3               	clrf	_ppmFlag^(0+128)
  5598  1498  0AE3               	incf	_ppmFlag^(0+128),f
  5599                           
  5600                           ;mq135_module.h: 61: }
  5601                           
  5602                           ;mq135_module.h: 60: return 1;
  5603                           ;	Return value of _handlePPM is never used
  5604  1499  0008               	return
  5605  149A                     l152:	
  5606                           
  5607                           ;mq135_module.h: 62: else
  5608                           ;mq135_module.h: 63: {
  5609                           ;mq135_module.h: 64: PORTCbits.RC5 = 1;
  5610  149A  1283               	bcf	3,5	;RP0=0, select bank0
  5611  149B  1303               	bcf	3,6	;RP1=0, select bank0
  5612  149C  1687               	bsf	7,5	;volatile
  5613                           
  5614                           ;mq135_module.h: 65: ppmFlag = 0;
  5615  149D  1683               	bsf	3,5	;RP0=1, select bank1
  5616  149E  1303               	bcf	3,6	;RP1=0, select bank1
  5617  149F  01E3               	clrf	_ppmFlag^(0+128)
  5618                           
  5619                           ;mq135_module.h: 66: return 0;
  5620                           ;	Return value of _handlePPM is never used
  5621  14A0  0008               	return
  5622  14A1                     __end_of_handlePPM:	
  5623                           
  5624                           	psect	text22
  5625  1737                     __ptext22:	
  5626 ;; *************** function ___ftge *****************
  5627 ;; Defined at:
  5628 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  5629 ;; Parameters:    Size  Location     Type
  5630 ;;  ff1             3    0[BANK0 ] float 
  5631 ;;  ff2             3    3[BANK0 ] float 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;		None               void
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5643 ;;      Params:         0       6       0       0       0
  5644 ;;      Locals:         0       0       0       0       0
  5645 ;;      Temps:          0       6       0       0       0
  5646 ;;      Totals:         0      12       0       0       0
  5647 ;;Total ram usage:       12 bytes
  5648 ;; Hardware stack levels used:    1
  5649 ;; Hardware stack levels required when called:    2
  5650 ;; This function calls:
  5651 ;;		Nothing
  5652 ;; This function is called by:
  5653 ;;		_handlePPM
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657                           
  5658                           ;psect for function ___ftge
  5659  1737                     ___ftge:	
  5660                           
  5661                           ;incstack = 0
  5662                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  5663  1737  1283               	bcf	3,5	;RP0=0, select bank0
  5664  1738  1303               	bcf	3,6	;RP1=0, select bank0
  5665  1739  1FA2               	btfss	___ftge@ff1+2,7
  5666  173A  2F60               	goto	l2582
  5667  173B  3000               	movlw	0
  5668  173C  00A6               	movwf	??___ftge
  5669  173D  3000               	movlw	0
  5670  173E  00A7               	movwf	??___ftge+1
  5671  173F  3080               	movlw	128
  5672  1740  00A8               	movwf	??___ftge+2
  5673  1741  0920               	comf	___ftge@ff1,w
  5674  1742  00A9               	movwf	??___ftge+3
  5675  1743  0921               	comf	___ftge@ff1+1,w
  5676  1744  00AA               	movwf	??___ftge+4
  5677  1745  0922               	comf	___ftge@ff1+2,w
  5678  1746  00AB               	movwf	??___ftge+5
  5679  1747  0AA9               	incf	??___ftge+3,f
  5680  1748  1903               	skipnz
  5681  1749  0AAA               	incf	??___ftge+4,f
  5682  174A  1903               	skipnz
  5683  174B  0AAB               	incf	??___ftge+5,f
  5684  174C  0829               	movf	??___ftge+3,w
  5685  174D  07A6               	addwf	??___ftge,f
  5686  174E  082A               	movf	??___ftge+4,w
  5687  174F  1803               	skipnc
  5688  1750  0F2A               	incfsz	??___ftge+4,w
  5689  1751  2F53               	goto	u3331
  5690  1752  2F54               	goto	u3332
  5691  1753                     u3331:	
  5692  1753  07A7               	addwf	??___ftge+1,f
  5693  1754                     u3332:	
  5694  1754  082B               	movf	??___ftge+5,w
  5695  1755  1803               	skipnc
  5696  1756  0F2B               	incfsz	??___ftge+5,w
  5697  1757  2F59               	goto	u3333
  5698  1758  2F5A               	goto	u3334
  5699  1759                     u3333:	
  5700  1759  07A8               	addwf	??___ftge+2,f
  5701  175A                     u3334:	
  5702  175A  0826               	movf	??___ftge,w
  5703  175B  00A0               	movwf	___ftge@ff1
  5704  175C  0827               	movf	??___ftge+1,w
  5705  175D  00A1               	movwf	___ftge@ff1+1
  5706  175E  0828               	movf	??___ftge+2,w
  5707  175F  00A2               	movwf	___ftge@ff1+2
  5708  1760                     l2582:	
  5709  1760  1FA5               	btfss	___ftge@ff2+2,7
  5710  1761  2F87               	goto	l2586
  5711  1762  3000               	movlw	0
  5712  1763  00A6               	movwf	??___ftge
  5713  1764  3000               	movlw	0
  5714  1765  00A7               	movwf	??___ftge+1
  5715  1766  3080               	movlw	128
  5716  1767  00A8               	movwf	??___ftge+2
  5717  1768  0923               	comf	___ftge@ff2,w
  5718  1769  00A9               	movwf	??___ftge+3
  5719  176A  0924               	comf	___ftge@ff2+1,w
  5720  176B  00AA               	movwf	??___ftge+4
  5721  176C  0925               	comf	___ftge@ff2+2,w
  5722  176D  00AB               	movwf	??___ftge+5
  5723  176E  0AA9               	incf	??___ftge+3,f
  5724  176F  1903               	skipnz
  5725  1770  0AAA               	incf	??___ftge+4,f
  5726  1771  1903               	skipnz
  5727  1772  0AAB               	incf	??___ftge+5,f
  5728  1773  0829               	movf	??___ftge+3,w
  5729  1774  07A6               	addwf	??___ftge,f
  5730  1775  082A               	movf	??___ftge+4,w
  5731  1776  1803               	skipnc
  5732  1777  0F2A               	incfsz	??___ftge+4,w
  5733  1778  2F7A               	goto	u3351
  5734  1779  2F7B               	goto	u3352
  5735  177A                     u3351:	
  5736  177A  07A7               	addwf	??___ftge+1,f
  5737  177B                     u3352:	
  5738  177B  082B               	movf	??___ftge+5,w
  5739  177C  1803               	skipnc
  5740  177D  0F2B               	incfsz	??___ftge+5,w
  5741  177E  2F80               	goto	u3353
  5742  177F  2F81               	goto	u3354
  5743  1780                     u3353:	
  5744  1780  07A8               	addwf	??___ftge+2,f
  5745  1781                     u3354:	
  5746  1781  0826               	movf	??___ftge,w
  5747  1782  00A3               	movwf	___ftge@ff2
  5748  1783  0827               	movf	??___ftge+1,w
  5749  1784  00A4               	movwf	___ftge@ff2+1
  5750  1785  0828               	movf	??___ftge+2,w
  5751  1786  00A5               	movwf	___ftge@ff2+2
  5752  1787                     l2586:	
  5753  1787  3080               	movlw	128
  5754  1788  06A2               	xorwf	___ftge@ff1+2,f
  5755  1789  3080               	movlw	128
  5756  178A  06A5               	xorwf	___ftge@ff2+2,f
  5757  178B  0825               	movf	___ftge@ff2+2,w
  5758  178C  0222               	subwf	___ftge@ff1+2,w
  5759  178D  1D03               	skipz
  5760  178E  0008               	return
  5761  178F  0824               	movf	___ftge@ff2+1,w
  5762  1790  0221               	subwf	___ftge@ff1+1,w
  5763  1791  1D03               	skipz
  5764  1792  0008               	return
  5765  1793  0823               	movf	___ftge@ff2,w
  5766  1794  0220               	subwf	___ftge@ff1,w
  5767  1795  0008               	return
  5768  1796                     __end_of___ftge:	
  5769                           
  5770                           	psect	text23
  5771  1369                     __ptext23:	
  5772 ;; *************** function _displayTime *****************
  5773 ;; Defined at:
  5774 ;;		line 50 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler.
      +h"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;  timeFormat     16   44[BANK0 ] unsigned char [16]
  5779 ;; Return value:  Size  Location     Type
  5780 ;;		None               void
  5781 ;; Registers used:
  5782 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5788 ;;      Params:         0       0       0       0       0
  5789 ;;      Locals:         0      16       0       0       0
  5790 ;;      Temps:          0       4       0       0       0
  5791 ;;      Totals:         0      20       0       0       0
  5792 ;;Total ram usage:       20 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    4
  5795 ;; This function calls:
  5796 ;;		_printToLCD
  5797 ;;		_sprintf
  5798 ;; This function is called by:
  5799 ;;		_main
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           
  5804                           ;psect for function _displayTime
  5805  1369                     _displayTime:	
  5806                           
  5807                           ;time_scheduler.h: 52: char timeFormat[16];
  5808                           ;time_scheduler.h: 53: sprintf(timeFormat, "Time: %02d:%02d", hours, minutes);
  5809                           
  5810                           ;incstack = 0
  5811                           ; Regs used in _displayTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5812  1369  308A               	movlw	low (STR_8| (0+32768))
  5813  136A  1283               	bcf	3,5	;RP0=0, select bank0
  5814  136B  1303               	bcf	3,6	;RP1=0, select bank0
  5815  136C  00AE               	movwf	sprintf@f
  5816  136D  3090               	movlw	high (STR_8| (0+32768))
  5817  136E  00AF               	movwf	sprintf@f+1
  5818  136F  0866               	movf	_hours,w	;volatile
  5819  1370  00C8               	movwf	??_displayTime
  5820  1371  01C9               	clrf	??_displayTime+1
  5821  1372  0848               	movf	??_displayTime,w
  5822  1373  00B0               	movwf	?_sprintf+2
  5823  1374  0849               	movf	??_displayTime+1,w
  5824  1375  00B1               	movwf	?_sprintf+3
  5825  1376  086E               	movf	_minutes,w	;volatile
  5826  1377  00CA               	movwf	??_displayTime+2
  5827  1378  01CB               	clrf	??_displayTime+3
  5828  1379  084A               	movf	??_displayTime+2,w
  5829  137A  00B2               	movwf	?_sprintf+4
  5830  137B  084B               	movf	??_displayTime+3,w
  5831  137C  00B3               	movwf	?_sprintf+5
  5832  137D  304C               	movlw	displayTime@timeFormat& (0+255)
  5833  137E  120A  158A  2601  160A  118A  	fcall	_sprintf
  5834                           
  5835                           ;time_scheduler.h: 54: printToLCD(timeFormat);
  5836  1383  304C               	movlw	displayTime@timeFormat& (0+255)
  5837  1384  1283               	bcf	3,5	;RP0=0, select bank0
  5838  1385  1303               	bcf	3,6	;RP1=0, select bank0
  5839  1386  00A2               	movwf	printToLCD@str
  5840  1387  3000               	movlw	0
  5841  1388  00A3               	movwf	printToLCD@str+1
  5842  1389  160A  118A  23D6   	fcall	_printToLCD
  5843  138C  0008               	return
  5844  138D                     __end_of_displayTime:	
  5845                           
  5846                           	psect	text24
  5847  0613                     __ptext24:	
  5848 ;; *************** function _displayPPM *****************
  5849 ;; Defined at:
  5850 ;;		line 37 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\mq135_module.h"
  5851 ;; Parameters:    Size  Location     Type
  5852 ;;		None
  5853 ;; Auto vars:     Size  Location     Type
  5854 ;;  strBuffer      20    0[BANK1 ] unsigned char [20]
  5855 ;;  ppmFraction     2   22[BANK1 ] int 
  5856 ;;  ppmWhole        2   20[BANK1 ] int 
  5857 ;;  bufPtr          1   24[BANK1 ] PTR unsigned char 
  5858 ;;		 -> displayPPM@strBuffer(20), 
  5859 ;; Return value:  Size  Location     Type
  5860 ;;		None               void
  5861 ;; Registers used:
  5862 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5863 ;; Tracked objects:
  5864 ;;		On entry : 0/0
  5865 ;;		On exit  : 0/0
  5866 ;;		Unchanged: 0/0
  5867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5868 ;;      Params:         0       0       0       0       0
  5869 ;;      Locals:         0       0      25       0       0
  5870 ;;      Temps:          0       1       0       0       0
  5871 ;;      Totals:         0       1      25       0       0
  5872 ;;Total ram usage:       26 bytes
  5873 ;; Hardware stack levels used:    1
  5874 ;; Hardware stack levels required when called:    4
  5875 ;; This function calls:
  5876 ;;		___awtoft
  5877 ;;		___ftadd
  5878 ;;		___ftmul
  5879 ;;		___ftneg
  5880 ;;		___fttol
  5881 ;;		_printToLCD
  5882 ;;		_sprintf
  5883 ;; This function is called by:
  5884 ;;		_main
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           
  5889                           ;psect for function _displayPPM
  5890  0613                     _displayPPM:	
  5891                           
  5892                           ;mq135_module.h: 39: char strBuffer[20];
  5893                           ;mq135_module.h: 40: int ppmWhole = (int)PPM;
  5894                           
  5895                           ;incstack = 0
  5896                           ; Regs used in _displayPPM: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5897  0613  1683               	bsf	3,5	;RP0=1, select bank1
  5898  0614  1303               	bcf	3,6	;RP1=0, select bank1
  5899  0615  085C               	movf	_PPM^(0+128),w	;volatile
  5900  0616  1283               	bcf	3,5	;RP0=0, select bank0
  5901  0617  1303               	bcf	3,6	;RP1=0, select bank0
  5902  0618  00CE               	movwf	___fttol@f1
  5903  0619  1683               	bsf	3,5	;RP0=1, select bank1
  5904  061A  1303               	bcf	3,6	;RP1=0, select bank1
  5905  061B  085D               	movf	(_PPM+1)^(0+128),w	;volatile
  5906  061C  1283               	bcf	3,5	;RP0=0, select bank0
  5907  061D  1303               	bcf	3,6	;RP1=0, select bank0
  5908  061E  00CF               	movwf	___fttol@f1+1
  5909  061F  1683               	bsf	3,5	;RP0=1, select bank1
  5910  0620  1303               	bcf	3,6	;RP1=0, select bank1
  5911  0621  085E               	movf	(_PPM+2)^(0+128),w	;volatile
  5912  0622  1283               	bcf	3,5	;RP0=0, select bank0
  5913  0623  1303               	bcf	3,6	;RP1=0, select bank0
  5914  0624  00D0               	movwf	___fttol@f1+2
  5915  0625  120A  158A  2042  120A  118A  	fcall	___fttol
  5916  062A  1283               	bcf	3,5	;RP0=0, select bank0
  5917  062B  1303               	bcf	3,6	;RP1=0, select bank0
  5918  062C  084F               	movf	?___fttol+1,w
  5919  062D  1683               	bsf	3,5	;RP0=1, select bank1
  5920  062E  1303               	bcf	3,6	;RP1=0, select bank1
  5921  062F  01B5               	clrf	(displayPPM@ppmWhole+1)^(0+128)
  5922  0630  07B5               	addwf	(displayPPM@ppmWhole+1)^(0+128),f
  5923  0631  1283               	bcf	3,5	;RP0=0, select bank0
  5924  0632  1303               	bcf	3,6	;RP1=0, select bank0
  5925  0633  084E               	movf	?___fttol,w
  5926  0634  1683               	bsf	3,5	;RP0=1, select bank1
  5927  0635  1303               	bcf	3,6	;RP1=0, select bank1
  5928  0636  01B4               	clrf	displayPPM@ppmWhole^(0+128)
  5929  0637  07B4               	addwf	displayPPM@ppmWhole^(0+128),f
  5930                           
  5931                           ;mq135_module.h: 41: int ppmFraction = (int)((PPM - ppmWhole) * 100);
  5932  0638  0835               	movf	(displayPPM@ppmWhole+1)^(0+128),w
  5933  0639  1283               	bcf	3,5	;RP0=0, select bank0
  5934  063A  1303               	bcf	3,6	;RP1=0, select bank0
  5935  063B  01A9               	clrf	___awtoft@c+1
  5936  063C  07A9               	addwf	___awtoft@c+1,f
  5937  063D  1683               	bsf	3,5	;RP0=1, select bank1
  5938  063E  1303               	bcf	3,6	;RP1=0, select bank1
  5939  063F  0834               	movf	displayPPM@ppmWhole^(0+128),w
  5940  0640  1283               	bcf	3,5	;RP0=0, select bank0
  5941  0641  1303               	bcf	3,6	;RP1=0, select bank0
  5942  0642  01A8               	clrf	___awtoft@c
  5943  0643  07A8               	addwf	___awtoft@c,f
  5944  0644  160A  118A  23B1  120A  118A  	fcall	___awtoft
  5945  0649  1283               	bcf	3,5	;RP0=0, select bank0
  5946  064A  1303               	bcf	3,6	;RP1=0, select bank0
  5947  064B  0828               	movf	?___awtoft,w
  5948  064C  00AE               	movwf	___ftneg@f1
  5949  064D  0829               	movf	?___awtoft+1,w
  5950  064E  00AF               	movwf	___ftneg@f1+1
  5951  064F  082A               	movf	?___awtoft+2,w
  5952  0650  00B0               	movwf	___ftneg@f1+2
  5953  0651  120A  118A  27F4  120A  118A  	fcall	___ftneg
  5954  0656  1283               	bcf	3,5	;RP0=0, select bank0
  5955  0657  1303               	bcf	3,6	;RP1=0, select bank0
  5956  0658  082E               	movf	?___ftneg,w
  5957  0659  00C4               	movwf	___ftadd@f2
  5958  065A  082F               	movf	?___ftneg+1,w
  5959  065B  00C5               	movwf	___ftadd@f2+1
  5960  065C  0830               	movf	?___ftneg+2,w
  5961  065D  00C6               	movwf	___ftadd@f2+2
  5962  065E  1683               	bsf	3,5	;RP0=1, select bank1
  5963  065F  1303               	bcf	3,6	;RP1=0, select bank1
  5964  0660  085C               	movf	_PPM^(0+128),w	;volatile
  5965  0661  1283               	bcf	3,5	;RP0=0, select bank0
  5966  0662  1303               	bcf	3,6	;RP1=0, select bank0
  5967  0663  00C1               	movwf	___ftadd@f1
  5968  0664  1683               	bsf	3,5	;RP0=1, select bank1
  5969  0665  1303               	bcf	3,6	;RP1=0, select bank1
  5970  0666  085D               	movf	(_PPM+1)^(0+128),w	;volatile
  5971  0667  1283               	bcf	3,5	;RP0=0, select bank0
  5972  0668  1303               	bcf	3,6	;RP1=0, select bank0
  5973  0669  00C2               	movwf	___ftadd@f1+1
  5974  066A  1683               	bsf	3,5	;RP0=1, select bank1
  5975  066B  1303               	bcf	3,6	;RP1=0, select bank1
  5976  066C  085E               	movf	(_PPM+2)^(0+128),w	;volatile
  5977  066D  1283               	bcf	3,5	;RP0=0, select bank0
  5978  066E  1303               	bcf	3,6	;RP1=0, select bank0
  5979  066F  00C3               	movwf	___ftadd@f1+2
  5980  0670  120A  158A  24F8  120A  118A  	fcall	___ftadd
  5981  0675  1283               	bcf	3,5	;RP0=0, select bank0
  5982  0676  1303               	bcf	3,6	;RP1=0, select bank0
  5983  0677  0841               	movf	?___ftadd,w
  5984  0678  00B4               	movwf	___ftmul@f2
  5985  0679  0842               	movf	?___ftadd+1,w
  5986  067A  00B5               	movwf	___ftmul@f2+1
  5987  067B  0843               	movf	?___ftadd+2,w
  5988  067C  00B6               	movwf	___ftmul@f2+2
  5989  067D  3000               	movlw	0
  5990  067E  00B1               	movwf	___ftmul@f1
  5991  067F  30C8               	movlw	200
  5992  0680  00B2               	movwf	___ftmul@f1+1
  5993  0681  3042               	movlw	66
  5994  0682  00B3               	movwf	___ftmul@f1+2
  5995  0683  120A  158A  2425  120A  118A  	fcall	___ftmul
  5996  0688  1283               	bcf	3,5	;RP0=0, select bank0
  5997  0689  1303               	bcf	3,6	;RP1=0, select bank0
  5998  068A  0831               	movf	?___ftmul,w
  5999  068B  00CE               	movwf	___fttol@f1
  6000  068C  0832               	movf	?___ftmul+1,w
  6001  068D  00CF               	movwf	___fttol@f1+1
  6002  068E  0833               	movf	?___ftmul+2,w
  6003  068F  00D0               	movwf	___fttol@f1+2
  6004  0690  120A  158A  2042  120A  118A  	fcall	___fttol
  6005  0695  1283               	bcf	3,5	;RP0=0, select bank0
  6006  0696  1303               	bcf	3,6	;RP1=0, select bank0
  6007  0697  084F               	movf	?___fttol+1,w
  6008  0698  1683               	bsf	3,5	;RP0=1, select bank1
  6009  0699  1303               	bcf	3,6	;RP1=0, select bank1
  6010  069A  01B7               	clrf	(displayPPM@ppmFraction+1)^(0+128)
  6011  069B  07B7               	addwf	(displayPPM@ppmFraction+1)^(0+128),f
  6012  069C  1283               	bcf	3,5	;RP0=0, select bank0
  6013  069D  1303               	bcf	3,6	;RP1=0, select bank0
  6014  069E  084E               	movf	?___fttol,w
  6015  069F  1683               	bsf	3,5	;RP0=1, select bank1
  6016  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  6017  06A1  01B6               	clrf	displayPPM@ppmFraction^(0+128)
  6018  06A2  07B6               	addwf	displayPPM@ppmFraction^(0+128),f
  6019                           
  6020                           ;mq135_module.h: 44: char *bufPtr = strBuffer;
  6021  06A3  30A0               	movlw	displayPPM@strBuffer& (0+255)
  6022  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  6023  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  6024  06A6  00DC               	movwf	??_displayPPM
  6025  06A7  085C               	movf	??_displayPPM,w
  6026  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  6027  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  6028  06AA  00B8               	movwf	displayPPM@bufPtr^(0+128)
  6029                           
  6030                           ;mq135_module.h: 45: bufPtr += sprintf(bufPtr, "CO2: ");
  6031  06AB  3011               	movlw	low (STR_3| (0+32768))
  6032  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  6033  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  6034  06AE  00AE               	movwf	sprintf@f
  6035  06AF  3091               	movlw	high (STR_3| (0+32768))
  6036  06B0  00AF               	movwf	sprintf@f+1
  6037  06B1  1683               	bsf	3,5	;RP0=1, select bank1
  6038  06B2  1303               	bcf	3,6	;RP1=0, select bank1
  6039  06B3  0838               	movf	displayPPM@bufPtr^(0+128),w
  6040  06B4  120A  158A  2601  120A  118A  	fcall	_sprintf
  6041  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  6042  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  6043  06BB  082E               	movf	?_sprintf,w
  6044  06BC  00DC               	movwf	??_displayPPM
  6045  06BD  085C               	movf	??_displayPPM,w
  6046  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  6047  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  6048  06C0  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  6049                           
  6050                           ;mq135_module.h: 46: bufPtr += sprintf(bufPtr, "%d", ppmWhole);
  6051  06C1  3056               	movlw	low ((STR_1+15)| (0+32768))
  6052  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  6053  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  6054  06C4  00AE               	movwf	sprintf@f
  6055  06C5  3090               	movlw	high ((STR_1+15)| (0+32768))
  6056  06C6  00AF               	movwf	sprintf@f+1
  6057  06C7  1683               	bsf	3,5	;RP0=1, select bank1
  6058  06C8  1303               	bcf	3,6	;RP1=0, select bank1
  6059  06C9  0835               	movf	(displayPPM@ppmWhole+1)^(0+128),w
  6060  06CA  1283               	bcf	3,5	;RP0=0, select bank0
  6061  06CB  1303               	bcf	3,6	;RP1=0, select bank0
  6062  06CC  01B1               	clrf	?_sprintf+3
  6063  06CD  07B1               	addwf	?_sprintf+3,f
  6064  06CE  1683               	bsf	3,5	;RP0=1, select bank1
  6065  06CF  1303               	bcf	3,6	;RP1=0, select bank1
  6066  06D0  0834               	movf	displayPPM@ppmWhole^(0+128),w
  6067  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  6068  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  6069  06D3  01B0               	clrf	?_sprintf+2
  6070  06D4  07B0               	addwf	?_sprintf+2,f
  6071  06D5  1683               	bsf	3,5	;RP0=1, select bank1
  6072  06D6  1303               	bcf	3,6	;RP1=0, select bank1
  6073  06D7  0838               	movf	displayPPM@bufPtr^(0+128),w
  6074  06D8  120A  158A  2601  120A  118A  	fcall	_sprintf
  6075  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  6076  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  6077  06DF  082E               	movf	?_sprintf,w
  6078  06E0  00DC               	movwf	??_displayPPM
  6079  06E1  085C               	movf	??_displayPPM,w
  6080  06E2  1683               	bsf	3,5	;RP0=1, select bank1
  6081  06E3  1303               	bcf	3,6	;RP1=0, select bank1
  6082  06E4  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  6083                           
  6084                           ;mq135_module.h: 47: *bufPtr++ = '.';
  6085  06E5  302E               	movlw	46
  6086  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  6087  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  6088  06E8  00DC               	movwf	??_displayPPM
  6089  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  6090  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  6091  06EB  0838               	movf	displayPPM@bufPtr^(0+128),w
  6092  06EC  0084               	movwf	4
  6093  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  6094  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  6095  06EF  085C               	movf	??_displayPPM,w
  6096  06F0  1383               	bcf	3,7	;select IRP bank0
  6097  06F1  0080               	movwf	0
  6098  06F2  3001               	movlw	1
  6099  06F3  00DC               	movwf	??_displayPPM
  6100  06F4  085C               	movf	??_displayPPM,w
  6101  06F5  1683               	bsf	3,5	;RP0=1, select bank1
  6102  06F6  1303               	bcf	3,6	;RP1=0, select bank1
  6103  06F7  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  6104                           
  6105                           ;mq135_module.h: 48: if (ppmFraction < 10)
  6106  06F8  0837               	movf	(displayPPM@ppmFraction+1)^(0+128),w
  6107  06F9  3A80               	xorlw	128
  6108  06FA  00FF               	movwf	127
  6109  06FB  3080               	movlw	128
  6110  06FC  027F               	subwf	127,w
  6111  06FD  1D03               	skipz
  6112  06FE  2F01               	goto	u3515
  6113  06FF  300A               	movlw	10
  6114  0700  0236               	subwf	displayPPM@ppmFraction^(0+128),w
  6115  0701                     u3515:	
  6116  0701  1803               	skipnc
  6117  0702  2F16               	goto	l2684
  6118                           
  6119                           ;mq135_module.h: 49: *bufPtr++ = '0';
  6120  0703  3030               	movlw	48
  6121  0704  1283               	bcf	3,5	;RP0=0, select bank0
  6122  0705  1303               	bcf	3,6	;RP1=0, select bank0
  6123  0706  00DC               	movwf	??_displayPPM
  6124  0707  1683               	bsf	3,5	;RP0=1, select bank1
  6125  0708  1303               	bcf	3,6	;RP1=0, select bank1
  6126  0709  0838               	movf	displayPPM@bufPtr^(0+128),w
  6127  070A  0084               	movwf	4
  6128  070B  1283               	bcf	3,5	;RP0=0, select bank0
  6129  070C  1303               	bcf	3,6	;RP1=0, select bank0
  6130  070D  085C               	movf	??_displayPPM,w
  6131  070E  1383               	bcf	3,7	;select IRP bank0
  6132  070F  0080               	movwf	0
  6133  0710  3001               	movlw	1
  6134  0711  00DC               	movwf	??_displayPPM
  6135  0712  085C               	movf	??_displayPPM,w
  6136  0713  1683               	bsf	3,5	;RP0=1, select bank1
  6137  0714  1303               	bcf	3,6	;RP1=0, select bank1
  6138  0715  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  6139  0716                     l2684:	
  6140                           
  6141                           ;mq135_module.h: 50: sprintf(bufPtr, "%d ppm  ", ppmFraction);
  6142  0716  30E8               	movlw	low (STR_5| (0+32768))
  6143  0717  1283               	bcf	3,5	;RP0=0, select bank0
  6144  0718  1303               	bcf	3,6	;RP1=0, select bank0
  6145  0719  00AE               	movwf	sprintf@f
  6146  071A  3090               	movlw	high (STR_5| (0+32768))
  6147  071B  00AF               	movwf	sprintf@f+1
  6148  071C  1683               	bsf	3,5	;RP0=1, select bank1
  6149  071D  1303               	bcf	3,6	;RP1=0, select bank1
  6150  071E  0837               	movf	(displayPPM@ppmFraction+1)^(0+128),w
  6151  071F  1283               	bcf	3,5	;RP0=0, select bank0
  6152  0720  1303               	bcf	3,6	;RP1=0, select bank0
  6153  0721  01B1               	clrf	?_sprintf+3
  6154  0722  07B1               	addwf	?_sprintf+3,f
  6155  0723  1683               	bsf	3,5	;RP0=1, select bank1
  6156  0724  1303               	bcf	3,6	;RP1=0, select bank1
  6157  0725  0836               	movf	displayPPM@ppmFraction^(0+128),w
  6158  0726  1283               	bcf	3,5	;RP0=0, select bank0
  6159  0727  1303               	bcf	3,6	;RP1=0, select bank0
  6160  0728  01B0               	clrf	?_sprintf+2
  6161  0729  07B0               	addwf	?_sprintf+2,f
  6162  072A  1683               	bsf	3,5	;RP0=1, select bank1
  6163  072B  1303               	bcf	3,6	;RP1=0, select bank1
  6164  072C  0838               	movf	displayPPM@bufPtr^(0+128),w
  6165  072D  120A  158A  2601  120A  118A  	fcall	_sprintf
  6166                           
  6167                           ;mq135_module.h: 51: printToLCD(strBuffer);
  6168  0732  30A0               	movlw	displayPPM@strBuffer& (0+255)
  6169  0733  1283               	bcf	3,5	;RP0=0, select bank0
  6170  0734  1303               	bcf	3,6	;RP1=0, select bank0
  6171  0735  00A2               	movwf	printToLCD@str
  6172  0736  3000               	movlw	0
  6173  0737  00A3               	movwf	printToLCD@str+1
  6174  0738  160A  118A  23D6   	fcall	_printToLCD
  6175  073B  0008               	return
  6176  073C                     __end_of_displayPPM:	
  6177                           
  6178                           	psect	text25
  6179  0E01                     __ptext25:	
  6180 ;; *************** function _sprintf *****************
  6181 ;; Defined at:
  6182 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  sp              1    wreg     PTR unsigned char 
  6185 ;;		 -> main@buffer(16), debugInfo(10), displayTime@timeFormat(16), displayPPM@strBuffer(20), 
  6186 ;;		 -> displayDataDHT11@buffer(15), 
  6187 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  6188 ;;		 -> STR_31(15), STR_29(15), STR_26(17), STR_24(17), 
  6189 ;;		 -> STR_21(25), STR_20(10), STR_19(10), STR_18(10), 
  6190 ;;		 -> STR_17(10), STR_16(10), STR_15(10), STR_14(10), 
  6191 ;;		 -> STR_13(10), STR_12(10), STR_11(10), STR_10(10), 
  6192 ;;		 -> STR_9(10), STR_8(16), STR_5(9), STR_4(3), 
  6193 ;;		 -> STR_3(6), STR_1(18), 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  sp              1   39[BANK0 ] PTR unsigned char 
  6196 ;;		 -> main@buffer(16), debugInfo(10), displayTime@timeFormat(16), displayPPM@strBuffer(20), 
  6197 ;;		 -> displayDataDHT11@buffer(15), 
  6198 ;;  _val            4   31[BANK0 ] struct .
  6199 ;;  width           2   36[BANK0 ] int 
  6200 ;;  ccnt            2   29[BANK0 ] int 
  6201 ;;  c               1   38[BANK0 ] char 
  6202 ;;  flag            1   35[BANK0 ] unsigned char 
  6203 ;;  prec            1   28[BANK0 ] char 
  6204 ;;  ap              1   27[BANK0 ] PTR void [1]
  6205 ;;		 -> ?_sprintf(2), 
  6206 ;; Return value:  Size  Location     Type
  6207 ;;                  2   14[BANK0 ] int 
  6208 ;; Registers used:
  6209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6210 ;; Tracked objects:
  6211 ;;		On entry : 0/0
  6212 ;;		On exit  : 0/0
  6213 ;;		Unchanged: 0/0
  6214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6215 ;;      Params:         0      10       0       0       0
  6216 ;;      Locals:         0      13       0       0       0
  6217 ;;      Temps:          0       3       0       0       0
  6218 ;;      Totals:         0      26       0       0       0
  6219 ;;Total ram usage:       26 bytes
  6220 ;; Hardware stack levels used:    1
  6221 ;; Hardware stack levels required when called:    3
  6222 ;; This function calls:
  6223 ;;		___lwdiv
  6224 ;;		___lwmod
  6225 ;;		___wmul
  6226 ;;		_isdigit
  6227 ;; This function is called by:
  6228 ;;		_displayDataDHT11
  6229 ;;		_displayPPM
  6230 ;;		_displayTime
  6231 ;;		_setHoursStart
  6232 ;;		_setHoursEnd
  6233 ;;		_setMinutesStart
  6234 ;;		_setMinutesEnd
  6235 ;;		_main
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           
  6240                           ;psect for function _sprintf
  6241  0E01                     _sprintf:	
  6242                           
  6243                           ;incstack = 0
  6244                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6245                           ;sprintf@sp stored from wreg
  6246  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  6247  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  6248  0E03  00C7               	movwf	sprintf@sp
  6249                           
  6250                           ;doprnt.c: 494: va_list ap;
  6251                           ;doprnt.c: 499: signed char c;
  6252                           ;doprnt.c: 501: int width;
  6253                           ;doprnt.c: 506: signed char prec;
  6254                           ;doprnt.c: 508: unsigned char flag;
  6255                           ;doprnt.c: 510: int ccnt = 0;
  6256  0E04  01BD               	clrf	sprintf@ccnt
  6257  0E05  01BE               	clrf	sprintf@ccnt+1
  6258                           
  6259                           ;doprnt.c: 527: union {
  6260                           ;doprnt.c: 528: unsigned int _val;
  6261                           ;doprnt.c: 529: struct {
  6262                           ;doprnt.c: 530: const char * _cp;
  6263                           ;doprnt.c: 531: unsigned _len;
  6264                           ;doprnt.c: 532: } _str;
  6265                           ;doprnt.c: 533: } _val;
  6266                           ;doprnt.c: 542: *ap = __va_start();
  6267  0E06  3030               	movlw	(?_sprintf+2)& (0+255)
  6268  0E07  00B8               	movwf	??_sprintf
  6269  0E08  0838               	movf	??_sprintf,w
  6270  0E09  00BB               	movwf	sprintf@ap
  6271  0E0A                     l2222:	
  6272                           ;doprnt.c: 545: while(c = *f++) {
  6273                           
  6274  0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  6275  0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  6276  0E0C  082F               	movf	sprintf@f+1,w
  6277  0E0D  00B9               	movwf	??_sprintf+1
  6278  0E0E  082E               	movf	sprintf@f,w
  6279  0E0F  00B8               	movwf	??_sprintf
  6280  0E10  0AAE               	incf	sprintf@f,f
  6281  0E11  1903               	skipnz
  6282  0E12  0AAF               	incf	sprintf@f+1,f
  6283  0E13  0839               	movf	??_sprintf+1,w
  6284  0E14  00FF               	movwf	127
  6285  0E15  0838               	movf	??_sprintf,w
  6286  0E16  0084               	movwf	4
  6287  0E17  160A  118A  2000  120A  158A  	fcall	stringtab
  6288  0E1C  00BA               	movwf	??_sprintf+2
  6289  0E1D  083A               	movf	??_sprintf+2,w
  6290  0E1E  00C6               	movwf	sprintf@c
  6291  0E1F  08C6               	movf	sprintf@c,f
  6292  0E20  1903               	btfsc	3,2
  6293  0E21  2FF3               	goto	l2224
  6294                           
  6295                           ;doprnt.c: 547: if(c != '%')
  6296  0E22  0846               	movf	sprintf@c,w
  6297  0E23  3A25               	xorlw	37
  6298  0E24  1903               	skipnz
  6299  0E25  2E38               	goto	l2118
  6300                           
  6301                           ;doprnt.c: 549: {
  6302                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
  6303  0E26  0846               	movf	sprintf@c,w
  6304  0E27  00B8               	movwf	??_sprintf
  6305  0E28  0847               	movf	sprintf@sp,w
  6306  0E29  0084               	movwf	4
  6307  0E2A  0838               	movf	??_sprintf,w
  6308  0E2B  1383               	bcf	3,7	;select IRP bank0
  6309  0E2C  0080               	movwf	0
  6310  0E2D  3001               	movlw	1
  6311  0E2E  00B8               	movwf	??_sprintf
  6312  0E2F  0838               	movf	??_sprintf,w
  6313  0E30  07C7               	addwf	sprintf@sp,f
  6314  0E31  3001               	movlw	1
  6315  0E32  07BD               	addwf	sprintf@ccnt,f
  6316  0E33  1803               	skipnc
  6317  0E34  0ABE               	incf	sprintf@ccnt+1,f
  6318  0E35  3000               	movlw	0
  6319  0E36  07BE               	addwf	sprintf@ccnt+1,f
  6320                           
  6321                           ;doprnt.c: 551: continue;
  6322  0E37  2E0A               	goto	l2222
  6323  0E38                     l2118:	
  6324                           
  6325                           ;doprnt.c: 552: }
  6326                           ;doprnt.c: 555: width = 0;
  6327  0E38  01C4               	clrf	sprintf@width
  6328  0E39  01C5               	clrf	sprintf@width+1
  6329                           
  6330                           ;doprnt.c: 557: flag = 0;
  6331  0E3A  01C3               	clrf	sprintf@flag
  6332                           
  6333                           ;doprnt.c: 560: switch(*f) {
  6334                           
  6335                           ;doprnt.c: 559: for(;;) {
  6336  0E3B  2E41               	goto	l2122
  6337  0E3C                     l343:	
  6338                           ;doprnt.c: 588: case '0':
  6339                           
  6340                           
  6341                           ;doprnt.c: 589: flag |= 0x04;
  6342  0E3C  1543               	bsf	sprintf@flag,2
  6343                           
  6344                           ;doprnt.c: 590: f++;
  6345  0E3D  3001               	movlw	1
  6346  0E3E  07AE               	addwf	sprintf@f,f
  6347  0E3F  1803               	skipnc
  6348  0E40  0AAF               	incf	sprintf@f+1,f
  6349  0E41                     l2122:	
  6350                           ;doprnt.c: 593: }
  6351                           
  6352                           ;doprnt.c: 591: continue;
  6353                           
  6354  0E41  082F               	movf	sprintf@f+1,w
  6355  0E42  00FF               	movwf	127
  6356  0E43  082E               	movf	sprintf@f,w
  6357  0E44  0084               	movwf	4
  6358  0E45  160A  118A  2000  120A  158A  	fcall	stringtab
  6359                           
  6360                           ; Switch size 1, requested type "space"
  6361                           ; Number of cases is 1, Range of values is 48 to 48
  6362                           ; switch strategies available:
  6363                           ; Name         Instructions Cycles
  6364                           ; simple_byte            4     3 (average)
  6365                           ; direct_byte           14    11 (fixed)
  6366                           ; jumptable            263     9 (fixed)
  6367                           ;	Chosen strategy is simple_byte
  6368  0E4A  3A30               	xorlw	48	; case 48
  6369  0E4B  1903               	skipnz
  6370  0E4C  2E3C               	goto	l343
  6371  0E4D  2E4E               	goto	l2124
  6372  0E4E                     l2124:	
  6373                           ;doprnt.c: 595: }
  6374                           
  6375                           ;doprnt.c: 594: break;
  6376                           
  6377                           
  6378                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  6379  0E4E  082F               	movf	sprintf@f+1,w
  6380  0E4F  00FF               	movwf	127
  6381  0E50  082E               	movf	sprintf@f,w
  6382  0E51  0084               	movwf	4
  6383  0E52  160A  118A  2000  120A  158A  	fcall	stringtab
  6384  0E57  160A  118A  22E3  120A  158A  	fcall	_isdigit
  6385  0E5C  1C03               	btfss	3,0
  6386  0E5D  2EA4               	goto	l2138
  6387                           
  6388                           ;doprnt.c: 607: width = 0;
  6389  0E5E  1283               	bcf	3,5	;RP0=0, select bank0
  6390  0E5F  1303               	bcf	3,6	;RP1=0, select bank0
  6391  0E60  01C4               	clrf	sprintf@width
  6392  0E61  01C5               	clrf	sprintf@width+1
  6393  0E62                     l2128:	
  6394                           ;doprnt.c: 608: do {
  6395                           
  6396                           
  6397                           ;doprnt.c: 609: width *= 10;
  6398  0E62  300A               	movlw	10
  6399  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  6400  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  6401  0E65  00A0               	movwf	___wmul@multiplier
  6402  0E66  3000               	movlw	0
  6403  0E67  00A1               	movwf	___wmul@multiplier+1
  6404  0E68  0845               	movf	sprintf@width+1,w
  6405  0E69  01A3               	clrf	___wmul@multiplicand+1
  6406  0E6A  07A3               	addwf	___wmul@multiplicand+1,f
  6407  0E6B  0844               	movf	sprintf@width,w
  6408  0E6C  01A2               	clrf	___wmul@multiplicand
  6409  0E6D  07A2               	addwf	___wmul@multiplicand,f
  6410  0E6E  160A  118A  23FB  120A  158A  	fcall	___wmul
  6411  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  6412  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  6413  0E75  0821               	movf	?___wmul+1,w
  6414  0E76  01C5               	clrf	sprintf@width+1
  6415  0E77  07C5               	addwf	sprintf@width+1,f
  6416  0E78  0820               	movf	?___wmul,w
  6417  0E79  01C4               	clrf	sprintf@width
  6418  0E7A  07C4               	addwf	sprintf@width,f
  6419                           
  6420                           ;doprnt.c: 610: width += *f++ - '0';
  6421  0E7B  082F               	movf	sprintf@f+1,w
  6422  0E7C  00FF               	movwf	127
  6423  0E7D  082E               	movf	sprintf@f,w
  6424  0E7E  0084               	movwf	4
  6425  0E7F  160A  118A  2000  120A  158A  	fcall	stringtab
  6426  0E84  3ED0               	addlw	208
  6427  0E85  00B8               	movwf	??_sprintf
  6428  0E86  30FF               	movlw	255
  6429  0E87  1803               	skipnc
  6430  0E88  3000               	movlw	0
  6431  0E89  00B9               	movwf	??_sprintf+1
  6432  0E8A  0838               	movf	??_sprintf,w
  6433  0E8B  07C4               	addwf	sprintf@width,f
  6434  0E8C  1803               	skipnc
  6435  0E8D  0AC5               	incf	sprintf@width+1,f
  6436  0E8E  0839               	movf	??_sprintf+1,w
  6437  0E8F  07C5               	addwf	sprintf@width+1,f
  6438  0E90  3001               	movlw	1
  6439  0E91  07AE               	addwf	sprintf@f,f
  6440  0E92  1803               	skipnc
  6441  0E93  0AAF               	incf	sprintf@f+1,f
  6442                           
  6443                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  6444  0E94  082F               	movf	sprintf@f+1,w
  6445  0E95  00FF               	movwf	127
  6446  0E96  082E               	movf	sprintf@f,w
  6447  0E97  0084               	movwf	4
  6448  0E98  160A  118A  2000  120A  158A  	fcall	stringtab
  6449  0E9D  160A  118A  22E3  120A  158A  	fcall	_isdigit
  6450  0EA2  1803               	btfsc	3,0
  6451  0EA3  2E62               	goto	l2128
  6452  0EA4                     l2138:	
  6453                           ;doprnt.c: 831: }
  6454                           
  6455                           ;doprnt.c: 822: continue;
  6456                           
  6457                           ;doprnt.c: 811: default:
  6458                           
  6459                           ;doprnt.c: 707: case 'i':
  6460                           ;doprnt.c: 708: break;
  6461                           
  6462                           ;doprnt.c: 706: case 'd':
  6463                           
  6464                           ;doprnt.c: 647: goto alldone;
  6465                           
  6466                           ;doprnt.c: 646: case 0:
  6467                           
  6468                           ;doprnt.c: 617: }
  6469                           ;doprnt.c: 644: switch(c = *f++) {
  6470                           
  6471  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  6472  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  6473  0EA6  082F               	movf	sprintf@f+1,w
  6474  0EA7  00B9               	movwf	??_sprintf+1
  6475  0EA8  082E               	movf	sprintf@f,w
  6476  0EA9  00B8               	movwf	??_sprintf
  6477  0EAA  0AAE               	incf	sprintf@f,f
  6478  0EAB  1903               	skipnz
  6479  0EAC  0AAF               	incf	sprintf@f+1,f
  6480  0EAD  0839               	movf	??_sprintf+1,w
  6481  0EAE  00FF               	movwf	127
  6482  0EAF  0838               	movf	??_sprintf,w
  6483  0EB0  0084               	movwf	4
  6484  0EB1  160A  118A  2000  120A  158A  	fcall	stringtab
  6485  0EB6  00C6               	movwf	sprintf@c
  6486                           
  6487                           ; Switch size 1, requested type "space"
  6488                           ; Number of cases is 3, Range of values is 0 to 105
  6489                           ; switch strategies available:
  6490                           ; Name         Instructions Cycles
  6491                           ; simple_byte           10     6 (average)
  6492                           ; jumptable            260     6 (fixed)
  6493                           ;	Chosen strategy is simple_byte
  6494  0EB7  3A00               	xorlw	0	; case 0
  6495  0EB8  1903               	skipnz
  6496  0EB9  2FF3               	goto	l2224
  6497  0EBA  3A64               	xorlw	100	; case 100
  6498  0EBB  1903               	skipnz
  6499  0EBC  2EC1               	goto	l2140
  6500  0EBD  3A0D               	xorlw	13	; case 105
  6501  0EBE  1903               	skipnz
  6502  0EBF  2EC1               	goto	l2140
  6503  0EC0  2E0A               	goto	l2222
  6504  0EC1                     l2140:	
  6505                           
  6506                           ;doprnt.c: 1262: {
  6507                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  6508  0EC1  1283               	bcf	3,5	;RP0=0, select bank0
  6509  0EC2  1303               	bcf	3,6	;RP1=0, select bank0
  6510  0EC3  083B               	movf	sprintf@ap,w
  6511  0EC4  0084               	movwf	4
  6512  0EC5  1383               	bcf	3,7	;select IRP bank0
  6513  0EC6  0800               	movf	0,w
  6514  0EC7  00BF               	movwf	sprintf@_val
  6515  0EC8  0A84               	incf	4,f
  6516  0EC9  0800               	movf	0,w
  6517  0ECA  00C0               	movwf	sprintf@_val+1
  6518  0ECB  3002               	movlw	2
  6519  0ECC  00B8               	movwf	??_sprintf
  6520  0ECD  0838               	movf	??_sprintf,w
  6521  0ECE  07BB               	addwf	sprintf@ap,f
  6522                           
  6523                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  6524  0ECF  1FC0               	btfss	sprintf@_val+1,7
  6525  0ED0  2EDA               	goto	l2150
  6526                           
  6527                           ;doprnt.c: 1271: flag |= 0x03;
  6528  0ED1  3003               	movlw	3
  6529  0ED2  00B8               	movwf	??_sprintf
  6530  0ED3  0838               	movf	??_sprintf,w
  6531  0ED4  04C3               	iorwf	sprintf@flag,f
  6532                           
  6533                           ;doprnt.c: 1272: _val._val = -_val._val;
  6534  0ED5  09BF               	comf	sprintf@_val,f
  6535  0ED6  09C0               	comf	sprintf@_val+1,f
  6536  0ED7  0ABF               	incf	sprintf@_val,f
  6537  0ED8  1903               	skipnz
  6538  0ED9  0AC0               	incf	sprintf@_val+1,f
  6539  0EDA                     l2150:	
  6540                           
  6541                           ;doprnt.c: 1273: }
  6542                           ;doprnt.c: 1275: }
  6543                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6544  0EDA  01C6               	clrf	sprintf@c
  6545  0EDB  0AC6               	incf	sprintf@c,f
  6546  0EDC  0846               	movf	sprintf@c,w
  6547  0EDD  3A05               	xorlw	5
  6548  0EDE  1903               	btfsc	3,2
  6549  0EDF  2F05               	goto	l2162
  6550  0EE0                     l2154:	
  6551                           
  6552                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  6553  0EE0  0846               	movf	sprintf@c,w
  6554  0EE1  00B8               	movwf	??_sprintf
  6555  0EE2  0738               	addwf	??_sprintf,w
  6556  0EE3  3E12               	addlw	low (_dpowers| (0+32768))
  6557  0EE4  0084               	movwf	4
  6558  0EE5  3090               	movlw	high (_dpowers| (0+32768))
  6559  0EE6  1803               	skipnc
  6560  0EE7  3E01               	addlw	1
  6561  0EE8  00FF               	movwf	127
  6562  0EE9  160A  118A  2000  120A  158A  	fcall	stringtab
  6563  0EEE  00B9               	movwf	??_sprintf+1
  6564  0EEF  160A  118A  2000  120A  158A  	fcall	stringtab
  6565  0EF4  00BA               	movwf	??_sprintf+2
  6566  0EF5  083A               	movf	??_sprintf+2,w
  6567  0EF6  0240               	subwf	sprintf@_val+1,w
  6568  0EF7  1D03               	skipz
  6569  0EF8  2EFB               	goto	u2495
  6570  0EF9  0839               	movf	??_sprintf+1,w
  6571  0EFA  023F               	subwf	sprintf@_val,w
  6572  0EFB                     u2495:	
  6573  0EFB  1C03               	btfss	3,0
  6574  0EFC  2F05               	goto	l2162
  6575                           
  6576                           ;doprnt.c: 1316: break;
  6577  0EFD  3001               	movlw	1
  6578  0EFE  00B8               	movwf	??_sprintf
  6579  0EFF  0838               	movf	??_sprintf,w
  6580  0F00  07C6               	addwf	sprintf@c,f
  6581  0F01  0846               	movf	sprintf@c,w
  6582  0F02  3A05               	xorlw	5
  6583  0F03  1D03               	skipz
  6584  0F04  2EE0               	goto	l2154
  6585  0F05                     l2162:	
  6586                           
  6587                           ;doprnt.c: 1354: if(width && flag & 0x03)
  6588  0F05  0845               	movf	sprintf@width+1,w
  6589  0F06  0444               	iorwf	sprintf@width,w
  6590  0F07  1903               	skipnz
  6591  0F08  2F13               	goto	l361
  6592  0F09  0843               	movf	sprintf@flag,w
  6593  0F0A  3903               	andlw	3
  6594  0F0B  1903               	btfsc	3,2
  6595  0F0C  2F13               	goto	l361
  6596                           
  6597                           ;doprnt.c: 1355: width--;
  6598  0F0D  30FF               	movlw	255
  6599  0F0E  07C4               	addwf	sprintf@width,f
  6600  0F0F  1803               	skipnc
  6601  0F10  0AC5               	incf	sprintf@width+1,f
  6602  0F11  30FF               	movlw	255
  6603  0F12  07C5               	addwf	sprintf@width+1,f
  6604  0F13                     l361:	
  6605                           
  6606                           ;doprnt.c: 1390: if(width > c)
  6607  0F13  0846               	movf	sprintf@c,w
  6608  0F14  00B8               	movwf	??_sprintf
  6609  0F15  01B9               	clrf	??_sprintf+1
  6610  0F16  1BB8               	btfsc	??_sprintf,7
  6611  0F17  03B9               	decf	??_sprintf+1,f
  6612  0F18  0839               	movf	??_sprintf+1,w
  6613  0F19  3A80               	xorlw	128
  6614  0F1A  00BA               	movwf	??_sprintf+2
  6615  0F1B  0845               	movf	sprintf@width+1,w
  6616  0F1C  3A80               	xorlw	128
  6617  0F1D  023A               	subwf	??_sprintf+2,w
  6618  0F1E  1D03               	skipz
  6619  0F1F  2F22               	goto	u2535
  6620  0F20  0844               	movf	sprintf@width,w
  6621  0F21  0238               	subwf	??_sprintf,w
  6622  0F22                     u2535:	
  6623  0F22  1803               	skipnc
  6624  0F23  2F32               	goto	l2170
  6625                           
  6626                           ;doprnt.c: 1391: width -= c;
  6627  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  6628  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  6629  0F26  0846               	movf	sprintf@c,w
  6630  0F27  00B8               	movwf	??_sprintf
  6631  0F28  01B9               	clrf	??_sprintf+1
  6632  0F29  1BB8               	btfsc	??_sprintf,7
  6633  0F2A  03B9               	decf	??_sprintf+1,f
  6634  0F2B  0838               	movf	??_sprintf,w
  6635  0F2C  02C4               	subwf	sprintf@width,f
  6636  0F2D  0839               	movf	??_sprintf+1,w
  6637  0F2E  1C03               	skipc
  6638  0F2F  03C5               	decf	sprintf@width+1,f
  6639  0F30  02C5               	subwf	sprintf@width+1,f
  6640  0F31  2F36               	goto	l2172
  6641  0F32                     l2170:	
  6642                           
  6643                           ;doprnt.c: 1392: else
  6644                           ;doprnt.c: 1393: width = 0;
  6645  0F32  1283               	bcf	3,5	;RP0=0, select bank0
  6646  0F33  1303               	bcf	3,6	;RP1=0, select bank0
  6647  0F34  01C4               	clrf	sprintf@width
  6648  0F35  01C5               	clrf	sprintf@width+1
  6649  0F36                     l2172:	
  6650                           
  6651                           ;doprnt.c: 1396: if(flag & 0x04) {
  6652  0F36  1D43               	btfss	sprintf@flag,2
  6653  0F37  2F69               	goto	l2192
  6654                           
  6655                           ;doprnt.c: 1401: if(flag & 0x03)
  6656  0F38  0843               	movf	sprintf@flag,w
  6657  0F39  3903               	andlw	3
  6658  0F3A  1903               	btfsc	3,2
  6659  0F3B  2F4D               	goto	l2182
  6660                           
  6661                           ;doprnt.c: 1402: ((*sp++ = ('-')),(++ccnt));
  6662  0F3C  302D               	movlw	45
  6663  0F3D  00B8               	movwf	??_sprintf
  6664  0F3E  0847               	movf	sprintf@sp,w
  6665  0F3F  0084               	movwf	4
  6666  0F40  0838               	movf	??_sprintf,w
  6667  0F41  1383               	bcf	3,7	;select IRP bank0
  6668  0F42  0080               	movwf	0
  6669  0F43  3001               	movlw	1
  6670  0F44  00B8               	movwf	??_sprintf
  6671  0F45  0838               	movf	??_sprintf,w
  6672  0F46  07C7               	addwf	sprintf@sp,f
  6673  0F47  3001               	movlw	1
  6674  0F48  07BD               	addwf	sprintf@ccnt,f
  6675  0F49  1803               	skipnc
  6676  0F4A  0ABE               	incf	sprintf@ccnt+1,f
  6677  0F4B  3000               	movlw	0
  6678  0F4C  07BE               	addwf	sprintf@ccnt+1,f
  6679  0F4D                     l2182:	
  6680                           
  6681                           ;doprnt.c: 1424: if(width)
  6682  0F4D  0845               	movf	sprintf@width+1,w
  6683  0F4E  0444               	iorwf	sprintf@width,w
  6684  0F4F  1903               	skipnz
  6685  0F50  2F9D               	goto	l2210
  6686                           
  6687                           ;doprnt.c: 1426: ((*sp++ = ('0')),(++ccnt));
  6688                           
  6689                           ;doprnt.c: 1425: do
  6690  0F51  3030               	movlw	48
  6691  0F52  00B8               	movwf	??_sprintf
  6692  0F53  0847               	movf	sprintf@sp,w
  6693  0F54  0084               	movwf	4
  6694  0F55  0838               	movf	??_sprintf,w
  6695  0F56  1383               	bcf	3,7	;select IRP bank0
  6696  0F57  0080               	movwf	0
  6697  0F58  3001               	movlw	1
  6698  0F59  00B8               	movwf	??_sprintf
  6699  0F5A  0838               	movf	??_sprintf,w
  6700  0F5B  07C7               	addwf	sprintf@sp,f
  6701  0F5C  3001               	movlw	1
  6702  0F5D  07BD               	addwf	sprintf@ccnt,f
  6703  0F5E  1803               	skipnc
  6704  0F5F  0ABE               	incf	sprintf@ccnt+1,f
  6705  0F60  3000               	movlw	0
  6706  0F61  07BE               	addwf	sprintf@ccnt+1,f
  6707                           
  6708                           ;doprnt.c: 1427: while(--width);
  6709  0F62  30FF               	movlw	255
  6710  0F63  07C4               	addwf	sprintf@width,f
  6711  0F64  1803               	skipnc
  6712  0F65  0AC5               	incf	sprintf@width+1,f
  6713  0F66  30FF               	movlw	255
  6714  0F67  07C5               	addwf	sprintf@width+1,f
  6715  0F68  2F4D               	goto	l2182
  6716  0F69                     l2192:	
  6717                           ;doprnt.c: 1429: } else
  6718                           
  6719                           
  6720                           ;doprnt.c: 1431: {
  6721                           ;doprnt.c: 1433: if(width
  6722                           ;doprnt.c: 1437: )
  6723  0F69  0845               	movf	sprintf@width+1,w
  6724  0F6A  0444               	iorwf	sprintf@width,w
  6725  0F6B  1903               	skipnz
  6726  0F6C  2F88               	goto	l2202
  6727  0F6D                     l2194:	
  6728                           ;doprnt.c: 1438: do
  6729                           
  6730                           
  6731                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
  6732  0F6D  3020               	movlw	32
  6733  0F6E  00B8               	movwf	??_sprintf
  6734  0F6F  0847               	movf	sprintf@sp,w
  6735  0F70  0084               	movwf	4
  6736  0F71  0838               	movf	??_sprintf,w
  6737  0F72  1383               	bcf	3,7	;select IRP bank0
  6738  0F73  0080               	movwf	0
  6739  0F74  3001               	movlw	1
  6740  0F75  00B8               	movwf	??_sprintf
  6741  0F76  0838               	movf	??_sprintf,w
  6742  0F77  07C7               	addwf	sprintf@sp,f
  6743  0F78  3001               	movlw	1
  6744  0F79  07BD               	addwf	sprintf@ccnt,f
  6745  0F7A  1803               	skipnc
  6746  0F7B  0ABE               	incf	sprintf@ccnt+1,f
  6747  0F7C  3000               	movlw	0
  6748  0F7D  07BE               	addwf	sprintf@ccnt+1,f
  6749                           
  6750                           ;doprnt.c: 1440: while(--width);
  6751  0F7E  30FF               	movlw	255
  6752  0F7F  07C4               	addwf	sprintf@width,f
  6753  0F80  1803               	skipnc
  6754  0F81  0AC5               	incf	sprintf@width+1,f
  6755  0F82  30FF               	movlw	255
  6756  0F83  07C5               	addwf	sprintf@width+1,f
  6757  0F84  0845               	movf	sprintf@width+1,w
  6758  0F85  0444               	iorwf	sprintf@width,w
  6759  0F86  1D03               	skipz
  6760  0F87  2F6D               	goto	l2194
  6761  0F88                     l2202:	
  6762                           
  6763                           ;doprnt.c: 1447: if(flag & 0x03)
  6764  0F88  0843               	movf	sprintf@flag,w
  6765  0F89  3903               	andlw	3
  6766  0F8A  1903               	btfsc	3,2
  6767  0F8B  2F9D               	goto	l2210
  6768                           
  6769                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
  6770  0F8C  302D               	movlw	45
  6771  0F8D  00B8               	movwf	??_sprintf
  6772  0F8E  0847               	movf	sprintf@sp,w
  6773  0F8F  0084               	movwf	4
  6774  0F90  0838               	movf	??_sprintf,w
  6775  0F91  1383               	bcf	3,7	;select IRP bank0
  6776  0F92  0080               	movwf	0
  6777  0F93  3001               	movlw	1
  6778  0F94  00B8               	movwf	??_sprintf
  6779  0F95  0838               	movf	??_sprintf,w
  6780  0F96  07C7               	addwf	sprintf@sp,f
  6781  0F97  3001               	movlw	1
  6782  0F98  07BD               	addwf	sprintf@ccnt,f
  6783  0F99  1803               	skipnc
  6784  0F9A  0ABE               	incf	sprintf@ccnt+1,f
  6785  0F9B  3000               	movlw	0
  6786  0F9C  07BE               	addwf	sprintf@ccnt+1,f
  6787  0F9D                     l2210:	
  6788                           
  6789                           ;doprnt.c: 1478: }
  6790                           ;doprnt.c: 1481: prec = c;
  6791  0F9D  0846               	movf	sprintf@c,w
  6792  0F9E  00B8               	movwf	??_sprintf
  6793  0F9F  0838               	movf	??_sprintf,w
  6794  0FA0  00BC               	movwf	sprintf@prec
  6795  0FA1                     l2220:	
  6796                           ;doprnt.c: 1483: while(prec--) {
  6797                           
  6798  0FA1  30FF               	movlw	-1
  6799  0FA2  00B8               	movwf	??_sprintf
  6800  0FA3  0838               	movf	??_sprintf,w
  6801  0FA4  07BC               	addwf	sprintf@prec,f
  6802  0FA5  083C               	movf	sprintf@prec,w
  6803  0FA6  3AFF               	xorlw	-1
  6804  0FA7  1903               	btfsc	3,2
  6805  0FA8  2E0A               	goto	l2222
  6806                           
  6807                           ;doprnt.c: 1487: {
  6808                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  6809  0FA9  300A               	movlw	10
  6810  0FAA  00A8               	movwf	___lwmod@divisor
  6811  0FAB  3000               	movlw	0
  6812  0FAC  00A9               	movwf	___lwmod@divisor+1
  6813  0FAD  083C               	movf	sprintf@prec,w
  6814  0FAE  00B8               	movwf	??_sprintf
  6815  0FAF  0738               	addwf	??_sprintf,w
  6816  0FB0  3E12               	addlw	low (_dpowers| (0+32768))
  6817  0FB1  0084               	movwf	4
  6818  0FB2  3090               	movlw	high (_dpowers| (0+32768))
  6819  0FB3  1803               	skipnc
  6820  0FB4  3E01               	addlw	1
  6821  0FB5  00FF               	movwf	127
  6822  0FB6  160A  118A  2000  120A  158A  	fcall	stringtab
  6823  0FBB  00A0               	movwf	___lwdiv@divisor
  6824  0FBC  160A  118A  2000  120A  158A  	fcall	stringtab
  6825  0FC1  00A1               	movwf	___lwdiv@divisor+1
  6826  0FC2  0840               	movf	sprintf@_val+1,w
  6827  0FC3  01A3               	clrf	___lwdiv@dividend+1
  6828  0FC4  07A3               	addwf	___lwdiv@dividend+1,f
  6829  0FC5  083F               	movf	sprintf@_val,w
  6830  0FC6  01A2               	clrf	___lwdiv@dividend
  6831  0FC7  07A2               	addwf	___lwdiv@dividend,f
  6832  0FC8  160A  118A  25B3  120A  158A  	fcall	___lwdiv
  6833  0FCD  1283               	bcf	3,5	;RP0=0, select bank0
  6834  0FCE  1303               	bcf	3,6	;RP1=0, select bank0
  6835  0FCF  0821               	movf	?___lwdiv+1,w
  6836  0FD0  01AB               	clrf	___lwmod@dividend+1
  6837  0FD1  07AB               	addwf	___lwmod@dividend+1,f
  6838  0FD2  0820               	movf	?___lwdiv,w
  6839  0FD3  01AA               	clrf	___lwmod@dividend
  6840  0FD4  07AA               	addwf	___lwmod@dividend,f
  6841  0FD5  160A  118A  250B  120A  158A  	fcall	___lwmod
  6842  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  6843  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  6844  0FDC  0828               	movf	?___lwmod,w
  6845  0FDD  3E30               	addlw	48
  6846  0FDE  00B9               	movwf	??_sprintf+1
  6847  0FDF  0839               	movf	??_sprintf+1,w
  6848  0FE0  00C6               	movwf	sprintf@c
  6849                           
  6850                           ;doprnt.c: 1532: }
  6851                           ;doprnt.c: 1533: ((*sp++ = (c)),(++ccnt));
  6852  0FE1  0846               	movf	sprintf@c,w
  6853  0FE2  00B8               	movwf	??_sprintf
  6854  0FE3  0847               	movf	sprintf@sp,w
  6855  0FE4  0084               	movwf	4
  6856  0FE5  0838               	movf	??_sprintf,w
  6857  0FE6  1383               	bcf	3,7	;select IRP bank0
  6858  0FE7  0080               	movwf	0
  6859  0FE8  3001               	movlw	1
  6860  0FE9  00B8               	movwf	??_sprintf
  6861  0FEA  0838               	movf	??_sprintf,w
  6862  0FEB  07C7               	addwf	sprintf@sp,f
  6863  0FEC  3001               	movlw	1
  6864  0FED  07BD               	addwf	sprintf@ccnt,f
  6865  0FEE  1803               	skipnc
  6866  0FEF  0ABE               	incf	sprintf@ccnt+1,f
  6867  0FF0  3000               	movlw	0
  6868  0FF1  07BE               	addwf	sprintf@ccnt+1,f
  6869  0FF2  2FA1               	goto	l2220
  6870  0FF3                     l2224:	
  6871                           ;doprnt.c: 1534: }
  6872                           ;doprnt.c: 1542: }
  6873                           ;doprnt.c: 1544: alldone:
  6874                           
  6875                           
  6876                           ;doprnt.c: 1547: *sp = 0;
  6877  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  6878  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  6879  0FF5  0847               	movf	sprintf@sp,w
  6880  0FF6  0084               	movwf	4
  6881  0FF7  1383               	bcf	3,7	;select IRP bank0
  6882  0FF8  0180               	clrf	0
  6883                           
  6884                           ;doprnt.c: 1549: return ccnt;
  6885  0FF9  083E               	movf	sprintf@ccnt+1,w
  6886  0FFA  01AF               	clrf	?_sprintf+1
  6887  0FFB  07AF               	addwf	?_sprintf+1,f
  6888  0FFC  083D               	movf	sprintf@ccnt,w
  6889  0FFD  01AE               	clrf	?_sprintf
  6890  0FFE  07AE               	addwf	?_sprintf,f
  6891  0FFF  0008               	return
  6892  1000                     __end_of_sprintf:	
  6893                           
  6894                           	psect	text26
  6895  12E3                     __ptext26:	
  6896 ;; *************** function _isdigit *****************
  6897 ;; Defined at:
  6898 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  c               1    wreg     unsigned char 
  6901 ;; Auto vars:     Size  Location     Type
  6902 ;;  c               1    1[BANK0 ] unsigned char 
  6903 ;; Return value:  Size  Location     Type
  6904 ;;		None               void
  6905 ;; Registers used:
  6906 ;;		wreg, status,2, status,0
  6907 ;; Tracked objects:
  6908 ;;		On entry : 0/0
  6909 ;;		On exit  : 0/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6912 ;;      Params:         0       0       0       0       0
  6913 ;;      Locals:         0       2       0       0       0
  6914 ;;      Temps:          0       0       0       0       0
  6915 ;;      Totals:         0       2       0       0       0
  6916 ;;Total ram usage:        2 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    2
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_sprintf
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           
  6927                           ;psect for function _isdigit
  6928  12E3                     _isdigit:	
  6929                           
  6930                           ;incstack = 0
  6931                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6932                           ;isdigit@c stored from wreg
  6933  12E3  1283               	bcf	3,5	;RP0=0, select bank0
  6934  12E4  1303               	bcf	3,6	;RP1=0, select bank0
  6935  12E5  00A1               	movwf	isdigit@c
  6936  12E6  01A0               	clrf	_isdigit$527
  6937  12E7  303A               	movlw	58
  6938  12E8  0221               	subwf	isdigit@c,w
  6939  12E9  1803               	skipnc
  6940  12EA  2AF1               	goto	l1994
  6941  12EB  3030               	movlw	48
  6942  12EC  0221               	subwf	isdigit@c,w
  6943  12ED  1C03               	skipc
  6944  12EE  2AF1               	goto	l1994
  6945  12EF  01A0               	clrf	_isdigit$527
  6946  12F0  0AA0               	incf	_isdigit$527,f
  6947  12F1                     l1994:	
  6948  12F1  0C20               	rrf	_isdigit$527,w
  6949  12F2  0008               	return
  6950  12F3                     __end_of_isdigit:	
  6951                           
  6952                           	psect	text27
  6953  13FB                     __ptext27:	
  6954 ;; *************** function ___wmul *****************
  6955 ;; Defined at:
  6956 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  6957 ;; Parameters:    Size  Location     Type
  6958 ;;  multiplier      2    0[BANK0 ] unsigned int 
  6959 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;  product         2    4[BANK0 ] unsigned int 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  2    0[BANK0 ] unsigned int 
  6964 ;; Registers used:
  6965 ;;		wreg, status,2, status,0
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6971 ;;      Params:         0       4       0       0       0
  6972 ;;      Locals:         0       2       0       0       0
  6973 ;;      Temps:          0       0       0       0       0
  6974 ;;      Totals:         0       6       0       0       0
  6975 ;;Total ram usage:        6 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    2
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_sprintf
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           
  6986                           ;psect for function ___wmul
  6987  13FB                     ___wmul:	
  6988                           
  6989                           ;incstack = 0
  6990                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6991  13FB  1283               	bcf	3,5	;RP0=0, select bank0
  6992  13FC  1303               	bcf	3,6	;RP1=0, select bank0
  6993  13FD  01A4               	clrf	___wmul@product
  6994  13FE  01A5               	clrf	___wmul@product+1
  6995  13FF                     l2000:	
  6996  13FF  1C20               	btfss	___wmul@multiplier,0
  6997  1400  2C07               	goto	l462
  6998  1401  0822               	movf	___wmul@multiplicand,w
  6999  1402  07A4               	addwf	___wmul@product,f
  7000  1403  1803               	skipnc
  7001  1404  0AA5               	incf	___wmul@product+1,f
  7002  1405  0823               	movf	___wmul@multiplicand+1,w
  7003  1406  07A5               	addwf	___wmul@product+1,f
  7004  1407                     l462:	
  7005  1407  3001               	movlw	1
  7006  1408                     u2165:	
  7007  1408  1003               	clrc
  7008  1409  0DA2               	rlf	___wmul@multiplicand,f
  7009  140A  0DA3               	rlf	___wmul@multiplicand+1,f
  7010  140B  3EFF               	addlw	-1
  7011  140C  1D03               	skipz
  7012  140D  2C08               	goto	u2165
  7013  140E  3001               	movlw	1
  7014  140F                     u2175:	
  7015  140F  1003               	clrc
  7016  1410  0CA1               	rrf	___wmul@multiplier+1,f
  7017  1411  0CA0               	rrf	___wmul@multiplier,f
  7018  1412  3EFF               	addlw	-1
  7019  1413  1D03               	skipz
  7020  1414  2C0F               	goto	u2175
  7021  1415  0821               	movf	___wmul@multiplier+1,w
  7022  1416  0420               	iorwf	___wmul@multiplier,w
  7023  1417  1D03               	skipz
  7024  1418  2BFF               	goto	l2000
  7025  1419  0825               	movf	___wmul@product+1,w
  7026  141A  01A1               	clrf	?___wmul+1
  7027  141B  07A1               	addwf	?___wmul+1,f
  7028  141C  0824               	movf	___wmul@product,w
  7029  141D  01A0               	clrf	?___wmul
  7030  141E  07A0               	addwf	?___wmul,f
  7031  141F  0008               	return
  7032  1420                     __end_of___wmul:	
  7033                           
  7034                           	psect	text28
  7035  150B                     __ptext28:	
  7036 ;; *************** function ___lwmod *****************
  7037 ;; Defined at:
  7038 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  7039 ;; Parameters:    Size  Location     Type
  7040 ;;  divisor         2    8[BANK0 ] unsigned int 
  7041 ;;  dividend        2   10[BANK0 ] unsigned int 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;  counter         1   13[BANK0 ] unsigned char 
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  2    8[BANK0 ] unsigned int 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7053 ;;      Params:         0       4       0       0       0
  7054 ;;      Locals:         0       1       0       0       0
  7055 ;;      Temps:          0       1       0       0       0
  7056 ;;      Totals:         0       6       0       0       0
  7057 ;;Total ram usage:        6 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:    2
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_sprintf
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           
  7068                           ;psect for function ___lwmod
  7069  150B                     ___lwmod:	
  7070                           
  7071                           ;incstack = 0
  7072                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  7073  150B  1283               	bcf	3,5	;RP0=0, select bank0
  7074  150C  1303               	bcf	3,6	;RP1=0, select bank0
  7075  150D  0829               	movf	___lwmod@divisor+1,w
  7076  150E  0428               	iorwf	___lwmod@divisor,w
  7077  150F  1903               	skipnz
  7078  1510  2D3A               	goto	l2084
  7079  1511  01AD               	clrf	___lwmod@counter
  7080  1512  0AAD               	incf	___lwmod@counter,f
  7081  1513                     l2074:	
  7082  1513  1BA9               	btfsc	___lwmod@divisor+1,7
  7083  1514  2D21               	goto	l2076
  7084  1515  3001               	movlw	1
  7085  1516                     u2385:	
  7086  1516  1003               	clrc
  7087  1517  0DA8               	rlf	___lwmod@divisor,f
  7088  1518  0DA9               	rlf	___lwmod@divisor+1,f
  7089  1519  3EFF               	addlw	-1
  7090  151A  1D03               	skipz
  7091  151B  2D16               	goto	u2385
  7092  151C  3001               	movlw	1
  7093  151D  00AC               	movwf	??___lwmod
  7094  151E  082C               	movf	??___lwmod,w
  7095  151F  07AD               	addwf	___lwmod@counter,f
  7096  1520  2D13               	goto	l2074
  7097  1521                     l2076:	
  7098  1521  0829               	movf	___lwmod@divisor+1,w
  7099  1522  022B               	subwf	___lwmod@dividend+1,w
  7100  1523  1D03               	skipz
  7101  1524  2D27               	goto	u2405
  7102  1525  0828               	movf	___lwmod@divisor,w
  7103  1526  022A               	subwf	___lwmod@dividend,w
  7104  1527                     u2405:	
  7105  1527  1C03               	skipc
  7106  1528  2D2F               	goto	l2080
  7107  1529  0828               	movf	___lwmod@divisor,w
  7108  152A  02AA               	subwf	___lwmod@dividend,f
  7109  152B  0829               	movf	___lwmod@divisor+1,w
  7110  152C  1C03               	skipc
  7111  152D  03AB               	decf	___lwmod@dividend+1,f
  7112  152E  02AB               	subwf	___lwmod@dividend+1,f
  7113  152F                     l2080:	
  7114  152F  3001               	movlw	1
  7115  1530                     u2415:	
  7116  1530  1003               	clrc
  7117  1531  0CA9               	rrf	___lwmod@divisor+1,f
  7118  1532  0CA8               	rrf	___lwmod@divisor,f
  7119  1533  3EFF               	addlw	-1
  7120  1534  1D03               	skipz
  7121  1535  2D30               	goto	u2415
  7122  1536  3001               	movlw	1
  7123  1537  02AD               	subwf	___lwmod@counter,f
  7124  1538  1D03               	btfss	3,2
  7125  1539  2D21               	goto	l2076
  7126  153A                     l2084:	
  7127  153A  082B               	movf	___lwmod@dividend+1,w
  7128  153B  01A9               	clrf	?___lwmod+1
  7129  153C  07A9               	addwf	?___lwmod+1,f
  7130  153D  082A               	movf	___lwmod@dividend,w
  7131  153E  01A8               	clrf	?___lwmod
  7132  153F  07A8               	addwf	?___lwmod,f
  7133  1540  0008               	return
  7134  1541                     __end_of___lwmod:	
  7135                           
  7136                           	psect	text29
  7137  15B3                     __ptext29:	
  7138 ;; *************** function ___lwdiv *****************
  7139 ;; Defined at:
  7140 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;  divisor         2    0[BANK0 ] unsigned int 
  7143 ;;  dividend        2    2[BANK0 ] unsigned int 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;  quotient        2    5[BANK0 ] unsigned int 
  7146 ;;  counter         1    7[BANK0 ] unsigned char 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  2    0[BANK0 ] unsigned int 
  7149 ;; Registers used:
  7150 ;;		wreg, status,2, status,0
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7156 ;;      Params:         0       4       0       0       0
  7157 ;;      Locals:         0       3       0       0       0
  7158 ;;      Temps:          0       1       0       0       0
  7159 ;;      Totals:         0       8       0       0       0
  7160 ;;Total ram usage:        8 bytes
  7161 ;; Hardware stack levels used:    1
  7162 ;; Hardware stack levels required when called:    2
  7163 ;; This function calls:
  7164 ;;		Nothing
  7165 ;; This function is called by:
  7166 ;;		_sprintf
  7167 ;; This function uses a non-reentrant model
  7168 ;;
  7169                           
  7170                           
  7171                           ;psect for function ___lwdiv
  7172  15B3                     ___lwdiv:	
  7173                           
  7174                           ;incstack = 0
  7175                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  7176  15B3  1283               	bcf	3,5	;RP0=0, select bank0
  7177  15B4  1303               	bcf	3,6	;RP1=0, select bank0
  7178  15B5  01A5               	clrf	___lwdiv@quotient
  7179  15B6  01A6               	clrf	___lwdiv@quotient+1
  7180  15B7  0821               	movf	___lwdiv@divisor+1,w
  7181  15B8  0420               	iorwf	___lwdiv@divisor,w
  7182  15B9  1903               	skipnz
  7183  15BA  2DEC               	goto	l2062
  7184  15BB  01A7               	clrf	___lwdiv@counter
  7185  15BC  0AA7               	incf	___lwdiv@counter,f
  7186  15BD                     l2050:	
  7187  15BD  1BA1               	btfsc	___lwdiv@divisor+1,7
  7188  15BE  2DCB               	goto	l2052
  7189  15BF  3001               	movlw	1
  7190  15C0                     u2315:	
  7191  15C0  1003               	clrc
  7192  15C1  0DA0               	rlf	___lwdiv@divisor,f
  7193  15C2  0DA1               	rlf	___lwdiv@divisor+1,f
  7194  15C3  3EFF               	addlw	-1
  7195  15C4  1D03               	skipz
  7196  15C5  2DC0               	goto	u2315
  7197  15C6  3001               	movlw	1
  7198  15C7  00A4               	movwf	??___lwdiv
  7199  15C8  0824               	movf	??___lwdiv,w
  7200  15C9  07A7               	addwf	___lwdiv@counter,f
  7201  15CA  2DBD               	goto	l2050
  7202  15CB                     l2052:	
  7203  15CB  3001               	movlw	1
  7204  15CC                     u2335:	
  7205  15CC  1003               	clrc
  7206  15CD  0DA5               	rlf	___lwdiv@quotient,f
  7207  15CE  0DA6               	rlf	___lwdiv@quotient+1,f
  7208  15CF  3EFF               	addlw	-1
  7209  15D0  1D03               	skipz
  7210  15D1  2DCC               	goto	u2335
  7211  15D2  0821               	movf	___lwdiv@divisor+1,w
  7212  15D3  0223               	subwf	___lwdiv@dividend+1,w
  7213  15D4  1D03               	skipz
  7214  15D5  2DD8               	goto	u2345
  7215  15D6  0820               	movf	___lwdiv@divisor,w
  7216  15D7  0222               	subwf	___lwdiv@dividend,w
  7217  15D8                     u2345:	
  7218  15D8  1C03               	skipc
  7219  15D9  2DE1               	goto	l2058
  7220  15DA  0820               	movf	___lwdiv@divisor,w
  7221  15DB  02A2               	subwf	___lwdiv@dividend,f
  7222  15DC  0821               	movf	___lwdiv@divisor+1,w
  7223  15DD  1C03               	skipc
  7224  15DE  03A3               	decf	___lwdiv@dividend+1,f
  7225  15DF  02A3               	subwf	___lwdiv@dividend+1,f
  7226  15E0  1425               	bsf	___lwdiv@quotient,0
  7227  15E1                     l2058:	
  7228  15E1  3001               	movlw	1
  7229  15E2                     u2355:	
  7230  15E2  1003               	clrc
  7231  15E3  0CA1               	rrf	___lwdiv@divisor+1,f
  7232  15E4  0CA0               	rrf	___lwdiv@divisor,f
  7233  15E5  3EFF               	addlw	-1
  7234  15E6  1D03               	skipz
  7235  15E7  2DE2               	goto	u2355
  7236  15E8  3001               	movlw	1
  7237  15E9  02A7               	subwf	___lwdiv@counter,f
  7238  15EA  1D03               	btfss	3,2
  7239  15EB  2DCB               	goto	l2052
  7240  15EC                     l2062:	
  7241  15EC  0826               	movf	___lwdiv@quotient+1,w
  7242  15ED  01A1               	clrf	?___lwdiv+1
  7243  15EE  07A1               	addwf	?___lwdiv+1,f
  7244  15EF  0825               	movf	___lwdiv@quotient,w
  7245  15F0  01A0               	clrf	?___lwdiv
  7246  15F1  07A0               	addwf	?___lwdiv,f
  7247  15F2  0008               	return
  7248  15F3                     __end_of___lwdiv:	
  7249                           
  7250                           	psect	text30
  7251  13D6                     __ptext30:	
  7252 ;; *************** function _printToLCD *****************
  7253 ;; Defined at:
  7254 ;;		line 84 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;  str             2    2[BANK0 ] PTR const unsigned char 
  7257 ;;		 -> STR_32(16), STR_30(9), STR_28(10), STR_27(16), 
  7258 ;;		 -> STR_25(11), STR_23(12), STR_22(18), main@buffer(16), 
  7259 ;;		 -> debugInfo(10), displayTime@timeFormat(16), STR_7(8), STR_6(8), 
  7260 ;;		 -> displayPPM@strBuffer(20), STR_2(7), displayDataDHT11@buffer(15), 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;		None
  7263 ;; Return value:  Size  Location     Type
  7264 ;;		None               void
  7265 ;; Registers used:
  7266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7272 ;;      Params:         0       2       0       0       0
  7273 ;;      Locals:         0       0       0       0       0
  7274 ;;      Temps:          0       0       0       0       0
  7275 ;;      Totals:         0       2       0       0       0
  7276 ;;Total ram usage:        2 bytes
  7277 ;; Hardware stack levels used:    1
  7278 ;; Hardware stack levels required when called:    3
  7279 ;; This function calls:
  7280 ;;		_dataCTRL
  7281 ;; This function is called by:
  7282 ;;		_displayDataDHT11
  7283 ;;		_runDHT11
  7284 ;;		_displayPPM
  7285 ;;		_displayTime
  7286 ;;		_setHoursStart
  7287 ;;		_setHoursEnd
  7288 ;;		_setMinutesStart
  7289 ;;		_setMinutesEnd
  7290 ;;		_main
  7291 ;;		_startUpSequence
  7292 ;;		_printStatusPPM
  7293 ;; This function uses a non-reentrant model
  7294 ;;
  7295                           
  7296                           
  7297                           ;psect for function _printToLCD
  7298  13D6                     _printToLCD:	
  7299  13D6                     l2104:	
  7300                           ;lcd_functions.h: 86: while (*str)
  7301                           
  7302                           ;incstack = 0
  7303                           ; Regs used in _printToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7304                           
  7305  13D6  1283               	bcf	3,5	;RP0=0, select bank0
  7306  13D7  1303               	bcf	3,6	;RP1=0, select bank0
  7307  13D8  0823               	movf	printToLCD@str+1,w
  7308  13D9  00FF               	movwf	127
  7309  13DA  0822               	movf	printToLCD@str,w
  7310  13DB  0084               	movwf	4
  7311  13DC  160A  118A  2000  160A  118A  	fcall	stringtab
  7312  13E1  3800               	iorlw	0
  7313  13E2  1903               	btfsc	3,2
  7314  13E3  0008               	return
  7315                           
  7316                           ;lcd_functions.h: 87: {
  7317                           ;lcd_functions.h: 88: dataCTRL(*str);
  7318  13E4  1283               	bcf	3,5	;RP0=0, select bank0
  7319  13E5  1303               	bcf	3,6	;RP1=0, select bank0
  7320  13E6  0823               	movf	printToLCD@str+1,w
  7321  13E7  00FF               	movwf	127
  7322  13E8  0822               	movf	printToLCD@str,w
  7323  13E9  0084               	movwf	4
  7324  13EA  160A  118A  2000  160A  118A  	fcall	stringtab
  7325  13EF  160A  118A  2317  160A  118A  	fcall	_dataCTRL
  7326                           
  7327                           ;lcd_functions.h: 89: str++;
  7328  13F4  3001               	movlw	1
  7329  13F5  1283               	bcf	3,5	;RP0=0, select bank0
  7330  13F6  1303               	bcf	3,6	;RP1=0, select bank0
  7331  13F7  07A2               	addwf	printToLCD@str,f
  7332  13F8  1803               	skipnc
  7333  13F9  0AA3               	incf	printToLCD@str+1,f
  7334  13FA  2BD6               	goto	l2104
  7335  13FB                     __end_of_printToLCD:	
  7336                           
  7337                           	psect	text31
  7338  1317                     __ptext31:	
  7339 ;; *************** function _dataCTRL *****************
  7340 ;; Defined at:
  7341 ;;		line 33 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  7342 ;; Parameters:    Size  Location     Type
  7343 ;;  DAT             1    wreg     unsigned char 
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;  DAT             1    1[BANK0 ] unsigned char 
  7346 ;; Return value:  Size  Location     Type
  7347 ;;		None               void
  7348 ;; Registers used:
  7349 ;;		wreg
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7355 ;;      Params:         0       0       0       0       0
  7356 ;;      Locals:         0       1       0       0       0
  7357 ;;      Temps:          0       1       0       0       0
  7358 ;;      Totals:         0       2       0       0       0
  7359 ;;Total ram usage:        2 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:    2
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_printToLCD
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           
  7370                           ;psect for function _dataCTRL
  7371  1317                     _dataCTRL:	
  7372                           
  7373                           ;incstack = 0
  7374                           ; Regs used in _dataCTRL: [wreg]
  7375                           ;dataCTRL@DAT stored from wreg
  7376  1317  1283               	bcf	3,5	;RP0=0, select bank0
  7377  1318  1303               	bcf	3,6	;RP1=0, select bank0
  7378  1319  00A1               	movwf	dataCTRL@DAT
  7379                           
  7380                           ;lcd_functions.h: 35: PORTD = DAT;
  7381  131A  0821               	movf	dataCTRL@DAT,w
  7382  131B  0088               	movwf	8	;volatile
  7383                           
  7384                           ;lcd_functions.h: 36: RC0 = 1;
  7385  131C  1407               	bsf	7,0	;volatile
  7386                           
  7387                           ;lcd_functions.h: 37: RC1 = 0;
  7388  131D  1087               	bcf	7,1	;volatile
  7389                           
  7390                           ;lcd_functions.h: 38: RC2 = 1;
  7391  131E  1507               	bsf	7,2	;volatile
  7392                           
  7393                           ;lcd_functions.h: 39: _delay((unsigned long)((1)*(4000000/4000.0)));
  7394  131F  30F9               	movlw	249
  7395  1320  00A0               	movwf	??_dataCTRL
  7396  1321                     u4497:	
  7397  1321  0000               	nop
  7398  1322  0BA0               	decfsz	??_dataCTRL,f
  7399  1323  2B21               	goto	u4497
  7400  1324  2B25               	nop2	;nop
  7401  1325  0000               	nop
  7402                           
  7403                           ;lcd_functions.h: 40: RC2 = 0;
  7404  1326  1283               	bcf	3,5	;RP0=0, select bank0
  7405  1327  1303               	bcf	3,6	;RP1=0, select bank0
  7406  1328  1107               	bcf	7,2	;volatile
  7407  1329  0008               	return
  7408  132A                     __end_of_dataCTRL:	
  7409                           
  7410                           	psect	text32
  7411  0842                     __ptext32:	
  7412 ;; *************** function ___fttol *****************
  7413 ;; Defined at:
  7414 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  f1              3   46[BANK0 ] float 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  lval            4   55[BANK0 ] unsigned long 
  7419 ;;  exp1            1   59[BANK0 ] unsigned char 
  7420 ;;  sign1           1   54[BANK0 ] unsigned char 
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  4   46[BANK0 ] long 
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, status,0
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7430 ;;      Params:         0       4       0       0       0
  7431 ;;      Locals:         0       6       0       0       0
  7432 ;;      Temps:          0       4       0       0       0
  7433 ;;      Totals:         0      14       0       0       0
  7434 ;;Total ram usage:       14 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:    2
  7437 ;; This function calls:
  7438 ;;		Nothing
  7439 ;; This function is called by:
  7440 ;;		_displayPPM
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           
  7445                           ;psect for function ___fttol
  7446  0842                     ___fttol:	
  7447                           
  7448                           ;incstack = 0
  7449                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  7450  0842  1283               	bcf	3,5	;RP0=0, select bank0
  7451  0843  1303               	bcf	3,6	;RP1=0, select bank0
  7452  0844  084E               	movf	___fttol@f1,w
  7453  0845  00D2               	movwf	??___fttol
  7454  0846  084F               	movf	___fttol@f1+1,w
  7455  0847  00D3               	movwf	??___fttol+1
  7456  0848  0850               	movf	___fttol@f1+2,w
  7457  0849  00D4               	movwf	??___fttol+2
  7458  084A  1003               	clrc
  7459  084B  0D53               	rlf	??___fttol+1,w
  7460  084C  0D54               	rlf	??___fttol+2,w
  7461  084D  00D5               	movwf	??___fttol+3
  7462  084E  0855               	movf	??___fttol+3,w
  7463  084F  00DB               	movwf	___fttol@exp1
  7464  0850  08DB               	movf	___fttol@exp1,f
  7465  0851  1D03               	skipz
  7466  0852  285C               	goto	l2612
  7467  0853  3000               	movlw	0
  7468  0854  00D1               	movwf	?___fttol+3
  7469  0855  3000               	movlw	0
  7470  0856  00D0               	movwf	?___fttol+2
  7471  0857  3000               	movlw	0
  7472  0858  00CF               	movwf	?___fttol+1
  7473  0859  3000               	movlw	0
  7474  085A  00CE               	movwf	?___fttol
  7475  085B  0008               	return
  7476  085C                     l2612:	
  7477  085C  084E               	movf	___fttol@f1,w
  7478  085D  00D2               	movwf	??___fttol
  7479  085E  084F               	movf	___fttol@f1+1,w
  7480  085F  00D3               	movwf	??___fttol+1
  7481  0860  0850               	movf	___fttol@f1+2,w
  7482  0861  00D4               	movwf	??___fttol+2
  7483  0862  3017               	movlw	23
  7484  0863                     u3395:	
  7485  0863  1003               	clrc
  7486  0864  0CD4               	rrf	??___fttol+2,f
  7487  0865  0CD3               	rrf	??___fttol+1,f
  7488  0866  0CD2               	rrf	??___fttol,f
  7489  0867  3EFF               	addlw	-1
  7490  0868  1D03               	skipz
  7491  0869  2863               	goto	u3395
  7492  086A  0852               	movf	??___fttol,w
  7493  086B  00D5               	movwf	??___fttol+3
  7494  086C  0855               	movf	??___fttol+3,w
  7495  086D  00D6               	movwf	___fttol@sign1
  7496  086E  17CF               	bsf	___fttol@f1+1,7
  7497  086F  30FF               	movlw	255
  7498  0870  05CE               	andwf	___fttol@f1,f
  7499  0871  30FF               	movlw	255
  7500  0872  05CF               	andwf	___fttol@f1+1,f
  7501  0873  3000               	movlw	0
  7502  0874  05D0               	andwf	___fttol@f1+2,f
  7503  0875  084E               	movf	___fttol@f1,w
  7504  0876  00D7               	movwf	___fttol@lval
  7505  0877  084F               	movf	___fttol@f1+1,w
  7506  0878  00D8               	movwf	___fttol@lval+1
  7507  0879  0850               	movf	___fttol@f1+2,w
  7508  087A  00D9               	movwf	___fttol@lval+2
  7509  087B  01DA               	clrf	___fttol@lval+3
  7510  087C  308E               	movlw	142
  7511  087D  02DB               	subwf	___fttol@exp1,f
  7512  087E  1FDB               	btfss	___fttol@exp1,7
  7513  087F  289E               	goto	l2632
  7514  0880  085B               	movf	___fttol@exp1,w
  7515  0881  3A80               	xorlw	128
  7516  0882  3E8F               	addlw	143
  7517  0883  1803               	skipnc
  7518  0884  288E               	goto	l2630
  7519  0885  3000               	movlw	0
  7520  0886  00D1               	movwf	?___fttol+3
  7521  0887  3000               	movlw	0
  7522  0888  00D0               	movwf	?___fttol+2
  7523  0889  3000               	movlw	0
  7524  088A  00CF               	movwf	?___fttol+1
  7525  088B  3000               	movlw	0
  7526  088C  00CE               	movwf	?___fttol
  7527  088D  0008               	return
  7528  088E                     l2630:	
  7529  088E  3001               	movlw	1
  7530  088F                     u3425:	
  7531  088F  1003               	clrc
  7532  0890  0CDA               	rrf	___fttol@lval+3,f
  7533  0891  0CD9               	rrf	___fttol@lval+2,f
  7534  0892  0CD8               	rrf	___fttol@lval+1,f
  7535  0893  0CD7               	rrf	___fttol@lval,f
  7536  0894  3EFF               	addlw	-1
  7537  0895  1D03               	skipz
  7538  0896  288F               	goto	u3425
  7539  0897  3001               	movlw	1
  7540  0898  00D2               	movwf	??___fttol
  7541  0899  0852               	movf	??___fttol,w
  7542  089A  07DB               	addwf	___fttol@exp1,f
  7543  089B  1903               	btfsc	3,2
  7544  089C  28B9               	goto	l2642
  7545  089D  288E               	goto	l2630
  7546  089E                     l2632:	
  7547  089E  3018               	movlw	24
  7548  089F  025B               	subwf	___fttol@exp1,w
  7549  08A0  1C03               	skipc
  7550  08A1  28B6               	goto	l2640
  7551  08A2  3000               	movlw	0
  7552  08A3  00D1               	movwf	?___fttol+3
  7553  08A4  3000               	movlw	0
  7554  08A5  00D0               	movwf	?___fttol+2
  7555  08A6  3000               	movlw	0
  7556  08A7  00CF               	movwf	?___fttol+1
  7557  08A8  3000               	movlw	0
  7558  08A9  00CE               	movwf	?___fttol
  7559  08AA  0008               	return
  7560  08AB                     l2638:	
  7561  08AB  3001               	movlw	1
  7562  08AC  00D2               	movwf	??___fttol
  7563  08AD                     u3455:	
  7564  08AD  1003               	clrc
  7565  08AE  0DD7               	rlf	___fttol@lval,f
  7566  08AF  0DD8               	rlf	___fttol@lval+1,f
  7567  08B0  0DD9               	rlf	___fttol@lval+2,f
  7568  08B1  0DDA               	rlf	___fttol@lval+3,f
  7569  08B2  0BD2               	decfsz	??___fttol,f
  7570  08B3  28AD               	goto	u3455
  7571  08B4  3001               	movlw	1
  7572  08B5  02DB               	subwf	___fttol@exp1,f
  7573  08B6                     l2640:	
  7574  08B6  08DB               	movf	___fttol@exp1,f
  7575  08B7  1D03               	skipz
  7576  08B8  28AB               	goto	l2638
  7577  08B9                     l2642:	
  7578  08B9  0856               	movf	___fttol@sign1,w
  7579  08BA  1903               	btfsc	3,2
  7580  08BB  28C7               	goto	l2646
  7581  08BC  09D7               	comf	___fttol@lval,f
  7582  08BD  09D8               	comf	___fttol@lval+1,f
  7583  08BE  09D9               	comf	___fttol@lval+2,f
  7584  08BF  09DA               	comf	___fttol@lval+3,f
  7585  08C0  0AD7               	incf	___fttol@lval,f
  7586  08C1  1903               	skipnz
  7587  08C2  0AD8               	incf	___fttol@lval+1,f
  7588  08C3  1903               	skipnz
  7589  08C4  0AD9               	incf	___fttol@lval+2,f
  7590  08C5  1903               	skipnz
  7591  08C6  0ADA               	incf	___fttol@lval+3,f
  7592  08C7                     l2646:	
  7593  08C7  085A               	movf	___fttol@lval+3,w
  7594  08C8  00D1               	movwf	?___fttol+3
  7595  08C9  0859               	movf	___fttol@lval+2,w
  7596  08CA  00D0               	movwf	?___fttol+2
  7597  08CB  0858               	movf	___fttol@lval+1,w
  7598  08CC  00CF               	movwf	?___fttol+1
  7599  08CD  0857               	movf	___fttol@lval,w
  7600  08CE  00CE               	movwf	?___fttol
  7601  08CF  0008               	return
  7602  08D0                     __end_of___fttol:	
  7603                           
  7604                           	psect	text33
  7605  07F4                     __ptext33:	
  7606 ;; *************** function ___ftneg *****************
  7607 ;; Defined at:
  7608 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  f1              3   14[BANK0 ] float 
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;		None
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  3   14[BANK0 ] float 
  7615 ;; Registers used:
  7616 ;;		wreg
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7622 ;;      Params:         0       3       0       0       0
  7623 ;;      Locals:         0       0       0       0       0
  7624 ;;      Temps:          0       0       0       0       0
  7625 ;;      Totals:         0       3       0       0       0
  7626 ;;Total ram usage:        3 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; Hardware stack levels required when called:    2
  7629 ;; This function calls:
  7630 ;;		Nothing
  7631 ;; This function is called by:
  7632 ;;		_displayPPM
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635                           
  7636                           
  7637                           ;psect for function ___ftneg
  7638  07F4                     ___ftneg:	
  7639                           
  7640                           ;incstack = 0
  7641                           ; Regs used in ___ftneg: [wreg]
  7642  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  7643  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  7644  07F6  0830               	movf	___ftneg@f1+2,w
  7645  07F7  042F               	iorwf	___ftneg@f1+1,w
  7646  07F8  042E               	iorwf	___ftneg@f1,w
  7647  07F9  1903               	skipnz
  7648  07FA  0008               	return
  7649  07FB  3080               	movlw	128
  7650  07FC  06B0               	xorwf	___ftneg@f1+2,f
  7651  07FD  0008               	return
  7652  07FE                     __end_of___ftneg:	
  7653                           
  7654                           	psect	text34
  7655  0C25                     __ptext34:	
  7656 ;; *************** function ___ftmul *****************
  7657 ;; Defined at:
  7658 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7659 ;; Parameters:    Size  Location     Type
  7660 ;;  f1              3   17[BANK0 ] float 
  7661 ;;  f2              3   20[BANK0 ] float 
  7662 ;; Auto vars:     Size  Location     Type
  7663 ;;  f3_as_produc    3   28[BANK0 ] unsigned um
  7664 ;;  sign            1   32[BANK0 ] unsigned char 
  7665 ;;  cntr            1   31[BANK0 ] unsigned char 
  7666 ;;  exp             1   27[BANK0 ] unsigned char 
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  3   17[BANK0 ] float 
  7669 ;; Registers used:
  7670 ;;		wreg, status,2, status,0, pclath, cstack
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7676 ;;      Params:         0       6       0       0       0
  7677 ;;      Locals:         0       6       0       0       0
  7678 ;;      Temps:          0       4       0       0       0
  7679 ;;      Totals:         0      16       0       0       0
  7680 ;;Total ram usage:       16 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; Hardware stack levels required when called:    3
  7683 ;; This function calls:
  7684 ;;		___ftpack
  7685 ;; This function is called by:
  7686 ;;		_displayPPM
  7687 ;;		_CalcMQ135
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           
  7691                           
  7692                           ;psect for function ___ftmul
  7693  0C25                     ___ftmul:	
  7694                           
  7695                           ;incstack = 0
  7696                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7697  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  7698  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  7699  0C27  0831               	movf	___ftmul@f1,w
  7700  0C28  00B7               	movwf	??___ftmul
  7701  0C29  0832               	movf	___ftmul@f1+1,w
  7702  0C2A  00B8               	movwf	??___ftmul+1
  7703  0C2B  0833               	movf	___ftmul@f1+2,w
  7704  0C2C  00B9               	movwf	??___ftmul+2
  7705  0C2D  1003               	clrc
  7706  0C2E  0D38               	rlf	??___ftmul+1,w
  7707  0C2F  0D39               	rlf	??___ftmul+2,w
  7708  0C30  00BA               	movwf	??___ftmul+3
  7709  0C31  083A               	movf	??___ftmul+3,w
  7710  0C32  00BB               	movwf	___ftmul@exp
  7711  0C33  08BB               	movf	___ftmul@exp,f
  7712  0C34  1D03               	skipz
  7713  0C35  2C3D               	goto	l2362
  7714  0C36  3000               	movlw	0
  7715  0C37  00B1               	movwf	?___ftmul
  7716  0C38  3000               	movlw	0
  7717  0C39  00B2               	movwf	?___ftmul+1
  7718  0C3A  3000               	movlw	0
  7719  0C3B  00B3               	movwf	?___ftmul+2
  7720  0C3C  0008               	return
  7721  0C3D                     l2362:	
  7722  0C3D  0834               	movf	___ftmul@f2,w
  7723  0C3E  00B7               	movwf	??___ftmul
  7724  0C3F  0835               	movf	___ftmul@f2+1,w
  7725  0C40  00B8               	movwf	??___ftmul+1
  7726  0C41  0836               	movf	___ftmul@f2+2,w
  7727  0C42  00B9               	movwf	??___ftmul+2
  7728  0C43  1003               	clrc
  7729  0C44  0D38               	rlf	??___ftmul+1,w
  7730  0C45  0D39               	rlf	??___ftmul+2,w
  7731  0C46  00BA               	movwf	??___ftmul+3
  7732  0C47  083A               	movf	??___ftmul+3,w
  7733  0C48  00C0               	movwf	___ftmul@sign
  7734  0C49  08C0               	movf	___ftmul@sign,f
  7735  0C4A  1D03               	skipz
  7736  0C4B  2C53               	goto	l2368
  7737  0C4C  3000               	movlw	0
  7738  0C4D  00B1               	movwf	?___ftmul
  7739  0C4E  3000               	movlw	0
  7740  0C4F  00B2               	movwf	?___ftmul+1
  7741  0C50  3000               	movlw	0
  7742  0C51  00B3               	movwf	?___ftmul+2
  7743  0C52  0008               	return
  7744  0C53                     l2368:	
  7745  0C53  0840               	movf	___ftmul@sign,w
  7746  0C54  3E7B               	addlw	123
  7747  0C55  00B7               	movwf	??___ftmul
  7748  0C56  0837               	movf	??___ftmul,w
  7749  0C57  07BB               	addwf	___ftmul@exp,f
  7750  0C58  0831               	movf	___ftmul@f1,w
  7751  0C59  00B7               	movwf	??___ftmul
  7752  0C5A  0832               	movf	___ftmul@f1+1,w
  7753  0C5B  00B8               	movwf	??___ftmul+1
  7754  0C5C  0833               	movf	___ftmul@f1+2,w
  7755  0C5D  00B9               	movwf	??___ftmul+2
  7756  0C5E  3010               	movlw	16
  7757  0C5F                     u2985:	
  7758  0C5F  1003               	clrc
  7759  0C60  0CB9               	rrf	??___ftmul+2,f
  7760  0C61  0CB8               	rrf	??___ftmul+1,f
  7761  0C62  0CB7               	rrf	??___ftmul,f
  7762  0C63  3EFF               	addlw	-1
  7763  0C64  1D03               	skipz
  7764  0C65  2C5F               	goto	u2985
  7765  0C66  0837               	movf	??___ftmul,w
  7766  0C67  00BA               	movwf	??___ftmul+3
  7767  0C68  083A               	movf	??___ftmul+3,w
  7768  0C69  00C0               	movwf	___ftmul@sign
  7769  0C6A  0834               	movf	___ftmul@f2,w
  7770  0C6B  00B7               	movwf	??___ftmul
  7771  0C6C  0835               	movf	___ftmul@f2+1,w
  7772  0C6D  00B8               	movwf	??___ftmul+1
  7773  0C6E  0836               	movf	___ftmul@f2+2,w
  7774  0C6F  00B9               	movwf	??___ftmul+2
  7775  0C70  3010               	movlw	16
  7776  0C71                     u2995:	
  7777  0C71  1003               	clrc
  7778  0C72  0CB9               	rrf	??___ftmul+2,f
  7779  0C73  0CB8               	rrf	??___ftmul+1,f
  7780  0C74  0CB7               	rrf	??___ftmul,f
  7781  0C75  3EFF               	addlw	-1
  7782  0C76  1D03               	skipz
  7783  0C77  2C71               	goto	u2995
  7784  0C78  0837               	movf	??___ftmul,w
  7785  0C79  00BA               	movwf	??___ftmul+3
  7786  0C7A  083A               	movf	??___ftmul+3,w
  7787  0C7B  06C0               	xorwf	___ftmul@sign,f
  7788  0C7C  3080               	movlw	128
  7789  0C7D  00B7               	movwf	??___ftmul
  7790  0C7E  0837               	movf	??___ftmul,w
  7791  0C7F  05C0               	andwf	___ftmul@sign,f
  7792  0C80  17B2               	bsf	___ftmul@f1+1,7
  7793  0C81  17B5               	bsf	___ftmul@f2+1,7
  7794  0C82  30FF               	movlw	255
  7795  0C83  05B4               	andwf	___ftmul@f2,f
  7796  0C84  30FF               	movlw	255
  7797  0C85  05B5               	andwf	___ftmul@f2+1,f
  7798  0C86  3000               	movlw	0
  7799  0C87  05B6               	andwf	___ftmul@f2+2,f
  7800  0C88  3000               	movlw	0
  7801  0C89  00BC               	movwf	___ftmul@f3_as_product
  7802  0C8A  3000               	movlw	0
  7803  0C8B  00BD               	movwf	___ftmul@f3_as_product+1
  7804  0C8C  3000               	movlw	0
  7805  0C8D  00BE               	movwf	___ftmul@f3_as_product+2
  7806  0C8E  3007               	movlw	7
  7807  0C8F  00B7               	movwf	??___ftmul
  7808  0C90  0837               	movf	??___ftmul,w
  7809  0C91  00BF               	movwf	___ftmul@cntr
  7810  0C92                     l2380:	
  7811  0C92  1C31               	btfss	___ftmul@f1,0
  7812  0C93  2CA2               	goto	l2384
  7813  0C94  0834               	movf	___ftmul@f2,w
  7814  0C95  07BC               	addwf	___ftmul@f3_as_product,f
  7815  0C96  0835               	movf	___ftmul@f2+1,w
  7816  0C97  1103               	clrz
  7817  0C98  1803               	skipnc
  7818  0C99  0A35               	incf	___ftmul@f2+1,w
  7819  0C9A  1D03               	btfss	3,2
  7820  0C9B  07BD               	addwf	___ftmul@f3_as_product+1,f
  7821  0C9C  0836               	movf	___ftmul@f2+2,w
  7822  0C9D  1103               	clrz
  7823  0C9E  1803               	skipnc
  7824  0C9F  0A36               	incf	___ftmul@f2+2,w
  7825  0CA0  1D03               	btfss	3,2
  7826  0CA1  07BE               	addwf	___ftmul@f3_as_product+2,f
  7827  0CA2                     l2384:	
  7828  0CA2  3001               	movlw	1
  7829  0CA3                     u3025:	
  7830  0CA3  1003               	clrc
  7831  0CA4  0CB3               	rrf	___ftmul@f1+2,f
  7832  0CA5  0CB2               	rrf	___ftmul@f1+1,f
  7833  0CA6  0CB1               	rrf	___ftmul@f1,f
  7834  0CA7  3EFF               	addlw	-1
  7835  0CA8  1D03               	skipz
  7836  0CA9  2CA3               	goto	u3025
  7837  0CAA  3001               	movlw	1
  7838  0CAB                     u3035:	
  7839  0CAB  1003               	clrc
  7840  0CAC  0DB4               	rlf	___ftmul@f2,f
  7841  0CAD  0DB5               	rlf	___ftmul@f2+1,f
  7842  0CAE  0DB6               	rlf	___ftmul@f2+2,f
  7843  0CAF  3EFF               	addlw	-1
  7844  0CB0  1D03               	skipz
  7845  0CB1  2CAB               	goto	u3035
  7846  0CB2  3001               	movlw	1
  7847  0CB3  02BF               	subwf	___ftmul@cntr,f
  7848  0CB4  1D03               	btfss	3,2
  7849  0CB5  2C92               	goto	l2380
  7850  0CB6  3009               	movlw	9
  7851  0CB7  00B7               	movwf	??___ftmul
  7852  0CB8  0837               	movf	??___ftmul,w
  7853  0CB9  00BF               	movwf	___ftmul@cntr
  7854  0CBA                     l2392:	
  7855  0CBA  1C31               	btfss	___ftmul@f1,0
  7856  0CBB  2CCA               	goto	l2396
  7857  0CBC  0834               	movf	___ftmul@f2,w
  7858  0CBD  07BC               	addwf	___ftmul@f3_as_product,f
  7859  0CBE  0835               	movf	___ftmul@f2+1,w
  7860  0CBF  1103               	clrz
  7861  0CC0  1803               	skipnc
  7862  0CC1  0A35               	incf	___ftmul@f2+1,w
  7863  0CC2  1D03               	btfss	3,2
  7864  0CC3  07BD               	addwf	___ftmul@f3_as_product+1,f
  7865  0CC4  0836               	movf	___ftmul@f2+2,w
  7866  0CC5  1103               	clrz
  7867  0CC6  1803               	skipnc
  7868  0CC7  0A36               	incf	___ftmul@f2+2,w
  7869  0CC8  1D03               	btfss	3,2
  7870  0CC9  07BE               	addwf	___ftmul@f3_as_product+2,f
  7871  0CCA                     l2396:	
  7872  0CCA  3001               	movlw	1
  7873  0CCB                     u3075:	
  7874  0CCB  1003               	clrc
  7875  0CCC  0CB3               	rrf	___ftmul@f1+2,f
  7876  0CCD  0CB2               	rrf	___ftmul@f1+1,f
  7877  0CCE  0CB1               	rrf	___ftmul@f1,f
  7878  0CCF  3EFF               	addlw	-1
  7879  0CD0  1D03               	skipz
  7880  0CD1  2CCB               	goto	u3075
  7881  0CD2  3001               	movlw	1
  7882  0CD3                     u3085:	
  7883  0CD3  1003               	clrc
  7884  0CD4  0CBE               	rrf	___ftmul@f3_as_product+2,f
  7885  0CD5  0CBD               	rrf	___ftmul@f3_as_product+1,f
  7886  0CD6  0CBC               	rrf	___ftmul@f3_as_product,f
  7887  0CD7  3EFF               	addlw	-1
  7888  0CD8  1D03               	skipz
  7889  0CD9  2CD3               	goto	u3085
  7890  0CDA  3001               	movlw	1
  7891  0CDB  02BF               	subwf	___ftmul@cntr,f
  7892  0CDC  1D03               	btfss	3,2
  7893  0CDD  2CBA               	goto	l2392
  7894  0CDE  083C               	movf	___ftmul@f3_as_product,w
  7895  0CDF  00A0               	movwf	___ftpack@arg
  7896  0CE0  083D               	movf	___ftmul@f3_as_product+1,w
  7897  0CE1  00A1               	movwf	___ftpack@arg+1
  7898  0CE2  083E               	movf	___ftmul@f3_as_product+2,w
  7899  0CE3  00A2               	movwf	___ftpack@arg+2
  7900  0CE4  083B               	movf	___ftmul@exp,w
  7901  0CE5  00B7               	movwf	??___ftmul
  7902  0CE6  0837               	movf	??___ftmul,w
  7903  0CE7  00A3               	movwf	___ftpack@exp
  7904  0CE8  0840               	movf	___ftmul@sign,w
  7905  0CE9  00B8               	movwf	??___ftmul+1
  7906  0CEA  0838               	movf	??___ftmul+1,w
  7907  0CEB  00A4               	movwf	___ftpack@sign
  7908  0CEC  160A  118A  2796   	fcall	___ftpack
  7909  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  7910  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  7911  0CF1  0820               	movf	?___ftpack,w
  7912  0CF2  00B1               	movwf	?___ftmul
  7913  0CF3  0821               	movf	?___ftpack+1,w
  7914  0CF4  00B2               	movwf	?___ftmul+1
  7915  0CF5  0822               	movf	?___ftpack+2,w
  7916  0CF6  00B3               	movwf	?___ftmul+2
  7917  0CF7  0008               	return
  7918  0CF8                     __end_of___ftmul:	
  7919                           
  7920                           	psect	text35
  7921  0CF8                     __ptext35:	
  7922 ;; *************** function ___ftadd *****************
  7923 ;; Defined at:
  7924 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  f1              3   33[BANK0 ] float 
  7927 ;;  f2              3   36[BANK0 ] float 
  7928 ;; Auto vars:     Size  Location     Type
  7929 ;;  exp1            1   45[BANK0 ] unsigned char 
  7930 ;;  exp2            1   44[BANK0 ] unsigned char 
  7931 ;;  sign            1   43[BANK0 ] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  3   33[BANK0 ] float 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2, status,0, pclath, cstack
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7941 ;;      Params:         0       6       0       0       0
  7942 ;;      Locals:         0       3       0       0       0
  7943 ;;      Temps:          0       4       0       0       0
  7944 ;;      Totals:         0      13       0       0       0
  7945 ;;Total ram usage:       13 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; Hardware stack levels required when called:    3
  7948 ;; This function calls:
  7949 ;;		___ftpack
  7950 ;; This function is called by:
  7951 ;;		_displayPPM
  7952 ;;		_CalcMQ135
  7953 ;; This function uses a non-reentrant model
  7954 ;;
  7955                           
  7956                           
  7957                           ;psect for function ___ftadd
  7958  0CF8                     ___ftadd:	
  7959                           
  7960                           ;incstack = 0
  7961                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7962  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  7963  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  7964  0CFA  0841               	movf	___ftadd@f1,w
  7965  0CFB  00C7               	movwf	??___ftadd
  7966  0CFC  0842               	movf	___ftadd@f1+1,w
  7967  0CFD  00C8               	movwf	??___ftadd+1
  7968  0CFE  0843               	movf	___ftadd@f1+2,w
  7969  0CFF  00C9               	movwf	??___ftadd+2
  7970  0D00  1003               	clrc
  7971  0D01  0D48               	rlf	??___ftadd+1,w
  7972  0D02  0D49               	rlf	??___ftadd+2,w
  7973  0D03  00CA               	movwf	??___ftadd+3
  7974  0D04  084A               	movf	??___ftadd+3,w
  7975  0D05  00CD               	movwf	___ftadd@exp1
  7976  0D06  0844               	movf	___ftadd@f2,w
  7977  0D07  00C7               	movwf	??___ftadd
  7978  0D08  0845               	movf	___ftadd@f2+1,w
  7979  0D09  00C8               	movwf	??___ftadd+1
  7980  0D0A  0846               	movf	___ftadd@f2+2,w
  7981  0D0B  00C9               	movwf	??___ftadd+2
  7982  0D0C  1003               	clrc
  7983  0D0D  0D48               	rlf	??___ftadd+1,w
  7984  0D0E  0D49               	rlf	??___ftadd+2,w
  7985  0D0F  00CA               	movwf	??___ftadd+3
  7986  0D10  084A               	movf	??___ftadd+3,w
  7987  0D11  00CC               	movwf	___ftadd@exp2
  7988  0D12  084D               	movf	___ftadd@exp1,w
  7989  0D13  1903               	btfsc	3,2
  7990  0D14  2D21               	goto	l2250
  7991  0D15  084C               	movf	___ftadd@exp2,w
  7992  0D16  024D               	subwf	___ftadd@exp1,w
  7993  0D17  1803               	skipnc
  7994  0D18  2D28               	goto	l2254
  7995  0D19  034D               	decf	___ftadd@exp1,w
  7996  0D1A  3AFF               	xorlw	255
  7997  0D1B  074C               	addwf	___ftadd@exp2,w
  7998  0D1C  00C7               	movwf	??___ftadd
  7999  0D1D  3019               	movlw	25
  8000  0D1E  0247               	subwf	??___ftadd,w
  8001  0D1F  1C03               	skipc
  8002  0D20  2D28               	goto	l2254
  8003  0D21                     l2250:	
  8004  0D21  0844               	movf	___ftadd@f2,w
  8005  0D22  00C1               	movwf	?___ftadd
  8006  0D23  0845               	movf	___ftadd@f2+1,w
  8007  0D24  00C2               	movwf	?___ftadd+1
  8008  0D25  0846               	movf	___ftadd@f2+2,w
  8009  0D26  00C3               	movwf	?___ftadd+2
  8010  0D27  0008               	return
  8011  0D28                     l2254:	
  8012  0D28  084C               	movf	___ftadd@exp2,w
  8013  0D29  1903               	btfsc	3,2
  8014  0D2A  0008               	return
  8015  0D2B  084D               	movf	___ftadd@exp1,w
  8016  0D2C  024C               	subwf	___ftadd@exp2,w
  8017  0D2D  1803               	skipnc
  8018  0D2E  2D37               	goto	l2260
  8019  0D2F  034C               	decf	___ftadd@exp2,w
  8020  0D30  3AFF               	xorlw	255
  8021  0D31  074D               	addwf	___ftadd@exp1,w
  8022  0D32  00C7               	movwf	??___ftadd
  8023  0D33  3019               	movlw	25
  8024  0D34  0247               	subwf	??___ftadd,w
  8025  0D35  1803               	btfsc	3,0
  8026  0D36  0008               	return
  8027  0D37                     l2260:	
  8028  0D37  3006               	movlw	6
  8029  0D38  00C7               	movwf	??___ftadd
  8030  0D39  0847               	movf	??___ftadd,w
  8031  0D3A  00CB               	movwf	___ftadd@sign
  8032  0D3B  1BC3               	btfsc	___ftadd@f1+2,7
  8033  0D3C  17CB               	bsf	___ftadd@sign,7
  8034  0D3D  1BC6               	btfsc	___ftadd@f2+2,7
  8035  0D3E  174B               	bsf	___ftadd@sign,6
  8036  0D3F  17C2               	bsf	___ftadd@f1+1,7
  8037  0D40  30FF               	movlw	255
  8038  0D41  05C1               	andwf	___ftadd@f1,f
  8039  0D42  30FF               	movlw	255
  8040  0D43  05C2               	andwf	___ftadd@f1+1,f
  8041  0D44  3000               	movlw	0
  8042  0D45  05C3               	andwf	___ftadd@f1+2,f
  8043  0D46  17C5               	bsf	___ftadd@f2+1,7
  8044  0D47  30FF               	movlw	255
  8045  0D48  05C4               	andwf	___ftadd@f2,f
  8046  0D49  30FF               	movlw	255
  8047  0D4A  05C5               	andwf	___ftadd@f2+1,f
  8048  0D4B  3000               	movlw	0
  8049  0D4C  05C6               	andwf	___ftadd@f2+2,f
  8050  0D4D  084C               	movf	___ftadd@exp2,w
  8051  0D4E  024D               	subwf	___ftadd@exp1,w
  8052  0D4F  1803               	skipnc
  8053  0D50  2D77               	goto	l2282
  8054  0D51                     l2272:	
  8055  0D51  3001               	movlw	1
  8056  0D52                     u2735:	
  8057  0D52  1003               	clrc
  8058  0D53  0DC4               	rlf	___ftadd@f2,f
  8059  0D54  0DC5               	rlf	___ftadd@f2+1,f
  8060  0D55  0DC6               	rlf	___ftadd@f2+2,f
  8061  0D56  3EFF               	addlw	-1
  8062  0D57  1D03               	skipz
  8063  0D58  2D52               	goto	u2735
  8064  0D59  3001               	movlw	1
  8065  0D5A  02CC               	subwf	___ftadd@exp2,f
  8066  0D5B  084C               	movf	___ftadd@exp2,w
  8067  0D5C  064D               	xorwf	___ftadd@exp1,w
  8068  0D5D  1903               	skipnz
  8069  0D5E  2D72               	goto	l2280
  8070  0D5F  3001               	movlw	1
  8071  0D60  02CB               	subwf	___ftadd@sign,f
  8072  0D61  084B               	movf	___ftadd@sign,w
  8073  0D62  3907               	andlw	7
  8074  0D63  1903               	btfsc	3,2
  8075  0D64  2D72               	goto	l2280
  8076  0D65  2D51               	goto	l2272
  8077  0D66                     l2278:	
  8078  0D66  3001               	movlw	1
  8079  0D67                     u2765:	
  8080  0D67  1003               	clrc
  8081  0D68  0CC3               	rrf	___ftadd@f1+2,f
  8082  0D69  0CC2               	rrf	___ftadd@f1+1,f
  8083  0D6A  0CC1               	rrf	___ftadd@f1,f
  8084  0D6B  3EFF               	addlw	-1
  8085  0D6C  1D03               	skipz
  8086  0D6D  2D67               	goto	u2765
  8087  0D6E  3001               	movlw	1
  8088  0D6F  00C7               	movwf	??___ftadd
  8089  0D70  0847               	movf	??___ftadd,w
  8090  0D71  07CD               	addwf	___ftadd@exp1,f
  8091  0D72                     l2280:	
  8092  0D72  084D               	movf	___ftadd@exp1,w
  8093  0D73  064C               	xorwf	___ftadd@exp2,w
  8094  0D74  1903               	btfsc	3,2
  8095  0D75  2DA0               	goto	l652
  8096  0D76  2D66               	goto	l2278
  8097  0D77                     l2282:	
  8098  0D77  084D               	movf	___ftadd@exp1,w
  8099  0D78  024C               	subwf	___ftadd@exp2,w
  8100  0D79  1803               	skipnc
  8101  0D7A  2DA0               	goto	l652
  8102  0D7B                     l2284:	
  8103  0D7B  3001               	movlw	1
  8104  0D7C                     u2795:	
  8105  0D7C  1003               	clrc
  8106  0D7D  0DC1               	rlf	___ftadd@f1,f
  8107  0D7E  0DC2               	rlf	___ftadd@f1+1,f
  8108  0D7F  0DC3               	rlf	___ftadd@f1+2,f
  8109  0D80  3EFF               	addlw	-1
  8110  0D81  1D03               	skipz
  8111  0D82  2D7C               	goto	u2795
  8112  0D83  3001               	movlw	1
  8113  0D84  02CD               	subwf	___ftadd@exp1,f
  8114  0D85  084C               	movf	___ftadd@exp2,w
  8115  0D86  064D               	xorwf	___ftadd@exp1,w
  8116  0D87  1903               	skipnz
  8117  0D88  2D9C               	goto	l2292
  8118  0D89  3001               	movlw	1
  8119  0D8A  02CB               	subwf	___ftadd@sign,f
  8120  0D8B  084B               	movf	___ftadd@sign,w
  8121  0D8C  3907               	andlw	7
  8122  0D8D  1903               	btfsc	3,2
  8123  0D8E  2D9C               	goto	l2292
  8124  0D8F  2D7B               	goto	l2284
  8125  0D90                     l2290:	
  8126  0D90  3001               	movlw	1
  8127  0D91                     u2825:	
  8128  0D91  1003               	clrc
  8129  0D92  0CC6               	rrf	___ftadd@f2+2,f
  8130  0D93  0CC5               	rrf	___ftadd@f2+1,f
  8131  0D94  0CC4               	rrf	___ftadd@f2,f
  8132  0D95  3EFF               	addlw	-1
  8133  0D96  1D03               	skipz
  8134  0D97  2D91               	goto	u2825
  8135  0D98  3001               	movlw	1
  8136  0D99  00C7               	movwf	??___ftadd
  8137  0D9A  0847               	movf	??___ftadd,w
  8138  0D9B  07CC               	addwf	___ftadd@exp2,f
  8139  0D9C                     l2292:	
  8140  0D9C  084D               	movf	___ftadd@exp1,w
  8141  0D9D  064C               	xorwf	___ftadd@exp2,w
  8142  0D9E  1D03               	skipz
  8143  0D9F  2D90               	goto	l2290
  8144  0DA0                     l652:	
  8145  0DA0  1FCB               	btfss	___ftadd@sign,7
  8146  0DA1  2DB2               	goto	l2296
  8147  0DA2  30FF               	movlw	255
  8148  0DA3  06C1               	xorwf	___ftadd@f1,f
  8149  0DA4  30FF               	movlw	255
  8150  0DA5  06C2               	xorwf	___ftadd@f1+1,f
  8151  0DA6  30FF               	movlw	255
  8152  0DA7  06C3               	xorwf	___ftadd@f1+2,f
  8153  0DA8  3001               	movlw	1
  8154  0DA9  07C1               	addwf	___ftadd@f1,f
  8155  0DAA  3000               	movlw	0
  8156  0DAB  1803               	skipnc
  8157  0DAC  3001               	movlw	1
  8158  0DAD  07C2               	addwf	___ftadd@f1+1,f
  8159  0DAE  3000               	movlw	0
  8160  0DAF  1803               	skipnc
  8161  0DB0  3001               	movlw	1
  8162  0DB1  07C3               	addwf	___ftadd@f1+2,f
  8163  0DB2                     l2296:	
  8164  0DB2  1F4B               	btfss	___ftadd@sign,6
  8165  0DB3  2DC4               	goto	l2300
  8166  0DB4  30FF               	movlw	255
  8167  0DB5  06C4               	xorwf	___ftadd@f2,f
  8168  0DB6  30FF               	movlw	255
  8169  0DB7  06C5               	xorwf	___ftadd@f2+1,f
  8170  0DB8  30FF               	movlw	255
  8171  0DB9  06C6               	xorwf	___ftadd@f2+2,f
  8172  0DBA  3001               	movlw	1
  8173  0DBB  07C4               	addwf	___ftadd@f2,f
  8174  0DBC  3000               	movlw	0
  8175  0DBD  1803               	skipnc
  8176  0DBE  3001               	movlw	1
  8177  0DBF  07C5               	addwf	___ftadd@f2+1,f
  8178  0DC0  3000               	movlw	0
  8179  0DC1  1803               	skipnc
  8180  0DC2  3001               	movlw	1
  8181  0DC3  07C6               	addwf	___ftadd@f2+2,f
  8182  0DC4                     l2300:	
  8183  0DC4  01CB               	clrf	___ftadd@sign
  8184  0DC5  0841               	movf	___ftadd@f1,w
  8185  0DC6  07C4               	addwf	___ftadd@f2,f
  8186  0DC7  0842               	movf	___ftadd@f1+1,w
  8187  0DC8  1103               	clrz
  8188  0DC9  1803               	skipnc
  8189  0DCA  0A42               	incf	___ftadd@f1+1,w
  8190  0DCB  1D03               	btfss	3,2
  8191  0DCC  07C5               	addwf	___ftadd@f2+1,f
  8192  0DCD  0843               	movf	___ftadd@f1+2,w
  8193  0DCE  1103               	clrz
  8194  0DCF  1803               	skipnc
  8195  0DD0  0A43               	incf	___ftadd@f1+2,w
  8196  0DD1  1D03               	btfss	3,2
  8197  0DD2  07C6               	addwf	___ftadd@f2+2,f
  8198  0DD3  1FC6               	btfss	___ftadd@f2+2,7
  8199  0DD4  2DE7               	goto	l2310
  8200  0DD5  30FF               	movlw	255
  8201  0DD6  06C4               	xorwf	___ftadd@f2,f
  8202  0DD7  30FF               	movlw	255
  8203  0DD8  06C5               	xorwf	___ftadd@f2+1,f
  8204  0DD9  30FF               	movlw	255
  8205  0DDA  06C6               	xorwf	___ftadd@f2+2,f
  8206  0DDB  3001               	movlw	1
  8207  0DDC  07C4               	addwf	___ftadd@f2,f
  8208  0DDD  3000               	movlw	0
  8209  0DDE  1803               	skipnc
  8210  0DDF  3001               	movlw	1
  8211  0DE0  07C5               	addwf	___ftadd@f2+1,f
  8212  0DE1  3000               	movlw	0
  8213  0DE2  1803               	skipnc
  8214  0DE3  3001               	movlw	1
  8215  0DE4  07C6               	addwf	___ftadd@f2+2,f
  8216  0DE5  01CB               	clrf	___ftadd@sign
  8217  0DE6  0ACB               	incf	___ftadd@sign,f
  8218  0DE7                     l2310:	
  8219  0DE7  0844               	movf	___ftadd@f2,w
  8220  0DE8  00A0               	movwf	___ftpack@arg
  8221  0DE9  0845               	movf	___ftadd@f2+1,w
  8222  0DEA  00A1               	movwf	___ftpack@arg+1
  8223  0DEB  0846               	movf	___ftadd@f2+2,w
  8224  0DEC  00A2               	movwf	___ftpack@arg+2
  8225  0DED  084D               	movf	___ftadd@exp1,w
  8226  0DEE  00C7               	movwf	??___ftadd
  8227  0DEF  0847               	movf	??___ftadd,w
  8228  0DF0  00A3               	movwf	___ftpack@exp
  8229  0DF1  084B               	movf	___ftadd@sign,w
  8230  0DF2  00C8               	movwf	??___ftadd+1
  8231  0DF3  0848               	movf	??___ftadd+1,w
  8232  0DF4  00A4               	movwf	___ftpack@sign
  8233  0DF5  160A  118A  2796   	fcall	___ftpack
  8234  0DF8  1283               	bcf	3,5	;RP0=0, select bank0
  8235  0DF9  1303               	bcf	3,6	;RP1=0, select bank0
  8236  0DFA  0820               	movf	?___ftpack,w
  8237  0DFB  00C1               	movwf	?___ftadd
  8238  0DFC  0821               	movf	?___ftpack+1,w
  8239  0DFD  00C2               	movwf	?___ftadd+1
  8240  0DFE  0822               	movf	?___ftpack+2,w
  8241  0DFF  00C3               	movwf	?___ftadd+2
  8242  0E00  0008               	return
  8243  0E01                     __end_of___ftadd:	
  8244                           
  8245                           	psect	text36
  8246  13B1                     __ptext36:	
  8247 ;; *************** function ___awtoft *****************
  8248 ;; Defined at:
  8249 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;  c               2    8[BANK0 ] int 
  8252 ;; Auto vars:     Size  Location     Type
  8253 ;;  sign            1   13[BANK0 ] unsigned char 
  8254 ;; Return value:  Size  Location     Type
  8255 ;;                  3    8[BANK0 ] float 
  8256 ;; Registers used:
  8257 ;;		wreg, status,2, status,0, pclath, cstack
  8258 ;; Tracked objects:
  8259 ;;		On entry : 0/0
  8260 ;;		On exit  : 0/0
  8261 ;;		Unchanged: 0/0
  8262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8263 ;;      Params:         0       3       0       0       0
  8264 ;;      Locals:         0       1       0       0       0
  8265 ;;      Temps:          0       2       0       0       0
  8266 ;;      Totals:         0       6       0       0       0
  8267 ;;Total ram usage:        6 bytes
  8268 ;; Hardware stack levels used:    1
  8269 ;; Hardware stack levels required when called:    3
  8270 ;; This function calls:
  8271 ;;		___ftpack
  8272 ;; This function is called by:
  8273 ;;		_displayPPM
  8274 ;;		_CalcMQ135
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           
  8279                           ;psect for function ___awtoft
  8280  13B1                     ___awtoft:	
  8281                           
  8282                           ;incstack = 0
  8283                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  8284  13B1  1283               	bcf	3,5	;RP0=0, select bank0
  8285  13B2  1303               	bcf	3,6	;RP1=0, select bank0
  8286  13B3  01AD               	clrf	___awtoft@sign
  8287  13B4  1FA9               	btfss	___awtoft@c+1,7
  8288  13B5  2BBD               	goto	l2238
  8289  13B6  09A8               	comf	___awtoft@c,f
  8290  13B7  09A9               	comf	___awtoft@c+1,f
  8291  13B8  0AA8               	incf	___awtoft@c,f
  8292  13B9  1903               	skipnz
  8293  13BA  0AA9               	incf	___awtoft@c+1,f
  8294  13BB  01AD               	clrf	___awtoft@sign
  8295  13BC  0AAD               	incf	___awtoft@sign,f
  8296  13BD                     l2238:	
  8297  13BD  0828               	movf	___awtoft@c,w
  8298  13BE  00A0               	movwf	___ftpack@arg
  8299  13BF  0829               	movf	___awtoft@c+1,w
  8300  13C0  00A1               	movwf	___ftpack@arg+1
  8301  13C1  01A2               	clrf	___ftpack@arg+2
  8302  13C2  308E               	movlw	142
  8303  13C3  00AB               	movwf	??___awtoft
  8304  13C4  082B               	movf	??___awtoft,w
  8305  13C5  00A3               	movwf	___ftpack@exp
  8306  13C6  082D               	movf	___awtoft@sign,w
  8307  13C7  00AC               	movwf	??___awtoft+1
  8308  13C8  082C               	movf	??___awtoft+1,w
  8309  13C9  00A4               	movwf	___ftpack@sign
  8310  13CA  160A  118A  2796   	fcall	___ftpack
  8311  13CD  1283               	bcf	3,5	;RP0=0, select bank0
  8312  13CE  1303               	bcf	3,6	;RP1=0, select bank0
  8313  13CF  0820               	movf	?___ftpack,w
  8314  13D0  00A8               	movwf	?___awtoft
  8315  13D1  0821               	movf	?___ftpack+1,w
  8316  13D2  00A9               	movwf	?___awtoft+1
  8317  13D3  0822               	movf	?___ftpack+2,w
  8318  13D4  00AA               	movwf	?___awtoft+2
  8319  13D5  0008               	return
  8320  13D6                     __end_of___awtoft:	
  8321                           
  8322                           	psect	text37
  8323  1796                     __ptext37:	
  8324 ;; *************** function ___ftpack *****************
  8325 ;; Defined at:
  8326 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  arg             3    0[BANK0 ] unsigned um
  8329 ;;  exp             1    3[BANK0 ] unsigned char 
  8330 ;;  sign            1    4[BANK0 ] unsigned char 
  8331 ;; Auto vars:     Size  Location     Type
  8332 ;;		None
  8333 ;; Return value:  Size  Location     Type
  8334 ;;                  3    0[BANK0 ] float 
  8335 ;; Registers used:
  8336 ;;		wreg, status,2, status,0
  8337 ;; Tracked objects:
  8338 ;;		On entry : 0/0
  8339 ;;		On exit  : 0/0
  8340 ;;		Unchanged: 0/0
  8341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8342 ;;      Params:         0       5       0       0       0
  8343 ;;      Locals:         0       0       0       0       0
  8344 ;;      Temps:          0       3       0       0       0
  8345 ;;      Totals:         0       8       0       0       0
  8346 ;;Total ram usage:        8 bytes
  8347 ;; Hardware stack levels used:    1
  8348 ;; Hardware stack levels required when called:    2
  8349 ;; This function calls:
  8350 ;;		Nothing
  8351 ;; This function is called by:
  8352 ;;		___awtoft
  8353 ;;		___ftadd
  8354 ;;		___ftdiv
  8355 ;;		___ftmul
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           
  8360                           ;psect for function ___ftpack
  8361  1796                     ___ftpack:	
  8362                           
  8363                           ;incstack = 0
  8364                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8365  1796  1283               	bcf	3,5	;RP0=0, select bank0
  8366  1797  1303               	bcf	3,6	;RP1=0, select bank0
  8367  1798  0823               	movf	___ftpack@exp,w
  8368  1799  1903               	btfsc	3,2
  8369  179A  2FA0               	goto	l2014
  8370  179B  0822               	movf	___ftpack@arg+2,w
  8371  179C  0421               	iorwf	___ftpack@arg+1,w
  8372  179D  0420               	iorwf	___ftpack@arg,w
  8373  179E  1D03               	skipz
  8374  179F  2FB3               	goto	l2020
  8375  17A0                     l2014:	
  8376  17A0  3000               	movlw	0
  8377  17A1  00A0               	movwf	?___ftpack
  8378  17A2  3000               	movlw	0
  8379  17A3  00A1               	movwf	?___ftpack+1
  8380  17A4  3000               	movlw	0
  8381  17A5  00A2               	movwf	?___ftpack+2
  8382  17A6  0008               	return
  8383  17A7                     l2018:	
  8384  17A7  3001               	movlw	1
  8385  17A8  00A5               	movwf	??___ftpack
  8386  17A9  0825               	movf	??___ftpack,w
  8387  17AA  07A3               	addwf	___ftpack@exp,f
  8388  17AB  3001               	movlw	1
  8389  17AC                     u2215:	
  8390  17AC  1003               	clrc
  8391  17AD  0CA2               	rrf	___ftpack@arg+2,f
  8392  17AE  0CA1               	rrf	___ftpack@arg+1,f
  8393  17AF  0CA0               	rrf	___ftpack@arg,f
  8394  17B0  3EFF               	addlw	-1
  8395  17B1  1D03               	skipz
  8396  17B2  2FAC               	goto	u2215
  8397  17B3                     l2020:	
  8398  17B3  30FE               	movlw	254
  8399  17B4  0522               	andwf	___ftpack@arg+2,w
  8400  17B5  1903               	btfsc	3,2
  8401  17B6  2FCE               	goto	l623
  8402  17B7  2FA7               	goto	l2018
  8403  17B8                     l2022:	
  8404  17B8  3001               	movlw	1
  8405  17B9  00A5               	movwf	??___ftpack
  8406  17BA  0825               	movf	??___ftpack,w
  8407  17BB  07A3               	addwf	___ftpack@exp,f
  8408  17BC  3001               	movlw	1
  8409  17BD  07A0               	addwf	___ftpack@arg,f
  8410  17BE  3000               	movlw	0
  8411  17BF  1803               	skipnc
  8412  17C0  3001               	movlw	1
  8413  17C1  07A1               	addwf	___ftpack@arg+1,f
  8414  17C2  3000               	movlw	0
  8415  17C3  1803               	skipnc
  8416  17C4  3001               	movlw	1
  8417  17C5  07A2               	addwf	___ftpack@arg+2,f
  8418  17C6  3001               	movlw	1
  8419  17C7                     u2235:	
  8420  17C7  1003               	clrc
  8421  17C8  0CA2               	rrf	___ftpack@arg+2,f
  8422  17C9  0CA1               	rrf	___ftpack@arg+1,f
  8423  17CA  0CA0               	rrf	___ftpack@arg,f
  8424  17CB  3EFF               	addlw	-1
  8425  17CC  1D03               	skipz
  8426  17CD  2FC7               	goto	u2235
  8427  17CE                     l623:	
  8428  17CE  30FF               	movlw	255
  8429  17CF  0522               	andwf	___ftpack@arg+2,w
  8430  17D0  1903               	btfsc	3,2
  8431  17D1  2FDD               	goto	l2030
  8432  17D2  2FB8               	goto	l2022
  8433  17D3                     l2028:	
  8434  17D3  3001               	movlw	1
  8435  17D4  02A3               	subwf	___ftpack@exp,f
  8436  17D5  3001               	movlw	1
  8437  17D6                     u2255:	
  8438  17D6  1003               	clrc
  8439  17D7  0DA0               	rlf	___ftpack@arg,f
  8440  17D8  0DA1               	rlf	___ftpack@arg+1,f
  8441  17D9  0DA2               	rlf	___ftpack@arg+2,f
  8442  17DA  3EFF               	addlw	-1
  8443  17DB  1D03               	skipz
  8444  17DC  2FD6               	goto	u2255
  8445  17DD                     l2030:	
  8446  17DD  1FA1               	btfss	___ftpack@arg+1,7
  8447  17DE  2FD3               	goto	l2028
  8448  17DF  1823               	btfsc	___ftpack@exp,0
  8449  17E0  2FE7               	goto	l629
  8450  17E1  30FF               	movlw	255
  8451  17E2  05A0               	andwf	___ftpack@arg,f
  8452  17E3  307F               	movlw	127
  8453  17E4  05A1               	andwf	___ftpack@arg+1,f
  8454  17E5  30FF               	movlw	255
  8455  17E6  05A2               	andwf	___ftpack@arg+2,f
  8456  17E7                     l629:	
  8457  17E7  1003               	clrc
  8458  17E8  0CA3               	rrf	___ftpack@exp,f
  8459  17E9  0823               	movf	___ftpack@exp,w
  8460  17EA  00A5               	movwf	??___ftpack
  8461  17EB  01A6               	clrf	??___ftpack+1
  8462  17EC  01A7               	clrf	??___ftpack+2
  8463  17ED  3010               	movlw	16
  8464  17EE                     u2285:	
  8465  17EE  1003               	clrc
  8466  17EF  0DA5               	rlf	??___ftpack,f
  8467  17F0  0DA6               	rlf	??___ftpack+1,f
  8468  17F1  0DA7               	rlf	??___ftpack+2,f
  8469  17F2  3EFF               	addlw	-1
  8470  17F3  1D03               	skipz
  8471  17F4  2FEE               	goto	u2285
  8472  17F5  0825               	movf	??___ftpack,w
  8473  17F6  04A0               	iorwf	___ftpack@arg,f
  8474  17F7  0826               	movf	??___ftpack+1,w
  8475  17F8  04A1               	iorwf	___ftpack@arg+1,f
  8476  17F9  0827               	movf	??___ftpack+2,w
  8477  17FA  04A2               	iorwf	___ftpack@arg+2,f
  8478  17FB  0824               	movf	___ftpack@sign,w
  8479  17FC  1903               	btfsc	3,2
  8480  17FD  0008               	return
  8481  17FE  17A2               	bsf	___ftpack@arg+2,7
  8482  17FF  0008               	return
  8483  1800                     __end_of___ftpack:	
  8484                           
  8485                           	psect	text38
  8486  16DF                     __ptext38:	
  8487 ;; *************** function _checkTime *****************
  8488 ;; Defined at:
  8489 ;;		line 209 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\time_scheduler
      +.h"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;		None               void
  8496 ;; Registers used:
  8497 ;;		wreg
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8503 ;;      Params:         0       0       0       0       0
  8504 ;;      Locals:         0       0       0       0       0
  8505 ;;      Temps:          0       0       0       0       0
  8506 ;;      Totals:         0       0       0       0       0
  8507 ;;Total ram usage:        0 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    2
  8510 ;; This function calls:
  8511 ;;		Nothing
  8512 ;; This function is called by:
  8513 ;;		_main
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           
  8518                           ;psect for function _checkTime
  8519  16DF                     _checkTime:	
  8520                           
  8521                           ;time_scheduler.h: 211: if (hours == savedHoursEnd && minutes == savedMinutesEnd)
  8522                           
  8523                           ;incstack = 0
  8524                           ; Regs used in _checkTime: [wreg]
  8525  16DF  1283               	bcf	3,5	;RP0=0, select bank0
  8526  16E0  1303               	bcf	3,6	;RP1=0, select bank0
  8527  16E1  0866               	movf	_hours,w	;volatile
  8528  16E2  0668               	xorwf	_savedHoursEnd,w	;volatile
  8529  16E3  1D03               	skipz
  8530  16E4  2EEB               	goto	l2856
  8531  16E5  086E               	movf	_minutes,w	;volatile
  8532  16E6  066A               	xorwf	_savedMinutesEnd,w	;volatile
  8533  16E7  1D03               	skipz
  8534  16E8  2EEB               	goto	l2856
  8535                           
  8536                           ;time_scheduler.h: 212: {
  8537                           ;time_scheduler.h: 213: PORTCbits.RC4 = 1;
  8538  16E9  1607               	bsf	7,4	;volatile
  8539                           
  8540                           ;time_scheduler.h: 214: }
  8541  16EA  0008               	return
  8542  16EB                     l2856:	
  8543                           
  8544                           ;time_scheduler.h: 215: else if (savedHoursEnd > savedHoursStart)
  8545  16EB  0868               	movf	_savedHoursEnd,w	;volatile
  8546  16EC  0269               	subwf	_savedHoursStart,w	;volatile
  8547  16ED  1803               	skipnc
  8548  16EE  2F0B               	goto	l2870
  8549                           
  8550                           ;time_scheduler.h: 216: {
  8551                           ;time_scheduler.h: 218: if ((hours > savedHoursStart || (hours == savedHoursStart && min
      +                          utes >= savedMinutesStart)) &&
  8552                           ;time_scheduler.h: 219: (hours < savedHoursEnd || (hours == savedHoursEnd && minutes < s
      +                          avedMinutesEnd)))
  8553  16EF  0866               	movf	_hours,w	;volatile
  8554  16F0  0269               	subwf	_savedHoursStart,w	;volatile
  8555  16F1  1C03               	skipc
  8556  16F2  2EFB               	goto	l2864
  8557  16F3  0866               	movf	_hours,w	;volatile
  8558  16F4  0669               	xorwf	_savedHoursStart,w	;volatile
  8559  16F5  1D03               	skipz
  8560  16F6  2F09               	goto	l253
  8561  16F7  086B               	movf	_savedMinutesStart,w	;volatile
  8562  16F8  026E               	subwf	_minutes,w	;volatile
  8563  16F9  1C03               	skipc
  8564  16FA  2F09               	goto	l253
  8565  16FB                     l2864:	
  8566  16FB  0868               	movf	_savedHoursEnd,w	;volatile
  8567  16FC  0266               	subwf	_hours,w	;volatile
  8568  16FD  1C03               	skipc
  8569  16FE  2F07               	goto	l257
  8570  16FF  0866               	movf	_hours,w	;volatile
  8571  1700  0668               	xorwf	_savedHoursEnd,w	;volatile
  8572  1701  1D03               	skipz
  8573  1702  2F09               	goto	l253
  8574  1703  086A               	movf	_savedMinutesEnd,w	;volatile
  8575  1704  026E               	subwf	_minutes,w	;volatile
  8576  1705  1803               	skipnc
  8577  1706  2F09               	goto	l253
  8578  1707                     l257:	
  8579                           
  8580                           ;time_scheduler.h: 220: {
  8581                           ;time_scheduler.h: 221: PORTCbits.RC4 = 0;
  8582  1707  1207               	bcf	7,4	;volatile
  8583                           
  8584                           ;time_scheduler.h: 222: }
  8585  1708  0008               	return
  8586  1709                     l253:	
  8587                           
  8588                           ;time_scheduler.h: 223: else
  8589                           ;time_scheduler.h: 224: {
  8590                           ;time_scheduler.h: 225: PORTCbits.RC4 = 1;
  8591  1709  1607               	bsf	7,4	;volatile
  8592                           
  8593                           ;time_scheduler.h: 226: }
  8594                           ;time_scheduler.h: 227: }
  8595  170A  0008               	return
  8596  170B                     l2870:	
  8597                           
  8598                           ;time_scheduler.h: 228: else if (savedHoursEnd < savedHoursStart)
  8599  170B  0869               	movf	_savedHoursStart,w	;volatile
  8600  170C  0268               	subwf	_savedHoursEnd,w	;volatile
  8601  170D  1803               	skipnc
  8602  170E  2F2B               	goto	l2884
  8603                           
  8604                           ;time_scheduler.h: 229: {
  8605                           ;time_scheduler.h: 231: if ((hours > savedHoursStart || (hours == savedHoursStart && min
      +                          utes >= savedMinutesStart)) ||
  8606                           ;time_scheduler.h: 232: (hours < savedHoursEnd || (hours == savedHoursEnd && minutes < s
      +                          avedMinutesEnd)))
  8607  170F  0866               	movf	_hours,w	;volatile
  8608  1710  0269               	subwf	_savedHoursStart,w	;volatile
  8609  1711  1C03               	skipc
  8610  1712  2F27               	goto	l263
  8611  1713  0866               	movf	_hours,w	;volatile
  8612  1714  0669               	xorwf	_savedHoursStart,w	;volatile
  8613  1715  1D03               	skipz
  8614  1716  2F1B               	goto	l2878
  8615  1717  086B               	movf	_savedMinutesStart,w	;volatile
  8616  1718  026E               	subwf	_minutes,w	;volatile
  8617  1719  1803               	skipnc
  8618  171A  2F27               	goto	l263
  8619  171B                     l2878:	
  8620  171B  0868               	movf	_savedHoursEnd,w	;volatile
  8621  171C  0266               	subwf	_hours,w	;volatile
  8622  171D  1C03               	skipc
  8623  171E  2F27               	goto	l263
  8624  171F  0866               	movf	_hours,w	;volatile
  8625  1720  0668               	xorwf	_savedHoursEnd,w	;volatile
  8626  1721  1D03               	skipz
  8627  1722  2F29               	goto	l261
  8628  1723  086A               	movf	_savedMinutesEnd,w	;volatile
  8629  1724  026E               	subwf	_minutes,w	;volatile
  8630  1725  1803               	skipnc
  8631  1726  2F29               	goto	l261
  8632  1727                     l263:	
  8633                           
  8634                           ;time_scheduler.h: 233: {
  8635                           ;time_scheduler.h: 234: PORTCbits.RC4 = 0;
  8636  1727  1207               	bcf	7,4	;volatile
  8637                           
  8638                           ;time_scheduler.h: 235: }
  8639  1728  0008               	return
  8640  1729                     l261:	
  8641                           
  8642                           ;time_scheduler.h: 236: else
  8643                           ;time_scheduler.h: 237: {
  8644                           ;time_scheduler.h: 238: PORTCbits.RC4 = 1;
  8645  1729  1607               	bsf	7,4	;volatile
  8646                           
  8647                           ;time_scheduler.h: 239: }
  8648                           ;time_scheduler.h: 240: }
  8649  172A  0008               	return
  8650  172B                     l2884:	
  8651                           
  8652                           ;time_scheduler.h: 241: else
  8653                           ;time_scheduler.h: 242: {
  8654                           ;time_scheduler.h: 243: if (minutes >= savedMinutesStart && minutes < savedMinutesEnd)
  8655  172B  086B               	movf	_savedMinutesStart,w	;volatile
  8656  172C  026E               	subwf	_minutes,w	;volatile
  8657  172D  1C03               	skipc
  8658  172E  2F35               	goto	l270
  8659  172F  086A               	movf	_savedMinutesEnd,w	;volatile
  8660  1730  026E               	subwf	_minutes,w	;volatile
  8661  1731  1803               	skipnc
  8662  1732  2F35               	goto	l270
  8663                           
  8664                           ;time_scheduler.h: 244: {
  8665                           ;time_scheduler.h: 245: PORTCbits.RC4 = 0;
  8666  1733  1207               	bcf	7,4	;volatile
  8667                           
  8668                           ;time_scheduler.h: 246: }
  8669  1734  0008               	return
  8670  1735                     l270:	
  8671                           
  8672                           ;time_scheduler.h: 247: else
  8673                           ;time_scheduler.h: 248: {
  8674                           ;time_scheduler.h: 249: PORTCbits.RC4 = 1;
  8675  1735  1607               	bsf	7,4	;volatile
  8676  1736  0008               	return
  8677  1737                     __end_of_checkTime:	
  8678                           
  8679                           	psect	text39
  8680  14A1                     __ptext39:	
  8681 ;; *************** function _checkSEL *****************
  8682 ;; Defined at:
  8683 ;;		line 190 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;		None
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;  currentRB1St    2    4[BANK0 ] int 
  8688 ;; Return value:  Size  Location     Type
  8689 ;;		None               void
  8690 ;; Registers used:
  8691 ;;		wreg, status,2, status,0, pclath, cstack
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8697 ;;      Params:         0       0       0       0       0
  8698 ;;      Locals:         0       2       0       0       0
  8699 ;;      Temps:          0       2       0       0       0
  8700 ;;      Totals:         0       4       0       0       0
  8701 ;;Total ram usage:        4 bytes
  8702 ;; Hardware stack levels used:    1
  8703 ;; Hardware stack levels required when called:    3
  8704 ;; This function calls:
  8705 ;;		_instCTRL
  8706 ;; This function is called by:
  8707 ;;		_main
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           
  8712                           ;psect for function _checkSEL
  8713  14A1                     _checkSEL:	
  8714                           
  8715                           ;main.c: 192: static int lastRB1State = 0;
  8716                           ;main.c: 193: int currentRB1State = RB1;
  8717                           
  8718                           ;incstack = 0
  8719                           ; Regs used in _checkSEL: [wreg+status,2+status,0+pclath+cstack]
  8720  14A1  1003               	clrc
  8721  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  8722  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  8723  14A4  1886               	btfsc	6,1	;volatile
  8724  14A5  1403               	setc
  8725  14A6  3000               	movlw	0
  8726  14A7  1803               	skipnc
  8727  14A8  3001               	movlw	1
  8728  14A9  00A2               	movwf	??_checkSEL
  8729  14AA  01A3               	clrf	??_checkSEL+1
  8730  14AB  0822               	movf	??_checkSEL,w
  8731  14AC  00A4               	movwf	checkSEL@currentRB1State
  8732  14AD  0823               	movf	??_checkSEL+1,w
  8733  14AE  00A5               	movwf	checkSEL@currentRB1State+1
  8734                           
  8735                           ;main.c: 194: if (currentRB1State == 1 && lastRB1State == 0)
  8736  14AF  3001               	movlw	1
  8737  14B0  0624               	xorwf	checkSEL@currentRB1State,w
  8738  14B1  0425               	iorwf	checkSEL@currentRB1State+1,w
  8739  14B2  1D03               	skipz
  8740  14B3  2CC6               	goto	l2932
  8741  14B4  1683               	bsf	3,5	;RP0=1, select bank1
  8742  14B5  1303               	bcf	3,6	;RP1=0, select bank1
  8743  14B6  0860               	movf	(checkSEL@lastRB1State+1)^(0+128),w
  8744  14B7  045F               	iorwf	checkSEL@lastRB1State^(0+128),w
  8745  14B8  1D03               	skipz
  8746  14B9  2CC6               	goto	l2932
  8747                           
  8748                           ;main.c: 195: {
  8749                           ;main.c: 196: SEL ^= 1;
  8750  14BA  3001               	movlw	1
  8751  14BB  1283               	bcf	3,5	;RP0=0, select bank0
  8752  14BC  1303               	bcf	3,6	;RP1=0, select bank0
  8753  14BD  00A2               	movwf	??_checkSEL
  8754  14BE  0822               	movf	??_checkSEL,w
  8755  14BF  1683               	bsf	3,5	;RP0=1, select bank1
  8756  14C0  1303               	bcf	3,6	;RP1=0, select bank1
  8757  14C1  06E1               	xorwf	_SEL^(0+128),f	;volatile
  8758                           
  8759                           ;main.c: 197: instCTRL(0x01);
  8760  14C2  3001               	movlw	1
  8761  14C3  160A  118A  2304   	fcall	_instCTRL
  8762  14C6                     l2932:	
  8763                           
  8764                           ;main.c: 198: }
  8765                           ;main.c: 199: lastRB1State = currentRB1State;
  8766  14C6  1283               	bcf	3,5	;RP0=0, select bank0
  8767  14C7  1303               	bcf	3,6	;RP1=0, select bank0
  8768  14C8  0825               	movf	checkSEL@currentRB1State+1,w
  8769  14C9  1683               	bsf	3,5	;RP0=1, select bank1
  8770  14CA  1303               	bcf	3,6	;RP1=0, select bank1
  8771  14CB  01E0               	clrf	(checkSEL@lastRB1State+1)^(0+128)
  8772  14CC  07E0               	addwf	(checkSEL@lastRB1State+1)^(0+128),f
  8773  14CD  1283               	bcf	3,5	;RP0=0, select bank0
  8774  14CE  1303               	bcf	3,6	;RP1=0, select bank0
  8775  14CF  0824               	movf	checkSEL@currentRB1State,w
  8776  14D0  1683               	bsf	3,5	;RP0=1, select bank1
  8777  14D1  1303               	bcf	3,6	;RP1=0, select bank1
  8778  14D2  01DF               	clrf	checkSEL@lastRB1State^(0+128)
  8779  14D3  07DF               	addwf	checkSEL@lastRB1State^(0+128),f
  8780  14D4  0008               	return
  8781  14D5                     __end_of_checkSEL:	
  8782                           
  8783                           	psect	text40
  8784  1347                     __ptext40:	
  8785 ;; *************** function _checkMode *****************
  8786 ;; Defined at:
  8787 ;;		line 180 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;		None
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;		None
  8792 ;; Return value:  Size  Location     Type
  8793 ;;		None               void
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0, pclath, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8801 ;;      Params:         0       0       0       0       0
  8802 ;;      Locals:         0       0       0       0       0
  8803 ;;      Temps:          0       2       0       0       0
  8804 ;;      Totals:         0       2       0       0       0
  8805 ;;Total ram usage:        2 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; Hardware stack levels required when called:    3
  8808 ;; This function calls:
  8809 ;;		_instCTRL
  8810 ;; This function is called by:
  8811 ;;		_main
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           
  8816                           ;psect for function _checkMode
  8817  1347                     _checkMode:	
  8818                           
  8819                           ;main.c: 182: if (lastMode != mode)
  8820                           
  8821                           ;incstack = 0
  8822                           ; Regs used in _checkMode: [wreg+status,2+status,0+pclath+cstack]
  8823  1347  1683               	bsf	3,5	;RP0=1, select bank1
  8824  1348  1303               	bcf	3,6	;RP1=0, select bank1
  8825  1349  086F               	movf	_lastMode^(0+128),w
  8826  134A  0662               	xorwf	_mode^(0+128),w
  8827  134B  1903               	skipnz
  8828  134C  0008               	return
  8829                           
  8830                           ;main.c: 183: {
  8831                           ;main.c: 184: instCTRL(0x01);
  8832  134D  3001               	movlw	1
  8833  134E  160A  118A  2304  160A  118A  	fcall	_instCTRL
  8834                           
  8835                           ;main.c: 185: _delay((unsigned long)((50)*(4000000/4000.0)));
  8836  1353  3041               	movlw	65
  8837  1354  1283               	bcf	3,5	;RP0=0, select bank0
  8838  1355  1303               	bcf	3,6	;RP1=0, select bank0
  8839  1356  00A3               	movwf	??_checkMode+1
  8840  1357  30EE               	movlw	238
  8841  1358  00A2               	movwf	??_checkMode
  8842  1359                     u4507:	
  8843  1359  0BA2               	decfsz	??_checkMode,f
  8844  135A  2B59               	goto	u4507
  8845  135B  0BA3               	decfsz	??_checkMode+1,f
  8846  135C  2B59               	goto	u4507
  8847  135D  0000               	nop
  8848                           
  8849                           ;main.c: 186: lastMode = mode;
  8850  135E  1683               	bsf	3,5	;RP0=1, select bank1
  8851  135F  1303               	bcf	3,6	;RP1=0, select bank1
  8852  1360  0862               	movf	_mode^(0+128),w
  8853  1361  1283               	bcf	3,5	;RP0=0, select bank0
  8854  1362  1303               	bcf	3,6	;RP1=0, select bank0
  8855  1363  00A2               	movwf	??_checkMode
  8856  1364  0822               	movf	??_checkMode,w
  8857  1365  1683               	bsf	3,5	;RP0=1, select bank1
  8858  1366  1303               	bcf	3,6	;RP1=0, select bank1
  8859  1367  00EF               	movwf	_lastMode^(0+128)
  8860  1368  0008               	return
  8861  1369                     __end_of_checkMode:	
  8862                           
  8863                           	psect	text41
  8864  1304                     __ptext41:	
  8865 ;; *************** function _instCTRL *****************
  8866 ;; Defined at:
  8867 ;;		line 23 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\lcd_functions.h
      +"
  8868 ;; Parameters:    Size  Location     Type
  8869 ;;  CMD             1    wreg     unsigned char 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;  CMD             1    1[BANK0 ] unsigned char 
  8872 ;; Return value:  Size  Location     Type
  8873 ;;		None               void
  8874 ;; Registers used:
  8875 ;;		wreg
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8881 ;;      Params:         0       0       0       0       0
  8882 ;;      Locals:         0       1       0       0       0
  8883 ;;      Temps:          0       1       0       0       0
  8884 ;;      Totals:         0       2       0       0       0
  8885 ;;Total ram usage:        2 bytes
  8886 ;; Hardware stack levels used:    1
  8887 ;; Hardware stack levels required when called:    2
  8888 ;; This function calls:
  8889 ;;		Nothing
  8890 ;; This function is called by:
  8891 ;;		_initLCD
  8892 ;;		_setCursor
  8893 ;;		_displayDataDHT11
  8894 ;;		_main
  8895 ;;		_startUpSequence
  8896 ;;		_checkMode
  8897 ;;		_checkSEL
  8898 ;; This function uses a non-reentrant model
  8899 ;;
  8900                           
  8901                           
  8902                           ;psect for function _instCTRL
  8903  1304                     _instCTRL:	
  8904                           
  8905                           ;incstack = 0
  8906                           ; Regs used in _instCTRL: [wreg]
  8907                           ;instCTRL@CMD stored from wreg
  8908  1304  1283               	bcf	3,5	;RP0=0, select bank0
  8909  1305  1303               	bcf	3,6	;RP1=0, select bank0
  8910  1306  00A1               	movwf	instCTRL@CMD
  8911                           
  8912                           ;lcd_functions.h: 25: PORTD = CMD;
  8913  1307  0821               	movf	instCTRL@CMD,w
  8914  1308  0088               	movwf	8	;volatile
  8915                           
  8916                           ;lcd_functions.h: 26: RC0 = 0;
  8917  1309  1007               	bcf	7,0	;volatile
  8918                           
  8919                           ;lcd_functions.h: 27: RC1 = 0;
  8920  130A  1087               	bcf	7,1	;volatile
  8921                           
  8922                           ;lcd_functions.h: 28: RC2 = 1;
  8923  130B  1507               	bsf	7,2	;volatile
  8924                           
  8925                           ;lcd_functions.h: 29: _delay((unsigned long)((1)*(4000000/4000.0)));
  8926  130C  30F9               	movlw	249
  8927  130D  00A0               	movwf	??_instCTRL
  8928  130E                     u4517:	
  8929  130E  0000               	nop
  8930  130F  0BA0               	decfsz	??_instCTRL,f
  8931  1310  2B0E               	goto	u4517
  8932  1311  2B12               	nop2	;nop
  8933  1312  0000               	nop
  8934                           
  8935                           ;lcd_functions.h: 30: RC2 = 0;
  8936  1313  1283               	bcf	3,5	;RP0=0, select bank0
  8937  1314  1303               	bcf	3,6	;RP1=0, select bank0
  8938  1315  1107               	bcf	7,2	;volatile
  8939  1316  0008               	return
  8940  1317                     __end_of_instCTRL:	
  8941                           
  8942                           	psect	text42
  8943  12F3                     __ptext42:	
  8944 ;; *************** function _activateHumidifier *****************
  8945 ;; Defined at:
  8946 ;;		line 101 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\dht11_module.h
      +"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;		None
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;		None
  8951 ;; Return value:  Size  Location     Type
  8952 ;;		None               void
  8953 ;; Registers used:
  8954 ;;		wreg
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8960 ;;      Params:         0       0       0       0       0
  8961 ;;      Locals:         0       0       0       0       0
  8962 ;;      Temps:          0       0       0       0       0
  8963 ;;      Totals:         0       0       0       0       0
  8964 ;;Total ram usage:        0 bytes
  8965 ;; Hardware stack levels used:    1
  8966 ;; Hardware stack levels required when called:    2
  8967 ;; This function calls:
  8968 ;;		Nothing
  8969 ;; This function is called by:
  8970 ;;		_main
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           
  8975                           ;psect for function _activateHumidifier
  8976  12F3                     _activateHumidifier:	
  8977                           
  8978                           ;dht11_module.h: 103: if (humidity > 50 || temperature > 25)
  8979                           
  8980                           ;incstack = 0
  8981                           ; Regs used in _activateHumidifier: [wreg]
  8982  12F3  3033               	movlw	51
  8983  12F4  1683               	bsf	3,5	;RP0=1, select bank1
  8984  12F5  1303               	bcf	3,6	;RP1=0, select bank1
  8985  12F6  026E               	subwf	_humidity^(0+128),w
  8986  12F7  1803               	skipnc
  8987  12F8  2AFF               	goto	l136
  8988  12F9  301A               	movlw	26
  8989  12FA  1283               	bcf	3,5	;RP0=0, select bank0
  8990  12FB  1303               	bcf	3,6	;RP1=0, select bank0
  8991  12FC  026F               	subwf	_temperature,w
  8992  12FD  1C03               	skipc
  8993  12FE  2B02               	goto	l134
  8994  12FF                     l136:	
  8995                           
  8996                           ;dht11_module.h: 104: {
  8997                           ;dht11_module.h: 105: PORTCbits.RC3 = 0;
  8998  12FF  1283               	bcf	3,5	;RP0=0, select bank0
  8999  1300  1187               	bcf	7,3	;volatile
  9000                           
  9001                           ;dht11_module.h: 106: }
  9002  1301  0008               	return
  9003  1302                     l134:	
  9004                           
  9005                           ;dht11_module.h: 107: else
  9006                           ;dht11_module.h: 108: {
  9007                           ;dht11_module.h: 109: PORTCbits.RC3 = 1;
  9008  1302  1587               	bsf	7,3	;volatile
  9009  1303  0008               	return
  9010  1304                     __end_of_activateHumidifier:	
  9011                           
  9012                           	psect	text43
  9013  14D5                     __ptext43:	
  9014 ;; *************** function _ISR *****************
  9015 ;; Defined at:
  9016 ;;		line 131 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\second-version\main.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;		None
  9019 ;; Auto vars:     Size  Location     Type
  9020 ;;		None
  9021 ;; Return value:  Size  Location     Type
  9022 ;;		None               void
  9023 ;; Registers used:
  9024 ;;		wreg, status,2, status,0, pclath, cstack
  9025 ;; Tracked objects:
  9026 ;;		On entry : 0/0
  9027 ;;		On exit  : 0/0
  9028 ;;		Unchanged: 0/0
  9029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9030 ;;      Params:         0       0       0       0       0
  9031 ;;      Locals:         0       0       0       0       0
  9032 ;;      Temps:          7       0       0       0       0
  9033 ;;      Totals:         7       0       0       0       0
  9034 ;;Total ram usage:        7 bytes
  9035 ;; Hardware stack levels used:    1
  9036 ;; Hardware stack levels required when called:    1
  9037 ;; This function calls:
  9038 ;;		i1___awmod
  9039 ;; This function is called by:
  9040 ;;		Interrupt level 1
  9041 ;; This function uses a non-reentrant model
  9042 ;;
  9043                           
  9044                           
  9045                           ;psect for function _ISR
  9046  14D5                     _ISR:	
  9047                           
  9048                           ;main.c: 133: if (INTF)
  9049  14D5  1C8B               	btfss	11,1	;volatile
  9050  14D6  2CFE               	goto	i1l305
  9051                           
  9052                           ;main.c: 134: {
  9053                           ;main.c: 135: INTF = 0;
  9054  14D7  108B               	bcf	11,1	;volatile
  9055                           
  9056                           ;main.c: 136: mode = (mode + 1) % 3;
  9057  14D8  3003               	movlw	3
  9058  14D9  00F0               	movwf	i1___awmod@divisor
  9059  14DA  3000               	movlw	0
  9060  14DB  00F1               	movwf	i1___awmod@divisor+1
  9061  14DC  1683               	bsf	3,5	;RP0=1, select bank1
  9062  14DD  1303               	bcf	3,6	;RP1=0, select bank1
  9063  14DE  0862               	movf	_mode^(0+128),w
  9064  14DF  3E01               	addlw	1
  9065  14E0  00F2               	movwf	i1___awmod@dividend
  9066  14E1  3000               	movlw	0
  9067  14E2  1803               	skipnc
  9068  14E3  3001               	movlw	1
  9069  14E4  00F3               	movwf	i1___awmod@dividend+1
  9070  14E5  160A  118A  25F3  160A  118A  	fcall	i1___awmod
  9071  14EA  0870               	movf	?i1___awmod,w
  9072  14EB  00F7               	movwf	??_ISR
  9073  14EC  0877               	movf	??_ISR,w
  9074  14ED  1683               	bsf	3,5	;RP0=1, select bank1
  9075  14EE  1303               	bcf	3,6	;RP1=0, select bank1
  9076  14EF  00E2               	movwf	_mode^(0+128)
  9077                           
  9078                           ;main.c: 137: SEL = 0;
  9079  14F0  01E1               	clrf	_SEL^(0+128)	;volatile
  9080                           
  9081                           ;main.c: 138: _delay((unsigned long)((200)*(4000000/4000.0)));
  9082  14F1  3002               	movlw	2
  9083  14F2  00F9               	movwf	??_ISR+2
  9084  14F3  3004               	movlw	4
  9085  14F4  00F8               	movwf	??_ISR+1
  9086  14F5  30BA               	movlw	186
  9087  14F6  00F7               	movwf	??_ISR
  9088  14F7                     u452_27:	
  9089  14F7  0BF7               	decfsz	??_ISR,f
  9090  14F8  2CF7               	goto	u452_27
  9091  14F9  0BF8               	decfsz	??_ISR+1,f
  9092  14FA  2CF7               	goto	u452_27
  9093  14FB  0BF9               	decfsz	??_ISR+2,f
  9094  14FC  2CF7               	goto	u452_27
  9095  14FD  0000               	nop
  9096  14FE                     i1l305:	
  9097  14FE  087D               	movf	??_ISR+6,w
  9098  14FF  1283               	bcf	3,5	;RP0=0, select bank0
  9099  1500  1303               	bcf	3,6	;RP1=0, select bank0
  9100  1501  00FF               	movwf	127
  9101  1502  087C               	movf	??_ISR+5,w
  9102  1503  008A               	movwf	10
  9103  1504  087B               	movf	??_ISR+4,w
  9104  1505  0084               	movwf	4
  9105  1506  0E7A               	swapf	(??_ISR+3)^(0+-128),w
  9106  1507  0083               	movwf	3
  9107  1508  0EFE               	swapf	126,f
  9108  1509  0E7E               	swapf	126,w
  9109  150A  0009               	retfie
  9110  150B                     __end_of_ISR:	
  9111                           
  9112                           	psect	intentry
  9113  0004                     __pintentry:	
  9114                           ;incstack = 0
  9115                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  9116                           
  9117  0004                     interrupt_function:	
  9118  007E                     saved_w	set	btemp
  9119  0004  00FE               	movwf	btemp
  9120  0005  0E03               	swapf	3,w
  9121  0006  00FA               	movwf	??_ISR+3
  9122  0007  0804               	movf	4,w
  9123  0008  00FB               	movwf	??_ISR+4
  9124  0009  080A               	movf	10,w
  9125  000A  00FC               	movwf	??_ISR+5
  9126  000B  1283               	bcf	3,5	;RP0=0, select bank0
  9127  000C  1303               	bcf	3,6	;RP1=0, select bank0
  9128  000D  087F               	movf	btemp+1,w
  9129  000E  00FD               	movwf	??_ISR+6
  9130  000F  160A  118A  2CD5   	ljmp	_ISR
  9131                           
  9132                           	psect	text44
  9133  15F3                     __ptext44:	
  9134 ;; *************** function i1___awmod *****************
  9135 ;; Defined at:
  9136 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;  divisor         2    0[COMMON] int 
  9139 ;;  dividend        2    2[COMMON] int 
  9140 ;; Auto vars:     Size  Location     Type
  9141 ;;  __awmod         1    6[COMMON] unsigned char 
  9142 ;;  __awmod         1    5[COMMON] unsigned char 
  9143 ;; Return value:  Size  Location     Type
  9144 ;;                  2    0[COMMON] int 
  9145 ;; Registers used:
  9146 ;;		wreg, status,2, status,0
  9147 ;; Tracked objects:
  9148 ;;		On entry : 0/0
  9149 ;;		On exit  : 0/0
  9150 ;;		Unchanged: 0/0
  9151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9152 ;;      Params:         4       0       0       0       0
  9153 ;;      Locals:         2       0       0       0       0
  9154 ;;      Temps:          1       0       0       0       0
  9155 ;;      Totals:         7       0       0       0       0
  9156 ;;Total ram usage:        7 bytes
  9157 ;; Hardware stack levels used:    1
  9158 ;; This function calls:
  9159 ;;		Nothing
  9160 ;; This function is called by:
  9161 ;;		_ISR
  9162 ;; This function uses a non-reentrant model
  9163 ;;
  9164                           
  9165                           
  9166                           ;psect for function i1___awmod
  9167  15F3                     i1___awmod:	
  9168                           
  9169                           ;incstack = 0
  9170                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  9171  15F3  01F6               	clrf	i1___awmod@sign
  9172  15F4  1FF3               	btfss	i1___awmod@dividend+1,7
  9173  15F5  2DFD               	goto	i1l2942
  9174  15F6  09F2               	comf	i1___awmod@dividend,f
  9175  15F7  09F3               	comf	i1___awmod@dividend+1,f
  9176  15F8  0AF2               	incf	i1___awmod@dividend,f
  9177  15F9  1903               	skipnz
  9178  15FA  0AF3               	incf	i1___awmod@dividend+1,f
  9179  15FB  01F6               	clrf	i1___awmod@sign
  9180  15FC  0AF6               	incf	i1___awmod@sign,f
  9181  15FD                     i1l2942:	
  9182  15FD  1FF1               	btfss	i1___awmod@divisor+1,7
  9183  15FE  2E04               	goto	i1l2946
  9184  15FF  09F0               	comf	i1___awmod@divisor,f
  9185  1600  09F1               	comf	i1___awmod@divisor+1,f
  9186  1601  0AF0               	incf	i1___awmod@divisor,f
  9187  1602  1903               	skipnz
  9188  1603  0AF1               	incf	i1___awmod@divisor+1,f
  9189  1604                     i1l2946:	
  9190  1604  0871               	movf	i1___awmod@divisor+1,w
  9191  1605  0470               	iorwf	i1___awmod@divisor,w
  9192  1606  1903               	skipnz
  9193  1607  2E31               	goto	i1l2964
  9194  1608  01F5               	clrf	i1___awmod@counter
  9195  1609  0AF5               	incf	i1___awmod@counter,f
  9196  160A                     i1l2954:	
  9197  160A  1BF1               	btfsc	i1___awmod@divisor+1,7
  9198  160B  2E18               	goto	i1l2956
  9199  160C  3001               	movlw	1
  9200  160D                     u415_25:	
  9201  160D  1003               	clrc
  9202  160E  0DF0               	rlf	i1___awmod@divisor,f
  9203  160F  0DF1               	rlf	i1___awmod@divisor+1,f
  9204  1610  3EFF               	addlw	-1
  9205  1611  1D03               	skipz
  9206  1612  2E0D               	goto	u415_25
  9207  1613  3001               	movlw	1
  9208  1614  00F4               	movwf	??i1___awmod
  9209  1615  0874               	movf	??i1___awmod,w
  9210  1616  07F5               	addwf	i1___awmod@counter,f
  9211  1617  2E0A               	goto	i1l2954
  9212  1618                     i1l2956:	
  9213  1618  0871               	movf	i1___awmod@divisor+1,w
  9214  1619  0273               	subwf	i1___awmod@dividend+1,w
  9215  161A  1D03               	skipz
  9216  161B  2E1E               	goto	u417_25
  9217  161C  0870               	movf	i1___awmod@divisor,w
  9218  161D  0272               	subwf	i1___awmod@dividend,w
  9219  161E                     u417_25:	
  9220  161E  1C03               	skipc
  9221  161F  2E26               	goto	i1l2960
  9222  1620  0870               	movf	i1___awmod@divisor,w
  9223  1621  02F2               	subwf	i1___awmod@dividend,f
  9224  1622  0871               	movf	i1___awmod@divisor+1,w
  9225  1623  1C03               	skipc
  9226  1624  03F3               	decf	i1___awmod@dividend+1,f
  9227  1625  02F3               	subwf	i1___awmod@dividend+1,f
  9228  1626                     i1l2960:	
  9229  1626  3001               	movlw	1
  9230  1627                     u418_25:	
  9231  1627  1003               	clrc
  9232  1628  0CF1               	rrf	i1___awmod@divisor+1,f
  9233  1629  0CF0               	rrf	i1___awmod@divisor,f
  9234  162A  3EFF               	addlw	-1
  9235  162B  1D03               	skipz
  9236  162C  2E27               	goto	u418_25
  9237  162D  3001               	movlw	1
  9238  162E  02F5               	subwf	i1___awmod@counter,f
  9239  162F  1D03               	btfss	3,2
  9240  1630  2E18               	goto	i1l2956
  9241  1631                     i1l2964:	
  9242  1631  0876               	movf	i1___awmod@sign,w
  9243  1632  1903               	btfsc	3,2
  9244  1633  2E39               	goto	i1l2968
  9245  1634  09F2               	comf	i1___awmod@dividend,f
  9246  1635  09F3               	comf	i1___awmod@dividend+1,f
  9247  1636  0AF2               	incf	i1___awmod@dividend,f
  9248  1637  1903               	skipnz
  9249  1638  0AF3               	incf	i1___awmod@dividend+1,f
  9250  1639                     i1l2968:	
  9251  1639  0873               	movf	i1___awmod@dividend+1,w
  9252  163A  01F1               	clrf	?i1___awmod+1
  9253  163B  07F1               	addwf	?i1___awmod+1,f
  9254  163C  0872               	movf	i1___awmod@dividend,w
  9255  163D  01F0               	clrf	?i1___awmod
  9256  163E  07F0               	addwf	?i1___awmod,f
  9257  163F  0008               	return
  9258  1640                     __end_ofi1___awmod:	
  9259  007E                     btemp	set	126	;btemp
  9260  007E                     wtemp	set	126
  9261  007E                     wtemp0	set	126
  9262  0080                     wtemp1	set	128
  9263  0082                     wtemp2	set	130
  9264  0084                     wtemp3	set	132
  9265  0086                     wtemp4	set	134
  9266  0088                     wtemp5	set	136
  9267  007F                     wtemp6	set	127
  9268  007E                     ttemp	set	126
  9269  007E                     ttemp0	set	126
  9270  0081                     ttemp1	set	129
  9271  0084                     ttemp2	set	132
  9272  0087                     ttemp3	set	135
  9273  007F                     ttemp4	set	127
  9274  007E                     ltemp	set	126
  9275  007E                     ltemp0	set	126
  9276  0082                     ltemp1	set	130
  9277  0086                     ltemp2	set	134
  9278  0080                     ltemp3	set	128


Data Sizes:
    Strings     251
    Constant    10
    Data        7
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     70      80
    BANK1            80     55      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_31(CODE[15]), STR_29(CODE[15]), STR_26(CODE[17]), STR_24(CODE[17]), 
		 -> STR_21(CODE[25]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[10]), 
		 -> STR_17(CODE[10]), STR_16(CODE[10]), STR_15(CODE[10]), STR_14(CODE[10]), 
		 -> STR_13(CODE[10]), STR_12(CODE[10]), STR_11(CODE[10]), STR_10(CODE[10]), 
		 -> STR_9(CODE[10]), STR_8(CODE[16]), STR_5(CODE[9]), STR_4(CODE[3]), 
		 -> STR_3(CODE[6]), STR_1(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK1[16]), debugInfo(BANK1[10]), displayTime@timeFormat(BANK0[16]), displayPPM@strBuffer(BANK1[20]), 
		 -> displayDataDHT11@buffer(BANK0[15]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S331$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    displayPPM@bufPtr	PTR unsigned char  size(1) Largest target is 20
		 -> displayPPM@strBuffer(BANK1[20]), 

    readDHT11@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> temperature(BANK0[1]), 

    readDHT11@humidity	PTR unsigned char  size(1) Largest target is 1
		 -> humidity(BANK1[1]), 

    printToLCD@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_32(CODE[16]), STR_30(CODE[9]), STR_28(CODE[10]), STR_27(CODE[16]), 
		 -> STR_25(CODE[11]), STR_23(CODE[12]), STR_22(CODE[18]), main@buffer(BANK1[16]), 
		 -> debugInfo(BANK1[10]), displayTime@timeFormat(BANK0[16]), STR_7(CODE[8]), STR_6(CODE[8]), 
		 -> displayPPM@strBuffer(BANK1[20]), STR_2(CODE[7]), displayDataDHT11@buffer(BANK0[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___awmod

Critical Paths under _main in BANK0

    _main->_runDHT11
    _startUpSequence->_setCursor
    _initLCD->_instCTRL
    _setMinutesStart->_sprintf
    _setMinutesEnd->_sprintf
    _setHoursStart->_sprintf
    _setHoursEnd->_sprintf
    _runMQ135->_CalcMQ135
    _CalcMQ135->___ftdiv
    ___ftdiv->___ftmul
    _runDHT11->_displayDataDHT11
    _setCursor->_instCTRL
    _displayDataDHT11->_sprintf
    _handlePPM->___ftge
    _displayTime->_sprintf
    _displayPPM->___fttol
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _printToLCD->_dataCTRL
    ___fttol->___ftadd
    ___ftneg->___awtoft
    ___ftmul->___ftneg
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _checkSEL->_instCTRL
    _checkMode->_instCTRL

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _runMQ135->_CalcMQ135

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   74617
                                             62 BANK0      8     8      0
                                             39 BANK1     16    16      0
                 _activateHumidifier
                          _checkMode
                           _checkSEL
                          _checkTime
                   _displayDataDHT11
                         _displayPPM
                        _displayTime
                          _handlePPM
                     _initInterrupts
                          _initPorts
                      _initRegisters
                           _instCTRL
                         _printToLCD
                           _runClock
                           _runDHT11
                           _runMQ135
                          _setCursor
                        _setHoursEnd
                      _setHoursStart
                      _setMinutesEnd
                    _setMinutesStart
                            _sprintf
                    _startUpSequence
 ---------------------------------------------------------------------------------
 (1) _startUpSequence                                      3     3      0    2113
                                              6 BANK0      3     3      0
                          _initDHT11
                            _initLCD
                           _instCTRL
                         _printToLCD
                          _setCursor
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              2 BANK0      2     2      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (2) _initDHT11                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setMinutesStart                                      2     2      0    5927
                                             40 BANK0      2     2      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setMinutesEnd                                        2     2      0    5927
                                             40 BANK0      2     2      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setHoursStart                                        2     2      0    5927
                                             40 BANK0      2     2      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _setHoursEnd                                          2     2      0    5927
                                             40 BANK0      2     2      0
                            ___awmod
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1198
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _runMQ135                                             0     0      0   11540
                          _CalcMQ135
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _CalcMQ135                                           42    39      3   11518
                                             49 BANK0      3     0      3
                                              0 BANK1     39    39      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2177
                                             33 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _runDHT11                                             3     3      0    7324
                                             59 BANK0      3     3      0
                   _displayDataDHT11
                         _printToLCD
                          _readDHT11
                          _setCursor
 ---------------------------------------------------------------------------------
 (2) _setCursor                                            4     3      1     836
                                              2 BANK0      4     3      1
                           _instCTRL
 ---------------------------------------------------------------------------------
 (2) _readDHT11                                           15    14      1     444
                                              0 BANK0     15    14      1
 ---------------------------------------------------------------------------------
 (2) _displayDataDHT11                                    19    19      0    4811
                                             40 BANK0     19    19      0
                           _instCTRL
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _runClock                                             2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initRegisters                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _handlePPM                                            0     0      0     242
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     242
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         20    20      0    4789
                                             40 BANK0     20    20      0
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _displayPPM                                          26    26      0   14178
                                             60 BANK0      1     1      0
                                              0 BANK1     25    25      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    16     10    3496
                                             14 BANK0     26    16     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     198
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     265
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     268
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _printToLCD                                           2     0      2    1233
                                              2 BANK0      2     0      2
                           _dataCTRL
 ---------------------------------------------------------------------------------
 (3) _dataCTRL                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                             46 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                             14 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3495
                                             17 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3347
                                             33 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1882
                                              8 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1685
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _checkTime                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkSEL                                             4     4      0      67
                                              2 BANK0      4     4      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (1) _checkMode                                            2     2      0      22
                                              2 BANK0      2     2      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (3) _instCTRL                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _activateHumidifier                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  7     7      0     348
                                              7 COMMON     7     7      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (6) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _activateHumidifier
   _checkMode
     _instCTRL
   _checkSEL
     _instCTRL
   _checkTime
   _displayDataDHT11
     _instCTRL
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _displayPPM
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _displayTime
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _handlePPM
     ___ftge
   _initInterrupts
   _initPorts
   _initRegisters
   _instCTRL
   _printToLCD
     _dataCTRL
   _runClock
   _runDHT11
     _displayDataDHT11
       _instCTRL
       _printToLCD
         _dataCTRL
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _printToLCD
       _dataCTRL
     _readDHT11
     _setCursor
       _instCTRL
   _runMQ135
     _CalcMQ135
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       _readADC (ARG)
     _readADC
   _setCursor
     _instCTRL
   _setHoursEnd
     ___awmod
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setHoursStart
     ___awmod
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setMinutesEnd
     ___awmod
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _setMinutesStart
     ___awmod
     _printToLCD
       _dataCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _startUpSequence
     _initDHT11
     _initLCD
       _instCTRL
     _instCTRL
     _printToLCD
       _dataCTRL
     _setCursor
       _instCTRL

 _ISR (ROOT)
   i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     37      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     46      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      AE      12        0.0%
ABS                  0      0      AE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon May 20 07:54:26 2024

                          pc 0002                 ?_displayTime 0070                  __CFG_CP$OFF 0000  
                         l69 1464                           fsr 0004          ___wmul@multiplicand 0022  
   __size_of_setMinutesStart 00A9                 ___ftadd@exp1 004D                 ___ftadd@exp2 004C  
               ___ftadd@sign 004B                          l120 0BE8                          l210 0952  
                        l116 0BC9                          l134 1302                          l136 12FF  
                        l152 149A                          l224 0B4D                          l261 1729  
                        l253 1709                          l270 1735                          l238 0AA4  
                        l263 1727                          l343 0E3C                          l257 1707  
                        l361 0F13                          l196 09FB                          l462 1407  
                        l623 17CE                          l652 0DA0                          l629 17E7  
                        _GIE 005F                          _RB1 0031                          _RC0 0038  
                        _RC1 0039                          _RC2 003A                 __CFG_CPD$OFF 0000  
                        _ISR 14D5                          _SEL 00E1                          _PPM 00DC  
                        _key 006C                          fsr0 0004                          indf 0000  
               ___awmod@sign 0026                 __CFG_FOSC$HS 0000                printToLCD@str 0022  
               __CFG_LVP$OFF 0000                         ?_ISR 0070                 ___ftdiv@cntr 004B  
               ___ftdiv@sign 0050                         l2000 13FF                         l2020 17B3  
                       l2030 17DD                         l2022 17B8                         l2014 17A0  
                       l2104 13D6                         l2018 17A7                         l2050 15BD  
                       l2202 0F88                         l2210 0F9D                         l2122 0E41  
                       l2028 17D3                         l2300 0DC4                         l2052 15CB  
                       l2220 0FA1                         l2140 0EC1                         l2124 0E4E  
                       l3012 040E                         l2310 0DE7                         l2062 15EC  
                       l2150 0EDA                         l2118 0E38                         l2222 0E0A  
                       l3022 0463                         l2080 152F                         l2224 0FF3  
                       l2128 0E62                         l2320 0754                         l2250 0D21  
                       l2058 15E1                         l2074 1513                         l2170 0F32  
                       l2162 0F05                         l2154 0EE0                         l2138 0EA4  
                       l3050 0511                         l2260 0D37                         l2076 1521  
                       l2084 153A                         l2172 0F36                         l2340 07AF  
                       l3052 051C                         l3028 0481                         l2238 13BD  
                       l2254 0D28                         l2182 0F4D                         l2510 0BF2  
                       l2326 076A                         l3038 04C9                         l2280 0D72  
                       l2272 0D51                         l2192 0F69                         l2520 0C16  
                       l2440 1427                         l3080 05CA                         l2290 0D90  
                       l2282 0D77                         l2362 0C3D                         l2194 0F6D  
                       l2506 0BEA                         l2514 0BFA                         l2442 1429  
                       l2450 143E                         l3058 053A                         l2292 0D9C  
                       l2284 0D7B                         l2380 0C92                         l2612 085C  
                       l2444 142E                         l2436 1424                         l2348 07CE  
                       l3068 0582                         l2278 0D66                         l2630 088E  
                       l2710 133D                         l2438 1425                         l2296 0DB2  
                       l2392 0CBA                         l2384 0CA2                         l2368 0C53  
                       l2640 08B6                         l2632 089E                         l2448 1430  
                       l2560 1659                         l2552 1653                         l2642 08B9  
                       l2562 1667                         l2570 1680                         l2810 0B5E  
                       l2802 0B36                         l2396 0CCA                         l2548 164C  
                       l2812 0B6C                         l2646 08C7                         l2638 08AB  
                       l2582 1760                         l2494 0BC4                         l2486 0BB8  
                       l2478 0BAD                         l2654 158F                         l2574 1688  
                       l2566 1675                         l2742 0A0C                         l2734 09E4  
                       l2830 0A6D                         l2728 09C4                         l2744 0A1A  
                       l2586 1787                         l2658 15A3                         l2762 091B  
                       l2932 14C6                         l2684 0716                         l2844 0AB5  
                       l2836 0A8D                         l2870 170B                         l2846 0AC3  
                       l2864 16FB                         l2856 16EB                         l2776 0963  
                       l2768 093B                         l1994 12F1                         l2778 0971  
                       l2884 172B                         l2796 0B16                         l2878 171B  
                       l2994 05E0                         l2986 05D4                         STR_1 1047  
                       STR_2 110A                         STR_3 1111                         STR_4 1056  
                       STR_5 10E8                         STR_6 10FA                         STR_7 1102  
                       STR_8 108A                         STR_9 10D4                         u2215 17AC  
                       u3025 0CA3                         u3105 1452                         u2235 17C7  
                       u3035 0CAB                         u2315 15C0                         u2405 1527  
                       u2165 1408                         u2255 17D6                         u2335 15CC  
                       u2415 1530                         u2175 140F                         u2345 15D8  
                       u3075 0CCB                         u2355 15E2                         u3331 1753  
                       u3332 1754                         u2285 17EE                         u3085 0CD3  
                       u3333 1759                         u3334 175A                         u2535 0F22  
                       u3351 177A                         u3352 177B                         u3184 0BDD  
                       u3425 088F                         u2385 1516                         u3353 1780  
                       u3185 0BDB                         u3265 165C                         u3354 1781  
                       u3515 0701                         u4307 16D5                         u3285 166D  
                       u4317 0AEB                         u2735 0D52                         u3455 08AD  
                       u2495 0EFB                         u4407 15AB                         u3295 1676  
                       u4327 0B66                         u2825 0D91                         u4417 0B92  
                       u2905 077C                         u4337 0A42                         u4257 080E  
                       u4507 1359                         u3395 0863                         u4427 0B9B  
                       u2915 078E                         u3555 097E                         u4347 0ABD  
                       u4267 0836                         _PEIE 005E                         u4517 130E  
                       u2765 0D67                         u4437 0BA5                         u2925 07B0  
                       u3645 08D5                         u4357 0999                         u3565 098B  
                       u4277 1695                         _INTE 005C                         _INTF 0059  
                       u4447 0BAF                         u2935 07C1                         u3655 08E2  
                       u4367 0A14                         u3735 0AD0                         u4287 16A6  
                       u4457 0BBA                         u2945 07CF                         u4377 08F0  
                       u3825 0A27                         u3745 0ADD                         u4297 16B4  
                       u2795 0D7C                         u4467 0BCD                         u4387 096B  
                       u3835 0A34                         u4477 1547                         u4397 145E  
                       u4487 1341                         u2985 0C5F                         u4497 1321  
                       u2995 0C71                 __CFG_WRT$OFF 0000                         _main 03F9  
               ___ftpack@arg 0020                         _mode 00E2                 ___ftpack@exp 0023  
                       btemp 007E            ??_startUpSequence 0026                __CFG_BOREN$ON 0000  
                       ltemp 007E                         start 0012                         ttemp 007E  
                       wtemp 007E        displayPPM@ppmFraction 00B6                 ___ftmul@cntr 003F  
               ___ftmul@sign 0040                        ??_ISR 0077                 ___fttol@exp1 005B  
               ___fttol@lval 0057                        ?_main 0070              __end_of___ftadd 0E01  
                      STR_10 10CA                        STR_11 10DE                        STR_12 10D4  
                      STR_20 10DE                        STR_13 10CA                        STR_21 101C  
                      STR_14 10DE                        STR_30 10F1                        STR_22 1035  
                      STR_15 10D4                        STR_31 109A                        STR_23 10A9  
                      STR_16 10CA                        STR_32 106A                        STR_24 1059  
                      STR_17 10DE                        STR_25 10B5                __CFG_WDTE$OFF 0000  
                      STR_18 10D4                        STR_26 1059                        STR_19 10CA  
                      STR_27 107A                        STR_28 10C0              __end_of___awmod 168F  
                      STR_29 109A              __end_of___ftdiv 07F4              __end_of___ftneg 07FE  
            __end_of___ftmul 0CF8              __end_of___fttol 08D0              __end_of___lwdiv 15F3  
                      i1l305 14FE              __end_of___lwmod 1541                        _PORTB 0006  
                      _PORTC 0007                        _PORTD 0008                        _TRISA 0085  
                      _TRISB 0086                        _TRISC 0087                        _TRISD 0088  
               CalcMQ135@co2 00C1               i1___awmod@sign 0076              __end_of_readADC 1471  
            __end_of_initLCD 16DF                ___awtoft@sign 002D              __end_of_dpowers 101C  
     displayDataDHT11@buffer 004C              __end_of_isdigit 12F3                        _hours 0066  
              ___ftpack@sign 0024                        pclath 000A                        ltemp0 007E  
                      ltemp1 0082                        ltemp2 0086                        ltemp3 0080  
         _activateHumidifier 12F3           __size_of_CalcMQ135 03A7                        ttemp0 007E  
                      ttemp1 0081                        ttemp2 0084                        ttemp3 0087  
                      ttemp4 007F                        status 0003                        wtemp0 007E  
                      wtemp1 0080                        wtemp2 0082                        wtemp3 0084  
                      wtemp4 0086                        wtemp5 0088                        wtemp6 007F  
            __end_of_sprintf 1000           __size_ofi1___awmod 004D        __end_of_setHoursStart 0A22  
      __end_of_setMinutesEnd 0ACB          ?_activateHumidifier 0070              __initialization 0015  
         displayPPM@ppmWhole 00B4                 __end_of_main 0613       __size_of_initRegisters 0009  
                     ??_main 005E                ___fttol@sign1 0056                 ?_setHoursEnd 0070  
       ??_activateHumidifier 0020            ??_setMinutesStart 0048                       _ADCON0 001F  
                     _ADCON1 009F                       _ADRESH 001E                       _ADRESL 009E  
           __end_of___awtoft 13D6             __end_of___ftpack 1800                       i1l2942 15FD  
                     i1l2960 1626                       i1l2954 160A                       i1l2946 1604  
                     i1l2956 1618                       i1l2964 1631                       i1l2968 1639  
                     _INTEDG 040E                       u415_25 160D                       u417_25 161E  
                     u418_25 1627                       u452_27 14F7             __end_of_dataCTRL 132A  
           __end_of_checkSEL 14D5                  instCTRL@CMD 0021               __CFG_PWRTE$OFF 0000  
                     ___ftge 1737                       ___wmul 13FB                    ??___ftadd 0047  
                  ??___awmod 0024                    ??___ftdiv 0047                    ??___ftneg 0031  
                  ??___ftmul 0037                    ??___fttol 0052                    ??___lwdiv 0024  
                  ??___lwmod 002C             __end_of_instCTRL 1317        displayTime@timeFormat 004C  
          ?_displayDataDHT11 0070              ___awmod@divisor 0020              ___awmod@counter 0025  
          __end_of_CalcMQ135 03F9         __size_of_displayTime 0024           ??_displayDataDHT11 0048  
           __end_of_runDHT11 15B3        ___ftmul@f3_as_product 003C                    ??_readADC 0022  
                  ??_initLCD 0022            __end_ofi1___awmod 1640             __end_of_runMQ135 13B1  
                  ??_isdigit 0020                       saved_w 007E             __end_of_runClock 1347  
                  ??_sprintf 0038                _initRegisters 12CB      __end_of__initialization 004E  
                 ___ftadd@f1 0041                   ___ftadd@f2 0044                   ___ftge@ff1 0020  
                 ___ftge@ff2 0023                   ___ftdiv@f1 0044                   ___ftdiv@f2 0041  
                 ___ftdiv@f3 004C                   ___ftneg@f1 002E                   ___awtoft@c 0028  
                 ___ftmul@f1 0031                   ___ftmul@f2 0034                   ___fttol@f1 004E  
             __pcstackCOMMON 0070                 __pidataBANK0 12AE                 __pidataBANK1 07FE  
         __size_of_checkMode 0022           __size_of_checkTime 0058      __size_of_initInterrupts 0008  
           setCursor@address 0025           __size_of_handlePPM 0030          displayPPM@strBuffer 00A0  
            _startUpSequence 0801               ?_initRegisters 0070                 sprintf@width 0044  
         __size_of_initDHT11 0007           __size_of_readDHT11 00B1                   __pbssBANK0 006C  
                 __pbssBANK1 00D7           __size_of_initPorts 000F                   __pmaintext 03F9  
                    ?___ftge 0020                      ?___wmul 0020           __size_of_setCursor 0028  
                 __pintentry 0004                    ?___awtoft 0028                    ?___ftpack 0020  
                  ?_dataCTRL 0070                    ?_checkSEL 0070                      _GO_DONE 00FA  
                 _displayPPM 0613         __size_of_setHoursEnd 00A9            __end_of_checkMode 1369  
          __end_of_checkTime 1737                   __stringtab 1000                    ?_instCTRL 0070  
          __end_of_handlePPM 14A1                    ?_runDHT11 0070                    ?_runMQ135 0070  
             CalcMQ135@ratio 00C4              _savedHoursStart 0069                    ?_runClock 0070  
            __size_of___ftge 005F                      ___ftadd 0CF8                      ___awmod 1640  
                    ___ftdiv 073C                      ___ftneg 07F4              __size_of___wmul 0025  
                    ___ftmul 0C25                      ___fttol 0842                      ___lwdiv 15B3  
                    ___lwmod 150B            __end_of_initDHT11 12BB              _savedMinutesEnd 006A  
            _setMinutesStart 0ACB            __end_of_readDHT11 0C25                   ??___awtoft 002B  
                 ??___ftpack 0025      __end_of_startUpSequence 0842                      __ptext1 0801  
                    __ptext2 168F                      __ptext3 12B4                      __ptext4 0ACB  
                    __ptext5 0A22                      __ptext6 0979                      __ptext7 08D0  
                    __ptext8 1640                      __ptext9 138D                   ??_dataCTRL 0020  
                    _readADC 1448                      _initLCD 168F                 __size_of_ISR 0036  
          __end_of_initPorts 12E3                      _dpowers 1012                   ??_checkSEL 0022  
                    _isdigit 12E3             ___awmod@dividend 0022                      _ppmFlag 00E3  
                    _minutes 006E              ??_initRegisters 0020                readDHT11@bits 0028  
                    _sprintf 0E01                      clrloop0 12C4         end_of_initialization 004E  
          __end_of_setCursor 1448                   ??_instCTRL 0020                   ??_runDHT11 005B  
                 ??_runMQ135 0054                   ??_runClock 0020               _initInterrupts 12BB  
               __pstringtext 1000                   _printToLCD 13D6                    _PORTBbits 0006  
                  _PORTCbits 0007       __size_of_setHoursStart 00A9                    _CalcMQ135 0052  
                  _TRISBbits 0086  __size_of_activateHumidifier 0011                  ?_displayPPM 0070  
     __size_of_setMinutesEnd 00A9                    i1___awmod 15F3    __size_of_displayDataDHT11 0039  
                ___ftdiv@exp 004F                   main@buffer 00C7             displayPPM@bufPtr 00B8  
           CalcMQ135@RAW_ADC 0051      __end_of_setMinutesStart 0B74       __end_of_initInterrupts 12C3  
                ___ftmul@exp 003B                ??_displayTime 0048               __end_of___ftge 1796  
             __end_of___wmul 1420             ?_startUpSequence 0070                   readDHT11@i 002D  
                 readDHT11@j 002E          start_initialization 0015                   ?_CalcMQ135 0051  
                __end_of_ISR 150B                   ?i1___awmod 0070                 _lastKeyState 0067  
              _setHoursStart 0979              ?_initInterrupts 0070                _savedHoursEnd 0068  
              _setMinutesEnd 0A22             CalcMQ135@voltage 00A0                     ??___ftge 0026  
                   ??___wmul 0024          __size_of_displayPPM 0129                  __pdataBANK0 0066  
                __pdataBANK1 00EF           i1___awmod@dividend 0072                  ?_printToLCD 0022  
          __size_of___awtoft 0025            __size_of___ftpack 006A          __end_of_displayTime 138D  
                  ___latbits 0002                __pcstackBANK0 0020                __pcstackBANK1 00A0  
          __size_of_dataCTRL 0013          __end_of__stringdata 1117            __size_of_checkSEL 0034  
            setCursor@column 0022                  sprintf@ccnt 003D                  sprintf@_val 003F  
          _savedMinutesStart 006B                  sprintf@flag 0043                  sprintf@prec 003C  
                  _checkMode 1347                    _checkTime 16DF               ?_setHoursStart 0070  
                  _debugInfo 00E4            __size_of_instCTRL 0013             ___lwdiv@dividend 0022  
             ?_setMinutesEnd 0070             ?_setMinutesStart 0070                    _handlePPM 1471  
          __size_of_runDHT11 0039            __size_of_runMQ135 0024                     ?___ftadd 0041  
                   ?___awmod 0020                     ?___ftdiv 0041                     ?___ftneg 002E  
                   ?___ftmul 0031                     ?___fttol 004E                     ?___lwdiv 0020  
                   ?___lwmod 0028            __size_of_runClock 001D                     ?_readADC 0020  
                   ?_initLCD 0070                    _initDHT11 12B4                    _readDHT11 0B74  
                   ?_isdigit 0070                ??_setHoursEnd 0048                  ??_CalcMQ135 0054  
                ??i1___awmod 0074                    _initPorts 12D4             ___lwdiv@quotient 0025  
               setCursor@row 0024                     ?_sprintf 002E             _displayDataDHT11 1541  
       readDHT11@temperature 0027            interrupt_function 0004               ___wmul@product 0024  
                 ?_checkMode 0070                   ?_checkTime 0070          __size_of_printToLCD 0025  
                  _setCursor 1420                    clear_ram0 12C3                  dataCTRL@DAT 0021  
                 ?_handlePPM 0070                  _displayTime 1369                  __stringbase 1012  
                __stringdata 101C            ___wmul@multiplier 0020                   ?_initDHT11 0070  
                 ?_readDHT11 0020                 ??_displayPPM 005C                   ?_initPorts 0070  
      __end_of_initRegisters 12D4          __end_of_setHoursEnd 0979              ??_setHoursStart 0048  
                 ?_setCursor 0022              ??_setMinutesEnd 0048              CalcMQ135@ratio2 00B5  
            CalcMQ135@ratio3 00B8              CalcMQ135@ratio4 00BB              CalcMQ135@ratio5 00BE  
            CalcMQ135@ratio6 00A3            i1___awmod@divisor 0070            i1___awmod@counter 0075  
         __end_of_displayPPM 073C             __size_of___ftadd 0109             __size_of___awmod 004F  
           __size_of___ftdiv 00B8             __size_of___ftneg 000A             __size_of___ftmul 00D3  
           __size_of___fttol 008E             __size_of___lwdiv 0040             __size_of___lwmod 0036  
             readADC@channel 0024                     ___awtoft 13B1                     ___ftpack 1796  
         __end_of__stringtab 1012                  _isdigit$527 0020                     _dataCTRL 1317  
 __end_of_activateHumidifier 1304                     _checkSEL 14A1             __size_of_readADC 0029  
           __size_of_initLCD 0050             __size_of_isdigit 0010              ___lwdiv@divisor 0020  
            ___lwdiv@counter 0027                     __ptext10 1448                     __ptext11 0052  
                   __ptext20 12BB                     __ptext12 073C                     __ptext21 1471  
                   __ptext13 157A                     __ptext30 13D6                     __ptext22 1737  
                   __ptext14 1420                     __ptext31 1317                     __ptext23 1369  
                   __ptext15 0B74                     __ptext40 1347                     __ptext32 0842  
                   __ptext24 0613                     __ptext16 1541                     __ptext41 1304  
                   __ptext33 07F4                     __ptext25 0E01                     __ptext17 132A  
                   __ptext42 12F3                     __ptext34 0C25                     __ptext26 12E3  
                   __ptext18 12CB                     __ptext43 14D5                     __ptext35 0CF8  
                   __ptext27 13FB                     __ptext19 12D4                     __ptext44 15F3  
                   __ptext36 13B1                     __ptext28 150B                     __ptext37 1796  
                   __ptext29 15B3                     __ptext38 16DF                     __ptext39 14A1  
             readDHT11@F1225 00D7             __size_of_sprintf 01FF                     _keyValid 006D  
                   _lastMode 00EF             ??_initInterrupts 0020                     _instCTRL 1304  
              __size_of_main 021A                  ??_checkMode 0022                  ??_checkTime 0020  
                   _humidity 00EE                     _runDHT11 157A                     _runMQ135 138D  
                ??_handlePPM 002C                     _runClock 132A         checkSEL@lastRB1State 00DF  
               ??_printToLCD 0024                  ??_initDHT11 0020                  ??_readDHT11 0021  
                _setHoursEnd 08D0                     isdigit@c 0021                  ??_initPorts 0020  
   __size_of_startUpSequence 0041                     intlevel1 0000                    sprintf@ap 003B  
                  sprintf@sp 0047             ___lwmod@dividend 002A                  ??_setCursor 0023  
         __end_of_printToLCD 13FB                    stringcode 100A     __end_of_displayDataDHT11 157A  
          readDHT11@humidity 0020                _CalcMQ135$773 00A6                _CalcMQ135$774 00A9  
              _CalcMQ135$775 00AC                _CalcMQ135$776 00AF                _CalcMQ135$777 00B2  
                _temperature 006F                     sprintf@c 0046                     sprintf@f 002E  
            ___lwmod@divisor 0028              ___lwmod@counter 002D                     stringtab 1000  
    checkSEL@currentRB1State 0024  
