

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed May 15 21:47:34 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,inline,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0094                     	;# 
    93  0098                     	;# 
    94  0099                     	;# 
    95  009C                     	;# 
    96  009D                     	;# 
    97  009E                     	;# 
    98  009F                     	;# 
    99  010C                     	;# 
   100  010D                     	;# 
   101  010E                     	;# 
   102  010F                     	;# 
   103  018C                     	;# 
   104  018D                     	;# 
   105                           
   106                           	psect	idataBANK0
   107  0985                     __pidataBANK0:	
   108                           
   109                           ;initializer for _hours
   110  0985  3404               	retlw	4
   111                           
   112                           ;initializer for _lastKeyState
   113  0986  34FF               	retlw	255
   114                           
   115                           ;initializer for _savedHoursEnd
   116  0987  340A               	retlw	10
   117                           
   118                           ;initializer for _savedHoursStart
   119  0988  3409               	retlw	9
   120                           
   121                           ;initializer for _savedMinutesEnd
   122  0989  341E               	retlw	30
   123                           
   124                           ;initializer for _savedMinutesStart
   125  098A  341E               	retlw	30
   126                           
   127                           	psect	strings
   128  0800                     __pstrings:	
   129  0800                     stringtab:	
   130  0800                     __stringtab:	
   131                           
   132                           ;	String table - string pointers are 1 byte each
   133  0800  1BFF               	btfsc	btemp+1,7
   134  0801  280A               	ljmp	stringcode
   135  0802  1383               	bcf	3,7
   136  0803  187F               	btfsc	btemp+1,0
   137  0804  1783               	bsf	3,7
   138  0805  0800               	movf	0,w
   139  0806  0A84               	incf	4,f
   140  0807  1903               	skipnz
   141  0808  0AFF               	incf	btemp+1,f
   142  0809  0008               	return
   143  080A                     stringcode:	
   144  080A                     stringdir:	
   145  080A  3008               	movlw	high stringdir
   146  080B  008A               	movwf	10
   147  080C  0804               	movf	4,w
   148  080D  0A84               	incf	4,f
   149  080E  0782               	addwf	2,f
   150  080F                     __stringbase:	
   151  080F  3400               	retlw	0
   152  0810                     __end_of__stringtab:	
   153  0810                     _dpowers:	
   154  0810  3401               	retlw	1
   155  0811  3400               	retlw	0
   156  0812  340A               	retlw	10
   157  0813  3400               	retlw	0
   158  0814  3464               	retlw	100
   159  0815  3400               	retlw	0
   160  0816  34E8               	retlw	232
   161  0817  3403               	retlw	3
   162  0818  3410               	retlw	16
   163  0819  3427               	retlw	39
   164  081A                     __end_of_dpowers:	
   165  001F                     _ADCON0	set	31
   166  001E                     _ADRESH	set	30
   167  0006                     _PORTB	set	6
   168  0006                     _PORTBbits	set	6
   169  0007                     _PORTC	set	7
   170  0008                     _PORTD	set	8
   171  005F                     _GIE	set	95
   172  00FA                     _GO_DONE	set	250
   173  005C                     _INTE	set	92
   174  0059                     _INTF	set	89
   175  005E                     _PEIE	set	94
   176  0038                     _RC0	set	56
   177  0039                     _RC1	set	57
   178  003A                     _RC2	set	58
   179  003B                     _RC3	set	59
   180  003C                     _RC4	set	60
   181  009F                     _ADCON1	set	159
   182  009E                     _ADRESL	set	158
   183  0085                     _TRISA	set	133
   184  0086                     _TRISB	set	134
   185  0086                     _TRISBbits	set	134
   186  0087                     _TRISC	set	135
   187  0088                     _TRISD	set	136
   188  040E                     _INTEDG	set	1038
   189  081A                     __stringdata:	
   190  081A                     STR_2:	
   191  081A  3445               	retlw	69	;'E'
   192  081B  3472               	retlw	114	;'r'
   193  081C  3472               	retlw	114	;'r'
   194  081D  346F               	retlw	111	;'o'
   195  081E  3472               	retlw	114	;'r'
   196  081F  3420               	retlw	32	;' '
   197  0820  3472               	retlw	114	;'r'
   198  0821  3465               	retlw	101	;'e'
   199  0822  3461               	retlw	97	;'a'
   200  0823  3464               	retlw	100	;'d'
   201  0824  3469               	retlw	105	;'i'
   202  0825  346E               	retlw	110	;'n'
   203  0826  3467               	retlw	103	;'g'
   204  0827  3420               	retlw	32	;' '
   205  0828  3444               	retlw	68	;'D'
   206  0829  3448               	retlw	72	;'H'
   207  082A  3454               	retlw	84	;'T'
   208  082B  3431               	retlw	49	;'1'
   209  082C  3431               	retlw	49	;'1'
   210  082D  3400               	retlw	0
   211  082E                     STR_1:	
   212  082E  3454               	retlw	84	;'T'
   213  082F  344D               	retlw	77	;'M'
   214  0830  3450               	retlw	80	;'P'
   215  0831  343A               	retlw	58	;':'
   216  0832  3420               	retlw	32	;' '
   217  0833  3425               	retlw	37	;'%'
   218  0834  3464               	retlw	100	;'d'
   219  0835  3443               	retlw	67	;'C'
   220  0836  3420               	retlw	32	;' '
   221  0837  3448               	retlw	72	;'H'
   222  0838  344D               	retlw	77	;'M'
   223  0839  3444               	retlw	68	;'D'
   224  083A  343A               	retlw	58	;':'
   225  083B  3420               	retlw	32	;' '
   226  083C  3425               	retlw	37	;'%'
   227  083D  3464               	retlw	100	;'d'
   228  083E  3400               	retlw	0
   229  083F                     STR_21:	
   230  083F  3449               	retlw	73	;'I'
   231  0840  346E               	retlw	110	;'n'
   232  0841  3469               	retlw	105	;'i'
   233  0842  3474               	retlw	116	;'t'
   234  0843  3469               	retlw	105	;'i'
   235  0844  3461               	retlw	97	;'a'
   236  0845  346C               	retlw	108	;'l'
   237  0846  3469               	retlw	105	;'i'
   238  0847  347A               	retlw	122	;'z'
   239  0848  3469               	retlw	105	;'i'
   240  0849  346E               	retlw	110	;'n'
   241  084A  3467               	retlw	103	;'g'
   242  084B  342E               	retlw	46	;'.'
   243  084C  342E               	retlw	46	;'.'
   244  084D  342E               	retlw	46	;'.'
   245  084E  3400               	retlw	0
   246  084F                     STR_8:	
   247  084F  3454               	retlw	84	;'T'
   248  0850  3469               	retlw	105	;'i'
   249  0851  346D               	retlw	109	;'m'
   250  0852  3465               	retlw	101	;'e'
   251  0853  343A               	retlw	58	;':'
   252  0854  3420               	retlw	32	;' '
   253  0855  3425               	retlw	37	;'%'
   254  0856  3430               	retlw	48	;'0'
   255  0857  3432               	retlw	50	;'2'
   256  0858  3464               	retlw	100	;'d'
   257  0859  343A               	retlw	58	;':'
   258  085A  3425               	retlw	37	;'%'
   259  085B  3430               	retlw	48	;'0'
   260  085C  3432               	retlw	50	;'2'
   261  085D  3464               	retlw	100	;'d'
   262  085E  3400               	retlw	0
   263  085F                     STR_10:	
   264  085F  3444               	retlw	68	;'D'
   265  0860  3445               	retlw	69	;'E'
   266  0861  3443               	retlw	67	;'C'
   267  0862  343A               	retlw	58	;':'
   268  0863  3420               	retlw	32	;' '
   269  0864  3425               	retlw	37	;'%'
   270  0865  3430               	retlw	48	;'0'
   271  0866  3432               	retlw	50	;'2'
   272  0867  3464               	retlw	100	;'d'
   273  0868  3400               	retlw	0
   274  0869                     STR_9:	
   275  0869  3449               	retlw	73	;'I'
   276  086A  344E               	retlw	78	;'N'
   277  086B  3443               	retlw	67	;'C'
   278  086C  343A               	retlw	58	;':'
   279  086D  3420               	retlw	32	;' '
   280  086E  3425               	retlw	37	;'%'
   281  086F  3430               	retlw	48	;'0'
   282  0870  3432               	retlw	50	;'2'
   283  0871  3464               	retlw	100	;'d'
   284  0872  3400               	retlw	0
   285  0873                     STR_11:	
   286  0873  3453               	retlw	83	;'S'
   287  0874  3445               	retlw	69	;'E'
   288  0875  3454               	retlw	84	;'T'
   289  0876  343A               	retlw	58	;':'
   290  0877  3420               	retlw	32	;' '
   291  0878  3425               	retlw	37	;'%'
   292  0879  3430               	retlw	48	;'0'
   293  087A  3432               	retlw	50	;'2'
   294  087B  3464               	retlw	100	;'d'
   295  087C  3400               	retlw	0
   296  087D                     STR_5:	
   297  087D  3425               	retlw	37	;'%'
   298  087E  3464               	retlw	100	;'d'
   299  087F  3420               	retlw	32	;' '
   300  0880  3470               	retlw	112	;'p'
   301  0881  3470               	retlw	112	;'p'
   302  0882  346D               	retlw	109	;'m'
   303  0883  3420               	retlw	32	;' '
   304  0884  3420               	retlw	32	;' '
   305  0885  3400               	retlw	0
   306  0886                     STR_6:	
   307  0886  3450               	retlw	80	;'P'
   308  0887  3455               	retlw	85	;'U'
   309  0888  3452               	retlw	82	;'R'
   310  0889  3446               	retlw	70	;'F'
   311  088A  3420               	retlw	32	;' '
   312  088B  3448               	retlw	72	;'H'
   313  088C  3449               	retlw	73	;'I'
   314  088D  3400               	retlw	0
   315  088E                     STR_7:	
   316  088E  3450               	retlw	80	;'P'
   317  088F  3455               	retlw	85	;'U'
   318  0890  3452               	retlw	82	;'R'
   319  0891  3446               	retlw	70	;'F'
   320  0892  3420               	retlw	32	;' '
   321  0893  344C               	retlw	76	;'L'
   322  0894  344F               	retlw	79	;'O'
   323  0895  3400               	retlw	0
   324  0896                     STR_3:	
   325  0896  3443               	retlw	67	;'C'
   326  0897  344F               	retlw	79	;'O'
   327  0898  3432               	retlw	50	;'2'
   328  0899  343A               	retlw	58	;':'
   329  089A  3420               	retlw	32	;' '
   330  089B  3400               	retlw	0
   331  089C                     __end_of__stringdata:	
   332                           
   333                           ; #config settings
   334  0000                     
   335                           	psect	cinit
   336  0015                     start_initialization:	
   337  0015                     __initialization:	
   338                           
   339                           ; Clear objects allocated to COMMON
   340  0015  01F7               	clrf	__pbssCOMMON& (0+127)
   341  0016  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   342                           
   343                           ; Clear objects allocated to BANK0
   344  0017  1383               	bcf	3,7	;select IRP bank0
   345  0018  305E               	movlw	low __pbssBANK0
   346  0019  0084               	movwf	4
   347  001A  3068               	movlw	low (__pbssBANK0+10)
   348  001B  120A  158A  2192  120A  118A  	fcall	clear_ram0
   349                           
   350                           ; Clear objects allocated to BANK1
   351  0020  30CB               	movlw	low __pbssBANK1
   352  0021  0084               	movwf	4
   353  0022  30D8               	movlw	low (__pbssBANK1+13)
   354  0023  120A  158A  2192  120A  118A  	fcall	clear_ram0
   355                           
   356                           ; Initialize objects allocated to BANK0
   357  0028  120A  158A  2185  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   358  002D  00E8               	movwf	__pdataBANK0& (0+127)
   359  002E  120A  158A  2186  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   360  0033  00E9               	movwf	(__pdataBANK0+1)& (0+127)
   361  0034  120A  158A  2187  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   362  0039  00EA               	movwf	(__pdataBANK0+2)& (0+127)
   363  003A  120A  158A  2188  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   364  003F  00EB               	movwf	(__pdataBANK0+3)& (0+127)
   365  0040  120A  158A  2189  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   366  0045  00EC               	movwf	(__pdataBANK0+4)& (0+127)
   367  0046  120A  158A  218A   	fcall	__pidataBANK0+5	;fetch initializer
   368  0049  00ED               	movwf	(__pdataBANK0+5)& (0+127)
   369  004A                     end_of_initialization:	
   370                           ;End of C runtime variable initialization code
   371                           
   372  004A                     __end_of__initialization:	
   373  004A  0183               	clrf	3
   374  004B  120A  118A  2F01   	ljmp	_main	;jump to C main() function
   375                           
   376                           	psect	bssCOMMON
   377  0077                     __pbssCOMMON:	
   378  0077                     _mode:	
   379  0077                     	ds	1
   380  0078                     _ppmFlag:	
   381  0078                     	ds	1
   382                           
   383                           	psect	bssBANK0
   384  005E                     __pbssBANK0:	
   385  005E                     readDHT11@F1215:	
   386  005E                     	ds	5
   387  0063                     _key:	
   388  0063                     	ds	1
   389  0064                     _keyValid:	
   390  0064                     	ds	1
   391  0065                     _minutes:	
   392  0065                     	ds	1
   393  0066                     _humidity:	
   394  0066                     	ds	1
   395  0067                     _temperature:	
   396  0067                     	ds	1
   397                           
   398                           	psect	dataBANK0
   399  0068                     __pdataBANK0:	
   400  0068                     _hours:	
   401  0068                     	ds	1
   402  0069                     _lastKeyState:	
   403  0069                     	ds	1
   404  006A                     _savedHoursEnd:	
   405  006A                     	ds	1
   406  006B                     _savedHoursStart:	
   407  006B                     	ds	1
   408  006C                     _savedMinutesEnd:	
   409  006C                     	ds	1
   410  006D                     _savedMinutesStart:	
   411  006D                     	ds	1
   412                           
   413                           	psect	bssBANK1
   414  00CB                     __pbssBANK1:	
   415  00CB                     _PPM:	
   416  00CB                     	ds	3
   417  00CE                     _debugInfo:	
   418  00CE                     	ds	10
   419                           
   420                           	psect	clrtext
   421  0992                     clear_ram0:	
   422                           ;	Called with FSR containing the base address, and
   423                           ;	W with the last address+1
   424                           
   425  0992  0064               	clrwdt	;clear the watchdog before getting into this loop
   426  0993                     clrloop0:	
   427  0993  0180               	clrf	0	;clear RAM location pointed to by FSR
   428  0994  0A84               	incf	4,f	;increment pointer
   429  0995  0604               	xorwf	4,w	;XOR with final address
   430  0996  1903               	btfsc	3,2	;have we reached the end yet?
   431  0997  3400               	retlw	0	;all done for this memory range, return
   432  0998  0604               	xorwf	4,w	;XOR again to restore value
   433  0999  2993               	goto	clrloop0	;do the next byte
   434                           
   435                           	psect	cstackBANK1
   436  00A0                     __pcstackBANK1:	
   437  00A0                     CalcMQ135@voltage:	
   438  00A0                     displayPPM@strBuffer:	
   439                           ; 3 bytes @ 0x0
   440                           
   441                           
   442                           ; 20 bytes @ 0x0
   443  00A0                     	ds	3
   444  00A3                     CalcMQ135@ratio6:	
   445                           
   446                           ; 3 bytes @ 0x3
   447  00A3                     	ds	3
   448  00A6                     _CalcMQ135$687:	
   449                           
   450                           ; 3 bytes @ 0x6
   451  00A6                     	ds	3
   452  00A9                     _CalcMQ135$688:	
   453                           
   454                           ; 3 bytes @ 0x9
   455  00A9                     	ds	3
   456  00AC                     _CalcMQ135$689:	
   457                           
   458                           ; 3 bytes @ 0xC
   459  00AC                     	ds	3
   460  00AF                     _CalcMQ135$690:	
   461                           
   462                           ; 3 bytes @ 0xF
   463  00AF                     	ds	3
   464  00B2                     _CalcMQ135$691:	
   465                           
   466                           ; 3 bytes @ 0x12
   467  00B2                     	ds	2
   468  00B4                     displayPPM@ppmWhole:	
   469                           
   470                           ; 2 bytes @ 0x14
   471  00B4                     	ds	1
   472  00B5                     CalcMQ135@ratio2:	
   473                           
   474                           ; 3 bytes @ 0x15
   475  00B5                     	ds	1
   476  00B6                     displayPPM@ppmFraction:	
   477                           
   478                           ; 2 bytes @ 0x16
   479  00B6                     	ds	2
   480  00B8                     displayPPM@bufPtr:	
   481  00B8                     CalcMQ135@ratio3:	
   482                           ; 1 bytes @ 0x18
   483                           
   484                           
   485                           ; 3 bytes @ 0x18
   486  00B8                     	ds	3
   487  00BB                     CalcMQ135@ratio4:	
   488                           
   489                           ; 3 bytes @ 0x1B
   490  00BB                     	ds	3
   491  00BE                     CalcMQ135@ratio5:	
   492                           
   493                           ; 3 bytes @ 0x1E
   494  00BE                     	ds	3
   495  00C1                     CalcMQ135@co2:	
   496                           
   497                           ; 3 bytes @ 0x21
   498  00C1                     	ds	3
   499  00C4                     CalcMQ135@ratio:	
   500                           
   501                           ; 3 bytes @ 0x24
   502  00C4                     	ds	3
   503  00C7                     ??_main:	
   504                           
   505                           ; 0 bytes @ 0x27
   506  00C7                     	ds	4
   507                           
   508                           	psect	cstackCOMMON
   509  0070                     __pcstackCOMMON:	
   510  0070                     ?_isdigit:	
   511  0070                     ?_instCTRL:	
   512                           ; 1 bit 
   513                           
   514  0070                     ?_dataCTRL:	
   515                           ; 0 bytes @ 0x0
   516                           
   517  0070                     ?_initLCD:	
   518                           ; 0 bytes @ 0x0
   519                           
   520  0070                     ?_initDHT11:	
   521                           ; 0 bytes @ 0x0
   522                           
   523  0070                     ?_runDHT11:	
   524                           ; 0 bytes @ 0x0
   525                           
   526  0070                     ?_runMQ135:	
   527                           ; 0 bytes @ 0x0
   528                           
   529  0070                     ?_displayPPM:	
   530                           ; 0 bytes @ 0x0
   531                           
   532  0070                     ?_runClock:	
   533                           ; 0 bytes @ 0x0
   534                           
   535  0070                     ?_displayTime:	
   536                           ; 0 bytes @ 0x0
   537                           
   538  0070                     ?_main:	
   539                           ; 0 bytes @ 0x0
   540                           
   541  0070                     ?_ISR:	
   542                           ; 0 bytes @ 0x0
   543                           
   544  0070                     ??_ISR:	
   545                           ; 0 bytes @ 0x0
   546                           
   547                           
   548                           ; 0 bytes @ 0x0
   549  0070                     	ds	5
   550  0075                     ??_isdigit:	
   551  0075                     ??_instCTRL:	
   552                           ; 0 bytes @ 0x5
   553                           
   554  0075                     ??_dataCTRL:	
   555                           ; 0 bytes @ 0x5
   556                           
   557  0075                     ??_initDHT11:	
   558                           ; 0 bytes @ 0x5
   559                           
   560  0075                     ??_runClock:	
   561                           ; 0 bytes @ 0x5
   562                           
   563  0075                     ??___wmul:	
   564                           ; 0 bytes @ 0x5
   565                           
   566  0075                     ??___awtoft:	
   567                           ; 0 bytes @ 0x5
   568                           
   569  0075                     ??___lwdiv:	
   570                           ; 0 bytes @ 0x5
   571                           
   572  0075                     ?_readDHT11:	
   573                           ; 0 bytes @ 0x5
   574                           
   575  0075                     ?_readADC:	
   576                           ; 1 bytes @ 0x5
   577                           
   578  0075                     readDHT11@humidity:	
   579                           ; 2 bytes @ 0x5
   580                           
   581  0075                     _isdigit$439:	
   582                           ; 1 bytes @ 0x5
   583                           
   584  0075                     ___wmul@product:	
   585                           ; 1 bytes @ 0x5
   586                           
   587                           
   588                           ; 2 bytes @ 0x5
   589  0075                     	ds	1
   590  0076                     ??___lwmod:	
   591  0076                     instCTRL@CMD:	
   592                           ; 0 bytes @ 0x6
   593                           
   594  0076                     dataCTRL@DAT:	
   595                           ; 1 bytes @ 0x6
   596                           
   597  0076                     isdigit@c:	
   598                           ; 1 bytes @ 0x6
   599                           
   600                           
   601                           ; 1 bytes @ 0x6
   602  0076                     	ds	1
   603  0077                     ??_CalcMQ135:	
   604  0077                     ??_printToLCD:	
   605                           ; 0 bytes @ 0x7
   606                           
   607  0077                     ??_runMQ135:	
   608                           ; 0 bytes @ 0x7
   609                           
   610  0077                     ??___ftneg:	
   611                           ; 0 bytes @ 0x7
   612                           
   613                           
   614                           	psect	cstackBANK0
   615  0020                     __pcstackBANK0:	
   616                           ; 0 bytes @ 0x7
   617                           
   618  0020                     ??_readADC:	
   619  0020                     ??_initLCD:	
   620                           ; 0 bytes @ 0x0
   621                           
   622  0020                     ?_printToLCD:	
   623                           ; 0 bytes @ 0x0
   624                           
   625  0020                     ??_readDHT11:	
   626                           ; 0 bytes @ 0x0
   627                           
   628  0020                     ?___wmul:	
   629                           ; 0 bytes @ 0x0
   630                           
   631  0020                     ?___lwdiv:	
   632                           ; 2 bytes @ 0x0
   633                           
   634  0020                     ?___ftpack:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0020                     printToLCD@str:	
   638                           ; 3 bytes @ 0x0
   639                           
   640  0020                     ___wmul@multiplier:	
   641                           ; 2 bytes @ 0x0
   642                           
   643  0020                     ___lwdiv@divisor:	
   644                           ; 2 bytes @ 0x0
   645                           
   646  0020                     ___ftpack@arg:	
   647                           ; 2 bytes @ 0x0
   648                           
   649                           
   650                           ; 3 bytes @ 0x0
   651  0020                     	ds	2
   652  0022                     readADC@channel:	
   653  0022                     ___wmul@multiplicand:	
   654                           ; 1 bytes @ 0x2
   655                           
   656  0022                     ___lwdiv@dividend:	
   657                           ; 2 bytes @ 0x2
   658                           
   659                           
   660                           ; 2 bytes @ 0x2
   661  0022                     	ds	1
   662  0023                     ___ftpack@exp:	
   663                           
   664                           ; 1 bytes @ 0x3
   665  0023                     	ds	1
   666  0024                     ___ftpack@sign:	
   667  0024                     ___lwdiv@counter:	
   668                           ; 1 bytes @ 0x4
   669                           
   670                           
   671                           ; 1 bytes @ 0x4
   672  0024                     	ds	1
   673  0025                     ??___ftpack:	
   674  0025                     ___lwdiv@quotient:	
   675                           ; 0 bytes @ 0x5
   676                           
   677                           
   678                           ; 2 bytes @ 0x5
   679  0025                     	ds	1
   680  0026                     readDHT11@temperature:	
   681                           
   682                           ; 1 bytes @ 0x6
   683  0026                     	ds	1
   684  0027                     ?___lwmod:	
   685  0027                     ___lwmod@divisor:	
   686                           ; 2 bytes @ 0x7
   687                           
   688  0027                     readDHT11@bits:	
   689                           ; 2 bytes @ 0x7
   690                           
   691                           
   692                           ; 5 bytes @ 0x7
   693  0027                     	ds	1
   694  0028                     ?___awtoft:	
   695  0028                     ___awtoft@c:	
   696                           ; 3 bytes @ 0x8
   697                           
   698                           
   699                           ; 2 bytes @ 0x8
   700  0028                     	ds	1
   701  0029                     ___lwmod@dividend:	
   702                           
   703                           ; 2 bytes @ 0x9
   704  0029                     	ds	2
   705  002B                     ___awtoft@sign:	
   706  002B                     ___lwmod@counter:	
   707                           ; 1 bytes @ 0xB
   708                           
   709                           
   710                           ; 1 bytes @ 0xB
   711  002B                     	ds	1
   712  002C                     ?_sprintf:	
   713  002C                     ?___ftneg:	
   714                           ; 2 bytes @ 0xC
   715                           
   716  002C                     readDHT11@i:	
   717                           ; 3 bytes @ 0xC
   718                           
   719  002C                     sprintf@f:	
   720                           ; 1 bytes @ 0xC
   721                           
   722  002C                     ___ftneg@f1:	
   723                           ; 1 bytes @ 0xC
   724                           
   725                           
   726                           ; 3 bytes @ 0xC
   727  002C                     	ds	1
   728  002D                     readDHT11@j:	
   729                           
   730                           ; 1 bytes @ 0xD
   731  002D                     	ds	1
   732  002E                     ??_runDHT11:	
   733                           
   734                           ; 0 bytes @ 0xE
   735  002E                     	ds	1
   736  002F                     ?___ftmul:	
   737  002F                     ___ftmul@f1:	
   738                           ; 3 bytes @ 0xF
   739                           
   740                           
   741                           ; 3 bytes @ 0xF
   742  002F                     	ds	2
   743  0031                     ??_sprintf:	
   744                           
   745                           ; 0 bytes @ 0x11
   746  0031                     	ds	1
   747  0032                     ___ftmul@f2:	
   748                           
   749                           ; 3 bytes @ 0x12
   750  0032                     	ds	2
   751  0034                     sprintf@ap:	
   752                           
   753                           ; 1 bytes @ 0x14
   754  0034                     	ds	1
   755  0035                     ??___ftmul:	
   756  0035                     sprintf@prec:	
   757                           ; 0 bytes @ 0x15
   758                           
   759                           
   760                           ; 1 bytes @ 0x15
   761  0035                     	ds	1
   762  0036                     sprintf@ccnt:	
   763                           
   764                           ; 2 bytes @ 0x16
   765  0036                     	ds	2
   766  0038                     sprintf@_val:	
   767                           
   768                           ; 4 bytes @ 0x18
   769  0038                     	ds	1
   770  0039                     ___ftmul@exp:	
   771                           
   772                           ; 1 bytes @ 0x19
   773  0039                     	ds	1
   774  003A                     ___ftmul@f3_as_product:	
   775                           
   776                           ; 3 bytes @ 0x1A
   777  003A                     	ds	2
   778  003C                     sprintf@flag:	
   779                           
   780                           ; 1 bytes @ 0x1C
   781  003C                     	ds	1
   782  003D                     ___ftmul@cntr:	
   783  003D                     sprintf@width:	
   784                           ; 1 bytes @ 0x1D
   785                           
   786                           
   787                           ; 2 bytes @ 0x1D
   788  003D                     	ds	1
   789  003E                     ___ftmul@sign:	
   790                           
   791                           ; 1 bytes @ 0x1E
   792  003E                     	ds	1
   793  003F                     ?___ftadd:	
   794  003F                     ?___ftdiv:	
   795                           ; 3 bytes @ 0x1F
   796                           
   797  003F                     sprintf@c:	
   798                           ; 3 bytes @ 0x1F
   799                           
   800  003F                     ___ftadd@f1:	
   801                           ; 1 bytes @ 0x1F
   802                           
   803  003F                     ___ftdiv@f2:	
   804                           ; 3 bytes @ 0x1F
   805                           
   806                           
   807                           ; 3 bytes @ 0x1F
   808  003F                     	ds	1
   809  0040                     sprintf@sp:	
   810                           
   811                           ; 1 bytes @ 0x20
   812  0040                     	ds	1
   813  0041                     ?_displayDataDHT11:	
   814  0041                     ??_displayTime:	
   815                           ; 0 bytes @ 0x21
   816                           
   817                           
   818                           ; 0 bytes @ 0x21
   819  0041                     	ds	1
   820  0042                     ___ftadd@f2:	
   821  0042                     ___ftdiv@f1:	
   822                           ; 3 bytes @ 0x22
   823                           
   824                           
   825                           ; 3 bytes @ 0x22
   826  0042                     	ds	3
   827  0045                     ??_displayDataDHT11:	
   828  0045                     ??___ftadd:	
   829                           ; 0 bytes @ 0x25
   830                           
   831  0045                     ??___ftdiv:	
   832                           ; 0 bytes @ 0x25
   833                           
   834                           
   835                           ; 0 bytes @ 0x25
   836  0045                     	ds	1
   837  0046                     displayTime@timeFormat:	
   838                           
   839                           ; 16 bytes @ 0x26
   840  0046                     	ds	3
   841  0049                     ___ftadd@sign:	
   842  0049                     ___ftdiv@cntr:	
   843                           ; 1 bytes @ 0x29
   844                           
   845                           
   846                           ; 1 bytes @ 0x29
   847  0049                     	ds	1
   848  004A                     ___ftadd@exp2:	
   849  004A                     ___ftdiv@f3:	
   850                           ; 1 bytes @ 0x2A
   851                           
   852  004A                     displayDataDHT11@buffer:	
   853                           ; 3 bytes @ 0x2A
   854                           
   855                           
   856                           ; 20 bytes @ 0x2A
   857  004A                     	ds	1
   858  004B                     ___ftadd@exp1:	
   859                           
   860                           ; 1 bytes @ 0x2B
   861  004B                     	ds	1
   862  004C                     ?___fttol:	
   863  004C                     ___fttol@f1:	
   864                           ; 4 bytes @ 0x2C
   865                           
   866                           
   867                           ; 3 bytes @ 0x2C
   868  004C                     	ds	1
   869  004D                     ___ftdiv@exp:	
   870                           
   871                           ; 1 bytes @ 0x2D
   872  004D                     	ds	1
   873  004E                     ___ftdiv@sign:	
   874                           
   875                           ; 1 bytes @ 0x2E
   876  004E                     	ds	1
   877  004F                     ?_CalcMQ135:	
   878  004F                     CalcMQ135@RAW_ADC:	
   879                           ; 3 bytes @ 0x2F
   880                           
   881                           
   882                           ; 2 bytes @ 0x2F
   883  004F                     	ds	1
   884  0050                     ??___fttol:	
   885                           
   886                           ; 0 bytes @ 0x30
   887  0050                     	ds	4
   888  0054                     ___fttol@sign1:	
   889                           
   890                           ; 1 bytes @ 0x34
   891  0054                     	ds	1
   892  0055                     ___fttol@lval:	
   893                           
   894                           ; 4 bytes @ 0x35
   895  0055                     	ds	4
   896  0059                     ___fttol@exp1:	
   897                           
   898                           ; 1 bytes @ 0x39
   899  0059                     	ds	1
   900  005A                     ??_displayPPM:	
   901                           
   902                           ; 0 bytes @ 0x3A
   903  005A                     	ds	4
   904                           
   905                           	psect	maintext
   906  0701                     __pmaintext:	
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 18 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;		None               void
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 17F/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0
   928 ;;      Temps:          0       0       4       0       0
   929 ;;      Totals:         0       0       4       0       0
   930 ;;Total ram usage:        4 bytes
   931 ;; Hardware stack levels required when called:    5
   932 ;; This function calls:
   933 ;;		_displayDataDHT11
   934 ;;		_displayPPM
   935 ;;		_displayTime
   936 ;;		_initDHT11
   937 ;;		_initLCD
   938 ;;		_instCTRL
   939 ;;		_printToLCD
   940 ;;		_runClock
   941 ;;		_runDHT11
   942 ;;		_runMQ135
   943 ;; This function is called by:
   944 ;;		Startup code after reset
   945 ;; This function uses a non-reentrant model
   946 ;;
   947                           
   948                           
   949                           ;psect for function _main
   950  0701                     _main:	
   951                           
   952                           ;main.c: 20: TRISA = 0xFF;
   953                           
   954                           ;incstack = 0
   955                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   956  0701  30FF               	movlw	255
   957  0702  1683               	bsf	3,5	;RP0=1, select bank1
   958  0703  1303               	bcf	3,6	;RP1=0, select bank1
   959  0704  0085               	movwf	5	;volatile
   960                           
   961                           ;main.c: 21: TRISB = 0xFF;
   962  0705  30FF               	movlw	255
   963  0706  0086               	movwf	6	;volatile
   964                           
   965                           ;main.c: 23: TRISC = 0x00;
   966  0707  0187               	clrf	7	;volatile
   967                           
   968                           ;main.c: 24: TRISD = 0x00;
   969  0708  0188               	clrf	8	;volatile
   970                           
   971                           ;main.c: 25: PORTC = 0x00;
   972  0709  1283               	bcf	3,5	;RP0=0, select bank0
   973  070A  1303               	bcf	3,6	;RP1=0, select bank0
   974  070B  0187               	clrf	7	;volatile
   975                           
   976                           ;main.c: 28: ADCON1 = 0x80;
   977  070C  3080               	movlw	128
   978  070D  1683               	bsf	3,5	;RP0=1, select bank1
   979  070E  1303               	bcf	3,6	;RP1=0, select bank1
   980  070F  009F               	movwf	31	;volatile
   981                           
   982                           ;main.c: 29: ADCON0 = 0x01;
   983  0710  3001               	movlw	1
   984  0711  1283               	bcf	3,5	;RP0=0, select bank0
   985  0712  1303               	bcf	3,6	;RP1=0, select bank0
   986  0713  009F               	movwf	31	;volatile
   987                           
   988                           ;main.c: 32: INTE = 1;
   989  0714  160B               	bsf	11,4	;volatile
   990                           
   991                           ;main.c: 33: INTF = 0;
   992  0715  108B               	bcf	11,1	;volatile
   993                           
   994                           ;main.c: 34: INTEDG = 1;
   995  0716  1683               	bsf	3,5	;RP0=1, select bank1
   996  0717  1303               	bcf	3,6	;RP1=0, select bank1
   997  0718  1701               	bsf	1,6	;volatile
   998                           
   999                           ;main.c: 35: GIE = 1;
  1000  0719  178B               	bsf	11,7	;volatile
  1001                           
  1002                           ;main.c: 36: PEIE = 1;
  1003  071A  170B               	bsf	11,6	;volatile
  1004                           
  1005                           ;main.c: 39: initLCD();
  1006  071B  120A  158A  222F  120A  118A  	fcall	_initLCD
  1007                           
  1008                           ;main.c: 40: _delay((unsigned long)((500)*(4000000/4000.0)));
  1009  0720  3003               	movlw	3
  1010  0721  1683               	bsf	3,5	;RP0=1, select bank1
  1011  0722  1303               	bcf	3,6	;RP1=0, select bank1
  1012  0723  00C9               	movwf	(??_main^(0+128)+2)
  1013  0724  308A               	movlw	138
  1014  0725  00C8               	movwf	(??_main^(0+128)+1)
  1015  0726  3056               	movlw	86
  1016  0727  00C7               	movwf	??_main^(0+128)
  1017  0728                     u5177:	
  1018  0728  0BC7               	decfsz	??_main^(0+128),f
  1019  0729  2F28               	goto	u5177
  1020  072A  0BC8               	decfsz	(??_main^(0+128)+1),f
  1021  072B  2F28               	goto	u5177
  1022  072C  0BC9               	decfsz	(??_main^(0+128)+2),f
  1023  072D  2F28               	goto	u5177
  1024  072E  2F2F               	nop2
  1025                           
  1026                           ;main.c: 41: instCTRL(0x80);
  1027  072F  3080               	movlw	128
  1028  0730  120A  158A  21C5  120A  118A  	fcall	_instCTRL
  1029                           
  1030                           ;main.c: 42: instCTRL(0x0C);
  1031  0735  300C               	movlw	12
  1032  0736  120A  158A  21C5  120A  118A  	fcall	_instCTRL
  1033                           
  1034                           ;main.c: 43: printToLCD("Initializing...");
  1035  073B  3030               	movlw	low (STR_21-__stringbase)
  1036  073C  1283               	bcf	3,5	;RP0=0, select bank0
  1037  073D  1303               	bcf	3,6	;RP1=0, select bank0
  1038  073E  00A0               	movwf	printToLCD@str
  1039  073F  3080               	movlw	128
  1040  0740  00A1               	movwf	printToLCD@str+1
  1041  0741  120A  118A  27D4  120A  118A  	fcall	_printToLCD
  1042                           
  1043                           ;main.c: 45: initDHT11();
  1044  0746  120A  158A  218B  120A  118A  	fcall	_initDHT11
  1045                           
  1046                           ;main.c: 46: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1047  074B  300B               	movlw	11
  1048  074C  1683               	bsf	3,5	;RP0=1, select bank1
  1049  074D  1303               	bcf	3,6	;RP1=0, select bank1
  1050  074E  00C9               	movwf	(??_main^(0+128)+2)
  1051  074F  3026               	movlw	38
  1052  0750  00C8               	movwf	(??_main^(0+128)+1)
  1053  0751  3066               	movlw	102
  1054  0752  00C7               	movwf	??_main^(0+128)
  1055  0753                     u5187:	
  1056  0753  0BC7               	decfsz	??_main^(0+128),f
  1057  0754  2F53               	goto	u5187
  1058  0755  0BC8               	decfsz	(??_main^(0+128)+1),f
  1059  0756  2F53               	goto	u5187
  1060  0757  0BC9               	decfsz	(??_main^(0+128)+2),f
  1061  0758  2F53               	goto	u5187
  1062  0759  2F5A               	nop2
  1063                           
  1064                           ;main.c: 47: instCTRL(0x01);
  1065  075A  3001               	movlw	1
  1066  075B  120A  158A  21C5  120A  118A  	fcall	_instCTRL
  1067                           
  1068                           ;main.c: 59: switch (mode)
  1069  0760  2FB8               	goto	l3299
  1070  0761                     l3313:	
  1071                           ;main.c: 60: {
  1072                           ;main.c: 61: case STAT:
  1073                           
  1074                           
  1075                           ;main.c: 62: instCTRL(0x80);
  1076  0761  3080               	movlw	128
  1077  0762  120A  158A  21C5  120A  118A  	fcall	_instCTRL
  1078                           
  1079                           ;main.c: 63: displayDataDHT11(temperature, humidity);
  1080  0767  1283               	bcf	3,5	;RP0=0, select bank0
  1081  0768  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0769  0867               	movf	_temperature,w
  1083  076A  1683               	bsf	3,5	;RP0=1, select bank1
  1084  076B  1303               	bcf	3,6	;RP1=0, select bank1
  1085  076C  00C7               	movwf	??_main^(0+128)
  1086  076D  01C8               	clrf	(??_main^(0+128)+1)
  1087  076E  0847               	movf	??_main^(0+128),w
  1088  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0771  00C1               	movwf	?_displayDataDHT11
  1091  0772  1683               	bsf	3,5	;RP0=1, select bank1
  1092  0773  1303               	bcf	3,6	;RP1=0, select bank1
  1093  0774  0848               	movf	(??_main+1)^(0+128),w
  1094  0775  1283               	bcf	3,5	;RP0=0, select bank0
  1095  0776  1303               	bcf	3,6	;RP1=0, select bank0
  1096  0777  00C2               	movwf	?_displayDataDHT11+1
  1097  0778  0866               	movf	_humidity,w
  1098  0779  1683               	bsf	3,5	;RP0=1, select bank1
  1099  077A  1303               	bcf	3,6	;RP1=0, select bank1
  1100  077B  00C9               	movwf	(??_main+2)^(0+128)
  1101  077C  01CA               	clrf	((??_main+2)^(0+128)+1)
  1102  077D  0849               	movf	(??_main+2)^(0+128),w
  1103  077E  1283               	bcf	3,5	;RP0=0, select bank0
  1104  077F  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0780  00C3               	movwf	?_displayDataDHT11+2
  1106  0781  1683               	bsf	3,5	;RP0=1, select bank1
  1107  0782  1303               	bcf	3,6	;RP1=0, select bank1
  1108  0783  084A               	movf	(??_main+3)^(0+128),w
  1109  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1110  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1111  0786  00C4               	movwf	?_displayDataDHT11+3
  1112  0787  120A  158A  22E8  120A  118A  	fcall	_displayDataDHT11
  1113                           
  1114                           ;main.c: 64: instCTRL(0xC0);
  1115  078C  30C0               	movlw	192
  1116  078D  120A  158A  21C5  120A  118A  	fcall	_instCTRL
  1117                           
  1118                           ;main.c: 65: displayTime();
  1119  0792  120A  158A  220B  120A  118A  	fcall	_displayTime
  1120                           
  1121                           ;main.c: 66: break;
  1122  0797  2FB8               	goto	l3299
  1123  0798                     l3319:	
  1124                           ;main.c: 67: case SETC:
  1125                           
  1126                           
  1127                           ;main.c: 68: instCTRL(0x01);
  1128  0798  3001               	movlw	1
  1129  0799  120A  158A  21C5  120A  118A  	fcall	_instCTRL
  1130                           
  1131                           ;main.c: 69: instCTRL(0x80);
  1132  079E  3080               	movlw	128
  1133  079F  120A  158A  21C5  120A  118A  	fcall	_instCTRL
  1134                           
  1135                           ;main.c: 70: displayPPM();
  1136  07A4  120A  118A  25D8  120A  118A  	fcall	_displayPPM
  1137                           
  1138                           ;main.c: 71: _delay((unsigned long)((500)*(4000000/4000.0)));
  1139  07A9  3003               	movlw	3
  1140  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  1141  07AB  1303               	bcf	3,6	;RP1=0, select bank1
  1142  07AC  00C9               	movwf	(??_main^(0+128)+2)
  1143  07AD  308A               	movlw	138
  1144  07AE  00C8               	movwf	(??_main^(0+128)+1)
  1145  07AF  3056               	movlw	86
  1146  07B0  00C7               	movwf	??_main^(0+128)
  1147  07B1                     u5197:	
  1148  07B1  0BC7               	decfsz	??_main^(0+128),f
  1149  07B2  2FB1               	goto	u5197
  1150  07B3  0BC8               	decfsz	(??_main^(0+128)+1),f
  1151  07B4  2FB1               	goto	u5197
  1152  07B5  0BC9               	decfsz	(??_main^(0+128)+2),f
  1153  07B6  2FB1               	goto	u5197
  1154  07B7  2FB8               	nop2
  1155  07B8                     l3299:	
  1156                           ;main.c: 49: while (1)
  1157                           
  1158                           ;main.c: 75: }
  1159                           
  1160                           ;main.c: 74: break;
  1161                           
  1162                           ;main.c: 73: default:
  1163                           
  1164                           ;main.c: 72: break;
  1165                           
  1166                           
  1167                           ;main.c: 50: {
  1168                           ;main.c: 52: GIE = 0;
  1169  07B8  138B               	bcf	11,7	;volatile
  1170                           
  1171                           ;main.c: 53: PEIE = 0;
  1172  07B9  130B               	bcf	11,6	;volatile
  1173                           
  1174                           ;main.c: 54: runDHT11();
  1175  07BA  120A  158A  234D  120A  118A  	fcall	_runDHT11
  1176                           
  1177                           ;main.c: 55: GIE = 1;
  1178  07BF  178B               	bsf	11,7	;volatile
  1179                           
  1180                           ;main.c: 56: PEIE = 1;
  1181  07C0  170B               	bsf	11,6	;volatile
  1182                           
  1183                           ;main.c: 57: runMQ135();
  1184  07C1  120A  158A  2253  120A  118A  	fcall	_runMQ135
  1185                           
  1186                           ;main.c: 58: runClock();
  1187  07C6  120A  158A  21EE  120A  118A  	fcall	_runClock
  1188  07CB  0877               	movf	_mode,w
  1189                           
  1190                           ; Switch size 1, requested type "space"
  1191                           ; Number of cases is 2, Range of values is 0 to 1
  1192                           ; switch strategies available:
  1193                           ; Name         Instructions Cycles
  1194                           ; simple_byte            7     4 (average)
  1195                           ; direct_byte           14     8 (fixed)
  1196                           ; jumptable            260     6 (fixed)
  1197                           ;	Chosen strategy is simple_byte
  1198  07CC  3A00               	xorlw	0	; case 0
  1199  07CD  1903               	skipnz
  1200  07CE  2F61               	goto	l3313
  1201  07CF  3A01               	xorlw	1	; case 1
  1202  07D0  1903               	skipnz
  1203  07D1  2F98               	goto	l3319
  1204  07D2  2FB8               	goto	l3299
  1205  07D3  2FB8               	goto	l3299
  1206  07D4                     __end_of_main:	
  1207                           
  1208                           	psect	text1
  1209  0A53                     __ptext1:	
  1210 ;; *************** function _runMQ135 *****************
  1211 ;; Defined at:
  1212 ;;		line 32 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\mq135_module.h"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;		None               void
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1226 ;;      Params:         0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    4
  1233 ;; This function calls:
  1234 ;;		_CalcMQ135
  1235 ;;		_readADC
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           
  1242                           ;psect for function _runMQ135
  1243  0A53                     _runMQ135:	
  1244                           
  1245                           ;mq135_module.h: 34: PPM = CalcMQ135(readADC(0));
  1246                           
  1247                           ;incstack = 0
  1248                           ; Regs used in _runMQ135: [wreg+status,2+status,0+pclath+cstack]
  1249  0A53  3000               	movlw	0
  1250  0A54  120A  158A  22C1  120A  158A  	fcall	_readADC
  1251  0A59  0876               	movf	?_readADC+1,w
  1252  0A5A  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0A5B  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0A5C  01D0               	clrf	CalcMQ135@RAW_ADC+1
  1255  0A5D  07D0               	addwf	CalcMQ135@RAW_ADC+1,f
  1256  0A5E  0875               	movf	?_readADC,w
  1257  0A5F  01CF               	clrf	CalcMQ135@RAW_ADC
  1258  0A60  07CF               	addwf	CalcMQ135@RAW_ADC,f
  1259  0A61  120A  118A  204E   	fcall	_CalcMQ135
  1260  0A64  1283               	bcf	3,5	;RP0=0, select bank0
  1261  0A65  1303               	bcf	3,6	;RP1=0, select bank0
  1262  0A66  084F               	movf	?_CalcMQ135,w
  1263  0A67  1683               	bsf	3,5	;RP0=1, select bank1
  1264  0A68  1303               	bcf	3,6	;RP1=0, select bank1
  1265  0A69  00CB               	movwf	_PPM^(0+128)	;volatile
  1266  0A6A  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0A6B  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0A6C  0850               	movf	?_CalcMQ135+1,w
  1269  0A6D  1683               	bsf	3,5	;RP0=1, select bank1
  1270  0A6E  1303               	bcf	3,6	;RP1=0, select bank1
  1271  0A6F  00CC               	movwf	(_PPM+1)^(0+128)	;volatile
  1272  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  1273  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0A72  0851               	movf	?_CalcMQ135+2,w
  1275  0A73  1683               	bsf	3,5	;RP0=1, select bank1
  1276  0A74  1303               	bcf	3,6	;RP1=0, select bank1
  1277  0A75  00CD               	movwf	(_PPM+2)^(0+128)	;volatile
  1278  0A76  0008               	return
  1279  0A77                     __end_of_runMQ135:	
  1280                           
  1281                           	psect	text2
  1282  0AC1                     __ptext2:	
  1283 ;; *************** function _readADC *****************
  1284 ;; Defined at:
  1285 ;;		line 23 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\common_dependencies.h
      +"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  channel         1    wreg     unsigned char 
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;  channel         1    2[BANK0 ] unsigned char 
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  2    5[COMMON] int 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         2       0       0       0       0
  1300 ;;      Locals:         0       1       0       0       0
  1301 ;;      Temps:          0       2       0       0       0
  1302 ;;      Totals:         2       3       0       0       0
  1303 ;;Total ram usage:        5 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    1
  1306 ;; This function calls:
  1307 ;;		Nothing
  1308 ;; This function is called by:
  1309 ;;		_runMQ135
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           
  1314                           ;psect for function _readADC
  1315  0AC1                     _readADC:	
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _readADC: [wreg+status,2+status,0]
  1319                           ;readADC@channel stored from wreg
  1320  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
  1321  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
  1322  0AC3  00A2               	movwf	readADC@channel
  1323                           
  1324                           ;common_dependencies.h: 25: ADCON0 &= 0xC3;
  1325  0AC4  30C3               	movlw	195
  1326  0AC5  00A0               	movwf	??_readADC
  1327  0AC6  0820               	movf	??_readADC,w
  1328  0AC7  059F               	andwf	31,f	;volatile
  1329                           
  1330                           ;common_dependencies.h: 26: ADCON0 |= (channel << 3);
  1331  0AC8  0822               	movf	readADC@channel,w
  1332  0AC9  00A0               	movwf	??_readADC
  1333  0ACA  3002               	movlw	2
  1334  0ACB                     u4555:	
  1335  0ACB  1003               	clrc
  1336  0ACC  0DA0               	rlf	??_readADC,f
  1337  0ACD  3EFF               	addlw	-1
  1338  0ACE  1D03               	skipz
  1339  0ACF  2ACB               	goto	u4555
  1340  0AD0  1003               	clrc
  1341  0AD1  0D20               	rlf	??_readADC,w
  1342  0AD2  00A1               	movwf	??_readADC+1
  1343  0AD3  0821               	movf	??_readADC+1,w
  1344  0AD4  049F               	iorwf	31,f	;volatile
  1345                           
  1346                           ;common_dependencies.h: 27: _delay((unsigned long)((20)*(4000000/4000000.0)));
  1347  0AD5  3006               	movlw	6
  1348  0AD6  00A0               	movwf	??_readADC
  1349  0AD7                     u5207:	
  1350  0AD7  0BA0               	decfsz	??_readADC,f
  1351  0AD8  2AD7               	goto	u5207
  1352  0AD9  0000               	nop
  1353                           
  1354                           ;common_dependencies.h: 28: GO_DONE = 1;
  1355  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0ADC  151F               	bsf	31,2	;volatile
  1358  0ADD                     l57:	
  1359                           ;common_dependencies.h: 30: ;
  1360                           
  1361                           ;common_dependencies.h: 29: while (GO_DONE)
  1362                           
  1363  0ADD  191F               	btfsc	31,2	;volatile
  1364  0ADE  2ADD               	goto	l57
  1365                           
  1366                           ;common_dependencies.h: 31: return ((ADRESH << 8) + ADRESL);
  1367  0ADF  081E               	movf	30,w	;volatile
  1368  0AE0  01F6               	clrf	?_readADC+1
  1369  0AE1  07F6               	addwf	?_readADC+1,f
  1370  0AE2  1683               	bsf	3,5	;RP0=1, select bank1
  1371  0AE3  1303               	bcf	3,6	;RP1=0, select bank1
  1372  0AE4  081E               	movf	30,w	;volatile
  1373  0AE5  01F5               	clrf	?_readADC
  1374  0AE6  07F5               	addwf	?_readADC,f
  1375  0AE7  0008               	return
  1376  0AE8                     __end_of_readADC:	
  1377                           
  1378                           	psect	text3
  1379  004E                     __ptext3:	
  1380 ;; *************** function _CalcMQ135 *****************
  1381 ;; Defined at:
  1382 ;;		line 93 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\mq135_module.h"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  RAW_ADC         2   47[BANK0 ] int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  ratio           3   36[BANK1 ] float 
  1387 ;;  co2             3   33[BANK1 ] float 
  1388 ;;  ratio5          3   30[BANK1 ] float 
  1389 ;;  ratio4          3   27[BANK1 ] float 
  1390 ;;  ratio3          3   24[BANK1 ] float 
  1391 ;;  ratio2          3   21[BANK1 ] float 
  1392 ;;  ratio6          3    3[BANK1 ] float 
  1393 ;;  voltage         3    0[BANK1 ] float 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  3   47[BANK0 ] float 
  1396 ;; Registers used:
  1397 ;;		wreg, status,2, status,0, pclath, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1403 ;;      Params:         0       3       0       0       0
  1404 ;;      Locals:         0       0      39       0       0
  1405 ;;      Temps:          0       0       0       0       0
  1406 ;;      Totals:         0       3      39       0       0
  1407 ;;Total ram usage:       42 bytes
  1408 ;; Hardware stack levels used:    1
  1409 ;; Hardware stack levels required when called:    3
  1410 ;; This function calls:
  1411 ;;		___awtoft
  1412 ;;		___ftadd
  1413 ;;		___ftdiv
  1414 ;;		___ftmul
  1415 ;; This function is called by:
  1416 ;;		_runMQ135
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           
  1421                           ;psect for function _CalcMQ135
  1422  004E                     _CalcMQ135:	
  1423                           
  1424                           ;mq135_module.h: 95: float voltage = (RAW_ADC * 5.0) / 1023.0;
  1425                           
  1426                           ;incstack = 0
  1427                           ; Regs used in _CalcMQ135: [wreg+status,2+status,0+pclath+cstack]
  1428  004E  30C0               	movlw	192
  1429  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1431  0051  00BF               	movwf	___ftdiv@f2
  1432  0052  307F               	movlw	127
  1433  0053  00C0               	movwf	___ftdiv@f2+1
  1434  0054  3044               	movlw	68
  1435  0055  00C1               	movwf	___ftdiv@f2+2
  1436  0056  3000               	movlw	0
  1437  0057  00AF               	movwf	___ftmul@f1
  1438  0058  30A0               	movlw	160
  1439  0059  00B0               	movwf	___ftmul@f1+1
  1440  005A  3040               	movlw	64
  1441  005B  00B1               	movwf	___ftmul@f1+2
  1442  005C  0850               	movf	CalcMQ135@RAW_ADC+1,w
  1443  005D  01A9               	clrf	___awtoft@c+1
  1444  005E  07A9               	addwf	___awtoft@c+1,f
  1445  005F  084F               	movf	CalcMQ135@RAW_ADC,w
  1446  0060  01A8               	clrf	___awtoft@c
  1447  0061  07A8               	addwf	___awtoft@c,f
  1448  0062  120A  158A  229C  120A  118A  	fcall	___awtoft
  1449  0067  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0068  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0069  0828               	movf	?___awtoft,w
  1452  006A  00B2               	movwf	___ftmul@f2
  1453  006B  0829               	movf	?___awtoft+1,w
  1454  006C  00B3               	movwf	___ftmul@f2+1
  1455  006D  082A               	movf	?___awtoft+2,w
  1456  006E  00B4               	movwf	___ftmul@f2+2
  1457  006F  120A  158A  2624  120A  118A  	fcall	___ftmul
  1458  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1459  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1460  0076  082F               	movf	?___ftmul,w
  1461  0077  00C2               	movwf	___ftdiv@f1
  1462  0078  0830               	movf	?___ftmul+1,w
  1463  0079  00C3               	movwf	___ftdiv@f1+1
  1464  007A  0831               	movf	?___ftmul+2,w
  1465  007B  00C4               	movwf	___ftdiv@f1+2
  1466  007C  120A  158A  256C  120A  118A  	fcall	___ftdiv
  1467  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1468  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1469  0083  083F               	movf	?___ftdiv,w
  1470  0084  1683               	bsf	3,5	;RP0=1, select bank1
  1471  0085  1303               	bcf	3,6	;RP1=0, select bank1
  1472  0086  00A0               	movwf	CalcMQ135@voltage^(0+128)
  1473  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0089  0840               	movf	?___ftdiv+1,w
  1476  008A  1683               	bsf	3,5	;RP0=1, select bank1
  1477  008B  1303               	bcf	3,6	;RP1=0, select bank1
  1478  008C  00A1               	movwf	(CalcMQ135@voltage+1)^(0+128)
  1479  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1480  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1481  008F  0841               	movf	?___ftdiv+2,w
  1482  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1483  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1484  0092  00A2               	movwf	(CalcMQ135@voltage+2)^(0+128)
  1485                           
  1486                           ;mq135_module.h: 96: float ratio = voltage / 5.0;
  1487  0093  3000               	movlw	0
  1488  0094  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0095  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0096  00BF               	movwf	___ftdiv@f2
  1491  0097  30A0               	movlw	160
  1492  0098  00C0               	movwf	___ftdiv@f2+1
  1493  0099  3040               	movlw	64
  1494  009A  00C1               	movwf	___ftdiv@f2+2
  1495  009B  1683               	bsf	3,5	;RP0=1, select bank1
  1496  009C  1303               	bcf	3,6	;RP1=0, select bank1
  1497  009D  0820               	movf	CalcMQ135@voltage^(0+128),w
  1498  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1499  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1500  00A0  00C2               	movwf	___ftdiv@f1
  1501  00A1  1683               	bsf	3,5	;RP0=1, select bank1
  1502  00A2  1303               	bcf	3,6	;RP1=0, select bank1
  1503  00A3  0821               	movf	(CalcMQ135@voltage+1)^(0+128),w
  1504  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1505  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1506  00A6  00C3               	movwf	___ftdiv@f1+1
  1507  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  1508  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  1509  00A9  0822               	movf	(CalcMQ135@voltage+2)^(0+128),w
  1510  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1511  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1512  00AC  00C4               	movwf	___ftdiv@f1+2
  1513  00AD  120A  158A  256C  120A  118A  	fcall	___ftdiv
  1514  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1515  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1516  00B4  083F               	movf	?___ftdiv,w
  1517  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1518  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1519  00B7  00C4               	movwf	CalcMQ135@ratio^(0+128)
  1520  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  1521  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  1522  00BA  0840               	movf	?___ftdiv+1,w
  1523  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1524  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1525  00BD  00C5               	movwf	(CalcMQ135@ratio+1)^(0+128)
  1526  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1527  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1528  00C0  0841               	movf	?___ftdiv+2,w
  1529  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1530  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1531  00C3  00C6               	movwf	(CalcMQ135@ratio+2)^(0+128)
  1532                           
  1533                           ;mq135_module.h: 99: float ratio2 = ratio * ratio;
  1534  00C4  0844               	movf	CalcMQ135@ratio^(0+128),w
  1535  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1536  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1537  00C7  00AF               	movwf	___ftmul@f1
  1538  00C8  1683               	bsf	3,5	;RP0=1, select bank1
  1539  00C9  1303               	bcf	3,6	;RP1=0, select bank1
  1540  00CA  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  1541  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1542  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1543  00CD  00B0               	movwf	___ftmul@f1+1
  1544  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  1545  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  1546  00D0  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  1547  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1548  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1549  00D3  00B1               	movwf	___ftmul@f1+2
  1550  00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1551  00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1552  00D6  0844               	movf	CalcMQ135@ratio^(0+128),w
  1553  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1554  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1555  00D9  00B2               	movwf	___ftmul@f2
  1556  00DA  1683               	bsf	3,5	;RP0=1, select bank1
  1557  00DB  1303               	bcf	3,6	;RP1=0, select bank1
  1558  00DC  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  1559  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1560  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1561  00DF  00B3               	movwf	___ftmul@f2+1
  1562  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1563  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1564  00E2  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  1565  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1566  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1567  00E5  00B4               	movwf	___ftmul@f2+2
  1568  00E6  120A  158A  2624  120A  118A  	fcall	___ftmul
  1569  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1570  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1571  00ED  082F               	movf	?___ftmul,w
  1572  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1573  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1574  00F0  00B5               	movwf	CalcMQ135@ratio2^(0+128)
  1575  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1576  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1577  00F3  0830               	movf	?___ftmul+1,w
  1578  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1579  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  1580  00F6  00B6               	movwf	(CalcMQ135@ratio2+1)^(0+128)
  1581  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1582  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1583  00F9  0831               	movf	?___ftmul+2,w
  1584  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  1585  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  1586  00FC  00B7               	movwf	(CalcMQ135@ratio2+2)^(0+128)
  1587                           
  1588                           ;mq135_module.h: 100: float ratio3 = ratio2 * ratio;
  1589  00FD  0844               	movf	CalcMQ135@ratio^(0+128),w
  1590  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1591  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0100  00AF               	movwf	___ftmul@f1
  1593  0101  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0102  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0103  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  1596  0104  1283               	bcf	3,5	;RP0=0, select bank0
  1597  0105  1303               	bcf	3,6	;RP1=0, select bank0
  1598  0106  00B0               	movwf	___ftmul@f1+1
  1599  0107  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0108  1303               	bcf	3,6	;RP1=0, select bank1
  1601  0109  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  1602  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1603  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1604  010C  00B1               	movwf	___ftmul@f1+2
  1605  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1606  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1607  010F  0835               	movf	CalcMQ135@ratio2^(0+128),w
  1608  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1609  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1610  0112  00B2               	movwf	___ftmul@f2
  1611  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1612  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1613  0115  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  1614  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0118  00B3               	movwf	___ftmul@f2+1
  1617  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1618  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1619  011B  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  1620  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1621  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1622  011E  00B4               	movwf	___ftmul@f2+2
  1623  011F  120A  158A  2624  120A  118A  	fcall	___ftmul
  1624  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1625  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1626  0126  082F               	movf	?___ftmul,w
  1627  0127  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0128  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0129  00B8               	movwf	CalcMQ135@ratio3^(0+128)
  1630  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1631  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1632  012C  0830               	movf	?___ftmul+1,w
  1633  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1634  012E  1303               	bcf	3,6	;RP1=0, select bank1
  1635  012F  00B9               	movwf	(CalcMQ135@ratio3+1)^(0+128)
  1636  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1637  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1638  0132  0831               	movf	?___ftmul+2,w
  1639  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1640  0134  1303               	bcf	3,6	;RP1=0, select bank1
  1641  0135  00BA               	movwf	(CalcMQ135@ratio3+2)^(0+128)
  1642                           
  1643                           ;mq135_module.h: 101: float ratio4 = ratio3 * ratio;
  1644  0136  0844               	movf	CalcMQ135@ratio^(0+128),w
  1645  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0139  00AF               	movwf	___ftmul@f1
  1648  013A  1683               	bsf	3,5	;RP0=1, select bank1
  1649  013B  1303               	bcf	3,6	;RP1=0, select bank1
  1650  013C  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  1651  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1652  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1653  013F  00B0               	movwf	___ftmul@f1+1
  1654  0140  1683               	bsf	3,5	;RP0=1, select bank1
  1655  0141  1303               	bcf	3,6	;RP1=0, select bank1
  1656  0142  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  1657  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1658  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1659  0145  00B1               	movwf	___ftmul@f1+2
  1660  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1661  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1662  0148  0838               	movf	CalcMQ135@ratio3^(0+128),w
  1663  0149  1283               	bcf	3,5	;RP0=0, select bank0
  1664  014A  1303               	bcf	3,6	;RP1=0, select bank0
  1665  014B  00B2               	movwf	___ftmul@f2
  1666  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1667  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1668  014E  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  1669  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0151  00B3               	movwf	___ftmul@f2+1
  1672  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1673  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1674  0154  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  1675  0155  1283               	bcf	3,5	;RP0=0, select bank0
  1676  0156  1303               	bcf	3,6	;RP1=0, select bank0
  1677  0157  00B4               	movwf	___ftmul@f2+2
  1678  0158  120A  158A  2624  120A  118A  	fcall	___ftmul
  1679  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1680  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1681  015F  082F               	movf	?___ftmul,w
  1682  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1683  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1684  0162  00BB               	movwf	CalcMQ135@ratio4^(0+128)
  1685  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0165  0830               	movf	?___ftmul+1,w
  1688  0166  1683               	bsf	3,5	;RP0=1, select bank1
  1689  0167  1303               	bcf	3,6	;RP1=0, select bank1
  1690  0168  00BC               	movwf	(CalcMQ135@ratio4+1)^(0+128)
  1691  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1692  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1693  016B  0831               	movf	?___ftmul+2,w
  1694  016C  1683               	bsf	3,5	;RP0=1, select bank1
  1695  016D  1303               	bcf	3,6	;RP1=0, select bank1
  1696  016E  00BD               	movwf	(CalcMQ135@ratio4+2)^(0+128)
  1697                           
  1698                           ;mq135_module.h: 102: float ratio5 = ratio4 * ratio;
  1699  016F  0844               	movf	CalcMQ135@ratio^(0+128),w
  1700  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0172  00AF               	movwf	___ftmul@f1
  1703  0173  1683               	bsf	3,5	;RP0=1, select bank1
  1704  0174  1303               	bcf	3,6	;RP1=0, select bank1
  1705  0175  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  1706  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0178  00B0               	movwf	___ftmul@f1+1
  1709  0179  1683               	bsf	3,5	;RP0=1, select bank1
  1710  017A  1303               	bcf	3,6	;RP1=0, select bank1
  1711  017B  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  1712  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1713  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1714  017E  00B1               	movwf	___ftmul@f1+2
  1715  017F  1683               	bsf	3,5	;RP0=1, select bank1
  1716  0180  1303               	bcf	3,6	;RP1=0, select bank1
  1717  0181  083B               	movf	CalcMQ135@ratio4^(0+128),w
  1718  0182  1283               	bcf	3,5	;RP0=0, select bank0
  1719  0183  1303               	bcf	3,6	;RP1=0, select bank0
  1720  0184  00B2               	movwf	___ftmul@f2
  1721  0185  1683               	bsf	3,5	;RP0=1, select bank1
  1722  0186  1303               	bcf	3,6	;RP1=0, select bank1
  1723  0187  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  1724  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0189  1303               	bcf	3,6	;RP1=0, select bank0
  1726  018A  00B3               	movwf	___ftmul@f2+1
  1727  018B  1683               	bsf	3,5	;RP0=1, select bank1
  1728  018C  1303               	bcf	3,6	;RP1=0, select bank1
  1729  018D  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  1730  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1731  018F  1303               	bcf	3,6	;RP1=0, select bank0
  1732  0190  00B4               	movwf	___ftmul@f2+2
  1733  0191  120A  158A  2624  120A  118A  	fcall	___ftmul
  1734  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1735  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1736  0198  082F               	movf	?___ftmul,w
  1737  0199  1683               	bsf	3,5	;RP0=1, select bank1
  1738  019A  1303               	bcf	3,6	;RP1=0, select bank1
  1739  019B  00BE               	movwf	CalcMQ135@ratio5^(0+128)
  1740  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1741  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1742  019E  0830               	movf	?___ftmul+1,w
  1743  019F  1683               	bsf	3,5	;RP0=1, select bank1
  1744  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  1745  01A1  00BF               	movwf	(CalcMQ135@ratio5+1)^(0+128)
  1746  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1747  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1748  01A4  0831               	movf	?___ftmul+2,w
  1749  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  1750  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  1751  01A7  00C0               	movwf	(CalcMQ135@ratio5+2)^(0+128)
  1752                           
  1753                           ;mq135_module.h: 103: float ratio6 = ratio5 * ratio;
  1754  01A8  0844               	movf	CalcMQ135@ratio^(0+128),w
  1755  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1756  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1757  01AB  00AF               	movwf	___ftmul@f1
  1758  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1759  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  1760  01AE  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  1761  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1762  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1763  01B1  00B0               	movwf	___ftmul@f1+1
  1764  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1765  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1766  01B4  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  1767  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  1768  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  1769  01B7  00B1               	movwf	___ftmul@f1+2
  1770  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  1771  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  1772  01BA  083E               	movf	CalcMQ135@ratio5^(0+128),w
  1773  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1774  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1775  01BD  00B2               	movwf	___ftmul@f2
  1776  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  1777  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  1778  01C0  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  1779  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1780  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1781  01C3  00B3               	movwf	___ftmul@f2+1
  1782  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  1783  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  1784  01C6  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  1785  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1786  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1787  01C9  00B4               	movwf	___ftmul@f2+2
  1788  01CA  120A  158A  2624  120A  118A  	fcall	___ftmul
  1789  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1790  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1791  01D1  082F               	movf	?___ftmul,w
  1792  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1793  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1794  01D4  00A3               	movwf	CalcMQ135@ratio6^(0+128)
  1795  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1796  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1797  01D7  0830               	movf	?___ftmul+1,w
  1798  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  1799  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  1800  01DA  00A4               	movwf	(CalcMQ135@ratio6+1)^(0+128)
  1801  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1802  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1803  01DD  0831               	movf	?___ftmul+2,w
  1804  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  1805  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  1806  01E0  00A5               	movwf	(CalcMQ135@ratio6+2)^(0+128)
  1807                           
  1808                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  1809                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  1810  01E1  309C               	movlw	156
  1811  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1812  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1813  01E4  00AF               	movwf	___ftmul@f1
  1814  01E5  30B2               	movlw	178
  1815  01E6  00B0               	movwf	___ftmul@f1+1
  1816  01E7  303F               	movlw	63
  1817  01E8  00B1               	movwf	___ftmul@f1+2
  1818  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  1819  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  1820  01EB  0835               	movf	CalcMQ135@ratio2^(0+128),w
  1821  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1822  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1823  01EE  00B2               	movwf	___ftmul@f2
  1824  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  1825  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  1826  01F1  0836               	movf	(CalcMQ135@ratio2+1)^(0+128),w
  1827  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1828  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1829  01F4  00B3               	movwf	___ftmul@f2+1
  1830  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  1831  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  1832  01F7  0837               	movf	(CalcMQ135@ratio2+2)^(0+128),w
  1833  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1834  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1835  01FA  00B4               	movwf	___ftmul@f2+2
  1836  01FB  120A  158A  2624  120A  118A  	fcall	___ftmul
  1837  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1838  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1839  0202  082F               	movf	?___ftmul,w
  1840  0203  00BF               	movwf	___ftadd@f1
  1841  0204  0830               	movf	?___ftmul+1,w
  1842  0205  00C0               	movwf	___ftadd@f1+1
  1843  0206  0831               	movf	?___ftmul+2,w
  1844  0207  00C1               	movwf	___ftadd@f1+2
  1845  0208  30A9               	movlw	169
  1846  0209  00AF               	movwf	___ftmul@f1
  1847  020A  30DE               	movlw	222
  1848  020B  00B0               	movwf	___ftmul@f1+1
  1849  020C  303C               	movlw	60
  1850  020D  00B1               	movwf	___ftmul@f1+2
  1851  020E  1683               	bsf	3,5	;RP0=1, select bank1
  1852  020F  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0210  0844               	movf	CalcMQ135@ratio^(0+128),w
  1854  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1855  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1856  0213  00B2               	movwf	___ftmul@f2
  1857  0214  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0215  1303               	bcf	3,6	;RP1=0, select bank1
  1859  0216  0845               	movf	(CalcMQ135@ratio+1)^(0+128),w
  1860  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0219  00B3               	movwf	___ftmul@f2+1
  1863  021A  1683               	bsf	3,5	;RP0=1, select bank1
  1864  021B  1303               	bcf	3,6	;RP1=0, select bank1
  1865  021C  0846               	movf	(CalcMQ135@ratio+2)^(0+128),w
  1866  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1867  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1868  021F  00B4               	movwf	___ftmul@f2+2
  1869  0220  120A  158A  2624  120A  118A  	fcall	___ftmul
  1870  0225  1283               	bcf	3,5	;RP0=0, select bank0
  1871  0226  1303               	bcf	3,6	;RP1=0, select bank0
  1872  0227  082F               	movf	?___ftmul,w
  1873  0228  00C2               	movwf	___ftadd@f2
  1874  0229  0830               	movf	?___ftmul+1,w
  1875  022A  00C3               	movwf	___ftadd@f2+1
  1876  022B  0831               	movf	?___ftmul+2,w
  1877  022C  00C4               	movwf	___ftadd@f2+2
  1878  022D  120A  158A  26F7  120A  118A  	fcall	___ftadd
  1879  0232  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0233  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0234  083F               	movf	?___ftadd,w
  1882  0235  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0236  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0237  00A6               	movwf	_CalcMQ135$687^(0+128)
  1885  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1887  023A  0840               	movf	?___ftadd+1,w
  1888  023B  1683               	bsf	3,5	;RP0=1, select bank1
  1889  023C  1303               	bcf	3,6	;RP1=0, select bank1
  1890  023D  00A7               	movwf	(_CalcMQ135$687+1)^(0+128)
  1891  023E  1283               	bcf	3,5	;RP0=0, select bank0
  1892  023F  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0240  0841               	movf	?___ftadd+2,w
  1894  0241  1683               	bsf	3,5	;RP0=1, select bank1
  1895  0242  1303               	bcf	3,6	;RP1=0, select bank1
  1896  0243  00A8               	movwf	(_CalcMQ135$687+2)^(0+128)
  1897                           
  1898                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  1899                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  1900  0244  30EE               	movlw	238
  1901  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0247  00AF               	movwf	___ftmul@f1
  1904  0248  30EB               	movlw	235
  1905  0249  00B0               	movwf	___ftmul@f1+1
  1906  024A  303A               	movlw	58
  1907  024B  00B1               	movwf	___ftmul@f1+2
  1908  024C  1683               	bsf	3,5	;RP0=1, select bank1
  1909  024D  1303               	bcf	3,6	;RP1=0, select bank1
  1910  024E  0838               	movf	CalcMQ135@ratio3^(0+128),w
  1911  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0251  00B2               	movwf	___ftmul@f2
  1914  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1915  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1916  0254  0839               	movf	(CalcMQ135@ratio3+1)^(0+128),w
  1917  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0257  00B3               	movwf	___ftmul@f2+1
  1920  0258  1683               	bsf	3,5	;RP0=1, select bank1
  1921  0259  1303               	bcf	3,6	;RP1=0, select bank1
  1922  025A  083A               	movf	(CalcMQ135@ratio3+2)^(0+128),w
  1923  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1924  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1925  025D  00B4               	movwf	___ftmul@f2+2
  1926  025E  120A  158A  2624  120A  118A  	fcall	___ftmul
  1927  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0264  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0265  082F               	movf	?___ftmul,w
  1930  0266  00BF               	movwf	___ftadd@f1
  1931  0267  0830               	movf	?___ftmul+1,w
  1932  0268  00C0               	movwf	___ftadd@f1+1
  1933  0269  0831               	movf	?___ftmul+2,w
  1934  026A  00C1               	movwf	___ftadd@f1+2
  1935  026B  1683               	bsf	3,5	;RP0=1, select bank1
  1936  026C  1303               	bcf	3,6	;RP1=0, select bank1
  1937  026D  0826               	movf	_CalcMQ135$687^(0+128),w
  1938  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1939  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0270  00C2               	movwf	___ftadd@f2
  1941  0271  1683               	bsf	3,5	;RP0=1, select bank1
  1942  0272  1303               	bcf	3,6	;RP1=0, select bank1
  1943  0273  0827               	movf	(_CalcMQ135$687+1)^(0+128),w
  1944  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0276  00C3               	movwf	___ftadd@f2+1
  1947  0277  1683               	bsf	3,5	;RP0=1, select bank1
  1948  0278  1303               	bcf	3,6	;RP1=0, select bank1
  1949  0279  0828               	movf	(_CalcMQ135$687+2)^(0+128),w
  1950  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1951  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1952  027C  00C4               	movwf	___ftadd@f2+2
  1953  027D  120A  158A  26F7  120A  118A  	fcall	___ftadd
  1954  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1955  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1956  0284  083F               	movf	?___ftadd,w
  1957  0285  1683               	bsf	3,5	;RP0=1, select bank1
  1958  0286  1303               	bcf	3,6	;RP1=0, select bank1
  1959  0287  00A9               	movwf	_CalcMQ135$688^(0+128)
  1960  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0289  1303               	bcf	3,6	;RP1=0, select bank0
  1962  028A  0840               	movf	?___ftadd+1,w
  1963  028B  1683               	bsf	3,5	;RP0=1, select bank1
  1964  028C  1303               	bcf	3,6	;RP1=0, select bank1
  1965  028D  00AA               	movwf	(_CalcMQ135$688+1)^(0+128)
  1966  028E  1283               	bcf	3,5	;RP0=0, select bank0
  1967  028F  1303               	bcf	3,6	;RP1=0, select bank0
  1968  0290  0841               	movf	?___ftadd+2,w
  1969  0291  1683               	bsf	3,5	;RP0=1, select bank1
  1970  0292  1303               	bcf	3,6	;RP1=0, select bank1
  1971  0293  00AB               	movwf	(_CalcMQ135$688+2)^(0+128)
  1972                           
  1973                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  1974                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  1975  0294  3074               	movlw	116
  1976  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1977  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1978  0297  00AF               	movwf	___ftmul@f1
  1979  0298  305A               	movlw	90
  1980  0299  00B0               	movwf	___ftmul@f1+1
  1981  029A  30BB               	movlw	187
  1982  029B  00B1               	movwf	___ftmul@f1+2
  1983  029C  1683               	bsf	3,5	;RP0=1, select bank1
  1984  029D  1303               	bcf	3,6	;RP1=0, select bank1
  1985  029E  083B               	movf	CalcMQ135@ratio4^(0+128),w
  1986  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1987  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1988  02A1  00B2               	movwf	___ftmul@f2
  1989  02A2  1683               	bsf	3,5	;RP0=1, select bank1
  1990  02A3  1303               	bcf	3,6	;RP1=0, select bank1
  1991  02A4  083C               	movf	(CalcMQ135@ratio4+1)^(0+128),w
  1992  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1993  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1994  02A7  00B3               	movwf	___ftmul@f2+1
  1995  02A8  1683               	bsf	3,5	;RP0=1, select bank1
  1996  02A9  1303               	bcf	3,6	;RP1=0, select bank1
  1997  02AA  083D               	movf	(CalcMQ135@ratio4+2)^(0+128),w
  1998  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  1999  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2000  02AD  00B4               	movwf	___ftmul@f2+2
  2001  02AE  120A  158A  2624  120A  118A  	fcall	___ftmul
  2002  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2003  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2004  02B5  082F               	movf	?___ftmul,w
  2005  02B6  00BF               	movwf	___ftadd@f1
  2006  02B7  0830               	movf	?___ftmul+1,w
  2007  02B8  00C0               	movwf	___ftadd@f1+1
  2008  02B9  0831               	movf	?___ftmul+2,w
  2009  02BA  00C1               	movwf	___ftadd@f1+2
  2010  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2011  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2012  02BD  0829               	movf	_CalcMQ135$688^(0+128),w
  2013  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2014  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2015  02C0  00C2               	movwf	___ftadd@f2
  2016  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2017  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2018  02C3  082A               	movf	(_CalcMQ135$688+1)^(0+128),w
  2019  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2020  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2021  02C6  00C3               	movwf	___ftadd@f2+1
  2022  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2023  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2024  02C9  082B               	movf	(_CalcMQ135$688+2)^(0+128),w
  2025  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2026  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2027  02CC  00C4               	movwf	___ftadd@f2+2
  2028  02CD  120A  158A  26F7  120A  118A  	fcall	___ftadd
  2029  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2030  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2031  02D4  083F               	movf	?___ftadd,w
  2032  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2033  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  2034  02D7  00AC               	movwf	_CalcMQ135$689^(0+128)
  2035  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2036  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2037  02DA  0840               	movf	?___ftadd+1,w
  2038  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2039  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2040  02DD  00AD               	movwf	(_CalcMQ135$689+1)^(0+128)
  2041  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2042  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2043  02E0  0841               	movf	?___ftadd+2,w
  2044  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2045  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  2046  02E3  00AE               	movwf	(_CalcMQ135$689+2)^(0+128)
  2047                           
  2048                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  2049                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  2050  02E4  3010               	movlw	16
  2051  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  2052  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  2053  02E7  00AF               	movwf	___ftmul@f1
  2054  02E8  30FC               	movlw	252
  2055  02E9  00B0               	movwf	___ftmul@f1+1
  2056  02EA  30BA               	movlw	186
  2057  02EB  00B1               	movwf	___ftmul@f1+2
  2058  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  2059  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  2060  02EE  083E               	movf	CalcMQ135@ratio5^(0+128),w
  2061  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  2062  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  2063  02F1  00B2               	movwf	___ftmul@f2
  2064  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  2065  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  2066  02F4  083F               	movf	(CalcMQ135@ratio5+1)^(0+128),w
  2067  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  2068  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  2069  02F7  00B3               	movwf	___ftmul@f2+1
  2070  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  2071  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  2072  02FA  0840               	movf	(CalcMQ135@ratio5+2)^(0+128),w
  2073  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2074  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2075  02FD  00B4               	movwf	___ftmul@f2+2
  2076  02FE  120A  158A  2624  120A  118A  	fcall	___ftmul
  2077  0303  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0304  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0305  082F               	movf	?___ftmul,w
  2080  0306  00BF               	movwf	___ftadd@f1
  2081  0307  0830               	movf	?___ftmul+1,w
  2082  0308  00C0               	movwf	___ftadd@f1+1
  2083  0309  0831               	movf	?___ftmul+2,w
  2084  030A  00C1               	movwf	___ftadd@f1+2
  2085  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2086  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2087  030D  082C               	movf	_CalcMQ135$689^(0+128),w
  2088  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2089  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2090  0310  00C2               	movwf	___ftadd@f2
  2091  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2092  0312  1303               	bcf	3,6	;RP1=0, select bank1
  2093  0313  082D               	movf	(_CalcMQ135$689+1)^(0+128),w
  2094  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2095  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2096  0316  00C3               	movwf	___ftadd@f2+1
  2097  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2098  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2099  0319  082E               	movf	(_CalcMQ135$689+2)^(0+128),w
  2100  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2101  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2102  031C  00C4               	movwf	___ftadd@f2+2
  2103  031D  120A  158A  26F7  120A  118A  	fcall	___ftadd
  2104  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2105  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2106  0324  083F               	movf	?___ftadd,w
  2107  0325  1683               	bsf	3,5	;RP0=1, select bank1
  2108  0326  1303               	bcf	3,6	;RP1=0, select bank1
  2109  0327  00AF               	movwf	_CalcMQ135$690^(0+128)
  2110  0328  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0329  1303               	bcf	3,6	;RP1=0, select bank0
  2112  032A  0840               	movf	?___ftadd+1,w
  2113  032B  1683               	bsf	3,5	;RP0=1, select bank1
  2114  032C  1303               	bcf	3,6	;RP1=0, select bank1
  2115  032D  00B0               	movwf	(_CalcMQ135$690+1)^(0+128)
  2116  032E  1283               	bcf	3,5	;RP0=0, select bank0
  2117  032F  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0330  0841               	movf	?___ftadd+2,w
  2119  0331  1683               	bsf	3,5	;RP0=1, select bank1
  2120  0332  1303               	bcf	3,6	;RP1=0, select bank1
  2121  0333  00B1               	movwf	(_CalcMQ135$690+2)^(0+128)
  2122                           
  2123                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  2124                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  2125  0334  30A8               	movlw	168
  2126  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2127  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0337  00AF               	movwf	___ftmul@f1
  2129  0338  3090               	movlw	144
  2130  0339  00B0               	movwf	___ftmul@f1+1
  2131  033A  303F               	movlw	63
  2132  033B  00B1               	movwf	___ftmul@f1+2
  2133  033C  1683               	bsf	3,5	;RP0=1, select bank1
  2134  033D  1303               	bcf	3,6	;RP1=0, select bank1
  2135  033E  0823               	movf	CalcMQ135@ratio6^(0+128),w
  2136  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0340  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0341  00B2               	movwf	___ftmul@f2
  2139  0342  1683               	bsf	3,5	;RP0=1, select bank1
  2140  0343  1303               	bcf	3,6	;RP1=0, select bank1
  2141  0344  0824               	movf	(CalcMQ135@ratio6+1)^(0+128),w
  2142  0345  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0346  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0347  00B3               	movwf	___ftmul@f2+1
  2145  0348  1683               	bsf	3,5	;RP0=1, select bank1
  2146  0349  1303               	bcf	3,6	;RP1=0, select bank1
  2147  034A  0825               	movf	(CalcMQ135@ratio6+2)^(0+128),w
  2148  034B  1283               	bcf	3,5	;RP0=0, select bank0
  2149  034C  1303               	bcf	3,6	;RP1=0, select bank0
  2150  034D  00B4               	movwf	___ftmul@f2+2
  2151  034E  120A  158A  2624  120A  118A  	fcall	___ftmul
  2152  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2153  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2154  0355  082F               	movf	?___ftmul,w
  2155  0356  00BF               	movwf	___ftadd@f1
  2156  0357  0830               	movf	?___ftmul+1,w
  2157  0358  00C0               	movwf	___ftadd@f1+1
  2158  0359  0831               	movf	?___ftmul+2,w
  2159  035A  00C1               	movwf	___ftadd@f1+2
  2160  035B  1683               	bsf	3,5	;RP0=1, select bank1
  2161  035C  1303               	bcf	3,6	;RP1=0, select bank1
  2162  035D  082F               	movf	_CalcMQ135$690^(0+128),w
  2163  035E  1283               	bcf	3,5	;RP0=0, select bank0
  2164  035F  1303               	bcf	3,6	;RP1=0, select bank0
  2165  0360  00C2               	movwf	___ftadd@f2
  2166  0361  1683               	bsf	3,5	;RP0=1, select bank1
  2167  0362  1303               	bcf	3,6	;RP1=0, select bank1
  2168  0363  0830               	movf	(_CalcMQ135$690+1)^(0+128),w
  2169  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2170  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0366  00C3               	movwf	___ftadd@f2+1
  2172  0367  1683               	bsf	3,5	;RP0=1, select bank1
  2173  0368  1303               	bcf	3,6	;RP1=0, select bank1
  2174  0369  0831               	movf	(_CalcMQ135$690+2)^(0+128),w
  2175  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2176  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2177  036C  00C4               	movwf	___ftadd@f2+2
  2178  036D  120A  158A  26F7  120A  118A  	fcall	___ftadd
  2179  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2180  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2181  0374  083F               	movf	?___ftadd,w
  2182  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2183  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2184  0377  00B2               	movwf	_CalcMQ135$691^(0+128)
  2185  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2187  037A  0840               	movf	?___ftadd+1,w
  2188  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2189  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2190  037D  00B3               	movwf	(_CalcMQ135$691+1)^(0+128)
  2191  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2192  037F  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0380  0841               	movf	?___ftadd+2,w
  2194  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2195  0382  1303               	bcf	3,6	;RP1=0, select bank1
  2196  0383  00B4               	movwf	(_CalcMQ135$691+2)^(0+128)
  2197                           
  2198                           ;mq135_module.h: 106: float co2 = 0.00035 + (0.02718 * ratio) + (1.39538 * ratio2) + (0.
      +                          0018 * ratio3) +
  2199                           ;mq135_module.h: 107: (-0.003333333 * ratio4) + (-0.001923077 * ratio5) + (1.130128205 *
      +                           ratio6);
  2200  0384  3080               	movlw	128
  2201  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0387  00BF               	movwf	___ftadd@f1
  2204  0388  30B7               	movlw	183
  2205  0389  00C0               	movwf	___ftadd@f1+1
  2206  038A  3039               	movlw	57
  2207  038B  00C1               	movwf	___ftadd@f1+2
  2208  038C  1683               	bsf	3,5	;RP0=1, select bank1
  2209  038D  1303               	bcf	3,6	;RP1=0, select bank1
  2210  038E  0832               	movf	_CalcMQ135$691^(0+128),w
  2211  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0391  00C2               	movwf	___ftadd@f2
  2214  0392  1683               	bsf	3,5	;RP0=1, select bank1
  2215  0393  1303               	bcf	3,6	;RP1=0, select bank1
  2216  0394  0833               	movf	(_CalcMQ135$691+1)^(0+128),w
  2217  0395  1283               	bcf	3,5	;RP0=0, select bank0
  2218  0396  1303               	bcf	3,6	;RP1=0, select bank0
  2219  0397  00C3               	movwf	___ftadd@f2+1
  2220  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0399  1303               	bcf	3,6	;RP1=0, select bank1
  2222  039A  0834               	movf	(_CalcMQ135$691+2)^(0+128),w
  2223  039B  1283               	bcf	3,5	;RP0=0, select bank0
  2224  039C  1303               	bcf	3,6	;RP1=0, select bank0
  2225  039D  00C4               	movwf	___ftadd@f2+2
  2226  039E  120A  158A  26F7  120A  118A  	fcall	___ftadd
  2227  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  2228  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  2229  03A5  083F               	movf	?___ftadd,w
  2230  03A6  1683               	bsf	3,5	;RP0=1, select bank1
  2231  03A7  1303               	bcf	3,6	;RP1=0, select bank1
  2232  03A8  00C1               	movwf	CalcMQ135@co2^(0+128)
  2233  03A9  1283               	bcf	3,5	;RP0=0, select bank0
  2234  03AA  1303               	bcf	3,6	;RP1=0, select bank0
  2235  03AB  0840               	movf	?___ftadd+1,w
  2236  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  2237  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2238  03AE  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  2239  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  2240  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  2241  03B1  0841               	movf	?___ftadd+2,w
  2242  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  2243  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  2244  03B4  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  2245                           
  2246                           ;mq135_module.h: 109: co2 *= 415.58;
  2247  03B5  30CA               	movlw	202
  2248  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2249  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2250  03B8  00AF               	movwf	___ftmul@f1
  2251  03B9  30CF               	movlw	207
  2252  03BA  00B0               	movwf	___ftmul@f1+1
  2253  03BB  3043               	movlw	67
  2254  03BC  00B1               	movwf	___ftmul@f1+2
  2255  03BD  1683               	bsf	3,5	;RP0=1, select bank1
  2256  03BE  1303               	bcf	3,6	;RP1=0, select bank1
  2257  03BF  0841               	movf	CalcMQ135@co2^(0+128),w
  2258  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  2259  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  2260  03C2  00B2               	movwf	___ftmul@f2
  2261  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2262  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  2263  03C5  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  2264  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2265  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2266  03C8  00B3               	movwf	___ftmul@f2+1
  2267  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2268  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  2269  03CB  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  2270  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2271  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2272  03CE  00B4               	movwf	___ftmul@f2+2
  2273  03CF  120A  158A  2624   	fcall	___ftmul
  2274  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  2275  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  2276  03D4  082F               	movf	?___ftmul,w
  2277  03D5  1683               	bsf	3,5	;RP0=1, select bank1
  2278  03D6  1303               	bcf	3,6	;RP1=0, select bank1
  2279  03D7  00C1               	movwf	CalcMQ135@co2^(0+128)
  2280  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  2281  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  2282  03DA  0830               	movf	?___ftmul+1,w
  2283  03DB  1683               	bsf	3,5	;RP0=1, select bank1
  2284  03DC  1303               	bcf	3,6	;RP1=0, select bank1
  2285  03DD  00C2               	movwf	(CalcMQ135@co2+1)^(0+128)
  2286  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2287  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2288  03E0  0831               	movf	?___ftmul+2,w
  2289  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2290  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  2291  03E3  00C3               	movwf	(CalcMQ135@co2+2)^(0+128)
  2292                           
  2293                           ;mq135_module.h: 110: return co2;
  2294  03E4  0841               	movf	CalcMQ135@co2^(0+128),w
  2295  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2296  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2297  03E7  00CF               	movwf	?_CalcMQ135
  2298  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2299  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2300  03EA  0842               	movf	(CalcMQ135@co2+1)^(0+128),w
  2301  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2302  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2303  03ED  00D0               	movwf	?_CalcMQ135+1
  2304  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2305  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2306  03F0  0843               	movf	(CalcMQ135@co2+2)^(0+128),w
  2307  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2308  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2309  03F3  00D1               	movwf	?_CalcMQ135+2
  2310  03F4  0008               	return
  2311  03F5                     __end_of_CalcMQ135:	
  2312                           
  2313                           	psect	text4
  2314  0D6C                     __ptext4:	
  2315 ;; *************** function ___ftdiv *****************
  2316 ;; Defined at:
  2317 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  f2              3   31[BANK0 ] float 
  2320 ;;  f1              3   34[BANK0 ] float 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  f3              3   42[BANK0 ] float 
  2323 ;;  sign            1   46[BANK0 ] unsigned char 
  2324 ;;  exp             1   45[BANK0 ] unsigned char 
  2325 ;;  cntr            1   41[BANK0 ] unsigned char 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  3   31[BANK0 ] float 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0, pclath, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2335 ;;      Params:         0       6       0       0       0
  2336 ;;      Locals:         0       6       0       0       0
  2337 ;;      Temps:          0       4       0       0       0
  2338 ;;      Totals:         0      16       0       0       0
  2339 ;;Total ram usage:       16 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    2
  2342 ;; This function calls:
  2343 ;;		___ftpack
  2344 ;; This function is called by:
  2345 ;;		_CalcMQ135
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function ___ftdiv
  2351  0D6C                     ___ftdiv:	
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2355  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  2356  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  2357  0D6E  0842               	movf	___ftdiv@f1,w
  2358  0D6F  00C5               	movwf	??___ftdiv
  2359  0D70  0843               	movf	___ftdiv@f1+1,w
  2360  0D71  00C6               	movwf	??___ftdiv+1
  2361  0D72  0844               	movf	___ftdiv@f1+2,w
  2362  0D73  00C7               	movwf	??___ftdiv+2
  2363  0D74  1003               	clrc
  2364  0D75  0D46               	rlf	??___ftdiv+1,w
  2365  0D76  0D47               	rlf	??___ftdiv+2,w
  2366  0D77  00C8               	movwf	??___ftdiv+3
  2367  0D78  0848               	movf	??___ftdiv+3,w
  2368  0D79  00CD               	movwf	___ftdiv@exp
  2369  0D7A  08CD               	movf	___ftdiv@exp,f
  2370  0D7B  1D03               	skipz
  2371  0D7C  2D84               	goto	l2779
  2372  0D7D  3000               	movlw	0
  2373  0D7E  00BF               	movwf	?___ftdiv
  2374  0D7F  3000               	movlw	0
  2375  0D80  00C0               	movwf	?___ftdiv+1
  2376  0D81  3000               	movlw	0
  2377  0D82  00C1               	movwf	?___ftdiv+2
  2378  0D83  0008               	return
  2379  0D84                     l2779:	
  2380  0D84  083F               	movf	___ftdiv@f2,w
  2381  0D85  00C5               	movwf	??___ftdiv
  2382  0D86  0840               	movf	___ftdiv@f2+1,w
  2383  0D87  00C6               	movwf	??___ftdiv+1
  2384  0D88  0841               	movf	___ftdiv@f2+2,w
  2385  0D89  00C7               	movwf	??___ftdiv+2
  2386  0D8A  1003               	clrc
  2387  0D8B  0D46               	rlf	??___ftdiv+1,w
  2388  0D8C  0D47               	rlf	??___ftdiv+2,w
  2389  0D8D  00C8               	movwf	??___ftdiv+3
  2390  0D8E  0848               	movf	??___ftdiv+3,w
  2391  0D8F  00CE               	movwf	___ftdiv@sign
  2392  0D90  08CE               	movf	___ftdiv@sign,f
  2393  0D91  1D03               	skipz
  2394  0D92  2D9A               	goto	l2785
  2395  0D93  3000               	movlw	0
  2396  0D94  00BF               	movwf	?___ftdiv
  2397  0D95  3000               	movlw	0
  2398  0D96  00C0               	movwf	?___ftdiv+1
  2399  0D97  3000               	movlw	0
  2400  0D98  00C1               	movwf	?___ftdiv+2
  2401  0D99  0008               	return
  2402  0D9A                     l2785:	
  2403  0D9A  3000               	movlw	0
  2404  0D9B  00CA               	movwf	___ftdiv@f3
  2405  0D9C  3000               	movlw	0
  2406  0D9D  00CB               	movwf	___ftdiv@f3+1
  2407  0D9E  3000               	movlw	0
  2408  0D9F  00CC               	movwf	___ftdiv@f3+2
  2409  0DA0  3089               	movlw	137
  2410  0DA1  074E               	addwf	___ftdiv@sign,w
  2411  0DA2  00C5               	movwf	??___ftdiv
  2412  0DA3  0845               	movf	??___ftdiv,w
  2413  0DA4  02CD               	subwf	___ftdiv@exp,f
  2414  0DA5  0842               	movf	___ftdiv@f1,w
  2415  0DA6  00C5               	movwf	??___ftdiv
  2416  0DA7  0843               	movf	___ftdiv@f1+1,w
  2417  0DA8  00C6               	movwf	??___ftdiv+1
  2418  0DA9  0844               	movf	___ftdiv@f1+2,w
  2419  0DAA  00C7               	movwf	??___ftdiv+2
  2420  0DAB  3010               	movlw	16
  2421  0DAC                     u4225:	
  2422  0DAC  1003               	clrc
  2423  0DAD  0CC7               	rrf	??___ftdiv+2,f
  2424  0DAE  0CC6               	rrf	??___ftdiv+1,f
  2425  0DAF  0CC5               	rrf	??___ftdiv,f
  2426  0DB0  3EFF               	addlw	-1
  2427  0DB1  1D03               	skipz
  2428  0DB2  2DAC               	goto	u4225
  2429  0DB3  0845               	movf	??___ftdiv,w
  2430  0DB4  00C8               	movwf	??___ftdiv+3
  2431  0DB5  0848               	movf	??___ftdiv+3,w
  2432  0DB6  00CE               	movwf	___ftdiv@sign
  2433  0DB7  083F               	movf	___ftdiv@f2,w
  2434  0DB8  00C5               	movwf	??___ftdiv
  2435  0DB9  0840               	movf	___ftdiv@f2+1,w
  2436  0DBA  00C6               	movwf	??___ftdiv+1
  2437  0DBB  0841               	movf	___ftdiv@f2+2,w
  2438  0DBC  00C7               	movwf	??___ftdiv+2
  2439  0DBD  3010               	movlw	16
  2440  0DBE                     u4235:	
  2441  0DBE  1003               	clrc
  2442  0DBF  0CC7               	rrf	??___ftdiv+2,f
  2443  0DC0  0CC6               	rrf	??___ftdiv+1,f
  2444  0DC1  0CC5               	rrf	??___ftdiv,f
  2445  0DC2  3EFF               	addlw	-1
  2446  0DC3  1D03               	skipz
  2447  0DC4  2DBE               	goto	u4235
  2448  0DC5  0845               	movf	??___ftdiv,w
  2449  0DC6  00C8               	movwf	??___ftdiv+3
  2450  0DC7  0848               	movf	??___ftdiv+3,w
  2451  0DC8  06CE               	xorwf	___ftdiv@sign,f
  2452  0DC9  3080               	movlw	128
  2453  0DCA  00C5               	movwf	??___ftdiv
  2454  0DCB  0845               	movf	??___ftdiv,w
  2455  0DCC  05CE               	andwf	___ftdiv@sign,f
  2456  0DCD  17C3               	bsf	___ftdiv@f1+1,7
  2457  0DCE  30FF               	movlw	255
  2458  0DCF  05C2               	andwf	___ftdiv@f1,f
  2459  0DD0  30FF               	movlw	255
  2460  0DD1  05C3               	andwf	___ftdiv@f1+1,f
  2461  0DD2  3000               	movlw	0
  2462  0DD3  05C4               	andwf	___ftdiv@f1+2,f
  2463  0DD4  17C0               	bsf	___ftdiv@f2+1,7
  2464  0DD5  30FF               	movlw	255
  2465  0DD6  05BF               	andwf	___ftdiv@f2,f
  2466  0DD7  30FF               	movlw	255
  2467  0DD8  05C0               	andwf	___ftdiv@f2+1,f
  2468  0DD9  3000               	movlw	0
  2469  0DDA  05C1               	andwf	___ftdiv@f2+2,f
  2470  0DDB  3018               	movlw	24
  2471  0DDC  00C5               	movwf	??___ftdiv
  2472  0DDD  0845               	movf	??___ftdiv,w
  2473  0DDE  00C9               	movwf	___ftdiv@cntr
  2474  0DDF                     l2799:	
  2475  0DDF  3001               	movlw	1
  2476  0DE0                     u4245:	
  2477  0DE0  1003               	clrc
  2478  0DE1  0DCA               	rlf	___ftdiv@f3,f
  2479  0DE2  0DCB               	rlf	___ftdiv@f3+1,f
  2480  0DE3  0DCC               	rlf	___ftdiv@f3+2,f
  2481  0DE4  3EFF               	addlw	-1
  2482  0DE5  1D03               	skipz
  2483  0DE6  2DE0               	goto	u4245
  2484  0DE7  0841               	movf	___ftdiv@f2+2,w
  2485  0DE8  0244               	subwf	___ftdiv@f1+2,w
  2486  0DE9  1D03               	skipz
  2487  0DEA  2DF1               	goto	u4255
  2488  0DEB  0840               	movf	___ftdiv@f2+1,w
  2489  0DEC  0243               	subwf	___ftdiv@f1+1,w
  2490  0DED  1D03               	skipz
  2491  0DEE  2DF1               	goto	u4255
  2492  0DEF  083F               	movf	___ftdiv@f2,w
  2493  0DF0  0242               	subwf	___ftdiv@f1,w
  2494  0DF1                     u4255:	
  2495  0DF1  1C03               	skipc
  2496  0DF2  2DFE               	goto	l2807
  2497  0DF3  083F               	movf	___ftdiv@f2,w
  2498  0DF4  02C2               	subwf	___ftdiv@f1,f
  2499  0DF5  0840               	movf	___ftdiv@f2+1,w
  2500  0DF6  1C03               	skipc
  2501  0DF7  0F40               	incfsz	___ftdiv@f2+1,w
  2502  0DF8  02C3               	subwf	___ftdiv@f1+1,f
  2503  0DF9  0841               	movf	___ftdiv@f2+2,w
  2504  0DFA  1C03               	skipc
  2505  0DFB  0A41               	incf	___ftdiv@f2+2,w
  2506  0DFC  02C4               	subwf	___ftdiv@f1+2,f
  2507  0DFD  144A               	bsf	___ftdiv@f3,0
  2508  0DFE                     l2807:	
  2509  0DFE  3001               	movlw	1
  2510  0DFF                     u4265:	
  2511  0DFF  1003               	clrc
  2512  0E00  0DC2               	rlf	___ftdiv@f1,f
  2513  0E01  0DC3               	rlf	___ftdiv@f1+1,f
  2514  0E02  0DC4               	rlf	___ftdiv@f1+2,f
  2515  0E03  3EFF               	addlw	-1
  2516  0E04  1D03               	skipz
  2517  0E05  2DFF               	goto	u4265
  2518  0E06  3001               	movlw	1
  2519  0E07  02C9               	subwf	___ftdiv@cntr,f
  2520  0E08  1D03               	btfss	3,2
  2521  0E09  2DDF               	goto	l2799
  2522  0E0A  084A               	movf	___ftdiv@f3,w
  2523  0E0B  00A0               	movwf	___ftpack@arg
  2524  0E0C  084B               	movf	___ftdiv@f3+1,w
  2525  0E0D  00A1               	movwf	___ftpack@arg+1
  2526  0E0E  084C               	movf	___ftdiv@f3+2,w
  2527  0E0F  00A2               	movwf	___ftpack@arg+2
  2528  0E10  084D               	movf	___ftdiv@exp,w
  2529  0E11  00C5               	movwf	??___ftdiv
  2530  0E12  0845               	movf	??___ftdiv,w
  2531  0E13  00A3               	movwf	___ftpack@exp
  2532  0E14  084E               	movf	___ftdiv@sign,w
  2533  0E15  00C6               	movwf	??___ftdiv+1
  2534  0E16  0846               	movf	??___ftdiv+1,w
  2535  0E17  00A4               	movwf	___ftpack@sign
  2536  0E18  120A  158A  23C3   	fcall	___ftpack
  2537  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0E1D  0820               	movf	?___ftpack,w
  2540  0E1E  00BF               	movwf	?___ftdiv
  2541  0E1F  0821               	movf	?___ftpack+1,w
  2542  0E20  00C0               	movwf	?___ftdiv+1
  2543  0E21  0822               	movf	?___ftpack+2,w
  2544  0E22  00C1               	movwf	?___ftdiv+2
  2545  0E23  0008               	return
  2546  0E24                     __end_of___ftdiv:	
  2547                           
  2548                           	psect	text5
  2549  0B4D                     __ptext5:	
  2550 ;; *************** function _runDHT11 *****************
  2551 ;; Defined at:
  2552 ;;		line 88 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\dht11_module.h"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;		None               void
  2559 ;; Registers used:
  2560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0
  2568 ;;      Temps:          0       3       0       0       0
  2569 ;;      Totals:         0       3       0       0       0
  2570 ;;Total ram usage:        3 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    3
  2573 ;; This function calls:
  2574 ;;		_instCTRL
  2575 ;;		_printToLCD
  2576 ;;		_readDHT11
  2577 ;; This function is called by:
  2578 ;;		_main
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           
  2583                           ;psect for function _runDHT11
  2584  0B4D                     _runDHT11:	
  2585                           
  2586                           ;dht11_module.h: 90: if (readDHT11(&temperature, &humidity))
  2587                           
  2588                           ;incstack = 0
  2589                           ; Regs used in _runDHT11: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2590  0B4D  3066               	movlw	_humidity& (0+255)
  2591  0B4E  1283               	bcf	3,5	;RP0=0, select bank0
  2592  0B4F  1303               	bcf	3,6	;RP1=0, select bank0
  2593  0B50  00AE               	movwf	??_runDHT11
  2594  0B51  082E               	movf	??_runDHT11,w
  2595  0B52  00F5               	movwf	readDHT11@humidity
  2596  0B53  3067               	movlw	_temperature& (0+255)
  2597  0B54  120A  158A  24BB  120A  158A  	fcall	_readDHT11
  2598  0B59  3A00               	xorlw	0
  2599  0B5A  1D03               	btfss	3,2
  2600  0B5B  2B73               	goto	l3089
  2601                           
  2602                           ;dht11_module.h: 94: else
  2603                           ;dht11_module.h: 95: {
  2604                           ;dht11_module.h: 96: instCTRL(0x80);
  2605                           
  2606                           ;dht11_module.h: 91: {
  2607                           ;dht11_module.h: 93: }
  2608  0B5C  3080               	movlw	128
  2609  0B5D  120A  158A  21C5  120A  158A  	fcall	_instCTRL
  2610                           
  2611                           ;dht11_module.h: 97: instCTRL(0x0C);
  2612  0B62  300C               	movlw	12
  2613  0B63  120A  158A  21C5  120A  158A  	fcall	_instCTRL
  2614                           
  2615                           ;dht11_module.h: 98: printToLCD("Error reading DHT11");
  2616  0B68  300B               	movlw	low (STR_2-__stringbase)
  2617  0B69  1283               	bcf	3,5	;RP0=0, select bank0
  2618  0B6A  1303               	bcf	3,6	;RP1=0, select bank0
  2619  0B6B  00A0               	movwf	printToLCD@str
  2620  0B6C  3080               	movlw	128
  2621  0B6D  00A1               	movwf	printToLCD@str+1
  2622  0B6E  120A  118A  27D4  120A  158A  	fcall	_printToLCD
  2623  0B73                     l3089:	
  2624                           
  2625                           ;dht11_module.h: 99: }
  2626                           ;dht11_module.h: 100: _delay((unsigned long)((500)*(4000000/4000.0)));
  2627  0B73  3003               	movlw	3
  2628  0B74  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0B75  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0B76  00B0               	movwf	??_runDHT11+2
  2631  0B77  308A               	movlw	138
  2632  0B78  00AF               	movwf	??_runDHT11+1
  2633  0B79  3056               	movlw	86
  2634  0B7A  00AE               	movwf	??_runDHT11
  2635  0B7B                     u5217:	
  2636  0B7B  0BAE               	decfsz	??_runDHT11,f
  2637  0B7C  2B7B               	goto	u5217
  2638  0B7D  0BAF               	decfsz	??_runDHT11+1,f
  2639  0B7E  2B7B               	goto	u5217
  2640  0B7F  0BB0               	decfsz	??_runDHT11+2,f
  2641  0B80  2B7B               	goto	u5217
  2642  0B81  2B82               	nop2
  2643  0B82  0008               	return
  2644  0B83                     __end_of_runDHT11:	
  2645                           
  2646                           	psect	text6
  2647  0CBB                     __ptext6:	
  2648 ;; *************** function _readDHT11 *****************
  2649 ;; Defined at:
  2650 ;;		line 25 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\dht11_module.h"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  temperature     1    wreg     PTR unsigned char 
  2653 ;;		 -> temperature(1), 
  2654 ;;  humidity        1    5[COMMON] PTR unsigned char 
  2655 ;;		 -> humidity(1), 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  temperature     1    6[BANK0 ] PTR unsigned char 
  2658 ;;		 -> temperature(1), 
  2659 ;;  bits            5    7[BANK0 ] unsigned char [5]
  2660 ;;  j               1   13[BANK0 ] unsigned char 
  2661 ;;  i               1   12[BANK0 ] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      unsigned char 
  2664 ;; Registers used:
  2665 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2671 ;;      Params:         1       0       0       0       0
  2672 ;;      Locals:         0       8       0       0       0
  2673 ;;      Temps:          0       6       0       0       0
  2674 ;;      Totals:         1      14       0       0       0
  2675 ;;Total ram usage:       15 bytes
  2676 ;; Hardware stack levels used:    1
  2677 ;; Hardware stack levels required when called:    1
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_runDHT11
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _readDHT11
  2687  0CBB                     _readDHT11:	
  2688                           
  2689                           ;incstack = 0
  2690                           ; Regs used in _readDHT11: [wreg-fsr0h+status,2+status,0]
  2691                           ;readDHT11@temperature stored from wreg
  2692  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  2693  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  2694  0CBD  00A6               	movwf	readDHT11@temperature
  2695                           
  2696                           ;dht11_module.h: 27: uint8_t bits[5] = {0};
  2697  0CBE  3027               	movlw	readDHT11@bits& (0+255)
  2698  0CBF  0084               	movwf	4
  2699  0CC0  085E               	movf	readDHT11@F1215,w
  2700  0CC1  1383               	bcf	3,7	;select IRP bank0
  2701  0CC2  0080               	movwf	0
  2702  0CC3  0A84               	incf	4,f
  2703  0CC4  085F               	movf	readDHT11@F1215+1,w
  2704  0CC5  0080               	movwf	0
  2705  0CC6  0A84               	incf	4,f
  2706  0CC7  0860               	movf	readDHT11@F1215+2,w
  2707  0CC8  0080               	movwf	0
  2708  0CC9  0A84               	incf	4,f
  2709  0CCA  0861               	movf	readDHT11@F1215+3,w
  2710  0CCB  0080               	movwf	0
  2711  0CCC  0A84               	incf	4,f
  2712  0CCD  0862               	movf	readDHT11@F1215+4,w
  2713  0CCE  0080               	movwf	0
  2714                           
  2715                           ;dht11_module.h: 28: uint8_t i, j;
  2716                           ;dht11_module.h: 31: TRISBbits.TRISB2 = 0;
  2717  0CCF  1683               	bsf	3,5	;RP0=1, select bank1
  2718  0CD0  1303               	bcf	3,6	;RP1=0, select bank1
  2719  0CD1  1106               	bcf	6,2	;volatile
  2720                           
  2721                           ;dht11_module.h: 32: PORTBbits.RB2 = 0;
  2722  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  2724  0CD4  1106               	bcf	6,2	;volatile
  2725                           
  2726                           ;dht11_module.h: 33: _delay((unsigned long)((18)*(4000000/4000.0)));
  2727  0CD5  3018               	movlw	24
  2728  0CD6  00A1               	movwf	??_readDHT11+1
  2729  0CD7  305F               	movlw	95
  2730  0CD8  00A0               	movwf	??_readDHT11
  2731  0CD9                     u5227:	
  2732  0CD9  0BA0               	decfsz	??_readDHT11,f
  2733  0CDA  2CD9               	goto	u5227
  2734  0CDB  0BA1               	decfsz	??_readDHT11+1,f
  2735  0CDC  2CD9               	goto	u5227
  2736                           
  2737                           ;dht11_module.h: 34: PORTBbits.RB2 = 1;
  2738  0CDD  1283               	bcf	3,5	;RP0=0, select bank0
  2739  0CDE  1303               	bcf	3,6	;RP1=0, select bank0
  2740  0CDF  1506               	bsf	6,2	;volatile
  2741                           
  2742                           ;dht11_module.h: 35: _delay((unsigned long)((20)*(4000000/4000000.0)));
  2743  0CE0  3006               	movlw	6
  2744  0CE1  00A0               	movwf	??_readDHT11
  2745  0CE2                     u5237:	
  2746  0CE2  0BA0               	decfsz	??_readDHT11,f
  2747  0CE3  2CE2               	goto	u5237
  2748  0CE4  0000               	nop
  2749                           
  2750                           ;dht11_module.h: 36: TRISBbits.TRISB2 = 1;
  2751  0CE5  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0CE6  1303               	bcf	3,6	;RP1=0, select bank1
  2753  0CE7  1506               	bsf	6,2	;volatile
  2754                           
  2755                           ;dht11_module.h: 39: _delay((unsigned long)((40)*(4000000/4000000.0)));
  2756  0CE8  300D               	movlw	13
  2757  0CE9  1283               	bcf	3,5	;RP0=0, select bank0
  2758  0CEA  1303               	bcf	3,6	;RP1=0, select bank0
  2759  0CEB  00A0               	movwf	??_readDHT11
  2760  0CEC                     u5247:	
  2761  0CEC  0BA0               	decfsz	??_readDHT11,f
  2762  0CED  2CEC               	goto	u5247
  2763                           
  2764                           ;dht11_module.h: 40: if (PORTBbits.RB2)
  2765  0CEE  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0CEF  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0CF0  1D06               	btfss	6,2	;volatile
  2768  0CF1  2CF4               	goto	l2025
  2769                           
  2770                           ;dht11_module.h: 41: return 0;
  2771  0CF2  3000               	movlw	0
  2772  0CF3  0008               	return
  2773  0CF4                     l2025:	
  2774                           
  2775                           ;dht11_module.h: 42: _delay((unsigned long)((80)*(4000000/4000000.0)));
  2776  0CF4  301A               	movlw	26
  2777  0CF5  00A0               	movwf	??_readDHT11
  2778  0CF6                     u5257:	
  2779  0CF6  0BA0               	decfsz	??_readDHT11,f
  2780  0CF7  2CF6               	goto	u5257
  2781  0CF8  0000               	nop
  2782                           
  2783                           ;dht11_module.h: 43: if (!PORTBbits.RB2)
  2784  0CF9  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0CFA  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0CFB  1906               	btfsc	6,2	;volatile
  2787  0CFC  2CFF               	goto	l2033
  2788                           
  2789                           ;dht11_module.h: 44: return 0;
  2790  0CFD  3000               	movlw	0
  2791  0CFE  0008               	return
  2792  0CFF                     l2033:	
  2793                           
  2794                           ;dht11_module.h: 45: _delay((unsigned long)((80)*(4000000/4000000.0)));
  2795  0CFF  301A               	movlw	26
  2796  0D00  00A0               	movwf	??_readDHT11
  2797  0D01                     u5267:	
  2798  0D01  0BA0               	decfsz	??_readDHT11,f
  2799  0D02  2D01               	goto	u5267
  2800  0D03  0000               	nop
  2801                           
  2802                           ;dht11_module.h: 48: for (j = 0; j < 5; j++)
  2803  0D04  1283               	bcf	3,5	;RP0=0, select bank0
  2804  0D05  1303               	bcf	3,6	;RP1=0, select bank0
  2805  0D06  01AD               	clrf	readDHT11@j
  2806  0D07  3005               	movlw	5
  2807  0D08  022D               	subwf	readDHT11@j,w
  2808  0D09  1803               	btfsc	3,0
  2809  0D0A  2D41               	goto	l2061
  2810  0D0B                     l2041:	
  2811                           
  2812                           ;dht11_module.h: 49: {
  2813                           ;dht11_module.h: 50: for (i = 0; i < 8; i++)
  2814  0D0B  01AC               	clrf	readDHT11@i
  2815  0D0C  3008               	movlw	8
  2816  0D0D  022C               	subwf	readDHT11@i,w
  2817  0D0E  1803               	btfsc	3,0
  2818  0D0F  2D39               	goto	l2057
  2819  0D10                     l94:	
  2820                           ;dht11_module.h: 53: ;
  2821                           
  2822                           ;dht11_module.h: 51: {
  2823                           ;dht11_module.h: 52: while (!PORTBbits.RB2)
  2824                           
  2825  0D10  1D06               	btfss	6,2	;volatile
  2826  0D11  2D10               	goto	l94
  2827                           
  2828                           ;dht11_module.h: 54: _delay((unsigned long)((30)*(4000000/4000000.0)));
  2829  0D12  3009               	movlw	9
  2830  0D13  00A0               	movwf	??_readDHT11
  2831  0D14                     u5277:	
  2832  0D14  0BA0               	decfsz	??_readDHT11,f
  2833  0D15  2D14               	goto	u5277
  2834  0D16  2D17               	nop2	;nop
  2835                           
  2836                           ;dht11_module.h: 55: if (PORTBbits.RB2)
  2837  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  2838  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  2839  0D19  1D06               	btfss	6,2	;volatile
  2840  0D1A  2D31               	goto	l2053
  2841                           
  2842                           ;dht11_module.h: 56: {
  2843                           ;dht11_module.h: 57: bits[j] |= (1 << (7 - i));
  2844  0D1B  3001               	movlw	1
  2845  0D1C  00A0               	movwf	??_readDHT11
  2846  0D1D  032C               	decf	readDHT11@i,w
  2847  0D1E  3AFF               	xorlw	255
  2848  0D1F  3E07               	addlw	7
  2849  0D20  3E01               	addlw	1
  2850  0D21  2D24               	goto	u2704
  2851  0D22                     u2705:	
  2852  0D22  1003               	clrc
  2853  0D23  0DA0               	rlf	??_readDHT11,f
  2854  0D24                     u2704:	
  2855  0D24  3EFF               	addlw	-1
  2856  0D25  1D03               	skipz
  2857  0D26  2D22               	goto	u2705
  2858  0D27  0820               	movf	??_readDHT11,w
  2859  0D28  00A1               	movwf	??_readDHT11+1
  2860  0D29  082D               	movf	readDHT11@j,w
  2861  0D2A  3E27               	addlw	readDHT11@bits& (0+255)
  2862  0D2B  0084               	movwf	4
  2863  0D2C  0821               	movf	??_readDHT11+1,w
  2864  0D2D  1383               	bcf	3,7	;select IRP bank0
  2865  0D2E  0480               	iorwf	0,f
  2866  0D2F                     l98:	
  2867                           ;dht11_module.h: 59: ;
  2868                           
  2869                           ;dht11_module.h: 58: while (PORTBbits.RB2)
  2870                           
  2871  0D2F  1906               	btfsc	6,2	;volatile
  2872  0D30  2D2F               	goto	l98
  2873  0D31                     l2053:	
  2874  0D31  3001               	movlw	1
  2875  0D32  00A0               	movwf	??_readDHT11
  2876  0D33  0820               	movf	??_readDHT11,w
  2877  0D34  07AC               	addwf	readDHT11@i,f
  2878  0D35  3008               	movlw	8
  2879  0D36  022C               	subwf	readDHT11@i,w
  2880  0D37  1C03               	skipc
  2881  0D38  2D10               	goto	l94
  2882  0D39                     l2057:	
  2883  0D39  3001               	movlw	1
  2884  0D3A  00A0               	movwf	??_readDHT11
  2885  0D3B  0820               	movf	??_readDHT11,w
  2886  0D3C  07AD               	addwf	readDHT11@j,f
  2887  0D3D  3005               	movlw	5
  2888  0D3E  022D               	subwf	readDHT11@j,w
  2889  0D3F  1C03               	skipc
  2890  0D40  2D0B               	goto	l2041
  2891  0D41                     l2061:	
  2892                           
  2893                           ;dht11_module.h: 60: }
  2894                           ;dht11_module.h: 61: }
  2895                           ;dht11_module.h: 62: }
  2896                           ;dht11_module.h: 65: if (bits[4] != (bits[0] + bits[1] + bits[2] + bits[3]))
  2897  0D41  0827               	movf	readDHT11@bits,w
  2898  0D42  0728               	addwf	readDHT11@bits+1,w
  2899  0D43  00A0               	movwf	??_readDHT11
  2900  0D44  01A1               	clrf	??_readDHT11+1
  2901  0D45  0DA1               	rlf	??_readDHT11+1,f
  2902  0D46  0829               	movf	readDHT11@bits+2,w
  2903  0D47  0720               	addwf	??_readDHT11,w
  2904  0D48  00A2               	movwf	??_readDHT11+2
  2905  0D49  3000               	movlw	0
  2906  0D4A  1803               	skipnc
  2907  0D4B  3001               	movlw	1
  2908  0D4C  0721               	addwf	??_readDHT11+1,w
  2909  0D4D  00A3               	movwf	??_readDHT11+3
  2910  0D4E  082A               	movf	readDHT11@bits+3,w
  2911  0D4F  0722               	addwf	??_readDHT11+2,w
  2912  0D50  00A4               	movwf	??_readDHT11+4
  2913  0D51  3000               	movlw	0
  2914  0D52  1803               	skipnc
  2915  0D53  3001               	movlw	1
  2916  0D54  0723               	addwf	??_readDHT11+3,w
  2917  0D55  00A5               	movwf	??_readDHT11+5
  2918  0D56  082B               	movf	readDHT11@bits+4,w
  2919  0D57  0624               	xorwf	??_readDHT11+4,w
  2920  0D58  0425               	iorwf	??_readDHT11+5,w
  2921  0D59  1903               	skipnz
  2922  0D5A  2D5D               	goto	l2067
  2923                           
  2924                           ;dht11_module.h: 66: return 0;
  2925  0D5B  3000               	movlw	0
  2926  0D5C  0008               	return
  2927  0D5D                     l2067:	
  2928                           
  2929                           ;dht11_module.h: 68: *humidity = bits[0];
  2930  0D5D  0827               	movf	readDHT11@bits,w
  2931  0D5E  00A0               	movwf	??_readDHT11
  2932  0D5F  0875               	movf	readDHT11@humidity,w
  2933  0D60  0084               	movwf	4
  2934  0D61  0820               	movf	??_readDHT11,w
  2935  0D62  1383               	bcf	3,7	;select IRP bank0
  2936  0D63  0080               	movwf	0
  2937                           
  2938                           ;dht11_module.h: 69: *temperature = bits[2];
  2939  0D64  0829               	movf	readDHT11@bits+2,w
  2940  0D65  00A0               	movwf	??_readDHT11
  2941  0D66  0826               	movf	readDHT11@temperature,w
  2942  0D67  0084               	movwf	4
  2943  0D68  0820               	movf	??_readDHT11,w
  2944  0D69  0080               	movwf	0
  2945                           
  2946                           ;dht11_module.h: 71: return 1;
  2947  0D6A  3001               	movlw	1
  2948  0D6B  0008               	return
  2949  0D6C                     __end_of_readDHT11:	
  2950                           
  2951                           	psect	text7
  2952  09EE                     __ptext7:	
  2953 ;; *************** function _runClock *****************
  2954 ;; Defined at:
  2955 ;;		line 33 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\time_scheduler.h"
  2956 ;; Parameters:    Size  Location     Type
  2957 ;;		None
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;		None               void
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2969 ;;      Params:         0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0
  2971 ;;      Temps:          2       0       0       0       0
  2972 ;;      Totals:         2       0       0       0       0
  2973 ;;Total ram usage:        2 bytes
  2974 ;; Hardware stack levels used:    1
  2975 ;; Hardware stack levels required when called:    1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           
  2984                           ;psect for function _runClock
  2985  09EE                     _runClock:	
  2986                           
  2987                           ;time_scheduler.h: 36: minutes++;
  2988                           
  2989                           ;incstack = 0
  2990                           ; Regs used in _runClock: [wreg+status,2+status,0]
  2991  09EE  3001               	movlw	1
  2992  09EF  00F5               	movwf	??_runClock
  2993  09F0  0875               	movf	??_runClock,w
  2994  09F1  1283               	bcf	3,5	;RP0=0, select bank0
  2995  09F2  1303               	bcf	3,6	;RP1=0, select bank0
  2996  09F3  07E5               	addwf	_minutes,f	;volatile
  2997                           
  2998                           ;time_scheduler.h: 37: if (minutes >= 60)
  2999  09F4  303C               	movlw	60
  3000  09F5  0265               	subwf	_minutes,w	;volatile
  3001  09F6  1C03               	skipc
  3002  09F7  2A01               	goto	l2323
  3003                           
  3004                           ;time_scheduler.h: 38: {
  3005                           ;time_scheduler.h: 39: minutes = 0;
  3006  09F8  01E5               	clrf	_minutes	;volatile
  3007                           
  3008                           ;time_scheduler.h: 40: hours++;
  3009  09F9  3001               	movlw	1
  3010  09FA  00F5               	movwf	??_runClock
  3011  09FB  0875               	movf	??_runClock,w
  3012  09FC  07E8               	addwf	_hours,f	;volatile
  3013                           
  3014                           ;time_scheduler.h: 41: if (hours >= 24)
  3015  09FD  3018               	movlw	24
  3016  09FE  0268               	subwf	_hours,w	;volatile
  3017  09FF  1803               	btfsc	3,0
  3018                           
  3019                           ;time_scheduler.h: 42: {
  3020                           ;time_scheduler.h: 43: hours = 0;
  3021  0A00  01E8               	clrf	_hours	;volatile
  3022  0A01                     l2323:	
  3023                           
  3024                           ;time_scheduler.h: 44: }
  3025                           ;time_scheduler.h: 45: }
  3026                           ;time_scheduler.h: 46: _delay((unsigned long)((100)*(4000000/4000.0)));
  3027  0A01  3082               	movlw	130
  3028  0A02  00F6               	movwf	??_runClock+1
  3029  0A03  30DD               	movlw	221
  3030  0A04  00F5               	movwf	??_runClock
  3031  0A05                     u5287:	
  3032  0A05  0BF5               	decfsz	??_runClock,f
  3033  0A06  2A05               	goto	u5287
  3034  0A07  0BF6               	decfsz	??_runClock+1,f
  3035  0A08  2A05               	goto	u5287
  3036  0A09  2A0A               	nop2
  3037  0A0A  0008               	return
  3038  0A0B                     __end_of_runClock:	
  3039                           
  3040                           	psect	text8
  3041  0A2F                     __ptext8:	
  3042 ;; *************** function _initLCD *****************
  3043 ;; Defined at:
  3044 ;;		line 42 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\lcd_functions.h"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;		None
  3047 ;; Auto vars:     Size  Location     Type
  3048 ;;		None
  3049 ;; Return value:  Size  Location     Type
  3050 ;;		None               void
  3051 ;; Registers used:
  3052 ;;		wreg, status,2, status,0, pclath, cstack
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3058 ;;      Params:         0       0       0       0       0
  3059 ;;      Locals:         0       0       0       0       0
  3060 ;;      Temps:          0       1       0       0       0
  3061 ;;      Totals:         0       1       0       0       0
  3062 ;;Total ram usage:        1 bytes
  3063 ;; Hardware stack levels used:    1
  3064 ;; Hardware stack levels required when called:    2
  3065 ;; This function calls:
  3066 ;;		_instCTRL
  3067 ;; This function is called by:
  3068 ;;		_main
  3069 ;; This function uses a non-reentrant model
  3070 ;;
  3071                           
  3072                           
  3073                           ;psect for function _initLCD
  3074  0A2F                     _initLCD:	
  3075                           
  3076                           ;lcd_functions.h: 44: instCTRL(0x38);
  3077                           
  3078                           ;incstack = 0
  3079                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3080  0A2F  3038               	movlw	56
  3081  0A30  120A  158A  21C5  120A  158A  	fcall	_instCTRL
  3082                           
  3083                           ;lcd_functions.h: 45: _delay((unsigned long)((50)*(4000000/4000000.0)));
  3084  0A35  3010               	movlw	16
  3085  0A36  1283               	bcf	3,5	;RP0=0, select bank0
  3086  0A37  1303               	bcf	3,6	;RP1=0, select bank0
  3087  0A38  00A0               	movwf	??_initLCD
  3088  0A39                     u5297:	
  3089  0A39  0BA0               	decfsz	??_initLCD,f
  3090  0A3A  2A39               	goto	u5297
  3091  0A3B  0000               	nop
  3092                           
  3093                           ;lcd_functions.h: 46: instCTRL(0x0C);
  3094  0A3C  300C               	movlw	12
  3095  0A3D  120A  158A  21C5  120A  158A  	fcall	_instCTRL
  3096                           
  3097                           ;lcd_functions.h: 47: instCTRL(0x01);
  3098  0A42  3001               	movlw	1
  3099  0A43  120A  158A  21C5  120A  158A  	fcall	_instCTRL
  3100                           
  3101                           ;lcd_functions.h: 48: instCTRL(0x06);
  3102  0A48  3006               	movlw	6
  3103  0A49  120A  158A  21C5  120A  158A  	fcall	_instCTRL
  3104                           
  3105                           ;lcd_functions.h: 49: instCTRL(0x0F);
  3106  0A4E  300F               	movlw	15
  3107  0A4F  120A  158A  21C5   	fcall	_instCTRL
  3108  0A52  0008               	return
  3109  0A53                     __end_of_initLCD:	
  3110                           
  3111                           	psect	text9
  3112  098B                     __ptext9:	
  3113 ;; *************** function _initDHT11 *****************
  3114 ;; Defined at:
  3115 ;;		line 19 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\dht11_module.h"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;		None               void
  3122 ;; Registers used:
  3123 ;;		None
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3129 ;;      Params:         0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    1
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           
  3144                           ;psect for function _initDHT11
  3145  098B                     _initDHT11:	
  3146                           
  3147                           ;dht11_module.h: 21: TRISBbits.TRISB2 = 0;
  3148                           
  3149                           ;incstack = 0
  3150                           ; Regs used in _initDHT11: []
  3151  098B  1683               	bsf	3,5	;RP0=1, select bank1
  3152  098C  1303               	bcf	3,6	;RP1=0, select bank1
  3153  098D  1106               	bcf	6,2	;volatile
  3154                           
  3155                           ;dht11_module.h: 22: PORTBbits.RB2 = 1;
  3156  098E  1283               	bcf	3,5	;RP0=0, select bank0
  3157  098F  1303               	bcf	3,6	;RP1=0, select bank0
  3158  0990  1506               	bsf	6,2	;volatile
  3159  0991  0008               	return
  3160  0992                     __end_of_initDHT11:	
  3161                           
  3162                           	psect	text10
  3163  0A0B                     __ptext10:	
  3164 ;; *************** function _displayTime *****************
  3165 ;; Defined at:
  3166 ;;		line 49 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\time_scheduler.h"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  timeFormat     16   38[BANK0 ] unsigned char [16]
  3171 ;; Return value:  Size  Location     Type
  3172 ;;		None               void
  3173 ;; Registers used:
  3174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3180 ;;      Params:         0       0       0       0       0
  3181 ;;      Locals:         0      16       0       0       0
  3182 ;;      Temps:          0       5       0       0       0
  3183 ;;      Totals:         0      21       0       0       0
  3184 ;;Total ram usage:       21 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    3
  3187 ;; This function calls:
  3188 ;;		_printToLCD
  3189 ;;		_sprintf
  3190 ;; This function is called by:
  3191 ;;		_main
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           
  3196                           ;psect for function _displayTime
  3197  0A0B                     _displayTime:	
  3198                           
  3199                           ;time_scheduler.h: 51: char timeFormat[16];
  3200                           ;time_scheduler.h: 52: sprintf(timeFormat, "Time: %02d:%02d", hours, minutes);
  3201                           
  3202                           ;incstack = 0
  3203                           ; Regs used in _displayTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3204  0A0B  3040               	movlw	(STR_8-__stringbase)& (0+255)
  3205  0A0C  1283               	bcf	3,5	;RP0=0, select bank0
  3206  0A0D  1303               	bcf	3,6	;RP1=0, select bank0
  3207  0A0E  00C1               	movwf	??_displayTime
  3208  0A0F  0841               	movf	??_displayTime,w
  3209  0A10  00AC               	movwf	sprintf@f
  3210  0A11  0868               	movf	_hours,w	;volatile
  3211  0A12  00C2               	movwf	??_displayTime+1
  3212  0A13  01C3               	clrf	??_displayTime+2
  3213  0A14  0842               	movf	??_displayTime+1,w
  3214  0A15  00AD               	movwf	?_sprintf+1
  3215  0A16  0843               	movf	??_displayTime+2,w
  3216  0A17  00AE               	movwf	?_sprintf+2
  3217  0A18  0865               	movf	_minutes,w	;volatile
  3218  0A19  00C4               	movwf	??_displayTime+3
  3219  0A1A  01C5               	clrf	??_displayTime+4
  3220  0A1B  0844               	movf	??_displayTime+3,w
  3221  0A1C  00AF               	movwf	?_sprintf+3
  3222  0A1D  0845               	movf	??_displayTime+4,w
  3223  0A1E  00B0               	movwf	?_sprintf+4
  3224  0A1F  3046               	movlw	displayTime@timeFormat& (0+255)
  3225  0A20  120A  118A  23F5  120A  158A  	fcall	_sprintf
  3226                           
  3227                           ;time_scheduler.h: 53: printToLCD(timeFormat);
  3228  0A25  3046               	movlw	displayTime@timeFormat& (0+255)
  3229  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  3230  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  3231  0A28  00A0               	movwf	printToLCD@str
  3232  0A29  3000               	movlw	0
  3233  0A2A  00A1               	movwf	printToLCD@str+1
  3234  0A2B  120A  118A  27D4   	fcall	_printToLCD
  3235  0A2E  0008               	return
  3236  0A2F                     __end_of_displayTime:	
  3237                           
  3238                           	psect	text11
  3239  05D8                     __ptext11:	
  3240 ;; *************** function _displayPPM *****************
  3241 ;; Defined at:
  3242 ;;		line 37 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\mq135_module.h"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  strBuffer      20    0[BANK1 ] unsigned char [20]
  3247 ;;  ppmFraction     2   22[BANK1 ] int 
  3248 ;;  ppmWhole        2   20[BANK1 ] int 
  3249 ;;  bufPtr          1   24[BANK1 ] PTR unsigned char 
  3250 ;;		 -> displayPPM@strBuffer(20), 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;		None               void
  3253 ;; Registers used:
  3254 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         0       0       0       0       0
  3261 ;;      Locals:         0       0      25       0       0
  3262 ;;      Temps:          0       2       0       0       0
  3263 ;;      Totals:         0       2      25       0       0
  3264 ;;Total ram usage:       27 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    3
  3267 ;; This function calls:
  3268 ;;		___awtoft
  3269 ;;		___ftadd
  3270 ;;		___ftmul
  3271 ;;		___ftneg
  3272 ;;		___fttol
  3273 ;;		_printToLCD
  3274 ;;		_sprintf
  3275 ;; This function is called by:
  3276 ;;		_main
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           
  3281                           ;psect for function _displayPPM
  3282  05D8                     _displayPPM:	
  3283                           
  3284                           ;mq135_module.h: 39: char strBuffer[20];
  3285                           ;mq135_module.h: 40: int ppmWhole = (int)PPM;
  3286                           
  3287                           ;incstack = 0
  3288                           ; Regs used in _displayPPM: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3289  05D8  1683               	bsf	3,5	;RP0=1, select bank1
  3290  05D9  1303               	bcf	3,6	;RP1=0, select bank1
  3291  05DA  084B               	movf	_PPM^(0+128),w	;volatile
  3292  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  3293  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  3294  05DD  00CC               	movwf	___fttol@f1
  3295  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  3296  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  3297  05E0  084C               	movf	(_PPM+1)^(0+128),w	;volatile
  3298  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  3299  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  3300  05E3  00CD               	movwf	___fttol@f1+1
  3301  05E4  1683               	bsf	3,5	;RP0=1, select bank1
  3302  05E5  1303               	bcf	3,6	;RP1=0, select bank1
  3303  05E6  084D               	movf	(_PPM+2)^(0+128),w	;volatile
  3304  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  3305  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  3306  05E9  00CE               	movwf	___fttol@f1+2
  3307  05EA  120A  158A  242D  120A  118A  	fcall	___fttol
  3308  05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3309  05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3310  05F1  084D               	movf	?___fttol+1,w
  3311  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  3312  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  3313  05F4  01B5               	clrf	(displayPPM@ppmWhole+1)^(0+128)
  3314  05F5  07B5               	addwf	(displayPPM@ppmWhole+1)^(0+128),f
  3315  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  3316  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  3317  05F8  084C               	movf	?___fttol,w
  3318  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  3319  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  3320  05FB  01B4               	clrf	displayPPM@ppmWhole^(0+128)
  3321  05FC  07B4               	addwf	displayPPM@ppmWhole^(0+128),f
  3322                           
  3323                           ;mq135_module.h: 41: int ppmFraction = (int)((PPM - ppmWhole) * 100);
  3324  05FD  0835               	movf	(displayPPM@ppmWhole+1)^(0+128),w
  3325  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3326  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3327  0600  01A9               	clrf	___awtoft@c+1
  3328  0601  07A9               	addwf	___awtoft@c+1,f
  3329  0602  1683               	bsf	3,5	;RP0=1, select bank1
  3330  0603  1303               	bcf	3,6	;RP1=0, select bank1
  3331  0604  0834               	movf	displayPPM@ppmWhole^(0+128),w
  3332  0605  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0606  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0607  01A8               	clrf	___awtoft@c
  3335  0608  07A8               	addwf	___awtoft@c,f
  3336  0609  120A  158A  229C  120A  118A  	fcall	___awtoft
  3337  060E  1283               	bcf	3,5	;RP0=0, select bank0
  3338  060F  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0610  0828               	movf	?___awtoft,w
  3340  0611  00AC               	movwf	___ftneg@f1
  3341  0612  0829               	movf	?___awtoft+1,w
  3342  0613  00AD               	movwf	___ftneg@f1+1
  3343  0614  082A               	movf	?___awtoft+2,w
  3344  0615  00AE               	movwf	___ftneg@f1+2
  3345  0616  120A  158A  219A  120A  118A  	fcall	___ftneg
  3346  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3347  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3348  061D  082C               	movf	?___ftneg,w
  3349  061E  00C2               	movwf	___ftadd@f2
  3350  061F  082D               	movf	?___ftneg+1,w
  3351  0620  00C3               	movwf	___ftadd@f2+1
  3352  0621  082E               	movf	?___ftneg+2,w
  3353  0622  00C4               	movwf	___ftadd@f2+2
  3354  0623  1683               	bsf	3,5	;RP0=1, select bank1
  3355  0624  1303               	bcf	3,6	;RP1=0, select bank1
  3356  0625  084B               	movf	_PPM^(0+128),w	;volatile
  3357  0626  1283               	bcf	3,5	;RP0=0, select bank0
  3358  0627  1303               	bcf	3,6	;RP1=0, select bank0
  3359  0628  00BF               	movwf	___ftadd@f1
  3360  0629  1683               	bsf	3,5	;RP0=1, select bank1
  3361  062A  1303               	bcf	3,6	;RP1=0, select bank1
  3362  062B  084C               	movf	(_PPM+1)^(0+128),w	;volatile
  3363  062C  1283               	bcf	3,5	;RP0=0, select bank0
  3364  062D  1303               	bcf	3,6	;RP1=0, select bank0
  3365  062E  00C0               	movwf	___ftadd@f1+1
  3366  062F  1683               	bsf	3,5	;RP0=1, select bank1
  3367  0630  1303               	bcf	3,6	;RP1=0, select bank1
  3368  0631  084D               	movf	(_PPM+2)^(0+128),w	;volatile
  3369  0632  1283               	bcf	3,5	;RP0=0, select bank0
  3370  0633  1303               	bcf	3,6	;RP1=0, select bank0
  3371  0634  00C1               	movwf	___ftadd@f1+2
  3372  0635  120A  158A  26F7  120A  118A  	fcall	___ftadd
  3373  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3374  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3375  063C  083F               	movf	?___ftadd,w
  3376  063D  00B2               	movwf	___ftmul@f2
  3377  063E  0840               	movf	?___ftadd+1,w
  3378  063F  00B3               	movwf	___ftmul@f2+1
  3379  0640  0841               	movf	?___ftadd+2,w
  3380  0641  00B4               	movwf	___ftmul@f2+2
  3381  0642  3000               	movlw	0
  3382  0643  00AF               	movwf	___ftmul@f1
  3383  0644  30C8               	movlw	200
  3384  0645  00B0               	movwf	___ftmul@f1+1
  3385  0646  3042               	movlw	66
  3386  0647  00B1               	movwf	___ftmul@f1+2
  3387  0648  120A  158A  2624  120A  118A  	fcall	___ftmul
  3388  064D  1283               	bcf	3,5	;RP0=0, select bank0
  3389  064E  1303               	bcf	3,6	;RP1=0, select bank0
  3390  064F  082F               	movf	?___ftmul,w
  3391  0650  00CC               	movwf	___fttol@f1
  3392  0651  0830               	movf	?___ftmul+1,w
  3393  0652  00CD               	movwf	___fttol@f1+1
  3394  0653  0831               	movf	?___ftmul+2,w
  3395  0654  00CE               	movwf	___fttol@f1+2
  3396  0655  120A  158A  242D  120A  118A  	fcall	___fttol
  3397  065A  1283               	bcf	3,5	;RP0=0, select bank0
  3398  065B  1303               	bcf	3,6	;RP1=0, select bank0
  3399  065C  084D               	movf	?___fttol+1,w
  3400  065D  1683               	bsf	3,5	;RP0=1, select bank1
  3401  065E  1303               	bcf	3,6	;RP1=0, select bank1
  3402  065F  01B7               	clrf	(displayPPM@ppmFraction+1)^(0+128)
  3403  0660  07B7               	addwf	(displayPPM@ppmFraction+1)^(0+128),f
  3404  0661  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0662  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0663  084C               	movf	?___fttol,w
  3407  0664  1683               	bsf	3,5	;RP0=1, select bank1
  3408  0665  1303               	bcf	3,6	;RP1=0, select bank1
  3409  0666  01B6               	clrf	displayPPM@ppmFraction^(0+128)
  3410  0667  07B6               	addwf	displayPPM@ppmFraction^(0+128),f
  3411                           
  3412                           ;mq135_module.h: 44: char *bufPtr = strBuffer;
  3413  0668  30A0               	movlw	displayPPM@strBuffer& (0+255)
  3414  0669  1283               	bcf	3,5	;RP0=0, select bank0
  3415  066A  1303               	bcf	3,6	;RP1=0, select bank0
  3416  066B  00DA               	movwf	??_displayPPM
  3417  066C  085A               	movf	??_displayPPM,w
  3418  066D  1683               	bsf	3,5	;RP0=1, select bank1
  3419  066E  1303               	bcf	3,6	;RP1=0, select bank1
  3420  066F  00B8               	movwf	displayPPM@bufPtr^(0+128)
  3421                           
  3422                           ;mq135_module.h: 45: bufPtr += sprintf(bufPtr, "CO2: ");
  3423  0670  3087               	movlw	(STR_3-__stringbase)& (0+255)
  3424  0671  1283               	bcf	3,5	;RP0=0, select bank0
  3425  0672  1303               	bcf	3,6	;RP1=0, select bank0
  3426  0673  00DA               	movwf	??_displayPPM
  3427  0674  085A               	movf	??_displayPPM,w
  3428  0675  00AC               	movwf	sprintf@f
  3429  0676  1683               	bsf	3,5	;RP0=1, select bank1
  3430  0677  1303               	bcf	3,6	;RP1=0, select bank1
  3431  0678  0838               	movf	displayPPM@bufPtr^(0+128),w
  3432  0679  120A  118A  23F5  120A  118A  	fcall	_sprintf
  3433  067E  1283               	bcf	3,5	;RP0=0, select bank0
  3434  067F  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0680  082C               	movf	?_sprintf,w
  3436  0681  00DB               	movwf	??_displayPPM+1
  3437  0682  085B               	movf	??_displayPPM+1,w
  3438  0683  1683               	bsf	3,5	;RP0=1, select bank1
  3439  0684  1303               	bcf	3,6	;RP1=0, select bank1
  3440  0685  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  3441                           
  3442                           ;mq135_module.h: 46: bufPtr += sprintf(bufPtr, "%d", ppmWhole);
  3443  0686  302D               	movlw	((STR_1+14)-__stringbase)& (0+255)
  3444  0687  1283               	bcf	3,5	;RP0=0, select bank0
  3445  0688  1303               	bcf	3,6	;RP1=0, select bank0
  3446  0689  00DA               	movwf	??_displayPPM
  3447  068A  085A               	movf	??_displayPPM,w
  3448  068B  00AC               	movwf	sprintf@f
  3449  068C  1683               	bsf	3,5	;RP0=1, select bank1
  3450  068D  1303               	bcf	3,6	;RP1=0, select bank1
  3451  068E  0835               	movf	(displayPPM@ppmWhole+1)^(0+128),w
  3452  068F  1283               	bcf	3,5	;RP0=0, select bank0
  3453  0690  1303               	bcf	3,6	;RP1=0, select bank0
  3454  0691  01AE               	clrf	?_sprintf+2
  3455  0692  07AE               	addwf	?_sprintf+2,f
  3456  0693  1683               	bsf	3,5	;RP0=1, select bank1
  3457  0694  1303               	bcf	3,6	;RP1=0, select bank1
  3458  0695  0834               	movf	displayPPM@ppmWhole^(0+128),w
  3459  0696  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0697  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0698  01AD               	clrf	?_sprintf+1
  3462  0699  07AD               	addwf	?_sprintf+1,f
  3463  069A  1683               	bsf	3,5	;RP0=1, select bank1
  3464  069B  1303               	bcf	3,6	;RP1=0, select bank1
  3465  069C  0838               	movf	displayPPM@bufPtr^(0+128),w
  3466  069D  120A  118A  23F5  120A  118A  	fcall	_sprintf
  3467  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  3468  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  3469  06A4  082C               	movf	?_sprintf,w
  3470  06A5  00DB               	movwf	??_displayPPM+1
  3471  06A6  085B               	movf	??_displayPPM+1,w
  3472  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  3473  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  3474  06A9  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  3475                           
  3476                           ;mq135_module.h: 47: *bufPtr++ = '.';
  3477  06AA  302E               	movlw	46
  3478  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  3479  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  3480  06AD  00DA               	movwf	??_displayPPM
  3481  06AE  1683               	bsf	3,5	;RP0=1, select bank1
  3482  06AF  1303               	bcf	3,6	;RP1=0, select bank1
  3483  06B0  0838               	movf	displayPPM@bufPtr^(0+128),w
  3484  06B1  0084               	movwf	4
  3485  06B2  1283               	bcf	3,5	;RP0=0, select bank0
  3486  06B3  1303               	bcf	3,6	;RP1=0, select bank0
  3487  06B4  085A               	movf	??_displayPPM,w
  3488  06B5  1383               	bcf	3,7	;select IRP bank0
  3489  06B6  0080               	movwf	0
  3490  06B7  3001               	movlw	1
  3491  06B8  00DA               	movwf	??_displayPPM
  3492  06B9  085A               	movf	??_displayPPM,w
  3493  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  3494  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  3495  06BC  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  3496                           
  3497                           ;mq135_module.h: 48: if (ppmFraction < 10)
  3498  06BD  0837               	movf	(displayPPM@ppmFraction+1)^(0+128),w
  3499  06BE  3A80               	xorlw	128
  3500  06BF  00FF               	movwf	127
  3501  06C0  3080               	movlw	128
  3502  06C1  027F               	subwf	127,w
  3503  06C2  1D03               	skipz
  3504  06C3  2EC6               	goto	u4785
  3505  06C4  300A               	movlw	10
  3506  06C5  0236               	subwf	displayPPM@ppmFraction^(0+128),w
  3507  06C6                     u4785:	
  3508  06C6  1803               	skipnc
  3509  06C7  2EDB               	goto	l3111
  3510                           
  3511                           ;mq135_module.h: 49: *bufPtr++ = '0';
  3512  06C8  3030               	movlw	48
  3513  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  3514  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  3515  06CB  00DA               	movwf	??_displayPPM
  3516  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  3517  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  3518  06CE  0838               	movf	displayPPM@bufPtr^(0+128),w
  3519  06CF  0084               	movwf	4
  3520  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  3521  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  3522  06D2  085A               	movf	??_displayPPM,w
  3523  06D3  1383               	bcf	3,7	;select IRP bank0
  3524  06D4  0080               	movwf	0
  3525  06D5  3001               	movlw	1
  3526  06D6  00DA               	movwf	??_displayPPM
  3527  06D7  085A               	movf	??_displayPPM,w
  3528  06D8  1683               	bsf	3,5	;RP0=1, select bank1
  3529  06D9  1303               	bcf	3,6	;RP1=0, select bank1
  3530  06DA  07B8               	addwf	displayPPM@bufPtr^(0+128),f
  3531  06DB                     l3111:	
  3532                           
  3533                           ;mq135_module.h: 50: sprintf(bufPtr, "%d ppm  ", ppmFraction);
  3534  06DB  306E               	movlw	(STR_5-__stringbase)& (0+255)
  3535  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  3536  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  3537  06DE  00DA               	movwf	??_displayPPM
  3538  06DF  085A               	movf	??_displayPPM,w
  3539  06E0  00AC               	movwf	sprintf@f
  3540  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  3541  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  3542  06E3  0837               	movf	(displayPPM@ppmFraction+1)^(0+128),w
  3543  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3544  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3545  06E6  01AE               	clrf	?_sprintf+2
  3546  06E7  07AE               	addwf	?_sprintf+2,f
  3547  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  3548  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  3549  06EA  0836               	movf	displayPPM@ppmFraction^(0+128),w
  3550  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  3551  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  3552  06ED  01AD               	clrf	?_sprintf+1
  3553  06EE  07AD               	addwf	?_sprintf+1,f
  3554  06EF  1683               	bsf	3,5	;RP0=1, select bank1
  3555  06F0  1303               	bcf	3,6	;RP1=0, select bank1
  3556  06F1  0838               	movf	displayPPM@bufPtr^(0+128),w
  3557  06F2  120A  118A  23F5  120A  118A  	fcall	_sprintf
  3558                           
  3559                           ;mq135_module.h: 51: printToLCD(strBuffer);
  3560  06F7  30A0               	movlw	displayPPM@strBuffer& (0+255)
  3561  06F8  1283               	bcf	3,5	;RP0=0, select bank0
  3562  06F9  1303               	bcf	3,6	;RP1=0, select bank0
  3563  06FA  00A0               	movwf	printToLCD@str
  3564  06FB  3000               	movlw	0
  3565  06FC  00A1               	movwf	printToLCD@str+1
  3566  06FD  120A  118A  27D4   	fcall	_printToLCD
  3567  0700  0008               	return
  3568  0701                     __end_of_displayPPM:	
  3569                           
  3570                           	psect	text12
  3571  0C2D                     __ptext12:	
  3572 ;; *************** function ___fttol *****************
  3573 ;; Defined at:
  3574 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  f1              3   44[BANK0 ] float 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  lval            4   53[BANK0 ] unsigned long 
  3579 ;;  exp1            1   57[BANK0 ] unsigned char 
  3580 ;;  sign1           1   52[BANK0 ] unsigned char 
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  4   44[BANK0 ] long 
  3583 ;; Registers used:
  3584 ;;		wreg, status,2, status,0
  3585 ;; Tracked objects:
  3586 ;;		On entry : 0/0
  3587 ;;		On exit  : 0/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3590 ;;      Params:         0       4       0       0       0
  3591 ;;      Locals:         0       6       0       0       0
  3592 ;;      Temps:          0       4       0       0       0
  3593 ;;      Totals:         0      14       0       0       0
  3594 ;;Total ram usage:       14 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:    1
  3597 ;; This function calls:
  3598 ;;		Nothing
  3599 ;; This function is called by:
  3600 ;;		_displayPPM
  3601 ;; This function uses a non-reentrant model
  3602 ;;
  3603                           
  3604                           
  3605                           ;psect for function ___fttol
  3606  0C2D                     ___fttol:	
  3607                           
  3608                           ;incstack = 0
  3609                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  3610  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  3611  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  3612  0C2F  084C               	movf	___fttol@f1,w
  3613  0C30  00D0               	movwf	??___fttol
  3614  0C31  084D               	movf	___fttol@f1+1,w
  3615  0C32  00D1               	movwf	??___fttol+1
  3616  0C33  084E               	movf	___fttol@f1+2,w
  3617  0C34  00D2               	movwf	??___fttol+2
  3618  0C35  1003               	clrc
  3619  0C36  0D51               	rlf	??___fttol+1,w
  3620  0C37  0D52               	rlf	??___fttol+2,w
  3621  0C38  00D3               	movwf	??___fttol+3
  3622  0C39  0853               	movf	??___fttol+3,w
  3623  0C3A  00D9               	movwf	___fttol@exp1
  3624  0C3B  08D9               	movf	___fttol@exp1,f
  3625  0C3C  1D03               	skipz
  3626  0C3D  2C47               	goto	l2219
  3627  0C3E  3000               	movlw	0
  3628  0C3F  00CF               	movwf	?___fttol+3
  3629  0C40  3000               	movlw	0
  3630  0C41  00CE               	movwf	?___fttol+2
  3631  0C42  3000               	movlw	0
  3632  0C43  00CD               	movwf	?___fttol+1
  3633  0C44  3000               	movlw	0
  3634  0C45  00CC               	movwf	?___fttol
  3635  0C46  0008               	return
  3636  0C47                     l2219:	
  3637  0C47  084C               	movf	___fttol@f1,w
  3638  0C48  00D0               	movwf	??___fttol
  3639  0C49  084D               	movf	___fttol@f1+1,w
  3640  0C4A  00D1               	movwf	??___fttol+1
  3641  0C4B  084E               	movf	___fttol@f1+2,w
  3642  0C4C  00D2               	movwf	??___fttol+2
  3643  0C4D  3017               	movlw	23
  3644  0C4E                     u2965:	
  3645  0C4E  1003               	clrc
  3646  0C4F  0CD2               	rrf	??___fttol+2,f
  3647  0C50  0CD1               	rrf	??___fttol+1,f
  3648  0C51  0CD0               	rrf	??___fttol,f
  3649  0C52  3EFF               	addlw	-1
  3650  0C53  1D03               	skipz
  3651  0C54  2C4E               	goto	u2965
  3652  0C55  0850               	movf	??___fttol,w
  3653  0C56  00D3               	movwf	??___fttol+3
  3654  0C57  0853               	movf	??___fttol+3,w
  3655  0C58  00D4               	movwf	___fttol@sign1
  3656  0C59  17CD               	bsf	___fttol@f1+1,7
  3657  0C5A  30FF               	movlw	255
  3658  0C5B  05CC               	andwf	___fttol@f1,f
  3659  0C5C  30FF               	movlw	255
  3660  0C5D  05CD               	andwf	___fttol@f1+1,f
  3661  0C5E  3000               	movlw	0
  3662  0C5F  05CE               	andwf	___fttol@f1+2,f
  3663  0C60  084C               	movf	___fttol@f1,w
  3664  0C61  00D5               	movwf	___fttol@lval
  3665  0C62  084D               	movf	___fttol@f1+1,w
  3666  0C63  00D6               	movwf	___fttol@lval+1
  3667  0C64  084E               	movf	___fttol@f1+2,w
  3668  0C65  00D7               	movwf	___fttol@lval+2
  3669  0C66  01D8               	clrf	___fttol@lval+3
  3670  0C67  308E               	movlw	142
  3671  0C68  02D9               	subwf	___fttol@exp1,f
  3672  0C69  1FD9               	btfss	___fttol@exp1,7
  3673  0C6A  2C89               	goto	l2239
  3674  0C6B  0859               	movf	___fttol@exp1,w
  3675  0C6C  3A80               	xorlw	128
  3676  0C6D  3E8F               	addlw	143
  3677  0C6E  1803               	skipnc
  3678  0C6F  2C79               	goto	l2237
  3679  0C70  3000               	movlw	0
  3680  0C71  00CF               	movwf	?___fttol+3
  3681  0C72  3000               	movlw	0
  3682  0C73  00CE               	movwf	?___fttol+2
  3683  0C74  3000               	movlw	0
  3684  0C75  00CD               	movwf	?___fttol+1
  3685  0C76  3000               	movlw	0
  3686  0C77  00CC               	movwf	?___fttol
  3687  0C78  0008               	return
  3688  0C79                     l2237:	
  3689  0C79  3001               	movlw	1
  3690  0C7A                     u2995:	
  3691  0C7A  1003               	clrc
  3692  0C7B  0CD8               	rrf	___fttol@lval+3,f
  3693  0C7C  0CD7               	rrf	___fttol@lval+2,f
  3694  0C7D  0CD6               	rrf	___fttol@lval+1,f
  3695  0C7E  0CD5               	rrf	___fttol@lval,f
  3696  0C7F  3EFF               	addlw	-1
  3697  0C80  1D03               	skipz
  3698  0C81  2C7A               	goto	u2995
  3699  0C82  3001               	movlw	1
  3700  0C83  00D0               	movwf	??___fttol
  3701  0C84  0850               	movf	??___fttol,w
  3702  0C85  07D9               	addwf	___fttol@exp1,f
  3703  0C86  1903               	btfsc	3,2
  3704  0C87  2CA4               	goto	l2249
  3705  0C88  2C79               	goto	l2237
  3706  0C89                     l2239:	
  3707  0C89  3018               	movlw	24
  3708  0C8A  0259               	subwf	___fttol@exp1,w
  3709  0C8B  1C03               	skipc
  3710  0C8C  2CA1               	goto	l2247
  3711  0C8D  3000               	movlw	0
  3712  0C8E  00CF               	movwf	?___fttol+3
  3713  0C8F  3000               	movlw	0
  3714  0C90  00CE               	movwf	?___fttol+2
  3715  0C91  3000               	movlw	0
  3716  0C92  00CD               	movwf	?___fttol+1
  3717  0C93  3000               	movlw	0
  3718  0C94  00CC               	movwf	?___fttol
  3719  0C95  0008               	return
  3720  0C96                     l2245:	
  3721  0C96  3001               	movlw	1
  3722  0C97  00D0               	movwf	??___fttol
  3723  0C98                     u3025:	
  3724  0C98  1003               	clrc
  3725  0C99  0DD5               	rlf	___fttol@lval,f
  3726  0C9A  0DD6               	rlf	___fttol@lval+1,f
  3727  0C9B  0DD7               	rlf	___fttol@lval+2,f
  3728  0C9C  0DD8               	rlf	___fttol@lval+3,f
  3729  0C9D  0BD0               	decfsz	??___fttol,f
  3730  0C9E  2C98               	goto	u3025
  3731  0C9F  3001               	movlw	1
  3732  0CA0  02D9               	subwf	___fttol@exp1,f
  3733  0CA1                     l2247:	
  3734  0CA1  08D9               	movf	___fttol@exp1,f
  3735  0CA2  1D03               	skipz
  3736  0CA3  2C96               	goto	l2245
  3737  0CA4                     l2249:	
  3738  0CA4  0854               	movf	___fttol@sign1,w
  3739  0CA5  1903               	btfsc	3,2
  3740  0CA6  2CB2               	goto	l2253
  3741  0CA7  09D5               	comf	___fttol@lval,f
  3742  0CA8  09D6               	comf	___fttol@lval+1,f
  3743  0CA9  09D7               	comf	___fttol@lval+2,f
  3744  0CAA  09D8               	comf	___fttol@lval+3,f
  3745  0CAB  0AD5               	incf	___fttol@lval,f
  3746  0CAC  1903               	skipnz
  3747  0CAD  0AD6               	incf	___fttol@lval+1,f
  3748  0CAE  1903               	skipnz
  3749  0CAF  0AD7               	incf	___fttol@lval+2,f
  3750  0CB0  1903               	skipnz
  3751  0CB1  0AD8               	incf	___fttol@lval+3,f
  3752  0CB2                     l2253:	
  3753  0CB2  0858               	movf	___fttol@lval+3,w
  3754  0CB3  00CF               	movwf	?___fttol+3
  3755  0CB4  0857               	movf	___fttol@lval+2,w
  3756  0CB5  00CE               	movwf	?___fttol+2
  3757  0CB6  0856               	movf	___fttol@lval+1,w
  3758  0CB7  00CD               	movwf	?___fttol+1
  3759  0CB8  0855               	movf	___fttol@lval,w
  3760  0CB9  00CC               	movwf	?___fttol
  3761  0CBA  0008               	return
  3762  0CBB                     __end_of___fttol:	
  3763                           
  3764                           	psect	text13
  3765  099A                     __ptext13:	
  3766 ;; *************** function ___ftneg *****************
  3767 ;; Defined at:
  3768 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  f1              3   12[BANK0 ] float 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  3   12[BANK0 ] float 
  3775 ;; Registers used:
  3776 ;;		wreg
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3782 ;;      Params:         0       3       0       0       0
  3783 ;;      Locals:         0       0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0
  3785 ;;      Totals:         0       3       0       0       0
  3786 ;;Total ram usage:        3 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    1
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_displayPPM
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           
  3797                           ;psect for function ___ftneg
  3798  099A                     ___ftneg:	
  3799                           
  3800                           ;incstack = 0
  3801                           ; Regs used in ___ftneg: [wreg]
  3802  099A  1283               	bcf	3,5	;RP0=0, select bank0
  3803  099B  1303               	bcf	3,6	;RP1=0, select bank0
  3804  099C  082E               	movf	___ftneg@f1+2,w
  3805  099D  042D               	iorwf	___ftneg@f1+1,w
  3806  099E  042C               	iorwf	___ftneg@f1,w
  3807  099F  1903               	skipnz
  3808  09A0  0008               	return
  3809  09A1  3080               	movlw	128
  3810  09A2  06AE               	xorwf	___ftneg@f1+2,f
  3811  09A3  0008               	return
  3812  09A4                     __end_of___ftneg:	
  3813                           
  3814                           	psect	text14
  3815  0E24                     __ptext14:	
  3816 ;; *************** function ___ftmul *****************
  3817 ;; Defined at:
  3818 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;  f1              3   15[BANK0 ] float 
  3821 ;;  f2              3   18[BANK0 ] float 
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;  f3_as_produc    3   26[BANK0 ] unsigned um
  3824 ;;  sign            1   30[BANK0 ] unsigned char 
  3825 ;;  cntr            1   29[BANK0 ] unsigned char 
  3826 ;;  exp             1   25[BANK0 ] unsigned char 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  3   15[BANK0 ] float 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0, pclath, cstack
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3836 ;;      Params:         0       6       0       0       0
  3837 ;;      Locals:         0       6       0       0       0
  3838 ;;      Temps:          0       4       0       0       0
  3839 ;;      Totals:         0      16       0       0       0
  3840 ;;Total ram usage:       16 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:    2
  3843 ;; This function calls:
  3844 ;;		___ftpack
  3845 ;; This function is called by:
  3846 ;;		_displayPPM
  3847 ;;		_CalcMQ135
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           
  3852                           ;psect for function ___ftmul
  3853  0E24                     ___ftmul:	
  3854                           
  3855                           ;incstack = 0
  3856                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  3857  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  3858  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  3859  0E26  082F               	movf	___ftmul@f1,w
  3860  0E27  00B5               	movwf	??___ftmul
  3861  0E28  0830               	movf	___ftmul@f1+1,w
  3862  0E29  00B6               	movwf	??___ftmul+1
  3863  0E2A  0831               	movf	___ftmul@f1+2,w
  3864  0E2B  00B7               	movwf	??___ftmul+2
  3865  0E2C  1003               	clrc
  3866  0E2D  0D36               	rlf	??___ftmul+1,w
  3867  0E2E  0D37               	rlf	??___ftmul+2,w
  3868  0E2F  00B8               	movwf	??___ftmul+3
  3869  0E30  0838               	movf	??___ftmul+3,w
  3870  0E31  00B9               	movwf	___ftmul@exp
  3871  0E32  08B9               	movf	___ftmul@exp,f
  3872  0E33  1D03               	skipz
  3873  0E34  2E3C               	goto	l2821
  3874  0E35  3000               	movlw	0
  3875  0E36  00AF               	movwf	?___ftmul
  3876  0E37  3000               	movlw	0
  3877  0E38  00B0               	movwf	?___ftmul+1
  3878  0E39  3000               	movlw	0
  3879  0E3A  00B1               	movwf	?___ftmul+2
  3880  0E3B  0008               	return
  3881  0E3C                     l2821:	
  3882  0E3C  0832               	movf	___ftmul@f2,w
  3883  0E3D  00B5               	movwf	??___ftmul
  3884  0E3E  0833               	movf	___ftmul@f2+1,w
  3885  0E3F  00B6               	movwf	??___ftmul+1
  3886  0E40  0834               	movf	___ftmul@f2+2,w
  3887  0E41  00B7               	movwf	??___ftmul+2
  3888  0E42  1003               	clrc
  3889  0E43  0D36               	rlf	??___ftmul+1,w
  3890  0E44  0D37               	rlf	??___ftmul+2,w
  3891  0E45  00B8               	movwf	??___ftmul+3
  3892  0E46  0838               	movf	??___ftmul+3,w
  3893  0E47  00BE               	movwf	___ftmul@sign
  3894  0E48  08BE               	movf	___ftmul@sign,f
  3895  0E49  1D03               	skipz
  3896  0E4A  2E52               	goto	l2827
  3897  0E4B  3000               	movlw	0
  3898  0E4C  00AF               	movwf	?___ftmul
  3899  0E4D  3000               	movlw	0
  3900  0E4E  00B0               	movwf	?___ftmul+1
  3901  0E4F  3000               	movlw	0
  3902  0E50  00B1               	movwf	?___ftmul+2
  3903  0E51  0008               	return
  3904  0E52                     l2827:	
  3905  0E52  083E               	movf	___ftmul@sign,w
  3906  0E53  3E7B               	addlw	123
  3907  0E54  00B5               	movwf	??___ftmul
  3908  0E55  0835               	movf	??___ftmul,w
  3909  0E56  07B9               	addwf	___ftmul@exp,f
  3910  0E57  082F               	movf	___ftmul@f1,w
  3911  0E58  00B5               	movwf	??___ftmul
  3912  0E59  0830               	movf	___ftmul@f1+1,w
  3913  0E5A  00B6               	movwf	??___ftmul+1
  3914  0E5B  0831               	movf	___ftmul@f1+2,w
  3915  0E5C  00B7               	movwf	??___ftmul+2
  3916  0E5D  3010               	movlw	16
  3917  0E5E                     u4305:	
  3918  0E5E  1003               	clrc
  3919  0E5F  0CB7               	rrf	??___ftmul+2,f
  3920  0E60  0CB6               	rrf	??___ftmul+1,f
  3921  0E61  0CB5               	rrf	??___ftmul,f
  3922  0E62  3EFF               	addlw	-1
  3923  0E63  1D03               	skipz
  3924  0E64  2E5E               	goto	u4305
  3925  0E65  0835               	movf	??___ftmul,w
  3926  0E66  00B8               	movwf	??___ftmul+3
  3927  0E67  0838               	movf	??___ftmul+3,w
  3928  0E68  00BE               	movwf	___ftmul@sign
  3929  0E69  0832               	movf	___ftmul@f2,w
  3930  0E6A  00B5               	movwf	??___ftmul
  3931  0E6B  0833               	movf	___ftmul@f2+1,w
  3932  0E6C  00B6               	movwf	??___ftmul+1
  3933  0E6D  0834               	movf	___ftmul@f2+2,w
  3934  0E6E  00B7               	movwf	??___ftmul+2
  3935  0E6F  3010               	movlw	16
  3936  0E70                     u4315:	
  3937  0E70  1003               	clrc
  3938  0E71  0CB7               	rrf	??___ftmul+2,f
  3939  0E72  0CB6               	rrf	??___ftmul+1,f
  3940  0E73  0CB5               	rrf	??___ftmul,f
  3941  0E74  3EFF               	addlw	-1
  3942  0E75  1D03               	skipz
  3943  0E76  2E70               	goto	u4315
  3944  0E77  0835               	movf	??___ftmul,w
  3945  0E78  00B8               	movwf	??___ftmul+3
  3946  0E79  0838               	movf	??___ftmul+3,w
  3947  0E7A  06BE               	xorwf	___ftmul@sign,f
  3948  0E7B  3080               	movlw	128
  3949  0E7C  00B5               	movwf	??___ftmul
  3950  0E7D  0835               	movf	??___ftmul,w
  3951  0E7E  05BE               	andwf	___ftmul@sign,f
  3952  0E7F  17B0               	bsf	___ftmul@f1+1,7
  3953  0E80  17B3               	bsf	___ftmul@f2+1,7
  3954  0E81  30FF               	movlw	255
  3955  0E82  05B2               	andwf	___ftmul@f2,f
  3956  0E83  30FF               	movlw	255
  3957  0E84  05B3               	andwf	___ftmul@f2+1,f
  3958  0E85  3000               	movlw	0
  3959  0E86  05B4               	andwf	___ftmul@f2+2,f
  3960  0E87  3000               	movlw	0
  3961  0E88  00BA               	movwf	___ftmul@f3_as_product
  3962  0E89  3000               	movlw	0
  3963  0E8A  00BB               	movwf	___ftmul@f3_as_product+1
  3964  0E8B  3000               	movlw	0
  3965  0E8C  00BC               	movwf	___ftmul@f3_as_product+2
  3966  0E8D  3007               	movlw	7
  3967  0E8E  00B5               	movwf	??___ftmul
  3968  0E8F  0835               	movf	??___ftmul,w
  3969  0E90  00BD               	movwf	___ftmul@cntr
  3970  0E91                     l2839:	
  3971  0E91  1C2F               	btfss	___ftmul@f1,0
  3972  0E92  2EA1               	goto	l2843
  3973  0E93  0832               	movf	___ftmul@f2,w
  3974  0E94  07BA               	addwf	___ftmul@f3_as_product,f
  3975  0E95  0833               	movf	___ftmul@f2+1,w
  3976  0E96  1103               	clrz
  3977  0E97  1803               	skipnc
  3978  0E98  0A33               	incf	___ftmul@f2+1,w
  3979  0E99  1D03               	btfss	3,2
  3980  0E9A  07BB               	addwf	___ftmul@f3_as_product+1,f
  3981  0E9B  0834               	movf	___ftmul@f2+2,w
  3982  0E9C  1103               	clrz
  3983  0E9D  1803               	skipnc
  3984  0E9E  0A34               	incf	___ftmul@f2+2,w
  3985  0E9F  1D03               	btfss	3,2
  3986  0EA0  07BC               	addwf	___ftmul@f3_as_product+2,f
  3987  0EA1                     l2843:	
  3988  0EA1  3001               	movlw	1
  3989  0EA2                     u4345:	
  3990  0EA2  1003               	clrc
  3991  0EA3  0CB1               	rrf	___ftmul@f1+2,f
  3992  0EA4  0CB0               	rrf	___ftmul@f1+1,f
  3993  0EA5  0CAF               	rrf	___ftmul@f1,f
  3994  0EA6  3EFF               	addlw	-1
  3995  0EA7  1D03               	skipz
  3996  0EA8  2EA2               	goto	u4345
  3997  0EA9  3001               	movlw	1
  3998  0EAA                     u4355:	
  3999  0EAA  1003               	clrc
  4000  0EAB  0DB2               	rlf	___ftmul@f2,f
  4001  0EAC  0DB3               	rlf	___ftmul@f2+1,f
  4002  0EAD  0DB4               	rlf	___ftmul@f2+2,f
  4003  0EAE  3EFF               	addlw	-1
  4004  0EAF  1D03               	skipz
  4005  0EB0  2EAA               	goto	u4355
  4006  0EB1  3001               	movlw	1
  4007  0EB2  02BD               	subwf	___ftmul@cntr,f
  4008  0EB3  1D03               	btfss	3,2
  4009  0EB4  2E91               	goto	l2839
  4010  0EB5  3009               	movlw	9
  4011  0EB6  00B5               	movwf	??___ftmul
  4012  0EB7  0835               	movf	??___ftmul,w
  4013  0EB8  00BD               	movwf	___ftmul@cntr
  4014  0EB9                     l2851:	
  4015  0EB9  1C2F               	btfss	___ftmul@f1,0
  4016  0EBA  2EC9               	goto	l2855
  4017  0EBB  0832               	movf	___ftmul@f2,w
  4018  0EBC  07BA               	addwf	___ftmul@f3_as_product,f
  4019  0EBD  0833               	movf	___ftmul@f2+1,w
  4020  0EBE  1103               	clrz
  4021  0EBF  1803               	skipnc
  4022  0EC0  0A33               	incf	___ftmul@f2+1,w
  4023  0EC1  1D03               	btfss	3,2
  4024  0EC2  07BB               	addwf	___ftmul@f3_as_product+1,f
  4025  0EC3  0834               	movf	___ftmul@f2+2,w
  4026  0EC4  1103               	clrz
  4027  0EC5  1803               	skipnc
  4028  0EC6  0A34               	incf	___ftmul@f2+2,w
  4029  0EC7  1D03               	btfss	3,2
  4030  0EC8  07BC               	addwf	___ftmul@f3_as_product+2,f
  4031  0EC9                     l2855:	
  4032  0EC9  3001               	movlw	1
  4033  0ECA                     u4395:	
  4034  0ECA  1003               	clrc
  4035  0ECB  0CB1               	rrf	___ftmul@f1+2,f
  4036  0ECC  0CB0               	rrf	___ftmul@f1+1,f
  4037  0ECD  0CAF               	rrf	___ftmul@f1,f
  4038  0ECE  3EFF               	addlw	-1
  4039  0ECF  1D03               	skipz
  4040  0ED0  2ECA               	goto	u4395
  4041  0ED1  3001               	movlw	1
  4042  0ED2                     u4405:	
  4043  0ED2  1003               	clrc
  4044  0ED3  0CBC               	rrf	___ftmul@f3_as_product+2,f
  4045  0ED4  0CBB               	rrf	___ftmul@f3_as_product+1,f
  4046  0ED5  0CBA               	rrf	___ftmul@f3_as_product,f
  4047  0ED6  3EFF               	addlw	-1
  4048  0ED7  1D03               	skipz
  4049  0ED8  2ED2               	goto	u4405
  4050  0ED9  3001               	movlw	1
  4051  0EDA  02BD               	subwf	___ftmul@cntr,f
  4052  0EDB  1D03               	btfss	3,2
  4053  0EDC  2EB9               	goto	l2851
  4054  0EDD  083A               	movf	___ftmul@f3_as_product,w
  4055  0EDE  00A0               	movwf	___ftpack@arg
  4056  0EDF  083B               	movf	___ftmul@f3_as_product+1,w
  4057  0EE0  00A1               	movwf	___ftpack@arg+1
  4058  0EE1  083C               	movf	___ftmul@f3_as_product+2,w
  4059  0EE2  00A2               	movwf	___ftpack@arg+2
  4060  0EE3  0839               	movf	___ftmul@exp,w
  4061  0EE4  00B5               	movwf	??___ftmul
  4062  0EE5  0835               	movf	??___ftmul,w
  4063  0EE6  00A3               	movwf	___ftpack@exp
  4064  0EE7  083E               	movf	___ftmul@sign,w
  4065  0EE8  00B6               	movwf	??___ftmul+1
  4066  0EE9  0836               	movf	??___ftmul+1,w
  4067  0EEA  00A4               	movwf	___ftpack@sign
  4068  0EEB  120A  158A  23C3   	fcall	___ftpack
  4069  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  4071  0EF0  0820               	movf	?___ftpack,w
  4072  0EF1  00AF               	movwf	?___ftmul
  4073  0EF2  0821               	movf	?___ftpack+1,w
  4074  0EF3  00B0               	movwf	?___ftmul+1
  4075  0EF4  0822               	movf	?___ftpack+2,w
  4076  0EF5  00B1               	movwf	?___ftmul+2
  4077  0EF6  0008               	return
  4078  0EF7                     __end_of___ftmul:	
  4079                           
  4080                           	psect	text15
  4081  0EF7                     __ptext15:	
  4082 ;; *************** function ___ftadd *****************
  4083 ;; Defined at:
  4084 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;  f1              3   31[BANK0 ] float 
  4087 ;;  f2              3   34[BANK0 ] float 
  4088 ;; Auto vars:     Size  Location     Type
  4089 ;;  exp1            1   43[BANK0 ] unsigned char 
  4090 ;;  exp2            1   42[BANK0 ] unsigned char 
  4091 ;;  sign            1   41[BANK0 ] unsigned char 
  4092 ;; Return value:  Size  Location     Type
  4093 ;;                  3   31[BANK0 ] float 
  4094 ;; Registers used:
  4095 ;;		wreg, status,2, status,0, pclath, cstack
  4096 ;; Tracked objects:
  4097 ;;		On entry : 0/0
  4098 ;;		On exit  : 0/0
  4099 ;;		Unchanged: 0/0
  4100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4101 ;;      Params:         0       6       0       0       0
  4102 ;;      Locals:         0       3       0       0       0
  4103 ;;      Temps:          0       4       0       0       0
  4104 ;;      Totals:         0      13       0       0       0
  4105 ;;Total ram usage:       13 bytes
  4106 ;; Hardware stack levels used:    1
  4107 ;; Hardware stack levels required when called:    2
  4108 ;; This function calls:
  4109 ;;		___ftpack
  4110 ;; This function is called by:
  4111 ;;		_displayPPM
  4112 ;;		_CalcMQ135
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           
  4117                           ;psect for function ___ftadd
  4118  0EF7                     ___ftadd:	
  4119                           
  4120                           ;incstack = 0
  4121                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  4122  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  4123  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  4124  0EF9  083F               	movf	___ftadd@f1,w
  4125  0EFA  00C5               	movwf	??___ftadd
  4126  0EFB  0840               	movf	___ftadd@f1+1,w
  4127  0EFC  00C6               	movwf	??___ftadd+1
  4128  0EFD  0841               	movf	___ftadd@f1+2,w
  4129  0EFE  00C7               	movwf	??___ftadd+2
  4130  0EFF  1003               	clrc
  4131  0F00  0D46               	rlf	??___ftadd+1,w
  4132  0F01  0D47               	rlf	??___ftadd+2,w
  4133  0F02  00C8               	movwf	??___ftadd+3
  4134  0F03  0848               	movf	??___ftadd+3,w
  4135  0F04  00CB               	movwf	___ftadd@exp1
  4136  0F05  0842               	movf	___ftadd@f2,w
  4137  0F06  00C5               	movwf	??___ftadd
  4138  0F07  0843               	movf	___ftadd@f2+1,w
  4139  0F08  00C6               	movwf	??___ftadd+1
  4140  0F09  0844               	movf	___ftadd@f2+2,w
  4141  0F0A  00C7               	movwf	??___ftadd+2
  4142  0F0B  1003               	clrc
  4143  0F0C  0D46               	rlf	??___ftadd+1,w
  4144  0F0D  0D47               	rlf	??___ftadd+2,w
  4145  0F0E  00C8               	movwf	??___ftadd+3
  4146  0F0F  0848               	movf	??___ftadd+3,w
  4147  0F10  00CA               	movwf	___ftadd@exp2
  4148  0F11  084B               	movf	___ftadd@exp1,w
  4149  0F12  1903               	btfsc	3,2
  4150  0F13  2F20               	goto	l2709
  4151  0F14  084A               	movf	___ftadd@exp2,w
  4152  0F15  024B               	subwf	___ftadd@exp1,w
  4153  0F16  1803               	skipnc
  4154  0F17  2F27               	goto	l2713
  4155  0F18  034B               	decf	___ftadd@exp1,w
  4156  0F19  3AFF               	xorlw	255
  4157  0F1A  074A               	addwf	___ftadd@exp2,w
  4158  0F1B  00C5               	movwf	??___ftadd
  4159  0F1C  3019               	movlw	25
  4160  0F1D  0245               	subwf	??___ftadd,w
  4161  0F1E  1C03               	skipc
  4162  0F1F  2F27               	goto	l2713
  4163  0F20                     l2709:	
  4164  0F20  0842               	movf	___ftadd@f2,w
  4165  0F21  00BF               	movwf	?___ftadd
  4166  0F22  0843               	movf	___ftadd@f2+1,w
  4167  0F23  00C0               	movwf	?___ftadd+1
  4168  0F24  0844               	movf	___ftadd@f2+2,w
  4169  0F25  00C1               	movwf	?___ftadd+2
  4170  0F26  0008               	return
  4171  0F27                     l2713:	
  4172  0F27  084A               	movf	___ftadd@exp2,w
  4173  0F28  1903               	btfsc	3,2
  4174  0F29  0008               	return
  4175  0F2A  084B               	movf	___ftadd@exp1,w
  4176  0F2B  024A               	subwf	___ftadd@exp2,w
  4177  0F2C  1803               	skipnc
  4178  0F2D  2F36               	goto	l2719
  4179  0F2E  034A               	decf	___ftadd@exp2,w
  4180  0F2F  3AFF               	xorlw	255
  4181  0F30  074B               	addwf	___ftadd@exp1,w
  4182  0F31  00C5               	movwf	??___ftadd
  4183  0F32  3019               	movlw	25
  4184  0F33  0245               	subwf	??___ftadd,w
  4185  0F34  1803               	btfsc	3,0
  4186  0F35  0008               	return
  4187  0F36                     l2719:	
  4188  0F36  3006               	movlw	6
  4189  0F37  00C5               	movwf	??___ftadd
  4190  0F38  0845               	movf	??___ftadd,w
  4191  0F39  00C9               	movwf	___ftadd@sign
  4192  0F3A  1BC1               	btfsc	___ftadd@f1+2,7
  4193  0F3B  17C9               	bsf	___ftadd@sign,7
  4194  0F3C  1BC4               	btfsc	___ftadd@f2+2,7
  4195  0F3D  1749               	bsf	___ftadd@sign,6
  4196  0F3E  17C0               	bsf	___ftadd@f1+1,7
  4197  0F3F  30FF               	movlw	255
  4198  0F40  05BF               	andwf	___ftadd@f1,f
  4199  0F41  30FF               	movlw	255
  4200  0F42  05C0               	andwf	___ftadd@f1+1,f
  4201  0F43  3000               	movlw	0
  4202  0F44  05C1               	andwf	___ftadd@f1+2,f
  4203  0F45  17C3               	bsf	___ftadd@f2+1,7
  4204  0F46  30FF               	movlw	255
  4205  0F47  05C2               	andwf	___ftadd@f2,f
  4206  0F48  30FF               	movlw	255
  4207  0F49  05C3               	andwf	___ftadd@f2+1,f
  4208  0F4A  3000               	movlw	0
  4209  0F4B  05C4               	andwf	___ftadd@f2+2,f
  4210  0F4C  084A               	movf	___ftadd@exp2,w
  4211  0F4D  024B               	subwf	___ftadd@exp1,w
  4212  0F4E  1803               	skipnc
  4213  0F4F  2F76               	goto	l2741
  4214  0F50                     l2731:	
  4215  0F50  3001               	movlw	1
  4216  0F51                     u4055:	
  4217  0F51  1003               	clrc
  4218  0F52  0DC2               	rlf	___ftadd@f2,f
  4219  0F53  0DC3               	rlf	___ftadd@f2+1,f
  4220  0F54  0DC4               	rlf	___ftadd@f2+2,f
  4221  0F55  3EFF               	addlw	-1
  4222  0F56  1D03               	skipz
  4223  0F57  2F51               	goto	u4055
  4224  0F58  3001               	movlw	1
  4225  0F59  02CA               	subwf	___ftadd@exp2,f
  4226  0F5A  084A               	movf	___ftadd@exp2,w
  4227  0F5B  064B               	xorwf	___ftadd@exp1,w
  4228  0F5C  1903               	skipnz
  4229  0F5D  2F71               	goto	l2739
  4230  0F5E  3001               	movlw	1
  4231  0F5F  02C9               	subwf	___ftadd@sign,f
  4232  0F60  0849               	movf	___ftadd@sign,w
  4233  0F61  3907               	andlw	7
  4234  0F62  1903               	btfsc	3,2
  4235  0F63  2F71               	goto	l2739
  4236  0F64  2F50               	goto	l2731
  4237  0F65                     l2737:	
  4238  0F65  3001               	movlw	1
  4239  0F66                     u4085:	
  4240  0F66  1003               	clrc
  4241  0F67  0CC1               	rrf	___ftadd@f1+2,f
  4242  0F68  0CC0               	rrf	___ftadd@f1+1,f
  4243  0F69  0CBF               	rrf	___ftadd@f1,f
  4244  0F6A  3EFF               	addlw	-1
  4245  0F6B  1D03               	skipz
  4246  0F6C  2F66               	goto	u4085
  4247  0F6D  3001               	movlw	1
  4248  0F6E  00C5               	movwf	??___ftadd
  4249  0F6F  0845               	movf	??___ftadd,w
  4250  0F70  07CB               	addwf	___ftadd@exp1,f
  4251  0F71                     l2739:	
  4252  0F71  084B               	movf	___ftadd@exp1,w
  4253  0F72  064A               	xorwf	___ftadd@exp2,w
  4254  0F73  1903               	btfsc	3,2
  4255  0F74  2F9F               	goto	l585
  4256  0F75  2F65               	goto	l2737
  4257  0F76                     l2741:	
  4258  0F76  084B               	movf	___ftadd@exp1,w
  4259  0F77  024A               	subwf	___ftadd@exp2,w
  4260  0F78  1803               	skipnc
  4261  0F79  2F9F               	goto	l585
  4262  0F7A                     l2743:	
  4263  0F7A  3001               	movlw	1
  4264  0F7B                     u4115:	
  4265  0F7B  1003               	clrc
  4266  0F7C  0DBF               	rlf	___ftadd@f1,f
  4267  0F7D  0DC0               	rlf	___ftadd@f1+1,f
  4268  0F7E  0DC1               	rlf	___ftadd@f1+2,f
  4269  0F7F  3EFF               	addlw	-1
  4270  0F80  1D03               	skipz
  4271  0F81  2F7B               	goto	u4115
  4272  0F82  3001               	movlw	1
  4273  0F83  02CB               	subwf	___ftadd@exp1,f
  4274  0F84  084A               	movf	___ftadd@exp2,w
  4275  0F85  064B               	xorwf	___ftadd@exp1,w
  4276  0F86  1903               	skipnz
  4277  0F87  2F9B               	goto	l2751
  4278  0F88  3001               	movlw	1
  4279  0F89  02C9               	subwf	___ftadd@sign,f
  4280  0F8A  0849               	movf	___ftadd@sign,w
  4281  0F8B  3907               	andlw	7
  4282  0F8C  1903               	btfsc	3,2
  4283  0F8D  2F9B               	goto	l2751
  4284  0F8E  2F7A               	goto	l2743
  4285  0F8F                     l2749:	
  4286  0F8F  3001               	movlw	1
  4287  0F90                     u4145:	
  4288  0F90  1003               	clrc
  4289  0F91  0CC4               	rrf	___ftadd@f2+2,f
  4290  0F92  0CC3               	rrf	___ftadd@f2+1,f
  4291  0F93  0CC2               	rrf	___ftadd@f2,f
  4292  0F94  3EFF               	addlw	-1
  4293  0F95  1D03               	skipz
  4294  0F96  2F90               	goto	u4145
  4295  0F97  3001               	movlw	1
  4296  0F98  00C5               	movwf	??___ftadd
  4297  0F99  0845               	movf	??___ftadd,w
  4298  0F9A  07CA               	addwf	___ftadd@exp2,f
  4299  0F9B                     l2751:	
  4300  0F9B  084B               	movf	___ftadd@exp1,w
  4301  0F9C  064A               	xorwf	___ftadd@exp2,w
  4302  0F9D  1D03               	skipz
  4303  0F9E  2F8F               	goto	l2749
  4304  0F9F                     l585:	
  4305  0F9F  1FC9               	btfss	___ftadd@sign,7
  4306  0FA0  2FB1               	goto	l2755
  4307  0FA1  30FF               	movlw	255
  4308  0FA2  06BF               	xorwf	___ftadd@f1,f
  4309  0FA3  30FF               	movlw	255
  4310  0FA4  06C0               	xorwf	___ftadd@f1+1,f
  4311  0FA5  30FF               	movlw	255
  4312  0FA6  06C1               	xorwf	___ftadd@f1+2,f
  4313  0FA7  3001               	movlw	1
  4314  0FA8  07BF               	addwf	___ftadd@f1,f
  4315  0FA9  3000               	movlw	0
  4316  0FAA  1803               	skipnc
  4317  0FAB  3001               	movlw	1
  4318  0FAC  07C0               	addwf	___ftadd@f1+1,f
  4319  0FAD  3000               	movlw	0
  4320  0FAE  1803               	skipnc
  4321  0FAF  3001               	movlw	1
  4322  0FB0  07C1               	addwf	___ftadd@f1+2,f
  4323  0FB1                     l2755:	
  4324  0FB1  1F49               	btfss	___ftadd@sign,6
  4325  0FB2  2FC3               	goto	l2759
  4326  0FB3  30FF               	movlw	255
  4327  0FB4  06C2               	xorwf	___ftadd@f2,f
  4328  0FB5  30FF               	movlw	255
  4329  0FB6  06C3               	xorwf	___ftadd@f2+1,f
  4330  0FB7  30FF               	movlw	255
  4331  0FB8  06C4               	xorwf	___ftadd@f2+2,f
  4332  0FB9  3001               	movlw	1
  4333  0FBA  07C2               	addwf	___ftadd@f2,f
  4334  0FBB  3000               	movlw	0
  4335  0FBC  1803               	skipnc
  4336  0FBD  3001               	movlw	1
  4337  0FBE  07C3               	addwf	___ftadd@f2+1,f
  4338  0FBF  3000               	movlw	0
  4339  0FC0  1803               	skipnc
  4340  0FC1  3001               	movlw	1
  4341  0FC2  07C4               	addwf	___ftadd@f2+2,f
  4342  0FC3                     l2759:	
  4343  0FC3  01C9               	clrf	___ftadd@sign
  4344  0FC4  083F               	movf	___ftadd@f1,w
  4345  0FC5  07C2               	addwf	___ftadd@f2,f
  4346  0FC6  0840               	movf	___ftadd@f1+1,w
  4347  0FC7  1103               	clrz
  4348  0FC8  1803               	skipnc
  4349  0FC9  0A40               	incf	___ftadd@f1+1,w
  4350  0FCA  1D03               	btfss	3,2
  4351  0FCB  07C3               	addwf	___ftadd@f2+1,f
  4352  0FCC  0841               	movf	___ftadd@f1+2,w
  4353  0FCD  1103               	clrz
  4354  0FCE  1803               	skipnc
  4355  0FCF  0A41               	incf	___ftadd@f1+2,w
  4356  0FD0  1D03               	btfss	3,2
  4357  0FD1  07C4               	addwf	___ftadd@f2+2,f
  4358  0FD2  1FC4               	btfss	___ftadd@f2+2,7
  4359  0FD3  2FE6               	goto	l2769
  4360  0FD4  30FF               	movlw	255
  4361  0FD5  06C2               	xorwf	___ftadd@f2,f
  4362  0FD6  30FF               	movlw	255
  4363  0FD7  06C3               	xorwf	___ftadd@f2+1,f
  4364  0FD8  30FF               	movlw	255
  4365  0FD9  06C4               	xorwf	___ftadd@f2+2,f
  4366  0FDA  3001               	movlw	1
  4367  0FDB  07C2               	addwf	___ftadd@f2,f
  4368  0FDC  3000               	movlw	0
  4369  0FDD  1803               	skipnc
  4370  0FDE  3001               	movlw	1
  4371  0FDF  07C3               	addwf	___ftadd@f2+1,f
  4372  0FE0  3000               	movlw	0
  4373  0FE1  1803               	skipnc
  4374  0FE2  3001               	movlw	1
  4375  0FE3  07C4               	addwf	___ftadd@f2+2,f
  4376  0FE4  01C9               	clrf	___ftadd@sign
  4377  0FE5  0AC9               	incf	___ftadd@sign,f
  4378  0FE6                     l2769:	
  4379  0FE6  0842               	movf	___ftadd@f2,w
  4380  0FE7  00A0               	movwf	___ftpack@arg
  4381  0FE8  0843               	movf	___ftadd@f2+1,w
  4382  0FE9  00A1               	movwf	___ftpack@arg+1
  4383  0FEA  0844               	movf	___ftadd@f2+2,w
  4384  0FEB  00A2               	movwf	___ftpack@arg+2
  4385  0FEC  084B               	movf	___ftadd@exp1,w
  4386  0FED  00C5               	movwf	??___ftadd
  4387  0FEE  0845               	movf	??___ftadd,w
  4388  0FEF  00A3               	movwf	___ftpack@exp
  4389  0FF0  0849               	movf	___ftadd@sign,w
  4390  0FF1  00C6               	movwf	??___ftadd+1
  4391  0FF2  0846               	movf	??___ftadd+1,w
  4392  0FF3  00A4               	movwf	___ftpack@sign
  4393  0FF4  120A  158A  23C3   	fcall	___ftpack
  4394  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  4395  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  4396  0FF9  0820               	movf	?___ftpack,w
  4397  0FFA  00BF               	movwf	?___ftadd
  4398  0FFB  0821               	movf	?___ftpack+1,w
  4399  0FFC  00C0               	movwf	?___ftadd+1
  4400  0FFD  0822               	movf	?___ftpack+2,w
  4401  0FFE  00C1               	movwf	?___ftadd+2
  4402  0FFF  0008               	return
  4403  1000                     __end_of___ftadd:	
  4404                           
  4405                           	psect	text16
  4406  0A9C                     __ptext16:	
  4407 ;; *************** function ___awtoft *****************
  4408 ;; Defined at:
  4409 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  c               2    8[BANK0 ] int 
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  sign            1   11[BANK0 ] unsigned char 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  3    8[BANK0 ] float 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0, pclath, cstack
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4423 ;;      Params:         0       3       0       0       0
  4424 ;;      Locals:         0       1       0       0       0
  4425 ;;      Temps:          2       0       0       0       0
  4426 ;;      Totals:         2       4       0       0       0
  4427 ;;Total ram usage:        6 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    2
  4430 ;; This function calls:
  4431 ;;		___ftpack
  4432 ;; This function is called by:
  4433 ;;		_displayPPM
  4434 ;;		_CalcMQ135
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           
  4439                           ;psect for function ___awtoft
  4440  0A9C                     ___awtoft:	
  4441                           
  4442                           ;incstack = 0
  4443                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  4444  0A9C  1283               	bcf	3,5	;RP0=0, select bank0
  4445  0A9D  1303               	bcf	3,6	;RP1=0, select bank0
  4446  0A9E  01AB               	clrf	___awtoft@sign
  4447  0A9F  1FA9               	btfss	___awtoft@c+1,7
  4448  0AA0  2AA8               	goto	l2697
  4449  0AA1  09A8               	comf	___awtoft@c,f
  4450  0AA2  09A9               	comf	___awtoft@c+1,f
  4451  0AA3  0AA8               	incf	___awtoft@c,f
  4452  0AA4  1903               	skipnz
  4453  0AA5  0AA9               	incf	___awtoft@c+1,f
  4454  0AA6  01AB               	clrf	___awtoft@sign
  4455  0AA7  0AAB               	incf	___awtoft@sign,f
  4456  0AA8                     l2697:	
  4457  0AA8  0828               	movf	___awtoft@c,w
  4458  0AA9  00A0               	movwf	___ftpack@arg
  4459  0AAA  0829               	movf	___awtoft@c+1,w
  4460  0AAB  00A1               	movwf	___ftpack@arg+1
  4461  0AAC  01A2               	clrf	___ftpack@arg+2
  4462  0AAD  308E               	movlw	142
  4463  0AAE  00F5               	movwf	??___awtoft
  4464  0AAF  0875               	movf	??___awtoft,w
  4465  0AB0  00A3               	movwf	___ftpack@exp
  4466  0AB1  082B               	movf	___awtoft@sign,w
  4467  0AB2  00F6               	movwf	??___awtoft+1
  4468  0AB3  0876               	movf	??___awtoft+1,w
  4469  0AB4  00A4               	movwf	___ftpack@sign
  4470  0AB5  120A  158A  23C3   	fcall	___ftpack
  4471  0AB8  1283               	bcf	3,5	;RP0=0, select bank0
  4472  0AB9  1303               	bcf	3,6	;RP1=0, select bank0
  4473  0ABA  0820               	movf	?___ftpack,w
  4474  0ABB  00A8               	movwf	?___awtoft
  4475  0ABC  0821               	movf	?___ftpack+1,w
  4476  0ABD  00A9               	movwf	?___awtoft+1
  4477  0ABE  0822               	movf	?___ftpack+2,w
  4478  0ABF  00AA               	movwf	?___awtoft+2
  4479  0AC0  0008               	return
  4480  0AC1                     __end_of___awtoft:	
  4481                           
  4482                           	psect	text17
  4483  0BC3                     __ptext17:	
  4484 ;; *************** function ___ftpack *****************
  4485 ;; Defined at:
  4486 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;  arg             3    0[BANK0 ] unsigned um
  4489 ;;  exp             1    3[BANK0 ] unsigned char 
  4490 ;;  sign            1    4[BANK0 ] unsigned char 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;		None
  4493 ;; Return value:  Size  Location     Type
  4494 ;;                  3    0[BANK0 ] float 
  4495 ;; Registers used:
  4496 ;;		wreg, status,2, status,0
  4497 ;; Tracked objects:
  4498 ;;		On entry : 0/0
  4499 ;;		On exit  : 0/0
  4500 ;;		Unchanged: 0/0
  4501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4502 ;;      Params:         0       5       0       0       0
  4503 ;;      Locals:         0       0       0       0       0
  4504 ;;      Temps:          0       3       0       0       0
  4505 ;;      Totals:         0       8       0       0       0
  4506 ;;Total ram usage:        8 bytes
  4507 ;; Hardware stack levels used:    1
  4508 ;; Hardware stack levels required when called:    1
  4509 ;; This function calls:
  4510 ;;		Nothing
  4511 ;; This function is called by:
  4512 ;;		___awtoft
  4513 ;;		___ftadd
  4514 ;;		___ftdiv
  4515 ;;		___ftmul
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           
  4520                           ;psect for function ___ftpack
  4521  0BC3                     ___ftpack:	
  4522                           
  4523                           ;incstack = 0
  4524                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  4525  0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  4526  0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  4527  0BC5  0823               	movf	___ftpack@exp,w
  4528  0BC6  1903               	btfsc	3,2
  4529  0BC7  2BCD               	goto	l2651
  4530  0BC8  0822               	movf	___ftpack@arg+2,w
  4531  0BC9  0421               	iorwf	___ftpack@arg+1,w
  4532  0BCA  0420               	iorwf	___ftpack@arg,w
  4533  0BCB  1D03               	skipz
  4534  0BCC  2BE0               	goto	l2657
  4535  0BCD                     l2651:	
  4536  0BCD  3000               	movlw	0
  4537  0BCE  00A0               	movwf	?___ftpack
  4538  0BCF  3000               	movlw	0
  4539  0BD0  00A1               	movwf	?___ftpack+1
  4540  0BD1  3000               	movlw	0
  4541  0BD2  00A2               	movwf	?___ftpack+2
  4542  0BD3  0008               	return
  4543  0BD4                     l2655:	
  4544  0BD4  3001               	movlw	1
  4545  0BD5  00A5               	movwf	??___ftpack
  4546  0BD6  0825               	movf	??___ftpack,w
  4547  0BD7  07A3               	addwf	___ftpack@exp,f
  4548  0BD8  3001               	movlw	1
  4549  0BD9                     u3825:	
  4550  0BD9  1003               	clrc
  4551  0BDA  0CA2               	rrf	___ftpack@arg+2,f
  4552  0BDB  0CA1               	rrf	___ftpack@arg+1,f
  4553  0BDC  0CA0               	rrf	___ftpack@arg,f
  4554  0BDD  3EFF               	addlw	-1
  4555  0BDE  1D03               	skipz
  4556  0BDF  2BD9               	goto	u3825
  4557  0BE0                     l2657:	
  4558  0BE0  30FE               	movlw	254
  4559  0BE1  0522               	andwf	___ftpack@arg+2,w
  4560  0BE2  1903               	btfsc	3,2
  4561  0BE3  2BFB               	goto	l556
  4562  0BE4  2BD4               	goto	l2655
  4563  0BE5                     l2659:	
  4564  0BE5  3001               	movlw	1
  4565  0BE6  00A5               	movwf	??___ftpack
  4566  0BE7  0825               	movf	??___ftpack,w
  4567  0BE8  07A3               	addwf	___ftpack@exp,f
  4568  0BE9  3001               	movlw	1
  4569  0BEA  07A0               	addwf	___ftpack@arg,f
  4570  0BEB  3000               	movlw	0
  4571  0BEC  1803               	skipnc
  4572  0BED  3001               	movlw	1
  4573  0BEE  07A1               	addwf	___ftpack@arg+1,f
  4574  0BEF  3000               	movlw	0
  4575  0BF0  1803               	skipnc
  4576  0BF1  3001               	movlw	1
  4577  0BF2  07A2               	addwf	___ftpack@arg+2,f
  4578  0BF3  3001               	movlw	1
  4579  0BF4                     u3845:	
  4580  0BF4  1003               	clrc
  4581  0BF5  0CA2               	rrf	___ftpack@arg+2,f
  4582  0BF6  0CA1               	rrf	___ftpack@arg+1,f
  4583  0BF7  0CA0               	rrf	___ftpack@arg,f
  4584  0BF8  3EFF               	addlw	-1
  4585  0BF9  1D03               	skipz
  4586  0BFA  2BF4               	goto	u3845
  4587  0BFB                     l556:	
  4588  0BFB  30FF               	movlw	255
  4589  0BFC  0522               	andwf	___ftpack@arg+2,w
  4590  0BFD  1903               	btfsc	3,2
  4591  0BFE  2C0A               	goto	l2667
  4592  0BFF  2BE5               	goto	l2659
  4593  0C00                     l2665:	
  4594  0C00  3001               	movlw	1
  4595  0C01  02A3               	subwf	___ftpack@exp,f
  4596  0C02  3001               	movlw	1
  4597  0C03                     u3865:	
  4598  0C03  1003               	clrc
  4599  0C04  0DA0               	rlf	___ftpack@arg,f
  4600  0C05  0DA1               	rlf	___ftpack@arg+1,f
  4601  0C06  0DA2               	rlf	___ftpack@arg+2,f
  4602  0C07  3EFF               	addlw	-1
  4603  0C08  1D03               	skipz
  4604  0C09  2C03               	goto	u3865
  4605  0C0A                     l2667:	
  4606  0C0A  1FA1               	btfss	___ftpack@arg+1,7
  4607  0C0B  2C00               	goto	l2665
  4608  0C0C  1823               	btfsc	___ftpack@exp,0
  4609  0C0D  2C14               	goto	l562
  4610  0C0E  30FF               	movlw	255
  4611  0C0F  05A0               	andwf	___ftpack@arg,f
  4612  0C10  307F               	movlw	127
  4613  0C11  05A1               	andwf	___ftpack@arg+1,f
  4614  0C12  30FF               	movlw	255
  4615  0C13  05A2               	andwf	___ftpack@arg+2,f
  4616  0C14                     l562:	
  4617  0C14  1003               	clrc
  4618  0C15  0CA3               	rrf	___ftpack@exp,f
  4619  0C16  0823               	movf	___ftpack@exp,w
  4620  0C17  00A5               	movwf	??___ftpack
  4621  0C18  01A6               	clrf	??___ftpack+1
  4622  0C19  01A7               	clrf	??___ftpack+2
  4623  0C1A  3010               	movlw	16
  4624  0C1B                     u3895:	
  4625  0C1B  1003               	clrc
  4626  0C1C  0DA5               	rlf	??___ftpack,f
  4627  0C1D  0DA6               	rlf	??___ftpack+1,f
  4628  0C1E  0DA7               	rlf	??___ftpack+2,f
  4629  0C1F  3EFF               	addlw	-1
  4630  0C20  1D03               	skipz
  4631  0C21  2C1B               	goto	u3895
  4632  0C22  0825               	movf	??___ftpack,w
  4633  0C23  04A0               	iorwf	___ftpack@arg,f
  4634  0C24  0826               	movf	??___ftpack+1,w
  4635  0C25  04A1               	iorwf	___ftpack@arg+1,f
  4636  0C26  0827               	movf	??___ftpack+2,w
  4637  0C27  04A2               	iorwf	___ftpack@arg+2,f
  4638  0C28  0824               	movf	___ftpack@sign,w
  4639  0C29  1903               	btfsc	3,2
  4640  0C2A  0008               	return
  4641  0C2B  17A2               	bsf	___ftpack@arg+2,7
  4642  0C2C  0008               	return
  4643  0C2D                     __end_of___ftpack:	
  4644                           
  4645                           	psect	text18
  4646  0AE8                     __ptext18:	
  4647 ;; *************** function _displayDataDHT11 *****************
  4648 ;; Defined at:
  4649 ;;		line 74 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\dht11_module.h"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;  buffer         20   42[BANK0 ] unsigned char [20]
  4654 ;; Return value:  Size  Location     Type
  4655 ;;		None               void
  4656 ;; Registers used:
  4657 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4663 ;;      Params:         0       4       0       0       0
  4664 ;;      Locals:         0      20       0       0       0
  4665 ;;      Temps:          0       5       0       0       0
  4666 ;;      Totals:         0      29       0       0       0
  4667 ;;Total ram usage:       29 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    3
  4670 ;; This function calls:
  4671 ;;		_printToLCD
  4672 ;;		_sprintf
  4673 ;; This function is called by:
  4674 ;;		_main
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _displayDataDHT11
  4680  0AE8                     _displayDataDHT11:	
  4681                           
  4682                           ;dht11_module.h: 76: char buffer[20];
  4683                           ;dht11_module.h: 77: _delay((unsigned long)((2)*(4000000/4000.0)));
  4684                           
  4685                           ;incstack = 0
  4686                           ; Regs used in _displayDataDHT11: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4687  0AE8  3003               	movlw	3
  4688  0AE9  1283               	bcf	3,5	;RP0=0, select bank0
  4689  0AEA  1303               	bcf	3,6	;RP1=0, select bank0
  4690  0AEB  00C6               	movwf	??_displayDataDHT11+1
  4691  0AEC  3097               	movlw	151
  4692  0AED  00C5               	movwf	??_displayDataDHT11
  4693  0AEE                     u5307:	
  4694  0AEE  0BC5               	decfsz	??_displayDataDHT11,f
  4695  0AEF  2AEE               	goto	u5307
  4696  0AF0  0BC6               	decfsz	??_displayDataDHT11+1,f
  4697  0AF1  2AEE               	goto	u5307
  4698  0AF2  2AF3               	nop2
  4699                           
  4700                           ;dht11_module.h: 79: sprintf(buffer, "TMP: %dC HMD: %d", temperature, humidity);
  4701  0AF3  301F               	movlw	(STR_1-__stringbase)& (0+255)
  4702  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  4703  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  4704  0AF6  00C5               	movwf	??_displayDataDHT11
  4705  0AF7  0845               	movf	??_displayDataDHT11,w
  4706  0AF8  00AC               	movwf	sprintf@f
  4707  0AF9  0867               	movf	_temperature,w
  4708  0AFA  00C6               	movwf	??_displayDataDHT11+1
  4709  0AFB  01C7               	clrf	??_displayDataDHT11+2
  4710  0AFC  0846               	movf	??_displayDataDHT11+1,w
  4711  0AFD  00AD               	movwf	?_sprintf+1
  4712  0AFE  0847               	movf	??_displayDataDHT11+2,w
  4713  0AFF  00AE               	movwf	?_sprintf+2
  4714  0B00  0866               	movf	_humidity,w
  4715  0B01  00C8               	movwf	??_displayDataDHT11+3
  4716  0B02  01C9               	clrf	??_displayDataDHT11+4
  4717  0B03  0848               	movf	??_displayDataDHT11+3,w
  4718  0B04  00AF               	movwf	?_sprintf+3
  4719  0B05  0849               	movf	??_displayDataDHT11+4,w
  4720  0B06  00B0               	movwf	?_sprintf+4
  4721  0B07  304A               	movlw	displayDataDHT11@buffer& (0+255)
  4722  0B08  120A  118A  23F5  120A  158A  	fcall	_sprintf
  4723                           
  4724                           ;dht11_module.h: 80: printToLCD(buffer);
  4725  0B0D  304A               	movlw	displayDataDHT11@buffer& (0+255)
  4726  0B0E  1283               	bcf	3,5	;RP0=0, select bank0
  4727  0B0F  1303               	bcf	3,6	;RP1=0, select bank0
  4728  0B10  00A0               	movwf	printToLCD@str
  4729  0B11  3000               	movlw	0
  4730  0B12  00A1               	movwf	printToLCD@str+1
  4731  0B13  120A  118A  27D4   	fcall	_printToLCD
  4732  0B16  0008               	return
  4733  0B17                     __end_of_displayDataDHT11:	
  4734                           
  4735                           	psect	text19
  4736  03F5                     __ptext19:	
  4737 ;; *************** function _sprintf *****************
  4738 ;; Defined at:
  4739 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  sp              1    wreg     PTR unsigned char 
  4742 ;;		 -> debugInfo(10), displayTime@timeFormat(16), displayPPM@strBuffer(20), displayDataDHT11@buffer(20), 
  4743 ;;  f               1   12[BANK0 ] PTR const unsigned char 
  4744 ;;		 -> STR_20(10), STR_19(10), STR_18(10), STR_17(10), 
  4745 ;;		 -> STR_16(10), STR_15(10), STR_14(10), STR_13(10), 
  4746 ;;		 -> STR_12(10), STR_11(10), STR_10(10), STR_9(10), 
  4747 ;;		 -> STR_8(16), STR_5(9), STR_4(3), STR_3(6), 
  4748 ;;		 -> STR_1(17), 
  4749 ;; Auto vars:     Size  Location     Type
  4750 ;;  sp              1   32[BANK0 ] PTR unsigned char 
  4751 ;;		 -> debugInfo(10), displayTime@timeFormat(16), displayPPM@strBuffer(20), displayDataDHT11@buffer(20), 
  4752 ;;  _val            4   24[BANK0 ] struct .
  4753 ;;  width           2   29[BANK0 ] int 
  4754 ;;  ccnt            2   22[BANK0 ] int 
  4755 ;;  c               1   31[BANK0 ] char 
  4756 ;;  flag            1   28[BANK0 ] unsigned char 
  4757 ;;  prec            1   21[BANK0 ] char 
  4758 ;;  ap              1   20[BANK0 ] PTR void [1]
  4759 ;;		 -> ?_sprintf(2), 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  2   12[BANK0 ] int 
  4762 ;; Registers used:
  4763 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4769 ;;      Params:         0       5       0       0       0
  4770 ;;      Locals:         0      13       0       0       0
  4771 ;;      Temps:          0       3       0       0       0
  4772 ;;      Totals:         0      21       0       0       0
  4773 ;;Total ram usage:       21 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; Hardware stack levels required when called:    2
  4776 ;; This function calls:
  4777 ;;		___lwdiv
  4778 ;;		___lwmod
  4779 ;;		___wmul
  4780 ;;		_isdigit
  4781 ;; This function is called by:
  4782 ;;		_displayDataDHT11
  4783 ;;		_displayPPM
  4784 ;;		_displayTime
  4785 ;;		_setHoursStart
  4786 ;;		_setHoursEnd
  4787 ;;		_setMinutesStart
  4788 ;;		_setMinutesEnd
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           
  4793                           ;psect for function _sprintf
  4794  03F5                     _sprintf:	
  4795                           
  4796                           ;incstack = 0
  4797                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4798                           ;sprintf@sp stored from wreg
  4799  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  4800  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  4801  03F7  00C0               	movwf	sprintf@sp
  4802                           
  4803                           ;doprnt.c: 494: va_list ap;
  4804                           ;doprnt.c: 499: signed char c;
  4805                           ;doprnt.c: 501: int width;
  4806                           ;doprnt.c: 506: signed char prec;
  4807                           ;doprnt.c: 508: unsigned char flag;
  4808                           ;doprnt.c: 510: int ccnt = 0;
  4809  03F8  01B6               	clrf	sprintf@ccnt
  4810  03F9  01B7               	clrf	sprintf@ccnt+1
  4811                           
  4812                           ;doprnt.c: 527: union {
  4813                           ;doprnt.c: 528: unsigned int _val;
  4814                           ;doprnt.c: 529: struct {
  4815                           ;doprnt.c: 530: const char * _cp;
  4816                           ;doprnt.c: 531: unsigned _len;
  4817                           ;doprnt.c: 532: } _str;
  4818                           ;doprnt.c: 533: } _val;
  4819                           ;doprnt.c: 542: *ap = __va_start();
  4820  03FA  302D               	movlw	(?_sprintf+1)& (0+255)
  4821  03FB  00B1               	movwf	??_sprintf
  4822  03FC  0831               	movf	??_sprintf,w
  4823  03FD  00B4               	movwf	sprintf@ap
  4824  03FE                     l3049:	
  4825                           ;doprnt.c: 545: while(c = *f++) {
  4826                           
  4827  03FE  3001               	movlw	1
  4828  03FF  1283               	bcf	3,5	;RP0=0, select bank0
  4829  0400  1303               	bcf	3,6	;RP1=0, select bank0
  4830  0401  07AC               	addwf	sprintf@f,f
  4831  0402  30FF               	movlw	-1
  4832  0403  072C               	addwf	sprintf@f,w
  4833  0404  0084               	movwf	4
  4834  0405  120A  158A  200A  120A  118A  	fcall	stringdir
  4835  040A  00B1               	movwf	??_sprintf
  4836  040B  0831               	movf	??_sprintf,w
  4837  040C  00BF               	movwf	sprintf@c
  4838  040D  08BF               	movf	sprintf@c,f
  4839  040E  1903               	btfsc	3,2
  4840  040F  2DCB               	goto	l3051
  4841                           
  4842                           ;doprnt.c: 547: if(c != '%')
  4843  0410  083F               	movf	sprintf@c,w
  4844  0411  3A25               	xorlw	37
  4845  0412  1903               	skipnz
  4846  0413  2C26               	goto	l2943
  4847                           
  4848                           ;doprnt.c: 549: {
  4849                           ;doprnt.c: 550: ((*sp++ = (c)),(++ccnt));
  4850  0414  083F               	movf	sprintf@c,w
  4851  0415  00B1               	movwf	??_sprintf
  4852  0416  0840               	movf	sprintf@sp,w
  4853  0417  0084               	movwf	4
  4854  0418  0831               	movf	??_sprintf,w
  4855  0419  1383               	bcf	3,7	;select IRP bank0
  4856  041A  0080               	movwf	0
  4857  041B  3001               	movlw	1
  4858  041C  00B1               	movwf	??_sprintf
  4859  041D  0831               	movf	??_sprintf,w
  4860  041E  07C0               	addwf	sprintf@sp,f
  4861  041F  3001               	movlw	1
  4862  0420  07B6               	addwf	sprintf@ccnt,f
  4863  0421  1803               	skipnc
  4864  0422  0AB7               	incf	sprintf@ccnt+1,f
  4865  0423  3000               	movlw	0
  4866  0424  07B7               	addwf	sprintf@ccnt+1,f
  4867                           
  4868                           ;doprnt.c: 551: continue;
  4869  0425  2BFE               	goto	l3049
  4870  0426                     l2943:	
  4871                           
  4872                           ;doprnt.c: 552: }
  4873                           ;doprnt.c: 555: width = 0;
  4874  0426  01BD               	clrf	sprintf@width
  4875  0427  01BE               	clrf	sprintf@width+1
  4876                           
  4877                           ;doprnt.c: 557: flag = 0;
  4878  0428  01BC               	clrf	sprintf@flag
  4879                           
  4880                           ;doprnt.c: 560: switch(*f) {
  4881                           
  4882                           ;doprnt.c: 559: for(;;) {
  4883  0429  2C2F               	goto	l2949
  4884  042A                     l276:	
  4885                           ;doprnt.c: 588: case '0':
  4886                           
  4887                           
  4888                           ;doprnt.c: 589: flag |= 0x04;
  4889  042A  153C               	bsf	sprintf@flag,2
  4890                           
  4891                           ;doprnt.c: 590: f++;
  4892  042B  3001               	movlw	1
  4893  042C  00B1               	movwf	??_sprintf
  4894  042D  0831               	movf	??_sprintf,w
  4895  042E  07AC               	addwf	sprintf@f,f
  4896  042F                     l2949:	
  4897                           ;doprnt.c: 593: }
  4898                           
  4899                           ;doprnt.c: 591: continue;
  4900                           
  4901  042F  082C               	movf	sprintf@f,w
  4902  0430  0084               	movwf	4
  4903  0431  120A  158A  200A  120A  118A  	fcall	stringdir
  4904                           
  4905                           ; Switch size 1, requested type "space"
  4906                           ; Number of cases is 1, Range of values is 48 to 48
  4907                           ; switch strategies available:
  4908                           ; Name         Instructions Cycles
  4909                           ; simple_byte            4     3 (average)
  4910                           ; direct_byte           14    11 (fixed)
  4911                           ; jumptable            263     9 (fixed)
  4912                           ;	Chosen strategy is simple_byte
  4913  0436  3A30               	xorlw	48	; case 48
  4914  0437  1903               	skipnz
  4915  0438  2C2A               	goto	l276
  4916  0439  2C3A               	goto	l2951
  4917  043A                     l2951:	
  4918                           ;doprnt.c: 595: }
  4919                           
  4920                           ;doprnt.c: 594: break;
  4921                           
  4922                           
  4923                           ;doprnt.c: 606: if(isdigit((unsigned)*f)) {
  4924  043A  082C               	movf	sprintf@f,w
  4925  043B  0084               	movwf	4
  4926  043C  120A  158A  200A  120A  118A  	fcall	stringdir
  4927  0441  120A  158A  21A4  120A  118A  	fcall	_isdigit
  4928  0446  1C03               	btfss	3,0
  4929  0447  2C8A               	goto	l2965
  4930                           
  4931                           ;doprnt.c: 607: width = 0;
  4932  0448  1283               	bcf	3,5	;RP0=0, select bank0
  4933  0449  1303               	bcf	3,6	;RP1=0, select bank0
  4934  044A  01BD               	clrf	sprintf@width
  4935  044B  01BE               	clrf	sprintf@width+1
  4936  044C                     l2955:	
  4937                           ;doprnt.c: 608: do {
  4938                           
  4939                           
  4940                           ;doprnt.c: 609: width *= 10;
  4941  044C  300A               	movlw	10
  4942  044D  1283               	bcf	3,5	;RP0=0, select bank0
  4943  044E  1303               	bcf	3,6	;RP1=0, select bank0
  4944  044F  00A0               	movwf	___wmul@multiplier
  4945  0450  3000               	movlw	0
  4946  0451  00A1               	movwf	___wmul@multiplier+1
  4947  0452  083E               	movf	sprintf@width+1,w
  4948  0453  01A3               	clrf	___wmul@multiplicand+1
  4949  0454  07A3               	addwf	___wmul@multiplicand+1,f
  4950  0455  083D               	movf	sprintf@width,w
  4951  0456  01A2               	clrf	___wmul@multiplicand
  4952  0457  07A2               	addwf	___wmul@multiplicand,f
  4953  0458  120A  158A  2277  120A  118A  	fcall	___wmul
  4954  045D  1283               	bcf	3,5	;RP0=0, select bank0
  4955  045E  1303               	bcf	3,6	;RP1=0, select bank0
  4956  045F  0821               	movf	?___wmul+1,w
  4957  0460  01BE               	clrf	sprintf@width+1
  4958  0461  07BE               	addwf	sprintf@width+1,f
  4959  0462  0820               	movf	?___wmul,w
  4960  0463  01BD               	clrf	sprintf@width
  4961  0464  07BD               	addwf	sprintf@width,f
  4962                           
  4963                           ;doprnt.c: 610: width += *f++ - '0';
  4964  0465  082C               	movf	sprintf@f,w
  4965  0466  0084               	movwf	4
  4966  0467  120A  158A  200A  120A  118A  	fcall	stringdir
  4967  046C  3ED0               	addlw	208
  4968  046D  00B1               	movwf	??_sprintf
  4969  046E  30FF               	movlw	255
  4970  046F  1803               	skipnc
  4971  0470  3000               	movlw	0
  4972  0471  00B2               	movwf	??_sprintf+1
  4973  0472  0831               	movf	??_sprintf,w
  4974  0473  07BD               	addwf	sprintf@width,f
  4975  0474  1803               	skipnc
  4976  0475  0ABE               	incf	sprintf@width+1,f
  4977  0476  0832               	movf	??_sprintf+1,w
  4978  0477  07BE               	addwf	sprintf@width+1,f
  4979  0478  3001               	movlw	1
  4980  0479  00B1               	movwf	??_sprintf
  4981  047A  0831               	movf	??_sprintf,w
  4982  047B  07AC               	addwf	sprintf@f,f
  4983                           
  4984                           ;doprnt.c: 611: } while(isdigit((unsigned)*f));
  4985  047C  082C               	movf	sprintf@f,w
  4986  047D  0084               	movwf	4
  4987  047E  120A  158A  200A  120A  118A  	fcall	stringdir
  4988  0483  120A  158A  21A4  120A  118A  	fcall	_isdigit
  4989  0488  1803               	btfsc	3,0
  4990  0489  2C4C               	goto	l2955
  4991  048A                     l2965:	
  4992                           ;doprnt.c: 831: }
  4993                           
  4994                           ;doprnt.c: 822: continue;
  4995                           
  4996                           ;doprnt.c: 811: default:
  4997                           
  4998                           ;doprnt.c: 707: case 'i':
  4999                           ;doprnt.c: 708: break;
  5000                           
  5001                           ;doprnt.c: 706: case 'd':
  5002                           
  5003                           ;doprnt.c: 647: goto alldone;
  5004                           
  5005                           ;doprnt.c: 646: case 0:
  5006                           
  5007                           ;doprnt.c: 617: }
  5008                           ;doprnt.c: 644: switch(c = *f++) {
  5009                           
  5010  048A  3001               	movlw	1
  5011  048B  1283               	bcf	3,5	;RP0=0, select bank0
  5012  048C  1303               	bcf	3,6	;RP1=0, select bank0
  5013  048D  07AC               	addwf	sprintf@f,f
  5014  048E  30FF               	movlw	-1
  5015  048F  072C               	addwf	sprintf@f,w
  5016  0490  0084               	movwf	4
  5017  0491  120A  158A  200A  120A  118A  	fcall	stringdir
  5018  0496  00BF               	movwf	sprintf@c
  5019                           
  5020                           ; Switch size 1, requested type "space"
  5021                           ; Number of cases is 3, Range of values is 0 to 105
  5022                           ; switch strategies available:
  5023                           ; Name         Instructions Cycles
  5024                           ; simple_byte           10     6 (average)
  5025                           ; jumptable            260     6 (fixed)
  5026                           ;	Chosen strategy is simple_byte
  5027  0497  3A00               	xorlw	0	; case 0
  5028  0498  1903               	skipnz
  5029  0499  2DCB               	goto	l3051
  5030  049A  3A64               	xorlw	100	; case 100
  5031  049B  1903               	skipnz
  5032  049C  2CA1               	goto	l2967
  5033  049D  3A0D               	xorlw	13	; case 105
  5034  049E  1903               	skipnz
  5035  049F  2CA1               	goto	l2967
  5036  04A0  2BFE               	goto	l3049
  5037  04A1                     l2967:	
  5038                           
  5039                           ;doprnt.c: 1262: {
  5040                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5041  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  5042  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  5043  04A3  0834               	movf	sprintf@ap,w
  5044  04A4  0084               	movwf	4
  5045  04A5  1383               	bcf	3,7	;select IRP bank0
  5046  04A6  0800               	movf	0,w
  5047  04A7  00B8               	movwf	sprintf@_val
  5048  04A8  0A84               	incf	4,f
  5049  04A9  0800               	movf	0,w
  5050  04AA  00B9               	movwf	sprintf@_val+1
  5051  04AB  3002               	movlw	2
  5052  04AC  00B1               	movwf	??_sprintf
  5053  04AD  0831               	movf	??_sprintf,w
  5054  04AE  07B4               	addwf	sprintf@ap,f
  5055                           
  5056                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  5057  04AF  1FB9               	btfss	sprintf@_val+1,7
  5058  04B0  2CBA               	goto	l2977
  5059                           
  5060                           ;doprnt.c: 1271: flag |= 0x03;
  5061  04B1  3003               	movlw	3
  5062  04B2  00B1               	movwf	??_sprintf
  5063  04B3  0831               	movf	??_sprintf,w
  5064  04B4  04BC               	iorwf	sprintf@flag,f
  5065                           
  5066                           ;doprnt.c: 1272: _val._val = -_val._val;
  5067  04B5  09B8               	comf	sprintf@_val,f
  5068  04B6  09B9               	comf	sprintf@_val+1,f
  5069  04B7  0AB8               	incf	sprintf@_val,f
  5070  04B8  1903               	skipnz
  5071  04B9  0AB9               	incf	sprintf@_val+1,f
  5072  04BA                     l2977:	
  5073                           
  5074                           ;doprnt.c: 1273: }
  5075                           ;doprnt.c: 1275: }
  5076                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5077  04BA  01BF               	clrf	sprintf@c
  5078  04BB  0ABF               	incf	sprintf@c,f
  5079  04BC  083F               	movf	sprintf@c,w
  5080  04BD  3A05               	xorlw	5
  5081  04BE  1903               	btfsc	3,2
  5082  04BF  2CE1               	goto	l2989
  5083  04C0                     l2981:	
  5084                           
  5085                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  5086  04C0  083F               	movf	sprintf@c,w
  5087  04C1  00B1               	movwf	??_sprintf
  5088  04C2  0731               	addwf	??_sprintf,w
  5089  04C3  3E01               	addlw	low (_dpowers-__stringbase)
  5090  04C4  0084               	movwf	4
  5091  04C5  120A  158A  200A  120A  118A  	fcall	stringdir
  5092  04CA  00B2               	movwf	??_sprintf+1
  5093  04CB  120A  158A  200A  120A  118A  	fcall	stringdir
  5094  04D0  00B3               	movwf	??_sprintf+2
  5095  04D1  0833               	movf	??_sprintf+2,w
  5096  04D2  0239               	subwf	sprintf@_val+1,w
  5097  04D3  1D03               	skipz
  5098  04D4  2CD7               	goto	u4635
  5099  04D5  0832               	movf	??_sprintf+1,w
  5100  04D6  0238               	subwf	sprintf@_val,w
  5101  04D7                     u4635:	
  5102  04D7  1C03               	btfss	3,0
  5103  04D8  2CE1               	goto	l2989
  5104                           
  5105                           ;doprnt.c: 1316: break;
  5106  04D9  3001               	movlw	1
  5107  04DA  00B1               	movwf	??_sprintf
  5108  04DB  0831               	movf	??_sprintf,w
  5109  04DC  07BF               	addwf	sprintf@c,f
  5110  04DD  083F               	movf	sprintf@c,w
  5111  04DE  3A05               	xorlw	5
  5112  04DF  1D03               	skipz
  5113  04E0  2CC0               	goto	l2981
  5114  04E1                     l2989:	
  5115                           
  5116                           ;doprnt.c: 1354: if(width && flag & 0x03)
  5117  04E1  083E               	movf	sprintf@width+1,w
  5118  04E2  043D               	iorwf	sprintf@width,w
  5119  04E3  1903               	skipnz
  5120  04E4  2CEF               	goto	l294
  5121  04E5  083C               	movf	sprintf@flag,w
  5122  04E6  3903               	andlw	3
  5123  04E7  1903               	btfsc	3,2
  5124  04E8  2CEF               	goto	l294
  5125                           
  5126                           ;doprnt.c: 1355: width--;
  5127  04E9  30FF               	movlw	255
  5128  04EA  07BD               	addwf	sprintf@width,f
  5129  04EB  1803               	skipnc
  5130  04EC  0ABE               	incf	sprintf@width+1,f
  5131  04ED  30FF               	movlw	255
  5132  04EE  07BE               	addwf	sprintf@width+1,f
  5133  04EF                     l294:	
  5134                           
  5135                           ;doprnt.c: 1390: if(width > c)
  5136  04EF  083F               	movf	sprintf@c,w
  5137  04F0  00B1               	movwf	??_sprintf
  5138  04F1  01B2               	clrf	??_sprintf+1
  5139  04F2  1BB1               	btfsc	??_sprintf,7
  5140  04F3  03B2               	decf	??_sprintf+1,f
  5141  04F4  0832               	movf	??_sprintf+1,w
  5142  04F5  3A80               	xorlw	128
  5143  04F6  00B3               	movwf	??_sprintf+2
  5144  04F7  083E               	movf	sprintf@width+1,w
  5145  04F8  3A80               	xorlw	128
  5146  04F9  0233               	subwf	??_sprintf+2,w
  5147  04FA  1D03               	skipz
  5148  04FB  2CFE               	goto	u4675
  5149  04FC  083D               	movf	sprintf@width,w
  5150  04FD  0231               	subwf	??_sprintf,w
  5151  04FE                     u4675:	
  5152  04FE  1803               	skipnc
  5153  04FF  2D0E               	goto	l2997
  5154                           
  5155                           ;doprnt.c: 1391: width -= c;
  5156  0500  1283               	bcf	3,5	;RP0=0, select bank0
  5157  0501  1303               	bcf	3,6	;RP1=0, select bank0
  5158  0502  083F               	movf	sprintf@c,w
  5159  0503  00B1               	movwf	??_sprintf
  5160  0504  01B2               	clrf	??_sprintf+1
  5161  0505  1BB1               	btfsc	??_sprintf,7
  5162  0506  03B2               	decf	??_sprintf+1,f
  5163  0507  0831               	movf	??_sprintf,w
  5164  0508  02BD               	subwf	sprintf@width,f
  5165  0509  0832               	movf	??_sprintf+1,w
  5166  050A  1C03               	skipc
  5167  050B  03BE               	decf	sprintf@width+1,f
  5168  050C  02BE               	subwf	sprintf@width+1,f
  5169  050D  2D12               	goto	l2999
  5170  050E                     l2997:	
  5171                           
  5172                           ;doprnt.c: 1392: else
  5173                           ;doprnt.c: 1393: width = 0;
  5174  050E  1283               	bcf	3,5	;RP0=0, select bank0
  5175  050F  1303               	bcf	3,6	;RP1=0, select bank0
  5176  0510  01BD               	clrf	sprintf@width
  5177  0511  01BE               	clrf	sprintf@width+1
  5178  0512                     l2999:	
  5179                           
  5180                           ;doprnt.c: 1396: if(flag & 0x04) {
  5181  0512  1D3C               	btfss	sprintf@flag,2
  5182  0513  2D45               	goto	l3019
  5183                           
  5184                           ;doprnt.c: 1401: if(flag & 0x03)
  5185  0514  083C               	movf	sprintf@flag,w
  5186  0515  3903               	andlw	3
  5187  0516  1903               	btfsc	3,2
  5188  0517  2D29               	goto	l3009
  5189                           
  5190                           ;doprnt.c: 1402: ((*sp++ = ('-')),(++ccnt));
  5191  0518  302D               	movlw	45
  5192  0519  00B1               	movwf	??_sprintf
  5193  051A  0840               	movf	sprintf@sp,w
  5194  051B  0084               	movwf	4
  5195  051C  0831               	movf	??_sprintf,w
  5196  051D  1383               	bcf	3,7	;select IRP bank0
  5197  051E  0080               	movwf	0
  5198  051F  3001               	movlw	1
  5199  0520  00B1               	movwf	??_sprintf
  5200  0521  0831               	movf	??_sprintf,w
  5201  0522  07C0               	addwf	sprintf@sp,f
  5202  0523  3001               	movlw	1
  5203  0524  07B6               	addwf	sprintf@ccnt,f
  5204  0525  1803               	skipnc
  5205  0526  0AB7               	incf	sprintf@ccnt+1,f
  5206  0527  3000               	movlw	0
  5207  0528  07B7               	addwf	sprintf@ccnt+1,f
  5208  0529                     l3009:	
  5209                           
  5210                           ;doprnt.c: 1424: if(width)
  5211  0529  083E               	movf	sprintf@width+1,w
  5212  052A  043D               	iorwf	sprintf@width,w
  5213  052B  1903               	skipnz
  5214  052C  2D79               	goto	l3037
  5215                           
  5216                           ;doprnt.c: 1426: ((*sp++ = ('0')),(++ccnt));
  5217                           
  5218                           ;doprnt.c: 1425: do
  5219  052D  3030               	movlw	48
  5220  052E  00B1               	movwf	??_sprintf
  5221  052F  0840               	movf	sprintf@sp,w
  5222  0530  0084               	movwf	4
  5223  0531  0831               	movf	??_sprintf,w
  5224  0532  1383               	bcf	3,7	;select IRP bank0
  5225  0533  0080               	movwf	0
  5226  0534  3001               	movlw	1
  5227  0535  00B1               	movwf	??_sprintf
  5228  0536  0831               	movf	??_sprintf,w
  5229  0537  07C0               	addwf	sprintf@sp,f
  5230  0538  3001               	movlw	1
  5231  0539  07B6               	addwf	sprintf@ccnt,f
  5232  053A  1803               	skipnc
  5233  053B  0AB7               	incf	sprintf@ccnt+1,f
  5234  053C  3000               	movlw	0
  5235  053D  07B7               	addwf	sprintf@ccnt+1,f
  5236                           
  5237                           ;doprnt.c: 1427: while(--width);
  5238  053E  30FF               	movlw	255
  5239  053F  07BD               	addwf	sprintf@width,f
  5240  0540  1803               	skipnc
  5241  0541  0ABE               	incf	sprintf@width+1,f
  5242  0542  30FF               	movlw	255
  5243  0543  07BE               	addwf	sprintf@width+1,f
  5244  0544  2D29               	goto	l3009
  5245  0545                     l3019:	
  5246                           ;doprnt.c: 1429: } else
  5247                           
  5248                           
  5249                           ;doprnt.c: 1431: {
  5250                           ;doprnt.c: 1433: if(width
  5251                           ;doprnt.c: 1437: )
  5252  0545  083E               	movf	sprintf@width+1,w
  5253  0546  043D               	iorwf	sprintf@width,w
  5254  0547  1903               	skipnz
  5255  0548  2D64               	goto	l3029
  5256  0549                     l3021:	
  5257                           ;doprnt.c: 1438: do
  5258                           
  5259                           
  5260                           ;doprnt.c: 1439: ((*sp++ = (' ')),(++ccnt));
  5261  0549  3020               	movlw	32
  5262  054A  00B1               	movwf	??_sprintf
  5263  054B  0840               	movf	sprintf@sp,w
  5264  054C  0084               	movwf	4
  5265  054D  0831               	movf	??_sprintf,w
  5266  054E  1383               	bcf	3,7	;select IRP bank0
  5267  054F  0080               	movwf	0
  5268  0550  3001               	movlw	1
  5269  0551  00B1               	movwf	??_sprintf
  5270  0552  0831               	movf	??_sprintf,w
  5271  0553  07C0               	addwf	sprintf@sp,f
  5272  0554  3001               	movlw	1
  5273  0555  07B6               	addwf	sprintf@ccnt,f
  5274  0556  1803               	skipnc
  5275  0557  0AB7               	incf	sprintf@ccnt+1,f
  5276  0558  3000               	movlw	0
  5277  0559  07B7               	addwf	sprintf@ccnt+1,f
  5278                           
  5279                           ;doprnt.c: 1440: while(--width);
  5280  055A  30FF               	movlw	255
  5281  055B  07BD               	addwf	sprintf@width,f
  5282  055C  1803               	skipnc
  5283  055D  0ABE               	incf	sprintf@width+1,f
  5284  055E  30FF               	movlw	255
  5285  055F  07BE               	addwf	sprintf@width+1,f
  5286  0560  083E               	movf	sprintf@width+1,w
  5287  0561  043D               	iorwf	sprintf@width,w
  5288  0562  1D03               	skipz
  5289  0563  2D49               	goto	l3021
  5290  0564                     l3029:	
  5291                           
  5292                           ;doprnt.c: 1447: if(flag & 0x03)
  5293  0564  083C               	movf	sprintf@flag,w
  5294  0565  3903               	andlw	3
  5295  0566  1903               	btfsc	3,2
  5296  0567  2D79               	goto	l3037
  5297                           
  5298                           ;doprnt.c: 1448: ((*sp++ = ('-')),(++ccnt));
  5299  0568  302D               	movlw	45
  5300  0569  00B1               	movwf	??_sprintf
  5301  056A  0840               	movf	sprintf@sp,w
  5302  056B  0084               	movwf	4
  5303  056C  0831               	movf	??_sprintf,w
  5304  056D  1383               	bcf	3,7	;select IRP bank0
  5305  056E  0080               	movwf	0
  5306  056F  3001               	movlw	1
  5307  0570  00B1               	movwf	??_sprintf
  5308  0571  0831               	movf	??_sprintf,w
  5309  0572  07C0               	addwf	sprintf@sp,f
  5310  0573  3001               	movlw	1
  5311  0574  07B6               	addwf	sprintf@ccnt,f
  5312  0575  1803               	skipnc
  5313  0576  0AB7               	incf	sprintf@ccnt+1,f
  5314  0577  3000               	movlw	0
  5315  0578  07B7               	addwf	sprintf@ccnt+1,f
  5316  0579                     l3037:	
  5317                           
  5318                           ;doprnt.c: 1478: }
  5319                           ;doprnt.c: 1481: prec = c;
  5320  0579  083F               	movf	sprintf@c,w
  5321  057A  00B1               	movwf	??_sprintf
  5322  057B  0831               	movf	??_sprintf,w
  5323  057C  00B5               	movwf	sprintf@prec
  5324  057D                     l3047:	
  5325                           ;doprnt.c: 1483: while(prec--) {
  5326                           
  5327  057D  30FF               	movlw	-1
  5328  057E  00B1               	movwf	??_sprintf
  5329  057F  0831               	movf	??_sprintf,w
  5330  0580  07B5               	addwf	sprintf@prec,f
  5331  0581  0835               	movf	sprintf@prec,w
  5332  0582  3AFF               	xorlw	-1
  5333  0583  1903               	btfsc	3,2
  5334  0584  2BFE               	goto	l3049
  5335                           
  5336                           ;doprnt.c: 1487: {
  5337                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  5338  0585  300A               	movlw	10
  5339  0586  00A7               	movwf	___lwmod@divisor
  5340  0587  3000               	movlw	0
  5341  0588  00A8               	movwf	___lwmod@divisor+1
  5342  0589  0835               	movf	sprintf@prec,w
  5343  058A  00B1               	movwf	??_sprintf
  5344  058B  0731               	addwf	??_sprintf,w
  5345  058C  3E01               	addlw	low (_dpowers-__stringbase)
  5346  058D  0084               	movwf	4
  5347  058E  120A  158A  200A  120A  118A  	fcall	stringdir
  5348  0593  00A0               	movwf	___lwdiv@divisor
  5349  0594  120A  158A  200A  120A  118A  	fcall	stringdir
  5350  0599  00A1               	movwf	___lwdiv@divisor+1
  5351  059A  0839               	movf	sprintf@_val+1,w
  5352  059B  01A3               	clrf	___lwdiv@dividend+1
  5353  059C  07A3               	addwf	___lwdiv@dividend+1,f
  5354  059D  0838               	movf	sprintf@_val,w
  5355  059E  01A2               	clrf	___lwdiv@dividend
  5356  059F  07A2               	addwf	___lwdiv@dividend,f
  5357  05A0  120A  158A  2383  120A  118A  	fcall	___lwdiv
  5358  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  5359  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  5360  05A7  0821               	movf	?___lwdiv+1,w
  5361  05A8  01AA               	clrf	___lwmod@dividend+1
  5362  05A9  07AA               	addwf	___lwmod@dividend+1,f
  5363  05AA  0820               	movf	?___lwdiv,w
  5364  05AB  01A9               	clrf	___lwmod@dividend
  5365  05AC  07A9               	addwf	___lwmod@dividend,f
  5366  05AD  120A  158A  2317  120A  118A  	fcall	___lwmod
  5367  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  5368  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  5369  05B4  0827               	movf	?___lwmod,w
  5370  05B5  3E30               	addlw	48
  5371  05B6  00B2               	movwf	??_sprintf+1
  5372  05B7  0832               	movf	??_sprintf+1,w
  5373  05B8  00BF               	movwf	sprintf@c
  5374                           
  5375                           ;doprnt.c: 1532: }
  5376                           ;doprnt.c: 1533: ((*sp++ = (c)),(++ccnt));
  5377  05B9  083F               	movf	sprintf@c,w
  5378  05BA  00B1               	movwf	??_sprintf
  5379  05BB  0840               	movf	sprintf@sp,w
  5380  05BC  0084               	movwf	4
  5381  05BD  0831               	movf	??_sprintf,w
  5382  05BE  1383               	bcf	3,7	;select IRP bank0
  5383  05BF  0080               	movwf	0
  5384  05C0  3001               	movlw	1
  5385  05C1  00B1               	movwf	??_sprintf
  5386  05C2  0831               	movf	??_sprintf,w
  5387  05C3  07C0               	addwf	sprintf@sp,f
  5388  05C4  3001               	movlw	1
  5389  05C5  07B6               	addwf	sprintf@ccnt,f
  5390  05C6  1803               	skipnc
  5391  05C7  0AB7               	incf	sprintf@ccnt+1,f
  5392  05C8  3000               	movlw	0
  5393  05C9  07B7               	addwf	sprintf@ccnt+1,f
  5394  05CA  2D7D               	goto	l3047
  5395  05CB                     l3051:	
  5396                           ;doprnt.c: 1534: }
  5397                           ;doprnt.c: 1542: }
  5398                           ;doprnt.c: 1544: alldone:
  5399                           
  5400                           
  5401                           ;doprnt.c: 1547: *sp = 0;
  5402  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  5403  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  5404  05CD  0840               	movf	sprintf@sp,w
  5405  05CE  0084               	movwf	4
  5406  05CF  1383               	bcf	3,7	;select IRP bank0
  5407  05D0  0180               	clrf	0
  5408                           
  5409                           ;doprnt.c: 1549: return ccnt;
  5410  05D1  0837               	movf	sprintf@ccnt+1,w
  5411  05D2  01AD               	clrf	?_sprintf+1
  5412  05D3  07AD               	addwf	?_sprintf+1,f
  5413  05D4  0836               	movf	sprintf@ccnt,w
  5414  05D5  01AC               	clrf	?_sprintf
  5415  05D6  07AC               	addwf	?_sprintf,f
  5416  05D7  0008               	return
  5417  05D8                     __end_of_sprintf:	
  5418                           
  5419                           	psect	text20
  5420  09A4                     __ptext20:	
  5421 ;; *************** function _isdigit *****************
  5422 ;; Defined at:
  5423 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;  c               1    wreg     unsigned char 
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;  c               1    6[COMMON] unsigned char 
  5428 ;; Return value:  Size  Location     Type
  5429 ;;		None               void
  5430 ;; Registers used:
  5431 ;;		wreg, status,2, status,0
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5437 ;;      Params:         0       0       0       0       0
  5438 ;;      Locals:         2       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0
  5440 ;;      Totals:         2       0       0       0       0
  5441 ;;Total ram usage:        2 bytes
  5442 ;; Hardware stack levels used:    1
  5443 ;; Hardware stack levels required when called:    1
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_sprintf
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451                           
  5452                           ;psect for function _isdigit
  5453  09A4                     _isdigit:	
  5454                           
  5455                           ;incstack = 0
  5456                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5457                           ;isdigit@c stored from wreg
  5458  09A4  00F6               	movwf	isdigit@c
  5459  09A5  01F5               	clrf	_isdigit$439
  5460  09A6  303A               	movlw	58
  5461  09A7  0276               	subwf	isdigit@c,w
  5462  09A8  1803               	skipnc
  5463  09A9  29B0               	goto	l1745
  5464  09AA  3030               	movlw	48
  5465  09AB  0276               	subwf	isdigit@c,w
  5466  09AC  1C03               	skipc
  5467  09AD  29B0               	goto	l1745
  5468  09AE  01F5               	clrf	_isdigit$439
  5469  09AF  0AF5               	incf	_isdigit$439,f
  5470  09B0                     l1745:	
  5471  09B0  0C75               	rrf	_isdigit$439,w
  5472  09B1  0008               	return
  5473  09B2                     __end_of_isdigit:	
  5474                           
  5475                           	psect	text21
  5476  0A77                     __ptext21:	
  5477 ;; *************** function ___wmul *****************
  5478 ;; Defined at:
  5479 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5480 ;; Parameters:    Size  Location     Type
  5481 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5482 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  product         2    5[COMMON] unsigned int 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  2    0[BANK0 ] unsigned int 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5494 ;;      Params:         0       4       0       0       0
  5495 ;;      Locals:         2       0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0
  5497 ;;      Totals:         2       4       0       0       0
  5498 ;;Total ram usage:        6 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    1
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_sprintf
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           
  5509                           ;psect for function ___wmul
  5510  0A77                     ___wmul:	
  5511                           
  5512                           ;incstack = 0
  5513                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5514  0A77  01F5               	clrf	___wmul@product
  5515  0A78  01F6               	clrf	___wmul@product+1
  5516  0A79                     l2679:	
  5517  0A79  1283               	bcf	3,5	;RP0=0, select bank0
  5518  0A7A  1303               	bcf	3,6	;RP1=0, select bank0
  5519  0A7B  1C20               	btfss	___wmul@multiplier,0
  5520  0A7C  2A83               	goto	l395
  5521  0A7D  0822               	movf	___wmul@multiplicand,w
  5522  0A7E  07F5               	addwf	___wmul@product,f
  5523  0A7F  1803               	skipnc
  5524  0A80  0AF6               	incf	___wmul@product+1,f
  5525  0A81  0823               	movf	___wmul@multiplicand+1,w
  5526  0A82  07F6               	addwf	___wmul@product+1,f
  5527  0A83                     l395:	
  5528  0A83  3001               	movlw	1
  5529  0A84                     u3925:	
  5530  0A84  1003               	clrc
  5531  0A85  0DA2               	rlf	___wmul@multiplicand,f
  5532  0A86  0DA3               	rlf	___wmul@multiplicand+1,f
  5533  0A87  3EFF               	addlw	-1
  5534  0A88  1D03               	skipz
  5535  0A89  2A84               	goto	u3925
  5536  0A8A  3001               	movlw	1
  5537  0A8B                     u3935:	
  5538  0A8B  1003               	clrc
  5539  0A8C  0CA1               	rrf	___wmul@multiplier+1,f
  5540  0A8D  0CA0               	rrf	___wmul@multiplier,f
  5541  0A8E  3EFF               	addlw	-1
  5542  0A8F  1D03               	skipz
  5543  0A90  2A8B               	goto	u3935
  5544  0A91  0821               	movf	___wmul@multiplier+1,w
  5545  0A92  0420               	iorwf	___wmul@multiplier,w
  5546  0A93  1D03               	skipz
  5547  0A94  2A79               	goto	l2679
  5548  0A95  0876               	movf	___wmul@product+1,w
  5549  0A96  01A1               	clrf	?___wmul+1
  5550  0A97  07A1               	addwf	?___wmul+1,f
  5551  0A98  0875               	movf	___wmul@product,w
  5552  0A99  01A0               	clrf	?___wmul
  5553  0A9A  07A0               	addwf	?___wmul,f
  5554  0A9B  0008               	return
  5555  0A9C                     __end_of___wmul:	
  5556                           
  5557                           	psect	text22
  5558  0B17                     __ptext22:	
  5559 ;; *************** function ___lwmod *****************
  5560 ;; Defined at:
  5561 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  divisor         2    7[BANK0 ] unsigned int 
  5564 ;;  dividend        2    9[BANK0 ] unsigned int 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  counter         1   11[BANK0 ] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  2    7[BANK0 ] unsigned int 
  5569 ;; Registers used:
  5570 ;;		wreg, status,2, status,0
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5576 ;;      Params:         0       4       0       0       0
  5577 ;;      Locals:         0       1       0       0       0
  5578 ;;      Temps:          1       0       0       0       0
  5579 ;;      Totals:         1       5       0       0       0
  5580 ;;Total ram usage:        6 bytes
  5581 ;; Hardware stack levels used:    1
  5582 ;; Hardware stack levels required when called:    1
  5583 ;; This function calls:
  5584 ;;		Nothing
  5585 ;; This function is called by:
  5586 ;;		_sprintf
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           
  5591                           ;psect for function ___lwmod
  5592  0B17                     ___lwmod:	
  5593                           
  5594                           ;incstack = 0
  5595                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5596  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  5597  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  5598  0B19  0828               	movf	___lwmod@divisor+1,w
  5599  0B1A  0427               	iorwf	___lwmod@divisor,w
  5600  0B1B  1903               	skipnz
  5601  0B1C  2B46               	goto	l2909
  5602  0B1D  01AB               	clrf	___lwmod@counter
  5603  0B1E  0AAB               	incf	___lwmod@counter,f
  5604  0B1F                     l2899:	
  5605  0B1F  1BA8               	btfsc	___lwmod@divisor+1,7
  5606  0B20  2B2D               	goto	l2901
  5607  0B21  3001               	movlw	1
  5608  0B22                     u4505:	
  5609  0B22  1003               	clrc
  5610  0B23  0DA7               	rlf	___lwmod@divisor,f
  5611  0B24  0DA8               	rlf	___lwmod@divisor+1,f
  5612  0B25  3EFF               	addlw	-1
  5613  0B26  1D03               	skipz
  5614  0B27  2B22               	goto	u4505
  5615  0B28  3001               	movlw	1
  5616  0B29  00F6               	movwf	??___lwmod
  5617  0B2A  0876               	movf	??___lwmod,w
  5618  0B2B  07AB               	addwf	___lwmod@counter,f
  5619  0B2C  2B1F               	goto	l2899
  5620  0B2D                     l2901:	
  5621  0B2D  0828               	movf	___lwmod@divisor+1,w
  5622  0B2E  022A               	subwf	___lwmod@dividend+1,w
  5623  0B2F  1D03               	skipz
  5624  0B30  2B33               	goto	u4525
  5625  0B31  0827               	movf	___lwmod@divisor,w
  5626  0B32  0229               	subwf	___lwmod@dividend,w
  5627  0B33                     u4525:	
  5628  0B33  1C03               	skipc
  5629  0B34  2B3B               	goto	l2905
  5630  0B35  0827               	movf	___lwmod@divisor,w
  5631  0B36  02A9               	subwf	___lwmod@dividend,f
  5632  0B37  0828               	movf	___lwmod@divisor+1,w
  5633  0B38  1C03               	skipc
  5634  0B39  03AA               	decf	___lwmod@dividend+1,f
  5635  0B3A  02AA               	subwf	___lwmod@dividend+1,f
  5636  0B3B                     l2905:	
  5637  0B3B  3001               	movlw	1
  5638  0B3C                     u4535:	
  5639  0B3C  1003               	clrc
  5640  0B3D  0CA8               	rrf	___lwmod@divisor+1,f
  5641  0B3E  0CA7               	rrf	___lwmod@divisor,f
  5642  0B3F  3EFF               	addlw	-1
  5643  0B40  1D03               	skipz
  5644  0B41  2B3C               	goto	u4535
  5645  0B42  3001               	movlw	1
  5646  0B43  02AB               	subwf	___lwmod@counter,f
  5647  0B44  1D03               	btfss	3,2
  5648  0B45  2B2D               	goto	l2901
  5649  0B46                     l2909:	
  5650  0B46  082A               	movf	___lwmod@dividend+1,w
  5651  0B47  01A8               	clrf	?___lwmod+1
  5652  0B48  07A8               	addwf	?___lwmod+1,f
  5653  0B49  0829               	movf	___lwmod@dividend,w
  5654  0B4A  01A7               	clrf	?___lwmod
  5655  0B4B  07A7               	addwf	?___lwmod,f
  5656  0B4C  0008               	return
  5657  0B4D                     __end_of___lwmod:	
  5658                           
  5659                           	psect	text23
  5660  0B83                     __ptext23:	
  5661 ;; *************** function ___lwdiv *****************
  5662 ;; Defined at:
  5663 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  divisor         2    0[BANK0 ] unsigned int 
  5666 ;;  dividend        2    2[BANK0 ] unsigned int 
  5667 ;; Auto vars:     Size  Location     Type
  5668 ;;  quotient        2    5[BANK0 ] unsigned int 
  5669 ;;  counter         1    4[BANK0 ] unsigned char 
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  2    0[BANK0 ] unsigned int 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5679 ;;      Params:         0       4       0       0       0
  5680 ;;      Locals:         0       3       0       0       0
  5681 ;;      Temps:          1       0       0       0       0
  5682 ;;      Totals:         1       7       0       0       0
  5683 ;;Total ram usage:        8 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    1
  5686 ;; This function calls:
  5687 ;;		Nothing
  5688 ;; This function is called by:
  5689 ;;		_sprintf
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           
  5694                           ;psect for function ___lwdiv
  5695  0B83                     ___lwdiv:	
  5696                           
  5697                           ;incstack = 0
  5698                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5699  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  5700  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  5701  0B85  01A5               	clrf	___lwdiv@quotient
  5702  0B86  01A6               	clrf	___lwdiv@quotient+1
  5703  0B87  0821               	movf	___lwdiv@divisor+1,w
  5704  0B88  0420               	iorwf	___lwdiv@divisor,w
  5705  0B89  1903               	skipnz
  5706  0B8A  2BBC               	goto	l2887
  5707  0B8B  01A4               	clrf	___lwdiv@counter
  5708  0B8C  0AA4               	incf	___lwdiv@counter,f
  5709  0B8D                     l2875:	
  5710  0B8D  1BA1               	btfsc	___lwdiv@divisor+1,7
  5711  0B8E  2B9B               	goto	l2877
  5712  0B8F  3001               	movlw	1
  5713  0B90                     u4435:	
  5714  0B90  1003               	clrc
  5715  0B91  0DA0               	rlf	___lwdiv@divisor,f
  5716  0B92  0DA1               	rlf	___lwdiv@divisor+1,f
  5717  0B93  3EFF               	addlw	-1
  5718  0B94  1D03               	skipz
  5719  0B95  2B90               	goto	u4435
  5720  0B96  3001               	movlw	1
  5721  0B97  00F5               	movwf	??___lwdiv
  5722  0B98  0875               	movf	??___lwdiv,w
  5723  0B99  07A4               	addwf	___lwdiv@counter,f
  5724  0B9A  2B8D               	goto	l2875
  5725  0B9B                     l2877:	
  5726  0B9B  3001               	movlw	1
  5727  0B9C                     u4455:	
  5728  0B9C  1003               	clrc
  5729  0B9D  0DA5               	rlf	___lwdiv@quotient,f
  5730  0B9E  0DA6               	rlf	___lwdiv@quotient+1,f
  5731  0B9F  3EFF               	addlw	-1
  5732  0BA0  1D03               	skipz
  5733  0BA1  2B9C               	goto	u4455
  5734  0BA2  0821               	movf	___lwdiv@divisor+1,w
  5735  0BA3  0223               	subwf	___lwdiv@dividend+1,w
  5736  0BA4  1D03               	skipz
  5737  0BA5  2BA8               	goto	u4465
  5738  0BA6  0820               	movf	___lwdiv@divisor,w
  5739  0BA7  0222               	subwf	___lwdiv@dividend,w
  5740  0BA8                     u4465:	
  5741  0BA8  1C03               	skipc
  5742  0BA9  2BB1               	goto	l2883
  5743  0BAA  0820               	movf	___lwdiv@divisor,w
  5744  0BAB  02A2               	subwf	___lwdiv@dividend,f
  5745  0BAC  0821               	movf	___lwdiv@divisor+1,w
  5746  0BAD  1C03               	skipc
  5747  0BAE  03A3               	decf	___lwdiv@dividend+1,f
  5748  0BAF  02A3               	subwf	___lwdiv@dividend+1,f
  5749  0BB0  1425               	bsf	___lwdiv@quotient,0
  5750  0BB1                     l2883:	
  5751  0BB1  3001               	movlw	1
  5752  0BB2                     u4475:	
  5753  0BB2  1003               	clrc
  5754  0BB3  0CA1               	rrf	___lwdiv@divisor+1,f
  5755  0BB4  0CA0               	rrf	___lwdiv@divisor,f
  5756  0BB5  3EFF               	addlw	-1
  5757  0BB6  1D03               	skipz
  5758  0BB7  2BB2               	goto	u4475
  5759  0BB8  3001               	movlw	1
  5760  0BB9  02A4               	subwf	___lwdiv@counter,f
  5761  0BBA  1D03               	btfss	3,2
  5762  0BBB  2B9B               	goto	l2877
  5763  0BBC                     l2887:	
  5764  0BBC  0826               	movf	___lwdiv@quotient+1,w
  5765  0BBD  01A1               	clrf	?___lwdiv+1
  5766  0BBE  07A1               	addwf	?___lwdiv+1,f
  5767  0BBF  0825               	movf	___lwdiv@quotient,w
  5768  0BC0  01A0               	clrf	?___lwdiv
  5769  0BC1  07A0               	addwf	?___lwdiv,f
  5770  0BC2  0008               	return
  5771  0BC3                     __end_of___lwdiv:	
  5772                           
  5773                           	psect	text24
  5774  07D4                     __ptext24:	
  5775 ;; *************** function _printToLCD *****************
  5776 ;; Defined at:
  5777 ;;		line 52 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\lcd_functions.h"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  str             2    0[BANK0 ] PTR const unsigned char 
  5780 ;;		 -> STR_21(16), debugInfo(10), displayTime@timeFormat(16), STR_7(8), 
  5781 ;;		 -> STR_6(8), displayPPM@strBuffer(20), STR_2(20), displayDataDHT11@buffer(20), 
  5782 ;; Auto vars:     Size  Location     Type
  5783 ;;		None
  5784 ;; Return value:  Size  Location     Type
  5785 ;;		None               void
  5786 ;; Registers used:
  5787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5793 ;;      Params:         0       2       0       0       0
  5794 ;;      Locals:         0       0       0       0       0
  5795 ;;      Temps:          0       0       0       0       0
  5796 ;;      Totals:         0       2       0       0       0
  5797 ;;Total ram usage:        2 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; Hardware stack levels required when called:    2
  5800 ;; This function calls:
  5801 ;;		_dataCTRL
  5802 ;;		_instCTRL
  5803 ;; This function is called by:
  5804 ;;		_displayDataDHT11
  5805 ;;		_runDHT11
  5806 ;;		_displayPPM
  5807 ;;		_displayTime
  5808 ;;		_main
  5809 ;;		_printStatusPPM
  5810 ;;		_setHoursStart
  5811 ;;		_setHoursEnd
  5812 ;;		_setMinutesStart
  5813 ;;		_setMinutesEnd
  5814 ;; This function uses a non-reentrant model
  5815 ;;
  5816                           
  5817                           
  5818                           ;psect for function _printToLCD
  5819  07D4                     _printToLCD:	
  5820                           
  5821                           ;lcd_functions.h: 54: instCTRL(0x0C);
  5822                           
  5823                           ;incstack = 0
  5824                           ; Regs used in _printToLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5825  07D4  300C               	movlw	12
  5826  07D5  120A  158A  21C5  120A  118A  	fcall	_instCTRL
  5827  07DA                     l2929:	
  5828                           ;lcd_functions.h: 55: while (*str)
  5829                           
  5830  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  5831  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  5832  07DC  0821               	movf	printToLCD@str+1,w
  5833  07DD  00FF               	movwf	127
  5834  07DE  0820               	movf	printToLCD@str,w
  5835  07DF  0084               	movwf	4
  5836  07E0  120A  158A  2000  120A  118A  	fcall	stringtab
  5837  07E5  3800               	iorlw	0
  5838  07E6  1903               	btfsc	3,2
  5839  07E7  0008               	return
  5840                           
  5841                           ;lcd_functions.h: 56: {
  5842                           ;lcd_functions.h: 57: dataCTRL(*str);
  5843  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  5844  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  5845  07EA  0821               	movf	printToLCD@str+1,w
  5846  07EB  00FF               	movwf	127
  5847  07EC  0820               	movf	printToLCD@str,w
  5848  07ED  0084               	movwf	4
  5849  07EE  120A  158A  2000  120A  118A  	fcall	stringtab
  5850  07F3  120A  158A  21B2  120A  118A  	fcall	_dataCTRL
  5851                           
  5852                           ;lcd_functions.h: 58: str++;
  5853  07F8  3001               	movlw	1
  5854  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  5855  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  5856  07FB  07A0               	addwf	printToLCD@str,f
  5857  07FC  1803               	skipnc
  5858  07FD  0AA1               	incf	printToLCD@str+1,f
  5859  07FE  2FDA               	goto	l2929
  5860  07FF                     __end_of_printToLCD:	
  5861                           
  5862                           	psect	text25
  5863  09C5                     __ptext25:	
  5864 ;; *************** function _instCTRL *****************
  5865 ;; Defined at:
  5866 ;;		line 22 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\lcd_functions.h"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;  CMD             1    wreg     unsigned char 
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  CMD             1    6[COMMON] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;		None               void
  5873 ;; Registers used:
  5874 ;;		wreg
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5880 ;;      Params:         0       0       0       0       0
  5881 ;;      Locals:         1       0       0       0       0
  5882 ;;      Temps:          1       0       0       0       0
  5883 ;;      Totals:         2       0       0       0       0
  5884 ;;Total ram usage:        2 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    1
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		_initLCD
  5891 ;;		_printToLCD
  5892 ;;		_runDHT11
  5893 ;;		_main
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           
  5898                           ;psect for function _instCTRL
  5899  09C5                     _instCTRL:	
  5900                           
  5901                           ;incstack = 0
  5902                           ; Regs used in _instCTRL: [wreg]
  5903                           ;instCTRL@CMD stored from wreg
  5904  09C5  00F6               	movwf	instCTRL@CMD
  5905                           
  5906                           ;lcd_functions.h: 24: PORTD = CMD;
  5907  09C6  0876               	movf	instCTRL@CMD,w
  5908  09C7  1283               	bcf	3,5	;RP0=0, select bank0
  5909  09C8  1303               	bcf	3,6	;RP1=0, select bank0
  5910  09C9  0088               	movwf	8	;volatile
  5911                           
  5912                           ;lcd_functions.h: 25: RC0 = 0;
  5913  09CA  1007               	bcf	7,0	;volatile
  5914                           
  5915                           ;lcd_functions.h: 26: RC1 = 0;
  5916  09CB  1087               	bcf	7,1	;volatile
  5917                           
  5918                           ;lcd_functions.h: 27: RC2 = 1;
  5919  09CC  1507               	bsf	7,2	;volatile
  5920                           
  5921                           ;lcd_functions.h: 28: _delay((unsigned long)((1)*(4000000/4000.0)));
  5922  09CD  30F9               	movlw	249
  5923  09CE  00F5               	movwf	??_instCTRL
  5924  09CF                     u5317:	
  5925  09CF  0000               	nop
  5926  09D0  0BF5               	decfsz	??_instCTRL,f
  5927  09D1  29CF               	goto	u5317
  5928  09D2  29D3               	nop2	;nop
  5929  09D3  0000               	nop
  5930                           
  5931                           ;lcd_functions.h: 29: RC2 = 0;
  5932  09D4  1283               	bcf	3,5	;RP0=0, select bank0
  5933  09D5  1303               	bcf	3,6	;RP1=0, select bank0
  5934  09D6  1107               	bcf	7,2	;volatile
  5935  09D7  0008               	return
  5936  09D8                     __end_of_instCTRL:	
  5937                           
  5938                           	psect	text26
  5939  09B2                     __ptext26:	
  5940 ;; *************** function _dataCTRL *****************
  5941 ;; Defined at:
  5942 ;;		line 32 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\lcd_functions.h"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  DAT             1    wreg     unsigned char 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  DAT             1    6[COMMON] unsigned char 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;		None               void
  5949 ;; Registers used:
  5950 ;;		wreg
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5956 ;;      Params:         0       0       0       0       0
  5957 ;;      Locals:         1       0       0       0       0
  5958 ;;      Temps:          1       0       0       0       0
  5959 ;;      Totals:         2       0       0       0       0
  5960 ;;Total ram usage:        2 bytes
  5961 ;; Hardware stack levels used:    1
  5962 ;; Hardware stack levels required when called:    1
  5963 ;; This function calls:
  5964 ;;		Nothing
  5965 ;; This function is called by:
  5966 ;;		_printToLCD
  5967 ;; This function uses a non-reentrant model
  5968 ;;
  5969                           
  5970                           
  5971                           ;psect for function _dataCTRL
  5972  09B2                     _dataCTRL:	
  5973                           
  5974                           ;incstack = 0
  5975                           ; Regs used in _dataCTRL: [wreg]
  5976                           ;dataCTRL@DAT stored from wreg
  5977  09B2  00F6               	movwf	dataCTRL@DAT
  5978                           
  5979                           ;lcd_functions.h: 34: PORTD = DAT;
  5980  09B3  0876               	movf	dataCTRL@DAT,w
  5981  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5982  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5983  09B6  0088               	movwf	8	;volatile
  5984                           
  5985                           ;lcd_functions.h: 35: RC0 = 1;
  5986  09B7  1407               	bsf	7,0	;volatile
  5987                           
  5988                           ;lcd_functions.h: 36: RC1 = 0;
  5989  09B8  1087               	bcf	7,1	;volatile
  5990                           
  5991                           ;lcd_functions.h: 37: RC2 = 1;
  5992  09B9  1507               	bsf	7,2	;volatile
  5993                           
  5994                           ;lcd_functions.h: 38: _delay((unsigned long)((1)*(4000000/4000.0)));
  5995  09BA  30F9               	movlw	249
  5996  09BB  00F5               	movwf	??_dataCTRL
  5997  09BC                     u5327:	
  5998  09BC  0000               	nop
  5999  09BD  0BF5               	decfsz	??_dataCTRL,f
  6000  09BE  29BC               	goto	u5327
  6001  09BF  29C0               	nop2	;nop
  6002  09C0  0000               	nop
  6003                           
  6004                           ;lcd_functions.h: 39: RC2 = 0;
  6005  09C1  1283               	bcf	3,5	;RP0=0, select bank0
  6006  09C2  1303               	bcf	3,6	;RP1=0, select bank0
  6007  09C3  1107               	bcf	7,2	;volatile
  6008  09C4  0008               	return
  6009  09C5                     __end_of_dataCTRL:	
  6010                           
  6011                           	psect	text27
  6012  09D8                     __ptext27:	
  6013 ;; *************** function _ISR *****************
  6014 ;; Defined at:
  6015 ;;		line 79 in file "D:\uni_2023-2024\cpe3201\embedded-systems\FinalProject\working-build\isolated\main.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;		None               void
  6022 ;; Registers used:
  6023 ;;		wreg, status,2, status,0
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6029 ;;      Params:         0       0       0       0       0
  6030 ;;      Locals:         0       0       0       0       0
  6031 ;;      Temps:          5       0       0       0       0
  6032 ;;      Totals:         5       0       0       0       0
  6033 ;;Total ram usage:        5 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		Interrupt level 1
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           
  6043                           ;psect for function _ISR
  6044  09D8                     _ISR:	
  6045                           
  6046                           ;main.c: 81: GIE = 0;
  6047  09D8  138B               	bcf	11,7	;volatile
  6048                           
  6049                           ;main.c: 82: if (INTF)
  6050  09D9  1C8B               	btfss	11,1	;volatile
  6051  09DA  29E2               	goto	i1l1681
  6052                           
  6053                           ;main.c: 83: {
  6054                           ;main.c: 84: INTF = 0;
  6055  09DB  108B               	bcf	11,1	;volatile
  6056                           
  6057                           ;main.c: 85: mode = (mode + 1) % 2;
  6058  09DC  0877               	movf	_mode,w
  6059  09DD  3E01               	addlw	1
  6060  09DE  3901               	andlw	1
  6061  09DF  00F0               	movwf	??_ISR
  6062  09E0  0870               	movf	??_ISR,w
  6063  09E1  00F7               	movwf	_mode
  6064  09E2                     i1l1681:	
  6065                           
  6066                           ;main.c: 86: }
  6067                           ;main.c: 87: GIE = 1;
  6068  09E2  178B               	bsf	11,7	;volatile
  6069  09E3  0874               	movf	??_ISR+4,w
  6070  09E4  00FF               	movwf	127
  6071  09E5  0873               	movf	??_ISR+3,w
  6072  09E6  008A               	movwf	10
  6073  09E7  0872               	movf	??_ISR+2,w
  6074  09E8  0084               	movwf	4
  6075  09E9  0E71               	swapf	(??_ISR+1)^(0+-128),w
  6076  09EA  0083               	movwf	3
  6077  09EB  0EFE               	swapf	126,f
  6078  09EC  0E7E               	swapf	126,w
  6079  09ED  0009               	retfie
  6080  09EE                     __end_of_ISR:	
  6081  007E                     btemp	set	126	;btemp
  6082  007E                     wtemp	set	126
  6083  007E                     wtemp0	set	126
  6084  0080                     wtemp1	set	128
  6085  0082                     wtemp2	set	130
  6086  0084                     wtemp3	set	132
  6087  0086                     wtemp4	set	134
  6088  0088                     wtemp5	set	136
  6089  007F                     wtemp6	set	127
  6090  007E                     ttemp	set	126
  6091  007E                     ttemp0	set	126
  6092  0081                     ttemp1	set	129
  6093  0084                     ttemp2	set	132
  6094  0087                     ttemp3	set	135
  6095  007F                     ttemp4	set	127
  6096  007E                     ltemp	set	126
  6097  007E                     ltemp0	set	126
  6098  0082                     ltemp1	set	130
  6099  0086                     ltemp2	set	134
  6100  0080                     ltemp3	set	128
  6101                           
  6102                           	psect	intentry
  6103  0004                     __pintentry:	
  6104                           ;incstack = 0
  6105                           ; Regs used in _ISR: [wreg+status,2+status,0]
  6106                           
  6107  0004                     interrupt_function:	
  6108  007E                     saved_w	set	btemp
  6109  0004  00FE               	movwf	btemp
  6110  0005  0E03               	swapf	3,w
  6111  0006  00F1               	movwf	??_ISR+1
  6112  0007  0804               	movf	4,w
  6113  0008  00F2               	movwf	??_ISR+2
  6114  0009  080A               	movf	10,w
  6115  000A  00F3               	movwf	??_ISR+3
  6116  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6117  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6118  000D  087F               	movf	btemp+1,w
  6119  000E  00F4               	movwf	??_ISR+4
  6120  000F  120A  158A  29D8   	ljmp	_ISR


Data Sizes:
    Strings     130
    Constant    10
    Data        6
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     62      78
    BANK1            80     43      56
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[10]), STR_17(CODE[10]), 
		 -> STR_16(CODE[10]), STR_15(CODE[10]), STR_14(CODE[10]), STR_13(CODE[10]), 
		 -> STR_12(CODE[10]), STR_11(CODE[10]), STR_10(CODE[10]), STR_9(CODE[10]), 
		 -> STR_8(CODE[16]), STR_5(CODE[9]), STR_4(CODE[3]), STR_3(CODE[6]), 
		 -> STR_1(CODE[17]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> debugInfo(BANK1[10]), displayTime@timeFormat(BANK0[16]), displayPPM@strBuffer(BANK1[20]), displayDataDHT11@buffer(BANK0[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S243$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    displayPPM@bufPtr	PTR unsigned char  size(1) Largest target is 20
		 -> displayPPM@strBuffer(BANK1[20]), 

    readDHT11@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> temperature(BANK0[1]), 

    readDHT11@humidity	PTR unsigned char  size(1) Largest target is 1
		 -> humidity(BANK0[1]), 

    printToLCD@str	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_21(CODE[16]), debugInfo(BANK1[10]), displayTime@timeFormat(BANK0[16]), STR_7(CODE[8]), 
		 -> STR_6(CODE[8]), displayPPM@strBuffer(BANK1[20]), STR_2(CODE[20]), displayDataDHT11@buffer(BANK0[20]), 


Critical Paths under _main in COMMON

    _main->_instCTRL
    _main->_runClock
    _runMQ135->_readADC
    _CalcMQ135->___awtoft
    _CalcMQ135->_readADC
    ___ftdiv->___awtoft
    _runDHT11->_instCTRL
    _initLCD->_instCTRL
    _displayPPM->___awtoft
    ___fttol->___awtoft
    ___ftneg->___awtoft
    ___ftmul->___awtoft
    ___ftadd->___awtoft
    _sprintf->___lwmod
    _sprintf->___wmul
    _sprintf->_isdigit
    ___lwmod->___lwdiv
    _printToLCD->_dataCTRL
    _printToLCD->_instCTRL

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_displayDataDHT11
    _runMQ135->_CalcMQ135
    _CalcMQ135->___ftdiv
    ___ftdiv->___ftmul
    _runDHT11->_readDHT11
    _displayTime->_sprintf
    _displayPPM->___fttol
    ___fttol->___ftadd
    ___ftneg->___awtoft
    ___ftmul->___ftneg
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _displayDataDHT11->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _runMQ135->_CalcMQ135

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   43346
                                             39 BANK1      4     4      0
                   _displayDataDHT11
                         _displayPPM
                        _displayTime
                          _initDHT11
                            _initLCD
                           _instCTRL
                         _printToLCD
                           _runClock
                           _runDHT11
                           _runMQ135
 ---------------------------------------------------------------------------------
 (1) _runMQ135                                             0     0      0   14537
                          _CalcMQ135
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              5     3      2      31
                                              5 COMMON     2     0      2
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _CalcMQ135                                           42    39      3   14506
                                             47 BANK0      3     0      3
                                              0 BANK1     39    39      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            _readADC (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2717
                                             31 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _runDHT11                                             3     3      0    1290
                                             14 BANK0      3     3      0
                           _instCTRL
                         _printToLCD
                          _readDHT11
 ---------------------------------------------------------------------------------
 (2) _readDHT11                                           15    14      1     444
                                              5 COMMON     1     0      1
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (1) _runClock                                             2     2      0       0
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0      22
                                              0 BANK0      1     1      0
                           _instCTRL
 ---------------------------------------------------------------------------------
 (1) _initDHT11                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         21    21      0    4992
                                             33 BANK0     21    21      0
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _displayPPM                                          27    27      0   16667
                                             58 BANK0      2     2      0
                                              0 BANK1     25    25      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     358
                                             44 BANK0     14    10      4
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                             12 BANK0      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    4345
                                             15 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    4262
                                             31 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    2300
                                              5 COMMON     2     2      0
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2037
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _displayDataDHT11                                    29    25      4    4992
                                             33 BANK0     29    25      4
                         _printToLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    16      5    4058
                                             12 BANK0     21    16      5
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     266
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     362
                                              6 COMMON     1     1      0
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     371
                                              5 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _printToLCD                                           2     0      2     824
                                              0 BANK0      2     0      2
                           _dataCTRL
                           _instCTRL
 ---------------------------------------------------------------------------------
 (3) _instCTRL                                             2     2      0      22
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _dataCTRL                                             2     2      0      22
                                              5 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _displayDataDHT11
     _printToLCD
       _dataCTRL
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _displayPPM
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
     ___ftneg
       ___awtoft (ARG)
         ___ftpack
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
     _printToLCD
       _dataCTRL
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _displayTime
     _printToLCD
       _dataCTRL
       _instCTRL
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _initDHT11
   _initLCD
     _instCTRL
   _instCTRL
   _printToLCD
     _dataCTRL
     _instCTRL
   _runClock
   _runDHT11
     _instCTRL
     _printToLCD
       _dataCTRL
       _instCTRL
     _readDHT11
   _runMQ135
     _CalcMQ135
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       _readADC (ARG)
     _readADC

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2B      38       7       70.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3E      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8F      12        0.0%
ABS                  0      0      8F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed May 15 21:47:34 2024

                        pc 0002               ?_displayTime 0070                __CFG_CP$OFF 0000  
                       l57 0ADD                         l94 0D10                         l98 0D2F  
                       fsr 0004        ___wmul@multiplicand 0022               ___ftadd@exp1 004B  
             ___ftadd@exp2 004A               ___ftadd@sign 0049                        l276 042A  
                      l294 04EF                        l562 0C14                        l395 0A83  
                      l556 0BFB                        l585 0F9F                        _GIE 005F  
                      _RC0 0038                        _RC1 0039                        _RC2 003A  
                      _RC3 003B                        _RC4 003C               __CFG_CPD$OFF 0000  
                      _ISR 09D8                        _PPM 00CB                        _key 0063  
                      fsr0 0004                        indf 0000               __CFG_FOSC$HS 0000  
            printToLCD@str 0020               __CFG_LVP$OFF 0000                       ?_ISR 0070  
             ___ftdiv@cntr 0049               ___ftdiv@sign 004E                       l2041 0D0B  
                     l2033 0CFF                       l2025 0CF4                       l3021 0549  
                     l2053 0D31                       l2061 0D41                       l3111 06DB  
                     l3009 0529                       l2057 0D39                       l3019 0545  
                     l3051 05CB                       l2219 0C47                       l2323 0A01  
                     l2067 0D5D                       l3029 0564                       l3037 0579  
                     l2253 0CB2                       l2245 0C96                       l2237 0C79  
                     l3047 057D                       l2247 0CA1                       l2239 0C89  
                     l3049 03FE                       l2249 0CA4                       l3313 0761  
                     l3319 0798                       l1745 09B0                       l2713 0F27  
                     l3089 0B73                       l2651 0BCD                       l2731 0F50  
                     l2901 0B2D                       l2741 0F76                       l2709 0F20  
                     l2821 0E3C                       l2655 0BD4                       l2751 0F9B  
                     l2743 0F7A                       l2719 0F36                       l2807 0DFE  
                     l2905 0B3B                       l2665 0C00                       l2657 0BE0  
                     l2737 0F65                       l2667 0C0A                       l2659 0BE5  
                     l2755 0FB1                       l2739 0F71                       l2851 0EB9  
                     l2843 0EA1                       l2827 0E52                       l3299 07B8  
                     l2909 0B46                       l2749 0F8F                       l2679 0A79  
                     l2951 043A                       l2943 0426                       l2759 0FC3  
                     l2855 0EC9                       l2839 0E91                       l2929 07DA  
                     l2697 0AA8                       l2769 0FE6                       l2785 0D9A  
                     l2883 0BB1                       l2875 0B8D                       l2955 044C  
                     l2779 0D84                       l2877 0B9B                       l2981 04C0  
                     l2965 048A                       l2949 042F                       l2887 0BBC  
                     l2967 04A1                       l2799 0DDF                       l2977 04BA  
                     l2899 0B1F                       l2997 050E                       l2989 04E1  
                     l2999 0512                       STR_1 082E                       STR_2 081A  
                     STR_3 0896                       STR_4 083C                       STR_5 087D  
                     STR_6 0886                       STR_7 088E                       STR_8 084F  
                     STR_9 0869                       u3025 0C98                       u4115 0F7B  
                     u4055 0F51                       u2704 0D24                       u4145 0F90  
                     u4305 0E5E                       u2705 0D22                       u4225 0DAC  
                     u4315 0E70                       u4235 0DBE                       u4085 0F66  
                     u4405 0ED2                       u4245 0DE0                       u4255 0DF1  
                     u5207 0AD7                       u4505 0B22                       u4345 0EA2  
                     u5217 0B7B                       u4265 0DFF                       u4435 0B90  
                     u5307 0AEE                       u4355 0EAA                       u5227 0CD9  
                     _PEIE 005E                       u5317 09CF                       u4525 0B33  
                     u5237 0CE2                       _INTE 005C                       _INTF 0059  
                     u5327 09BC                       u4455 0B9C                       u4535 0B3C  
                     u5247 0CEC                       u4465 0BA8                       u3825 0BD9  
                     u5257 0CF6                       u5177 0728                       u4475 0BB2  
                     u4635 04D7                       u4395 0ECA                       u5267 0D01  
                     u4555 0ACB                       u5187 0753                       u3925 0A84  
                     u3845 0BF4                       u2965 0C4E                       u5277 0D14  
                     u5197 07B1                       u3935 0A8B                       u5287 0A05  
                     u3865 0C03                       u5297 0A39                       u4675 04FE  
                     u2995 0C7A                       u3895 0C1B                       u4785 06C6  
             __CFG_WRT$OFF 0000                       _main 0701               ___ftpack@arg 0020  
                     _mode 0077               ___ftpack@exp 0023                       btemp 007E  
            __CFG_BOREN$ON 0000                       ltemp 007E                       start 0012  
                     ttemp 007E                       wtemp 007E      displayPPM@ppmFraction 00B6  
             ___ftmul@cntr 003D               ___ftmul@sign 003E                      ??_ISR 0070  
             ___fttol@exp1 0059               ___fttol@lval 0055                      ?_main 0070  
          __end_of___ftadd 1000                      STR_10 085F                      STR_11 0873  
                    STR_21 083F              __CFG_WDTE$OFF 0000            __end_of___ftdiv 0E24  
          __end_of___ftneg 09A4            __end_of___ftmul 0EF7            __end_of___fttol 0CBB  
          __end_of___lwdiv 0BC3            __end_of___lwmod 0B4D                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
             CalcMQ135@co2 00C1            __end_of_readADC 0AE8            __end_of_initLCD 0A53  
            ___awtoft@sign 002B            __end_of_dpowers 081A     displayDataDHT11@buffer 004A  
          __end_of_isdigit 09B2                      _hours 0068              ___ftpack@sign 0024  
                    pclath 000A                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080         __size_of_CalcMQ135 03A7  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            __end_of_sprintf 05D8            __initialization 0015  
       displayPPM@ppmWhole 00B4               __end_of_main 07D4                     ??_main 00C7  
            ___fttol@sign1 0054                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E           __end_of___awtoft 0AC1  
         __end_of___ftpack 0C2D                     i1l1681 09E2                     _INTEDG 040E  
         __end_of_dataCTRL 09C5                instCTRL@CMD 0076             __CFG_PWRTE$OFF 0000  
                   ___wmul 0A77                  ??___ftadd 0045                  ??___ftdiv 0045  
                ??___ftneg 0077                  ??___ftmul 0035                  ??___fttol 0050  
                ??___lwdiv 0075                  ??___lwmod 0076           __end_of_instCTRL 09D8  
    displayTime@timeFormat 0046          ?_displayDataDHT11 0041          __end_of_CalcMQ135 03F5  
     __size_of_displayTime 0024         ??_displayDataDHT11 0045           __end_of_runDHT11 0B83  
    ___ftmul@f3_as_product 003A                  ??_readADC 0020                  ??_initLCD 0020  
         __end_of_runMQ135 0A77                  ??_isdigit 0075                     saved_w 007E  
         __end_of_runClock 0A0B                  ??_sprintf 0031    __end_of__initialization 004A  
               ___ftadd@f1 003F                 ___ftadd@f2 0042                 ___ftdiv@f1 0042  
               ___ftdiv@f2 003F                 ___ftdiv@f3 004A                 ___ftneg@f1 002C  
               ___awtoft@c 0028                 ___ftmul@f1 002F                 ___ftmul@f2 0032  
               ___fttol@f1 004C             __pcstackCOMMON 0070               __pidataBANK0 0985  
      displayPPM@strBuffer 00A0               sprintf@width 003D         __size_of_initDHT11 0007  
       __size_of_readDHT11 00B1                 __pbssBANK0 005E                 __pbssBANK1 00CB  
               __pmaintext 0701                    ?___wmul 0020                 __pintentry 0004  
                ?___awtoft 0028                  ?___ftpack 0020                  ?_dataCTRL 0070  
                  _GO_DONE 00FA                 _displayPPM 05D8                 __stringtab 0800  
                ?_instCTRL 0070                  ?_runDHT11 0070                  ?_runMQ135 0070  
           CalcMQ135@ratio 00C4            _savedHoursStart 006B                  ?_runClock 0070  
                  ___ftadd 0EF7                    ___ftdiv 0D6C                    ___ftneg 099A  
          __size_of___wmul 0025                    ___ftmul 0E24                    ___fttol 0C2D  
                  ___lwdiv 0B83                    ___lwmod 0B17          __end_of_initDHT11 0992  
          _savedMinutesEnd 006C          __end_of_readDHT11 0D6C                 ??___awtoft 0075  
               ??___ftpack 0025                    __ptext1 0A53                    __ptext2 0AC1  
                  __ptext3 004E                    __ptext4 0D6C                    __ptext5 0B4D  
                  __ptext6 0CBB                    __ptext7 09EE                    __ptext8 0A2F  
                  __ptext9 098B                 ??_dataCTRL 0075                    _readADC 0AC1  
                  _initLCD 0A2F               __size_of_ISR 0016                    _dpowers 0810  
                  _isdigit 09A4                    _ppmFlag 0078                    _minutes 0065  
            readDHT11@bits 0027                    _sprintf 03F5                    clrloop0 0993  
     end_of_initialization 004A                 ??_instCTRL 0075                 ??_runDHT11 002E  
               ??_runMQ135 0077                 ??_runClock 0075                 _printToLCD 07D4  
                _PORTBbits 0006                  _CalcMQ135 004E                  _TRISBbits 0086  
              ?_displayPPM 0070  __size_of_displayDataDHT11 002F                ___ftdiv@exp 004D  
         displayPPM@bufPtr 00B8           CalcMQ135@RAW_ADC 004F                ___ftmul@exp 0039  
            ??_displayTime 0041             __end_of___wmul 0A9C                 readDHT11@i 002C  
               readDHT11@j 002D        start_initialization 0015                 ?_CalcMQ135 004F  
              __end_of_ISR 09EE               _lastKeyState 0069              _savedHoursEnd 006A  
         CalcMQ135@voltage 00A0                   ??___wmul 0075        __size_of_displayPPM 0129  
              __pdataBANK0 0068                ?_printToLCD 0020          __size_of___awtoft 0025  
        __size_of___ftpack 006A        __end_of_displayTime 0A2F                __pbssCOMMON 0077  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of_dataCTRL 0013        __end_of__stringdata 089C                sprintf@ccnt 0036  
              sprintf@_val 0038          _savedMinutesStart 006D                sprintf@flag 003C  
              sprintf@prec 0035                  _debugInfo 00CE          __size_of_instCTRL 0013  
         ___lwdiv@dividend 0022          __size_of_runDHT11 0036          __size_of_runMQ135 0024  
                 ?___ftadd 003F                   ?___ftdiv 003F                   ?___ftneg 002C  
                 ?___ftmul 002F                   ?___fttol 004C                   ?___lwdiv 0020  
                 ?___lwmod 0027          __size_of_runClock 001D                  __pstrings 0800  
                 ?_readADC 0075                   ?_initLCD 0070                  _initDHT11 098B  
                _readDHT11 0CBB                   ?_isdigit 0070                ??_CalcMQ135 0077  
         ___lwdiv@quotient 0025                   ?_sprintf 002C           _displayDataDHT11 0AE8  
     readDHT11@temperature 0026          interrupt_function 0004             ___wmul@product 0075  
      __size_of_printToLCD 002B                  clear_ram0 0992                dataCTRL@DAT 0076  
              _displayTime 0A0B                __stringbase 080F                __stringdata 081A  
        ___wmul@multiplier 0020                 ?_initDHT11 0070                 ?_readDHT11 0075  
             ??_displayPPM 005A            CalcMQ135@ratio2 00B5            CalcMQ135@ratio3 00B8  
          CalcMQ135@ratio4 00BB            CalcMQ135@ratio5 00BE            CalcMQ135@ratio6 00A3  
       __end_of_displayPPM 0701           __size_of___ftadd 0109           __size_of___ftdiv 00B8  
         __size_of___ftneg 000A           __size_of___ftmul 00D3           __size_of___fttol 008E  
         __size_of___lwdiv 0040           __size_of___lwmod 0036             readADC@channel 0022  
                 ___awtoft 0A9C                   ___ftpack 0BC3         __end_of__stringtab 0810  
              _isdigit$439 0075                   _dataCTRL 09B2           __size_of_readADC 0027  
         __size_of_initLCD 0024           __size_of_isdigit 000E            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0024                   __ptext10 0A0B                   __ptext11 05D8  
                 __ptext20 09A4                   __ptext12 0C2D                   __ptext21 0A77  
                 __ptext13 099A                   __ptext22 0B17                   __ptext14 0E24  
                 __ptext23 0B83                   __ptext15 0EF7                   __ptext24 07D4  
                 __ptext16 0A9C                   __ptext25 09C5                   __ptext17 0BC3  
                 __ptext26 09B2                   __ptext18 0AE8                   __ptext27 09D8  
                 __ptext19 03F5             readDHT11@F1215 005E           __size_of_sprintf 01E3  
                 _keyValid 0064                   _instCTRL 09C5              __size_of_main 00D3  
                 _humidity 0066                   _runDHT11 0B4D                   _runMQ135 0A53  
                 _runClock 09EE               ??_printToLCD 0077                ??_initDHT11 0075  
              ??_readDHT11 0020                   isdigit@c 0076                   intlevel1 0000  
                sprintf@ap 0034                  sprintf@sp 0040           ___lwmod@dividend 0029  
       __end_of_printToLCD 07FF                  stringcode 080A   __end_of_displayDataDHT11 0B17  
        readDHT11@humidity 0075              _CalcMQ135$690 00AF              _CalcMQ135$691 00B2  
            _CalcMQ135$687 00A6              _CalcMQ135$688 00A9              _CalcMQ135$689 00AC  
              _temperature 0067                   sprintf@c 003F                   sprintf@f 002C  
          ___lwmod@divisor 0027            ___lwmod@counter 002B                   stringdir 080A  
                 stringtab 0800  
