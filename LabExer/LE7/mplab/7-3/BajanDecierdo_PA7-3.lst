

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Apr 22 18:28:03 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	dabs	1,0x7E,2
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113                           
   114                           	psect	idataBANK3
   115  12FC                     __pidataBANK3:	
   116                           
   117                           ;initializer for main@F1360
   118  12FC  3454               	retlw	84
   119  12FD  3465               	retlw	101
   120  12FE  346D               	retlw	109
   121  12FF  3470               	retlw	112
   122  1300  3465               	retlw	101
   123  1301  3472               	retlw	114
   124  1302  3461               	retlw	97
   125  1303  3474               	retlw	116
   126  1304  3475               	retlw	117
   127  1305  3472               	retlw	114
   128  1306  3465               	retlw	101
   129  1307  343A               	retlw	58
   130  1308  3420               	retlw	32
   131  1309  3400               	retlw	0
   132                           
   133                           ;initializer for main@F1362
   134  130A  3448               	retlw	72
   135  130B  3475               	retlw	117
   136  130C  346D               	retlw	109
   137  130D  3469               	retlw	105
   138  130E  3464               	retlw	100
   139  130F  3469               	retlw	105
   140  1310  3474               	retlw	116
   141  1311  3479               	retlw	121
   142  1312  343A               	retlw	58
   143  1313  3420               	retlw	32
   144  1314  3400               	retlw	0
   145                           
   146                           ;initializer for main@F1364
   147  1315  3445               	retlw	69
   148  1316  3472               	retlw	114
   149  1317  3472               	retlw	114
   150  1318  346F               	retlw	111
   151  1319  3472               	retlw	114
   152  131A  343A               	retlw	58
   153  131B  3420               	retlw	32
   154  131C  3400               	retlw	0
   155                           
   156                           	psect	strings
   157  1000                     __pstrings:	
   158  1000                     stringtab:	
   159  1000                     __stringtab:	
   160  1000                     stringcode:	
   161                           ;	String table - string pointers are 1 byte each
   162                           
   163  1000                     stringdir:	
   164  1000  3010               	movlw	high stringdir
   165  1001  008A               	movwf	10
   166  1002  0804               	movf	4,w
   167  1003  0A84               	incf	4,f
   168  1004  0782               	addwf	2,f
   169  1005                     __stringbase:	
   170  1005  3400               	retlw	0
   171  1006                     __end_of__stringtab:	
   172  1006                     _dpowers:	
   173  1006  3401               	retlw	1
   174  1007  3400               	retlw	0
   175  1008  3400               	retlw	0
   176  1009  3400               	retlw	0
   177  100A  340A               	retlw	10
   178  100B  3400               	retlw	0
   179  100C  3400               	retlw	0
   180  100D  3400               	retlw	0
   181  100E  3464               	retlw	100
   182  100F  3400               	retlw	0
   183  1010  3400               	retlw	0
   184  1011  3400               	retlw	0
   185  1012  34E8               	retlw	232
   186  1013  3403               	retlw	3
   187  1014  3400               	retlw	0
   188  1015  3400               	retlw	0
   189  1016  3410               	retlw	16
   190  1017  3427               	retlw	39
   191  1018  3400               	retlw	0
   192  1019  3400               	retlw	0
   193  101A  34A0               	retlw	160
   194  101B  3486               	retlw	134
   195  101C  3401               	retlw	1
   196  101D  3400               	retlw	0
   197  101E  3440               	retlw	64
   198  101F  3442               	retlw	66
   199  1020  340F               	retlw	15
   200  1021  3400               	retlw	0
   201  1022  3480               	retlw	128
   202  1023  3496               	retlw	150
   203  1024  3498               	retlw	152
   204  1025  3400               	retlw	0
   205  1026  3400               	retlw	0
   206  1027  34E1               	retlw	225
   207  1028  34F5               	retlw	245
   208  1029  3405               	retlw	5
   209  102A  3400               	retlw	0
   210  102B  34CA               	retlw	202
   211  102C  349A               	retlw	154
   212  102D  343B               	retlw	59
   213  102E                     __end_of_dpowers:	
   214  102E                     __npowers_:	
   215  102E  3400               	retlw	0
   216  102F  3480               	retlw	128
   217  1030  343F               	retlw	63
   218  1031  34CD               	retlw	205
   219  1032  34CC               	retlw	204
   220  1033  343D               	retlw	61
   221  1034  34D7               	retlw	215
   222  1035  3423               	retlw	35
   223  1036  343C               	retlw	60
   224  1037  3412               	retlw	18
   225  1038  3483               	retlw	131
   226  1039  343A               	retlw	58
   227  103A  34B7               	retlw	183
   228  103B  34D1               	retlw	209
   229  103C  3438               	retlw	56
   230  103D  34C6               	retlw	198
   231  103E  3427               	retlw	39
   232  103F  3437               	retlw	55
   233  1040  3438               	retlw	56
   234  1041  3486               	retlw	134
   235  1042  3435               	retlw	53
   236  1043  34C0               	retlw	192
   237  1044  34D6               	retlw	214
   238  1045  3433               	retlw	51
   239  1046  34CC               	retlw	204
   240  1047  342B               	retlw	43
   241  1048  3432               	retlw	50
   242  1049  3470               	retlw	112
   243  104A  3489               	retlw	137
   244  104B  3430               	retlw	48
   245  104C  34E7               	retlw	231
   246  104D  34DB               	retlw	219
   247  104E  342E               	retlw	46
   248  104F  34E5               	retlw	229
   249  1050  343C               	retlw	60
   250  1051  341E               	retlw	30
   251  1052  3442               	retlw	66
   252  1053  34A2               	retlw	162
   253  1054  340D               	retlw	13
   254  1055                     __end_of__npowers_:	
   255  1055                     __powers_:	
   256  1055  3400               	retlw	0
   257  1056  3480               	retlw	128
   258  1057  343F               	retlw	63
   259  1058  3400               	retlw	0
   260  1059  3420               	retlw	32
   261  105A  3441               	retlw	65
   262  105B  3400               	retlw	0
   263  105C  34C8               	retlw	200
   264  105D  3442               	retlw	66
   265  105E  3400               	retlw	0
   266  105F  347A               	retlw	122
   267  1060  3444               	retlw	68
   268  1061  3440               	retlw	64
   269  1062  341C               	retlw	28
   270  1063  3446               	retlw	70
   271  1064  3450               	retlw	80
   272  1065  34C3               	retlw	195
   273  1066  3447               	retlw	71
   274  1067  3424               	retlw	36
   275  1068  3474               	retlw	116
   276  1069  3449               	retlw	73
   277  106A  3497               	retlw	151
   278  106B  3418               	retlw	24
   279  106C  344B               	retlw	75
   280  106D  34BC               	retlw	188
   281  106E  34BE               	retlw	190
   282  106F  344C               	retlw	76
   283  1070  346B               	retlw	107
   284  1071  346E               	retlw	110
   285  1072  344E               	retlw	78
   286  1073  3403               	retlw	3
   287  1074  3415               	retlw	21
   288  1075  3450               	retlw	80
   289  1076  3479               	retlw	121
   290  1077  34AD               	retlw	173
   291  1078  3460               	retlw	96
   292  1079  34F3               	retlw	243
   293  107A  3449               	retlw	73
   294  107B  3471               	retlw	113
   295  107C                     __end_of__powers_:	
   296  107C                     _POLYNOMIAL:	
   297  107C  3431               	retlw	49
   298  107D  3401               	retlw	1
   299  107E                     __end_of_POLYNOMIAL:	
   300  0006                     _PORTB	set	6
   301  0013                     _SSPBUF	set	19
   302  0014                     _SSPCON	set	20
   303  0001                     _TMR0	set	1
   304  005F                     _GIE	set	95
   305  0038                     _RC0	set	56
   306  0039                     _RC1	set	57
   307  003A                     _RC2	set	58
   308  0081                     _OPTION_REG	set	129
   309  0093                     _SSPADD	set	147
   310  0091                     _SSPCON2	set	145
   311  0094                     _SSPSTAT	set	148
   312  0086                     _TRISB	set	134
   313  0087                     _TRISC	set	135
   314  048D                     _ACKDT	set	1165
   315  048C                     _ACKEN	set	1164
   316  048A                     _PEN	set	1162
   317  048B                     _RCEN	set	1163
   318  0489                     _RSEN	set	1161
   319  0488                     _SEN	set	1160
   320  107E                     __stringdata:	
   321  107E                     STR_1:	
   322  107E  3425               	retlw	37	;'%'
   323  107F  342E               	retlw	46	;'.'
   324  1080  3432               	retlw	50	;'2'
   325  1081  3466               	retlw	102	;'f'
   326  1082  3400               	retlw	0
   327  1083                     __end_of__stringdata:	
   328                           
   329                           ; #config settings
   330  0000                     
   331                           	psect	cinit
   332  07EE                     start_initialization:	
   333  07EE                     __initialization:	
   334                           
   335                           ; Clear objects allocated to BANK0
   336  07EE  01EA               	clrf	__pbssBANK0& (0+127)
   337  07EF  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   338                           
   339                           ; Initialize objects allocated to BANK3
   340  07F0  1783               	bsf	3,7	;select IRP bank2
   341  07F1  30E1               	movlw	low (__pdataBANK3+33)
   342  07F2  00FD               	movwf	btemp+-1
   343  07F3  3012               	movlw	high __pidataBANK3
   344  07F4  00FE               	movwf	btemp
   345  07F5  30FC               	movlw	low __pidataBANK3
   346  07F6  00FF               	movwf	btemp+1
   347  07F7  30C0               	movlw	low __pdataBANK3
   348  07F8  0084               	movwf	4
   349  07F9  160A  118A  2231   	fcall	init_ram0
   350  07FC                     end_of_initialization:	
   351                           ;End of C runtime variable initialization code
   352                           
   353  07FC                     __end_of__initialization:	
   354  07FC  0183               	clrf	3
   355  07FD  120A  158A  2B34   	ljmp	_main	;jump to C main() function
   356                           
   357                           	psect	bssBANK0
   358  006A                     __pbssBANK0:	
   359  006A                     _RH:	
   360  006A                     	ds	1
   361  006B                     _temp:	
   362  006B                     	ds	1
   363                           
   364                           	psect	dataBANK3
   365  01C0                     __pdataBANK3:	
   366  01C0                     main@F1360:	
   367  01C0                     	ds	14
   368  01CE                     main@F1362:	
   369  01CE                     	ds	11
   370  01D9                     main@F1364:	
   371  01D9                     	ds	8
   372                           
   373                           	psect	inittext
   374  122D                     init_fetch0:	
   375                           ;	Called with low address in FSR and high address in W
   376                           
   377  122D  087E               	movf	126,w
   378  122E  008A               	movwf	10
   379  122F  087F               	movf	127,w
   380  1230  0082               	movwf	2
   381  1231                     init_ram0:	
   382                           ;Called with:
   383                           ;	high address of idata address in btemp 
   384                           ;	low address of idata address in btemp+1 
   385                           ;	low address of data in FSR
   386                           ;	high address + 1 of data in btemp-1
   387                           
   388  1231  222D  160A  118A   	fcall	init_fetch0
   389  1234  0080               	movwf	0
   390  1235  0A84               	incf	4,f
   391  1236  0804               	movf	4,w
   392  1237  067D               	xorwf	125,w
   393  1238  1903               	btfsc	3,2
   394  1239  3400               	retlw	0
   395  123A  0AFF               	incf	127,f
   396  123B  1903               	btfsc	3,2
   397  123C  0AFE               	incf	126,f
   398  123D  2A31               	goto	init_ram0
   399                           
   400                           	psect	cstackBANK3
   401  0190                     __pcstackBANK3:	
   402  0190                     main@buf1:	
   403  0190                     main@buf2:	
   404                           ; 0 bytes @ 0x0
   405                           
   406  0190                     main@tempToString:	
   407                           ; 0 bytes @ 0x0
   408                           
   409                           
   410                           ; 14 bytes @ 0x0
   411  0190                     	ds	14
   412  019E                     main@humidityToString:	
   413                           
   414                           ; 11 bytes @ 0xE
   415  019E                     	ds	11
   416  01A9                     main@errorToString:	
   417                           
   418                           ; 8 bytes @ 0x19
   419  01A9                     	ds	8
   420  01B1                     main@status:	
   421                           
   422                           ; 2 bytes @ 0x21
   423  01B1                     	ds	2
   424  01B3                     main@resultRH:	
   425                           
   426                           ; 3 bytes @ 0x23
   427  01B3                     	ds	3
   428  01B6                     main@resultTemp:	
   429                           
   430                           ; 3 bytes @ 0x26
   431  01B6                     	ds	3
   432  01B9                     main@error:	
   433                           
   434                           ; 1 bytes @ 0x29
   435  01B9                     	ds	1
   436  01BA                     main@rawRH:	
   437                           
   438                           ; 2 bytes @ 0x2A
   439  01BA                     	ds	2
   440  01BC                     main@rawTemp:	
   441                           
   442                           ; 2 bytes @ 0x2C
   443  01BC                     	ds	2
   444  01BE                     main@index:	
   445                           
   446                           ; 2 bytes @ 0x2E
   447  01BE                     	ds	2
   448                           
   449                           	psect	cstackBANK1
   450  00A0                     __pcstackBANK1:	
   451  00A0                     _sprintf$671:	
   452                           
   453                           ; 3 bytes @ 0x0
   454  00A0                     	ds	3
   455  00A3                     _sprintf$252:	
   456                           
   457                           ; 4 bytes @ 0x3
   458  00A3                     	ds	4
   459  00A7                     sprintf@ap:	
   460                           
   461                           ; 1 bytes @ 0x7
   462  00A7                     	ds	1
   463  00A8                     sprintf@vd:	
   464                           
   465                           ; 4 bytes @ 0x8
   466  00A8                     	ds	4
   467  00AC                     sprintf@vd_254:	
   468                           
   469                           ; 4 bytes @ 0xC
   470  00AC                     	ds	4
   471  00B0                     sprintf@flag:	
   472                           
   473                           ; 2 bytes @ 0x10
   474  00B0                     	ds	2
   475  00B2                     sprintf@integ:	
   476                           
   477                           ; 3 bytes @ 0x12
   478  00B2                     	ds	3
   479  00B5                     sprintf@_val:	
   480                           
   481                           ; 4 bytes @ 0x15
   482  00B5                     	ds	4
   483  00B9                     sprintf@exp:	
   484                           
   485                           ; 2 bytes @ 0x19
   486  00B9                     	ds	2
   487  00BB                     sprintf@prec:	
   488                           
   489                           ; 2 bytes @ 0x1B
   490  00BB                     	ds	2
   491  00BD                     sprintf@fval:	
   492                           
   493                           ; 3 bytes @ 0x1D
   494  00BD                     	ds	3
   495  00C0                     sprintf@c:	
   496                           
   497                           ; 1 bytes @ 0x20
   498  00C0                     	ds	1
   499                           
   500                           	psect	cstackCOMMON
   501  0070                     __pcstackCOMMON:	
   502  0070                     ?_init_I2C_Master:	
   503  0070                     ??_init_I2C_Master:	
   504                           ; 0 bytes @ 0x0
   505                           
   506  0070                     ?_initLCD:	
   507                           ; 0 bytes @ 0x0
   508                           
   509  0070                     ?_instCTRL:	
   510                           ; 0 bytes @ 0x0
   511                           
   512  0070                     ?_dataCTRL:	
   513                           ; 0 bytes @ 0x0
   514                           
   515  0070                     ?_SHT21_SoftReset:	
   516                           ; 0 bytes @ 0x0
   517                           
   518  0070                     ?_SHT21_SetResolution:	
   519                           ; 0 bytes @ 0x0
   520                           
   521  0070                     ?_delay:	
   522                           ; 0 bytes @ 0x0
   523                           
   524  0070                     ?_isdigit:	
   525                           ; 0 bytes @ 0x0
   526                           
   527  0070                     ??_isdigit:	
   528                           ; 1 bit 
   529                           
   530  0070                     ?_I2C_Wait:	
   531                           ; 0 bytes @ 0x0
   532                           
   533  0070                     ??_I2C_Wait:	
   534                           ; 0 bytes @ 0x0
   535                           
   536  0070                     ?_main:	
   537                           ; 0 bytes @ 0x0
   538                           
   539  0070                     ?_I2C_Start:	
   540                           ; 0 bytes @ 0x0
   541                           
   542  0070                     ??_I2C_Start:	
   543                           ; 0 bytes @ 0x0
   544                           
   545  0070                     ?_I2C_RepeatedStart:	
   546                           ; 0 bytes @ 0x0
   547                           
   548  0070                     ??_I2C_RepeatedStart:	
   549                           ; 0 bytes @ 0x0
   550                           
   551  0070                     ?_I2C_Stop:	
   552                           ; 0 bytes @ 0x0
   553                           
   554  0070                     ??_I2C_Stop:	
   555                           ; 0 bytes @ 0x0
   556                           
   557  0070                     ?_I2C_Send:	
   558                           ; 0 bytes @ 0x0
   559                           
   560  0070                     ??_I2C_Send:	
   561                           ; 0 bytes @ 0x0
   562                           
   563  0070                     ??_I2C_Receive:	
   564                           ; 0 bytes @ 0x0
   565                           
   566  0070                     ?___ftge:	
   567                           ; 0 bytes @ 0x0
   568                           
   569  0070                     ?_I2C_Receive:	
   570                           ; 1 bit 
   571                           
   572  0070                     ?___wmul:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?___awmod:	
   576                           ; 2 bytes @ 0x0
   577                           
   578  0070                     ?___ftpack:	
   579                           ; 2 bytes @ 0x0
   580                           
   581  0070                     ?___ftneg:	
   582                           ; 3 bytes @ 0x0
   583                           
   584  0070                     ?__tdiv_to_l_:	
   585                           ; 3 bytes @ 0x0
   586                           
   587  0070                     ?__div_to_l_:	
   588                           ; 4 bytes @ 0x0
   589                           
   590  0070                     ?___lldiv:	
   591                           ; 4 bytes @ 0x0
   592                           
   593  0070                     ?___llmod:	
   594                           ; 4 bytes @ 0x0
   595                           
   596  0070                     I2C_Send@dataOUT:	
   597                           ; 4 bytes @ 0x0
   598                           
   599  0070                     _isdigit$452:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     delay@overflow:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ___wmul@multiplier:	
   606                           ; 2 bytes @ 0x0
   607                           
   608  0070                     ___awmod@divisor:	
   609                           ; 2 bytes @ 0x0
   610                           
   611  0070                     __div_to_l_@f1:	
   612                           ; 2 bytes @ 0x0
   613                           
   614  0070                     ___ftpack@arg:	
   615                           ; 3 bytes @ 0x0
   616                           
   617  0070                     __tdiv_to_l_@f1:	
   618                           ; 3 bytes @ 0x0
   619                           
   620  0070                     ___ftge@ff1:	
   621                           ; 3 bytes @ 0x0
   622                           
   623  0070                     ___ftneg@f1:	
   624                           ; 3 bytes @ 0x0
   625                           
   626  0070                     ___lldiv@divisor:	
   627                           ; 3 bytes @ 0x0
   628                           
   629  0070                     ___llmod@divisor:	
   630                           ; 4 bytes @ 0x0
   631                           
   632                           
   633                           ; 4 bytes @ 0x0
   634  0070                     	ds	1
   635  0071                     ??_SHT21_SetResolution:	
   636  0071                     I2C_Receive@ACK_NACK:	
   637                           ; 0 bytes @ 0x1
   638                           
   639  0071                     isdigit@c:	
   640                           ; 1 bytes @ 0x1
   641                           
   642                           
   643                           ; 1 bytes @ 0x1
   644  0071                     	ds	1
   645  0072                     ??_delay:	
   646  0072                     I2C_Receive@dataIN:	
   647                           ; 0 bytes @ 0x2
   648                           
   649  0072                     ___wmul@multiplicand:	
   650                           ; 1 bytes @ 0x2
   651                           
   652  0072                     ___awmod@dividend:	
   653                           ; 2 bytes @ 0x2
   654                           
   655                           
   656                           ; 2 bytes @ 0x2
   657  0072                     	ds	1
   658  0073                     ??___ftneg:	
   659  0073                     ___ftpack@exp:	
   660                           ; 0 bytes @ 0x3
   661                           
   662  0073                     delay@i:	
   663                           ; 1 bytes @ 0x3
   664                           
   665  0073                     __div_to_l_@f2:	
   666                           ; 2 bytes @ 0x3
   667                           
   668  0073                     __tdiv_to_l_@f2:	
   669                           ; 3 bytes @ 0x3
   670                           
   671  0073                     ___ftge@ff2:	
   672                           ; 3 bytes @ 0x3
   673                           
   674                           
   675                           ; 3 bytes @ 0x3
   676  0073                     	ds	1
   677  0074                     ??___wmul:	
   678  0074                     ??___awmod:	
   679                           ; 0 bytes @ 0x4
   680                           
   681  0074                     ___ftpack@sign:	
   682                           ; 0 bytes @ 0x4
   683                           
   684  0074                     ___wmul@product:	
   685                           ; 1 bytes @ 0x4
   686                           
   687  0074                     ___lldiv@dividend:	
   688                           ; 2 bytes @ 0x4
   689                           
   690  0074                     ___llmod@dividend:	
   691                           ; 4 bytes @ 0x4
   692                           
   693                           
   694                           ; 4 bytes @ 0x4
   695  0074                     	ds	1
   696  0075                     ??_instCTRL:	
   697  0075                     ??_dataCTRL:	
   698                           ; 0 bytes @ 0x5
   699                           
   700  0075                     ??_SHT21_SoftReset:	
   701                           ; 0 bytes @ 0x5
   702                           
   703  0075                     ??___ftpack:	
   704                           ; 0 bytes @ 0x5
   705                           
   706  0075                     ?_SHT21_Measure:	
   707                           ; 0 bytes @ 0x5
   708                           
   709  0075                     instCTRL@LCD_CMD:	
   710                           ; 1 bytes @ 0x5
   711                           
   712  0075                     dataCTRL@LCD_DAT:	
   713                           ; 1 bytes @ 0x5
   714                           
   715  0075                     SHT21_Measure@pMeasureand:	
   716                           ; 1 bytes @ 0x5
   717                           
   718  0075                     ___awmod@counter:	
   719                           ; 1 bytes @ 0x5
   720                           
   721                           
   722                           ; 1 bytes @ 0x5
   723  0075                     	ds	1
   724  0076                     ??_initLCD:	
   725  0076                     ??_SHT21_Measure:	
   726                           ; 0 bytes @ 0x6
   727                           
   728  0076                     ??__tdiv_to_l_:	
   729                           ; 0 bytes @ 0x6
   730                           
   731  0076                     ??__div_to_l_:	
   732                           ; 0 bytes @ 0x6
   733                           
   734  0076                     ??___ftge:	
   735                           ; 0 bytes @ 0x6
   736                           
   737  0076                     ___awmod@sign:	
   738                           ; 0 bytes @ 0x6
   739                           
   740                           
   741                           ; 1 bytes @ 0x6
   742  0076                     	ds	1
   743  0077                     ?___awdiv:	
   744  0077                     SHT21_Measure@checksum:	
   745                           ; 2 bytes @ 0x7
   746                           
   747  0077                     ___awdiv@divisor:	
   748                           ; 1 bytes @ 0x7
   749                           
   750                           
   751                           ; 2 bytes @ 0x7
   752  0077                     	ds	1
   753  0078                     ??___lldiv:	
   754  0078                     ??___llmod:	
   755                           ; 0 bytes @ 0x8
   756                           
   757  0078                     ?___lltoft:	
   758                           ; 0 bytes @ 0x8
   759                           
   760  0078                     ?___lwtoft:	
   761                           ; 3 bytes @ 0x8
   762                           
   763  0078                     SHT21_Measure@error:	
   764                           ; 3 bytes @ 0x8
   765                           
   766  0078                     ___lwtoft@c:	
   767                           ; 1 bytes @ 0x8
   768                           
   769  0078                     ___lltoft@c:	
   770                           ; 2 bytes @ 0x8
   771                           
   772                           
   773                           ; 4 bytes @ 0x8
   774  0078                     	ds	1
   775  0079                     ___llmod@counter:	
   776  0079                     SHT21_Measure@data:	
   777                           ; 1 bytes @ 0x9
   778                           
   779  0079                     ___awdiv@dividend:	
   780                           ; 2 bytes @ 0x9
   781                           
   782  0079                     ___lldiv@quotient:	
   783                           ; 2 bytes @ 0x9
   784                           
   785                           
   786                           ; 4 bytes @ 0x9
   787  0079                     	ds	2
   788  007B                     ??___awdiv:	
   789  007B                     ??___lwtoft:	
   790                           ; 0 bytes @ 0xB
   791                           
   792  007B                     SHT21_Measure@measureType:	
   793                           ; 0 bytes @ 0xB
   794                           
   795                           
   796                           ; 1 bytes @ 0xB
   797  007B                     	ds	1
   798  007C                     ??___bmul:	
   799  007C                     ??___lltoft:	
   800                           ; 0 bytes @ 0xC
   801                           
   802                           
   803                           ; 0 bytes @ 0xC
   804  007C                     	ds	1
   805  007D                     ??_SHT21_CalcTemp:	
   806  007D                     ??_SHT21_CalcRH:	
   807                           ; 0 bytes @ 0xD
   808                           
   809  007D                     ___lldiv@counter:	
   810                           ; 0 bytes @ 0xD
   811                           
   812  007D                     ___lltoft@exp:	
   813                           ; 1 bytes @ 0xD
   814                           
   815                           
   816                           ; 1 bytes @ 0xD
   817  007D                     	ds	1
   818  007E                     ??___ftsub:	
   819                           
   820                           	psect	cstackBANK0
   821  0020                     __pcstackBANK0:	
   822                           ; 0 bytes @ 0xE
   823                           
   824  0020                     ___awdiv@counter:	
   825  0020                     __div_to_l_@quot:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0020                     __tdiv_to_l_@quot:	
   829                           ; 4 bytes @ 0x0
   830                           
   831                           
   832                           ; 4 bytes @ 0x0
   833  0020                     	ds	1
   834  0021                     ___awdiv@sign:	
   835                           
   836                           ; 1 bytes @ 0x1
   837  0021                     	ds	1
   838  0022                     ___awdiv@quotient:	
   839                           
   840                           ; 2 bytes @ 0x2
   841  0022                     	ds	2
   842  0024                     ?___bmul:	
   843  0024                     ___bmul@multiplicand:	
   844                           ; 1 bytes @ 0x4
   845                           
   846  0024                     __div_to_l_@cntr:	
   847                           ; 1 bytes @ 0x4
   848                           
   849  0024                     __tdiv_to_l_@cntr:	
   850                           ; 1 bytes @ 0x4
   851                           
   852                           
   853                           ; 1 bytes @ 0x4
   854  0024                     	ds	1
   855  0025                     ___bmul@product:	
   856  0025                     __div_to_l_@exp1:	
   857                           ; 1 bytes @ 0x5
   858                           
   859  0025                     __tdiv_to_l_@exp1:	
   860                           ; 1 bytes @ 0x5
   861                           
   862                           
   863                           ; 1 bytes @ 0x5
   864  0025                     	ds	1
   865  0026                     ___bmul@multiplier:	
   866                           
   867                           ; 1 bytes @ 0x6
   868  0026                     	ds	1
   869  0027                     ?___ftmul:	
   870  0027                     ___ftmul@f1:	
   871                           ; 3 bytes @ 0x7
   872                           
   873                           
   874                           ; 3 bytes @ 0x7
   875  0027                     	ds	3
   876  002A                     ___ftmul@f2:	
   877                           
   878                           ; 3 bytes @ 0xA
   879  002A                     	ds	3
   880  002D                     ??___ftmul:	
   881                           
   882                           ; 0 bytes @ 0xD
   883  002D                     	ds	4
   884  0031                     ___ftmul@exp:	
   885                           
   886                           ; 1 bytes @ 0x11
   887  0031                     	ds	1
   888  0032                     ___ftmul@f3_as_product:	
   889                           
   890                           ; 3 bytes @ 0x12
   891  0032                     	ds	3
   892  0035                     ___ftmul@cntr:	
   893                           
   894                           ; 1 bytes @ 0x15
   895  0035                     	ds	1
   896  0036                     ___ftmul@sign:	
   897                           
   898                           ; 1 bytes @ 0x16
   899  0036                     	ds	1
   900  0037                     ?_fround:	
   901  0037                     ?_scale:	
   902                           ; 3 bytes @ 0x17
   903                           
   904                           
   905                           ; 3 bytes @ 0x17
   906  0037                     	ds	3
   907  003A                     ??_fround:	
   908  003A                     ??_scale:	
   909                           ; 0 bytes @ 0x1A
   910                           
   911                           
   912                           ; 0 bytes @ 0x1A
   913  003A                     	ds	2
   914  003C                     _scale$670:	
   915                           
   916                           ; 3 bytes @ 0x1C
   917  003C                     	ds	3
   918  003F                     scale@scl:	
   919                           
   920                           ; 1 bytes @ 0x1F
   921  003F                     	ds	1
   922  0040                     ?___fttol:	
   923  0040                     ___fttol@f1:	
   924                           ; 4 bytes @ 0x20
   925                           
   926  0040                     _fround$669:	
   927                           ; 3 bytes @ 0x20
   928                           
   929                           
   930                           ; 3 bytes @ 0x20
   931  0040                     	ds	3
   932  0043                     _fround$668:	
   933                           
   934                           ; 3 bytes @ 0x23
   935  0043                     	ds	1
   936  0044                     ??___fttol:	
   937                           
   938                           ; 0 bytes @ 0x24
   939  0044                     	ds	2
   940  0046                     fround@prec:	
   941                           
   942                           ; 1 bytes @ 0x26
   943  0046                     	ds	1
   944  0047                     ?___ftadd:	
   945  0047                     ___ftadd@f1:	
   946                           ; 3 bytes @ 0x27
   947                           
   948                           
   949                           ; 3 bytes @ 0x27
   950  0047                     	ds	1
   951  0048                     ___fttol@sign1:	
   952                           
   953                           ; 1 bytes @ 0x28
   954  0048                     	ds	1
   955  0049                     ___fttol@lval:	
   956                           
   957                           ; 4 bytes @ 0x29
   958  0049                     	ds	1
   959  004A                     ___ftadd@f2:	
   960                           
   961                           ; 3 bytes @ 0x2A
   962  004A                     	ds	3
   963  004D                     ??___ftadd:	
   964  004D                     ___fttol@exp1:	
   965                           ; 0 bytes @ 0x2D
   966                           
   967                           
   968                           ; 1 bytes @ 0x2D
   969  004D                     	ds	4
   970  0051                     ___ftadd@sign:	
   971                           
   972                           ; 1 bytes @ 0x31
   973  0051                     	ds	1
   974  0052                     ___ftadd@exp2:	
   975                           
   976                           ; 1 bytes @ 0x32
   977  0052                     	ds	1
   978  0053                     ___ftadd@exp1:	
   979                           
   980                           ; 1 bytes @ 0x33
   981  0053                     	ds	1
   982  0054                     ?_SHT21_CalcTemp:	
   983  0054                     ?_SHT21_CalcRH:	
   984                           ; 3 bytes @ 0x34
   985                           
   986  0054                     ?___ftsub:	
   987                           ; 3 bytes @ 0x34
   988                           
   989  0054                     SHT21_CalcRH@u16RH:	
   990                           ; 3 bytes @ 0x34
   991                           
   992  0054                     SHT21_CalcTemp@u16Temp:	
   993                           ; 2 bytes @ 0x34
   994                           
   995  0054                     ___ftsub@f2:	
   996                           ; 2 bytes @ 0x34
   997                           
   998                           
   999                           ; 3 bytes @ 0x34
  1000  0054                     	ds	3
  1001  0057                     SHT21_CalcRH@resultRH:	
  1002  0057                     SHT21_CalcTemp@resultTemp:	
  1003                           ; 3 bytes @ 0x37
  1004                           
  1005  0057                     ___ftsub@f1:	
  1006                           ; 3 bytes @ 0x37
  1007                           
  1008                           
  1009                           ; 3 bytes @ 0x37
  1010  0057                     	ds	3
  1011  005A                     ?_sprintf:	
  1012  005A                     sprintf@sp:	
  1013                           ; 2 bytes @ 0x3A
  1014                           
  1015                           
  1016                           ; 2 bytes @ 0x3A
  1017  005A                     	ds	2
  1018  005C                     sprintf@f:	
  1019                           
  1020                           ; 1 bytes @ 0x3C
  1021  005C                     	ds	4
  1022  0060                     ??_sprintf:	
  1023                           
  1024                           ; 0 bytes @ 0x40
  1025  0060                     	ds	6
  1026  0066                     ??_main:	
  1027                           
  1028                           ; 0 bytes @ 0x46
  1029  0066                     	ds	4
  1030                           
  1031                           	psect	maintext
  1032  0B34                     __pmaintext:	
  1033 ;;
  1034 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1035 ;;
  1036 ;; *************** function _main *****************
  1037 ;; Defined at:
  1038 ;;		line 134 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;		None
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  tempToString   14    0[BANK3 ] unsigned char [14]
  1043 ;;  humidityToSt   11   14[BANK3 ] unsigned char [11]
  1044 ;;  errorToStrin    8   25[BANK3 ] unsigned char [8]
  1045 ;;  resultTemp      3   38[BANK3 ] float 
  1046 ;;  resultRH        3   35[BANK3 ] float 
  1047 ;;  temperature     3    0        float 
  1048 ;;  humidity        3    0        float 
  1049 ;;  index           2   46[BANK3 ] int 
  1050 ;;  rawTemp         2   44[BANK3 ] struct .
  1051 ;;  rawRH           2   42[BANK3 ] struct .
  1052 ;;  status          2   33[BANK3 ] int 
  1053 ;;  error           1   41[BANK3 ] unsigned char 
  1054 ;;  temp            1    0        unsigned char 
  1055 ;;  buf2            0    0[BANK3 ] unsigned char [0]
  1056 ;;  buf1            0    0[BANK3 ] unsigned char [0]
  1057 ;; Return value:  Size  Location     Type
  1058 ;;		None               void
  1059 ;; Registers used:
  1060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 17F/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         0       0       0      48       0
  1068 ;;      Temps:          0       4       0       0       0
  1069 ;;      Totals:         0       4       0      48       0
  1070 ;;Total ram usage:       52 bytes
  1071 ;; Hardware stack levels required when called:    4
  1072 ;; This function calls:
  1073 ;;		_SHT21_CalcRH
  1074 ;;		_SHT21_CalcTemp
  1075 ;;		_SHT21_Measure
  1076 ;;		_SHT21_SetResolution
  1077 ;;		_SHT21_SoftReset
  1078 ;;		_dataCTRL
  1079 ;;		_delay
  1080 ;;		_initLCD
  1081 ;;		_init_I2C_Master
  1082 ;;		_instCTRL
  1083 ;;		_sprintf
  1084 ;; This function is called by:
  1085 ;;		Startup code after reset
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function _main
  1091  0B34                     _main:	
  1092                           
  1093                           ;BajanDecierdo_7-3.c: 136: u8t temp;
  1094                           ;BajanDecierdo_7-3.c: 137: float humidity, temperature;
  1095                           ;BajanDecierdo_7-3.c: 138: char tempToString[] = "Temperature: ";
  1096                           
  1097                           ;incstack = 0
  1098                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1099  0B34  3090               	movlw	main@tempToString& (0+255)
  1100  0B35  0084               	movwf	4
  1101  0B36  30C0               	movlw	low main@F1360
  1102  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0B39  00E6               	movwf	??_main
  1105  0B3A  0804               	movf	4,w
  1106  0B3B  00E7               	movwf	??_main+1
  1107  0B3C  300E               	movlw	14
  1108  0B3D  00E8               	movwf	??_main+2
  1109  0B3E                     u3740:	
  1110  0B3E  0866               	movf	??_main,w
  1111  0B3F  0084               	movwf	4
  1112  0B40  1783               	bsf	3,7	;select IRP bank3
  1113  0B41  0800               	movf	0,w
  1114  0B42  00E9               	movwf	??_main+3
  1115  0B43  0AE6               	incf	??_main,f
  1116  0B44  0867               	movf	??_main+1,w
  1117  0B45  0084               	movwf	4
  1118  0B46  0869               	movf	??_main+3,w
  1119  0B47  0080               	movwf	0
  1120  0B48  0AE7               	incf	??_main+1,f
  1121  0B49  0BE8               	decfsz	??_main+2,f
  1122  0B4A  2B3E               	goto	u3740
  1123                           
  1124                           ;BajanDecierdo_7-3.c: 139: char humidityToString[] = "Humidity: ";
  1125  0B4B  309E               	movlw	main@humidityToString& (0+255)
  1126  0B4C  0084               	movwf	4
  1127  0B4D  30CE               	movlw	low main@F1362
  1128  0B4E  00E6               	movwf	??_main
  1129  0B4F  0804               	movf	4,w
  1130  0B50  00E7               	movwf	??_main+1
  1131  0B51  300B               	movlw	11
  1132  0B52  00E8               	movwf	??_main+2
  1133  0B53                     u3750:	
  1134  0B53  0866               	movf	??_main,w
  1135  0B54  0084               	movwf	4
  1136  0B55  1783               	bsf	3,7	;select IRP bank3
  1137  0B56  0800               	movf	0,w
  1138  0B57  00E9               	movwf	??_main+3
  1139  0B58  0AE6               	incf	??_main,f
  1140  0B59  0867               	movf	??_main+1,w
  1141  0B5A  0084               	movwf	4
  1142  0B5B  0869               	movf	??_main+3,w
  1143  0B5C  0080               	movwf	0
  1144  0B5D  0AE7               	incf	??_main+1,f
  1145  0B5E  0BE8               	decfsz	??_main+2,f
  1146  0B5F  2B53               	goto	u3750
  1147                           
  1148                           ;BajanDecierdo_7-3.c: 140: char errorToString[] = "Error: ";
  1149  0B60  30A9               	movlw	main@errorToString& (0+255)
  1150  0B61  0084               	movwf	4
  1151  0B62  30D9               	movlw	low main@F1364
  1152  0B63  00E6               	movwf	??_main
  1153  0B64  0804               	movf	4,w
  1154  0B65  00E7               	movwf	??_main+1
  1155  0B66  3008               	movlw	8
  1156  0B67  00E8               	movwf	??_main+2
  1157  0B68                     u3760:	
  1158  0B68  0866               	movf	??_main,w
  1159  0B69  0084               	movwf	4
  1160  0B6A  1783               	bsf	3,7	;select IRP bank3
  1161  0B6B  0800               	movf	0,w
  1162  0B6C  00E9               	movwf	??_main+3
  1163  0B6D  0AE6               	incf	??_main,f
  1164  0B6E  0867               	movf	??_main+1,w
  1165  0B6F  0084               	movwf	4
  1166  0B70  0869               	movf	??_main+3,w
  1167  0B71  0080               	movwf	0
  1168  0B72  0AE7               	incf	??_main+1,f
  1169  0B73  0BE8               	decfsz	??_main+2,f
  1170  0B74  2B68               	goto	u3760
  1171                           
  1172                           ;BajanDecierdo_7-3.c: 141: char buf1[], buf2[];
  1173                           ;BajanDecierdo_7-3.c: 142: int index, status = 0;
  1174  0B75  1683               	bsf	3,5	;RP0=1, select bank3
  1175  0B76  1703               	bsf	3,6	;RP1=1, select bank3
  1176  0B77  01B1               	clrf	main@status^(0+384)
  1177  0B78  01B2               	clrf	(main@status+1)^(0+384)
  1178                           
  1179                           ;BajanDecierdo_7-3.c: 144: u8t error = 0;
  1180  0B79  01B9               	clrf	main@error^(0+384)
  1181                           
  1182                           ;BajanDecierdo_7-3.c: 145: nt16 rawRH, rawTemp;
  1183                           ;BajanDecierdo_7-3.c: 146: ft resultRH, resultTemp;
  1184                           ;BajanDecierdo_7-3.c: 148: OPTION_REG = 0x44;
  1185  0B7A  3044               	movlw	68
  1186  0B7B  1683               	bsf	3,5	;RP0=1, select bank1
  1187  0B7C  1303               	bcf	3,6	;RP1=0, select bank1
  1188  0B7D  0081               	movwf	1	;volatile
  1189                           
  1190                           ;BajanDecierdo_7-3.c: 149: TRISB = 0x00;
  1191  0B7E  0186               	clrf	6	;volatile
  1192                           
  1193                           ;BajanDecierdo_7-3.c: 150: PORTB = 0x00;
  1194  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0B81  0186               	clrf	6	;volatile
  1197                           
  1198                           ;BajanDecierdo_7-3.c: 151: GIE = 1;
  1199  0B82  178B               	bsf	11,7	;volatile
  1200                           
  1201                           ;BajanDecierdo_7-3.c: 153: init_I2C_Master();
  1202  0B83  160A  118A  221E  120A  158A  	fcall	_init_I2C_Master
  1203                           
  1204                           ;BajanDecierdo_7-3.c: 154: initLCD();
  1205  0B88  160A  118A  2366  120A  158A  	fcall	_initLCD
  1206                           
  1207                           ;BajanDecierdo_7-3.c: 156: instCTRL(0x80);
  1208  0B8D  3080               	movlw	128
  1209  0B8E  160A  118A  2251  120A  158A  	fcall	_instCTRL
  1210  0B93                     l2680:	
  1211                           ;BajanDecierdo_7-3.c: 157: while (humidityToString[index] != '\0')
  1212                           
  1213  0B93  1683               	bsf	3,5	;RP0=1, select bank3
  1214  0B94  1703               	bsf	3,6	;RP1=1, select bank3
  1215  0B95  083E               	movf	main@index^(0+384),w
  1216  0B96  3E9E               	addlw	main@humidityToString& (0+255)
  1217  0B97  0084               	movwf	4
  1218  0B98  1783               	bsf	3,7	;select IRP bank3
  1219  0B99  0880               	movf	0,f
  1220  0B9A  1903               	btfsc	3,2
  1221  0B9B  2BB1               	goto	l2682
  1222                           
  1223                           ;BajanDecierdo_7-3.c: 158: {
  1224                           ;BajanDecierdo_7-3.c: 159: dataCTRL(humidityToString[index]);
  1225  0B9C  1683               	bsf	3,5	;RP0=1, select bank3
  1226  0B9D  1703               	bsf	3,6	;RP1=1, select bank3
  1227  0B9E  083E               	movf	main@index^(0+384),w
  1228  0B9F  3E9E               	addlw	main@humidityToString& (0+255)
  1229  0BA0  0084               	movwf	4
  1230  0BA1  1783               	bsf	3,7	;select IRP bank3
  1231  0BA2  0800               	movf	0,w
  1232  0BA3  160A  118A  223E  120A  158A  	fcall	_dataCTRL
  1233                           
  1234                           ;BajanDecierdo_7-3.c: 160: index++;
  1235  0BA8  3001               	movlw	1
  1236  0BA9  1683               	bsf	3,5	;RP0=1, select bank3
  1237  0BAA  1703               	bsf	3,6	;RP1=1, select bank3
  1238  0BAB  07BE               	addwf	main@index^(0+384),f
  1239  0BAC  1803               	skipnc
  1240  0BAD  0ABF               	incf	(main@index+1)^(0+384),f
  1241  0BAE  3000               	movlw	0
  1242  0BAF  07BF               	addwf	(main@index+1)^(0+384),f
  1243  0BB0  2B93               	goto	l2680
  1244  0BB1                     l2682:	
  1245                           
  1246                           ;BajanDecierdo_7-3.c: 161: }
  1247                           ;BajanDecierdo_7-3.c: 162: index = 0;
  1248  0BB1  01BE               	clrf	main@index^(0+384)
  1249  0BB2  01BF               	clrf	(main@index+1)^(0+384)
  1250                           
  1251                           ;BajanDecierdo_7-3.c: 164: instCTRL(0xC0);
  1252  0BB3  30C0               	movlw	192
  1253  0BB4  160A  118A  2251  120A  158A  	fcall	_instCTRL
  1254  0BB9                     l2690:	
  1255                           ;BajanDecierdo_7-3.c: 165: while (tempToString[index] != '\0')
  1256                           
  1257  0BB9  1683               	bsf	3,5	;RP0=1, select bank3
  1258  0BBA  1703               	bsf	3,6	;RP1=1, select bank3
  1259  0BBB  083E               	movf	main@index^(0+384),w
  1260  0BBC  3E90               	addlw	main@tempToString& (0+255)
  1261  0BBD  0084               	movwf	4
  1262  0BBE  1783               	bsf	3,7	;select IRP bank3
  1263  0BBF  0880               	movf	0,f
  1264  0BC0  1903               	btfsc	3,2
  1265  0BC1  2BD7               	goto	l2692
  1266                           
  1267                           ;BajanDecierdo_7-3.c: 166: {
  1268                           ;BajanDecierdo_7-3.c: 167: dataCTRL(tempToString[index]);
  1269  0BC2  1683               	bsf	3,5	;RP0=1, select bank3
  1270  0BC3  1703               	bsf	3,6	;RP1=1, select bank3
  1271  0BC4  083E               	movf	main@index^(0+384),w
  1272  0BC5  3E90               	addlw	main@tempToString& (0+255)
  1273  0BC6  0084               	movwf	4
  1274  0BC7  1783               	bsf	3,7	;select IRP bank3
  1275  0BC8  0800               	movf	0,w
  1276  0BC9  160A  118A  223E  120A  158A  	fcall	_dataCTRL
  1277                           
  1278                           ;BajanDecierdo_7-3.c: 168: index++;
  1279  0BCE  3001               	movlw	1
  1280  0BCF  1683               	bsf	3,5	;RP0=1, select bank3
  1281  0BD0  1703               	bsf	3,6	;RP1=1, select bank3
  1282  0BD1  07BE               	addwf	main@index^(0+384),f
  1283  0BD2  1803               	skipnc
  1284  0BD3  0ABF               	incf	(main@index+1)^(0+384),f
  1285  0BD4  3000               	movlw	0
  1286  0BD5  07BF               	addwf	(main@index+1)^(0+384),f
  1287  0BD6  2BB9               	goto	l2690
  1288  0BD7                     l2692:	
  1289                           
  1290                           ;BajanDecierdo_7-3.c: 169: }
  1291                           ;BajanDecierdo_7-3.c: 170: index = 0;
  1292  0BD7  01BE               	clrf	main@index^(0+384)
  1293  0BD8  01BF               	clrf	(main@index+1)^(0+384)
  1294  0BD9                     l2694:	
  1295                           ;BajanDecierdo_7-3.c: 171: while (1)
  1296                           
  1297                           
  1298                           ;BajanDecierdo_7-3.c: 172: {
  1299                           ;BajanDecierdo_7-3.c: 174: SHT21_SoftReset();
  1300  0BD9  160A  118A  22DE  120A  158A  	fcall	_SHT21_SoftReset
  1301                           
  1302                           ;BajanDecierdo_7-3.c: 176: SHT21_SetResolution();
  1303  0BDE  160A  118A  228B  120A  158A  	fcall	_SHT21_SetResolution
  1304                           
  1305                           ;BajanDecierdo_7-3.c: 178: error != SHT21_Measure(HUMIDITY, &rawRH);
  1306  0BE3  30BA               	movlw	main@rawRH& (0+255)
  1307  0BE4  1283               	bcf	3,5	;RP0=0, select bank0
  1308  0BE5  1303               	bcf	3,6	;RP1=0, select bank0
  1309  0BE6  00E6               	movwf	??_main
  1310  0BE7  0866               	movf	??_main,w
  1311  0BE8  00F5               	movwf	SHT21_Measure@pMeasureand
  1312  0BE9  3000               	movlw	0
  1313  0BEA  160A  118A  25A3  120A  158A  	fcall	_SHT21_Measure
  1314                           
  1315                           ;BajanDecierdo_7-3.c: 180: error != SHT21_Measure(TEMPERATURE, &rawTemp);
  1316  0BEF  30BC               	movlw	main@rawTemp& (0+255)
  1317  0BF0  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0BF1  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0BF2  00E6               	movwf	??_main
  1320  0BF3  0866               	movf	??_main,w
  1321  0BF4  00F5               	movwf	SHT21_Measure@pMeasureand
  1322  0BF5  3001               	movlw	1
  1323  0BF6  160A  118A  25A3  120A  158A  	fcall	_SHT21_Measure
  1324                           
  1325                           ;BajanDecierdo_7-3.c: 183: resultTemp = SHT21_CalcTemp(rawTemp.u16);
  1326  0BFB  1683               	bsf	3,5	;RP0=1, select bank3
  1327  0BFC  1703               	bsf	3,6	;RP1=1, select bank3
  1328  0BFD  083D               	movf	(main@rawTemp+1)^(0+384),w
  1329  0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  1330  0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  1331  0C00  01D5               	clrf	SHT21_CalcTemp@u16Temp+1
  1332  0C01  07D5               	addwf	SHT21_CalcTemp@u16Temp+1,f
  1333  0C02  1683               	bsf	3,5	;RP0=1, select bank3
  1334  0C03  1703               	bsf	3,6	;RP1=1, select bank3
  1335  0C04  083C               	movf	main@rawTemp^(0+384),w
  1336  0C05  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0C06  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0C07  01D4               	clrf	SHT21_CalcTemp@u16Temp
  1339  0C08  07D4               	addwf	SHT21_CalcTemp@u16Temp,f
  1340  0C09  160A  118A  23FB  120A  158A  	fcall	_SHT21_CalcTemp
  1341  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  1343  0C10  0854               	movf	?_SHT21_CalcTemp,w
  1344  0C11  1683               	bsf	3,5	;RP0=1, select bank3
  1345  0C12  1703               	bsf	3,6	;RP1=1, select bank3
  1346  0C13  00B6               	movwf	main@resultTemp^(0+384)
  1347  0C14  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0C15  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0C16  0855               	movf	?_SHT21_CalcTemp+1,w
  1350  0C17  1683               	bsf	3,5	;RP0=1, select bank3
  1351  0C18  1703               	bsf	3,6	;RP1=1, select bank3
  1352  0C19  00B7               	movwf	(main@resultTemp+1)^(0+384)
  1353  0C1A  1283               	bcf	3,5	;RP0=0, select bank0
  1354  0C1B  1303               	bcf	3,6	;RP1=0, select bank0
  1355  0C1C  0856               	movf	?_SHT21_CalcTemp+2,w
  1356  0C1D  1683               	bsf	3,5	;RP0=1, select bank3
  1357  0C1E  1703               	bsf	3,6	;RP1=1, select bank3
  1358  0C1F  00B8               	movwf	(main@resultTemp+2)^(0+384)
  1359                           
  1360                           ;BajanDecierdo_7-3.c: 184: resultRH = SHT21_CalcRH(rawRH.u16);
  1361  0C20  083B               	movf	(main@rawRH+1)^(0+384),w
  1362  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  1363  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0C23  01D5               	clrf	SHT21_CalcRH@u16RH+1
  1365  0C24  07D5               	addwf	SHT21_CalcRH@u16RH+1,f
  1366  0C25  1683               	bsf	3,5	;RP0=1, select bank3
  1367  0C26  1703               	bsf	3,6	;RP1=1, select bank3
  1368  0C27  083A               	movf	main@rawRH^(0+384),w
  1369  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0C2A  01D4               	clrf	SHT21_CalcRH@u16RH
  1372  0C2B  07D4               	addwf	SHT21_CalcRH@u16RH,f
  1373  0C2C  160A  118A  23B7  120A  158A  	fcall	_SHT21_CalcRH
  1374  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0C33  0854               	movf	?_SHT21_CalcRH,w
  1377  0C34  1683               	bsf	3,5	;RP0=1, select bank3
  1378  0C35  1703               	bsf	3,6	;RP1=1, select bank3
  1379  0C36  00B3               	movwf	main@resultRH^(0+384)
  1380  0C37  1283               	bcf	3,5	;RP0=0, select bank0
  1381  0C38  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0C39  0855               	movf	?_SHT21_CalcRH+1,w
  1383  0C3A  1683               	bsf	3,5	;RP0=1, select bank3
  1384  0C3B  1703               	bsf	3,6	;RP1=1, select bank3
  1385  0C3C  00B4               	movwf	(main@resultRH+1)^(0+384)
  1386  0C3D  1283               	bcf	3,5	;RP0=0, select bank0
  1387  0C3E  1303               	bcf	3,6	;RP1=0, select bank0
  1388  0C3F  0856               	movf	?_SHT21_CalcRH+2,w
  1389  0C40  1683               	bsf	3,5	;RP0=1, select bank3
  1390  0C41  1703               	bsf	3,6	;RP1=1, select bank3
  1391  0C42  00B5               	movwf	(main@resultRH+2)^(0+384)
  1392                           
  1393                           ;BajanDecierdo_7-3.c: 187: sprintf(buf2, "%.2f", resultRH);
  1394  0C43  3090               	movlw	low main@buf2
  1395  0C44  1283               	bcf	3,5	;RP0=0, select bank0
  1396  0C45  1303               	bcf	3,6	;RP1=0, select bank0
  1397  0C46  00DA               	movwf	sprintf@sp
  1398  0C47  3001               	movlw	high main@buf2
  1399  0C48  00DB               	movwf	sprintf@sp+1
  1400  0C49  3079               	movlw	(STR_1-__stringbase)& (0+255)
  1401  0C4A  00E6               	movwf	??_main
  1402  0C4B  0866               	movf	??_main,w
  1403  0C4C  00DC               	movwf	sprintf@f
  1404  0C4D  1683               	bsf	3,5	;RP0=1, select bank3
  1405  0C4E  1703               	bsf	3,6	;RP1=1, select bank3
  1406  0C4F  0833               	movf	main@resultRH^(0+384),w
  1407  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0C52  00DD               	movwf	?_sprintf+3
  1410  0C53  1683               	bsf	3,5	;RP0=1, select bank3
  1411  0C54  1703               	bsf	3,6	;RP1=1, select bank3
  1412  0C55  0834               	movf	(main@resultRH+1)^(0+384),w
  1413  0C56  1283               	bcf	3,5	;RP0=0, select bank0
  1414  0C57  1303               	bcf	3,6	;RP1=0, select bank0
  1415  0C58  00DE               	movwf	?_sprintf+4
  1416  0C59  1683               	bsf	3,5	;RP0=1, select bank3
  1417  0C5A  1703               	bsf	3,6	;RP1=1, select bank3
  1418  0C5B  0835               	movf	(main@resultRH+2)^(0+384),w
  1419  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  1420  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  1421  0C5E  00DF               	movwf	?_sprintf+5
  1422  0C5F  120A  118A  218C  120A  158A  	fcall	_sprintf
  1423                           
  1424                           ;BajanDecierdo_7-3.c: 188: instCTRL(0x8D);
  1425  0C64  308D               	movlw	141
  1426  0C65  160A  118A  2251  120A  158A  	fcall	_instCTRL
  1427  0C6A                     l2714:	
  1428                           ;BajanDecierdo_7-3.c: 189: while (buf2[index] != '\0')
  1429                           
  1430  0C6A  3090               	movlw	low main@buf2
  1431  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  1432  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  1433  0C6D  00E6               	movwf	??_main
  1434  0C6E  3001               	movlw	high main@buf2
  1435  0C6F  00E7               	movwf	??_main+1
  1436  0C70  1683               	bsf	3,5	;RP0=1, select bank3
  1437  0C71  1703               	bsf	3,6	;RP1=1, select bank3
  1438  0C72  083E               	movf	main@index^(0+384),w
  1439  0C73  1283               	bcf	3,5	;RP0=0, select bank0
  1440  0C74  1303               	bcf	3,6	;RP1=0, select bank0
  1441  0C75  0766               	addwf	??_main,w
  1442  0C76  00E8               	movwf	??_main+2
  1443  0C77  1683               	bsf	3,5	;RP0=1, select bank3
  1444  0C78  1703               	bsf	3,6	;RP1=1, select bank3
  1445  0C79  083F               	movf	(main@index+1)^(0+384),w
  1446  0C7A  1803               	skipnc
  1447  0C7B  0A3F               	incf	(main@index+1)^(0+384),w
  1448  0C7C  1283               	bcf	3,5	;RP0=0, select bank0
  1449  0C7D  1303               	bcf	3,6	;RP1=0, select bank0
  1450  0C7E  0767               	addwf	??_main+1,w
  1451  0C7F  00E9               	movwf	??_main+3
  1452  0C80  0868               	movf	??_main+2,w
  1453  0C81  0084               	movwf	4
  1454  0C82  1783               	bsf	3,7
  1455  0C83  1C69               	btfss	??_main+3,0
  1456  0C84  1383               	bcf	3,7
  1457  0C85  0880               	movf	0,f
  1458  0C86  1903               	btfsc	3,2
  1459  0C87  2CB2               	goto	l2716
  1460                           
  1461                           ;BajanDecierdo_7-3.c: 190: {
  1462                           ;BajanDecierdo_7-3.c: 191: dataCTRL(buf2[index]);
  1463  0C88  3090               	movlw	low main@buf2
  1464  0C89  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0C8A  1303               	bcf	3,6	;RP1=0, select bank0
  1466  0C8B  00E6               	movwf	??_main
  1467  0C8C  3001               	movlw	high main@buf2
  1468  0C8D  00E7               	movwf	??_main+1
  1469  0C8E  1683               	bsf	3,5	;RP0=1, select bank3
  1470  0C8F  1703               	bsf	3,6	;RP1=1, select bank3
  1471  0C90  083E               	movf	main@index^(0+384),w
  1472  0C91  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0C92  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0C93  0766               	addwf	??_main,w
  1475  0C94  00E8               	movwf	??_main+2
  1476  0C95  1683               	bsf	3,5	;RP0=1, select bank3
  1477  0C96  1703               	bsf	3,6	;RP1=1, select bank3
  1478  0C97  083F               	movf	(main@index+1)^(0+384),w
  1479  0C98  1803               	skipnc
  1480  0C99  0A3F               	incf	(main@index+1)^(0+384),w
  1481  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  1482  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  1483  0C9C  0767               	addwf	??_main+1,w
  1484  0C9D  00E9               	movwf	??_main+3
  1485  0C9E  0868               	movf	??_main+2,w
  1486  0C9F  0084               	movwf	4
  1487  0CA0  1783               	bsf	3,7
  1488  0CA1  1C69               	btfss	??_main+3,0
  1489  0CA2  1383               	bcf	3,7
  1490  0CA3  0800               	movf	0,w
  1491  0CA4  160A  118A  223E  120A  158A  	fcall	_dataCTRL
  1492                           
  1493                           ;BajanDecierdo_7-3.c: 192: index++;
  1494  0CA9  3001               	movlw	1
  1495  0CAA  1683               	bsf	3,5	;RP0=1, select bank3
  1496  0CAB  1703               	bsf	3,6	;RP1=1, select bank3
  1497  0CAC  07BE               	addwf	main@index^(0+384),f
  1498  0CAD  1803               	skipnc
  1499  0CAE  0ABF               	incf	(main@index+1)^(0+384),f
  1500  0CAF  3000               	movlw	0
  1501  0CB0  07BF               	addwf	(main@index+1)^(0+384),f
  1502  0CB1  2C6A               	goto	l2714
  1503  0CB2                     l2716:	
  1504                           
  1505                           ;BajanDecierdo_7-3.c: 193: }
  1506                           ;BajanDecierdo_7-3.c: 194: index = 0;
  1507  0CB2  1683               	bsf	3,5	;RP0=1, select bank3
  1508  0CB3  1703               	bsf	3,6	;RP1=1, select bank3
  1509  0CB4  01BE               	clrf	main@index^(0+384)
  1510  0CB5  01BF               	clrf	(main@index+1)^(0+384)
  1511                           
  1512                           ;BajanDecierdo_7-3.c: 195: dataCTRL('%');
  1513  0CB6  3025               	movlw	37
  1514  0CB7  160A  118A  223E  120A  158A  	fcall	_dataCTRL
  1515                           
  1516                           ;BajanDecierdo_7-3.c: 197: sprintf(buf1, "%.2f", resultTemp);
  1517  0CBC  3090               	movlw	low main@buf1
  1518  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0CBF  00DA               	movwf	sprintf@sp
  1521  0CC0  3001               	movlw	high main@buf1
  1522  0CC1  00DB               	movwf	sprintf@sp+1
  1523  0CC2  3079               	movlw	(STR_1-__stringbase)& (0+255)
  1524  0CC3  00E6               	movwf	??_main
  1525  0CC4  0866               	movf	??_main,w
  1526  0CC5  00DC               	movwf	sprintf@f
  1527  0CC6  1683               	bsf	3,5	;RP0=1, select bank3
  1528  0CC7  1703               	bsf	3,6	;RP1=1, select bank3
  1529  0CC8  0836               	movf	main@resultTemp^(0+384),w
  1530  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  1532  0CCB  00DD               	movwf	?_sprintf+3
  1533  0CCC  1683               	bsf	3,5	;RP0=1, select bank3
  1534  0CCD  1703               	bsf	3,6	;RP1=1, select bank3
  1535  0CCE  0837               	movf	(main@resultTemp+1)^(0+384),w
  1536  0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  1537  0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  1538  0CD1  00DE               	movwf	?_sprintf+4
  1539  0CD2  1683               	bsf	3,5	;RP0=1, select bank3
  1540  0CD3  1703               	bsf	3,6	;RP1=1, select bank3
  1541  0CD4  0838               	movf	(main@resultTemp+2)^(0+384),w
  1542  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  1543  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  1544  0CD7  00DF               	movwf	?_sprintf+5
  1545  0CD8  120A  118A  218C  120A  158A  	fcall	_sprintf
  1546                           
  1547                           ;BajanDecierdo_7-3.c: 198: instCTRL(0xCD);
  1548  0CDD  30CD               	movlw	205
  1549  0CDE  160A  118A  2251  120A  158A  	fcall	_instCTRL
  1550  0CE3                     l2728:	
  1551                           ;BajanDecierdo_7-3.c: 199: while (buf1[index] != '\0')
  1552                           
  1553  0CE3  3090               	movlw	low main@buf1
  1554  0CE4  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0CE5  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0CE6  00E6               	movwf	??_main
  1557  0CE7  3001               	movlw	high main@buf1
  1558  0CE8  00E7               	movwf	??_main+1
  1559  0CE9  1683               	bsf	3,5	;RP0=1, select bank3
  1560  0CEA  1703               	bsf	3,6	;RP1=1, select bank3
  1561  0CEB  083E               	movf	main@index^(0+384),w
  1562  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0CEE  0766               	addwf	??_main,w
  1565  0CEF  00E8               	movwf	??_main+2
  1566  0CF0  1683               	bsf	3,5	;RP0=1, select bank3
  1567  0CF1  1703               	bsf	3,6	;RP1=1, select bank3
  1568  0CF2  083F               	movf	(main@index+1)^(0+384),w
  1569  0CF3  1803               	skipnc
  1570  0CF4  0A3F               	incf	(main@index+1)^(0+384),w
  1571  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0CF7  0767               	addwf	??_main+1,w
  1574  0CF8  00E9               	movwf	??_main+3
  1575  0CF9  0868               	movf	??_main+2,w
  1576  0CFA  0084               	movwf	4
  1577  0CFB  1783               	bsf	3,7
  1578  0CFC  1C69               	btfss	??_main+3,0
  1579  0CFD  1383               	bcf	3,7
  1580  0CFE  0880               	movf	0,f
  1581  0CFF  1903               	btfsc	3,2
  1582  0D00  2D2B               	goto	l2730
  1583                           
  1584                           ;BajanDecierdo_7-3.c: 200: {
  1585                           ;BajanDecierdo_7-3.c: 201: dataCTRL(buf1[index]);
  1586  0D01  3090               	movlw	low main@buf1
  1587  0D02  1283               	bcf	3,5	;RP0=0, select bank0
  1588  0D03  1303               	bcf	3,6	;RP1=0, select bank0
  1589  0D04  00E6               	movwf	??_main
  1590  0D05  3001               	movlw	high main@buf1
  1591  0D06  00E7               	movwf	??_main+1
  1592  0D07  1683               	bsf	3,5	;RP0=1, select bank3
  1593  0D08  1703               	bsf	3,6	;RP1=1, select bank3
  1594  0D09  083E               	movf	main@index^(0+384),w
  1595  0D0A  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0D0B  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0D0C  0766               	addwf	??_main,w
  1598  0D0D  00E8               	movwf	??_main+2
  1599  0D0E  1683               	bsf	3,5	;RP0=1, select bank3
  1600  0D0F  1703               	bsf	3,6	;RP1=1, select bank3
  1601  0D10  083F               	movf	(main@index+1)^(0+384),w
  1602  0D11  1803               	skipnc
  1603  0D12  0A3F               	incf	(main@index+1)^(0+384),w
  1604  0D13  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0D14  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0D15  0767               	addwf	??_main+1,w
  1607  0D16  00E9               	movwf	??_main+3
  1608  0D17  0868               	movf	??_main+2,w
  1609  0D18  0084               	movwf	4
  1610  0D19  1783               	bsf	3,7
  1611  0D1A  1C69               	btfss	??_main+3,0
  1612  0D1B  1383               	bcf	3,7
  1613  0D1C  0800               	movf	0,w
  1614  0D1D  160A  118A  223E  120A  158A  	fcall	_dataCTRL
  1615                           
  1616                           ;BajanDecierdo_7-3.c: 202: index++;
  1617  0D22  3001               	movlw	1
  1618  0D23  1683               	bsf	3,5	;RP0=1, select bank3
  1619  0D24  1703               	bsf	3,6	;RP1=1, select bank3
  1620  0D25  07BE               	addwf	main@index^(0+384),f
  1621  0D26  1803               	skipnc
  1622  0D27  0ABF               	incf	(main@index+1)^(0+384),f
  1623  0D28  3000               	movlw	0
  1624  0D29  07BF               	addwf	(main@index+1)^(0+384),f
  1625  0D2A  2CE3               	goto	l2728
  1626  0D2B                     l2730:	
  1627                           
  1628                           ;BajanDecierdo_7-3.c: 203: }
  1629                           ;BajanDecierdo_7-3.c: 204: index = 0;
  1630  0D2B  1683               	bsf	3,5	;RP0=1, select bank3
  1631  0D2C  1703               	bsf	3,6	;RP1=1, select bank3
  1632  0D2D  01BE               	clrf	main@index^(0+384)
  1633  0D2E  01BF               	clrf	(main@index+1)^(0+384)
  1634                           
  1635                           ;BajanDecierdo_7-3.c: 207: if (error != 0)
  1636  0D2F  0839               	movf	main@error^(0+384),w
  1637  0D30  1903               	btfsc	3,2
  1638  0D31  2D57               	goto	l2744
  1639                           
  1640                           ;BajanDecierdo_7-3.c: 208: {
  1641                           ;BajanDecierdo_7-3.c: 209: initLCD();
  1642  0D32  160A  118A  2366  120A  158A  	fcall	_initLCD
  1643  0D37                     l2740:	
  1644                           ;BajanDecierdo_7-3.c: 210: while (errorToString[index] != '\0')
  1645                           
  1646  0D37  1683               	bsf	3,5	;RP0=1, select bank3
  1647  0D38  1703               	bsf	3,6	;RP1=1, select bank3
  1648  0D39  083E               	movf	main@index^(0+384),w
  1649  0D3A  3EA9               	addlw	main@errorToString& (0+255)
  1650  0D3B  0084               	movwf	4
  1651  0D3C  1783               	bsf	3,7	;select IRP bank3
  1652  0D3D  0880               	movf	0,f
  1653  0D3E  1903               	btfsc	3,2
  1654  0D3F  2D55               	goto	l2742
  1655                           
  1656                           ;BajanDecierdo_7-3.c: 211: {
  1657                           ;BajanDecierdo_7-3.c: 212: dataCTRL(errorToString[index]);
  1658  0D40  1683               	bsf	3,5	;RP0=1, select bank3
  1659  0D41  1703               	bsf	3,6	;RP1=1, select bank3
  1660  0D42  083E               	movf	main@index^(0+384),w
  1661  0D43  3EA9               	addlw	main@errorToString& (0+255)
  1662  0D44  0084               	movwf	4
  1663  0D45  1783               	bsf	3,7	;select IRP bank3
  1664  0D46  0800               	movf	0,w
  1665  0D47  160A  118A  223E  120A  158A  	fcall	_dataCTRL
  1666                           
  1667                           ;BajanDecierdo_7-3.c: 213: index++;
  1668  0D4C  3001               	movlw	1
  1669  0D4D  1683               	bsf	3,5	;RP0=1, select bank3
  1670  0D4E  1703               	bsf	3,6	;RP1=1, select bank3
  1671  0D4F  07BE               	addwf	main@index^(0+384),f
  1672  0D50  1803               	skipnc
  1673  0D51  0ABF               	incf	(main@index+1)^(0+384),f
  1674  0D52  3000               	movlw	0
  1675  0D53  07BF               	addwf	(main@index+1)^(0+384),f
  1676  0D54  2D37               	goto	l2740
  1677  0D55                     l2742:	
  1678                           
  1679                           ;BajanDecierdo_7-3.c: 214: }
  1680                           ;BajanDecierdo_7-3.c: 215: index = 0;
  1681  0D55  01BE               	clrf	main@index^(0+384)
  1682  0D56  01BF               	clrf	(main@index+1)^(0+384)
  1683  0D57                     l2744:	
  1684                           
  1685                           ;BajanDecierdo_7-3.c: 216: }
  1686                           ;BajanDecierdo_7-3.c: 217: delay(384);
  1687  0D57  3080               	movlw	128
  1688  0D58  00F0               	movwf	delay@overflow
  1689  0D59  3001               	movlw	1
  1690  0D5A  00F1               	movwf	delay@overflow+1
  1691  0D5B  160A  118A  22A6  120A  158A  	fcall	_delay
  1692  0D60  2BD9               	goto	l2694
  1693  0D61                     __end_of_main:	
  1694                           
  1695                           	psect	text1
  1696  018C                     __ptext1:	
  1697 ;; *************** function _sprintf *****************
  1698 ;; Defined at:
  1699 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  sp              2   58[BANK0 ] PTR unsigned char 
  1702 ;;		 -> main@buf1(0), main@buf2(0), 
  1703 ;;  f               1   60[BANK0 ] PTR const unsigned char 
  1704 ;;		 -> STR_2(5), STR_1(5), 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  vd              4    8[BANK1 ] unsigned long 
  1707 ;;  vd              4   12[BANK1 ] unsigned long 
  1708 ;;  _val            4   21[BANK1 ] struct .
  1709 ;;  fval            3   29[BANK1 ] struct .
  1710 ;;  integ           3   18[BANK1 ] struct .
  1711 ;;  ival            3    0        struct .
  1712 ;;  prec            2   27[BANK1 ] int 
  1713 ;;  exp             2   25[BANK1 ] int 
  1714 ;;  flag            2   16[BANK1 ] unsigned short 
  1715 ;;  width           2    0        int 
  1716 ;;  c               1   32[BANK1 ] char 
  1717 ;;  ap              1    7[BANK1 ] PTR void [1]
  1718 ;;		 -> ?_sprintf(2), 
  1719 ;;  d               1    0        unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  2   58[BANK0 ] int 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1729 ;;      Params:         0       6       0       0       0
  1730 ;;      Locals:         0       0      33       0       0
  1731 ;;      Temps:          0       6       0       0       0
  1732 ;;      Totals:         0      12      33       0       0
  1733 ;;Total ram usage:       45 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    3
  1736 ;; This function calls:
  1737 ;;		___awdiv
  1738 ;;		___ftadd
  1739 ;;		___ftge
  1740 ;;		___ftmul
  1741 ;;		___ftneg
  1742 ;;		___ftsub
  1743 ;;		___fttol
  1744 ;;		___lldiv
  1745 ;;		___llmod
  1746 ;;		___lltoft
  1747 ;;		___wmul
  1748 ;;		__div_to_l_
  1749 ;;		__tdiv_to_l_
  1750 ;;		_fround
  1751 ;;		_isdigit
  1752 ;;		_scale
  1753 ;; This function is called by:
  1754 ;;		_main
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _sprintf
  1760  018C                     _sprintf:	
  1761                           
  1762                           ;doprnt.c: 494: va_list ap;
  1763                           ;doprnt.c: 499: signed char c;
  1764                           ;doprnt.c: 501: int width;
  1765                           ;doprnt.c: 504: int prec;
  1766                           ;doprnt.c: 508: unsigned short flag;
  1767                           ;doprnt.c: 515: char d;
  1768                           ;doprnt.c: 516: double fval, integ;
  1769                           ;doprnt.c: 517: int exp;
  1770                           ;doprnt.c: 518: double ival;
  1771                           ;doprnt.c: 519: union {
  1772                           ;doprnt.c: 520: unsigned long _val;
  1773                           ;doprnt.c: 521: struct {
  1774                           ;doprnt.c: 522: const char * _cp;
  1775                           ;doprnt.c: 523: unsigned _len;
  1776                           ;doprnt.c: 524: } _str;
  1777                           ;doprnt.c: 525: } _val;
  1778                           ;doprnt.c: 542: *ap = __va_start();
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1782  018C  305D               	movlw	(?_sprintf+3)& (0+255)
  1783  018D  1283               	bcf	3,5	;RP0=0, select bank0
  1784  018E  1303               	bcf	3,6	;RP1=0, select bank0
  1785  018F  00E0               	movwf	??_sprintf
  1786  0190  0860               	movf	??_sprintf,w
  1787  0191  1683               	bsf	3,5	;RP0=1, select bank1
  1788  0192  1303               	bcf	3,6	;RP1=0, select bank1
  1789  0193  00A7               	movwf	sprintf@ap^(0+128)
  1790  0194                     l2650:	
  1791                           ;doprnt.c: 545: while(c = *f++) {
  1792                           
  1793  0194  3001               	movlw	1
  1794  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0196  07DC               	addwf	sprintf@f,f
  1796  0197  30FF               	movlw	-1
  1797  0198  075C               	addwf	sprintf@f,w
  1798  0199  0084               	movwf	4
  1799  019A  160A  118A  2000  120A  118A  	fcall	stringdir
  1800  019F  00E0               	movwf	??_sprintf
  1801  01A0  0860               	movf	??_sprintf,w
  1802  01A1  1683               	bsf	3,5	;RP0=1, select bank1
  1803  01A2  1303               	bcf	3,6	;RP1=0, select bank1
  1804  01A3  00C0               	movwf	sprintf@c^(0+128)
  1805  01A4  08C0               	movf	sprintf@c^(0+128),f
  1806  01A5  1903               	btfsc	3,2
  1807  01A6  2FE5               	goto	l2652
  1808                           
  1809                           ;doprnt.c: 547: if(c != '%')
  1810  01A7  0840               	movf	sprintf@c^(0+128),w
  1811  01A8  3A25               	xorlw	37
  1812  01A9  1903               	skipnz
  1813  01AA  29BA               	goto	l2462
  1814                           
  1815                           ;doprnt.c: 549: {
  1816                           ;doprnt.c: 550: ((*sp++ = (c)));
  1817  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1818  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1819  01AD  085A               	movf	sprintf@sp,w
  1820  01AE  0084               	movwf	4
  1821  01AF  1383               	bcf	3,7
  1822  01B0  185B               	btfsc	sprintf@sp+1,0
  1823  01B1  1783               	bsf	3,7
  1824  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1825  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1826  01B4  0840               	movf	sprintf@c^(0+128),w
  1827  01B5  0080               	movwf	0
  1828  01B6  3001               	movlw	1
  1829  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1830  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1831  01B9  2FDF               	goto	L1
  1832  01BA                     l2462:	
  1833                           ;doprnt.c: 551: continue;
  1834                           
  1835                           
  1836                           ;doprnt.c: 552: }
  1837                           ;doprnt.c: 557: flag = 0;
  1838  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  1839  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  1840  01BC  01B0               	clrf	sprintf@flag^(0+128)
  1841  01BD  01B1               	clrf	(sprintf@flag+1)^(0+128)
  1842                           
  1843                           ;doprnt.c: 620: if(*f == '.') {
  1844  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1845  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1846  01C0  085C               	movf	sprintf@f,w
  1847  01C1  0084               	movwf	4
  1848  01C2  160A  118A  2000  120A  118A  	fcall	stringdir
  1849  01C7  3A2E               	xorlw	46
  1850  01C8  1D03               	skipz
  1851  01C9  2A1C               	goto	l2478
  1852                           
  1853                           ;doprnt.c: 621: flag |= 0x4000;
  1854  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  1855  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  1856  01CC  1731               	bsf	(sprintf@flag^(0+128)+1),6
  1857                           
  1858                           ;doprnt.c: 622: f++;
  1859  01CD  3001               	movlw	1
  1860  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1861  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1862  01D0  00E0               	movwf	??_sprintf
  1863  01D1  0860               	movf	??_sprintf,w
  1864  01D2  07DC               	addwf	sprintf@f,f
  1865                           
  1866                           ;doprnt.c: 629: {
  1867                           ;doprnt.c: 630: prec = 0;
  1868  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  1869  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  1870  01D5  01BB               	clrf	sprintf@prec^(0+128)
  1871  01D6  01BC               	clrf	(sprintf@prec+1)^(0+128)
  1872  01D7                     l2476:	
  1873                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  1874                           
  1875  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  1876  01D8  085C               	movf	sprintf@f,w
  1877  01D9  0084               	movwf	4
  1878  01DA  160A  118A  2000  120A  118A  	fcall	stringdir
  1879  01DF  160A  118A  2210  120A  118A  	fcall	_isdigit
  1880  01E4  1C03               	btfss	3,0
  1881  01E5  2A24               	goto	l2484
  1882                           
  1883                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  1884  01E6  1683               	bsf	3,5	;RP0=1, select bank1
  1885  01E7  1303               	bcf	3,6	;RP1=0, select bank1
  1886  01E8  083C               	movf	(sprintf@prec+1)^(0+128),w
  1887  01E9  01F1               	clrf	___wmul@multiplier+1
  1888  01EA  07F1               	addwf	___wmul@multiplier+1,f
  1889  01EB  083B               	movf	sprintf@prec^(0+128),w
  1890  01EC  01F0               	clrf	___wmul@multiplier
  1891  01ED  07F0               	addwf	___wmul@multiplier,f
  1892  01EE  300A               	movlw	10
  1893  01EF  00F2               	movwf	___wmul@multiplicand
  1894  01F0  3000               	movlw	0
  1895  01F1  00F3               	movwf	___wmul@multiplicand+1
  1896  01F2  160A  118A  231D  120A  118A  	fcall	___wmul
  1897  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1898  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1899  01F9  085C               	movf	sprintf@f,w
  1900  01FA  0084               	movwf	4
  1901  01FB  160A  118A  2000  120A  118A  	fcall	stringdir
  1902  0200  0770               	addwf	?___wmul,w
  1903  0201  00E0               	movwf	??_sprintf
  1904  0202  3000               	movlw	0
  1905  0203  1803               	skipnc
  1906  0204  3001               	movlw	1
  1907  0205  0771               	addwf	?___wmul+1,w
  1908  0206  00E1               	movwf	??_sprintf+1
  1909  0207  0860               	movf	??_sprintf,w
  1910  0208  3ED0               	addlw	208
  1911  0209  1683               	bsf	3,5	;RP0=1, select bank1
  1912  020A  1303               	bcf	3,6	;RP1=0, select bank1
  1913  020B  00BB               	movwf	sprintf@prec^(0+128)
  1914  020C  1283               	bcf	3,5	;RP0=0, select bank0
  1915  020D  1303               	bcf	3,6	;RP1=0, select bank0
  1916  020E  0861               	movf	??_sprintf+1,w
  1917  020F  1803               	skipnc
  1918  0210  3E01               	addlw	1
  1919  0211  3EFF               	addlw	255
  1920  0212  1683               	bsf	3,5	;RP0=1, select bank1
  1921  0213  1303               	bcf	3,6	;RP1=0, select bank1
  1922  0214  00BC               	movwf	(sprintf@prec+1)^(0+128)
  1923  0215  3001               	movlw	1
  1924  0216  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0217  1303               	bcf	3,6	;RP1=0, select bank0
  1926  0218  00E0               	movwf	??_sprintf
  1927  0219  0860               	movf	??_sprintf,w
  1928  021A  07DC               	addwf	sprintf@f,f
  1929  021B  29D7               	goto	l2476
  1930  021C                     l2478:	
  1931                           ;doprnt.c: 633: }
  1932                           ;doprnt.c: 634: } else {
  1933                           
  1934                           
  1935                           ;doprnt.c: 635: prec = 0;
  1936  021C  1683               	bsf	3,5	;RP0=1, select bank1
  1937  021D  1303               	bcf	3,6	;RP1=0, select bank1
  1938  021E  01BB               	clrf	sprintf@prec^(0+128)
  1939  021F  01BC               	clrf	(sprintf@prec+1)^(0+128)
  1940                           
  1941                           ;doprnt.c: 637: flag |= 0x1000;
  1942  0220  1631               	bsf	(sprintf@flag^(0+128)+1),4
  1943                           
  1944                           ;doprnt.c: 639: }
  1945                           ;doprnt.c: 644: switch(c = *f++) {
  1946  0221  2A24               	goto	l2484
  1947  0222                     l203:	
  1948                           ;doprnt.c: 671: case 'f':
  1949                           
  1950                           ;doprnt.c: 647: goto alldone;
  1951                           
  1952                           ;doprnt.c: 646: case 0:
  1953                           
  1954                           
  1955                           ;doprnt.c: 672: flag |= 0x400;
  1956  0222  1531               	bsf	(sprintf@flag^(0+128)+1),2
  1957                           
  1958                           ;doprnt.c: 673: break;
  1959  0223  2A3A               	goto	l2486
  1960  0224                     l2484:	
  1961                           ;doprnt.c: 831: }
  1962                           
  1963                           ;doprnt.c: 822: continue;
  1964                           
  1965                           ;doprnt.c: 811: default:
  1966                           
  1967  0224  3001               	movlw	1
  1968  0225  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0226  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0227  07DC               	addwf	sprintf@f,f
  1971  0228  30FF               	movlw	-1
  1972  0229  075C               	addwf	sprintf@f,w
  1973  022A  0084               	movwf	4
  1974  022B  160A  118A  2000  120A  118A  	fcall	stringdir
  1975  0230  1683               	bsf	3,5	;RP0=1, select bank1
  1976  0231  1303               	bcf	3,6	;RP1=0, select bank1
  1977  0232  00C0               	movwf	sprintf@c^(0+128)
  1978                           
  1979                           ; Switch size 1, requested type "space"
  1980                           ; Number of cases is 2, Range of values is 0 to 102
  1981                           ; switch strategies available:
  1982                           ; Name         Instructions Cycles
  1983                           ; simple_byte            7     4 (average)
  1984                           ; jumptable            260     6 (fixed)
  1985                           ;	Chosen strategy is simple_byte
  1986  0233  3A00               	xorlw	0	; case 0
  1987  0234  1903               	skipnz
  1988  0235  2FE5               	goto	l2652
  1989  0236  3A66               	xorlw	102	; case 102
  1990  0237  1903               	skipnz
  1991  0238  2A22               	goto	l203
  1992  0239  2994               	goto	l2650
  1993  023A                     l2486:	
  1994                           
  1995                           ;doprnt.c: 834: if(flag & (0x700)) {
  1996  023A  3000               	movlw	0
  1997  023B  0530               	andwf	sprintf@flag^(0+128),w
  1998  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1999  023D  1303               	bcf	3,6	;RP1=0, select bank0
  2000  023E  00E0               	movwf	??_sprintf
  2001  023F  3007               	movlw	7
  2002  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2003  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2004  0242  0531               	andwf	(sprintf@flag+1)^(0+128),w
  2005  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0245  00E1               	movwf	??_sprintf+1
  2008  0246  0861               	movf	??_sprintf+1,w
  2009  0247  0460               	iorwf	??_sprintf,w
  2010  0248  1903               	skipnz
  2011  0249  2F6B               	goto	l2632
  2012                           
  2013                           ;doprnt.c: 836: if(flag & 0x1000)
  2014  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2015  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2016  024C  1E31               	btfss	(sprintf@flag+1)^(0+128),4
  2017  024D  2A52               	goto	l2492
  2018                           
  2019                           ;doprnt.c: 838: prec = 6;
  2020  024E  3006               	movlw	6
  2021  024F  00BB               	movwf	sprintf@prec^(0+128)
  2022  0250  3000               	movlw	0
  2023  0251  00BC               	movwf	(sprintf@prec^(0+128)+1)
  2024  0252                     l2492:	
  2025                           
  2026                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2027  0252  0827               	movf	sprintf@ap^(0+128),w
  2028  0253  0084               	movwf	4
  2029  0254  1383               	bcf	3,7	;select IRP bank0
  2030  0255  0800               	movf	0,w
  2031  0256  00BD               	movwf	sprintf@fval^(0+128)
  2032  0257  0A84               	incf	4,f
  2033  0258  0800               	movf	0,w
  2034  0259  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2035  025A  0A84               	incf	4,f
  2036  025B  0800               	movf	0,w
  2037  025C  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2038  025D  3003               	movlw	3
  2039  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2040  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0260  00E0               	movwf	??_sprintf
  2042  0261  0860               	movf	??_sprintf,w
  2043  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2044  0263  1303               	bcf	3,6	;RP1=0, select bank1
  2045  0264  07A7               	addwf	sprintf@ap^(0+128),f
  2046                           
  2047                           ;doprnt.c: 840: if(fval < 0.0) {
  2048  0265  083D               	movf	sprintf@fval^(0+128),w
  2049  0266  00F0               	movwf	___ftge@ff1
  2050  0267  083E               	movf	(sprintf@fval+1)^(0+128),w
  2051  0268  00F1               	movwf	___ftge@ff1+1
  2052  0269  083F               	movf	(sprintf@fval+2)^(0+128),w
  2053  026A  00F2               	movwf	___ftge@ff1+2
  2054  026B  3000               	movlw	0
  2055  026C  00F3               	movwf	___ftge@ff2
  2056  026D  3000               	movlw	0
  2057  026E  00F4               	movwf	___ftge@ff2+1
  2058  026F  3000               	movlw	0
  2059  0270  00F5               	movwf	___ftge@ff2+2
  2060  0271  160A  118A  248B  120A  118A  	fcall	___ftge
  2061  0276  1803               	btfsc	3,0
  2062  0277  2A91               	goto	l2502
  2063                           
  2064                           ;doprnt.c: 841: fval = -fval;
  2065  0278  1683               	bsf	3,5	;RP0=1, select bank1
  2066  0279  1303               	bcf	3,6	;RP1=0, select bank1
  2067  027A  083D               	movf	sprintf@fval^(0+128),w
  2068  027B  00F0               	movwf	___ftneg@f1
  2069  027C  083E               	movf	(sprintf@fval+1)^(0+128),w
  2070  027D  00F1               	movwf	___ftneg@f1+1
  2071  027E  083F               	movf	(sprintf@fval+2)^(0+128),w
  2072  027F  00F2               	movwf	___ftneg@f1+2
  2073  0280  160A  118A  2208  120A  118A  	fcall	___ftneg
  2074  0285  0870               	movf	?___ftneg,w
  2075  0286  1683               	bsf	3,5	;RP0=1, select bank1
  2076  0287  1303               	bcf	3,6	;RP1=0, select bank1
  2077  0288  00BD               	movwf	sprintf@fval^(0+128)
  2078  0289  0871               	movf	?___ftneg+1,w
  2079  028A  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2080  028B  0872               	movf	?___ftneg+2,w
  2081  028C  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2082                           
  2083                           ;doprnt.c: 842: flag |= 0x03;
  2084  028D  3003               	movlw	3
  2085  028E  04B0               	iorwf	sprintf@flag^(0+128),f
  2086  028F  3000               	movlw	0
  2087  0290  04B1               	iorwf	(sprintf@flag+1)^(0+128),f
  2088  0291                     l2502:	
  2089                           
  2090                           ;doprnt.c: 843: }
  2091                           ;doprnt.c: 844: exp = 0;
  2092  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0292  1303               	bcf	3,6	;RP1=0, select bank1
  2094  0293  01B9               	clrf	sprintf@exp^(0+128)
  2095  0294  01BA               	clrf	(sprintf@exp+1)^(0+128)
  2096                           
  2097                           ;doprnt.c: 845: if( fval!=0) {
  2098  0295  083F               	movf	(sprintf@fval+2)^(0+128),w
  2099  0296  043E               	iorwf	(sprintf@fval+1)^(0+128),w
  2100  0297  043D               	iorwf	sprintf@fval^(0+128),w
  2101  0298  1903               	skipnz
  2102  0299  2B8D               	goto	l2530
  2103                           
  2104                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2105  029A  30BD               	movlw	low sprintf@fval
  2106  029B  0084               	movwf	4
  2107  029C  1383               	bcf	3,7	;select IRP bank1
  2108  029D  0800               	movf	0,w
  2109  029E  1283               	bcf	3,5	;RP0=0, select bank0
  2110  029F  1303               	bcf	3,6	;RP1=0, select bank0
  2111  02A0  00E0               	movwf	??_sprintf
  2112  02A1  0A84               	incf	4,f
  2113  02A2  0800               	movf	0,w
  2114  02A3  00E1               	movwf	??_sprintf+1
  2115  02A4  0A84               	incf	4,f
  2116  02A5  0800               	movf	0,w
  2117  02A6  00E2               	movwf	??_sprintf+2
  2118  02A7  0A84               	incf	4,f
  2119  02A8  0800               	movf	0,w
  2120  02A9  00E3               	movwf	??_sprintf+3
  2121  02AA  300F               	movlw	15
  2122  02AB                     u3445:	
  2123  02AB  1003               	clrc
  2124  02AC  0CE3               	rrf	??_sprintf+3,f
  2125  02AD  0CE2               	rrf	??_sprintf+2,f
  2126  02AE  0CE1               	rrf	??_sprintf+1,f
  2127  02AF  0CE0               	rrf	??_sprintf,f
  2128  02B0  3EFF               	addlw	-1
  2129  02B1  1D03               	skipz
  2130  02B2  2AAB               	goto	u3445
  2131  02B3  30FF               	movlw	255
  2132  02B4  0560               	andwf	??_sprintf,w
  2133  02B5  00E4               	movwf	??_sprintf+4
  2134  02B6  3000               	movlw	0
  2135  02B7  0561               	andwf	??_sprintf+1,w
  2136  02B8  00E5               	movwf	??_sprintf+5
  2137  02B9  0864               	movf	??_sprintf+4,w
  2138  02BA  3E82               	addlw	130
  2139  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2140  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2141  02BD  00B9               	movwf	sprintf@exp^(0+128)
  2142  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2143  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2144  02C0  0865               	movf	??_sprintf+5,w
  2145  02C1  1803               	skipnc
  2146  02C2  3E01               	addlw	1
  2147  02C3  3EFF               	addlw	255
  2148  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2149  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2150  02C6  00BA               	movwf	(sprintf@exp+1)^(0+128)
  2151                           
  2152                           ;doprnt.c: 847: exp--;
  2153  02C7  30FF               	movlw	255
  2154  02C8  07B9               	addwf	sprintf@exp^(0+128),f
  2155  02C9  1803               	skipnc
  2156  02CA  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2157  02CB  30FF               	movlw	255
  2158  02CC  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2159                           
  2160                           ;doprnt.c: 848: exp *= 3;
  2161  02CD  3003               	movlw	3
  2162  02CE  00F0               	movwf	___wmul@multiplier
  2163  02CF  3000               	movlw	0
  2164  02D0  00F1               	movwf	___wmul@multiplier+1
  2165  02D1  083A               	movf	(sprintf@exp+1)^(0+128),w
  2166  02D2  01F3               	clrf	___wmul@multiplicand+1
  2167  02D3  07F3               	addwf	___wmul@multiplicand+1,f
  2168  02D4  0839               	movf	sprintf@exp^(0+128),w
  2169  02D5  01F2               	clrf	___wmul@multiplicand
  2170  02D6  07F2               	addwf	___wmul@multiplicand,f
  2171  02D7  160A  118A  231D  120A  118A  	fcall	___wmul
  2172  02DC  0871               	movf	?___wmul+1,w
  2173  02DD  1683               	bsf	3,5	;RP0=1, select bank1
  2174  02DE  1303               	bcf	3,6	;RP1=0, select bank1
  2175  02DF  01BA               	clrf	(sprintf@exp+1)^(0+128)
  2176  02E0  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2177  02E1  0870               	movf	?___wmul,w
  2178  02E2  01B9               	clrf	sprintf@exp^(0+128)
  2179  02E3  07B9               	addwf	sprintf@exp^(0+128),f
  2180                           
  2181                           ;doprnt.c: 849: exp /= 10;
  2182  02E4  300A               	movlw	10
  2183  02E5  00F7               	movwf	___awdiv@divisor
  2184  02E6  3000               	movlw	0
  2185  02E7  00F8               	movwf	___awdiv@divisor+1
  2186  02E8  083A               	movf	(sprintf@exp+1)^(0+128),w
  2187  02E9  01FA               	clrf	___awdiv@dividend+1
  2188  02EA  07FA               	addwf	___awdiv@dividend+1,f
  2189  02EB  0839               	movf	sprintf@exp^(0+128),w
  2190  02EC  01F9               	clrf	___awdiv@dividend
  2191  02ED  07F9               	addwf	___awdiv@dividend,f
  2192  02EE  160A  118A  24E8  120A  118A  	fcall	___awdiv
  2193  02F3  0878               	movf	?___awdiv+1,w
  2194  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  2195  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  2196  02F6  01BA               	clrf	(sprintf@exp+1)^(0+128)
  2197  02F7  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2198  02F8  0877               	movf	?___awdiv,w
  2199  02F9  01B9               	clrf	sprintf@exp^(0+128)
  2200  02FA  07B9               	addwf	sprintf@exp^(0+128),f
  2201                           
  2202                           ;doprnt.c: 850: if(exp < 0)
  2203  02FB  1FBA               	btfss	(sprintf@exp+1)^(0+128),7
  2204  02FC  2B03               	goto	l2518
  2205                           
  2206                           ;doprnt.c: 851: exp--;
  2207  02FD  30FF               	movlw	255
  2208  02FE  07B9               	addwf	sprintf@exp^(0+128),f
  2209  02FF  1803               	skipnc
  2210  0300  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2211  0301  30FF               	movlw	255
  2212  0302  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2213  0303                     l2518:	
  2214                           
  2215                           ;doprnt.c: 855: integ = scale(-exp);
  2216  0303  0339               	decf	sprintf@exp^(0+128),w
  2217  0304  3AFF               	xorlw	255
  2218  0305  120A  158A  2561  120A  118A  	fcall	_scale
  2219  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2220  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2221  030C  0837               	movf	?_scale,w
  2222  030D  1683               	bsf	3,5	;RP0=1, select bank1
  2223  030E  1303               	bcf	3,6	;RP1=0, select bank1
  2224  030F  00B2               	movwf	sprintf@integ^(0+128)
  2225  0310  1283               	bcf	3,5	;RP0=0, select bank0
  2226  0311  1303               	bcf	3,6	;RP1=0, select bank0
  2227  0312  0838               	movf	?_scale+1,w
  2228  0313  1683               	bsf	3,5	;RP0=1, select bank1
  2229  0314  1303               	bcf	3,6	;RP1=0, select bank1
  2230  0315  00B3               	movwf	(sprintf@integ+1)^(0+128)
  2231  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2232  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2233  0318  0839               	movf	?_scale+2,w
  2234  0319  1683               	bsf	3,5	;RP0=1, select bank1
  2235  031A  1303               	bcf	3,6	;RP1=0, select bank1
  2236  031B  00B4               	movwf	(sprintf@integ+2)^(0+128)
  2237                           
  2238                           ;doprnt.c: 856: integ *= fval;
  2239  031C  083D               	movf	sprintf@fval^(0+128),w
  2240  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2241  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2242  031F  00A7               	movwf	___ftmul@f1
  2243  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2244  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2245  0322  083E               	movf	(sprintf@fval+1)^(0+128),w
  2246  0323  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0324  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0325  00A8               	movwf	___ftmul@f1+1
  2249  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2251  0328  083F               	movf	(sprintf@fval+2)^(0+128),w
  2252  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2253  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2254  032B  00A9               	movwf	___ftmul@f1+2
  2255  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2256  032D  1303               	bcf	3,6	;RP1=0, select bank1
  2257  032E  0832               	movf	sprintf@integ^(0+128),w
  2258  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0331  00AA               	movwf	___ftmul@f2
  2261  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2262  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2263  0334  0833               	movf	(sprintf@integ+1)^(0+128),w
  2264  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0337  00AB               	movwf	___ftmul@f2+1
  2267  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2268  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2269  033A  0834               	movf	(sprintf@integ+2)^(0+128),w
  2270  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2271  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2272  033D  00AC               	movwf	___ftmul@f2+2
  2273  033E  160A  118A  272D  120A  118A  	fcall	___ftmul
  2274  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2275  0344  1303               	bcf	3,6	;RP1=0, select bank0
  2276  0345  0827               	movf	?___ftmul,w
  2277  0346  1683               	bsf	3,5	;RP0=1, select bank1
  2278  0347  1303               	bcf	3,6	;RP1=0, select bank1
  2279  0348  00B2               	movwf	sprintf@integ^(0+128)
  2280  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2281  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2282  034B  0828               	movf	?___ftmul+1,w
  2283  034C  1683               	bsf	3,5	;RP0=1, select bank1
  2284  034D  1303               	bcf	3,6	;RP1=0, select bank1
  2285  034E  00B3               	movwf	(sprintf@integ+1)^(0+128)
  2286  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2287  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2288  0351  0829               	movf	?___ftmul+2,w
  2289  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2290  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2291  0354  00B4               	movwf	(sprintf@integ+2)^(0+128)
  2292                           
  2293                           ;doprnt.c: 857: if(integ < 1.0)
  2294  0355  0832               	movf	sprintf@integ^(0+128),w
  2295  0356  00F0               	movwf	___ftge@ff1
  2296  0357  0833               	movf	(sprintf@integ+1)^(0+128),w
  2297  0358  00F1               	movwf	___ftge@ff1+1
  2298  0359  0834               	movf	(sprintf@integ+2)^(0+128),w
  2299  035A  00F2               	movwf	___ftge@ff1+2
  2300  035B  3000               	movlw	0
  2301  035C  00F3               	movwf	___ftge@ff2
  2302  035D  3080               	movlw	128
  2303  035E  00F4               	movwf	___ftge@ff2+1
  2304  035F  303F               	movlw	63
  2305  0360  00F5               	movwf	___ftge@ff2+2
  2306  0361  160A  118A  248B  120A  118A  	fcall	___ftge
  2307  0366  1803               	btfsc	3,0
  2308  0367  2B70               	goto	l2526
  2309                           
  2310                           ;doprnt.c: 858: exp--;
  2311  0368  30FF               	movlw	255
  2312  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2313  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2314  036B  07B9               	addwf	sprintf@exp^(0+128),f
  2315  036C  1803               	skipnc
  2316  036D  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2317  036E  30FF               	movlw	255
  2318  036F  2B8C               	goto	L2
  2319  0370                     l2526:	
  2320                           
  2321                           ;doprnt.c: 859: else if(integ >= 10.0)
  2322  0370  1683               	bsf	3,5	;RP0=1, select bank1
  2323  0371  1303               	bcf	3,6	;RP1=0, select bank1
  2324  0372  0832               	movf	sprintf@integ^(0+128),w
  2325  0373  00F0               	movwf	___ftge@ff1
  2326  0374  0833               	movf	(sprintf@integ+1)^(0+128),w
  2327  0375  00F1               	movwf	___ftge@ff1+1
  2328  0376  0834               	movf	(sprintf@integ+2)^(0+128),w
  2329  0377  00F2               	movwf	___ftge@ff1+2
  2330  0378  3000               	movlw	0
  2331  0379  00F3               	movwf	___ftge@ff2
  2332  037A  3020               	movlw	32
  2333  037B  00F4               	movwf	___ftge@ff2+1
  2334  037C  3041               	movlw	65
  2335  037D  00F5               	movwf	___ftge@ff2+2
  2336  037E  160A  118A  248B  120A  118A  	fcall	___ftge
  2337  0383  1C03               	btfss	3,0
  2338  0384  2B8D               	goto	l2530
  2339                           
  2340                           ;doprnt.c: 860: exp++;
  2341  0385  3001               	movlw	1
  2342  0386  1683               	bsf	3,5	;RP0=1, select bank1
  2343  0387  1303               	bcf	3,6	;RP1=0, select bank1
  2344  0388  07B9               	addwf	sprintf@exp^(0+128),f
  2345  0389  1803               	skipnc
  2346  038A  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2347  038B  3000               	movlw	0
  2348  038C                     L2:	
  2349  038C  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2350  038D                     l2530:	
  2351                           
  2352                           ;doprnt.c: 861: }
  2353                           ;doprnt.c: 1121: if(prec <= 12)
  2354  038D  1683               	bsf	3,5	;RP0=1, select bank1
  2355  038E  1303               	bcf	3,6	;RP1=0, select bank1
  2356  038F  083C               	movf	(sprintf@prec+1)^(0+128),w
  2357  0390  3A80               	xorlw	128
  2358  0391  00FF               	movwf	127
  2359  0392  3080               	movlw	128
  2360  0393  027F               	subwf	127,w
  2361  0394  1D03               	skipz
  2362  0395  2B98               	goto	u3485
  2363  0396  300D               	movlw	13
  2364  0397  023B               	subwf	sprintf@prec^(0+128),w
  2365  0398                     u3485:	
  2366  0398  1803               	skipnc
  2367  0399  2BD3               	goto	l2534
  2368                           
  2369                           ;doprnt.c: 1122: fval += fround(prec);
  2370  039A  1683               	bsf	3,5	;RP0=1, select bank1
  2371  039B  1303               	bcf	3,6	;RP1=0, select bank1
  2372  039C  083B               	movf	sprintf@prec^(0+128),w
  2373  039D  120A  158A  2198  120A  118A  	fcall	_fround
  2374  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  2375  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  2376  03A4  0837               	movf	?_fround,w
  2377  03A5  00C7               	movwf	___ftadd@f1
  2378  03A6  0838               	movf	?_fround+1,w
  2379  03A7  00C8               	movwf	___ftadd@f1+1
  2380  03A8  0839               	movf	?_fround+2,w
  2381  03A9  00C9               	movwf	___ftadd@f1+2
  2382  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2383  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2384  03AC  083D               	movf	sprintf@fval^(0+128),w
  2385  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2386  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2387  03AF  00CA               	movwf	___ftadd@f2
  2388  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2389  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2390  03B2  083E               	movf	(sprintf@fval+1)^(0+128),w
  2391  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  2392  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2393  03B5  00CB               	movwf	___ftadd@f2+1
  2394  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2395  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2396  03B8  083F               	movf	(sprintf@fval+2)^(0+128),w
  2397  03B9  1283               	bcf	3,5	;RP0=0, select bank0
  2398  03BA  1303               	bcf	3,6	;RP1=0, select bank0
  2399  03BB  00CC               	movwf	___ftadd@f2+2
  2400  03BC  120A  158A  208F  120A  118A  	fcall	___ftadd
  2401  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  2402  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  2403  03C3  0847               	movf	?___ftadd,w
  2404  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  2405  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  2406  03C6  00BD               	movwf	sprintf@fval^(0+128)
  2407  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2408  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2409  03C9  0848               	movf	?___ftadd+1,w
  2410  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2411  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2412  03CC  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2413  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2414  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2415  03CF  0849               	movf	?___ftadd+2,w
  2416  03D0  1683               	bsf	3,5	;RP0=1, select bank1
  2417  03D1  1303               	bcf	3,6	;RP1=0, select bank1
  2418  03D2  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2419  03D3                     l2534:	
  2420                           
  2421                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2422  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2423  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2424  03D5  083A               	movf	(sprintf@exp+1)^(0+128),w
  2425  03D6  3A80               	xorlw	128
  2426  03D7  00FF               	movwf	127
  2427  03D8  3080               	movlw	128
  2428  03D9  027F               	subwf	127,w
  2429  03DA  1D03               	skipz
  2430  03DB  2BDE               	goto	u3495
  2431  03DC  300A               	movlw	10
  2432  03DD  0239               	subwf	sprintf@exp^(0+128),w
  2433  03DE                     u3495:	
  2434  03DE  1803               	skipnc
  2435  03DF  2C11               	goto	l2542
  2436  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  2437  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  2438  03E2  083F               	movf	(sprintf@fval+2)^(0+128),w
  2439  03E3  043E               	iorwf	(sprintf@fval+1)^(0+128),w
  2440  03E4  043D               	iorwf	sprintf@fval^(0+128),w
  2441  03E5  1903               	skipnz
  2442  03E6  2C72               	goto	l2558
  2443  03E7  083D               	movf	sprintf@fval^(0+128),w
  2444  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2445  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2446  03EA  00C0               	movwf	___fttol@f1
  2447  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2448  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2449  03ED  083E               	movf	(sprintf@fval+1)^(0+128),w
  2450  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2451  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2452  03F0  00C1               	movwf	___fttol@f1+1
  2453  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2454  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2455  03F3  083F               	movf	(sprintf@fval+2)^(0+128),w
  2456  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2457  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2458  03F6  00C2               	movwf	___fttol@f1+2
  2459  03F7  120A  158A  2001  120A  118A  	fcall	___fttol
  2460  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  2461  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  2462  03FE  0843               	movf	?___fttol+3,w
  2463  03FF  0442               	iorwf	?___fttol+2,w
  2464  0400  0441               	iorwf	?___fttol+1,w
  2465  0401  0440               	iorwf	?___fttol,w
  2466  0402  1D03               	skipz
  2467  0403  2C72               	goto	l2558
  2468  0404  1683               	bsf	3,5	;RP0=1, select bank1
  2469  0405  1303               	bcf	3,6	;RP1=0, select bank1
  2470  0406  083A               	movf	(sprintf@exp+1)^(0+128),w
  2471  0407  3A80               	xorlw	128
  2472  0408  00FF               	movwf	127
  2473  0409  3080               	movlw	128
  2474  040A  027F               	subwf	127,w
  2475  040B  1D03               	skipz
  2476  040C  2C0F               	goto	u3525
  2477  040D  3002               	movlw	2
  2478  040E  0239               	subwf	sprintf@exp^(0+128),w
  2479  040F                     u3525:	
  2480  040F  1C03               	skipc
  2481  0410  2C72               	goto	l2558
  2482  0411                     l2542:	
  2483                           
  2484                           ;doprnt.c: 1129: if(integ < 4.294967296){
  2485  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2487  0413  0832               	movf	sprintf@integ^(0+128),w
  2488  0414  00F0               	movwf	___ftge@ff1
  2489  0415  0833               	movf	(sprintf@integ+1)^(0+128),w
  2490  0416  00F1               	movwf	___ftge@ff1+1
  2491  0417  0834               	movf	(sprintf@integ+2)^(0+128),w
  2492  0418  00F2               	movwf	___ftge@ff1+2
  2493  0419  3070               	movlw	112
  2494  041A  00F3               	movwf	___ftge@ff2
  2495  041B  3089               	movlw	137
  2496  041C  00F4               	movwf	___ftge@ff2+1
  2497  041D  3040               	movlw	64
  2498  041E  00F5               	movwf	___ftge@ff2+2
  2499  041F  160A  118A  248B  120A  118A  	fcall	___ftge
  2500  0424  1803               	btfsc	3,0
  2501  0425  2C28               	goto	l2546
  2502                           
  2503                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2504  0426  30F7               	movlw	247
  2505  0427  2C29               	goto	L3
  2506  0428                     l2546:	
  2507                           ;doprnt.c: 1131: }else{
  2508                           
  2509                           
  2510                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2511  0428  30F8               	movlw	248
  2512  0429                     L3:	
  2513  0429  1683               	bsf	3,5	;RP0=1, select bank1
  2514  042A  1303               	bcf	3,6	;RP1=0, select bank1
  2515  042B  07B9               	addwf	sprintf@exp^(0+128),f
  2516  042C  1803               	skipnc
  2517  042D  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2518  042E  30FF               	movlw	255
  2519  042F  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2520                           
  2521                           ;doprnt.c: 1133: }
  2522                           ;doprnt.c: 1134: integ = scale(exp);
  2523  0430  0839               	movf	sprintf@exp^(0+128),w
  2524  0431  120A  158A  2561  120A  118A  	fcall	_scale
  2525  0436  1283               	bcf	3,5	;RP0=0, select bank0
  2526  0437  1303               	bcf	3,6	;RP1=0, select bank0
  2527  0438  0837               	movf	?_scale,w
  2528  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2529  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2530  043B  00B2               	movwf	sprintf@integ^(0+128)
  2531  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2532  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2533  043E  0838               	movf	?_scale+1,w
  2534  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2535  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2536  0441  00B3               	movwf	(sprintf@integ+1)^(0+128)
  2537  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0444  0839               	movf	?_scale+2,w
  2540  0445  1683               	bsf	3,5	;RP0=1, select bank1
  2541  0446  1303               	bcf	3,6	;RP1=0, select bank1
  2542  0447  00B4               	movwf	(sprintf@integ+2)^(0+128)
  2543                           
  2544                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2545  0448  083D               	movf	sprintf@fval^(0+128),w
  2546  0449  00F0               	movwf	__tdiv_to_l_@f1
  2547  044A  083E               	movf	(sprintf@fval+1)^(0+128),w
  2548  044B  00F1               	movwf	__tdiv_to_l_@f1+1
  2549  044C  083F               	movf	(sprintf@fval+2)^(0+128),w
  2550  044D  00F2               	movwf	__tdiv_to_l_@f1+2
  2551  044E  0832               	movf	sprintf@integ^(0+128),w
  2552  044F  00F3               	movwf	__tdiv_to_l_@f2
  2553  0450  0833               	movf	(sprintf@integ+1)^(0+128),w
  2554  0451  00F4               	movwf	__tdiv_to_l_@f2+1
  2555  0452  0834               	movf	(sprintf@integ+2)^(0+128),w
  2556  0453  00F5               	movwf	__tdiv_to_l_@f2+2
  2557  0454  160A  118A  266A  120A  118A  	fcall	__tdiv_to_l_
  2558  0459  0873               	movf	?__tdiv_to_l_+3,w
  2559  045A  1683               	bsf	3,5	;RP0=1, select bank1
  2560  045B  1303               	bcf	3,6	;RP1=0, select bank1
  2561  045C  00A6               	movwf	(_sprintf$252+3)^(0+128)
  2562  045D  0872               	movf	?__tdiv_to_l_+2,w
  2563  045E  00A5               	movwf	(_sprintf$252+2)^(0+128)
  2564  045F  0871               	movf	?__tdiv_to_l_+1,w
  2565  0460  00A4               	movwf	(_sprintf$252+1)^(0+128)
  2566  0461  0870               	movf	?__tdiv_to_l_,w
  2567  0462  00A3               	movwf	_sprintf$252^(0+128)
  2568  0463  0826               	movf	(_sprintf$252+3)^(0+128),w
  2569  0464  00B8               	movwf	(sprintf@_val+3)^(0+128)
  2570  0465  0825               	movf	(_sprintf$252+2)^(0+128),w
  2571  0466  00B7               	movwf	(sprintf@_val+2)^(0+128)
  2572  0467  0824               	movf	(_sprintf$252+1)^(0+128),w
  2573  0468  00B6               	movwf	(sprintf@_val+1)^(0+128)
  2574  0469  0823               	movf	_sprintf$252^(0+128),w
  2575  046A  00B5               	movwf	sprintf@_val^(0+128)
  2576                           
  2577                           ;doprnt.c: 1138: fval = 0.0;
  2578  046B  3000               	movlw	0
  2579  046C  00BD               	movwf	sprintf@fval^(0+128)
  2580  046D  3000               	movlw	0
  2581  046E  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2582  046F  3000               	movlw	0
  2583  0470  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2584                           
  2585                           ;doprnt.c: 1139: } else {
  2586  0471  2CE1               	goto	l2562
  2587  0472                     l2558:	
  2588                           
  2589                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2590  0472  1683               	bsf	3,5	;RP0=1, select bank1
  2591  0473  1303               	bcf	3,6	;RP1=0, select bank1
  2592  0474  083D               	movf	sprintf@fval^(0+128),w
  2593  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2594  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2595  0477  00C0               	movwf	___fttol@f1
  2596  0478  1683               	bsf	3,5	;RP0=1, select bank1
  2597  0479  1303               	bcf	3,6	;RP1=0, select bank1
  2598  047A  083E               	movf	(sprintf@fval+1)^(0+128),w
  2599  047B  1283               	bcf	3,5	;RP0=0, select bank0
  2600  047C  1303               	bcf	3,6	;RP1=0, select bank0
  2601  047D  00C1               	movwf	___fttol@f1+1
  2602  047E  1683               	bsf	3,5	;RP0=1, select bank1
  2603  047F  1303               	bcf	3,6	;RP1=0, select bank1
  2604  0480  083F               	movf	(sprintf@fval+2)^(0+128),w
  2605  0481  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0482  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0483  00C2               	movwf	___fttol@f1+2
  2608  0484  120A  158A  2001  120A  118A  	fcall	___fttol
  2609  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2610  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2611  048B  0843               	movf	?___fttol+3,w
  2612  048C  1683               	bsf	3,5	;RP0=1, select bank1
  2613  048D  1303               	bcf	3,6	;RP1=0, select bank1
  2614  048E  00B8               	movwf	(sprintf@_val+3)^(0+128)
  2615  048F  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0490  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0491  0842               	movf	?___fttol+2,w
  2618  0492  1683               	bsf	3,5	;RP0=1, select bank1
  2619  0493  1303               	bcf	3,6	;RP1=0, select bank1
  2620  0494  00B7               	movwf	(sprintf@_val+2)^(0+128)
  2621  0495  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0496  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0497  0841               	movf	?___fttol+1,w
  2624  0498  1683               	bsf	3,5	;RP0=1, select bank1
  2625  0499  1303               	bcf	3,6	;RP1=0, select bank1
  2626  049A  00B6               	movwf	(sprintf@_val+1)^(0+128)
  2627  049B  1283               	bcf	3,5	;RP0=0, select bank0
  2628  049C  1303               	bcf	3,6	;RP1=0, select bank0
  2629  049D  0840               	movf	?___fttol,w
  2630  049E  1683               	bsf	3,5	;RP0=1, select bank1
  2631  049F  1303               	bcf	3,6	;RP1=0, select bank1
  2632  04A0  00B5               	movwf	sprintf@_val^(0+128)
  2633                           
  2634                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2635  04A1  0838               	movf	(sprintf@_val+3)^(0+128),w
  2636  04A2  00FB               	movwf	___lltoft@c+3
  2637  04A3  0837               	movf	(sprintf@_val+2)^(0+128),w
  2638  04A4  00FA               	movwf	___lltoft@c+2
  2639  04A5  0836               	movf	(sprintf@_val+1)^(0+128),w
  2640  04A6  00F9               	movwf	___lltoft@c+1
  2641  04A7  0835               	movf	sprintf@_val^(0+128),w
  2642  04A8  00F8               	movwf	___lltoft@c
  2643  04A9  160A  118A  238C  120A  118A  	fcall	___lltoft
  2644  04AE  0878               	movf	?___lltoft,w
  2645  04AF  1283               	bcf	3,5	;RP0=0, select bank0
  2646  04B0  1303               	bcf	3,6	;RP1=0, select bank0
  2647  04B1  00D4               	movwf	___ftsub@f2
  2648  04B2  0879               	movf	?___lltoft+1,w
  2649  04B3  00D5               	movwf	___ftsub@f2+1
  2650  04B4  087A               	movf	?___lltoft+2,w
  2651  04B5  00D6               	movwf	___ftsub@f2+2
  2652  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  2653  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  2654  04B8  083D               	movf	sprintf@fval^(0+128),w
  2655  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2656  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2657  04BB  00D7               	movwf	___ftsub@f1
  2658  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  2659  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  2660  04BE  083E               	movf	(sprintf@fval+1)^(0+128),w
  2661  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  2662  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  2663  04C1  00D8               	movwf	___ftsub@f1+1
  2664  04C2  1683               	bsf	3,5	;RP0=1, select bank1
  2665  04C3  1303               	bcf	3,6	;RP1=0, select bank1
  2666  04C4  083F               	movf	(sprintf@fval+2)^(0+128),w
  2667  04C5  1283               	bcf	3,5	;RP0=0, select bank0
  2668  04C6  1303               	bcf	3,6	;RP1=0, select bank0
  2669  04C7  00D9               	movwf	___ftsub@f1+2
  2670  04C8  160A  118A  22C2  120A  118A  	fcall	___ftsub
  2671  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  2672  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  2673  04CF  0854               	movf	?___ftsub,w
  2674  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  2675  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  2676  04D2  00BD               	movwf	sprintf@fval^(0+128)
  2677  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2678  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2679  04D5  0855               	movf	?___ftsub+1,w
  2680  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  2681  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  2682  04D8  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2683  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  2684  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  2685  04DB  0856               	movf	?___ftsub+2,w
  2686  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  2687  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  2688  04DE  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2689                           
  2690                           ;doprnt.c: 1142: exp = 0;
  2691  04DF  01B9               	clrf	sprintf@exp^(0+128)
  2692  04E0  01BA               	clrf	(sprintf@exp+1)^(0+128)
  2693  04E1                     l2562:	
  2694                           
  2695                           ;doprnt.c: 1143: }
  2696                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2697  04E1  01C0               	clrf	sprintf@c^(0+128)
  2698  04E2  0AC0               	incf	sprintf@c^(0+128),f
  2699  04E3  0840               	movf	sprintf@c^(0+128),w
  2700  04E4  3A0A               	xorlw	10
  2701  04E5  1903               	btfsc	3,2
  2702  04E6  2D37               	goto	l2576
  2703  04E7                     l2568:	
  2704                           
  2705                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2706  04E7  0840               	movf	sprintf@c^(0+128),w
  2707  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2708  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2709  04EA  00E0               	movwf	??_sprintf
  2710  04EB  3001               	movlw	1
  2711  04EC                     u3555:	
  2712  04EC  1003               	clrc
  2713  04ED  0DE0               	rlf	??_sprintf,f
  2714  04EE  3EFF               	addlw	-1
  2715  04EF  1D03               	skipz
  2716  04F0  2CEC               	goto	u3555
  2717  04F1  1003               	clrc
  2718  04F2  0D60               	rlf	??_sprintf,w
  2719  04F3  3E01               	addlw	low (_dpowers-__stringbase)
  2720  04F4  0084               	movwf	4
  2721  04F5  160A  118A  2000  120A  118A  	fcall	stringdir
  2722  04FA  00E1               	movwf	??_sprintf+1
  2723  04FB  160A  118A  2000  120A  118A  	fcall	stringdir
  2724  0500  00E2               	movwf	??_sprintf+2
  2725  0501  160A  118A  2000  120A  118A  	fcall	stringdir
  2726  0506  00E3               	movwf	??_sprintf+3
  2727  0507  160A  118A  2000  120A  118A  	fcall	stringdir
  2728  050C  00E4               	movwf	??_sprintf+4
  2729  050D  0864               	movf	??_sprintf+4,w
  2730  050E  1683               	bsf	3,5	;RP0=1, select bank1
  2731  050F  1303               	bcf	3,6	;RP1=0, select bank1
  2732  0510  0238               	subwf	(sprintf@_val+3)^(0+128),w
  2733  0511  1D03               	skipz
  2734  0512  2D29               	goto	u3565
  2735  0513  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0514  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0515  0863               	movf	??_sprintf+3,w
  2738  0516  1683               	bsf	3,5	;RP0=1, select bank1
  2739  0517  1303               	bcf	3,6	;RP1=0, select bank1
  2740  0518  0237               	subwf	(sprintf@_val+2)^(0+128),w
  2741  0519  1D03               	skipz
  2742  051A  2D29               	goto	u3565
  2743  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2744  051C  1303               	bcf	3,6	;RP1=0, select bank0
  2745  051D  0862               	movf	??_sprintf+2,w
  2746  051E  1683               	bsf	3,5	;RP0=1, select bank1
  2747  051F  1303               	bcf	3,6	;RP1=0, select bank1
  2748  0520  0236               	subwf	(sprintf@_val+1)^(0+128),w
  2749  0521  1D03               	skipz
  2750  0522  2D29               	goto	u3565
  2751  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2753  0525  0861               	movf	??_sprintf+1,w
  2754  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2755  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2756  0528  0235               	subwf	sprintf@_val^(0+128),w
  2757  0529                     u3565:	
  2758  0529  1C03               	btfss	3,0
  2759  052A  2D37               	goto	l2576
  2760                           
  2761                           ;doprnt.c: 1147: break;
  2762  052B  3001               	movlw	1
  2763  052C  1283               	bcf	3,5	;RP0=0, select bank0
  2764  052D  1303               	bcf	3,6	;RP1=0, select bank0
  2765  052E  00E0               	movwf	??_sprintf
  2766  052F  0860               	movf	??_sprintf,w
  2767  0530  1683               	bsf	3,5	;RP0=1, select bank1
  2768  0531  1303               	bcf	3,6	;RP1=0, select bank1
  2769  0532  07C0               	addwf	sprintf@c^(0+128),f
  2770  0533  0840               	movf	sprintf@c^(0+128),w
  2771  0534  3A0A               	xorlw	10
  2772  0535  1D03               	skipz
  2773  0536  2CE7               	goto	l2568
  2774  0537                     l2576:	
  2775                           
  2776                           ;doprnt.c: 1184: {
  2777                           ;doprnt.c: 1197: if(flag & 0x03)
  2778  0537  3003               	movlw	3
  2779  0538  0530               	andwf	sprintf@flag^(0+128),w
  2780  0539  1283               	bcf	3,5	;RP0=0, select bank0
  2781  053A  1303               	bcf	3,6	;RP1=0, select bank0
  2782  053B  00E0               	movwf	??_sprintf
  2783  053C  3000               	movlw	0
  2784  053D  1683               	bsf	3,5	;RP0=1, select bank1
  2785  053E  1303               	bcf	3,6	;RP1=0, select bank1
  2786  053F  0531               	andwf	(sprintf@flag+1)^(0+128),w
  2787  0540  1283               	bcf	3,5	;RP0=0, select bank0
  2788  0541  1303               	bcf	3,6	;RP1=0, select bank0
  2789  0542  00E1               	movwf	??_sprintf+1
  2790  0543  0861               	movf	??_sprintf+1,w
  2791  0544  0460               	iorwf	??_sprintf,w
  2792  0545  1903               	skipnz
  2793  0546  2D54               	goto	l2590
  2794                           
  2795                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  2796  0547  085A               	movf	sprintf@sp,w
  2797  0548  0084               	movwf	4
  2798  0549  1383               	bcf	3,7
  2799  054A  185B               	btfsc	sprintf@sp+1,0
  2800  054B  1783               	bsf	3,7
  2801  054C  302D               	movlw	45
  2802  054D                     L6:	
  2803  054D  0080               	movwf	0
  2804  054E  3001               	movlw	1
  2805  054F  07DA               	addwf	sprintf@sp,f
  2806  0550  1803               	skipnc
  2807  0551  0ADB               	incf	sprintf@sp+1,f
  2808  0552  3000               	movlw	0
  2809  0553  07DB               	addwf	sprintf@sp+1,f
  2810  0554                     l2590:	
  2811  0554  30FF               	movlw	-1
  2812  0555  00E0               	movwf	??_sprintf
  2813  0556  0860               	movf	??_sprintf,w
  2814  0557  1683               	bsf	3,5	;RP0=1, select bank1
  2815  0558  1303               	bcf	3,6	;RP1=0, select bank1
  2816  0559  07C0               	addwf	sprintf@c^(0+128),f
  2817  055A  0840               	movf	sprintf@c^(0+128),w
  2818  055B  3AFF               	xorlw	-1
  2819  055C  1903               	btfsc	3,2
  2820  055D  2DE1               	goto	l2598
  2821                           
  2822                           ;doprnt.c: 1209: {
  2823                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  2824                           
  2825                           ;doprnt.c: 1204: }
  2826                           ;doprnt.c: 1205: while(c--) {
  2827  055E  1683               	bsf	3,5	;RP0=1, select bank1
  2828  055F  1303               	bcf	3,6	;RP1=0, select bank1
  2829  0560  0840               	movf	sprintf@c^(0+128),w
  2830  0561  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0562  1303               	bcf	3,6	;RP1=0, select bank0
  2832  0563  00E0               	movwf	??_sprintf
  2833  0564  3001               	movlw	1
  2834  0565                     u3595:	
  2835  0565  1003               	clrc
  2836  0566  0DE0               	rlf	??_sprintf,f
  2837  0567  3EFF               	addlw	-1
  2838  0568  1D03               	skipz
  2839  0569  2D65               	goto	u3595
  2840  056A  1003               	clrc
  2841  056B  0D60               	rlf	??_sprintf,w
  2842  056C  3E01               	addlw	low (_dpowers-__stringbase)
  2843  056D  0084               	movwf	4
  2844  056E  160A  118A  2000  120A  118A  	fcall	stringdir
  2845  0573  00F0               	movwf	___lldiv@divisor
  2846  0574  160A  118A  2000  120A  118A  	fcall	stringdir
  2847  0579  00F1               	movwf	___lldiv@divisor+1
  2848  057A  160A  118A  2000  120A  118A  	fcall	stringdir
  2849  057F  00F2               	movwf	___lldiv@divisor+2
  2850  0580  160A  118A  2000  120A  118A  	fcall	stringdir
  2851  0585  00F3               	movwf	___lldiv@divisor+3
  2852  0586  1683               	bsf	3,5	;RP0=1, select bank1
  2853  0587  1303               	bcf	3,6	;RP1=0, select bank1
  2854  0588  0838               	movf	(sprintf@_val+3)^(0+128),w
  2855  0589  00F7               	movwf	___lldiv@dividend+3
  2856  058A  0837               	movf	(sprintf@_val+2)^(0+128),w
  2857  058B  00F6               	movwf	___lldiv@dividend+2
  2858  058C  0836               	movf	(sprintf@_val+1)^(0+128),w
  2859  058D  00F5               	movwf	___lldiv@dividend+1
  2860  058E  0835               	movf	sprintf@_val^(0+128),w
  2861  058F  00F4               	movwf	___lldiv@dividend
  2862  0590  160A  118A  2545  120A  118A  	fcall	___lldiv
  2863  0595  0873               	movf	?___lldiv+3,w
  2864  0596  1683               	bsf	3,5	;RP0=1, select bank1
  2865  0597  1303               	bcf	3,6	;RP1=0, select bank1
  2866  0598  00AB               	movwf	(sprintf@vd+3)^(0+128)
  2867  0599  0872               	movf	?___lldiv+2,w
  2868  059A  00AA               	movwf	(sprintf@vd+2)^(0+128)
  2869  059B  0871               	movf	?___lldiv+1,w
  2870  059C  00A9               	movwf	(sprintf@vd+1)^(0+128)
  2871  059D  0870               	movf	?___lldiv,w
  2872  059E  00A8               	movwf	sprintf@vd^(0+128)
  2873                           
  2874                           ;doprnt.c: 1211: vd %= 10;
  2875  059F  3000               	movlw	0
  2876  05A0  00F3               	movwf	___llmod@divisor+3
  2877  05A1  3000               	movlw	0
  2878  05A2  00F2               	movwf	___llmod@divisor+2
  2879  05A3  3000               	movlw	0
  2880  05A4  00F1               	movwf	___llmod@divisor+1
  2881  05A5  300A               	movlw	10
  2882  05A6  00F0               	movwf	___llmod@divisor
  2883  05A7  082B               	movf	(sprintf@vd+3)^(0+128),w
  2884  05A8  00F7               	movwf	___llmod@dividend+3
  2885  05A9  082A               	movf	(sprintf@vd+2)^(0+128),w
  2886  05AA  00F6               	movwf	___llmod@dividend+2
  2887  05AB  0829               	movf	(sprintf@vd+1)^(0+128),w
  2888  05AC  00F5               	movwf	___llmod@dividend+1
  2889  05AD  0828               	movf	sprintf@vd^(0+128),w
  2890  05AE  00F4               	movwf	___llmod@dividend
  2891  05AF  160A  118A  243F  120A  118A  	fcall	___llmod
  2892  05B4  0873               	movf	?___llmod+3,w
  2893  05B5  1683               	bsf	3,5	;RP0=1, select bank1
  2894  05B6  1303               	bcf	3,6	;RP1=0, select bank1
  2895  05B7  00AB               	movwf	(sprintf@vd+3)^(0+128)
  2896  05B8  0872               	movf	?___llmod+2,w
  2897  05B9  00AA               	movwf	(sprintf@vd+2)^(0+128)
  2898  05BA  0871               	movf	?___llmod+1,w
  2899  05BB  00A9               	movwf	(sprintf@vd+1)^(0+128)
  2900  05BC  0870               	movf	?___llmod,w
  2901  05BD  00A8               	movwf	sprintf@vd^(0+128)
  2902                           
  2903                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  2904  05BE  0828               	movf	sprintf@vd^(0+128),w
  2905  05BF  3E30               	addlw	48
  2906  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2907  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2908  05C2  00E0               	movwf	??_sprintf
  2909  05C3  085A               	movf	sprintf@sp,w
  2910  05C4  0084               	movwf	4
  2911  05C5  1383               	bcf	3,7
  2912  05C6  185B               	btfsc	sprintf@sp+1,0
  2913  05C7  1783               	bsf	3,7
  2914  05C8  0860               	movf	??_sprintf,w
  2915  05C9  2D4D               	goto	L6
  2916  05CA                     l2592:	
  2917                           ;doprnt.c: 1213: }
  2918                           ;doprnt.c: 1215: }
  2919                           ;doprnt.c: 1216: while(exp > 0) {
  2920                           
  2921                           
  2922                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  2923  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  2924  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  2925  05CC  085A               	movf	sprintf@sp,w
  2926  05CD  0084               	movwf	4
  2927  05CE  1383               	bcf	3,7
  2928  05CF  185B               	btfsc	sprintf@sp+1,0
  2929  05D0  1783               	bsf	3,7
  2930  05D1  3030               	movlw	48
  2931  05D2  0080               	movwf	0
  2932  05D3  3001               	movlw	1
  2933  05D4  07DA               	addwf	sprintf@sp,f
  2934  05D5  1803               	skipnc
  2935  05D6  0ADB               	incf	sprintf@sp+1,f
  2936  05D7  3000               	movlw	0
  2937  05D8  07DB               	addwf	sprintf@sp+1,f
  2938                           
  2939                           ;doprnt.c: 1218: exp--;
  2940  05D9  30FF               	movlw	255
  2941  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  2942  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  2943  05DC  07B9               	addwf	sprintf@exp^(0+128),f
  2944  05DD  1803               	skipnc
  2945  05DE  0ABA               	incf	(sprintf@exp+1)^(0+128),f
  2946  05DF  30FF               	movlw	255
  2947  05E0  07BA               	addwf	(sprintf@exp+1)^(0+128),f
  2948  05E1                     l2598:	
  2949  05E1  083A               	movf	(sprintf@exp+1)^(0+128),w
  2950  05E2  3A80               	xorlw	128
  2951  05E3  00FF               	movwf	127
  2952  05E4  3080               	movlw	128
  2953  05E5  027F               	subwf	127,w
  2954  05E6  1D03               	skipz
  2955  05E7  2DEA               	goto	u3615
  2956  05E8  3001               	movlw	1
  2957  05E9  0239               	subwf	sprintf@exp^(0+128),w
  2958  05EA                     u3615:	
  2959  05EA  1803               	skipnc
  2960  05EB  2DCA               	goto	l2592
  2961                           
  2962                           ;doprnt.c: 1219: }
  2963                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2964  05EC  1683               	bsf	3,5	;RP0=1, select bank1
  2965  05ED  1303               	bcf	3,6	;RP1=0, select bank1
  2966  05EE  083C               	movf	(sprintf@prec+1)^(0+128),w
  2967  05EF  3A80               	xorlw	128
  2968  05F0  00FF               	movwf	127
  2969  05F1  3080               	movlw	128
  2970  05F2  027F               	subwf	127,w
  2971  05F3  1D03               	skipz
  2972  05F4  2DF7               	goto	u3625
  2973  05F5  3009               	movlw	9
  2974  05F6  023B               	subwf	sprintf@prec^(0+128),w
  2975  05F7                     u3625:	
  2976  05F7  1C03               	skipc
  2977  05F8  2DFB               	goto	l2604
  2978                           
  2979                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2980  05F9  3008               	movlw	8
  2981  05FA  2DFE               	goto	L4
  2982  05FB                     l2604:	
  2983                           
  2984                           ;doprnt.c: 1222: else
  2985                           ;doprnt.c: 1223: c = prec;
  2986  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  2987  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  2988  05FD  083B               	movf	sprintf@prec^(0+128),w
  2989  05FE                     L4:	
  2990  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  2991  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0600  00E0               	movwf	??_sprintf
  2993  0601  0860               	movf	??_sprintf,w
  2994  0602  1683               	bsf	3,5	;RP0=1, select bank1
  2995  0603  1303               	bcf	3,6	;RP1=0, select bank1
  2996  0604  00C0               	movwf	sprintf@c^(0+128)
  2997                           
  2998                           ;doprnt.c: 1224: prec -= c;
  2999  0605  0840               	movf	sprintf@c^(0+128),w
  3000  0606  1283               	bcf	3,5	;RP0=0, select bank0
  3001  0607  1303               	bcf	3,6	;RP1=0, select bank0
  3002  0608  00E0               	movwf	??_sprintf
  3003  0609  01E1               	clrf	??_sprintf+1
  3004  060A  1BE0               	btfsc	??_sprintf,7
  3005  060B  03E1               	decf	??_sprintf+1,f
  3006  060C  0860               	movf	??_sprintf,w
  3007  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3008  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3009  060F  02BB               	subwf	sprintf@prec^(0+128),f
  3010  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3011  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3012  0612  0861               	movf	??_sprintf+1,w
  3013  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3014  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3015  0615  1C03               	skipc
  3016  0616  03BC               	decf	(sprintf@prec+1)^(0+128),f
  3017  0617  02BC               	subwf	(sprintf@prec+1)^(0+128),f
  3018                           
  3019                           ;doprnt.c: 1228: if(c)
  3020  0618  0840               	movf	sprintf@c^(0+128),w
  3021  0619  1903               	btfsc	3,2
  3022  061A  2E2C               	goto	l2610
  3023                           
  3024                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  3025  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3026  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3027  061D  085A               	movf	sprintf@sp,w
  3028  061E  0084               	movwf	4
  3029  061F  1383               	bcf	3,7
  3030  0620  185B               	btfsc	sprintf@sp+1,0
  3031  0621  1783               	bsf	3,7
  3032  0622  302E               	movlw	46
  3033  0623  0080               	movwf	0
  3034  0624  3001               	movlw	1
  3035  0625  07DA               	addwf	sprintf@sp,f
  3036  0626  1803               	skipnc
  3037  0627  0ADB               	incf	sprintf@sp+1,f
  3038  0628  3000               	movlw	0
  3039  0629  07DB               	addwf	sprintf@sp+1,f
  3040  062A  1683               	bsf	3,5	;RP0=1, select bank1
  3041  062B  1303               	bcf	3,6	;RP1=0, select bank1
  3042  062C                     l2610:	
  3043                           
  3044                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3045  062C  1683               	bsf	3,5	;RP0=1, select bank1
  3046  062D  1303               	bcf	3,6	;RP1=0, select bank1
  3047  062E  0840               	movf	sprintf@c^(0+128),w
  3048  062F  120A  158A  2561  120A  118A  	fcall	_scale
  3049  0634  1283               	bcf	3,5	;RP0=0, select bank0
  3050  0635  1303               	bcf	3,6	;RP1=0, select bank0
  3051  0636  0837               	movf	?_scale,w
  3052  0637  1683               	bsf	3,5	;RP0=1, select bank1
  3053  0638  1303               	bcf	3,6	;RP1=0, select bank1
  3054  0639  00A0               	movwf	_sprintf$671^(0+128)
  3055  063A  1283               	bcf	3,5	;RP0=0, select bank0
  3056  063B  1303               	bcf	3,6	;RP1=0, select bank0
  3057  063C  0838               	movf	?_scale+1,w
  3058  063D  1683               	bsf	3,5	;RP0=1, select bank1
  3059  063E  1303               	bcf	3,6	;RP1=0, select bank1
  3060  063F  00A1               	movwf	(_sprintf$671+1)^(0+128)
  3061  0640  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0641  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0642  0839               	movf	?_scale+2,w
  3064  0643  1683               	bsf	3,5	;RP0=1, select bank1
  3065  0644  1303               	bcf	3,6	;RP1=0, select bank1
  3066  0645  00A2               	movwf	(_sprintf$671+2)^(0+128)
  3067                           
  3068                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3069  0646  0820               	movf	_sprintf$671^(0+128),w
  3070  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3071  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3072  0649  00AA               	movwf	___ftmul@f2
  3073  064A  1683               	bsf	3,5	;RP0=1, select bank1
  3074  064B  1303               	bcf	3,6	;RP1=0, select bank1
  3075  064C  0821               	movf	(_sprintf$671+1)^(0+128),w
  3076  064D  1283               	bcf	3,5	;RP0=0, select bank0
  3077  064E  1303               	bcf	3,6	;RP1=0, select bank0
  3078  064F  00AB               	movwf	___ftmul@f2+1
  3079  0650  1683               	bsf	3,5	;RP0=1, select bank1
  3080  0651  1303               	bcf	3,6	;RP1=0, select bank1
  3081  0652  0822               	movf	(_sprintf$671+2)^(0+128),w
  3082  0653  1283               	bcf	3,5	;RP0=0, select bank0
  3083  0654  1303               	bcf	3,6	;RP1=0, select bank0
  3084  0655  00AC               	movwf	___ftmul@f2+2
  3085  0656  1683               	bsf	3,5	;RP0=1, select bank1
  3086  0657  1303               	bcf	3,6	;RP1=0, select bank1
  3087  0658  083D               	movf	sprintf@fval^(0+128),w
  3088  0659  1283               	bcf	3,5	;RP0=0, select bank0
  3089  065A  1303               	bcf	3,6	;RP1=0, select bank0
  3090  065B  00A7               	movwf	___ftmul@f1
  3091  065C  1683               	bsf	3,5	;RP0=1, select bank1
  3092  065D  1303               	bcf	3,6	;RP1=0, select bank1
  3093  065E  083E               	movf	(sprintf@fval+1)^(0+128),w
  3094  065F  1283               	bcf	3,5	;RP0=0, select bank0
  3095  0660  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0661  00A8               	movwf	___ftmul@f1+1
  3097  0662  1683               	bsf	3,5	;RP0=1, select bank1
  3098  0663  1303               	bcf	3,6	;RP1=0, select bank1
  3099  0664  083F               	movf	(sprintf@fval+2)^(0+128),w
  3100  0665  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0666  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0667  00A9               	movwf	___ftmul@f1+2
  3103  0668  160A  118A  272D  120A  118A  	fcall	___ftmul
  3104  066D  1283               	bcf	3,5	;RP0=0, select bank0
  3105  066E  1303               	bcf	3,6	;RP1=0, select bank0
  3106  066F  0827               	movf	?___ftmul,w
  3107  0670  00C0               	movwf	___fttol@f1
  3108  0671  0828               	movf	?___ftmul+1,w
  3109  0672  00C1               	movwf	___fttol@f1+1
  3110  0673  0829               	movf	?___ftmul+2,w
  3111  0674  00C2               	movwf	___fttol@f1+2
  3112  0675  120A  158A  2001  120A  118A  	fcall	___fttol
  3113  067A  1283               	bcf	3,5	;RP0=0, select bank0
  3114  067B  1303               	bcf	3,6	;RP1=0, select bank0
  3115  067C  0843               	movf	?___fttol+3,w
  3116  067D  1683               	bsf	3,5	;RP0=1, select bank1
  3117  067E  1303               	bcf	3,6	;RP1=0, select bank1
  3118  067F  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3119  0680  1283               	bcf	3,5	;RP0=0, select bank0
  3120  0681  1303               	bcf	3,6	;RP1=0, select bank0
  3121  0682  0842               	movf	?___fttol+2,w
  3122  0683  1683               	bsf	3,5	;RP0=1, select bank1
  3123  0684  1303               	bcf	3,6	;RP1=0, select bank1
  3124  0685  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3125  0686  1283               	bcf	3,5	;RP0=0, select bank0
  3126  0687  1303               	bcf	3,6	;RP1=0, select bank0
  3127  0688  0841               	movf	?___fttol+1,w
  3128  0689  1683               	bsf	3,5	;RP0=1, select bank1
  3129  068A  1303               	bcf	3,6	;RP1=0, select bank1
  3130  068B  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3131  068C  1283               	bcf	3,5	;RP0=0, select bank0
  3132  068D  1303               	bcf	3,6	;RP1=0, select bank0
  3133  068E  0840               	movf	?___fttol,w
  3134  068F  1683               	bsf	3,5	;RP0=1, select bank1
  3135  0690  1303               	bcf	3,6	;RP1=0, select bank1
  3136  0691                     L5:	
  3137  0691  00B5               	movwf	sprintf@_val^(0+128)
  3138  0692  30FF               	movlw	-1
  3139  0693  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0694  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0695  00E0               	movwf	??_sprintf
  3142  0696  0860               	movf	??_sprintf,w
  3143  0697  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0698  1303               	bcf	3,6	;RP1=0, select bank1
  3145  0699  07C0               	addwf	sprintf@c^(0+128),f
  3146  069A  0840               	movf	sprintf@c^(0+128),w
  3147  069B  3AFF               	xorlw	-1
  3148  069C  1903               	btfsc	3,2
  3149  069D  2F66               	goto	l2630
  3150                           
  3151                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  3152                           
  3153                           ;doprnt.c: 1237: while(c--) {
  3154  069E  0840               	movf	sprintf@c^(0+128),w
  3155  069F  1283               	bcf	3,5	;RP0=0, select bank0
  3156  06A0  1303               	bcf	3,6	;RP1=0, select bank0
  3157  06A1  00E0               	movwf	??_sprintf
  3158  06A2  3001               	movlw	1
  3159  06A3                     u3645:	
  3160  06A3  1003               	clrc
  3161  06A4  0DE0               	rlf	??_sprintf,f
  3162  06A5  3EFF               	addlw	-1
  3163  06A6  1D03               	skipz
  3164  06A7  2EA3               	goto	u3645
  3165  06A8  1003               	clrc
  3166  06A9  0D60               	rlf	??_sprintf,w
  3167  06AA  3E01               	addlw	low (_dpowers-__stringbase)
  3168  06AB  0084               	movwf	4
  3169  06AC  160A  118A  2000  120A  118A  	fcall	stringdir
  3170  06B1  00F0               	movwf	___lldiv@divisor
  3171  06B2  160A  118A  2000  120A  118A  	fcall	stringdir
  3172  06B7  00F1               	movwf	___lldiv@divisor+1
  3173  06B8  160A  118A  2000  120A  118A  	fcall	stringdir
  3174  06BD  00F2               	movwf	___lldiv@divisor+2
  3175  06BE  160A  118A  2000  120A  118A  	fcall	stringdir
  3176  06C3  00F3               	movwf	___lldiv@divisor+3
  3177  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  3178  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  3179  06C6  0838               	movf	(sprintf@_val+3)^(0+128),w
  3180  06C7  00F7               	movwf	___lldiv@dividend+3
  3181  06C8  0837               	movf	(sprintf@_val+2)^(0+128),w
  3182  06C9  00F6               	movwf	___lldiv@dividend+2
  3183  06CA  0836               	movf	(sprintf@_val+1)^(0+128),w
  3184  06CB  00F5               	movwf	___lldiv@dividend+1
  3185  06CC  0835               	movf	sprintf@_val^(0+128),w
  3186  06CD  00F4               	movwf	___lldiv@dividend
  3187  06CE  160A  118A  2545  120A  118A  	fcall	___lldiv
  3188  06D3  0873               	movf	?___lldiv+3,w
  3189  06D4  1683               	bsf	3,5	;RP0=1, select bank1
  3190  06D5  1303               	bcf	3,6	;RP1=0, select bank1
  3191  06D6  00AF               	movwf	(sprintf@vd_254+3)^(0+128)
  3192  06D7  0872               	movf	?___lldiv+2,w
  3193  06D8  00AE               	movwf	(sprintf@vd_254+2)^(0+128)
  3194  06D9  0871               	movf	?___lldiv+1,w
  3195  06DA  00AD               	movwf	(sprintf@vd_254+1)^(0+128)
  3196  06DB  0870               	movf	?___lldiv,w
  3197  06DC  00AC               	movwf	sprintf@vd_254^(0+128)
  3198                           
  3199                           ;doprnt.c: 1239: vd %= 10;
  3200  06DD  3000               	movlw	0
  3201  06DE  00F3               	movwf	___llmod@divisor+3
  3202  06DF  3000               	movlw	0
  3203  06E0  00F2               	movwf	___llmod@divisor+2
  3204  06E1  3000               	movlw	0
  3205  06E2  00F1               	movwf	___llmod@divisor+1
  3206  06E3  300A               	movlw	10
  3207  06E4  00F0               	movwf	___llmod@divisor
  3208  06E5  082F               	movf	(sprintf@vd_254+3)^(0+128),w
  3209  06E6  00F7               	movwf	___llmod@dividend+3
  3210  06E7  082E               	movf	(sprintf@vd_254+2)^(0+128),w
  3211  06E8  00F6               	movwf	___llmod@dividend+2
  3212  06E9  082D               	movf	(sprintf@vd_254+1)^(0+128),w
  3213  06EA  00F5               	movwf	___llmod@dividend+1
  3214  06EB  082C               	movf	sprintf@vd_254^(0+128),w
  3215  06EC  00F4               	movwf	___llmod@dividend
  3216  06ED  160A  118A  243F  120A  118A  	fcall	___llmod
  3217  06F2  0873               	movf	?___llmod+3,w
  3218  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  3219  06F4  1303               	bcf	3,6	;RP1=0, select bank1
  3220  06F5  00AF               	movwf	(sprintf@vd_254+3)^(0+128)
  3221  06F6  0872               	movf	?___llmod+2,w
  3222  06F7  00AE               	movwf	(sprintf@vd_254+2)^(0+128)
  3223  06F8  0871               	movf	?___llmod+1,w
  3224  06F9  00AD               	movwf	(sprintf@vd_254+1)^(0+128)
  3225  06FA  0870               	movf	?___llmod,w
  3226  06FB  00AC               	movwf	sprintf@vd_254^(0+128)
  3227                           
  3228                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  3229  06FC  082C               	movf	sprintf@vd_254^(0+128),w
  3230  06FD  3E30               	addlw	48
  3231  06FE  1283               	bcf	3,5	;RP0=0, select bank0
  3232  06FF  1303               	bcf	3,6	;RP1=0, select bank0
  3233  0700  00E0               	movwf	??_sprintf
  3234  0701  085A               	movf	sprintf@sp,w
  3235  0702  0084               	movwf	4
  3236  0703  1383               	bcf	3,7
  3237  0704  185B               	btfsc	sprintf@sp+1,0
  3238  0705  1783               	bsf	3,7
  3239  0706  0860               	movf	??_sprintf,w
  3240  0707  0080               	movwf	0
  3241  0708  3001               	movlw	1
  3242  0709  07DA               	addwf	sprintf@sp,f
  3243  070A  1803               	skipnc
  3244  070B  0ADB               	incf	sprintf@sp+1,f
  3245  070C  3000               	movlw	0
  3246  070D  07DB               	addwf	sprintf@sp+1,f
  3247                           
  3248                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  3249  070E  1683               	bsf	3,5	;RP0=1, select bank1
  3250  070F  1303               	bcf	3,6	;RP1=0, select bank1
  3251  0710  0840               	movf	sprintf@c^(0+128),w
  3252  0711  1283               	bcf	3,5	;RP0=0, select bank0
  3253  0712  1303               	bcf	3,6	;RP1=0, select bank0
  3254  0713  00E0               	movwf	??_sprintf
  3255  0714  3001               	movlw	1
  3256  0715                     u3655:	
  3257  0715  1003               	clrc
  3258  0716  0DE0               	rlf	??_sprintf,f
  3259  0717  3EFF               	addlw	-1
  3260  0718  1D03               	skipz
  3261  0719  2F15               	goto	u3655
  3262  071A  1003               	clrc
  3263  071B  0D60               	rlf	??_sprintf,w
  3264  071C  3E01               	addlw	low (_dpowers-__stringbase)
  3265  071D  0084               	movwf	4
  3266  071E  160A  118A  2000  120A  118A  	fcall	stringdir
  3267  0723  00F0               	movwf	___llmod@divisor
  3268  0724  160A  118A  2000  120A  118A  	fcall	stringdir
  3269  0729  00F1               	movwf	___llmod@divisor+1
  3270  072A  160A  118A  2000  120A  118A  	fcall	stringdir
  3271  072F  00F2               	movwf	___llmod@divisor+2
  3272  0730  160A  118A  2000  120A  118A  	fcall	stringdir
  3273  0735  00F3               	movwf	___llmod@divisor+3
  3274  0736  1683               	bsf	3,5	;RP0=1, select bank1
  3275  0737  1303               	bcf	3,6	;RP1=0, select bank1
  3276  0738  0838               	movf	(sprintf@_val+3)^(0+128),w
  3277  0739  00F7               	movwf	___llmod@dividend+3
  3278  073A  0837               	movf	(sprintf@_val+2)^(0+128),w
  3279  073B  00F6               	movwf	___llmod@dividend+2
  3280  073C  0836               	movf	(sprintf@_val+1)^(0+128),w
  3281  073D  00F5               	movwf	___llmod@dividend+1
  3282  073E  0835               	movf	sprintf@_val^(0+128),w
  3283  073F  00F4               	movwf	___llmod@dividend
  3284  0740  160A  118A  243F  120A  118A  	fcall	___llmod
  3285  0745  0873               	movf	?___llmod+3,w
  3286  0746  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0747  1303               	bcf	3,6	;RP1=0, select bank1
  3288  0748  00B8               	movwf	(sprintf@_val+3)^(0+128)
  3289  0749  0872               	movf	?___llmod+2,w
  3290  074A  00B7               	movwf	(sprintf@_val+2)^(0+128)
  3291  074B  0871               	movf	?___llmod+1,w
  3292  074C  00B6               	movwf	(sprintf@_val+1)^(0+128)
  3293  074D  0870               	movf	?___llmod,w
  3294  074E  2E91               	goto	L5
  3295  074F                     l2624:	
  3296                           ;doprnt.c: 1242: }
  3297                           ;doprnt.c: 1244: while(prec) {
  3298                           
  3299                           
  3300                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  3301  074F  1283               	bcf	3,5	;RP0=0, select bank0
  3302  0750  1303               	bcf	3,6	;RP1=0, select bank0
  3303  0751  085A               	movf	sprintf@sp,w
  3304  0752  0084               	movwf	4
  3305  0753  1383               	bcf	3,7
  3306  0754  185B               	btfsc	sprintf@sp+1,0
  3307  0755  1783               	bsf	3,7
  3308  0756  3030               	movlw	48
  3309  0757  0080               	movwf	0
  3310  0758  3001               	movlw	1
  3311  0759  07DA               	addwf	sprintf@sp,f
  3312  075A  1803               	skipnc
  3313  075B  0ADB               	incf	sprintf@sp+1,f
  3314  075C  3000               	movlw	0
  3315  075D  07DB               	addwf	sprintf@sp+1,f
  3316                           
  3317                           ;doprnt.c: 1246: prec--;
  3318  075E  30FF               	movlw	255
  3319  075F  1683               	bsf	3,5	;RP0=1, select bank1
  3320  0760  1303               	bcf	3,6	;RP1=0, select bank1
  3321  0761  07BB               	addwf	sprintf@prec^(0+128),f
  3322  0762  1803               	skipnc
  3323  0763  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  3324  0764  30FF               	movlw	255
  3325  0765  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  3326  0766                     l2630:	
  3327  0766  083C               	movf	(sprintf@prec+1)^(0+128),w
  3328  0767  043B               	iorwf	sprintf@prec^(0+128),w
  3329  0768  1903               	btfsc	3,2
  3330  0769  2994               	goto	l2650
  3331  076A  2F4F               	goto	l2624
  3332  076B                     l2632:	
  3333                           ;doprnt.c: 1247: }
  3334                           ;doprnt.c: 1254: continue;
  3335                           
  3336                           
  3337                           ;doprnt.c: 1255: }
  3338                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  3339  076B  1683               	bsf	3,5	;RP0=1, select bank1
  3340  076C  1303               	bcf	3,6	;RP1=0, select bank1
  3341  076D  083C               	movf	(sprintf@prec+1)^(0+128),w
  3342  076E  043B               	iorwf	sprintf@prec^(0+128),w
  3343  076F  1D03               	skipz
  3344  0770  2F7D               	goto	l244
  3345  0771  0838               	movf	(sprintf@_val+3)^(0+128),w
  3346  0772  0437               	iorwf	(sprintf@_val+2)^(0+128),w
  3347  0773  0436               	iorwf	(sprintf@_val+1)^(0+128),w
  3348  0774  0435               	iorwf	sprintf@_val^(0+128),w
  3349  0775  1D03               	skipz
  3350  0776  2F7D               	goto	l244
  3351                           
  3352                           ;doprnt.c: 1300: prec++;
  3353  0777  3001               	movlw	1
  3354  0778  07BB               	addwf	sprintf@prec^(0+128),f
  3355  0779  1803               	skipnc
  3356  077A  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  3357  077B  3000               	movlw	0
  3358  077C  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  3359  077D                     l244:	
  3360                           
  3361                           ;doprnt.c: 1348: if(c < prec)
  3362  077D  0840               	movf	sprintf@c^(0+128),w
  3363  077E  1283               	bcf	3,5	;RP0=0, select bank0
  3364  077F  1303               	bcf	3,6	;RP1=0, select bank0
  3365  0780  00E0               	movwf	??_sprintf
  3366  0781  01E1               	clrf	??_sprintf+1
  3367  0782  1BE0               	btfsc	??_sprintf,7
  3368  0783  03E1               	decf	??_sprintf+1,f
  3369  0784  0861               	movf	??_sprintf+1,w
  3370  0785  3A80               	xorlw	128
  3371  0786  00E2               	movwf	??_sprintf+2
  3372  0787  1683               	bsf	3,5	;RP0=1, select bank1
  3373  0788  1303               	bcf	3,6	;RP1=0, select bank1
  3374  0789  083C               	movf	(sprintf@prec+1)^(0+128),w
  3375  078A  3A80               	xorlw	128
  3376  078B  1283               	bcf	3,5	;RP0=0, select bank0
  3377  078C  1303               	bcf	3,6	;RP1=0, select bank0
  3378  078D  0262               	subwf	??_sprintf+2,w
  3379  078E  1D03               	skipz
  3380  078F  2F96               	goto	u3705
  3381  0790  1683               	bsf	3,5	;RP0=1, select bank1
  3382  0791  1303               	bcf	3,6	;RP1=0, select bank1
  3383  0792  083B               	movf	sprintf@prec^(0+128),w
  3384  0793  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0794  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0795  0260               	subwf	??_sprintf,w
  3387  0796                     u3705:	
  3388  0796  1803               	skipnc
  3389  0797  2FA3               	goto	l2640
  3390                           
  3391                           ;doprnt.c: 1349: c = prec;
  3392  0798  1683               	bsf	3,5	;RP0=1, select bank1
  3393  0799  1303               	bcf	3,6	;RP1=0, select bank1
  3394  079A  083B               	movf	sprintf@prec^(0+128),w
  3395  079B  1283               	bcf	3,5	;RP0=0, select bank0
  3396  079C  1303               	bcf	3,6	;RP1=0, select bank0
  3397  079D  00E0               	movwf	??_sprintf
  3398  079E  0860               	movf	??_sprintf,w
  3399  079F  1683               	bsf	3,5	;RP0=1, select bank1
  3400  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  3401  07A1  00C0               	movwf	sprintf@c^(0+128)
  3402  07A2  2FC5               	goto	l2644
  3403  07A3                     l2640:	
  3404                           
  3405                           ;doprnt.c: 1350: else if(prec < c)
  3406  07A3  1683               	bsf	3,5	;RP0=1, select bank1
  3407  07A4  1303               	bcf	3,6	;RP1=0, select bank1
  3408  07A5  0840               	movf	sprintf@c^(0+128),w
  3409  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  3410  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  3411  07A8  00E0               	movwf	??_sprintf
  3412  07A9  01E1               	clrf	??_sprintf+1
  3413  07AA  1BE0               	btfsc	??_sprintf,7
  3414  07AB  03E1               	decf	??_sprintf+1,f
  3415  07AC  1683               	bsf	3,5	;RP0=1, select bank1
  3416  07AD  1303               	bcf	3,6	;RP1=0, select bank1
  3417  07AE  083C               	movf	(sprintf@prec+1)^(0+128),w
  3418  07AF  3A80               	xorlw	128
  3419  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  3420  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  3421  07B2  00E2               	movwf	??_sprintf+2
  3422  07B3  0861               	movf	??_sprintf+1,w
  3423  07B4  3A80               	xorlw	128
  3424  07B5  0262               	subwf	??_sprintf+2,w
  3425  07B6  1D03               	skipz
  3426  07B7  2FBC               	goto	u3715
  3427  07B8  0860               	movf	??_sprintf,w
  3428  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  3429  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  3430  07BB  023B               	subwf	sprintf@prec^(0+128),w
  3431  07BC                     u3715:	
  3432  07BC  1803               	skipnc
  3433  07BD  2FC5               	goto	l2644
  3434                           
  3435                           ;doprnt.c: 1351: prec = c;
  3436  07BE  1683               	bsf	3,5	;RP0=1, select bank1
  3437  07BF  1303               	bcf	3,6	;RP1=0, select bank1
  3438  07C0  0840               	movf	sprintf@c^(0+128),w
  3439  07C1  00BB               	movwf	sprintf@prec^(0+128)
  3440  07C2  01BC               	clrf	(sprintf@prec+1)^(0+128)
  3441  07C3  1BBB               	btfsc	sprintf@prec^(0+128),7
  3442  07C4  03BC               	decf	(sprintf@prec+1)^(0+128),f
  3443  07C5                     l2644:	
  3444                           
  3445                           ;doprnt.c: 1431: {
  3446                           ;doprnt.c: 1447: if(flag & 0x03)
  3447  07C5  3003               	movlw	3
  3448  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  3449  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  3450  07C8  0530               	andwf	sprintf@flag^(0+128),w
  3451  07C9  1283               	bcf	3,5	;RP0=0, select bank0
  3452  07CA  1303               	bcf	3,6	;RP1=0, select bank0
  3453  07CB  00E0               	movwf	??_sprintf
  3454  07CC  3000               	movlw	0
  3455  07CD  1683               	bsf	3,5	;RP0=1, select bank1
  3456  07CE  1303               	bcf	3,6	;RP1=0, select bank1
  3457  07CF  0531               	andwf	(sprintf@flag+1)^(0+128),w
  3458  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  3459  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  3460  07D2  00E1               	movwf	??_sprintf+1
  3461  07D3  0861               	movf	??_sprintf+1,w
  3462  07D4  0460               	iorwf	??_sprintf,w
  3463  07D5  1903               	skipnz
  3464  07D6  2994               	goto	l2650
  3465                           
  3466                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3467  07D7  085A               	movf	sprintf@sp,w
  3468  07D8  0084               	movwf	4
  3469  07D9  1383               	bcf	3,7
  3470  07DA  185B               	btfsc	sprintf@sp+1,0
  3471  07DB  1783               	bsf	3,7
  3472  07DC  302D               	movlw	45
  3473  07DD  0080               	movwf	0
  3474  07DE  3001               	movlw	1
  3475  07DF                     L1:	
  3476  07DF  07DA               	addwf	sprintf@sp,f
  3477  07E0  1803               	skipnc
  3478  07E1  0ADB               	incf	sprintf@sp+1,f
  3479  07E2  3000               	movlw	0
  3480  07E3  07DB               	addwf	sprintf@sp+1,f
  3481  07E4  2994               	goto	l2650
  3482  07E5                     l2652:	
  3483                           ;doprnt.c: 1478: }
  3484                           ;doprnt.c: 1542: }
  3485                           ;doprnt.c: 1544: alldone:
  3486                           
  3487                           
  3488                           ;doprnt.c: 1547: *sp = 0;
  3489  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  3490  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  3491  07E7  085A               	movf	sprintf@sp,w
  3492  07E8  0084               	movwf	4
  3493  07E9  1783               	bsf	3,7
  3494  07EA  1C5B               	btfss	sprintf@sp+1,0
  3495  07EB  1383               	bcf	3,7
  3496  07EC  0180               	clrf	0
  3497  07ED  0008               	return
  3498  07EE                     __end_of_sprintf:	
  3499                           ;doprnt.c: 1549: return 0;
  3500                           ;	Return value of _sprintf is never used
  3501                           
  3502                           
  3503                           	psect	text2
  3504  0D61                     __ptext2:	
  3505 ;; *************** function _scale *****************
  3506 ;; Defined at:
  3507 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  scl             1    wreg     char 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  scl             1   31[BANK0 ] char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  3   23[BANK0 ] char 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       3       0       0       0
  3522 ;;      Locals:         0       4       0       0       0
  3523 ;;      Temps:          0       2       0       0       0
  3524 ;;      Totals:         0       9       0       0       0
  3525 ;;Total ram usage:        9 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; Hardware stack levels required when called:    2
  3528 ;; This function calls:
  3529 ;;		___awdiv
  3530 ;;		___awmod
  3531 ;;		___bmul
  3532 ;;		___ftmul
  3533 ;; This function is called by:
  3534 ;;		_sprintf
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           
  3539                           ;psect for function _scale
  3540  0D61                     _scale:	
  3541                           
  3542                           ;incstack = 0
  3543                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3544                           ;scale@scl stored from wreg
  3545  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0D63  00BF               	movwf	scale@scl
  3548                           
  3549                           ;doprnt.c: 428: if(scl < 0) {
  3550  0D64  1FBF               	btfss	scale@scl,7
  3551  0D65  2EB4               	goto	l2106
  3552                           
  3553                           ;doprnt.c: 429: scl = -scl;
  3554  0D66  09BF               	comf	scale@scl,f
  3555  0D67  0ABF               	incf	scale@scl,f
  3556                           
  3557                           ;doprnt.c: 430: if(scl>=110)
  3558  0D68  083F               	movf	scale@scl,w
  3559  0D69  3A80               	xorlw	128
  3560  0D6A  3E12               	addlw	-238
  3561  0D6B  1C03               	skipc
  3562  0D6C  2E27               	goto	l2096
  3563                           
  3564                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3565  0D6D  3003               	movlw	3
  3566  0D6E  00BA               	movwf	??_scale
  3567  0D6F  083A               	movf	??_scale,w
  3568  0D70  00A4               	movwf	___bmul@multiplicand
  3569  0D71  300A               	movlw	10
  3570  0D72  00F7               	movwf	___awdiv@divisor
  3571  0D73  3000               	movlw	0
  3572  0D74  00F8               	movwf	___awdiv@divisor+1
  3573  0D75  083F               	movf	scale@scl,w
  3574  0D76  00F2               	movwf	___awmod@dividend
  3575  0D77  01F3               	clrf	___awmod@dividend+1
  3576  0D78  1BF2               	btfsc	___awmod@dividend,7
  3577  0D79  03F3               	decf	___awmod@dividend+1,f
  3578  0D7A  3064               	movlw	100
  3579  0D7B  00F0               	movwf	___awmod@divisor
  3580  0D7C  3000               	movlw	0
  3581  0D7D  00F1               	movwf	___awmod@divisor+1
  3582  0D7E  120A  118A  200D  120A  158A  	fcall	___awmod
  3583  0D83  0871               	movf	?___awmod+1,w
  3584  0D84  01FA               	clrf	___awdiv@dividend+1
  3585  0D85  07FA               	addwf	___awdiv@dividend+1,f
  3586  0D86  0870               	movf	?___awmod,w
  3587  0D87  01F9               	clrf	___awdiv@dividend
  3588  0D88  07F9               	addwf	___awdiv@dividend,f
  3589  0D89  160A  118A  24E8  120A  158A  	fcall	___awdiv
  3590  0D8E  0877               	movf	?___awdiv,w
  3591  0D8F  3E09               	addlw	9
  3592  0D90  160A  118A  2264  120A  158A  	fcall	___bmul
  3593  0D95  3E29               	addlw	low (__npowers_-__stringbase)
  3594  0D96  0084               	movwf	4
  3595  0D97  160A  118A  2000  120A  158A  	fcall	stringdir
  3596  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
  3597  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
  3598  0D9E  00A7               	movwf	___ftmul@f1
  3599  0D9F  160A  118A  2000  120A  158A  	fcall	stringdir
  3600  0DA4  00A8               	movwf	___ftmul@f1+1
  3601  0DA5  160A  118A  2000  120A  158A  	fcall	stringdir
  3602  0DAA  00A9               	movwf	___ftmul@f1+2
  3603  0DAB  3003               	movlw	3
  3604  0DAC  00BB               	movwf	??_scale+1
  3605  0DAD  083B               	movf	??_scale+1,w
  3606  0DAE  00A4               	movwf	___bmul@multiplicand
  3607  0DAF  3064               	movlw	100
  3608  0DB0  00F7               	movwf	___awdiv@divisor
  3609  0DB1  3000               	movlw	0
  3610  0DB2  00F8               	movwf	___awdiv@divisor+1
  3611  0DB3  083F               	movf	scale@scl,w
  3612  0DB4  00F9               	movwf	___awdiv@dividend
  3613  0DB5  01FA               	clrf	___awdiv@dividend+1
  3614  0DB6  1BF9               	btfsc	___awdiv@dividend,7
  3615  0DB7  03FA               	decf	___awdiv@dividend+1,f
  3616  0DB8  160A  118A  24E8  120A  158A  	fcall	___awdiv
  3617  0DBD  0877               	movf	?___awdiv,w
  3618  0DBE  3E12               	addlw	18
  3619  0DBF  160A  118A  2264  120A  158A  	fcall	___bmul
  3620  0DC4  3E29               	addlw	low (__npowers_-__stringbase)
  3621  0DC5  0084               	movwf	4
  3622  0DC6  160A  118A  2000  120A  158A  	fcall	stringdir
  3623  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  3624  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  3625  0DCD  00AA               	movwf	___ftmul@f2
  3626  0DCE  160A  118A  2000  120A  158A  	fcall	stringdir
  3627  0DD3  00AB               	movwf	___ftmul@f2+1
  3628  0DD4  160A  118A  2000  120A  158A  	fcall	stringdir
  3629  0DD9  00AC               	movwf	___ftmul@f2+2
  3630  0DDA  160A  118A  272D  120A  158A  	fcall	___ftmul
  3631  0DDF  1283               	bcf	3,5	;RP0=0, select bank0
  3632  0DE0  1303               	bcf	3,6	;RP1=0, select bank0
  3633  0DE1  0827               	movf	?___ftmul,w
  3634  0DE2  00BC               	movwf	_scale$670
  3635  0DE3  0828               	movf	?___ftmul+1,w
  3636  0DE4  00BD               	movwf	_scale$670+1
  3637  0DE5  0829               	movf	?___ftmul+2,w
  3638  0DE6  00BE               	movwf	_scale$670+2
  3639                           
  3640                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3641  0DE7  3003               	movlw	3
  3642  0DE8  00BA               	movwf	??_scale
  3643  0DE9  083A               	movf	??_scale,w
  3644  0DEA  00A4               	movwf	___bmul@multiplicand
  3645  0DEB  083F               	movf	scale@scl,w
  3646  0DEC  00F2               	movwf	___awmod@dividend
  3647  0DED  01F3               	clrf	___awmod@dividend+1
  3648  0DEE  1BF2               	btfsc	___awmod@dividend,7
  3649  0DEF  03F3               	decf	___awmod@dividend+1,f
  3650  0DF0  300A               	movlw	10
  3651  0DF1  00F0               	movwf	___awmod@divisor
  3652  0DF2  3000               	movlw	0
  3653  0DF3  00F1               	movwf	___awmod@divisor+1
  3654  0DF4  120A  118A  200D  120A  158A  	fcall	___awmod
  3655  0DF9  0870               	movf	?___awmod,w
  3656  0DFA  160A  118A  2264  120A  158A  	fcall	___bmul
  3657  0DFF  3E29               	addlw	low (__npowers_-__stringbase)
  3658  0E00  0084               	movwf	4
  3659  0E01  160A  118A  2000  120A  158A  	fcall	stringdir
  3660  0E06  1283               	bcf	3,5	;RP0=0, select bank0
  3661  0E07  1303               	bcf	3,6	;RP1=0, select bank0
  3662  0E08  00A7               	movwf	___ftmul@f1
  3663  0E09  160A  118A  2000  120A  158A  	fcall	stringdir
  3664  0E0E  00A8               	movwf	___ftmul@f1+1
  3665  0E0F  160A  118A  2000  120A  158A  	fcall	stringdir
  3666  0E14  00A9               	movwf	___ftmul@f1+2
  3667  0E15  083C               	movf	_scale$670,w
  3668  0E16  00AA               	movwf	___ftmul@f2
  3669  0E17  083D               	movf	_scale$670+1,w
  3670  0E18  00AB               	movwf	___ftmul@f2+1
  3671  0E19  083E               	movf	_scale$670+2,w
  3672  0E1A  00AC               	movwf	___ftmul@f2+2
  3673  0E1B  160A  118A  272D   	fcall	___ftmul
  3674  0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  3675  0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  3676  0E20  0827               	movf	?___ftmul,w
  3677  0E21  00B7               	movwf	?_scale
  3678  0E22  0828               	movf	?___ftmul+1,w
  3679  0E23  00B8               	movwf	?_scale+1
  3680  0E24  0829               	movf	?___ftmul+2,w
  3681  0E25  00B9               	movwf	?_scale+2
  3682  0E26  0008               	return
  3683  0E27                     l2096:	
  3684                           
  3685                           ;doprnt.c: 432: else if(scl > 10)
  3686  0E27  083F               	movf	scale@scl,w
  3687  0E28  3A80               	xorlw	128
  3688  0E29  3E75               	addlw	-139
  3689  0E2A  1C03               	skipc
  3690  0E2B  2E95               	goto	l2102
  3691                           
  3692                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3693  0E2C  3003               	movlw	3
  3694  0E2D  00BA               	movwf	??_scale
  3695  0E2E  083A               	movf	??_scale,w
  3696  0E2F  00A4               	movwf	___bmul@multiplicand
  3697  0E30  083F               	movf	scale@scl,w
  3698  0E31  00F2               	movwf	___awmod@dividend
  3699  0E32  01F3               	clrf	___awmod@dividend+1
  3700  0E33  1BF2               	btfsc	___awmod@dividend,7
  3701  0E34  03F3               	decf	___awmod@dividend+1,f
  3702  0E35  300A               	movlw	10
  3703  0E36  00F0               	movwf	___awmod@divisor
  3704  0E37  3000               	movlw	0
  3705  0E38  00F1               	movwf	___awmod@divisor+1
  3706  0E39  120A  118A  200D  120A  158A  	fcall	___awmod
  3707  0E3E  0870               	movf	?___awmod,w
  3708  0E3F  160A  118A  2264  120A  158A  	fcall	___bmul
  3709  0E44  3E29               	addlw	low (__npowers_-__stringbase)
  3710  0E45  0084               	movwf	4
  3711  0E46  160A  118A  2000  120A  158A  	fcall	stringdir
  3712  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  3713  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  3714  0E4D  00A7               	movwf	___ftmul@f1
  3715  0E4E  160A  118A  2000  120A  158A  	fcall	stringdir
  3716  0E53  00A8               	movwf	___ftmul@f1+1
  3717  0E54  160A  118A  2000  120A  158A  	fcall	stringdir
  3718  0E59  00A9               	movwf	___ftmul@f1+2
  3719  0E5A  3003               	movlw	3
  3720  0E5B  00BB               	movwf	??_scale+1
  3721  0E5C  083B               	movf	??_scale+1,w
  3722  0E5D  00A4               	movwf	___bmul@multiplicand
  3723  0E5E  300A               	movlw	10
  3724  0E5F  00F7               	movwf	___awdiv@divisor
  3725  0E60  3000               	movlw	0
  3726  0E61  00F8               	movwf	___awdiv@divisor+1
  3727  0E62  083F               	movf	scale@scl,w
  3728  0E63  00F9               	movwf	___awdiv@dividend
  3729  0E64  01FA               	clrf	___awdiv@dividend+1
  3730  0E65  1BF9               	btfsc	___awdiv@dividend,7
  3731  0E66  03FA               	decf	___awdiv@dividend+1,f
  3732  0E67  160A  118A  24E8  120A  158A  	fcall	___awdiv
  3733  0E6C  0877               	movf	?___awdiv,w
  3734  0E6D  3E09               	addlw	9
  3735  0E6E  160A  118A  2264  120A  158A  	fcall	___bmul
  3736  0E73  3E29               	addlw	low (__npowers_-__stringbase)
  3737  0E74  0084               	movwf	4
  3738  0E75  160A  118A  2000  120A  158A  	fcall	stringdir
  3739  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  3740  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  3741  0E7C  00AA               	movwf	___ftmul@f2
  3742  0E7D  160A  118A  2000  120A  158A  	fcall	stringdir
  3743  0E82  00AB               	movwf	___ftmul@f2+1
  3744  0E83  160A  118A  2000  120A  158A  	fcall	stringdir
  3745  0E88  00AC               	movwf	___ftmul@f2+2
  3746  0E89  160A  118A  272D   	fcall	___ftmul
  3747  0E8C  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0E8D  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0E8E  0827               	movf	?___ftmul,w
  3750  0E8F  00B7               	movwf	?_scale
  3751  0E90  0828               	movf	?___ftmul+1,w
  3752  0E91  00B8               	movwf	?_scale+1
  3753  0E92  0829               	movf	?___ftmul+2,w
  3754  0E93  00B9               	movwf	?_scale+2
  3755  0E94  0008               	return
  3756  0E95                     l2102:	
  3757                           
  3758                           ;doprnt.c: 434: return _npowers_[scl];
  3759  0E95  3003               	movlw	3
  3760  0E96  00BA               	movwf	??_scale
  3761  0E97  083A               	movf	??_scale,w
  3762  0E98  00A4               	movwf	___bmul@multiplicand
  3763  0E99  083F               	movf	scale@scl,w
  3764  0E9A  160A  118A  2264  120A  158A  	fcall	___bmul
  3765  0E9F  3E29               	addlw	low (__npowers_-__stringbase)
  3766  0EA0  0084               	movwf	4
  3767  0EA1  160A  118A  2000  120A  158A  	fcall	stringdir
  3768  0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  3769  0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  3770  0EA8  00B7               	movwf	?_scale
  3771  0EA9  160A  118A  2000  120A  158A  	fcall	stringdir
  3772  0EAE  00B8               	movwf	?_scale+1
  3773  0EAF  160A  118A  2000   	fcall	stringdir
  3774  0EB2  00B9               	movwf	?_scale+2
  3775  0EB3  0008               	return
  3776  0EB4                     l2106:	
  3777                           
  3778                           ;doprnt.c: 435: }
  3779                           ;doprnt.c: 436: if(scl>=110)
  3780  0EB4  083F               	movf	scale@scl,w
  3781  0EB5  3A80               	xorlw	128
  3782  0EB6  3E12               	addlw	-238
  3783  0EB7  1C03               	skipc
  3784  0EB8  2F73               	goto	l2114
  3785                           
  3786                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3787  0EB9  3003               	movlw	3
  3788  0EBA  00BA               	movwf	??_scale
  3789  0EBB  083A               	movf	??_scale,w
  3790  0EBC  00A4               	movwf	___bmul@multiplicand
  3791  0EBD  300A               	movlw	10
  3792  0EBE  00F7               	movwf	___awdiv@divisor
  3793  0EBF  3000               	movlw	0
  3794  0EC0  00F8               	movwf	___awdiv@divisor+1
  3795  0EC1  083F               	movf	scale@scl,w
  3796  0EC2  00F2               	movwf	___awmod@dividend
  3797  0EC3  01F3               	clrf	___awmod@dividend+1
  3798  0EC4  1BF2               	btfsc	___awmod@dividend,7
  3799  0EC5  03F3               	decf	___awmod@dividend+1,f
  3800  0EC6  3064               	movlw	100
  3801  0EC7  00F0               	movwf	___awmod@divisor
  3802  0EC8  3000               	movlw	0
  3803  0EC9  00F1               	movwf	___awmod@divisor+1
  3804  0ECA  120A  118A  200D  120A  158A  	fcall	___awmod
  3805  0ECF  0871               	movf	?___awmod+1,w
  3806  0ED0  01FA               	clrf	___awdiv@dividend+1
  3807  0ED1  07FA               	addwf	___awdiv@dividend+1,f
  3808  0ED2  0870               	movf	?___awmod,w
  3809  0ED3  01F9               	clrf	___awdiv@dividend
  3810  0ED4  07F9               	addwf	___awdiv@dividend,f
  3811  0ED5  160A  118A  24E8  120A  158A  	fcall	___awdiv
  3812  0EDA  0877               	movf	?___awdiv,w
  3813  0EDB  3E09               	addlw	9
  3814  0EDC  160A  118A  2264  120A  158A  	fcall	___bmul
  3815  0EE1  3E50               	addlw	low (__powers_-__stringbase)
  3816  0EE2  0084               	movwf	4
  3817  0EE3  160A  118A  2000  120A  158A  	fcall	stringdir
  3818  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  3819  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  3820  0EEA  00A7               	movwf	___ftmul@f1
  3821  0EEB  160A  118A  2000  120A  158A  	fcall	stringdir
  3822  0EF0  00A8               	movwf	___ftmul@f1+1
  3823  0EF1  160A  118A  2000  120A  158A  	fcall	stringdir
  3824  0EF6  00A9               	movwf	___ftmul@f1+2
  3825  0EF7  3003               	movlw	3
  3826  0EF8  00BB               	movwf	??_scale+1
  3827  0EF9  083B               	movf	??_scale+1,w
  3828  0EFA  00A4               	movwf	___bmul@multiplicand
  3829  0EFB  3064               	movlw	100
  3830  0EFC  00F7               	movwf	___awdiv@divisor
  3831  0EFD  3000               	movlw	0
  3832  0EFE  00F8               	movwf	___awdiv@divisor+1
  3833  0EFF  083F               	movf	scale@scl,w
  3834  0F00  00F9               	movwf	___awdiv@dividend
  3835  0F01  01FA               	clrf	___awdiv@dividend+1
  3836  0F02  1BF9               	btfsc	___awdiv@dividend,7
  3837  0F03  03FA               	decf	___awdiv@dividend+1,f
  3838  0F04  160A  118A  24E8  120A  158A  	fcall	___awdiv
  3839  0F09  0877               	movf	?___awdiv,w
  3840  0F0A  3E12               	addlw	18
  3841  0F0B  160A  118A  2264  120A  158A  	fcall	___bmul
  3842  0F10  3E50               	addlw	low (__powers_-__stringbase)
  3843  0F11  0084               	movwf	4
  3844  0F12  160A  118A  2000  120A  158A  	fcall	stringdir
  3845  0F17  1283               	bcf	3,5	;RP0=0, select bank0
  3846  0F18  1303               	bcf	3,6	;RP1=0, select bank0
  3847  0F19  00AA               	movwf	___ftmul@f2
  3848  0F1A  160A  118A  2000  120A  158A  	fcall	stringdir
  3849  0F1F  00AB               	movwf	___ftmul@f2+1
  3850  0F20  160A  118A  2000  120A  158A  	fcall	stringdir
  3851  0F25  00AC               	movwf	___ftmul@f2+2
  3852  0F26  160A  118A  272D  120A  158A  	fcall	___ftmul
  3853  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  3854  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  3855  0F2D  0827               	movf	?___ftmul,w
  3856  0F2E  00BC               	movwf	_scale$670
  3857  0F2F  0828               	movf	?___ftmul+1,w
  3858  0F30  00BD               	movwf	_scale$670+1
  3859  0F31  0829               	movf	?___ftmul+2,w
  3860  0F32  00BE               	movwf	_scale$670+2
  3861                           
  3862                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3863  0F33  3003               	movlw	3
  3864  0F34  00BA               	movwf	??_scale
  3865  0F35  083A               	movf	??_scale,w
  3866  0F36  00A4               	movwf	___bmul@multiplicand
  3867  0F37  083F               	movf	scale@scl,w
  3868  0F38  00F2               	movwf	___awmod@dividend
  3869  0F39  01F3               	clrf	___awmod@dividend+1
  3870  0F3A  1BF2               	btfsc	___awmod@dividend,7
  3871  0F3B  03F3               	decf	___awmod@dividend+1,f
  3872  0F3C  300A               	movlw	10
  3873  0F3D  00F0               	movwf	___awmod@divisor
  3874  0F3E  3000               	movlw	0
  3875  0F3F  00F1               	movwf	___awmod@divisor+1
  3876  0F40  120A  118A  200D  120A  158A  	fcall	___awmod
  3877  0F45  0870               	movf	?___awmod,w
  3878  0F46  160A  118A  2264  120A  158A  	fcall	___bmul
  3879  0F4B  3E50               	addlw	low (__powers_-__stringbase)
  3880  0F4C  0084               	movwf	4
  3881  0F4D  160A  118A  2000  120A  158A  	fcall	stringdir
  3882  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  3883  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  3884  0F54  00A7               	movwf	___ftmul@f1
  3885  0F55  160A  118A  2000  120A  158A  	fcall	stringdir
  3886  0F5A  00A8               	movwf	___ftmul@f1+1
  3887  0F5B  160A  118A  2000  120A  158A  	fcall	stringdir
  3888  0F60  00A9               	movwf	___ftmul@f1+2
  3889  0F61  083C               	movf	_scale$670,w
  3890  0F62  00AA               	movwf	___ftmul@f2
  3891  0F63  083D               	movf	_scale$670+1,w
  3892  0F64  00AB               	movwf	___ftmul@f2+1
  3893  0F65  083E               	movf	_scale$670+2,w
  3894  0F66  00AC               	movwf	___ftmul@f2+2
  3895  0F67  160A  118A  272D   	fcall	___ftmul
  3896  0F6A  1283               	bcf	3,5	;RP0=0, select bank0
  3897  0F6B  1303               	bcf	3,6	;RP1=0, select bank0
  3898  0F6C  0827               	movf	?___ftmul,w
  3899  0F6D  00B7               	movwf	?_scale
  3900  0F6E  0828               	movf	?___ftmul+1,w
  3901  0F6F  00B8               	movwf	?_scale+1
  3902  0F70  0829               	movf	?___ftmul+2,w
  3903  0F71  00B9               	movwf	?_scale+2
  3904  0F72  0008               	return
  3905  0F73                     l2114:	
  3906                           
  3907                           ;doprnt.c: 438: else if(scl > 10)
  3908  0F73  083F               	movf	scale@scl,w
  3909  0F74  3A80               	xorlw	128
  3910  0F75  3E75               	addlw	-139
  3911  0F76  1C03               	skipc
  3912  0F77  2FE1               	goto	l2120
  3913                           
  3914                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3915  0F78  3003               	movlw	3
  3916  0F79  00BA               	movwf	??_scale
  3917  0F7A  083A               	movf	??_scale,w
  3918  0F7B  00A4               	movwf	___bmul@multiplicand
  3919  0F7C  083F               	movf	scale@scl,w
  3920  0F7D  00F2               	movwf	___awmod@dividend
  3921  0F7E  01F3               	clrf	___awmod@dividend+1
  3922  0F7F  1BF2               	btfsc	___awmod@dividend,7
  3923  0F80  03F3               	decf	___awmod@dividend+1,f
  3924  0F81  300A               	movlw	10
  3925  0F82  00F0               	movwf	___awmod@divisor
  3926  0F83  3000               	movlw	0
  3927  0F84  00F1               	movwf	___awmod@divisor+1
  3928  0F85  120A  118A  200D  120A  158A  	fcall	___awmod
  3929  0F8A  0870               	movf	?___awmod,w
  3930  0F8B  160A  118A  2264  120A  158A  	fcall	___bmul
  3931  0F90  3E50               	addlw	low (__powers_-__stringbase)
  3932  0F91  0084               	movwf	4
  3933  0F92  160A  118A  2000  120A  158A  	fcall	stringdir
  3934  0F97  1283               	bcf	3,5	;RP0=0, select bank0
  3935  0F98  1303               	bcf	3,6	;RP1=0, select bank0
  3936  0F99  00A7               	movwf	___ftmul@f1
  3937  0F9A  160A  118A  2000  120A  158A  	fcall	stringdir
  3938  0F9F  00A8               	movwf	___ftmul@f1+1
  3939  0FA0  160A  118A  2000  120A  158A  	fcall	stringdir
  3940  0FA5  00A9               	movwf	___ftmul@f1+2
  3941  0FA6  3003               	movlw	3
  3942  0FA7  00BB               	movwf	??_scale+1
  3943  0FA8  083B               	movf	??_scale+1,w
  3944  0FA9  00A4               	movwf	___bmul@multiplicand
  3945  0FAA  300A               	movlw	10
  3946  0FAB  00F7               	movwf	___awdiv@divisor
  3947  0FAC  3000               	movlw	0
  3948  0FAD  00F8               	movwf	___awdiv@divisor+1
  3949  0FAE  083F               	movf	scale@scl,w
  3950  0FAF  00F9               	movwf	___awdiv@dividend
  3951  0FB0  01FA               	clrf	___awdiv@dividend+1
  3952  0FB1  1BF9               	btfsc	___awdiv@dividend,7
  3953  0FB2  03FA               	decf	___awdiv@dividend+1,f
  3954  0FB3  160A  118A  24E8  120A  158A  	fcall	___awdiv
  3955  0FB8  0877               	movf	?___awdiv,w
  3956  0FB9  3E09               	addlw	9
  3957  0FBA  160A  118A  2264  120A  158A  	fcall	___bmul
  3958  0FBF  3E50               	addlw	low (__powers_-__stringbase)
  3959  0FC0  0084               	movwf	4
  3960  0FC1  160A  118A  2000  120A  158A  	fcall	stringdir
  3961  0FC6  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0FC7  1303               	bcf	3,6	;RP1=0, select bank0
  3963  0FC8  00AA               	movwf	___ftmul@f2
  3964  0FC9  160A  118A  2000  120A  158A  	fcall	stringdir
  3965  0FCE  00AB               	movwf	___ftmul@f2+1
  3966  0FCF  160A  118A  2000  120A  158A  	fcall	stringdir
  3967  0FD4  00AC               	movwf	___ftmul@f2+2
  3968  0FD5  160A  118A  272D   	fcall	___ftmul
  3969  0FD8  1283               	bcf	3,5	;RP0=0, select bank0
  3970  0FD9  1303               	bcf	3,6	;RP1=0, select bank0
  3971  0FDA  0827               	movf	?___ftmul,w
  3972  0FDB  00B7               	movwf	?_scale
  3973  0FDC  0828               	movf	?___ftmul+1,w
  3974  0FDD  00B8               	movwf	?_scale+1
  3975  0FDE  0829               	movf	?___ftmul+2,w
  3976  0FDF  00B9               	movwf	?_scale+2
  3977  0FE0  0008               	return
  3978  0FE1                     l2120:	
  3979                           
  3980                           ;doprnt.c: 440: return _powers_[scl];
  3981  0FE1  3003               	movlw	3
  3982  0FE2  00BA               	movwf	??_scale
  3983  0FE3  083A               	movf	??_scale,w
  3984  0FE4  00A4               	movwf	___bmul@multiplicand
  3985  0FE5  083F               	movf	scale@scl,w
  3986  0FE6  160A  118A  2264  120A  158A  	fcall	___bmul
  3987  0FEB  3E50               	addlw	low (__powers_-__stringbase)
  3988  0FEC  0084               	movwf	4
  3989  0FED  160A  118A  2000  120A  158A  	fcall	stringdir
  3990  0FF2  1283               	bcf	3,5	;RP0=0, select bank0
  3991  0FF3  1303               	bcf	3,6	;RP1=0, select bank0
  3992  0FF4  00B7               	movwf	?_scale
  3993  0FF5  160A  118A  2000  120A  158A  	fcall	stringdir
  3994  0FFA  00B8               	movwf	?_scale+1
  3995  0FFB  160A  118A  2000   	fcall	stringdir
  3996  0FFE  00B9               	movwf	?_scale+2
  3997  0FFF  0008               	return
  3998  1000                     __end_of_scale:	
  3999                           
  4000                           	psect	text3
  4001  1210                     __ptext3:	
  4002 ;; *************** function _isdigit *****************
  4003 ;; Defined at:
  4004 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\isdigit.c"
  4005 ;; Parameters:    Size  Location     Type
  4006 ;;  c               1    wreg     unsigned char 
  4007 ;; Auto vars:     Size  Location     Type
  4008 ;;  c               1    1[COMMON] unsigned char 
  4009 ;; Return value:  Size  Location     Type
  4010 ;;		None               void
  4011 ;; Registers used:
  4012 ;;		wreg, status,2, status,0
  4013 ;; Tracked objects:
  4014 ;;		On entry : 0/0
  4015 ;;		On exit  : 0/0
  4016 ;;		Unchanged: 0/0
  4017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4018 ;;      Params:         0       0       0       0       0
  4019 ;;      Locals:         2       0       0       0       0
  4020 ;;      Temps:          0       0       0       0       0
  4021 ;;      Totals:         2       0       0       0       0
  4022 ;;Total ram usage:        2 bytes
  4023 ;; Hardware stack levels used:    1
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_sprintf
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           
  4032                           ;psect for function _isdigit
  4033  1210                     _isdigit:	
  4034                           
  4035                           ;incstack = 0
  4036                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4037                           ;isdigit@c stored from wreg
  4038  1210  00F1               	movwf	isdigit@c
  4039  1211  01F0               	clrf	_isdigit$452
  4040  1212  303A               	movlw	58
  4041  1213  0271               	subwf	isdigit@c,w
  4042  1214  1803               	skipnc
  4043  1215  2A1C               	goto	l2132
  4044  1216  3030               	movlw	48
  4045  1217  0271               	subwf	isdigit@c,w
  4046  1218  1C03               	skipc
  4047  1219  2A1C               	goto	l2132
  4048  121A  01F0               	clrf	_isdigit$452
  4049  121B  0AF0               	incf	_isdigit$452,f
  4050  121C                     l2132:	
  4051  121C  0C70               	rrf	_isdigit$452,w
  4052  121D  0008               	return
  4053  121E                     __end_of_isdigit:	
  4054                           
  4055                           	psect	text4
  4056  0998                     __ptext4:	
  4057 ;; *************** function _fround *****************
  4058 ;; Defined at:
  4059 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  4060 ;; Parameters:    Size  Location     Type
  4061 ;;  prec            1    wreg     unsigned char 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  prec            1   38[BANK0 ] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  3   23[BANK0 ] unsigned char 
  4066 ;; Registers used:
  4067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 0/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4073 ;;      Params:         0       3       0       0       0
  4074 ;;      Locals:         0       7       0       0       0
  4075 ;;      Temps:          0       6       0       0       0
  4076 ;;      Totals:         0      16       0       0       0
  4077 ;;Total ram usage:       16 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    2
  4080 ;; This function calls:
  4081 ;;		___awdiv
  4082 ;;		___awmod
  4083 ;;		___bmul
  4084 ;;		___ftmul
  4085 ;; This function is called by:
  4086 ;;		_sprintf
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           
  4091                           ;psect for function _fround
  4092  0998                     _fround:	
  4093                           
  4094                           ;incstack = 0
  4095                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4096                           ;fround@prec stored from wreg
  4097  0998  1283               	bcf	3,5	;RP0=0, select bank0
  4098  0999  1303               	bcf	3,6	;RP1=0, select bank0
  4099  099A  00C6               	movwf	fround@prec
  4100                           
  4101                           ;doprnt.c: 413: if(prec>=110)
  4102  099B  306E               	movlw	110
  4103  099C  0246               	subwf	fround@prec,w
  4104  099D  1C03               	skipc
  4105  099E  2A78               	goto	l2072
  4106                           
  4107                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4108  099F  3003               	movlw	3
  4109  09A0  00BA               	movwf	??_fround
  4110  09A1  083A               	movf	??_fround,w
  4111  09A2  00A4               	movwf	___bmul@multiplicand
  4112  09A3  300A               	movlw	10
  4113  09A4  00F7               	movwf	___awdiv@divisor
  4114  09A5  3000               	movlw	0
  4115  09A6  00F8               	movwf	___awdiv@divisor+1
  4116  09A7  0846               	movf	fround@prec,w
  4117  09A8  00BB               	movwf	??_fround+1
  4118  09A9  01BC               	clrf	??_fround+2
  4119  09AA  083B               	movf	??_fround+1,w
  4120  09AB  00F2               	movwf	___awmod@dividend
  4121  09AC  083C               	movf	??_fround+2,w
  4122  09AD  00F3               	movwf	___awmod@dividend+1
  4123  09AE  3064               	movlw	100
  4124  09AF  00F0               	movwf	___awmod@divisor
  4125  09B0  3000               	movlw	0
  4126  09B1  00F1               	movwf	___awmod@divisor+1
  4127  09B2  120A  118A  200D  120A  158A  	fcall	___awmod
  4128  09B7  0871               	movf	?___awmod+1,w
  4129  09B8  01FA               	clrf	___awdiv@dividend+1
  4130  09B9  07FA               	addwf	___awdiv@dividend+1,f
  4131  09BA  0870               	movf	?___awmod,w
  4132  09BB  01F9               	clrf	___awdiv@dividend
  4133  09BC  07F9               	addwf	___awdiv@dividend,f
  4134  09BD  160A  118A  24E8  120A  158A  	fcall	___awdiv
  4135  09C2  0877               	movf	?___awdiv,w
  4136  09C3  3E09               	addlw	9
  4137  09C4  160A  118A  2264  120A  158A  	fcall	___bmul
  4138  09C9  3E29               	addlw	low (__npowers_-__stringbase)
  4139  09CA  0084               	movwf	4
  4140  09CB  160A  118A  2000  120A  158A  	fcall	stringdir
  4141  09D0  1283               	bcf	3,5	;RP0=0, select bank0
  4142  09D1  1303               	bcf	3,6	;RP1=0, select bank0
  4143  09D2  00A7               	movwf	___ftmul@f1
  4144  09D3  160A  118A  2000  120A  158A  	fcall	stringdir
  4145  09D8  00A8               	movwf	___ftmul@f1+1
  4146  09D9  160A  118A  2000  120A  158A  	fcall	stringdir
  4147  09DE  00A9               	movwf	___ftmul@f1+2
  4148  09DF  3003               	movlw	3
  4149  09E0  00BD               	movwf	??_fround+3
  4150  09E1  083D               	movf	??_fround+3,w
  4151  09E2  00A4               	movwf	___bmul@multiplicand
  4152  09E3  3064               	movlw	100
  4153  09E4  00F7               	movwf	___awdiv@divisor
  4154  09E5  3000               	movlw	0
  4155  09E6  00F8               	movwf	___awdiv@divisor+1
  4156  09E7  0846               	movf	fround@prec,w
  4157  09E8  00BE               	movwf	??_fround+4
  4158  09E9  01BF               	clrf	??_fround+5
  4159  09EA  083E               	movf	??_fround+4,w
  4160  09EB  00F9               	movwf	___awdiv@dividend
  4161  09EC  083F               	movf	??_fround+5,w
  4162  09ED  00FA               	movwf	___awdiv@dividend+1
  4163  09EE  160A  118A  24E8  120A  158A  	fcall	___awdiv
  4164  09F3  0877               	movf	?___awdiv,w
  4165  09F4  3E12               	addlw	18
  4166  09F5  160A  118A  2264  120A  158A  	fcall	___bmul
  4167  09FA  3E29               	addlw	low (__npowers_-__stringbase)
  4168  09FB  0084               	movwf	4
  4169  09FC  160A  118A  2000  120A  158A  	fcall	stringdir
  4170  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  4171  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  4172  0A03  00AA               	movwf	___ftmul@f2
  4173  0A04  160A  118A  2000  120A  158A  	fcall	stringdir
  4174  0A09  00AB               	movwf	___ftmul@f2+1
  4175  0A0A  160A  118A  2000  120A  158A  	fcall	stringdir
  4176  0A0F  00AC               	movwf	___ftmul@f2+2
  4177  0A10  160A  118A  272D  120A  158A  	fcall	___ftmul
  4178  0A15  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0A16  1303               	bcf	3,6	;RP1=0, select bank0
  4180  0A17  0827               	movf	?___ftmul,w
  4181  0A18  00C3               	movwf	_fround$668
  4182  0A19  0828               	movf	?___ftmul+1,w
  4183  0A1A  00C4               	movwf	_fround$668+1
  4184  0A1B  0829               	movf	?___ftmul+2,w
  4185  0A1C  00C5               	movwf	_fround$668+2
  4186                           
  4187                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4188  0A1D  3003               	movlw	3
  4189  0A1E  00BA               	movwf	??_fround
  4190  0A1F  083A               	movf	??_fround,w
  4191  0A20  00A4               	movwf	___bmul@multiplicand
  4192  0A21  0846               	movf	fround@prec,w
  4193  0A22  00BB               	movwf	??_fround+1
  4194  0A23  01BC               	clrf	??_fround+2
  4195  0A24  083B               	movf	??_fround+1,w
  4196  0A25  00F2               	movwf	___awmod@dividend
  4197  0A26  083C               	movf	??_fround+2,w
  4198  0A27  00F3               	movwf	___awmod@dividend+1
  4199  0A28  300A               	movlw	10
  4200  0A29  00F0               	movwf	___awmod@divisor
  4201  0A2A  3000               	movlw	0
  4202  0A2B  00F1               	movwf	___awmod@divisor+1
  4203  0A2C  120A  118A  200D  120A  158A  	fcall	___awmod
  4204  0A31  0870               	movf	?___awmod,w
  4205  0A32  160A  118A  2264  120A  158A  	fcall	___bmul
  4206  0A37  3E29               	addlw	low (__npowers_-__stringbase)
  4207  0A38  0084               	movwf	4
  4208  0A39  160A  118A  2000  120A  158A  	fcall	stringdir
  4209  0A3E  1283               	bcf	3,5	;RP0=0, select bank0
  4210  0A3F  1303               	bcf	3,6	;RP1=0, select bank0
  4211  0A40  00A7               	movwf	___ftmul@f1
  4212  0A41  160A  118A  2000  120A  158A  	fcall	stringdir
  4213  0A46  00A8               	movwf	___ftmul@f1+1
  4214  0A47  160A  118A  2000  120A  158A  	fcall	stringdir
  4215  0A4C  00A9               	movwf	___ftmul@f1+2
  4216  0A4D  0843               	movf	_fround$668,w
  4217  0A4E  00AA               	movwf	___ftmul@f2
  4218  0A4F  0844               	movf	_fround$668+1,w
  4219  0A50  00AB               	movwf	___ftmul@f2+1
  4220  0A51  0845               	movf	_fround$668+2,w
  4221  0A52  00AC               	movwf	___ftmul@f2+2
  4222  0A53  160A  118A  272D  120A  158A  	fcall	___ftmul
  4223  0A58  1283               	bcf	3,5	;RP0=0, select bank0
  4224  0A59  1303               	bcf	3,6	;RP1=0, select bank0
  4225  0A5A  0827               	movf	?___ftmul,w
  4226  0A5B  00C0               	movwf	_fround$669
  4227  0A5C  0828               	movf	?___ftmul+1,w
  4228  0A5D  00C1               	movwf	_fround$669+1
  4229  0A5E  0829               	movf	?___ftmul+2,w
  4230  0A5F  00C2               	movwf	_fround$669+2
  4231                           
  4232                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4233  0A60  3000               	movlw	0
  4234  0A61  00A7               	movwf	___ftmul@f1
  4235  0A62  3000               	movlw	0
  4236  0A63  00A8               	movwf	___ftmul@f1+1
  4237  0A64  303F               	movlw	63
  4238  0A65  00A9               	movwf	___ftmul@f1+2
  4239  0A66  0840               	movf	_fround$669,w
  4240  0A67  00AA               	movwf	___ftmul@f2
  4241  0A68  0841               	movf	_fround$669+1,w
  4242  0A69  00AB               	movwf	___ftmul@f2+1
  4243  0A6A  0842               	movf	_fround$669+2,w
  4244  0A6B  00AC               	movwf	___ftmul@f2+2
  4245  0A6C  160A  118A  272D   	fcall	___ftmul
  4246  0A6F  1283               	bcf	3,5	;RP0=0, select bank0
  4247  0A70  1303               	bcf	3,6	;RP1=0, select bank0
  4248  0A71  0827               	movf	?___ftmul,w
  4249  0A72  00B7               	movwf	?_fround
  4250  0A73  0828               	movf	?___ftmul+1,w
  4251  0A74  00B8               	movwf	?_fround+1
  4252  0A75  0829               	movf	?___ftmul+2,w
  4253  0A76  00B9               	movwf	?_fround+2
  4254  0A77  0008               	return
  4255  0A78                     l2072:	
  4256                           
  4257                           ;doprnt.c: 415: else if(prec > 10)
  4258  0A78  300B               	movlw	11
  4259  0A79  0246               	subwf	fround@prec,w
  4260  0A7A  1C03               	skipc
  4261  0A7B  2B02               	goto	l2080
  4262                           
  4263                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4264  0A7C  3003               	movlw	3
  4265  0A7D  00BA               	movwf	??_fround
  4266  0A7E  083A               	movf	??_fround,w
  4267  0A7F  00A4               	movwf	___bmul@multiplicand
  4268  0A80  0846               	movf	fround@prec,w
  4269  0A81  00BB               	movwf	??_fround+1
  4270  0A82  01BC               	clrf	??_fround+2
  4271  0A83  083B               	movf	??_fround+1,w
  4272  0A84  00F2               	movwf	___awmod@dividend
  4273  0A85  083C               	movf	??_fround+2,w
  4274  0A86  00F3               	movwf	___awmod@dividend+1
  4275  0A87  300A               	movlw	10
  4276  0A88  00F0               	movwf	___awmod@divisor
  4277  0A89  3000               	movlw	0
  4278  0A8A  00F1               	movwf	___awmod@divisor+1
  4279  0A8B  120A  118A  200D  120A  158A  	fcall	___awmod
  4280  0A90  0870               	movf	?___awmod,w
  4281  0A91  160A  118A  2264  120A  158A  	fcall	___bmul
  4282  0A96  3E29               	addlw	low (__npowers_-__stringbase)
  4283  0A97  0084               	movwf	4
  4284  0A98  160A  118A  2000  120A  158A  	fcall	stringdir
  4285  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
  4286  0A9E  1303               	bcf	3,6	;RP1=0, select bank0
  4287  0A9F  00A7               	movwf	___ftmul@f1
  4288  0AA0  160A  118A  2000  120A  158A  	fcall	stringdir
  4289  0AA5  00A8               	movwf	___ftmul@f1+1
  4290  0AA6  160A  118A  2000  120A  158A  	fcall	stringdir
  4291  0AAB  00A9               	movwf	___ftmul@f1+2
  4292  0AAC  3003               	movlw	3
  4293  0AAD  00BD               	movwf	??_fround+3
  4294  0AAE  083D               	movf	??_fround+3,w
  4295  0AAF  00A4               	movwf	___bmul@multiplicand
  4296  0AB0  300A               	movlw	10
  4297  0AB1  00F7               	movwf	___awdiv@divisor
  4298  0AB2  3000               	movlw	0
  4299  0AB3  00F8               	movwf	___awdiv@divisor+1
  4300  0AB4  0846               	movf	fround@prec,w
  4301  0AB5  00BE               	movwf	??_fround+4
  4302  0AB6  01BF               	clrf	??_fround+5
  4303  0AB7  083E               	movf	??_fround+4,w
  4304  0AB8  00F9               	movwf	___awdiv@dividend
  4305  0AB9  083F               	movf	??_fround+5,w
  4306  0ABA  00FA               	movwf	___awdiv@dividend+1
  4307  0ABB  160A  118A  24E8  120A  158A  	fcall	___awdiv
  4308  0AC0  0877               	movf	?___awdiv,w
  4309  0AC1  3E09               	addlw	9
  4310  0AC2  160A  118A  2264  120A  158A  	fcall	___bmul
  4311  0AC7  3E29               	addlw	low (__npowers_-__stringbase)
  4312  0AC8  0084               	movwf	4
  4313  0AC9  160A  118A  2000  120A  158A  	fcall	stringdir
  4314  0ACE  1283               	bcf	3,5	;RP0=0, select bank0
  4315  0ACF  1303               	bcf	3,6	;RP1=0, select bank0
  4316  0AD0  00AA               	movwf	___ftmul@f2
  4317  0AD1  160A  118A  2000  120A  158A  	fcall	stringdir
  4318  0AD6  00AB               	movwf	___ftmul@f2+1
  4319  0AD7  160A  118A  2000  120A  158A  	fcall	stringdir
  4320  0ADC  00AC               	movwf	___ftmul@f2+2
  4321  0ADD  160A  118A  272D  120A  158A  	fcall	___ftmul
  4322  0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  4323  0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  4324  0AE4  0827               	movf	?___ftmul,w
  4325  0AE5  00C3               	movwf	_fround$668
  4326  0AE6  0828               	movf	?___ftmul+1,w
  4327  0AE7  00C4               	movwf	_fround$668+1
  4328  0AE8  0829               	movf	?___ftmul+2,w
  4329  0AE9  00C5               	movwf	_fround$668+2
  4330                           
  4331                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4332  0AEA  3000               	movlw	0
  4333  0AEB  00A7               	movwf	___ftmul@f1
  4334  0AEC  3000               	movlw	0
  4335  0AED  00A8               	movwf	___ftmul@f1+1
  4336  0AEE  303F               	movlw	63
  4337  0AEF  00A9               	movwf	___ftmul@f1+2
  4338  0AF0  0843               	movf	_fround$668,w
  4339  0AF1  00AA               	movwf	___ftmul@f2
  4340  0AF2  0844               	movf	_fround$668+1,w
  4341  0AF3  00AB               	movwf	___ftmul@f2+1
  4342  0AF4  0845               	movf	_fround$668+2,w
  4343  0AF5  00AC               	movwf	___ftmul@f2+2
  4344  0AF6  160A  118A  272D   	fcall	___ftmul
  4345  0AF9  1283               	bcf	3,5	;RP0=0, select bank0
  4346  0AFA  1303               	bcf	3,6	;RP1=0, select bank0
  4347  0AFB  0827               	movf	?___ftmul,w
  4348  0AFC  00B7               	movwf	?_fround
  4349  0AFD  0828               	movf	?___ftmul+1,w
  4350  0AFE  00B8               	movwf	?_fround+1
  4351  0AFF  0829               	movf	?___ftmul+2,w
  4352  0B00  00B9               	movwf	?_fround+2
  4353  0B01  0008               	return
  4354  0B02                     l2080:	
  4355                           
  4356                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4357  0B02  3000               	movlw	0
  4358  0B03  00A7               	movwf	___ftmul@f1
  4359  0B04  3000               	movlw	0
  4360  0B05  00A8               	movwf	___ftmul@f1+1
  4361  0B06  303F               	movlw	63
  4362  0B07  00A9               	movwf	___ftmul@f1+2
  4363  0B08  3003               	movlw	3
  4364  0B09  00BA               	movwf	??_fround
  4365  0B0A  083A               	movf	??_fround,w
  4366  0B0B  00A4               	movwf	___bmul@multiplicand
  4367  0B0C  0846               	movf	fround@prec,w
  4368  0B0D  160A  118A  2264  120A  158A  	fcall	___bmul
  4369  0B12  3E29               	addlw	low (__npowers_-__stringbase)
  4370  0B13  0084               	movwf	4
  4371  0B14  160A  118A  2000  120A  158A  	fcall	stringdir
  4372  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  4373  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  4374  0B1B  00AA               	movwf	___ftmul@f2
  4375  0B1C  160A  118A  2000  120A  158A  	fcall	stringdir
  4376  0B21  00AB               	movwf	___ftmul@f2+1
  4377  0B22  160A  118A  2000  120A  158A  	fcall	stringdir
  4378  0B27  00AC               	movwf	___ftmul@f2+2
  4379  0B28  160A  118A  272D   	fcall	___ftmul
  4380  0B2B  1283               	bcf	3,5	;RP0=0, select bank0
  4381  0B2C  1303               	bcf	3,6	;RP1=0, select bank0
  4382  0B2D  0827               	movf	?___ftmul,w
  4383  0B2E  00B7               	movwf	?_fround
  4384  0B2F  0828               	movf	?___ftmul+1,w
  4385  0B30  00B8               	movwf	?_fround+1
  4386  0B31  0829               	movf	?___ftmul+2,w
  4387  0B32  00B9               	movwf	?_fround+2
  4388  0B33  0008               	return
  4389  0B34                     __end_of_fround:	
  4390                           
  4391                           	psect	text5
  4392  1264                     __ptext5:	
  4393 ;; *************** function ___bmul *****************
  4394 ;; Defined at:
  4395 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  multiplier      1    wreg     unsigned char 
  4398 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;  multiplier      1    6[BANK0 ] unsigned char 
  4401 ;;  product         1    5[BANK0 ] unsigned char 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1    wreg      unsigned char 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4411 ;;      Params:         0       1       0       0       0
  4412 ;;      Locals:         0       2       0       0       0
  4413 ;;      Temps:          1       0       0       0       0
  4414 ;;      Totals:         1       3       0       0       0
  4415 ;;Total ram usage:        4 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_fround
  4421 ;;		_scale
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           
  4426                           ;psect for function ___bmul
  4427  1264                     ___bmul:	
  4428                           
  4429                           ;incstack = 0
  4430                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4431                           ;___bmul@multiplier stored from wreg
  4432  1264  1283               	bcf	3,5	;RP0=0, select bank0
  4433  1265  1303               	bcf	3,6	;RP1=0, select bank0
  4434  1266  00A6               	movwf	___bmul@multiplier
  4435  1267  01A5               	clrf	___bmul@product
  4436  1268                     l1802:	
  4437  1268  1C26               	btfss	___bmul@multiplier,0
  4438  1269  2A6E               	goto	l1806
  4439  126A  0824               	movf	___bmul@multiplicand,w
  4440  126B  00FC               	movwf	??___bmul
  4441  126C  087C               	movf	??___bmul,w
  4442  126D  07A5               	addwf	___bmul@product,f
  4443  126E                     l1806:	
  4444  126E  1003               	clrc
  4445  126F  0DA4               	rlf	___bmul@multiplicand,f
  4446  1270  1003               	clrc
  4447  1271  0CA6               	rrf	___bmul@multiplier,f
  4448  1272  08A6               	movf	___bmul@multiplier,f
  4449  1273  1D03               	skipz
  4450  1274  2A68               	goto	l1802
  4451  1275  0825               	movf	___bmul@product,w
  4452  1276  0008               	return
  4453  1277                     __end_of___bmul:	
  4454                           
  4455                           	psect	text6
  4456  000D                     __ptext6:	
  4457 ;; *************** function ___awmod *****************
  4458 ;; Defined at:
  4459 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  4460 ;; Parameters:    Size  Location     Type
  4461 ;;  divisor         2    0[COMMON] int 
  4462 ;;  dividend        2    2[COMMON] int 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  sign            1    6[COMMON] unsigned char 
  4465 ;;  counter         1    5[COMMON] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  2    0[COMMON] int 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4475 ;;      Params:         4       0       0       0       0
  4476 ;;      Locals:         2       0       0       0       0
  4477 ;;      Temps:          1       0       0       0       0
  4478 ;;      Totals:         7       0       0       0       0
  4479 ;;Total ram usage:        7 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; This function calls:
  4482 ;;		Nothing
  4483 ;; This function is called by:
  4484 ;;		_fround
  4485 ;;		_scale
  4486 ;; This function uses a non-reentrant model
  4487 ;;
  4488                           
  4489                           
  4490                           ;psect for function ___awmod
  4491  000D                     ___awmod:	
  4492                           
  4493                           ;incstack = 0
  4494                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4495  000D  01F6               	clrf	___awmod@sign
  4496  000E  1FF3               	btfss	___awmod@dividend+1,7
  4497  000F  2817               	goto	l1868
  4498  0010  09F2               	comf	___awmod@dividend,f
  4499  0011  09F3               	comf	___awmod@dividend+1,f
  4500  0012  0AF2               	incf	___awmod@dividend,f
  4501  0013  1903               	skipnz
  4502  0014  0AF3               	incf	___awmod@dividend+1,f
  4503  0015  01F6               	clrf	___awmod@sign
  4504  0016  0AF6               	incf	___awmod@sign,f
  4505  0017                     l1868:	
  4506  0017  1FF1               	btfss	___awmod@divisor+1,7
  4507  0018  281E               	goto	l1872
  4508  0019  09F0               	comf	___awmod@divisor,f
  4509  001A  09F1               	comf	___awmod@divisor+1,f
  4510  001B  0AF0               	incf	___awmod@divisor,f
  4511  001C  1903               	skipnz
  4512  001D  0AF1               	incf	___awmod@divisor+1,f
  4513  001E                     l1872:	
  4514  001E  0871               	movf	___awmod@divisor+1,w
  4515  001F  0470               	iorwf	___awmod@divisor,w
  4516  0020  1903               	skipnz
  4517  0021  284B               	goto	l1890
  4518  0022  01F5               	clrf	___awmod@counter
  4519  0023  0AF5               	incf	___awmod@counter,f
  4520  0024                     l1880:	
  4521  0024  1BF1               	btfsc	___awmod@divisor+1,7
  4522  0025  2832               	goto	l1882
  4523  0026  3001               	movlw	1
  4524  0027                     u2225:	
  4525  0027  1003               	clrc
  4526  0028  0DF0               	rlf	___awmod@divisor,f
  4527  0029  0DF1               	rlf	___awmod@divisor+1,f
  4528  002A  3EFF               	addlw	-1
  4529  002B  1D03               	skipz
  4530  002C  2827               	goto	u2225
  4531  002D  3001               	movlw	1
  4532  002E  00F4               	movwf	??___awmod
  4533  002F  0874               	movf	??___awmod,w
  4534  0030  07F5               	addwf	___awmod@counter,f
  4535  0031  2824               	goto	l1880
  4536  0032                     l1882:	
  4537  0032  0871               	movf	___awmod@divisor+1,w
  4538  0033  0273               	subwf	___awmod@dividend+1,w
  4539  0034  1D03               	skipz
  4540  0035  2838               	goto	u2245
  4541  0036  0870               	movf	___awmod@divisor,w
  4542  0037  0272               	subwf	___awmod@dividend,w
  4543  0038                     u2245:	
  4544  0038  1C03               	skipc
  4545  0039  2840               	goto	l1886
  4546  003A  0870               	movf	___awmod@divisor,w
  4547  003B  02F2               	subwf	___awmod@dividend,f
  4548  003C  0871               	movf	___awmod@divisor+1,w
  4549  003D  1C03               	skipc
  4550  003E  03F3               	decf	___awmod@dividend+1,f
  4551  003F  02F3               	subwf	___awmod@dividend+1,f
  4552  0040                     l1886:	
  4553  0040  3001               	movlw	1
  4554  0041                     u2255:	
  4555  0041  1003               	clrc
  4556  0042  0CF1               	rrf	___awmod@divisor+1,f
  4557  0043  0CF0               	rrf	___awmod@divisor,f
  4558  0044  3EFF               	addlw	-1
  4559  0045  1D03               	skipz
  4560  0046  2841               	goto	u2255
  4561  0047  3001               	movlw	1
  4562  0048  02F5               	subwf	___awmod@counter,f
  4563  0049  1D03               	btfss	3,2
  4564  004A  2832               	goto	l1882
  4565  004B                     l1890:	
  4566  004B  0876               	movf	___awmod@sign,w
  4567  004C  1903               	btfsc	3,2
  4568  004D  2853               	goto	l1894
  4569  004E  09F2               	comf	___awmod@dividend,f
  4570  004F  09F3               	comf	___awmod@dividend+1,f
  4571  0050  0AF2               	incf	___awmod@dividend,f
  4572  0051  1903               	skipnz
  4573  0052  0AF3               	incf	___awmod@dividend+1,f
  4574  0053                     l1894:	
  4575  0053  0873               	movf	___awmod@dividend+1,w
  4576  0054  01F1               	clrf	?___awmod+1
  4577  0055  07F1               	addwf	?___awmod+1,f
  4578  0056  0872               	movf	___awmod@dividend,w
  4579  0057  01F0               	clrf	?___awmod
  4580  0058  07F0               	addwf	?___awmod,f
  4581  0059  0008               	return
  4582  005A                     __end_of___awmod:	
  4583                           
  4584                           	psect	text7
  4585  14E8                     __ptext7:	
  4586 ;; *************** function ___awdiv *****************
  4587 ;; Defined at:
  4588 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  divisor         2    7[COMMON] int 
  4591 ;;  dividend        2    9[COMMON] int 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  quotient        2    2[BANK0 ] int 
  4594 ;;  sign            1    1[BANK0 ] unsigned char 
  4595 ;;  counter         1    0[BANK0 ] unsigned char 
  4596 ;; Return value:  Size  Location     Type
  4597 ;;                  2    7[COMMON] int 
  4598 ;; Registers used:
  4599 ;;		wreg, status,2, status,0
  4600 ;; Tracked objects:
  4601 ;;		On entry : 0/0
  4602 ;;		On exit  : 0/0
  4603 ;;		Unchanged: 0/0
  4604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4605 ;;      Params:         4       0       0       0       0
  4606 ;;      Locals:         0       4       0       0       0
  4607 ;;      Temps:          1       0       0       0       0
  4608 ;;      Totals:         5       4       0       0       0
  4609 ;;Total ram usage:        9 bytes
  4610 ;; Hardware stack levels used:    1
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_fround
  4615 ;;		_scale
  4616 ;;		_sprintf
  4617 ;; This function uses a non-reentrant model
  4618 ;;
  4619                           
  4620                           
  4621                           ;psect for function ___awdiv
  4622  14E8                     ___awdiv:	
  4623                           
  4624                           ;incstack = 0
  4625                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4626  14E8  1283               	bcf	3,5	;RP0=0, select bank0
  4627  14E9  1303               	bcf	3,6	;RP1=0, select bank0
  4628  14EA  01A1               	clrf	___awdiv@sign
  4629  14EB  1FF8               	btfss	___awdiv@divisor+1,7
  4630  14EC  2CF4               	goto	l1824
  4631  14ED  09F7               	comf	___awdiv@divisor,f
  4632  14EE  09F8               	comf	___awdiv@divisor+1,f
  4633  14EF  0AF7               	incf	___awdiv@divisor,f
  4634  14F0  1903               	skipnz
  4635  14F1  0AF8               	incf	___awdiv@divisor+1,f
  4636  14F2  01A1               	clrf	___awdiv@sign
  4637  14F3  0AA1               	incf	___awdiv@sign,f
  4638  14F4                     l1824:	
  4639  14F4  1FFA               	btfss	___awdiv@dividend+1,7
  4640  14F5  2CFF               	goto	l1830
  4641  14F6  09F9               	comf	___awdiv@dividend,f
  4642  14F7  09FA               	comf	___awdiv@dividend+1,f
  4643  14F8  0AF9               	incf	___awdiv@dividend,f
  4644  14F9  1903               	skipnz
  4645  14FA  0AFA               	incf	___awdiv@dividend+1,f
  4646  14FB  3001               	movlw	1
  4647  14FC  00FB               	movwf	??___awdiv
  4648  14FD  087B               	movf	??___awdiv,w
  4649  14FE  06A1               	xorwf	___awdiv@sign,f
  4650  14FF                     l1830:	
  4651  14FF  01A2               	clrf	___awdiv@quotient
  4652  1500  01A3               	clrf	___awdiv@quotient+1
  4653  1501  0878               	movf	___awdiv@divisor+1,w
  4654  1502  0477               	iorwf	___awdiv@divisor,w
  4655  1503  1903               	skipnz
  4656  1504  2D36               	goto	l1852
  4657  1505  01A0               	clrf	___awdiv@counter
  4658  1506  0AA0               	incf	___awdiv@counter,f
  4659  1507                     l1840:	
  4660  1507  1BF8               	btfsc	___awdiv@divisor+1,7
  4661  1508  2D15               	goto	l1842
  4662  1509  3001               	movlw	1
  4663  150A                     u2125:	
  4664  150A  1003               	clrc
  4665  150B  0DF7               	rlf	___awdiv@divisor,f
  4666  150C  0DF8               	rlf	___awdiv@divisor+1,f
  4667  150D  3EFF               	addlw	-1
  4668  150E  1D03               	skipz
  4669  150F  2D0A               	goto	u2125
  4670  1510  3001               	movlw	1
  4671  1511  00FB               	movwf	??___awdiv
  4672  1512  087B               	movf	??___awdiv,w
  4673  1513  07A0               	addwf	___awdiv@counter,f
  4674  1514  2D07               	goto	l1840
  4675  1515                     l1842:	
  4676  1515  3001               	movlw	1
  4677  1516                     u2145:	
  4678  1516  1003               	clrc
  4679  1517  0DA2               	rlf	___awdiv@quotient,f
  4680  1518  0DA3               	rlf	___awdiv@quotient+1,f
  4681  1519  3EFF               	addlw	-1
  4682  151A  1D03               	skipz
  4683  151B  2D16               	goto	u2145
  4684  151C  0878               	movf	___awdiv@divisor+1,w
  4685  151D  027A               	subwf	___awdiv@dividend+1,w
  4686  151E  1D03               	skipz
  4687  151F  2D22               	goto	u2155
  4688  1520  0877               	movf	___awdiv@divisor,w
  4689  1521  0279               	subwf	___awdiv@dividend,w
  4690  1522                     u2155:	
  4691  1522  1C03               	skipc
  4692  1523  2D2B               	goto	l1848
  4693  1524  0877               	movf	___awdiv@divisor,w
  4694  1525  02F9               	subwf	___awdiv@dividend,f
  4695  1526  0878               	movf	___awdiv@divisor+1,w
  4696  1527  1C03               	skipc
  4697  1528  03FA               	decf	___awdiv@dividend+1,f
  4698  1529  02FA               	subwf	___awdiv@dividend+1,f
  4699  152A  1422               	bsf	___awdiv@quotient,0
  4700  152B                     l1848:	
  4701  152B  3001               	movlw	1
  4702  152C                     u2165:	
  4703  152C  1003               	clrc
  4704  152D  0CF8               	rrf	___awdiv@divisor+1,f
  4705  152E  0CF7               	rrf	___awdiv@divisor,f
  4706  152F  3EFF               	addlw	-1
  4707  1530  1D03               	skipz
  4708  1531  2D2C               	goto	u2165
  4709  1532  3001               	movlw	1
  4710  1533  02A0               	subwf	___awdiv@counter,f
  4711  1534  1D03               	btfss	3,2
  4712  1535  2D15               	goto	l1842
  4713  1536                     l1852:	
  4714  1536  0821               	movf	___awdiv@sign,w
  4715  1537  1903               	btfsc	3,2
  4716  1538  2D3E               	goto	l1856
  4717  1539  09A2               	comf	___awdiv@quotient,f
  4718  153A  09A3               	comf	___awdiv@quotient+1,f
  4719  153B  0AA2               	incf	___awdiv@quotient,f
  4720  153C  1903               	skipnz
  4721  153D  0AA3               	incf	___awdiv@quotient+1,f
  4722  153E                     l1856:	
  4723  153E  0823               	movf	___awdiv@quotient+1,w
  4724  153F  01F8               	clrf	?___awdiv+1
  4725  1540  07F8               	addwf	?___awdiv+1,f
  4726  1541  0822               	movf	___awdiv@quotient,w
  4727  1542  01F7               	clrf	?___awdiv
  4728  1543  07F7               	addwf	?___awdiv,f
  4729  1544  0008               	return
  4730  1545                     __end_of___awdiv:	
  4731                           
  4732                           	psect	text8
  4733  166A                     __ptext8:	
  4734 ;; *************** function __tdiv_to_l_ *****************
  4735 ;; Defined at:
  4736 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  f1              3    0[COMMON] float 
  4739 ;;  f2              3    3[COMMON] float 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  quot            4    0[BANK0 ] unsigned long 
  4742 ;;  exp1            1    5[BANK0 ] unsigned char 
  4743 ;;  cntr            1    4[BANK0 ] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  4    0[COMMON] unsigned long 
  4746 ;; Registers used:
  4747 ;;		wreg, status,2, status,0
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4753 ;;      Params:         6       0       0       0       0
  4754 ;;      Locals:         0       6       0       0       0
  4755 ;;      Temps:          4       0       0       0       0
  4756 ;;      Totals:        10       6       0       0       0
  4757 ;;Total ram usage:       16 bytes
  4758 ;; Hardware stack levels used:    1
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_sprintf
  4763 ;; This function uses a non-reentrant model
  4764 ;;
  4765                           
  4766                           
  4767                           ;psect for function __tdiv_to_l_
  4768  166A                     __tdiv_to_l_:	
  4769                           
  4770                           ;incstack = 0
  4771                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4772  166A  0870               	movf	__tdiv_to_l_@f1,w
  4773  166B  00F6               	movwf	??__tdiv_to_l_
  4774  166C  0871               	movf	__tdiv_to_l_@f1+1,w
  4775  166D  00F7               	movwf	??__tdiv_to_l_+1
  4776  166E  0872               	movf	__tdiv_to_l_@f1+2,w
  4777  166F  00F8               	movwf	??__tdiv_to_l_+2
  4778  1670  1003               	clrc
  4779  1671  0D77               	rlf	??__tdiv_to_l_+1,w
  4780  1672  0D78               	rlf	??__tdiv_to_l_+2,w
  4781  1673  00F9               	movwf	??__tdiv_to_l_+3
  4782  1674  0879               	movf	??__tdiv_to_l_+3,w
  4783  1675  1283               	bcf	3,5	;RP0=0, select bank0
  4784  1676  1303               	bcf	3,6	;RP1=0, select bank0
  4785  1677  00A5               	movwf	__tdiv_to_l_@exp1
  4786  1678  08A5               	movf	__tdiv_to_l_@exp1,f
  4787  1679  1D03               	skipz
  4788  167A  2E84               	goto	l2142
  4789  167B  3000               	movlw	0
  4790  167C  00F3               	movwf	?__tdiv_to_l_+3
  4791  167D  3000               	movlw	0
  4792  167E  00F2               	movwf	?__tdiv_to_l_+2
  4793  167F  3000               	movlw	0
  4794  1680  00F1               	movwf	?__tdiv_to_l_+1
  4795  1681  3000               	movlw	0
  4796  1682  00F0               	movwf	?__tdiv_to_l_
  4797  1683  0008               	return
  4798  1684                     l2142:	
  4799  1684  0873               	movf	__tdiv_to_l_@f2,w
  4800  1685  00F6               	movwf	??__tdiv_to_l_
  4801  1686  0874               	movf	__tdiv_to_l_@f2+1,w
  4802  1687  00F7               	movwf	??__tdiv_to_l_+1
  4803  1688  0875               	movf	__tdiv_to_l_@f2+2,w
  4804  1689  00F8               	movwf	??__tdiv_to_l_+2
  4805  168A  1003               	clrc
  4806  168B  0D77               	rlf	??__tdiv_to_l_+1,w
  4807  168C  0D78               	rlf	??__tdiv_to_l_+2,w
  4808  168D  00F9               	movwf	??__tdiv_to_l_+3
  4809  168E  0879               	movf	??__tdiv_to_l_+3,w
  4810  168F  00A4               	movwf	__tdiv_to_l_@cntr
  4811  1690  08A4               	movf	__tdiv_to_l_@cntr,f
  4812  1691  1D03               	skipz
  4813  1692  2E9C               	goto	l567
  4814  1693  3000               	movlw	0
  4815  1694  00F3               	movwf	?__tdiv_to_l_+3
  4816  1695  3000               	movlw	0
  4817  1696  00F2               	movwf	?__tdiv_to_l_+2
  4818  1697  3000               	movlw	0
  4819  1698  00F1               	movwf	?__tdiv_to_l_+1
  4820  1699  3000               	movlw	0
  4821  169A  00F0               	movwf	?__tdiv_to_l_
  4822  169B  0008               	return
  4823  169C                     l567:	
  4824  169C  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4825  169D  30FF               	movlw	255
  4826  169E  05F0               	andwf	__tdiv_to_l_@f1,f
  4827  169F  30FF               	movlw	255
  4828  16A0  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4829  16A1  3000               	movlw	0
  4830  16A2  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4831  16A3  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4832  16A4  30FF               	movlw	255
  4833  16A5  05F3               	andwf	__tdiv_to_l_@f2,f
  4834  16A6  30FF               	movlw	255
  4835  16A7  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4836  16A8  3000               	movlw	0
  4837  16A9  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4838  16AA  3000               	movlw	0
  4839  16AB  00A3               	movwf	__tdiv_to_l_@quot+3
  4840  16AC  3000               	movlw	0
  4841  16AD  00A2               	movwf	__tdiv_to_l_@quot+2
  4842  16AE  3000               	movlw	0
  4843  16AF  00A1               	movwf	__tdiv_to_l_@quot+1
  4844  16B0  3000               	movlw	0
  4845  16B1  00A0               	movwf	__tdiv_to_l_@quot
  4846  16B2  307F               	movlw	127
  4847  16B3  02A5               	subwf	__tdiv_to_l_@exp1,f
  4848  16B4  3098               	movlw	152
  4849  16B5  0724               	addwf	__tdiv_to_l_@cntr,w
  4850  16B6  00F6               	movwf	??__tdiv_to_l_
  4851  16B7  0876               	movf	??__tdiv_to_l_,w
  4852  16B8  02A5               	subwf	__tdiv_to_l_@exp1,f
  4853  16B9  3018               	movlw	24
  4854  16BA  00F6               	movwf	??__tdiv_to_l_
  4855  16BB  0876               	movf	??__tdiv_to_l_,w
  4856  16BC  00A4               	movwf	__tdiv_to_l_@cntr
  4857  16BD                     l2156:	
  4858  16BD  3001               	movlw	1
  4859  16BE  00F6               	movwf	??__tdiv_to_l_
  4860  16BF                     u2795:	
  4861  16BF  1003               	clrc
  4862  16C0  0DA0               	rlf	__tdiv_to_l_@quot,f
  4863  16C1  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4864  16C2  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4865  16C3  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4866  16C4  0BF6               	decfsz	??__tdiv_to_l_,f
  4867  16C5  2EBF               	goto	u2795
  4868  16C6  0875               	movf	__tdiv_to_l_@f2+2,w
  4869  16C7  0272               	subwf	__tdiv_to_l_@f1+2,w
  4870  16C8  1D03               	skipz
  4871  16C9  2ED0               	goto	u2805
  4872  16CA  0874               	movf	__tdiv_to_l_@f2+1,w
  4873  16CB  0271               	subwf	__tdiv_to_l_@f1+1,w
  4874  16CC  1D03               	skipz
  4875  16CD  2ED0               	goto	u2805
  4876  16CE  0873               	movf	__tdiv_to_l_@f2,w
  4877  16CF  0270               	subwf	__tdiv_to_l_@f1,w
  4878  16D0                     u2805:	
  4879  16D0  1C03               	skipc
  4880  16D1  2EDD               	goto	l2164
  4881  16D2  0873               	movf	__tdiv_to_l_@f2,w
  4882  16D3  02F0               	subwf	__tdiv_to_l_@f1,f
  4883  16D4  0874               	movf	__tdiv_to_l_@f2+1,w
  4884  16D5  1C03               	skipc
  4885  16D6  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4886  16D7  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4887  16D8  0875               	movf	__tdiv_to_l_@f2+2,w
  4888  16D9  1C03               	skipc
  4889  16DA  0A75               	incf	__tdiv_to_l_@f2+2,w
  4890  16DB  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4891  16DC  1420               	bsf	__tdiv_to_l_@quot,0
  4892  16DD                     l2164:	
  4893  16DD  3001               	movlw	1
  4894  16DE                     u2815:	
  4895  16DE  1003               	clrc
  4896  16DF  0DF0               	rlf	__tdiv_to_l_@f1,f
  4897  16E0  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4898  16E1  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4899  16E2  3EFF               	addlw	-1
  4900  16E3  1D03               	skipz
  4901  16E4  2EDE               	goto	u2815
  4902  16E5  3001               	movlw	1
  4903  16E6  02A4               	subwf	__tdiv_to_l_@cntr,f
  4904  16E7  1D03               	btfss	3,2
  4905  16E8  2EBD               	goto	l2156
  4906  16E9  1FA5               	btfss	__tdiv_to_l_@exp1,7
  4907  16EA  2F09               	goto	l2176
  4908  16EB  0825               	movf	__tdiv_to_l_@exp1,w
  4909  16EC  3A80               	xorlw	128
  4910  16ED  3E97               	addlw	151
  4911  16EE  1803               	skipnc
  4912  16EF  2EF9               	goto	l2174
  4913  16F0  3000               	movlw	0
  4914  16F1  00F3               	movwf	?__tdiv_to_l_+3
  4915  16F2  3000               	movlw	0
  4916  16F3  00F2               	movwf	?__tdiv_to_l_+2
  4917  16F4  3000               	movlw	0
  4918  16F5  00F1               	movwf	?__tdiv_to_l_+1
  4919  16F6  3000               	movlw	0
  4920  16F7  00F0               	movwf	?__tdiv_to_l_
  4921  16F8  0008               	return
  4922  16F9                     l2174:	
  4923  16F9  3001               	movlw	1
  4924  16FA                     u2855:	
  4925  16FA  1003               	clrc
  4926  16FB  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  4927  16FC  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  4928  16FD  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  4929  16FE  0CA0               	rrf	__tdiv_to_l_@quot,f
  4930  16FF  3EFF               	addlw	-1
  4931  1700  1D03               	skipz
  4932  1701  2EFA               	goto	u2855
  4933  1702  3001               	movlw	1
  4934  1703  00F6               	movwf	??__tdiv_to_l_
  4935  1704  0876               	movf	??__tdiv_to_l_,w
  4936  1705  07A5               	addwf	__tdiv_to_l_@exp1,f
  4937  1706  1903               	btfsc	3,2
  4938  1707  2F24               	goto	l2186
  4939  1708  2EF9               	goto	l2174
  4940  1709                     l2176:	
  4941  1709  3018               	movlw	24
  4942  170A  0225               	subwf	__tdiv_to_l_@exp1,w
  4943  170B  1C03               	skipc
  4944  170C  2F21               	goto	l2184
  4945  170D  3000               	movlw	0
  4946  170E  00F3               	movwf	?__tdiv_to_l_+3
  4947  170F  3000               	movlw	0
  4948  1710  00F2               	movwf	?__tdiv_to_l_+2
  4949  1711  3000               	movlw	0
  4950  1712  00F1               	movwf	?__tdiv_to_l_+1
  4951  1713  3000               	movlw	0
  4952  1714  00F0               	movwf	?__tdiv_to_l_
  4953  1715  0008               	return
  4954  1716                     l2182:	
  4955  1716  3001               	movlw	1
  4956  1717  00F6               	movwf	??__tdiv_to_l_
  4957  1718                     u2885:	
  4958  1718  1003               	clrc
  4959  1719  0DA0               	rlf	__tdiv_to_l_@quot,f
  4960  171A  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4961  171B  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4962  171C  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4963  171D  0BF6               	decfsz	??__tdiv_to_l_,f
  4964  171E  2F18               	goto	u2885
  4965  171F  3001               	movlw	1
  4966  1720  02A5               	subwf	__tdiv_to_l_@exp1,f
  4967  1721                     l2184:	
  4968  1721  08A5               	movf	__tdiv_to_l_@exp1,f
  4969  1722  1D03               	skipz
  4970  1723  2F16               	goto	l2182
  4971  1724                     l2186:	
  4972  1724  0823               	movf	__tdiv_to_l_@quot+3,w
  4973  1725  00F3               	movwf	?__tdiv_to_l_+3
  4974  1726  0822               	movf	__tdiv_to_l_@quot+2,w
  4975  1727  00F2               	movwf	?__tdiv_to_l_+2
  4976  1728  0821               	movf	__tdiv_to_l_@quot+1,w
  4977  1729  00F1               	movwf	?__tdiv_to_l_+1
  4978  172A  0820               	movf	__tdiv_to_l_@quot,w
  4979  172B  00F0               	movwf	?__tdiv_to_l_
  4980  172C  0008               	return
  4981  172D                     __end_of__tdiv_to_l_:	
  4982                           
  4983                           	psect	text9
  4984  005A                     __ptext9:	
  4985 ;; *************** function __div_to_l_ *****************
  4986 ;; Defined at:
  4987 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  f1              3    0[COMMON] unsigned long 
  4990 ;;  f2              3    3[COMMON] unsigned long 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  quot            4    0[BANK0 ] unsigned long 
  4993 ;;  exp1            1    5[BANK0 ] unsigned char 
  4994 ;;  cntr            1    4[BANK0 ] unsigned char 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  4    0[COMMON] unsigned long 
  4997 ;; Registers used:
  4998 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5004 ;;      Params:         6       0       0       0       0
  5005 ;;      Locals:         0       6       0       0       0
  5006 ;;      Temps:          8       0       0       0       0
  5007 ;;      Totals:        14       6       0       0       0
  5008 ;;Total ram usage:       20 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_sprintf
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           
  5018                           ;psect for function __div_to_l_
  5019  005A                     __div_to_l_:	
  5020                           
  5021                           ;incstack = 0
  5022                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5023  005A  3070               	movlw	low __div_to_l_@f1
  5024  005B  0084               	movwf	4
  5025  005C  0800               	movf	0,w
  5026  005D  00F6               	movwf	??__div_to_l_
  5027  005E  0A84               	incf	4,f
  5028  005F  0800               	movf	0,w
  5029  0060  00F7               	movwf	??__div_to_l_+1
  5030  0061  0A84               	incf	4,f
  5031  0062  0800               	movf	0,w
  5032  0063  00F8               	movwf	??__div_to_l_+2
  5033  0064  0A84               	incf	4,f
  5034  0065  0800               	movf	0,w
  5035  0066  00F9               	movwf	??__div_to_l_+3
  5036  0067  1003               	clrc
  5037  0068  0D78               	rlf	??__div_to_l_+2,w
  5038  0069  0D79               	rlf	??__div_to_l_+3,w
  5039  006A  00FA               	movwf	??__div_to_l_+4
  5040  006B  087A               	movf	??__div_to_l_+4,w
  5041  006C  1283               	bcf	3,5	;RP0=0, select bank0
  5042  006D  1303               	bcf	3,6	;RP1=0, select bank0
  5043  006E  00A5               	movwf	__div_to_l_@exp1
  5044  006F  08A5               	movf	__div_to_l_@exp1,f
  5045  0070  1D03               	skipz
  5046  0071  287B               	goto	l2196
  5047  0072  3000               	movlw	0
  5048  0073  00F3               	movwf	?__div_to_l_+3
  5049  0074  3000               	movlw	0
  5050  0075  00F2               	movwf	?__div_to_l_+2
  5051  0076  3000               	movlw	0
  5052  0077  00F1               	movwf	?__div_to_l_+1
  5053  0078  3000               	movlw	0
  5054  0079  00F0               	movwf	?__div_to_l_
  5055  007A  0008               	return
  5056  007B                     l2196:	
  5057  007B  3073               	movlw	low __div_to_l_@f2
  5058  007C  0084               	movwf	4
  5059  007D  0800               	movf	0,w
  5060  007E  00F6               	movwf	??__div_to_l_
  5061  007F  0A84               	incf	4,f
  5062  0080  0800               	movf	0,w
  5063  0081  00F7               	movwf	??__div_to_l_+1
  5064  0082  0A84               	incf	4,f
  5065  0083  0800               	movf	0,w
  5066  0084  00F8               	movwf	??__div_to_l_+2
  5067  0085  0A84               	incf	4,f
  5068  0086  0800               	movf	0,w
  5069  0087  00F9               	movwf	??__div_to_l_+3
  5070  0088  1003               	clrc
  5071  0089  0D78               	rlf	??__div_to_l_+2,w
  5072  008A  0D79               	rlf	??__div_to_l_+3,w
  5073  008B  00FA               	movwf	??__div_to_l_+4
  5074  008C  087A               	movf	??__div_to_l_+4,w
  5075  008D  00A4               	movwf	__div_to_l_@cntr
  5076  008E  08A4               	movf	__div_to_l_@cntr,f
  5077  008F  1D03               	skipz
  5078  0090  289A               	goto	l2202
  5079  0091  3000               	movlw	0
  5080  0092  00F3               	movwf	?__div_to_l_+3
  5081  0093  3000               	movlw	0
  5082  0094  00F2               	movwf	?__div_to_l_+2
  5083  0095  3000               	movlw	0
  5084  0096  00F1               	movwf	?__div_to_l_+1
  5085  0097  3000               	movlw	0
  5086  0098  00F0               	movwf	?__div_to_l_
  5087  0099  0008               	return
  5088  009A                     l2202:	
  5089  009A  3070               	movlw	low __div_to_l_@f1
  5090  009B  0084               	movwf	4
  5091  009C  3000               	movlw	0
  5092  009D  0480               	iorwf	0,f
  5093  009E  0A84               	incf	4,f
  5094  009F  3000               	movlw	0
  5095  00A0  0480               	iorwf	0,f
  5096  00A1  0A84               	incf	4,f
  5097  00A2  3080               	movlw	128
  5098  00A3  0480               	iorwf	0,f
  5099  00A4  0A84               	incf	4,f
  5100  00A5  3000               	movlw	0
  5101  00A6  0480               	iorwf	0,f
  5102  00A7  3070               	movlw	low __div_to_l_@f1
  5103  00A8  0084               	movwf	4
  5104  00A9  30FF               	movlw	255
  5105  00AA  0580               	andwf	0,f
  5106  00AB  0A84               	incf	4,f
  5107  00AC  30FF               	movlw	255
  5108  00AD  0580               	andwf	0,f
  5109  00AE  0A84               	incf	4,f
  5110  00AF  30FF               	movlw	255
  5111  00B0  0580               	andwf	0,f
  5112  00B1  0A84               	incf	4,f
  5113  00B2  3000               	movlw	0
  5114  00B3  0580               	andwf	0,f
  5115  00B4  3073               	movlw	low __div_to_l_@f2
  5116  00B5  0084               	movwf	4
  5117  00B6  3000               	movlw	0
  5118  00B7  0480               	iorwf	0,f
  5119  00B8  0A84               	incf	4,f
  5120  00B9  3000               	movlw	0
  5121  00BA  0480               	iorwf	0,f
  5122  00BB  0A84               	incf	4,f
  5123  00BC  3080               	movlw	128
  5124  00BD  0480               	iorwf	0,f
  5125  00BE  0A84               	incf	4,f
  5126  00BF  3000               	movlw	0
  5127  00C0  0480               	iorwf	0,f
  5128  00C1  3073               	movlw	low __div_to_l_@f2
  5129  00C2  0084               	movwf	4
  5130  00C3  30FF               	movlw	255
  5131  00C4  0580               	andwf	0,f
  5132  00C5  0A84               	incf	4,f
  5133  00C6  30FF               	movlw	255
  5134  00C7  0580               	andwf	0,f
  5135  00C8  0A84               	incf	4,f
  5136  00C9  30FF               	movlw	255
  5137  00CA  0580               	andwf	0,f
  5138  00CB  0A84               	incf	4,f
  5139  00CC  3000               	movlw	0
  5140  00CD  0580               	andwf	0,f
  5141  00CE  3000               	movlw	0
  5142  00CF  00A3               	movwf	__div_to_l_@quot+3
  5143  00D0  3000               	movlw	0
  5144  00D1  00A2               	movwf	__div_to_l_@quot+2
  5145  00D2  3000               	movlw	0
  5146  00D3  00A1               	movwf	__div_to_l_@quot+1
  5147  00D4  3000               	movlw	0
  5148  00D5  00A0               	movwf	__div_to_l_@quot
  5149  00D6  307F               	movlw	127
  5150  00D7  02A5               	subwf	__div_to_l_@exp1,f
  5151  00D8  30A0               	movlw	160
  5152  00D9  0724               	addwf	__div_to_l_@cntr,w
  5153  00DA  00F6               	movwf	??__div_to_l_
  5154  00DB  0876               	movf	??__div_to_l_,w
  5155  00DC  02A5               	subwf	__div_to_l_@exp1,f
  5156  00DD  3020               	movlw	32
  5157  00DE  00F6               	movwf	??__div_to_l_
  5158  00DF  0876               	movf	??__div_to_l_,w
  5159  00E0  00A4               	movwf	__div_to_l_@cntr
  5160  00E1                     l2212:	
  5161  00E1  3001               	movlw	1
  5162  00E2  00F6               	movwf	??__div_to_l_
  5163  00E3                     u2925:	
  5164  00E3  1003               	clrc
  5165  00E4  0DA0               	rlf	__div_to_l_@quot,f
  5166  00E5  0DA1               	rlf	__div_to_l_@quot+1,f
  5167  00E6  0DA2               	rlf	__div_to_l_@quot+2,f
  5168  00E7  0DA3               	rlf	__div_to_l_@quot+3,f
  5169  00E8  0BF6               	decfsz	??__div_to_l_,f
  5170  00E9  28E3               	goto	u2925
  5171  00EA  3073               	movlw	low __div_to_l_@f2
  5172  00EB  0084               	movwf	4
  5173  00EC  0800               	movf	0,w
  5174  00ED  00F6               	movwf	??__div_to_l_
  5175  00EE  0A84               	incf	4,f
  5176  00EF  0800               	movf	0,w
  5177  00F0  00F7               	movwf	??__div_to_l_+1
  5178  00F1  0A84               	incf	4,f
  5179  00F2  0800               	movf	0,w
  5180  00F3  00F8               	movwf	??__div_to_l_+2
  5181  00F4  0A84               	incf	4,f
  5182  00F5  0800               	movf	0,w
  5183  00F6  00F9               	movwf	??__div_to_l_+3
  5184  00F7  3070               	movlw	low __div_to_l_@f1
  5185  00F8  0084               	movwf	4
  5186  00F9  0800               	movf	0,w
  5187  00FA  00FA               	movwf	??__div_to_l_+4
  5188  00FB  0A84               	incf	4,f
  5189  00FC  0800               	movf	0,w
  5190  00FD  00FB               	movwf	??__div_to_l_+5
  5191  00FE  0A84               	incf	4,f
  5192  00FF  0800               	movf	0,w
  5193  0100  00FC               	movwf	??__div_to_l_+6
  5194  0101  0A84               	incf	4,f
  5195  0102  0800               	movf	0,w
  5196  0103  00FD               	movwf	??__div_to_l_+7
  5197  0104  0879               	movf	??__div_to_l_+3,w
  5198  0105  027D               	subwf	??__div_to_l_+7,w
  5199  0106  1D03               	skipz
  5200  0107  2912               	goto	u2935
  5201  0108  0878               	movf	??__div_to_l_+2,w
  5202  0109  027C               	subwf	??__div_to_l_+6,w
  5203  010A  1D03               	skipz
  5204  010B  2912               	goto	u2935
  5205  010C  0877               	movf	??__div_to_l_+1,w
  5206  010D  027B               	subwf	??__div_to_l_+5,w
  5207  010E  1D03               	skipz
  5208  010F  2912               	goto	u2935
  5209  0110  0876               	movf	??__div_to_l_,w
  5210  0111  027A               	subwf	??__div_to_l_+4,w
  5211  0112                     u2935:	
  5212  0112  1C03               	skipc
  5213  0113  2937               	goto	l492
  5214  0114  3073               	movlw	low __div_to_l_@f2
  5215  0115  0084               	movwf	4
  5216  0116  0800               	movf	0,w
  5217  0117  00F6               	movwf	??__div_to_l_
  5218  0118  0A84               	incf	4,f
  5219  0119  0800               	movf	0,w
  5220  011A  00F7               	movwf	??__div_to_l_+1
  5221  011B  0A84               	incf	4,f
  5222  011C  0800               	movf	0,w
  5223  011D  00F8               	movwf	??__div_to_l_+2
  5224  011E  0A84               	incf	4,f
  5225  011F  0800               	movf	0,w
  5226  0120  00F9               	movwf	??__div_to_l_+3
  5227  0121  3070               	movlw	low __div_to_l_@f1
  5228  0122  0084               	movwf	4
  5229  0123  0876               	movf	??__div_to_l_,w
  5230  0124  0280               	subwf	0,f
  5231  0125  0A84               	incf	4,f
  5232  0126  0877               	movf	??__div_to_l_+1,w
  5233  0127  1C03               	skipc
  5234  0128  0F77               	incfsz	??__div_to_l_+1,w
  5235  0129  0280               	subwf	0,f
  5236  012A  0A84               	incf	4,f
  5237  012B  0878               	movf	??__div_to_l_+2,w
  5238  012C  1C03               	skipc
  5239  012D  0F78               	incfsz	??__div_to_l_+2,w
  5240  012E  0280               	subwf	0,f
  5241  012F  0A84               	incf	4,f
  5242  0130  0879               	movf	??__div_to_l_+3,w
  5243  0131  1C03               	skipc
  5244  0132  0A79               	incf	??__div_to_l_+3,w
  5245  0133  0280               	subwf	0,f
  5246  0134  3003               	movlw	3
  5247  0135  0284               	subwf	4,f
  5248  0136  1420               	bsf	__div_to_l_@quot,0
  5249  0137                     l492:	
  5250  0137  3070               	movlw	low __div_to_l_@f1
  5251  0138  0084               	movwf	4
  5252  0139  1003               	clrc
  5253  013A  0D80               	rlf	0,f
  5254  013B  0A84               	incf	4,f
  5255  013C  0D80               	rlf	0,f
  5256  013D  0A84               	incf	4,f
  5257  013E  0D80               	rlf	0,f
  5258  013F  0A84               	incf	4,f
  5259  0140  0D80               	rlf	0,f
  5260  0141  0384               	decf	4,f
  5261  0142  0384               	decf	4,f
  5262  0143  0384               	decf	4,f
  5263  0144  3001               	movlw	1
  5264  0145  02A4               	subwf	__div_to_l_@cntr,f
  5265  0146  1D03               	btfss	3,2
  5266  0147  28E1               	goto	l2212
  5267  0148  1FA5               	btfss	__div_to_l_@exp1,7
  5268  0149  2968               	goto	l2230
  5269  014A  0825               	movf	__div_to_l_@exp1,w
  5270  014B  3A80               	xorlw	128
  5271  014C  3E9F               	addlw	159
  5272  014D  1803               	skipnc
  5273  014E  2958               	goto	l2228
  5274  014F  3000               	movlw	0
  5275  0150  00F3               	movwf	?__div_to_l_+3
  5276  0151  3000               	movlw	0
  5277  0152  00F2               	movwf	?__div_to_l_+2
  5278  0153  3000               	movlw	0
  5279  0154  00F1               	movwf	?__div_to_l_+1
  5280  0155  3000               	movlw	0
  5281  0156  00F0               	movwf	?__div_to_l_
  5282  0157  0008               	return
  5283  0158                     l2228:	
  5284  0158  3001               	movlw	1
  5285  0159                     u2975:	
  5286  0159  1003               	clrc
  5287  015A  0CA3               	rrf	__div_to_l_@quot+3,f
  5288  015B  0CA2               	rrf	__div_to_l_@quot+2,f
  5289  015C  0CA1               	rrf	__div_to_l_@quot+1,f
  5290  015D  0CA0               	rrf	__div_to_l_@quot,f
  5291  015E  3EFF               	addlw	-1
  5292  015F  1D03               	skipz
  5293  0160  2959               	goto	u2975
  5294  0161  3001               	movlw	1
  5295  0162  00F6               	movwf	??__div_to_l_
  5296  0163  0876               	movf	??__div_to_l_,w
  5297  0164  07A5               	addwf	__div_to_l_@exp1,f
  5298  0165  1903               	btfsc	3,2
  5299  0166  2983               	goto	l2240
  5300  0167  2958               	goto	l2228
  5301  0168                     l2230:	
  5302  0168  3020               	movlw	32
  5303  0169  0225               	subwf	__div_to_l_@exp1,w
  5304  016A  1C03               	skipc
  5305  016B  2980               	goto	l2238
  5306  016C  3000               	movlw	0
  5307  016D  00F3               	movwf	?__div_to_l_+3
  5308  016E  3000               	movlw	0
  5309  016F  00F2               	movwf	?__div_to_l_+2
  5310  0170  3000               	movlw	0
  5311  0171  00F1               	movwf	?__div_to_l_+1
  5312  0172  3000               	movlw	0
  5313  0173  00F0               	movwf	?__div_to_l_
  5314  0174  0008               	return
  5315  0175                     l2236:	
  5316  0175  3001               	movlw	1
  5317  0176  00F6               	movwf	??__div_to_l_
  5318  0177                     u3005:	
  5319  0177  1003               	clrc
  5320  0178  0DA0               	rlf	__div_to_l_@quot,f
  5321  0179  0DA1               	rlf	__div_to_l_@quot+1,f
  5322  017A  0DA2               	rlf	__div_to_l_@quot+2,f
  5323  017B  0DA3               	rlf	__div_to_l_@quot+3,f
  5324  017C  0BF6               	decfsz	??__div_to_l_,f
  5325  017D  2977               	goto	u3005
  5326  017E  3001               	movlw	1
  5327  017F  02A5               	subwf	__div_to_l_@exp1,f
  5328  0180                     l2238:	
  5329  0180  08A5               	movf	__div_to_l_@exp1,f
  5330  0181  1D03               	skipz
  5331  0182  2975               	goto	l2236
  5332  0183                     l2240:	
  5333  0183  0823               	movf	__div_to_l_@quot+3,w
  5334  0184  00F3               	movwf	?__div_to_l_+3
  5335  0185  0822               	movf	__div_to_l_@quot+2,w
  5336  0186  00F2               	movwf	?__div_to_l_+2
  5337  0187  0821               	movf	__div_to_l_@quot+1,w
  5338  0188  00F1               	movwf	?__div_to_l_+1
  5339  0189  0820               	movf	__div_to_l_@quot,w
  5340  018A  00F0               	movwf	?__div_to_l_
  5341  018B  0008               	return
  5342  018C                     __end_of__div_to_l_:	
  5343                           
  5344                           	psect	text10
  5345  131D                     __ptext10:	
  5346 ;; *************** function ___wmul *****************
  5347 ;; Defined at:
  5348 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5349 ;; Parameters:    Size  Location     Type
  5350 ;;  multiplier      2    0[COMMON] unsigned int 
  5351 ;;  multiplicand    2    2[COMMON] unsigned int 
  5352 ;; Auto vars:     Size  Location     Type
  5353 ;;  product         2    4[COMMON] unsigned int 
  5354 ;; Return value:  Size  Location     Type
  5355 ;;                  2    0[COMMON] unsigned int 
  5356 ;; Registers used:
  5357 ;;		wreg, status,2, status,0
  5358 ;; Tracked objects:
  5359 ;;		On entry : 0/0
  5360 ;;		On exit  : 0/0
  5361 ;;		Unchanged: 0/0
  5362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5363 ;;      Params:         4       0       0       0       0
  5364 ;;      Locals:         2       0       0       0       0
  5365 ;;      Temps:          0       0       0       0       0
  5366 ;;      Totals:         6       0       0       0       0
  5367 ;;Total ram usage:        6 bytes
  5368 ;; Hardware stack levels used:    1
  5369 ;; This function calls:
  5370 ;;		Nothing
  5371 ;; This function is called by:
  5372 ;;		_sprintf
  5373 ;; This function uses a non-reentrant model
  5374 ;;
  5375                           
  5376                           
  5377                           ;psect for function ___wmul
  5378  131D                     ___wmul:	
  5379                           
  5380                           ;incstack = 0
  5381                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5382  131D  01F4               	clrf	___wmul@product
  5383  131E  01F5               	clrf	___wmul@product+1
  5384  131F                     l2246:	
  5385  131F  1C70               	btfss	___wmul@multiplier,0
  5386  1320  2B27               	goto	l334
  5387  1321  0872               	movf	___wmul@multiplicand,w
  5388  1322  07F4               	addwf	___wmul@product,f
  5389  1323  1803               	skipnc
  5390  1324  0AF5               	incf	___wmul@product+1,f
  5391  1325  0873               	movf	___wmul@multiplicand+1,w
  5392  1326  07F5               	addwf	___wmul@product+1,f
  5393  1327                     l334:	
  5394  1327  3001               	movlw	1
  5395  1328                     u3035:	
  5396  1328  1003               	clrc
  5397  1329  0DF2               	rlf	___wmul@multiplicand,f
  5398  132A  0DF3               	rlf	___wmul@multiplicand+1,f
  5399  132B  3EFF               	addlw	-1
  5400  132C  1D03               	skipz
  5401  132D  2B28               	goto	u3035
  5402  132E  3001               	movlw	1
  5403  132F                     u3045:	
  5404  132F  1003               	clrc
  5405  1330  0CF1               	rrf	___wmul@multiplier+1,f
  5406  1331  0CF0               	rrf	___wmul@multiplier,f
  5407  1332  3EFF               	addlw	-1
  5408  1333  1D03               	skipz
  5409  1334  2B2F               	goto	u3045
  5410  1335  0871               	movf	___wmul@multiplier+1,w
  5411  1336  0470               	iorwf	___wmul@multiplier,w
  5412  1337  1D03               	skipz
  5413  1338  2B1F               	goto	l2246
  5414  1339  0875               	movf	___wmul@product+1,w
  5415  133A  01F1               	clrf	?___wmul+1
  5416  133B  07F1               	addwf	?___wmul+1,f
  5417  133C  0874               	movf	___wmul@product,w
  5418  133D  01F0               	clrf	?___wmul
  5419  133E  07F0               	addwf	?___wmul,f
  5420  133F  0008               	return
  5421  1340                     __end_of___wmul:	
  5422                           
  5423                           	psect	text11
  5424  138C                     __ptext11:	
  5425 ;; *************** function ___lltoft *****************
  5426 ;; Defined at:
  5427 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  5428 ;; Parameters:    Size  Location     Type
  5429 ;;  c               4    8[COMMON] unsigned long 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  exp             1   13[COMMON] unsigned char 
  5432 ;; Return value:  Size  Location     Type
  5433 ;;                  3    8[COMMON] float 
  5434 ;; Registers used:
  5435 ;;		wreg, status,2, status,0, pclath, cstack
  5436 ;; Tracked objects:
  5437 ;;		On entry : 0/0
  5438 ;;		On exit  : 0/0
  5439 ;;		Unchanged: 0/0
  5440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5441 ;;      Params:         4       0       0       0       0
  5442 ;;      Locals:         1       0       0       0       0
  5443 ;;      Temps:          1       0       0       0       0
  5444 ;;      Totals:         6       0       0       0       0
  5445 ;;Total ram usage:        6 bytes
  5446 ;; Hardware stack levels used:    1
  5447 ;; Hardware stack levels required when called:    1
  5448 ;; This function calls:
  5449 ;;		___ftpack
  5450 ;; This function is called by:
  5451 ;;		_sprintf
  5452 ;; This function uses a non-reentrant model
  5453 ;;
  5454                           
  5455                           
  5456                           ;psect for function ___lltoft
  5457  138C                     ___lltoft:	
  5458                           
  5459                           ;incstack = 0
  5460                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5461  138C  308E               	movlw	142
  5462  138D  00FC               	movwf	??___lltoft
  5463  138E  087C               	movf	??___lltoft,w
  5464  138F  00FD               	movwf	___lltoft@exp
  5465  1390                     l2382:	
  5466  1390  30FF               	movlw	255
  5467  1391  057B               	andwf	___lltoft@c+3,w
  5468  1392  1903               	btfsc	3,2
  5469  1393  2BA2               	goto	l2384
  5470  1394  3001               	movlw	1
  5471  1395                     u3355:	
  5472  1395  1003               	clrc
  5473  1396  0CFB               	rrf	___lltoft@c+3,f
  5474  1397  0CFA               	rrf	___lltoft@c+2,f
  5475  1398  0CF9               	rrf	___lltoft@c+1,f
  5476  1399  0CF8               	rrf	___lltoft@c,f
  5477  139A  3EFF               	addlw	-1
  5478  139B  1D03               	skipz
  5479  139C  2B95               	goto	u3355
  5480  139D  3001               	movlw	1
  5481  139E  00FC               	movwf	??___lltoft
  5482  139F  087C               	movf	??___lltoft,w
  5483  13A0  07FD               	addwf	___lltoft@exp,f
  5484  13A1  2B90               	goto	l2382
  5485  13A2                     l2384:	
  5486  13A2  0878               	movf	___lltoft@c,w
  5487  13A3  00F0               	movwf	___ftpack@arg
  5488  13A4  0879               	movf	___lltoft@c+1,w
  5489  13A5  00F1               	movwf	___ftpack@arg+1
  5490  13A6  087A               	movf	___lltoft@c+2,w
  5491  13A7  00F2               	movwf	___ftpack@arg+2
  5492  13A8  087D               	movf	___lltoft@exp,w
  5493  13A9  00FC               	movwf	??___lltoft
  5494  13AA  087C               	movf	??___lltoft,w
  5495  13AB  00F3               	movwf	___ftpack@exp
  5496  13AC  01F4               	clrf	___ftpack@sign
  5497  13AD  160A  118A  2602   	fcall	___ftpack
  5498  13B0  0870               	movf	?___ftpack,w
  5499  13B1  00F8               	movwf	?___lltoft
  5500  13B2  0871               	movf	?___ftpack+1,w
  5501  13B3  00F9               	movwf	?___lltoft+1
  5502  13B4  0872               	movf	?___ftpack+2,w
  5503  13B5  00FA               	movwf	?___lltoft+2
  5504  13B6  0008               	return
  5505  13B7                     __end_of___lltoft:	
  5506                           
  5507                           	psect	text12
  5508  143F                     __ptext12:	
  5509 ;; *************** function ___llmod *****************
  5510 ;; Defined at:
  5511 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  5512 ;; Parameters:    Size  Location     Type
  5513 ;;  divisor         4    0[COMMON] unsigned long 
  5514 ;;  dividend        4    4[COMMON] unsigned long 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;  counter         1    9[COMMON] unsigned char 
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  4    0[COMMON] unsigned long 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5526 ;;      Params:         8       0       0       0       0
  5527 ;;      Locals:         1       0       0       0       0
  5528 ;;      Temps:          1       0       0       0       0
  5529 ;;      Totals:        10       0       0       0       0
  5530 ;;Total ram usage:       10 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_sprintf
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           
  5540                           ;psect for function ___llmod
  5541  143F                     ___llmod:	
  5542                           
  5543                           ;incstack = 0
  5544                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5545  143F  0873               	movf	___llmod@divisor+3,w
  5546  1440  0472               	iorwf	___llmod@divisor+2,w
  5547  1441  0471               	iorwf	___llmod@divisor+1,w
  5548  1442  0470               	iorwf	___llmod@divisor,w
  5549  1443  1903               	skipnz
  5550  1444  2C82               	goto	l2374
  5551  1445  01F9               	clrf	___llmod@counter
  5552  1446  0AF9               	incf	___llmod@counter,f
  5553  1447                     l2364:	
  5554  1447  1BF3               	btfsc	___llmod@divisor+3,7
  5555  1448  2C57               	goto	l2366
  5556  1449  3001               	movlw	1
  5557  144A  00F8               	movwf	??___llmod
  5558  144B                     u3305:	
  5559  144B  1003               	clrc
  5560  144C  0DF0               	rlf	___llmod@divisor,f
  5561  144D  0DF1               	rlf	___llmod@divisor+1,f
  5562  144E  0DF2               	rlf	___llmod@divisor+2,f
  5563  144F  0DF3               	rlf	___llmod@divisor+3,f
  5564  1450  0BF8               	decfsz	??___llmod,f
  5565  1451  2C4B               	goto	u3305
  5566  1452  3001               	movlw	1
  5567  1453  00F8               	movwf	??___llmod
  5568  1454  0878               	movf	??___llmod,w
  5569  1455  07F9               	addwf	___llmod@counter,f
  5570  1456  2C47               	goto	l2364
  5571  1457                     l2366:	
  5572  1457  0873               	movf	___llmod@divisor+3,w
  5573  1458  0277               	subwf	___llmod@dividend+3,w
  5574  1459  1D03               	skipz
  5575  145A  2C65               	goto	u3325
  5576  145B  0872               	movf	___llmod@divisor+2,w
  5577  145C  0276               	subwf	___llmod@dividend+2,w
  5578  145D  1D03               	skipz
  5579  145E  2C65               	goto	u3325
  5580  145F  0871               	movf	___llmod@divisor+1,w
  5581  1460  0275               	subwf	___llmod@dividend+1,w
  5582  1461  1D03               	skipz
  5583  1462  2C65               	goto	u3325
  5584  1463  0870               	movf	___llmod@divisor,w
  5585  1464  0274               	subwf	___llmod@dividend,w
  5586  1465                     u3325:	
  5587  1465  1C03               	skipc
  5588  1466  2C75               	goto	l2370
  5589  1467  0870               	movf	___llmod@divisor,w
  5590  1468  02F4               	subwf	___llmod@dividend,f
  5591  1469  0871               	movf	___llmod@divisor+1,w
  5592  146A  1C03               	skipc
  5593  146B  0F71               	incfsz	___llmod@divisor+1,w
  5594  146C  02F5               	subwf	___llmod@dividend+1,f
  5595  146D  0872               	movf	___llmod@divisor+2,w
  5596  146E  1C03               	skipc
  5597  146F  0F72               	incfsz	___llmod@divisor+2,w
  5598  1470  02F6               	subwf	___llmod@dividend+2,f
  5599  1471  0873               	movf	___llmod@divisor+3,w
  5600  1472  1C03               	skipc
  5601  1473  0F73               	incfsz	___llmod@divisor+3,w
  5602  1474  02F7               	subwf	___llmod@dividend+3,f
  5603  1475                     l2370:	
  5604  1475  3001               	movlw	1
  5605  1476                     u3335:	
  5606  1476  1003               	clrc
  5607  1477  0CF3               	rrf	___llmod@divisor+3,f
  5608  1478  0CF2               	rrf	___llmod@divisor+2,f
  5609  1479  0CF1               	rrf	___llmod@divisor+1,f
  5610  147A  0CF0               	rrf	___llmod@divisor,f
  5611  147B  3EFF               	addlw	-1
  5612  147C  1D03               	skipz
  5613  147D  2C76               	goto	u3335
  5614  147E  3001               	movlw	1
  5615  147F  02F9               	subwf	___llmod@counter,f
  5616  1480  1D03               	btfss	3,2
  5617  1481  2C57               	goto	l2366
  5618  1482                     l2374:	
  5619  1482  0877               	movf	___llmod@dividend+3,w
  5620  1483  00F3               	movwf	?___llmod+3
  5621  1484  0876               	movf	___llmod@dividend+2,w
  5622  1485  00F2               	movwf	?___llmod+2
  5623  1486  0875               	movf	___llmod@dividend+1,w
  5624  1487  00F1               	movwf	?___llmod+1
  5625  1488  0874               	movf	___llmod@dividend,w
  5626  1489  00F0               	movwf	?___llmod
  5627  148A  0008               	return
  5628  148B                     __end_of___llmod:	
  5629                           
  5630                           	psect	text13
  5631  1545                     __ptext13:	
  5632 ;; *************** function ___lldiv *****************
  5633 ;; Defined at:
  5634 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  divisor         4    0[COMMON] unsigned long 
  5637 ;;  dividend        4    4[COMMON] unsigned long 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  quotient        4    9[COMMON] unsigned long 
  5640 ;;  counter         1   13[COMMON] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  4    0[COMMON] unsigned long 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5650 ;;      Params:         8       0       0       0       0
  5651 ;;      Locals:         5       0       0       0       0
  5652 ;;      Temps:          1       0       0       0       0
  5653 ;;      Totals:        14       0       0       0       0
  5654 ;;Total ram usage:       14 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_sprintf
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function ___lldiv
  5665  1545                     ___lldiv:	
  5666                           
  5667                           ;incstack = 0
  5668                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5669  1545  3000               	movlw	0
  5670  1546  00FC               	movwf	___lldiv@quotient+3
  5671  1547  3000               	movlw	0
  5672  1548  00FB               	movwf	___lldiv@quotient+2
  5673  1549  3000               	movlw	0
  5674  154A  00FA               	movwf	___lldiv@quotient+1
  5675  154B  3000               	movlw	0
  5676  154C  00F9               	movwf	___lldiv@quotient
  5677  154D  0873               	movf	___lldiv@divisor+3,w
  5678  154E  0472               	iorwf	___lldiv@divisor+2,w
  5679  154F  0471               	iorwf	___lldiv@divisor+1,w
  5680  1550  0470               	iorwf	___lldiv@divisor,w
  5681  1551  1903               	skipnz
  5682  1552  2D9A               	goto	l2354
  5683  1553  01FD               	clrf	___lldiv@counter
  5684  1554  0AFD               	incf	___lldiv@counter,f
  5685  1555                     l2340:	
  5686  1555  1BF3               	btfsc	___lldiv@divisor+3,7
  5687  1556  2D65               	goto	l2342
  5688  1557  3001               	movlw	1
  5689  1558  00F8               	movwf	??___lldiv
  5690  1559                     u3235:	
  5691  1559  1003               	clrc
  5692  155A  0DF0               	rlf	___lldiv@divisor,f
  5693  155B  0DF1               	rlf	___lldiv@divisor+1,f
  5694  155C  0DF2               	rlf	___lldiv@divisor+2,f
  5695  155D  0DF3               	rlf	___lldiv@divisor+3,f
  5696  155E  0BF8               	decfsz	??___lldiv,f
  5697  155F  2D59               	goto	u3235
  5698  1560  3001               	movlw	1
  5699  1561  00F8               	movwf	??___lldiv
  5700  1562  0878               	movf	??___lldiv,w
  5701  1563  07FD               	addwf	___lldiv@counter,f
  5702  1564  2D55               	goto	l2340
  5703  1565                     l2342:	
  5704  1565  3001               	movlw	1
  5705  1566  00F8               	movwf	??___lldiv
  5706  1567                     u3255:	
  5707  1567  1003               	clrc
  5708  1568  0DF9               	rlf	___lldiv@quotient,f
  5709  1569  0DFA               	rlf	___lldiv@quotient+1,f
  5710  156A  0DFB               	rlf	___lldiv@quotient+2,f
  5711  156B  0DFC               	rlf	___lldiv@quotient+3,f
  5712  156C  0BF8               	decfsz	??___lldiv,f
  5713  156D  2D67               	goto	u3255
  5714  156E  0873               	movf	___lldiv@divisor+3,w
  5715  156F  0277               	subwf	___lldiv@dividend+3,w
  5716  1570  1D03               	skipz
  5717  1571  2D7C               	goto	u3265
  5718  1572  0872               	movf	___lldiv@divisor+2,w
  5719  1573  0276               	subwf	___lldiv@dividend+2,w
  5720  1574  1D03               	skipz
  5721  1575  2D7C               	goto	u3265
  5722  1576  0871               	movf	___lldiv@divisor+1,w
  5723  1577  0275               	subwf	___lldiv@dividend+1,w
  5724  1578  1D03               	skipz
  5725  1579  2D7C               	goto	u3265
  5726  157A  0870               	movf	___lldiv@divisor,w
  5727  157B  0274               	subwf	___lldiv@dividend,w
  5728  157C                     u3265:	
  5729  157C  1C03               	skipc
  5730  157D  2D8D               	goto	l2350
  5731  157E  0870               	movf	___lldiv@divisor,w
  5732  157F  02F4               	subwf	___lldiv@dividend,f
  5733  1580  0871               	movf	___lldiv@divisor+1,w
  5734  1581  1C03               	skipc
  5735  1582  0F71               	incfsz	___lldiv@divisor+1,w
  5736  1583  02F5               	subwf	___lldiv@dividend+1,f
  5737  1584  0872               	movf	___lldiv@divisor+2,w
  5738  1585  1C03               	skipc
  5739  1586  0F72               	incfsz	___lldiv@divisor+2,w
  5740  1587  02F6               	subwf	___lldiv@dividend+2,f
  5741  1588  0873               	movf	___lldiv@divisor+3,w
  5742  1589  1C03               	skipc
  5743  158A  0F73               	incfsz	___lldiv@divisor+3,w
  5744  158B  02F7               	subwf	___lldiv@dividend+3,f
  5745  158C  1479               	bsf	___lldiv@quotient,0
  5746  158D                     l2350:	
  5747  158D  3001               	movlw	1
  5748  158E                     u3275:	
  5749  158E  1003               	clrc
  5750  158F  0CF3               	rrf	___lldiv@divisor+3,f
  5751  1590  0CF2               	rrf	___lldiv@divisor+2,f
  5752  1591  0CF1               	rrf	___lldiv@divisor+1,f
  5753  1592  0CF0               	rrf	___lldiv@divisor,f
  5754  1593  3EFF               	addlw	-1
  5755  1594  1D03               	skipz
  5756  1595  2D8E               	goto	u3275
  5757  1596  3001               	movlw	1
  5758  1597  02FD               	subwf	___lldiv@counter,f
  5759  1598  1D03               	btfss	3,2
  5760  1599  2D65               	goto	l2342
  5761  159A                     l2354:	
  5762  159A  087C               	movf	___lldiv@quotient+3,w
  5763  159B  00F3               	movwf	?___lldiv+3
  5764  159C  087B               	movf	___lldiv@quotient+2,w
  5765  159D  00F2               	movwf	?___lldiv+2
  5766  159E  087A               	movf	___lldiv@quotient+1,w
  5767  159F  00F1               	movwf	?___lldiv+1
  5768  15A0  0879               	movf	___lldiv@quotient,w
  5769  15A1  00F0               	movwf	?___lldiv
  5770  15A2  0008               	return
  5771  15A3                     __end_of___lldiv:	
  5772                           
  5773                           	psect	text14
  5774  0801                     __ptext14:	
  5775 ;; *************** function ___fttol *****************
  5776 ;; Defined at:
  5777 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;  f1              3   32[BANK0 ] float 
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  lval            4   41[BANK0 ] unsigned long 
  5782 ;;  exp1            1   45[BANK0 ] unsigned char 
  5783 ;;  sign1           1   40[BANK0 ] unsigned char 
  5784 ;; Return value:  Size  Location     Type
  5785 ;;                  4   32[BANK0 ] long 
  5786 ;; Registers used:
  5787 ;;		wreg, status,2, status,0
  5788 ;; Tracked objects:
  5789 ;;		On entry : 0/0
  5790 ;;		On exit  : 0/0
  5791 ;;		Unchanged: 0/0
  5792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5793 ;;      Params:         0       4       0       0       0
  5794 ;;      Locals:         0       6       0       0       0
  5795 ;;      Temps:          0       4       0       0       0
  5796 ;;      Totals:         0      14       0       0       0
  5797 ;;Total ram usage:       14 bytes
  5798 ;; Hardware stack levels used:    1
  5799 ;; This function calls:
  5800 ;;		Nothing
  5801 ;; This function is called by:
  5802 ;;		_sprintf
  5803 ;; This function uses a non-reentrant model
  5804 ;;
  5805                           
  5806                           
  5807                           ;psect for function ___fttol
  5808  0801                     ___fttol:	
  5809                           
  5810                           ;incstack = 0
  5811                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5812  0801  1283               	bcf	3,5	;RP0=0, select bank0
  5813  0802  1303               	bcf	3,6	;RP1=0, select bank0
  5814  0803  0840               	movf	___fttol@f1,w
  5815  0804  00C4               	movwf	??___fttol
  5816  0805  0841               	movf	___fttol@f1+1,w
  5817  0806  00C5               	movwf	??___fttol+1
  5818  0807  0842               	movf	___fttol@f1+2,w
  5819  0808  00C6               	movwf	??___fttol+2
  5820  0809  1003               	clrc
  5821  080A  0D45               	rlf	??___fttol+1,w
  5822  080B  0D46               	rlf	??___fttol+2,w
  5823  080C  00C7               	movwf	??___fttol+3
  5824  080D  0847               	movf	??___fttol+3,w
  5825  080E  00CD               	movwf	___fttol@exp1
  5826  080F  08CD               	movf	___fttol@exp1,f
  5827  0810  1D03               	skipz
  5828  0811  281B               	goto	l2296
  5829  0812  3000               	movlw	0
  5830  0813  00C3               	movwf	?___fttol+3
  5831  0814  3000               	movlw	0
  5832  0815  00C2               	movwf	?___fttol+2
  5833  0816  3000               	movlw	0
  5834  0817  00C1               	movwf	?___fttol+1
  5835  0818  3000               	movlw	0
  5836  0819  00C0               	movwf	?___fttol
  5837  081A  0008               	return
  5838  081B                     l2296:	
  5839  081B  0840               	movf	___fttol@f1,w
  5840  081C  00C4               	movwf	??___fttol
  5841  081D  0841               	movf	___fttol@f1+1,w
  5842  081E  00C5               	movwf	??___fttol+1
  5843  081F  0842               	movf	___fttol@f1+2,w
  5844  0820  00C6               	movwf	??___fttol+2
  5845  0821  3017               	movlw	23
  5846  0822                     u3135:	
  5847  0822  1003               	clrc
  5848  0823  0CC6               	rrf	??___fttol+2,f
  5849  0824  0CC5               	rrf	??___fttol+1,f
  5850  0825  0CC4               	rrf	??___fttol,f
  5851  0826  3EFF               	addlw	-1
  5852  0827  1D03               	skipz
  5853  0828  2822               	goto	u3135
  5854  0829  0844               	movf	??___fttol,w
  5855  082A  00C7               	movwf	??___fttol+3
  5856  082B  0847               	movf	??___fttol+3,w
  5857  082C  00C8               	movwf	___fttol@sign1
  5858  082D  17C1               	bsf	___fttol@f1+1,7
  5859  082E  30FF               	movlw	255
  5860  082F  05C0               	andwf	___fttol@f1,f
  5861  0830  30FF               	movlw	255
  5862  0831  05C1               	andwf	___fttol@f1+1,f
  5863  0832  3000               	movlw	0
  5864  0833  05C2               	andwf	___fttol@f1+2,f
  5865  0834  0840               	movf	___fttol@f1,w
  5866  0835  00C9               	movwf	___fttol@lval
  5867  0836  0841               	movf	___fttol@f1+1,w
  5868  0837  00CA               	movwf	___fttol@lval+1
  5869  0838  0842               	movf	___fttol@f1+2,w
  5870  0839  00CB               	movwf	___fttol@lval+2
  5871  083A  01CC               	clrf	___fttol@lval+3
  5872  083B  308E               	movlw	142
  5873  083C  02CD               	subwf	___fttol@exp1,f
  5874  083D  1FCD               	btfss	___fttol@exp1,7
  5875  083E  285D               	goto	l2316
  5876  083F  084D               	movf	___fttol@exp1,w
  5877  0840  3A80               	xorlw	128
  5878  0841  3E8F               	addlw	143
  5879  0842  1803               	skipnc
  5880  0843  284D               	goto	l2314
  5881  0844  3000               	movlw	0
  5882  0845  00C3               	movwf	?___fttol+3
  5883  0846  3000               	movlw	0
  5884  0847  00C2               	movwf	?___fttol+2
  5885  0848  3000               	movlw	0
  5886  0849  00C1               	movwf	?___fttol+1
  5887  084A  3000               	movlw	0
  5888  084B  00C0               	movwf	?___fttol
  5889  084C  0008               	return
  5890  084D                     l2314:	
  5891  084D  3001               	movlw	1
  5892  084E                     u3165:	
  5893  084E  1003               	clrc
  5894  084F  0CCC               	rrf	___fttol@lval+3,f
  5895  0850  0CCB               	rrf	___fttol@lval+2,f
  5896  0851  0CCA               	rrf	___fttol@lval+1,f
  5897  0852  0CC9               	rrf	___fttol@lval,f
  5898  0853  3EFF               	addlw	-1
  5899  0854  1D03               	skipz
  5900  0855  284E               	goto	u3165
  5901  0856  3001               	movlw	1
  5902  0857  00C4               	movwf	??___fttol
  5903  0858  0844               	movf	??___fttol,w
  5904  0859  07CD               	addwf	___fttol@exp1,f
  5905  085A  1903               	btfsc	3,2
  5906  085B  2878               	goto	l2326
  5907  085C  284D               	goto	l2314
  5908  085D                     l2316:	
  5909  085D  3018               	movlw	24
  5910  085E  024D               	subwf	___fttol@exp1,w
  5911  085F  1C03               	skipc
  5912  0860  2875               	goto	l2324
  5913  0861  3000               	movlw	0
  5914  0862  00C3               	movwf	?___fttol+3
  5915  0863  3000               	movlw	0
  5916  0864  00C2               	movwf	?___fttol+2
  5917  0865  3000               	movlw	0
  5918  0866  00C1               	movwf	?___fttol+1
  5919  0867  3000               	movlw	0
  5920  0868  00C0               	movwf	?___fttol
  5921  0869  0008               	return
  5922  086A                     l2322:	
  5923  086A  3001               	movlw	1
  5924  086B  00C4               	movwf	??___fttol
  5925  086C                     u3195:	
  5926  086C  1003               	clrc
  5927  086D  0DC9               	rlf	___fttol@lval,f
  5928  086E  0DCA               	rlf	___fttol@lval+1,f
  5929  086F  0DCB               	rlf	___fttol@lval+2,f
  5930  0870  0DCC               	rlf	___fttol@lval+3,f
  5931  0871  0BC4               	decfsz	??___fttol,f
  5932  0872  286C               	goto	u3195
  5933  0873  3001               	movlw	1
  5934  0874  02CD               	subwf	___fttol@exp1,f
  5935  0875                     l2324:	
  5936  0875  08CD               	movf	___fttol@exp1,f
  5937  0876  1D03               	skipz
  5938  0877  286A               	goto	l2322
  5939  0878                     l2326:	
  5940  0878  0848               	movf	___fttol@sign1,w
  5941  0879  1903               	btfsc	3,2
  5942  087A  2886               	goto	l2330
  5943  087B  09C9               	comf	___fttol@lval,f
  5944  087C  09CA               	comf	___fttol@lval+1,f
  5945  087D  09CB               	comf	___fttol@lval+2,f
  5946  087E  09CC               	comf	___fttol@lval+3,f
  5947  087F  0AC9               	incf	___fttol@lval,f
  5948  0880  1903               	skipnz
  5949  0881  0ACA               	incf	___fttol@lval+1,f
  5950  0882  1903               	skipnz
  5951  0883  0ACB               	incf	___fttol@lval+2,f
  5952  0884  1903               	skipnz
  5953  0885  0ACC               	incf	___fttol@lval+3,f
  5954  0886                     l2330:	
  5955  0886  084C               	movf	___fttol@lval+3,w
  5956  0887  00C3               	movwf	?___fttol+3
  5957  0888  084B               	movf	___fttol@lval+2,w
  5958  0889  00C2               	movwf	?___fttol+2
  5959  088A  084A               	movf	___fttol@lval+1,w
  5960  088B  00C1               	movwf	?___fttol+1
  5961  088C  0849               	movf	___fttol@lval,w
  5962  088D  00C0               	movwf	?___fttol
  5963  088E  0008               	return
  5964  088F                     __end_of___fttol:	
  5965                           
  5966                           	psect	text15
  5967  12C2                     __ptext15:	
  5968 ;; *************** function ___ftsub *****************
  5969 ;; Defined at:
  5970 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  f2              3   52[BANK0 ] float 
  5973 ;;  f1              3   55[BANK0 ] float 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  3   52[BANK0 ] float 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0, pclath, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5985 ;;      Params:         0       6       0       0       0
  5986 ;;      Locals:         0       0       0       0       0
  5987 ;;      Temps:          0       0       0       0       0
  5988 ;;      Totals:         0       6       0       0       0
  5989 ;;Total ram usage:        6 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    2
  5992 ;; This function calls:
  5993 ;;		___ftadd
  5994 ;; This function is called by:
  5995 ;;		_sprintf
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           
  6000                           ;psect for function ___ftsub
  6001  12C2                     ___ftsub:	
  6002                           
  6003                           ;incstack = 0
  6004                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6005  12C2  3080               	movlw	128
  6006  12C3  1283               	bcf	3,5	;RP0=0, select bank0
  6007  12C4  1303               	bcf	3,6	;RP1=0, select bank0
  6008  12C5  06D6               	xorwf	___ftsub@f2+2,f
  6009  12C6  0857               	movf	___ftsub@f1,w
  6010  12C7  00C7               	movwf	___ftadd@f1
  6011  12C8  0858               	movf	___ftsub@f1+1,w
  6012  12C9  00C8               	movwf	___ftadd@f1+1
  6013  12CA  0859               	movf	___ftsub@f1+2,w
  6014  12CB  00C9               	movwf	___ftadd@f1+2
  6015  12CC  0854               	movf	___ftsub@f2,w
  6016  12CD  00CA               	movwf	___ftadd@f2
  6017  12CE  0855               	movf	___ftsub@f2+1,w
  6018  12CF  00CB               	movwf	___ftadd@f2+1
  6019  12D0  0856               	movf	___ftsub@f2+2,w
  6020  12D1  00CC               	movwf	___ftadd@f2+2
  6021  12D2  120A  158A  208F   	fcall	___ftadd
  6022  12D5  1283               	bcf	3,5	;RP0=0, select bank0
  6023  12D6  1303               	bcf	3,6	;RP1=0, select bank0
  6024  12D7  0847               	movf	?___ftadd,w
  6025  12D8  00D4               	movwf	?___ftsub
  6026  12D9  0848               	movf	?___ftadd+1,w
  6027  12DA  00D5               	movwf	?___ftsub+1
  6028  12DB  0849               	movf	?___ftadd+2,w
  6029  12DC  00D6               	movwf	?___ftsub+2
  6030  12DD  0008               	return
  6031  12DE                     __end_of___ftsub:	
  6032                           
  6033                           	psect	text16
  6034  1208                     __ptext16:	
  6035 ;; *************** function ___ftneg *****************
  6036 ;; Defined at:
  6037 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  f1              3    0[COMMON] float 
  6040 ;; Auto vars:     Size  Location     Type
  6041 ;;		None
  6042 ;; Return value:  Size  Location     Type
  6043 ;;                  3    0[COMMON] float 
  6044 ;; Registers used:
  6045 ;;		wreg
  6046 ;; Tracked objects:
  6047 ;;		On entry : 0/0
  6048 ;;		On exit  : 0/0
  6049 ;;		Unchanged: 0/0
  6050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6051 ;;      Params:         3       0       0       0       0
  6052 ;;      Locals:         0       0       0       0       0
  6053 ;;      Temps:          0       0       0       0       0
  6054 ;;      Totals:         3       0       0       0       0
  6055 ;;Total ram usage:        3 bytes
  6056 ;; Hardware stack levels used:    1
  6057 ;; This function calls:
  6058 ;;		Nothing
  6059 ;; This function is called by:
  6060 ;;		_sprintf
  6061 ;; This function uses a non-reentrant model
  6062 ;;
  6063                           
  6064                           
  6065                           ;psect for function ___ftneg
  6066  1208                     ___ftneg:	
  6067                           
  6068                           ;incstack = 0
  6069                           ; Regs used in ___ftneg: [wreg]
  6070  1208  0872               	movf	___ftneg@f1+2,w
  6071  1209  0471               	iorwf	___ftneg@f1+1,w
  6072  120A  0470               	iorwf	___ftneg@f1,w
  6073  120B  1903               	skipnz
  6074  120C  0008               	return
  6075  120D  3080               	movlw	128
  6076  120E  06F2               	xorwf	___ftneg@f1+2,f
  6077  120F  0008               	return
  6078  1210                     __end_of___ftneg:	
  6079                           
  6080                           	psect	text17
  6081  148B                     __ptext17:	
  6082 ;; *************** function ___ftge *****************
  6083 ;; Defined at:
  6084 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  ff1             3    0[COMMON] float 
  6087 ;;  ff2             3    3[COMMON] float 
  6088 ;; Auto vars:     Size  Location     Type
  6089 ;;		None
  6090 ;; Return value:  Size  Location     Type
  6091 ;;		None               void
  6092 ;; Registers used:
  6093 ;;		wreg, status,2, status,0
  6094 ;; Tracked objects:
  6095 ;;		On entry : 0/0
  6096 ;;		On exit  : 0/0
  6097 ;;		Unchanged: 0/0
  6098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6099 ;;      Params:         6       0       0       0       0
  6100 ;;      Locals:         0       0       0       0       0
  6101 ;;      Temps:          6       0       0       0       0
  6102 ;;      Totals:        12       0       0       0       0
  6103 ;;Total ram usage:       12 bytes
  6104 ;; Hardware stack levels used:    1
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_sprintf
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           
  6113                           ;psect for function ___ftge
  6114  148B                     ___ftge:	
  6115                           
  6116                           ;incstack = 0
  6117                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6118  148B  1FF2               	btfss	___ftge@ff1+2,7
  6119  148C  2CB2               	goto	l2260
  6120  148D  3000               	movlw	0
  6121  148E  00F6               	movwf	??___ftge
  6122  148F  3000               	movlw	0
  6123  1490  00F7               	movwf	??___ftge+1
  6124  1491  3080               	movlw	128
  6125  1492  00F8               	movwf	??___ftge+2
  6126  1493  0970               	comf	___ftge@ff1,w
  6127  1494  00F9               	movwf	??___ftge+3
  6128  1495  0971               	comf	___ftge@ff1+1,w
  6129  1496  00FA               	movwf	??___ftge+4
  6130  1497  0972               	comf	___ftge@ff1+2,w
  6131  1498  00FB               	movwf	??___ftge+5
  6132  1499  0AF9               	incf	??___ftge+3,f
  6133  149A  1903               	skipnz
  6134  149B  0AFA               	incf	??___ftge+4,f
  6135  149C  1903               	skipnz
  6136  149D  0AFB               	incf	??___ftge+5,f
  6137  149E  0879               	movf	??___ftge+3,w
  6138  149F  07F6               	addwf	??___ftge,f
  6139  14A0  087A               	movf	??___ftge+4,w
  6140  14A1  1803               	skipnc
  6141  14A2  0F7A               	incfsz	??___ftge+4,w
  6142  14A3  2CA5               	goto	u3071
  6143  14A4  2CA6               	goto	u3072
  6144  14A5                     u3071:	
  6145  14A5  07F7               	addwf	??___ftge+1,f
  6146  14A6                     u3072:	
  6147  14A6  087B               	movf	??___ftge+5,w
  6148  14A7  1803               	skipnc
  6149  14A8  0F7B               	incfsz	??___ftge+5,w
  6150  14A9  2CAB               	goto	u3073
  6151  14AA  2CAC               	goto	u3074
  6152  14AB                     u3073:	
  6153  14AB  07F8               	addwf	??___ftge+2,f
  6154  14AC                     u3074:	
  6155  14AC  0876               	movf	??___ftge,w
  6156  14AD  00F0               	movwf	___ftge@ff1
  6157  14AE  0877               	movf	??___ftge+1,w
  6158  14AF  00F1               	movwf	___ftge@ff1+1
  6159  14B0  0878               	movf	??___ftge+2,w
  6160  14B1  00F2               	movwf	___ftge@ff1+2
  6161  14B2                     l2260:	
  6162  14B2  1FF5               	btfss	___ftge@ff2+2,7
  6163  14B3  2CD9               	goto	l2264
  6164  14B4  3000               	movlw	0
  6165  14B5  00F6               	movwf	??___ftge
  6166  14B6  3000               	movlw	0
  6167  14B7  00F7               	movwf	??___ftge+1
  6168  14B8  3080               	movlw	128
  6169  14B9  00F8               	movwf	??___ftge+2
  6170  14BA  0973               	comf	___ftge@ff2,w
  6171  14BB  00F9               	movwf	??___ftge+3
  6172  14BC  0974               	comf	___ftge@ff2+1,w
  6173  14BD  00FA               	movwf	??___ftge+4
  6174  14BE  0975               	comf	___ftge@ff2+2,w
  6175  14BF  00FB               	movwf	??___ftge+5
  6176  14C0  0AF9               	incf	??___ftge+3,f
  6177  14C1  1903               	skipnz
  6178  14C2  0AFA               	incf	??___ftge+4,f
  6179  14C3  1903               	skipnz
  6180  14C4  0AFB               	incf	??___ftge+5,f
  6181  14C5  0879               	movf	??___ftge+3,w
  6182  14C6  07F6               	addwf	??___ftge,f
  6183  14C7  087A               	movf	??___ftge+4,w
  6184  14C8  1803               	skipnc
  6185  14C9  0F7A               	incfsz	??___ftge+4,w
  6186  14CA  2CCC               	goto	u3091
  6187  14CB  2CCD               	goto	u3092
  6188  14CC                     u3091:	
  6189  14CC  07F7               	addwf	??___ftge+1,f
  6190  14CD                     u3092:	
  6191  14CD  087B               	movf	??___ftge+5,w
  6192  14CE  1803               	skipnc
  6193  14CF  0F7B               	incfsz	??___ftge+5,w
  6194  14D0  2CD2               	goto	u3093
  6195  14D1  2CD3               	goto	u3094
  6196  14D2                     u3093:	
  6197  14D2  07F8               	addwf	??___ftge+2,f
  6198  14D3                     u3094:	
  6199  14D3  0876               	movf	??___ftge,w
  6200  14D4  00F3               	movwf	___ftge@ff2
  6201  14D5  0877               	movf	??___ftge+1,w
  6202  14D6  00F4               	movwf	___ftge@ff2+1
  6203  14D7  0878               	movf	??___ftge+2,w
  6204  14D8  00F5               	movwf	___ftge@ff2+2
  6205  14D9                     l2264:	
  6206  14D9  3080               	movlw	128
  6207  14DA  06F2               	xorwf	___ftge@ff1+2,f
  6208  14DB  3080               	movlw	128
  6209  14DC  06F5               	xorwf	___ftge@ff2+2,f
  6210  14DD  0875               	movf	___ftge@ff2+2,w
  6211  14DE  0272               	subwf	___ftge@ff1+2,w
  6212  14DF  1D03               	skipz
  6213  14E0  0008               	return
  6214  14E1  0874               	movf	___ftge@ff2+1,w
  6215  14E2  0271               	subwf	___ftge@ff1+1,w
  6216  14E3  1D03               	skipz
  6217  14E4  0008               	return
  6218  14E5  0873               	movf	___ftge@ff2,w
  6219  14E6  0270               	subwf	___ftge@ff1,w
  6220  14E7  0008               	return
  6221  14E8                     __end_of___ftge:	
  6222                           
  6223                           	psect	text18
  6224  121E                     __ptext18:	
  6225 ;; *************** function _init_I2C_Master *****************
  6226 ;; Defined at:
  6227 ;;		line 223 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6228 ;; Parameters:    Size  Location     Type
  6229 ;;		None
  6230 ;; Auto vars:     Size  Location     Type
  6231 ;;		None
  6232 ;; Return value:  Size  Location     Type
  6233 ;;		None               void
  6234 ;; Registers used:
  6235 ;;		wreg, status,2
  6236 ;; Tracked objects:
  6237 ;;		On entry : 0/0
  6238 ;;		On exit  : 0/0
  6239 ;;		Unchanged: 0/0
  6240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6241 ;;      Params:         0       0       0       0       0
  6242 ;;      Locals:         0       0       0       0       0
  6243 ;;      Temps:          0       0       0       0       0
  6244 ;;      Totals:         0       0       0       0       0
  6245 ;;Total ram usage:        0 bytes
  6246 ;; Hardware stack levels used:    1
  6247 ;; This function calls:
  6248 ;;		Nothing
  6249 ;; This function is called by:
  6250 ;;		_main
  6251 ;; This function uses a non-reentrant model
  6252 ;;
  6253                           
  6254                           
  6255                           ;psect for function _init_I2C_Master
  6256  121E                     _init_I2C_Master:	
  6257                           
  6258                           ;BajanDecierdo_7-3.c: 225: TRISC = 0b00011000;
  6259                           
  6260                           ;incstack = 0
  6261                           ; Regs used in _init_I2C_Master: [wreg+status,2]
  6262  121E  3018               	movlw	24
  6263  121F  1683               	bsf	3,5	;RP0=1, select bank1
  6264  1220  1303               	bcf	3,6	;RP1=0, select bank1
  6265  1221  0087               	movwf	7	;volatile
  6266                           
  6267                           ;BajanDecierdo_7-3.c: 226: SSPCON = 0x28;
  6268  1222  3028               	movlw	40
  6269  1223  1283               	bcf	3,5	;RP0=0, select bank0
  6270  1224  1303               	bcf	3,6	;RP1=0, select bank0
  6271  1225  0094               	movwf	20	;volatile
  6272                           
  6273                           ;BajanDecierdo_7-3.c: 227: SSPCON2 = 0x00;
  6274  1226  1683               	bsf	3,5	;RP0=1, select bank1
  6275  1227  1303               	bcf	3,6	;RP1=0, select bank1
  6276  1228  0191               	clrf	17	;volatile
  6277                           
  6278                           ;BajanDecierdo_7-3.c: 228: SSPSTAT = 0x00;
  6279  1229  0194               	clrf	20	;volatile
  6280                           
  6281                           ;BajanDecierdo_7-3.c: 229: SSPADD = 0x09;
  6282  122A  3009               	movlw	9
  6283  122B  0093               	movwf	19	;volatile
  6284  122C  0008               	return
  6285  122D                     __end_of_init_I2C_Master:	
  6286                           
  6287                           	psect	text19
  6288  1366                     __ptext19:	
  6289 ;; *************** function _initLCD *****************
  6290 ;; Defined at:
  6291 ;;		line 302 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;		None
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;		None               void
  6298 ;; Registers used:
  6299 ;;		wreg, status,2, status,0, pclath, cstack
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6305 ;;      Params:         0       0       0       0       0
  6306 ;;      Locals:         0       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0
  6308 ;;      Totals:         0       0       0       0       0
  6309 ;;Total ram usage:        0 bytes
  6310 ;; Hardware stack levels used:    1
  6311 ;; Hardware stack levels required when called:    2
  6312 ;; This function calls:
  6313 ;;		_delay
  6314 ;;		_instCTRL
  6315 ;; This function is called by:
  6316 ;;		_main
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           
  6321                           ;psect for function _initLCD
  6322  1366                     _initLCD:	
  6323                           
  6324                           ;BajanDecierdo_7-3.c: 304: instCTRL(0x3C);
  6325                           
  6326                           ;incstack = 0
  6327                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  6328  1366  303C               	movlw	60
  6329  1367  160A  118A  2251  160A  118A  	fcall	_instCTRL
  6330                           
  6331                           ;BajanDecierdo_7-3.c: 305: delay(20);
  6332  136C  3014               	movlw	20
  6333  136D  00F0               	movwf	delay@overflow
  6334  136E  3000               	movlw	0
  6335  136F  00F1               	movwf	delay@overflow+1
  6336  1370  160A  118A  22A6  160A  118A  	fcall	_delay
  6337                           
  6338                           ;BajanDecierdo_7-3.c: 306: instCTRL(0x0C);
  6339  1375  300C               	movlw	12
  6340  1376  160A  118A  2251  160A  118A  	fcall	_instCTRL
  6341                           
  6342                           ;BajanDecierdo_7-3.c: 307: instCTRL(0x01);
  6343  137B  3001               	movlw	1
  6344  137C  160A  118A  2251  160A  118A  	fcall	_instCTRL
  6345                           
  6346                           ;BajanDecierdo_7-3.c: 308: instCTRL(0x06);
  6347  1381  3006               	movlw	6
  6348  1382  160A  118A  2251  160A  118A  	fcall	_instCTRL
  6349                           
  6350                           ;BajanDecierdo_7-3.c: 309: instCTRL(0x0F);
  6351  1387  300F               	movlw	15
  6352  1388  160A  118A  2251   	fcall	_instCTRL
  6353  138B  0008               	return
  6354  138C                     __end_of_initLCD:	
  6355                           
  6356                           	psect	text20
  6357  1251                     __ptext20:	
  6358 ;; *************** function _instCTRL *****************
  6359 ;; Defined at:
  6360 ;;		line 282 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  LCD_CMD         1    wreg     unsigned char 
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;  LCD_CMD         1    5[COMMON] unsigned char 
  6365 ;; Return value:  Size  Location     Type
  6366 ;;		None               void
  6367 ;; Registers used:
  6368 ;;		wreg, status,2, status,0, pclath, cstack
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6374 ;;      Params:         0       0       0       0       0
  6375 ;;      Locals:         1       0       0       0       0
  6376 ;;      Temps:          0       0       0       0       0
  6377 ;;      Totals:         1       0       0       0       0
  6378 ;;Total ram usage:        1 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; Hardware stack levels required when called:    1
  6381 ;; This function calls:
  6382 ;;		_delay
  6383 ;; This function is called by:
  6384 ;;		_main
  6385 ;;		_initLCD
  6386 ;; This function uses a non-reentrant model
  6387 ;;
  6388                           
  6389                           
  6390                           ;psect for function _instCTRL
  6391  1251                     _instCTRL:	
  6392                           
  6393                           ;incstack = 0
  6394                           ; Regs used in _instCTRL: [wreg+status,2+status,0+pclath+cstack]
  6395                           ;instCTRL@LCD_CMD stored from wreg
  6396  1251  00F5               	movwf	instCTRL@LCD_CMD
  6397                           
  6398                           ;BajanDecierdo_7-3.c: 284: PORTB = LCD_CMD;
  6399  1252  0875               	movf	instCTRL@LCD_CMD,w
  6400  1253  1283               	bcf	3,5	;RP0=0, select bank0
  6401  1254  1303               	bcf	3,6	;RP1=0, select bank0
  6402  1255  0086               	movwf	6	;volatile
  6403                           
  6404                           ;BajanDecierdo_7-3.c: 285: RC0 = 0;
  6405  1256  1007               	bcf	7,0	;volatile
  6406                           
  6407                           ;BajanDecierdo_7-3.c: 286: RC1 = 0;
  6408  1257  1087               	bcf	7,1	;volatile
  6409                           
  6410                           ;BajanDecierdo_7-3.c: 287: RC2 = 1;
  6411  1258  1507               	bsf	7,2	;volatile
  6412                           
  6413                           ;BajanDecierdo_7-3.c: 288: delay(20);
  6414  1259  3014               	movlw	20
  6415  125A  00F0               	movwf	delay@overflow
  6416  125B  3000               	movlw	0
  6417  125C  00F1               	movwf	delay@overflow+1
  6418  125D  160A  118A  22A6   	fcall	_delay
  6419                           
  6420                           ;BajanDecierdo_7-3.c: 289: RC2 = 0;
  6421  1260  1283               	bcf	3,5	;RP0=0, select bank0
  6422  1261  1303               	bcf	3,6	;RP1=0, select bank0
  6423  1262  1107               	bcf	7,2	;volatile
  6424  1263  0008               	return
  6425  1264                     __end_of_instCTRL:	
  6426                           
  6427                           	psect	text21
  6428  123E                     __ptext21:	
  6429 ;; *************** function _dataCTRL *****************
  6430 ;; Defined at:
  6431 ;;		line 292 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  LCD_DAT         1    wreg     unsigned char 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  LCD_DAT         1    5[COMMON] unsigned char 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;		None               void
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0, pclath, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6445 ;;      Params:         0       0       0       0       0
  6446 ;;      Locals:         1       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0
  6448 ;;      Totals:         1       0       0       0       0
  6449 ;;Total ram usage:        1 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    1
  6452 ;; This function calls:
  6453 ;;		_delay
  6454 ;; This function is called by:
  6455 ;;		_main
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function _dataCTRL
  6461  123E                     _dataCTRL:	
  6462                           
  6463                           ;incstack = 0
  6464                           ; Regs used in _dataCTRL: [wreg+status,2+status,0+pclath+cstack]
  6465                           ;dataCTRL@LCD_DAT stored from wreg
  6466  123E  00F5               	movwf	dataCTRL@LCD_DAT
  6467                           
  6468                           ;BajanDecierdo_7-3.c: 294: PORTB = LCD_DAT;
  6469  123F  0875               	movf	dataCTRL@LCD_DAT,w
  6470  1240  1283               	bcf	3,5	;RP0=0, select bank0
  6471  1241  1303               	bcf	3,6	;RP1=0, select bank0
  6472  1242  0086               	movwf	6	;volatile
  6473                           
  6474                           ;BajanDecierdo_7-3.c: 295: RC0 = 1;
  6475  1243  1407               	bsf	7,0	;volatile
  6476                           
  6477                           ;BajanDecierdo_7-3.c: 296: RC1 = 0;
  6478  1244  1087               	bcf	7,1	;volatile
  6479                           
  6480                           ;BajanDecierdo_7-3.c: 297: RC2 = 1;
  6481  1245  1507               	bsf	7,2	;volatile
  6482                           
  6483                           ;BajanDecierdo_7-3.c: 298: delay(20);
  6484  1246  3014               	movlw	20
  6485  1247  00F0               	movwf	delay@overflow
  6486  1248  3000               	movlw	0
  6487  1249  00F1               	movwf	delay@overflow+1
  6488  124A  160A  118A  22A6   	fcall	_delay
  6489                           
  6490                           ;BajanDecierdo_7-3.c: 299: RC2 = 0;
  6491  124D  1283               	bcf	3,5	;RP0=0, select bank0
  6492  124E  1303               	bcf	3,6	;RP1=0, select bank0
  6493  124F  1107               	bcf	7,2	;volatile
  6494  1250  0008               	return
  6495  1251                     __end_of_dataCTRL:	
  6496                           
  6497                           	psect	text22
  6498  12DE                     __ptext22:	
  6499 ;; *************** function _SHT21_SoftReset *****************
  6500 ;; Defined at:
  6501 ;;		line 366 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;		None               void
  6508 ;; Registers used:
  6509 ;;		wreg, status,2, status,0, pclath, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6515 ;;      Params:         0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0
  6517 ;;      Temps:          0       0       0       0       0
  6518 ;;      Totals:         0       0       0       0       0
  6519 ;;Total ram usage:        0 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    2
  6522 ;; This function calls:
  6523 ;;		_I2C_Send
  6524 ;;		_I2C_Start
  6525 ;;		_I2C_Stop
  6526 ;;		_delay
  6527 ;; This function is called by:
  6528 ;;		_main
  6529 ;; This function uses a non-reentrant model
  6530 ;;
  6531                           
  6532                           
  6533                           ;psect for function _SHT21_SoftReset
  6534  12DE                     _SHT21_SoftReset:	
  6535                           
  6536                           ;BajanDecierdo_7-3.c: 368: I2C_Start();
  6537                           
  6538                           ;incstack = 0
  6539                           ; Regs used in _SHT21_SoftReset: [wreg+status,2+status,0+pclath+cstack]
  6540  12DE  160A  118A  21F2  160A  118A  	fcall	_I2C_Start
  6541                           
  6542                           ;BajanDecierdo_7-3.c: 369: I2C_Send(I2C_ADDR_W);
  6543  12E3  3080               	movlw	128
  6544  12E4  120A  118A  2004  160A  118A  	fcall	_I2C_Send
  6545                           
  6546                           ;BajanDecierdo_7-3.c: 370: I2C_Send(SOFT_RESET);
  6547  12E9  30FE               	movlw	254
  6548  12EA  120A  118A  2004  160A  118A  	fcall	_I2C_Send
  6549                           
  6550                           ;BajanDecierdo_7-3.c: 371: I2C_Stop();
  6551  12EF  160A  118A  21F9  160A  118A  	fcall	_I2C_Stop
  6552                           
  6553                           ;BajanDecierdo_7-3.c: 372: delay(10);
  6554  12F4  300A               	movlw	10
  6555  12F5  00F0               	movwf	delay@overflow
  6556  12F6  3000               	movlw	0
  6557  12F7  00F1               	movwf	delay@overflow+1
  6558  12F8  160A  118A  22A6   	fcall	_delay
  6559  12FB  0008               	return
  6560  12FC                     __end_of_SHT21_SoftReset:	
  6561                           
  6562                           	psect	text23
  6563  128B                     __ptext23:	
  6564 ;; *************** function _SHT21_SetResolution *****************
  6565 ;; Defined at:
  6566 ;;		line 375 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6567 ;; Parameters:    Size  Location     Type
  6568 ;;		None
  6569 ;; Auto vars:     Size  Location     Type
  6570 ;;		None
  6571 ;; Return value:  Size  Location     Type
  6572 ;;		None               void
  6573 ;; Registers used:
  6574 ;;		wreg, status,2, status,0, pclath, cstack
  6575 ;; Tracked objects:
  6576 ;;		On entry : 0/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6580 ;;      Params:         0       0       0       0       0
  6581 ;;      Locals:         0       0       0       0       0
  6582 ;;      Temps:          0       0       0       0       0
  6583 ;;      Totals:         0       0       0       0       0
  6584 ;;Total ram usage:        0 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; Hardware stack levels required when called:    2
  6587 ;; This function calls:
  6588 ;;		_I2C_Send
  6589 ;;		_I2C_Start
  6590 ;;		_I2C_Stop
  6591 ;; This function is called by:
  6592 ;;		_main
  6593 ;; This function uses a non-reentrant model
  6594 ;;
  6595                           
  6596                           
  6597                           ;psect for function _SHT21_SetResolution
  6598  128B                     _SHT21_SetResolution:	
  6599                           
  6600                           ;BajanDecierdo_7-3.c: 377: I2C_Start();
  6601                           
  6602                           ;incstack = 0
  6603                           ; Regs used in _SHT21_SetResolution: [wreg+status,2+status,0+pclath+cstack]
  6604  128B  160A  118A  21F2  160A  118A  	fcall	_I2C_Start
  6605                           
  6606                           ;BajanDecierdo_7-3.c: 378: I2C_Send(I2C_ADDR_W);
  6607  1290  3080               	movlw	128
  6608  1291  120A  118A  2004  160A  118A  	fcall	_I2C_Send
  6609                           
  6610                           ;BajanDecierdo_7-3.c: 379: I2C_Send(USR_REG_WR);
  6611  1296  30E6               	movlw	230
  6612  1297  120A  118A  2004  160A  118A  	fcall	_I2C_Send
  6613                           
  6614                           ;BajanDecierdo_7-3.c: 380: I2C_Send(SHT21_RES_RH12_TEMP14);
  6615  129C  3000               	movlw	0
  6616  129D  120A  118A  2004  160A  118A  	fcall	_I2C_Send
  6617                           
  6618                           ;BajanDecierdo_7-3.c: 381: I2C_Stop();
  6619  12A2  160A  118A  21F9   	fcall	_I2C_Stop
  6620  12A5  0008               	return
  6621  12A6                     __end_of_SHT21_SetResolution:	
  6622                           
  6623                           	psect	text24
  6624  15A3                     __ptext24:	
  6625 ;; *************** function _SHT21_Measure *****************
  6626 ;; Defined at:
  6627 ;;		line 332 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  measureType     1    wreg     enum E1319
  6630 ;;  pMeasureand     1    5[COMMON] PTR struct .
  6631 ;;		 -> main@rawTemp(2), main@rawRH(2), 
  6632 ;; Auto vars:     Size  Location     Type
  6633 ;;  measureType     1   11[COMMON] enum E1319
  6634 ;;  data            2    9[COMMON] unsigned char [2]
  6635 ;;  error           1    8[COMMON] unsigned char 
  6636 ;;  checksum        1    7[COMMON] unsigned char 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1    wreg      unsigned char 
  6639 ;; Registers used:
  6640 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6646 ;;      Params:         1       0       0       0       0
  6647 ;;      Locals:         5       0       0       0       0
  6648 ;;      Temps:          1       0       0       0       0
  6649 ;;      Totals:         7       0       0       0       0
  6650 ;;Total ram usage:        7 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    2
  6653 ;; This function calls:
  6654 ;;		_I2C_Receive
  6655 ;;		_I2C_RepeatedStart
  6656 ;;		_I2C_Send
  6657 ;;		_I2C_Start
  6658 ;;		_I2C_Stop
  6659 ;;		_delay
  6660 ;; This function is called by:
  6661 ;;		_main
  6662 ;; This function uses a non-reentrant model
  6663 ;;
  6664                           
  6665                           
  6666                           ;psect for function _SHT21_Measure
  6667  15A3                     _SHT21_Measure:	
  6668                           
  6669                           ;incstack = 0
  6670                           ; Regs used in _SHT21_Measure: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6671                           ;SHT21_Measure@measureType stored from wreg
  6672  15A3  00FB               	movwf	SHT21_Measure@measureType
  6673                           
  6674                           ;BajanDecierdo_7-3.c: 334: u8t checksum;
  6675                           ;BajanDecierdo_7-3.c: 335: u8t error = 0;
  6676  15A4  01F8               	clrf	SHT21_Measure@error
  6677                           
  6678                           ;BajanDecierdo_7-3.c: 336: u8t data[2];
  6679                           ;BajanDecierdo_7-3.c: 339: I2C_Start();
  6680  15A5  160A  118A  21F2  160A  118A  	fcall	_I2C_Start
  6681                           
  6682                           ;BajanDecierdo_7-3.c: 341: I2C_Send(I2C_ADDR_W);
  6683  15AA  3080               	movlw	128
  6684  15AB  120A  118A  2004  160A  118A  	fcall	_I2C_Send
  6685                           
  6686                           ;BajanDecierdo_7-3.c: 343: switch (measureType)
  6687  15B0  2DBF               	goto	l2428
  6688  15B1                     l2422:	
  6689                           ;BajanDecierdo_7-3.c: 344: {
  6690                           ;BajanDecierdo_7-3.c: 345: case HUMIDITY:
  6691                           
  6692                           
  6693                           ;BajanDecierdo_7-3.c: 346: I2C_Send(SHT21_CMD_RH_HM);
  6694  15B1  30E5               	movlw	229
  6695  15B2  120A  118A  2004  160A  118A  	fcall	_I2C_Send
  6696                           
  6697                           ;BajanDecierdo_7-3.c: 347: break;
  6698  15B7  2DC7               	goto	l2430
  6699  15B8                     l2424:	
  6700                           ;BajanDecierdo_7-3.c: 348: case TEMPERATURE:
  6701                           
  6702                           
  6703                           ;BajanDecierdo_7-3.c: 349: I2C_Send(SHT21_CMD_TM_HM);
  6704  15B8  30E3               	movlw	227
  6705  15B9  120A  118A  2004  160A  118A  	fcall	_I2C_Send
  6706                           
  6707                           ;BajanDecierdo_7-3.c: 351: }
  6708                           
  6709                           ;BajanDecierdo_7-3.c: 350: break;
  6710  15BE  2DC7               	goto	l2430
  6711  15BF                     l2428:	
  6712  15BF  087B               	movf	SHT21_Measure@measureType,w
  6713                           
  6714                           ; Switch size 1, requested type "space"
  6715                           ; Number of cases is 2, Range of values is 0 to 1
  6716                           ; switch strategies available:
  6717                           ; Name         Instructions Cycles
  6718                           ; simple_byte            7     4 (average)
  6719                           ; direct_byte           14     8 (fixed)
  6720                           ; jumptable            260     6 (fixed)
  6721                           ;	Chosen strategy is simple_byte
  6722  15C0  3A00               	xorlw	0	; case 0
  6723  15C1  1903               	skipnz
  6724  15C2  2DB1               	goto	l2422
  6725  15C3  3A01               	xorlw	1	; case 1
  6726  15C4  1903               	skipnz
  6727  15C5  2DB8               	goto	l2424
  6728  15C6  2DC7               	goto	l2430
  6729  15C7                     l2430:	
  6730                           
  6731                           ;BajanDecierdo_7-3.c: 353: I2C_RepeatedStart();
  6732  15C7  160A  118A  21EB  160A  118A  	fcall	_I2C_RepeatedStart
  6733                           
  6734                           ;BajanDecierdo_7-3.c: 355: I2C_Send(I2C_ADDR_R);
  6735  15CC  3081               	movlw	129
  6736  15CD  120A  118A  2004  160A  118A  	fcall	_I2C_Send
  6737                           
  6738                           ;BajanDecierdo_7-3.c: 356: delay(15);
  6739  15D2  300F               	movlw	15
  6740  15D3  00F0               	movwf	delay@overflow
  6741  15D4  3000               	movlw	0
  6742  15D5  00F1               	movwf	delay@overflow+1
  6743  15D6  160A  118A  22A6  160A  118A  	fcall	_delay
  6744                           
  6745                           ;BajanDecierdo_7-3.c: 358: pMeasureand->s16.u8H = data[0] = I2C_Receive(1);
  6746  15DB  3001               	movlw	1
  6747  15DC  160A  118A  2340  160A  118A  	fcall	_I2C_Receive
  6748  15E1  00F9               	movwf	SHT21_Measure@data
  6749  15E2  00F6               	movwf	??_SHT21_Measure
  6750  15E3  0A75               	incf	SHT21_Measure@pMeasureand,w
  6751  15E4  0084               	movwf	4
  6752  15E5  0876               	movf	??_SHT21_Measure,w
  6753  15E6  1783               	bsf	3,7	;select IRP bank2
  6754  15E7  0080               	movwf	0
  6755                           
  6756                           ;BajanDecierdo_7-3.c: 359: pMeasureand->s16.u8L = data[1] = I2C_Receive(1);
  6757  15E8  3001               	movlw	1
  6758  15E9  160A  118A  2340  160A  118A  	fcall	_I2C_Receive
  6759  15EE  00FA               	movwf	SHT21_Measure@data+1
  6760  15EF  00F6               	movwf	??_SHT21_Measure
  6761  15F0  0875               	movf	SHT21_Measure@pMeasureand,w
  6762  15F1  0084               	movwf	4
  6763  15F2  0876               	movf	??_SHT21_Measure,w
  6764  15F3  1783               	bsf	3,7	;select IRP bank2
  6765  15F4  0080               	movwf	0
  6766                           
  6767                           ;BajanDecierdo_7-3.c: 360: checksum = I2C_Receive(0);
  6768  15F5  3000               	movlw	0
  6769  15F6  160A  118A  2340  160A  118A  	fcall	_I2C_Receive
  6770  15FB  00F6               	movwf	??_SHT21_Measure
  6771  15FC  0876               	movf	??_SHT21_Measure,w
  6772  15FD  00F7               	movwf	SHT21_Measure@checksum
  6773                           
  6774                           ;BajanDecierdo_7-3.c: 362: I2C_Stop();
  6775  15FE  160A  118A  21F9   	fcall	_I2C_Stop
  6776  1601  0008               	return
  6777  1602                     __end_of_SHT21_Measure:	
  6778                           ;BajanDecierdo_7-3.c: 363: return error;
  6779                           ;	Return value of _SHT21_Measure is never used
  6780                           
  6781                           
  6782                           	psect	text25
  6783  12A6                     __ptext25:	
  6784 ;; *************** function _delay *****************
  6785 ;; Defined at:
  6786 ;;		line 271 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  overflow        2    0[COMMON] int 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  i               2    3[COMMON] int 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;		None               void
  6793 ;; Registers used:
  6794 ;;		wreg, status,2
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6800 ;;      Params:         2       0       0       0       0
  6801 ;;      Locals:         2       0       0       0       0
  6802 ;;      Temps:          1       0       0       0       0
  6803 ;;      Totals:         5       0       0       0       0
  6804 ;;Total ram usage:        5 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_main
  6810 ;;		_instCTRL
  6811 ;;		_dataCTRL
  6812 ;;		_initLCD
  6813 ;;		_SHT21_Measure
  6814 ;;		_SHT21_SoftReset
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           
  6819                           ;psect for function _delay
  6820  12A6                     _delay:	
  6821                           
  6822                           ;BajanDecierdo_7-3.c: 273: int i;
  6823                           ;BajanDecierdo_7-3.c: 274: for (i = 0; i < overflow; i++)
  6824                           
  6825                           ;incstack = 0
  6826                           ; Regs used in _delay: [wreg+status,2]
  6827  12A6  01F3               	clrf	delay@i
  6828  12A7  01F4               	clrf	delay@i+1
  6829  12A8                     l123:	
  6830  12A8  0874               	movf	delay@i+1,w
  6831  12A9  3A80               	xorlw	128
  6832  12AA  00F2               	movwf	??_delay
  6833  12AB  0871               	movf	delay@overflow+1,w
  6834  12AC  3A80               	xorlw	128
  6835  12AD  0272               	subwf	??_delay,w
  6836  12AE  1D03               	skipz
  6837  12AF  2AB2               	goto	u2065
  6838  12B0  0870               	movf	delay@overflow,w
  6839  12B1  0273               	subwf	delay@i,w
  6840  12B2                     u2065:	
  6841  12B2  1803               	btfsc	3,0
  6842  12B3  0008               	return
  6843                           
  6844                           ;BajanDecierdo_7-3.c: 275: {
  6845                           ;BajanDecierdo_7-3.c: 276: TMR0 = 0x00;
  6846  12B4  1283               	bcf	3,5	;RP0=0, select bank0
  6847  12B5  1303               	bcf	3,6	;RP1=0, select bank0
  6848  12B6  0181               	clrf	1	;volatile
  6849  12B7                     l1796:	
  6850                           ;BajanDecierdo_7-3.c: 278: ;
  6851                           
  6852                           ;BajanDecierdo_7-3.c: 277: while (TMR0 < 0x64)
  6853                           
  6854  12B7  3064               	movlw	100
  6855  12B8  0201               	subwf	1,w	;volatile
  6856  12B9  1C03               	skipc
  6857  12BA  2AB7               	goto	l1796
  6858  12BB  3001               	movlw	1
  6859  12BC  07F3               	addwf	delay@i,f
  6860  12BD  1803               	skipnc
  6861  12BE  0AF4               	incf	delay@i+1,f
  6862  12BF  3000               	movlw	0
  6863  12C0  07F4               	addwf	delay@i+1,f
  6864  12C1  2AA8               	goto	l123
  6865  12C2                     __end_of_delay:	
  6866                           
  6867                           	psect	text26
  6868  11F9                     __ptext26:	
  6869 ;; *************** function _I2C_Stop *****************
  6870 ;; Defined at:
  6871 ;;		line 244 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;		None
  6874 ;; Auto vars:     Size  Location     Type
  6875 ;;		None
  6876 ;; Return value:  Size  Location     Type
  6877 ;;		None               void
  6878 ;; Registers used:
  6879 ;;		wreg, status,2, status,0, pclath, cstack
  6880 ;; Tracked objects:
  6881 ;;		On entry : 0/0
  6882 ;;		On exit  : 0/0
  6883 ;;		Unchanged: 0/0
  6884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6885 ;;      Params:         0       0       0       0       0
  6886 ;;      Locals:         0       0       0       0       0
  6887 ;;      Temps:          0       0       0       0       0
  6888 ;;      Totals:         0       0       0       0       0
  6889 ;;Total ram usage:        0 bytes
  6890 ;; Hardware stack levels used:    1
  6891 ;; Hardware stack levels required when called:    1
  6892 ;; This function calls:
  6893 ;;		_I2C_Wait
  6894 ;; This function is called by:
  6895 ;;		_SHT21_Measure
  6896 ;;		_SHT21_SoftReset
  6897 ;;		_SHT21_SetResolution
  6898 ;; This function uses a non-reentrant model
  6899 ;;
  6900                           
  6901                           
  6902                           ;psect for function _I2C_Stop
  6903  11F9                     _I2C_Stop:	
  6904                           
  6905                           ;BajanDecierdo_7-3.c: 246: I2C_Wait();
  6906                           
  6907                           ;incstack = 0
  6908                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  6909  11F9  160A  118A  2200   	fcall	_I2C_Wait
  6910                           
  6911                           ;BajanDecierdo_7-3.c: 247: PEN = 1;
  6912  11FC  1683               	bsf	3,5	;RP0=1, select bank1
  6913  11FD  1303               	bcf	3,6	;RP1=0, select bank1
  6914  11FE  1511               	bsf	17,2	;volatile
  6915  11FF  0008               	return
  6916  1200                     __end_of_I2C_Stop:	
  6917                           
  6918                           	psect	text27
  6919  11F2                     __ptext27:	
  6920 ;; *************** function _I2C_Start *****************
  6921 ;; Defined at:
  6922 ;;		line 232 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;		None
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;		None
  6927 ;; Return value:  Size  Location     Type
  6928 ;;		None               void
  6929 ;; Registers used:
  6930 ;;		wreg, status,2, status,0, pclath, cstack
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6936 ;;      Params:         0       0       0       0       0
  6937 ;;      Locals:         0       0       0       0       0
  6938 ;;      Temps:          0       0       0       0       0
  6939 ;;      Totals:         0       0       0       0       0
  6940 ;;Total ram usage:        0 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; Hardware stack levels required when called:    1
  6943 ;; This function calls:
  6944 ;;		_I2C_Wait
  6945 ;; This function is called by:
  6946 ;;		_SHT21_Measure
  6947 ;;		_SHT21_SoftReset
  6948 ;;		_SHT21_SetResolution
  6949 ;; This function uses a non-reentrant model
  6950 ;;
  6951                           
  6952                           
  6953                           ;psect for function _I2C_Start
  6954  11F2                     _I2C_Start:	
  6955                           
  6956                           ;BajanDecierdo_7-3.c: 234: I2C_Wait();
  6957                           
  6958                           ;incstack = 0
  6959                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  6960  11F2  160A  118A  2200   	fcall	_I2C_Wait
  6961                           
  6962                           ;BajanDecierdo_7-3.c: 235: SEN = 1;
  6963  11F5  1683               	bsf	3,5	;RP0=1, select bank1
  6964  11F6  1303               	bcf	3,6	;RP1=0, select bank1
  6965  11F7  1411               	bsf	17,0	;volatile
  6966  11F8  0008               	return
  6967  11F9                     __end_of_I2C_Start:	
  6968                           
  6969                           	psect	text28
  6970  0004                     __ptext28:	
  6971 ;; *************** function _I2C_Send *****************
  6972 ;; Defined at:
  6973 ;;		line 250 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  dataOUT         1    wreg     unsigned char 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  dataOUT         1    0[COMMON] unsigned char 
  6978 ;; Return value:  Size  Location     Type
  6979 ;;		None               void
  6980 ;; Registers used:
  6981 ;;		wreg, status,2, status,0, pclath, cstack
  6982 ;; Tracked objects:
  6983 ;;		On entry : 0/0
  6984 ;;		On exit  : 0/0
  6985 ;;		Unchanged: 0/0
  6986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6987 ;;      Params:         0       0       0       0       0
  6988 ;;      Locals:         1       0       0       0       0
  6989 ;;      Temps:          0       0       0       0       0
  6990 ;;      Totals:         1       0       0       0       0
  6991 ;;Total ram usage:        1 bytes
  6992 ;; Hardware stack levels used:    1
  6993 ;; Hardware stack levels required when called:    1
  6994 ;; This function calls:
  6995 ;;		_I2C_Wait
  6996 ;; This function is called by:
  6997 ;;		_SHT21_Measure
  6998 ;;		_SHT21_SoftReset
  6999 ;;		_SHT21_SetResolution
  7000 ;; This function uses a non-reentrant model
  7001 ;;
  7002                           
  7003                           
  7004                           ;psect for function _I2C_Send
  7005  0004                     _I2C_Send:	
  7006                           
  7007                           ;incstack = 0
  7008                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  7009                           ;I2C_Send@dataOUT stored from wreg
  7010  0004  00F0               	movwf	I2C_Send@dataOUT
  7011                           
  7012                           ;BajanDecierdo_7-3.c: 252: I2C_Wait();
  7013  0005  160A  118A  2200   	fcall	_I2C_Wait
  7014                           
  7015                           ;BajanDecierdo_7-3.c: 253: SSPBUF = dataOUT;
  7016  0008  0870               	movf	I2C_Send@dataOUT,w
  7017  0009  1283               	bcf	3,5	;RP0=0, select bank0
  7018  000A  1303               	bcf	3,6	;RP1=0, select bank0
  7019  000B  0093               	movwf	19	;volatile
  7020  000C  0008               	return
  7021  000D                     __end_of_I2C_Send:	
  7022                           
  7023                           	psect	text29
  7024  11EB                     __ptext29:	
  7025 ;; *************** function _I2C_RepeatedStart *****************
  7026 ;; Defined at:
  7027 ;;		line 238 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  7028 ;; Parameters:    Size  Location     Type
  7029 ;;		None
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;		None
  7032 ;; Return value:  Size  Location     Type
  7033 ;;		None               void
  7034 ;; Registers used:
  7035 ;;		wreg, status,2, status,0, pclath, cstack
  7036 ;; Tracked objects:
  7037 ;;		On entry : 0/0
  7038 ;;		On exit  : 0/0
  7039 ;;		Unchanged: 0/0
  7040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7041 ;;      Params:         0       0       0       0       0
  7042 ;;      Locals:         0       0       0       0       0
  7043 ;;      Temps:          0       0       0       0       0
  7044 ;;      Totals:         0       0       0       0       0
  7045 ;;Total ram usage:        0 bytes
  7046 ;; Hardware stack levels used:    1
  7047 ;; Hardware stack levels required when called:    1
  7048 ;; This function calls:
  7049 ;;		_I2C_Wait
  7050 ;; This function is called by:
  7051 ;;		_SHT21_Measure
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           
  7056                           ;psect for function _I2C_RepeatedStart
  7057  11EB                     _I2C_RepeatedStart:	
  7058                           
  7059                           ;BajanDecierdo_7-3.c: 240: I2C_Wait();
  7060                           
  7061                           ;incstack = 0
  7062                           ; Regs used in _I2C_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  7063  11EB  160A  118A  2200   	fcall	_I2C_Wait
  7064                           
  7065                           ;BajanDecierdo_7-3.c: 241: RSEN = 1;
  7066  11EE  1683               	bsf	3,5	;RP0=1, select bank1
  7067  11EF  1303               	bcf	3,6	;RP1=0, select bank1
  7068  11F0  1491               	bsf	17,1	;volatile
  7069  11F1  0008               	return
  7070  11F2                     __end_of_I2C_RepeatedStart:	
  7071                           
  7072                           	psect	text30
  7073  1340                     __ptext30:	
  7074 ;; *************** function _I2C_Receive *****************
  7075 ;; Defined at:
  7076 ;;		line 256 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  ACK_NACK        1    wreg     unsigned char 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  ACK_NACK        1    1[COMMON] unsigned char 
  7081 ;;  dataIN          1    2[COMMON] unsigned char 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1    wreg      unsigned char 
  7084 ;; Registers used:
  7085 ;;		wreg, status,2, status,0, pclath, cstack
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7091 ;;      Params:         0       0       0       0       0
  7092 ;;      Locals:         2       0       0       0       0
  7093 ;;      Temps:          1       0       0       0       0
  7094 ;;      Totals:         3       0       0       0       0
  7095 ;;Total ram usage:        3 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    1
  7098 ;; This function calls:
  7099 ;;		_I2C_Wait
  7100 ;; This function is called by:
  7101 ;;		_SHT21_Measure
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           
  7106                           ;psect for function _I2C_Receive
  7107  1340                     _I2C_Receive:	
  7108                           
  7109                           ;incstack = 0
  7110                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  7111                           ;I2C_Receive@ACK_NACK stored from wreg
  7112  1340  00F1               	movwf	I2C_Receive@ACK_NACK
  7113                           
  7114                           ;BajanDecierdo_7-3.c: 258: u8t dataIN;
  7115                           ;BajanDecierdo_7-3.c: 259: I2C_Wait();
  7116  1341  160A  118A  2200  160A  118A  	fcall	_I2C_Wait
  7117                           
  7118                           ;BajanDecierdo_7-3.c: 260: RCEN = 1;
  7119  1346  1683               	bsf	3,5	;RP0=1, select bank1
  7120  1347  1303               	bcf	3,6	;RP1=0, select bank1
  7121  1348  1591               	bsf	17,3	;volatile
  7122                           
  7123                           ;BajanDecierdo_7-3.c: 261: I2C_Wait();
  7124  1349  160A  118A  2200  160A  118A  	fcall	_I2C_Wait
  7125                           
  7126                           ;BajanDecierdo_7-3.c: 262: dataIN = SSPBUF;
  7127  134E  1283               	bcf	3,5	;RP0=0, select bank0
  7128  134F  1303               	bcf	3,6	;RP1=0, select bank0
  7129  1350  0813               	movf	19,w	;volatile
  7130  1351  00F0               	movwf	??_I2C_Receive
  7131  1352  0870               	movf	??_I2C_Receive,w
  7132  1353  00F2               	movwf	I2C_Receive@dataIN
  7133                           
  7134                           ;BajanDecierdo_7-3.c: 263: I2C_Wait();
  7135  1354  160A  118A  2200  160A  118A  	fcall	_I2C_Wait
  7136                           
  7137                           ;BajanDecierdo_7-3.c: 264: ACKDT = (ACK_NACK) ? 0 : 1;
  7138  1359  08F1               	movf	I2C_Receive@ACK_NACK,f
  7139  135A  1D03               	btfss	3,2
  7140  135B  2B60               	goto	u2660
  7141  135C  1683               	bsf	3,5	;RP0=1, select bank1
  7142  135D  1303               	bcf	3,6	;RP1=0, select bank1
  7143  135E  1691               	bsf	17,5	;volatile
  7144  135F  2B63               	goto	l2058
  7145  1360                     u2660:	
  7146  1360  1683               	bsf	3,5	;RP0=1, select bank1
  7147  1361  1303               	bcf	3,6	;RP1=0, select bank1
  7148  1362  1291               	bcf	17,5	;volatile
  7149  1363                     l2058:	
  7150                           
  7151                           ;BajanDecierdo_7-3.c: 265: ACKEN = 1;
  7152  1363  1611               	bsf	17,4	;volatile
  7153                           
  7154                           ;BajanDecierdo_7-3.c: 266: return dataIN;
  7155  1364  0872               	movf	I2C_Receive@dataIN,w
  7156  1365  0008               	return
  7157  1366                     __end_of_I2C_Receive:	
  7158                           
  7159                           	psect	text31
  7160  1200                     __ptext31:	
  7161 ;; *************** function _I2C_Wait *****************
  7162 ;; Defined at:
  7163 ;;		line 113 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;		None
  7166 ;; Auto vars:     Size  Location     Type
  7167 ;;		None
  7168 ;; Return value:  Size  Location     Type
  7169 ;;		None               void
  7170 ;; Registers used:
  7171 ;;		wreg, status,2
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7177 ;;      Params:         0       0       0       0       0
  7178 ;;      Locals:         0       0       0       0       0
  7179 ;;      Temps:          0       0       0       0       0
  7180 ;;      Totals:         0       0       0       0       0
  7181 ;;Total ram usage:        0 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_I2C_Start
  7187 ;;		_I2C_RepeatedStart
  7188 ;;		_I2C_Stop
  7189 ;;		_I2C_Send
  7190 ;;		_I2C_Receive
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           
  7195                           ;psect for function _I2C_Wait
  7196  1200                     _I2C_Wait:	
  7197  1200                     l1788:	
  7198                           ;incstack = 0
  7199                           ; Regs used in _I2C_Wait: [wreg+status,2]
  7200                           
  7201  1200  1683               	bsf	3,5	;RP0=1, select bank1
  7202  1201  1303               	bcf	3,6	;RP1=0, select bank1
  7203  1202  0811               	movf	17,w	;volatile
  7204  1203  391F               	andlw	31
  7205  1204  1903               	btfsc	3,2
  7206  1205  1914               	btfsc	20,2	;volatile
  7207  1206  2A00               	goto	l1788
  7208  1207  0008               	return
  7209  1208                     __end_of_I2C_Wait:	
  7210                           
  7211                           	psect	text32
  7212  13FB                     __ptext32:	
  7213 ;; *************** function _SHT21_CalcTemp *****************
  7214 ;; Defined at:
  7215 ;;		line 323 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  u16Temp         2   52[BANK0 ] unsigned short 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  resultTemp      3   55[BANK0 ] float 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  3   52[BANK0 ] float 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, pclath, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7229 ;;      Params:         0       3       0       0       0
  7230 ;;      Locals:         0       3       0       0       0
  7231 ;;      Temps:          0       0       0       0       0
  7232 ;;      Totals:         0       6       0       0       0
  7233 ;;Total ram usage:        6 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    2
  7236 ;; This function calls:
  7237 ;;		___ftadd
  7238 ;;		___ftmul
  7239 ;;		___lwtoft
  7240 ;; This function is called by:
  7241 ;;		_main
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           
  7246                           ;psect for function _SHT21_CalcTemp
  7247  13FB                     _SHT21_CalcTemp:	
  7248                           
  7249                           ;BajanDecierdo_7-3.c: 325: ft resultTemp;
  7250                           ;BajanDecierdo_7-3.c: 326: u16Temp &= ~0x0003;
  7251                           
  7252                           ;incstack = 0
  7253                           ; Regs used in _SHT21_CalcTemp: [wreg+status,2+status,0+pclath+cstack]
  7254  13FB  30FC               	movlw	252
  7255  13FC  1283               	bcf	3,5	;RP0=0, select bank0
  7256  13FD  1303               	bcf	3,6	;RP1=0, select bank0
  7257  13FE  05D4               	andwf	SHT21_CalcTemp@u16Temp,f
  7258  13FF  30FF               	movlw	255
  7259  1400  05D5               	andwf	SHT21_CalcTemp@u16Temp+1,f
  7260                           
  7261                           ;BajanDecierdo_7-3.c: 328: resultTemp = -46.85 + 175.72 / 65536.0 * (ft)u16Temp;
  7262  1401  3066               	movlw	102
  7263  1402  00C7               	movwf	___ftadd@f1
  7264  1403  303B               	movlw	59
  7265  1404  00C8               	movwf	___ftadd@f1+1
  7266  1405  30C2               	movlw	194
  7267  1406  00C9               	movwf	___ftadd@f1+2
  7268  1407  30B8               	movlw	184
  7269  1408  00A7               	movwf	___ftmul@f1
  7270  1409  302F               	movlw	47
  7271  140A  00A8               	movwf	___ftmul@f1+1
  7272  140B  303B               	movlw	59
  7273  140C  00A9               	movwf	___ftmul@f1+2
  7274  140D  0855               	movf	SHT21_CalcTemp@u16Temp+1,w
  7275  140E  01F9               	clrf	___lwtoft@c+1
  7276  140F  07F9               	addwf	___lwtoft@c+1,f
  7277  1410  0854               	movf	SHT21_CalcTemp@u16Temp,w
  7278  1411  01F8               	clrf	___lwtoft@c
  7279  1412  07F8               	addwf	___lwtoft@c,f
  7280  1413  160A  118A  2277  160A  118A  	fcall	___lwtoft
  7281  1418  0878               	movf	?___lwtoft,w
  7282  1419  1283               	bcf	3,5	;RP0=0, select bank0
  7283  141A  1303               	bcf	3,6	;RP1=0, select bank0
  7284  141B  00AA               	movwf	___ftmul@f2
  7285  141C  0879               	movf	?___lwtoft+1,w
  7286  141D  00AB               	movwf	___ftmul@f2+1
  7287  141E  087A               	movf	?___lwtoft+2,w
  7288  141F  00AC               	movwf	___ftmul@f2+2
  7289  1420  160A  118A  272D  160A  118A  	fcall	___ftmul
  7290  1425  1283               	bcf	3,5	;RP0=0, select bank0
  7291  1426  1303               	bcf	3,6	;RP1=0, select bank0
  7292  1427  0827               	movf	?___ftmul,w
  7293  1428  00CA               	movwf	___ftadd@f2
  7294  1429  0828               	movf	?___ftmul+1,w
  7295  142A  00CB               	movwf	___ftadd@f2+1
  7296  142B  0829               	movf	?___ftmul+2,w
  7297  142C  00CC               	movwf	___ftadd@f2+2
  7298  142D  120A  158A  208F   	fcall	___ftadd
  7299  1430  1283               	bcf	3,5	;RP0=0, select bank0
  7300  1431  1303               	bcf	3,6	;RP1=0, select bank0
  7301  1432  0847               	movf	?___ftadd,w
  7302  1433  00D7               	movwf	SHT21_CalcTemp@resultTemp
  7303  1434  0848               	movf	?___ftadd+1,w
  7304  1435  00D8               	movwf	SHT21_CalcTemp@resultTemp+1
  7305  1436  0849               	movf	?___ftadd+2,w
  7306  1437  00D9               	movwf	SHT21_CalcTemp@resultTemp+2
  7307                           
  7308                           ;BajanDecierdo_7-3.c: 329: return resultTemp;
  7309  1438  0857               	movf	SHT21_CalcTemp@resultTemp,w
  7310  1439  00D4               	movwf	?_SHT21_CalcTemp
  7311  143A  0858               	movf	SHT21_CalcTemp@resultTemp+1,w
  7312  143B  00D5               	movwf	?_SHT21_CalcTemp+1
  7313  143C  0859               	movf	SHT21_CalcTemp@resultTemp+2,w
  7314  143D  00D6               	movwf	?_SHT21_CalcTemp+2
  7315  143E  0008               	return
  7316  143F                     __end_of_SHT21_CalcTemp:	
  7317                           
  7318                           	psect	text33
  7319  13B7                     __ptext33:	
  7320 ;; *************** function _SHT21_CalcRH *****************
  7321 ;; Defined at:
  7322 ;;		line 314 in file "D:\uni_2023-2024\cpe3201\embedded-systems\LabExer\LE7\mplab\7-3\BajanDecierdo_7-3.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  u16RH           2   52[BANK0 ] unsigned short 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  resultRH        3   55[BANK0 ] float 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  3   52[BANK0 ] float 
  7329 ;; Registers used:
  7330 ;;		wreg, status,2, status,0, pclath, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7336 ;;      Params:         0       3       0       0       0
  7337 ;;      Locals:         0       3       0       0       0
  7338 ;;      Temps:          0       0       0       0       0
  7339 ;;      Totals:         0       6       0       0       0
  7340 ;;Total ram usage:        6 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    2
  7343 ;; This function calls:
  7344 ;;		___ftadd
  7345 ;;		___ftmul
  7346 ;;		___lwtoft
  7347 ;; This function is called by:
  7348 ;;		_main
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           
  7353                           ;psect for function _SHT21_CalcRH
  7354  13B7                     _SHT21_CalcRH:	
  7355                           
  7356                           ;BajanDecierdo_7-3.c: 316: ft resultRH;
  7357                           ;BajanDecierdo_7-3.c: 317: u16RH &= ~0x003;
  7358                           
  7359                           ;incstack = 0
  7360                           ; Regs used in _SHT21_CalcRH: [wreg+status,2+status,0+pclath+cstack]
  7361  13B7  30FC               	movlw	252
  7362  13B8  1283               	bcf	3,5	;RP0=0, select bank0
  7363  13B9  1303               	bcf	3,6	;RP1=0, select bank0
  7364  13BA  05D4               	andwf	SHT21_CalcRH@u16RH,f
  7365  13BB  30FF               	movlw	255
  7366  13BC  05D5               	andwf	SHT21_CalcRH@u16RH+1,f
  7367                           
  7368                           ;BajanDecierdo_7-3.c: 319: resultRH = -6.0 + 125.0 / 65536.0 * (ft)u16RH;
  7369  13BD  3000               	movlw	0
  7370  13BE  00C7               	movwf	___ftadd@f1
  7371  13BF  30C0               	movlw	192
  7372  13C0  00C8               	movwf	___ftadd@f1+1
  7373  13C1  30C0               	movlw	192
  7374  13C2  00C9               	movwf	___ftadd@f1+2
  7375  13C3  3000               	movlw	0
  7376  13C4  00A7               	movwf	___ftmul@f1
  7377  13C5  30FA               	movlw	250
  7378  13C6  00A8               	movwf	___ftmul@f1+1
  7379  13C7  303A               	movlw	58
  7380  13C8  00A9               	movwf	___ftmul@f1+2
  7381  13C9  0855               	movf	SHT21_CalcRH@u16RH+1,w
  7382  13CA  01F9               	clrf	___lwtoft@c+1
  7383  13CB  07F9               	addwf	___lwtoft@c+1,f
  7384  13CC  0854               	movf	SHT21_CalcRH@u16RH,w
  7385  13CD  01F8               	clrf	___lwtoft@c
  7386  13CE  07F8               	addwf	___lwtoft@c,f
  7387  13CF  160A  118A  2277  160A  118A  	fcall	___lwtoft
  7388  13D4  0878               	movf	?___lwtoft,w
  7389  13D5  1283               	bcf	3,5	;RP0=0, select bank0
  7390  13D6  1303               	bcf	3,6	;RP1=0, select bank0
  7391  13D7  00AA               	movwf	___ftmul@f2
  7392  13D8  0879               	movf	?___lwtoft+1,w
  7393  13D9  00AB               	movwf	___ftmul@f2+1
  7394  13DA  087A               	movf	?___lwtoft+2,w
  7395  13DB  00AC               	movwf	___ftmul@f2+2
  7396  13DC  160A  118A  272D  160A  118A  	fcall	___ftmul
  7397  13E1  1283               	bcf	3,5	;RP0=0, select bank0
  7398  13E2  1303               	bcf	3,6	;RP1=0, select bank0
  7399  13E3  0827               	movf	?___ftmul,w
  7400  13E4  00CA               	movwf	___ftadd@f2
  7401  13E5  0828               	movf	?___ftmul+1,w
  7402  13E6  00CB               	movwf	___ftadd@f2+1
  7403  13E7  0829               	movf	?___ftmul+2,w
  7404  13E8  00CC               	movwf	___ftadd@f2+2
  7405  13E9  120A  158A  208F   	fcall	___ftadd
  7406  13EC  1283               	bcf	3,5	;RP0=0, select bank0
  7407  13ED  1303               	bcf	3,6	;RP1=0, select bank0
  7408  13EE  0847               	movf	?___ftadd,w
  7409  13EF  00D7               	movwf	SHT21_CalcRH@resultRH
  7410  13F0  0848               	movf	?___ftadd+1,w
  7411  13F1  00D8               	movwf	SHT21_CalcRH@resultRH+1
  7412  13F2  0849               	movf	?___ftadd+2,w
  7413  13F3  00D9               	movwf	SHT21_CalcRH@resultRH+2
  7414                           
  7415                           ;BajanDecierdo_7-3.c: 320: return resultRH;
  7416  13F4  0857               	movf	SHT21_CalcRH@resultRH,w
  7417  13F5  00D4               	movwf	?_SHT21_CalcRH
  7418  13F6  0858               	movf	SHT21_CalcRH@resultRH+1,w
  7419  13F7  00D5               	movwf	?_SHT21_CalcRH+1
  7420  13F8  0859               	movf	SHT21_CalcRH@resultRH+2,w
  7421  13F9  00D6               	movwf	?_SHT21_CalcRH+2
  7422  13FA  0008               	return
  7423  13FB                     __end_of_SHT21_CalcRH:	
  7424                           
  7425                           	psect	text34
  7426  1277                     __ptext34:	
  7427 ;; *************** function ___lwtoft *****************
  7428 ;; Defined at:
  7429 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  c               2    8[COMMON] unsigned int 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;		None
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  3    8[COMMON] float 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0, pclath, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7443 ;;      Params:         3       0       0       0       0
  7444 ;;      Locals:         0       0       0       0       0
  7445 ;;      Temps:          1       0       0       0       0
  7446 ;;      Totals:         4       0       0       0       0
  7447 ;;Total ram usage:        4 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    1
  7450 ;; This function calls:
  7451 ;;		___ftpack
  7452 ;; This function is called by:
  7453 ;;		_SHT21_CalcRH
  7454 ;;		_SHT21_CalcTemp
  7455 ;; This function uses a non-reentrant model
  7456 ;;
  7457                           
  7458                           
  7459                           ;psect for function ___lwtoft
  7460  1277                     ___lwtoft:	
  7461                           
  7462                           ;incstack = 0
  7463                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7464  1277  0878               	movf	___lwtoft@c,w
  7465  1278  00F0               	movwf	___ftpack@arg
  7466  1279  0879               	movf	___lwtoft@c+1,w
  7467  127A  00F1               	movwf	___ftpack@arg+1
  7468  127B  01F2               	clrf	___ftpack@arg+2
  7469  127C  308E               	movlw	142
  7470  127D  00FB               	movwf	??___lwtoft
  7471  127E  087B               	movf	??___lwtoft,w
  7472  127F  00F3               	movwf	___ftpack@exp
  7473  1280  01F4               	clrf	___ftpack@sign
  7474  1281  160A  118A  2602   	fcall	___ftpack
  7475  1284  0870               	movf	?___ftpack,w
  7476  1285  00F8               	movwf	?___lwtoft
  7477  1286  0871               	movf	?___ftpack+1,w
  7478  1287  00F9               	movwf	?___lwtoft+1
  7479  1288  0872               	movf	?___ftpack+2,w
  7480  1289  00FA               	movwf	?___lwtoft+2
  7481  128A  0008               	return
  7482  128B                     __end_of___lwtoft:	
  7483                           
  7484                           	psect	text35
  7485  172D                     __ptext35:	
  7486 ;; *************** function ___ftmul *****************
  7487 ;; Defined at:
  7488 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  f1              3    7[BANK0 ] float 
  7491 ;;  f2              3   10[BANK0 ] float 
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  7494 ;;  sign            1   22[BANK0 ] unsigned char 
  7495 ;;  cntr            1   21[BANK0 ] unsigned char 
  7496 ;;  exp             1   17[BANK0 ] unsigned char 
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  3    7[BANK0 ] float 
  7499 ;; Registers used:
  7500 ;;		wreg, status,2, status,0, pclath, cstack
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 0/0
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7506 ;;      Params:         0       6       0       0       0
  7507 ;;      Locals:         0       6       0       0       0
  7508 ;;      Temps:          0       4       0       0       0
  7509 ;;      Totals:         0      16       0       0       0
  7510 ;;Total ram usage:       16 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:    1
  7513 ;; This function calls:
  7514 ;;		___ftpack
  7515 ;; This function is called by:
  7516 ;;		_SHT21_CalcRH
  7517 ;;		_SHT21_CalcTemp
  7518 ;;		_fround
  7519 ;;		_scale
  7520 ;;		_sprintf
  7521 ;; This function uses a non-reentrant model
  7522 ;;
  7523                           
  7524                           
  7525                           ;psect for function ___ftmul
  7526  172D                     ___ftmul:	
  7527                           
  7528                           ;incstack = 0
  7529                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7530  172D  1283               	bcf	3,5	;RP0=0, select bank0
  7531  172E  1303               	bcf	3,6	;RP1=0, select bank0
  7532  172F  0827               	movf	___ftmul@f1,w
  7533  1730  00AD               	movwf	??___ftmul
  7534  1731  0828               	movf	___ftmul@f1+1,w
  7535  1732  00AE               	movwf	??___ftmul+1
  7536  1733  0829               	movf	___ftmul@f1+2,w
  7537  1734  00AF               	movwf	??___ftmul+2
  7538  1735  1003               	clrc
  7539  1736  0D2E               	rlf	??___ftmul+1,w
  7540  1737  0D2F               	rlf	??___ftmul+2,w
  7541  1738  00B0               	movwf	??___ftmul+3
  7542  1739  0830               	movf	??___ftmul+3,w
  7543  173A  00B1               	movwf	___ftmul@exp
  7544  173B  08B1               	movf	___ftmul@exp,f
  7545  173C  1D03               	skipz
  7546  173D  2F45               	goto	l1976
  7547  173E  3000               	movlw	0
  7548  173F  00A7               	movwf	?___ftmul
  7549  1740  3000               	movlw	0
  7550  1741  00A8               	movwf	?___ftmul+1
  7551  1742  3000               	movlw	0
  7552  1743  00A9               	movwf	?___ftmul+2
  7553  1744  0008               	return
  7554  1745                     l1976:	
  7555  1745  082A               	movf	___ftmul@f2,w
  7556  1746  00AD               	movwf	??___ftmul
  7557  1747  082B               	movf	___ftmul@f2+1,w
  7558  1748  00AE               	movwf	??___ftmul+1
  7559  1749  082C               	movf	___ftmul@f2+2,w
  7560  174A  00AF               	movwf	??___ftmul+2
  7561  174B  1003               	clrc
  7562  174C  0D2E               	rlf	??___ftmul+1,w
  7563  174D  0D2F               	rlf	??___ftmul+2,w
  7564  174E  00B0               	movwf	??___ftmul+3
  7565  174F  0830               	movf	??___ftmul+3,w
  7566  1750  00B6               	movwf	___ftmul@sign
  7567  1751  08B6               	movf	___ftmul@sign,f
  7568  1752  1D03               	skipz
  7569  1753  2F5B               	goto	l1982
  7570  1754  3000               	movlw	0
  7571  1755  00A7               	movwf	?___ftmul
  7572  1756  3000               	movlw	0
  7573  1757  00A8               	movwf	?___ftmul+1
  7574  1758  3000               	movlw	0
  7575  1759  00A9               	movwf	?___ftmul+2
  7576  175A  0008               	return
  7577  175B                     l1982:	
  7578  175B  0836               	movf	___ftmul@sign,w
  7579  175C  3E7B               	addlw	123
  7580  175D  00AD               	movwf	??___ftmul
  7581  175E  082D               	movf	??___ftmul,w
  7582  175F  07B1               	addwf	___ftmul@exp,f
  7583  1760  0827               	movf	___ftmul@f1,w
  7584  1761  00AD               	movwf	??___ftmul
  7585  1762  0828               	movf	___ftmul@f1+1,w
  7586  1763  00AE               	movwf	??___ftmul+1
  7587  1764  0829               	movf	___ftmul@f1+2,w
  7588  1765  00AF               	movwf	??___ftmul+2
  7589  1766  3010               	movlw	16
  7590  1767                     u2545:	
  7591  1767  1003               	clrc
  7592  1768  0CAF               	rrf	??___ftmul+2,f
  7593  1769  0CAE               	rrf	??___ftmul+1,f
  7594  176A  0CAD               	rrf	??___ftmul,f
  7595  176B  3EFF               	addlw	-1
  7596  176C  1D03               	skipz
  7597  176D  2F67               	goto	u2545
  7598  176E  082D               	movf	??___ftmul,w
  7599  176F  00B0               	movwf	??___ftmul+3
  7600  1770  0830               	movf	??___ftmul+3,w
  7601  1771  00B6               	movwf	___ftmul@sign
  7602  1772  082A               	movf	___ftmul@f2,w
  7603  1773  00AD               	movwf	??___ftmul
  7604  1774  082B               	movf	___ftmul@f2+1,w
  7605  1775  00AE               	movwf	??___ftmul+1
  7606  1776  082C               	movf	___ftmul@f2+2,w
  7607  1777  00AF               	movwf	??___ftmul+2
  7608  1778  3010               	movlw	16
  7609  1779                     u2555:	
  7610  1779  1003               	clrc
  7611  177A  0CAF               	rrf	??___ftmul+2,f
  7612  177B  0CAE               	rrf	??___ftmul+1,f
  7613  177C  0CAD               	rrf	??___ftmul,f
  7614  177D  3EFF               	addlw	-1
  7615  177E  1D03               	skipz
  7616  177F  2F79               	goto	u2555
  7617  1780  082D               	movf	??___ftmul,w
  7618  1781  00B0               	movwf	??___ftmul+3
  7619  1782  0830               	movf	??___ftmul+3,w
  7620  1783  06B6               	xorwf	___ftmul@sign,f
  7621  1784  3080               	movlw	128
  7622  1785  00AD               	movwf	??___ftmul
  7623  1786  082D               	movf	??___ftmul,w
  7624  1787  05B6               	andwf	___ftmul@sign,f
  7625  1788  17A8               	bsf	___ftmul@f1+1,7
  7626  1789  17AB               	bsf	___ftmul@f2+1,7
  7627  178A  30FF               	movlw	255
  7628  178B  05AA               	andwf	___ftmul@f2,f
  7629  178C  30FF               	movlw	255
  7630  178D  05AB               	andwf	___ftmul@f2+1,f
  7631  178E  3000               	movlw	0
  7632  178F  05AC               	andwf	___ftmul@f2+2,f
  7633  1790  3000               	movlw	0
  7634  1791  00B2               	movwf	___ftmul@f3_as_product
  7635  1792  3000               	movlw	0
  7636  1793  00B3               	movwf	___ftmul@f3_as_product+1
  7637  1794  3000               	movlw	0
  7638  1795  00B4               	movwf	___ftmul@f3_as_product+2
  7639  1796  3007               	movlw	7
  7640  1797  00AD               	movwf	??___ftmul
  7641  1798  082D               	movf	??___ftmul,w
  7642  1799  00B5               	movwf	___ftmul@cntr
  7643  179A                     l1994:	
  7644  179A  1C27               	btfss	___ftmul@f1,0
  7645  179B  2FAA               	goto	l1998
  7646  179C  082A               	movf	___ftmul@f2,w
  7647  179D  07B2               	addwf	___ftmul@f3_as_product,f
  7648  179E  082B               	movf	___ftmul@f2+1,w
  7649  179F  1103               	clrz
  7650  17A0  1803               	skipnc
  7651  17A1  0A2B               	incf	___ftmul@f2+1,w
  7652  17A2  1D03               	btfss	3,2
  7653  17A3  07B3               	addwf	___ftmul@f3_as_product+1,f
  7654  17A4  082C               	movf	___ftmul@f2+2,w
  7655  17A5  1103               	clrz
  7656  17A6  1803               	skipnc
  7657  17A7  0A2C               	incf	___ftmul@f2+2,w
  7658  17A8  1D03               	btfss	3,2
  7659  17A9  07B4               	addwf	___ftmul@f3_as_product+2,f
  7660  17AA                     l1998:	
  7661  17AA  3001               	movlw	1
  7662  17AB                     u2585:	
  7663  17AB  1003               	clrc
  7664  17AC  0CA9               	rrf	___ftmul@f1+2,f
  7665  17AD  0CA8               	rrf	___ftmul@f1+1,f
  7666  17AE  0CA7               	rrf	___ftmul@f1,f
  7667  17AF  3EFF               	addlw	-1
  7668  17B0  1D03               	skipz
  7669  17B1  2FAB               	goto	u2585
  7670  17B2  3001               	movlw	1
  7671  17B3                     u2595:	
  7672  17B3  1003               	clrc
  7673  17B4  0DAA               	rlf	___ftmul@f2,f
  7674  17B5  0DAB               	rlf	___ftmul@f2+1,f
  7675  17B6  0DAC               	rlf	___ftmul@f2+2,f
  7676  17B7  3EFF               	addlw	-1
  7677  17B8  1D03               	skipz
  7678  17B9  2FB3               	goto	u2595
  7679  17BA  3001               	movlw	1
  7680  17BB  02B5               	subwf	___ftmul@cntr,f
  7681  17BC  1D03               	btfss	3,2
  7682  17BD  2F9A               	goto	l1994
  7683  17BE  3009               	movlw	9
  7684  17BF  00AD               	movwf	??___ftmul
  7685  17C0  082D               	movf	??___ftmul,w
  7686  17C1  00B5               	movwf	___ftmul@cntr
  7687  17C2                     l2006:	
  7688  17C2  1C27               	btfss	___ftmul@f1,0
  7689  17C3  2FD2               	goto	l2010
  7690  17C4  082A               	movf	___ftmul@f2,w
  7691  17C5  07B2               	addwf	___ftmul@f3_as_product,f
  7692  17C6  082B               	movf	___ftmul@f2+1,w
  7693  17C7  1103               	clrz
  7694  17C8  1803               	skipnc
  7695  17C9  0A2B               	incf	___ftmul@f2+1,w
  7696  17CA  1D03               	btfss	3,2
  7697  17CB  07B3               	addwf	___ftmul@f3_as_product+1,f
  7698  17CC  082C               	movf	___ftmul@f2+2,w
  7699  17CD  1103               	clrz
  7700  17CE  1803               	skipnc
  7701  17CF  0A2C               	incf	___ftmul@f2+2,w
  7702  17D0  1D03               	btfss	3,2
  7703  17D1  07B4               	addwf	___ftmul@f3_as_product+2,f
  7704  17D2                     l2010:	
  7705  17D2  3001               	movlw	1
  7706  17D3                     u2635:	
  7707  17D3  1003               	clrc
  7708  17D4  0CA9               	rrf	___ftmul@f1+2,f
  7709  17D5  0CA8               	rrf	___ftmul@f1+1,f
  7710  17D6  0CA7               	rrf	___ftmul@f1,f
  7711  17D7  3EFF               	addlw	-1
  7712  17D8  1D03               	skipz
  7713  17D9  2FD3               	goto	u2635
  7714  17DA  3001               	movlw	1
  7715  17DB                     u2645:	
  7716  17DB  1003               	clrc
  7717  17DC  0CB4               	rrf	___ftmul@f3_as_product+2,f
  7718  17DD  0CB3               	rrf	___ftmul@f3_as_product+1,f
  7719  17DE  0CB2               	rrf	___ftmul@f3_as_product,f
  7720  17DF  3EFF               	addlw	-1
  7721  17E0  1D03               	skipz
  7722  17E1  2FDB               	goto	u2645
  7723  17E2  3001               	movlw	1
  7724  17E3  02B5               	subwf	___ftmul@cntr,f
  7725  17E4  1D03               	btfss	3,2
  7726  17E5  2FC2               	goto	l2006
  7727  17E6  0832               	movf	___ftmul@f3_as_product,w
  7728  17E7  00F0               	movwf	___ftpack@arg
  7729  17E8  0833               	movf	___ftmul@f3_as_product+1,w
  7730  17E9  00F1               	movwf	___ftpack@arg+1
  7731  17EA  0834               	movf	___ftmul@f3_as_product+2,w
  7732  17EB  00F2               	movwf	___ftpack@arg+2
  7733  17EC  0831               	movf	___ftmul@exp,w
  7734  17ED  00AD               	movwf	??___ftmul
  7735  17EE  082D               	movf	??___ftmul,w
  7736  17EF  00F3               	movwf	___ftpack@exp
  7737  17F0  0836               	movf	___ftmul@sign,w
  7738  17F1  00AE               	movwf	??___ftmul+1
  7739  17F2  082E               	movf	??___ftmul+1,w
  7740  17F3  00F4               	movwf	___ftpack@sign
  7741  17F4  160A  118A  2602   	fcall	___ftpack
  7742  17F7  0870               	movf	?___ftpack,w
  7743  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  7744  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  7745  17FA  00A7               	movwf	?___ftmul
  7746  17FB  0871               	movf	?___ftpack+1,w
  7747  17FC  00A8               	movwf	?___ftmul+1
  7748  17FD  0872               	movf	?___ftpack+2,w
  7749  17FE  00A9               	movwf	?___ftmul+2
  7750  17FF  0008               	return
  7751  1800                     __end_of___ftmul:	
  7752                           
  7753                           	psect	text36
  7754  088F                     __ptext36:	
  7755 ;; *************** function ___ftadd *****************
  7756 ;; Defined at:
  7757 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  7758 ;; Parameters:    Size  Location     Type
  7759 ;;  f1              3   39[BANK0 ] float 
  7760 ;;  f2              3   42[BANK0 ] float 
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;  exp1            1   51[BANK0 ] unsigned char 
  7763 ;;  exp2            1   50[BANK0 ] unsigned char 
  7764 ;;  sign            1   49[BANK0 ] unsigned char 
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  3   39[BANK0 ] float 
  7767 ;; Registers used:
  7768 ;;		wreg, status,2, status,0, pclath, cstack
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7774 ;;      Params:         0       6       0       0       0
  7775 ;;      Locals:         0       3       0       0       0
  7776 ;;      Temps:          0       4       0       0       0
  7777 ;;      Totals:         0      13       0       0       0
  7778 ;;Total ram usage:       13 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:    1
  7781 ;; This function calls:
  7782 ;;		___ftpack
  7783 ;; This function is called by:
  7784 ;;		_SHT21_CalcRH
  7785 ;;		_SHT21_CalcTemp
  7786 ;;		_sprintf
  7787 ;;		___ftsub
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           
  7792                           ;psect for function ___ftadd
  7793  088F                     ___ftadd:	
  7794                           
  7795                           ;incstack = 0
  7796                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  7797  088F  1283               	bcf	3,5	;RP0=0, select bank0
  7798  0890  1303               	bcf	3,6	;RP1=0, select bank0
  7799  0891  0847               	movf	___ftadd@f1,w
  7800  0892  00CD               	movwf	??___ftadd
  7801  0893  0848               	movf	___ftadd@f1+1,w
  7802  0894  00CE               	movwf	??___ftadd+1
  7803  0895  0849               	movf	___ftadd@f1+2,w
  7804  0896  00CF               	movwf	??___ftadd+2
  7805  0897  1003               	clrc
  7806  0898  0D4E               	rlf	??___ftadd+1,w
  7807  0899  0D4F               	rlf	??___ftadd+2,w
  7808  089A  00D0               	movwf	??___ftadd+3
  7809  089B  0850               	movf	??___ftadd+3,w
  7810  089C  00D3               	movwf	___ftadd@exp1
  7811  089D  084A               	movf	___ftadd@f2,w
  7812  089E  00CD               	movwf	??___ftadd
  7813  089F  084B               	movf	___ftadd@f2+1,w
  7814  08A0  00CE               	movwf	??___ftadd+1
  7815  08A1  084C               	movf	___ftadd@f2+2,w
  7816  08A2  00CF               	movwf	??___ftadd+2
  7817  08A3  1003               	clrc
  7818  08A4  0D4E               	rlf	??___ftadd+1,w
  7819  08A5  0D4F               	rlf	??___ftadd+2,w
  7820  08A6  00D0               	movwf	??___ftadd+3
  7821  08A7  0850               	movf	??___ftadd+3,w
  7822  08A8  00D2               	movwf	___ftadd@exp2
  7823  08A9  0853               	movf	___ftadd@exp1,w
  7824  08AA  1903               	btfsc	3,2
  7825  08AB  28B8               	goto	l1906
  7826  08AC  0852               	movf	___ftadd@exp2,w
  7827  08AD  0253               	subwf	___ftadd@exp1,w
  7828  08AE  1803               	skipnc
  7829  08AF  28BF               	goto	l1910
  7830  08B0  0353               	decf	___ftadd@exp1,w
  7831  08B1  3AFF               	xorlw	255
  7832  08B2  0752               	addwf	___ftadd@exp2,w
  7833  08B3  00CD               	movwf	??___ftadd
  7834  08B4  3019               	movlw	25
  7835  08B5  024D               	subwf	??___ftadd,w
  7836  08B6  1C03               	skipc
  7837  08B7  28BF               	goto	l1910
  7838  08B8                     l1906:	
  7839  08B8  084A               	movf	___ftadd@f2,w
  7840  08B9  00C7               	movwf	?___ftadd
  7841  08BA  084B               	movf	___ftadd@f2+1,w
  7842  08BB  00C8               	movwf	?___ftadd+1
  7843  08BC  084C               	movf	___ftadd@f2+2,w
  7844  08BD  00C9               	movwf	?___ftadd+2
  7845  08BE  0008               	return
  7846  08BF                     l1910:	
  7847  08BF  0852               	movf	___ftadd@exp2,w
  7848  08C0  1903               	btfsc	3,2
  7849  08C1  0008               	return
  7850  08C2  0853               	movf	___ftadd@exp1,w
  7851  08C3  0252               	subwf	___ftadd@exp2,w
  7852  08C4  1803               	skipnc
  7853  08C5  28CE               	goto	l1916
  7854  08C6  0352               	decf	___ftadd@exp2,w
  7855  08C7  3AFF               	xorlw	255
  7856  08C8  0753               	addwf	___ftadd@exp1,w
  7857  08C9  00CD               	movwf	??___ftadd
  7858  08CA  3019               	movlw	25
  7859  08CB  024D               	subwf	??___ftadd,w
  7860  08CC  1803               	btfsc	3,0
  7861  08CD  0008               	return
  7862  08CE                     l1916:	
  7863  08CE  3006               	movlw	6
  7864  08CF  00CD               	movwf	??___ftadd
  7865  08D0  084D               	movf	??___ftadd,w
  7866  08D1  00D1               	movwf	___ftadd@sign
  7867  08D2  1BC9               	btfsc	___ftadd@f1+2,7
  7868  08D3  17D1               	bsf	___ftadd@sign,7
  7869  08D4  1BCC               	btfsc	___ftadd@f2+2,7
  7870  08D5  1751               	bsf	___ftadd@sign,6
  7871  08D6  17C8               	bsf	___ftadd@f1+1,7
  7872  08D7  30FF               	movlw	255
  7873  08D8  05C7               	andwf	___ftadd@f1,f
  7874  08D9  30FF               	movlw	255
  7875  08DA  05C8               	andwf	___ftadd@f1+1,f
  7876  08DB  3000               	movlw	0
  7877  08DC  05C9               	andwf	___ftadd@f1+2,f
  7878  08DD  17CB               	bsf	___ftadd@f2+1,7
  7879  08DE  30FF               	movlw	255
  7880  08DF  05CA               	andwf	___ftadd@f2,f
  7881  08E0  30FF               	movlw	255
  7882  08E1  05CB               	andwf	___ftadd@f2+1,f
  7883  08E2  3000               	movlw	0
  7884  08E3  05CC               	andwf	___ftadd@f2+2,f
  7885  08E4  0852               	movf	___ftadd@exp2,w
  7886  08E5  0253               	subwf	___ftadd@exp1,w
  7887  08E6  1803               	skipnc
  7888  08E7  290E               	goto	l1938
  7889  08E8                     l1928:	
  7890  08E8  3001               	movlw	1
  7891  08E9                     u2375:	
  7892  08E9  1003               	clrc
  7893  08EA  0DCA               	rlf	___ftadd@f2,f
  7894  08EB  0DCB               	rlf	___ftadd@f2+1,f
  7895  08EC  0DCC               	rlf	___ftadd@f2+2,f
  7896  08ED  3EFF               	addlw	-1
  7897  08EE  1D03               	skipz
  7898  08EF  28E9               	goto	u2375
  7899  08F0  3001               	movlw	1
  7900  08F1  02D2               	subwf	___ftadd@exp2,f
  7901  08F2  0852               	movf	___ftadd@exp2,w
  7902  08F3  0653               	xorwf	___ftadd@exp1,w
  7903  08F4  1903               	skipnz
  7904  08F5  2909               	goto	l1936
  7905  08F6  3001               	movlw	1
  7906  08F7  02D1               	subwf	___ftadd@sign,f
  7907  08F8  0851               	movf	___ftadd@sign,w
  7908  08F9  3907               	andlw	7
  7909  08FA  1903               	btfsc	3,2
  7910  08FB  2909               	goto	l1936
  7911  08FC  28E8               	goto	l1928
  7912  08FD                     l1934:	
  7913  08FD  3001               	movlw	1
  7914  08FE                     u2405:	
  7915  08FE  1003               	clrc
  7916  08FF  0CC9               	rrf	___ftadd@f1+2,f
  7917  0900  0CC8               	rrf	___ftadd@f1+1,f
  7918  0901  0CC7               	rrf	___ftadd@f1,f
  7919  0902  3EFF               	addlw	-1
  7920  0903  1D03               	skipz
  7921  0904  28FE               	goto	u2405
  7922  0905  3001               	movlw	1
  7923  0906  00CD               	movwf	??___ftadd
  7924  0907  084D               	movf	??___ftadd,w
  7925  0908  07D3               	addwf	___ftadd@exp1,f
  7926  0909                     l1936:	
  7927  0909  0853               	movf	___ftadd@exp1,w
  7928  090A  0652               	xorwf	___ftadd@exp2,w
  7929  090B  1903               	btfsc	3,2
  7930  090C  2937               	goto	l541
  7931  090D  28FD               	goto	l1934
  7932  090E                     l1938:	
  7933  090E  0853               	movf	___ftadd@exp1,w
  7934  090F  0252               	subwf	___ftadd@exp2,w
  7935  0910  1803               	skipnc
  7936  0911  2937               	goto	l541
  7937  0912                     l1940:	
  7938  0912  3001               	movlw	1
  7939  0913                     u2435:	
  7940  0913  1003               	clrc
  7941  0914  0DC7               	rlf	___ftadd@f1,f
  7942  0915  0DC8               	rlf	___ftadd@f1+1,f
  7943  0916  0DC9               	rlf	___ftadd@f1+2,f
  7944  0917  3EFF               	addlw	-1
  7945  0918  1D03               	skipz
  7946  0919  2913               	goto	u2435
  7947  091A  3001               	movlw	1
  7948  091B  02D3               	subwf	___ftadd@exp1,f
  7949  091C  0852               	movf	___ftadd@exp2,w
  7950  091D  0653               	xorwf	___ftadd@exp1,w
  7951  091E  1903               	skipnz
  7952  091F  2933               	goto	l1948
  7953  0920  3001               	movlw	1
  7954  0921  02D1               	subwf	___ftadd@sign,f
  7955  0922  0851               	movf	___ftadd@sign,w
  7956  0923  3907               	andlw	7
  7957  0924  1903               	btfsc	3,2
  7958  0925  2933               	goto	l1948
  7959  0926  2912               	goto	l1940
  7960  0927                     l1946:	
  7961  0927  3001               	movlw	1
  7962  0928                     u2465:	
  7963  0928  1003               	clrc
  7964  0929  0CCC               	rrf	___ftadd@f2+2,f
  7965  092A  0CCB               	rrf	___ftadd@f2+1,f
  7966  092B  0CCA               	rrf	___ftadd@f2,f
  7967  092C  3EFF               	addlw	-1
  7968  092D  1D03               	skipz
  7969  092E  2928               	goto	u2465
  7970  092F  3001               	movlw	1
  7971  0930  00CD               	movwf	??___ftadd
  7972  0931  084D               	movf	??___ftadd,w
  7973  0932  07D2               	addwf	___ftadd@exp2,f
  7974  0933                     l1948:	
  7975  0933  0853               	movf	___ftadd@exp1,w
  7976  0934  0652               	xorwf	___ftadd@exp2,w
  7977  0935  1D03               	skipz
  7978  0936  2927               	goto	l1946
  7979  0937                     l541:	
  7980  0937  1FD1               	btfss	___ftadd@sign,7
  7981  0938  2949               	goto	l1952
  7982  0939  30FF               	movlw	255
  7983  093A  06C7               	xorwf	___ftadd@f1,f
  7984  093B  30FF               	movlw	255
  7985  093C  06C8               	xorwf	___ftadd@f1+1,f
  7986  093D  30FF               	movlw	255
  7987  093E  06C9               	xorwf	___ftadd@f1+2,f
  7988  093F  3001               	movlw	1
  7989  0940  07C7               	addwf	___ftadd@f1,f
  7990  0941  3000               	movlw	0
  7991  0942  1803               	skipnc
  7992  0943  3001               	movlw	1
  7993  0944  07C8               	addwf	___ftadd@f1+1,f
  7994  0945  3000               	movlw	0
  7995  0946  1803               	skipnc
  7996  0947  3001               	movlw	1
  7997  0948  07C9               	addwf	___ftadd@f1+2,f
  7998  0949                     l1952:	
  7999  0949  1F51               	btfss	___ftadd@sign,6
  8000  094A  295B               	goto	l1956
  8001  094B  30FF               	movlw	255
  8002  094C  06CA               	xorwf	___ftadd@f2,f
  8003  094D  30FF               	movlw	255
  8004  094E  06CB               	xorwf	___ftadd@f2+1,f
  8005  094F  30FF               	movlw	255
  8006  0950  06CC               	xorwf	___ftadd@f2+2,f
  8007  0951  3001               	movlw	1
  8008  0952  07CA               	addwf	___ftadd@f2,f
  8009  0953  3000               	movlw	0
  8010  0954  1803               	skipnc
  8011  0955  3001               	movlw	1
  8012  0956  07CB               	addwf	___ftadd@f2+1,f
  8013  0957  3000               	movlw	0
  8014  0958  1803               	skipnc
  8015  0959  3001               	movlw	1
  8016  095A  07CC               	addwf	___ftadd@f2+2,f
  8017  095B                     l1956:	
  8018  095B  01D1               	clrf	___ftadd@sign
  8019  095C  0847               	movf	___ftadd@f1,w
  8020  095D  07CA               	addwf	___ftadd@f2,f
  8021  095E  0848               	movf	___ftadd@f1+1,w
  8022  095F  1103               	clrz
  8023  0960  1803               	skipnc
  8024  0961  0A48               	incf	___ftadd@f1+1,w
  8025  0962  1D03               	btfss	3,2
  8026  0963  07CB               	addwf	___ftadd@f2+1,f
  8027  0964  0849               	movf	___ftadd@f1+2,w
  8028  0965  1103               	clrz
  8029  0966  1803               	skipnc
  8030  0967  0A49               	incf	___ftadd@f1+2,w
  8031  0968  1D03               	btfss	3,2
  8032  0969  07CC               	addwf	___ftadd@f2+2,f
  8033  096A  1FCC               	btfss	___ftadd@f2+2,7
  8034  096B  297E               	goto	l1966
  8035  096C  30FF               	movlw	255
  8036  096D  06CA               	xorwf	___ftadd@f2,f
  8037  096E  30FF               	movlw	255
  8038  096F  06CB               	xorwf	___ftadd@f2+1,f
  8039  0970  30FF               	movlw	255
  8040  0971  06CC               	xorwf	___ftadd@f2+2,f
  8041  0972  3001               	movlw	1
  8042  0973  07CA               	addwf	___ftadd@f2,f
  8043  0974  3000               	movlw	0
  8044  0975  1803               	skipnc
  8045  0976  3001               	movlw	1
  8046  0977  07CB               	addwf	___ftadd@f2+1,f
  8047  0978  3000               	movlw	0
  8048  0979  1803               	skipnc
  8049  097A  3001               	movlw	1
  8050  097B  07CC               	addwf	___ftadd@f2+2,f
  8051  097C  01D1               	clrf	___ftadd@sign
  8052  097D  0AD1               	incf	___ftadd@sign,f
  8053  097E                     l1966:	
  8054  097E  084A               	movf	___ftadd@f2,w
  8055  097F  00F0               	movwf	___ftpack@arg
  8056  0980  084B               	movf	___ftadd@f2+1,w
  8057  0981  00F1               	movwf	___ftpack@arg+1
  8058  0982  084C               	movf	___ftadd@f2+2,w
  8059  0983  00F2               	movwf	___ftpack@arg+2
  8060  0984  0853               	movf	___ftadd@exp1,w
  8061  0985  00CD               	movwf	??___ftadd
  8062  0986  084D               	movf	??___ftadd,w
  8063  0987  00F3               	movwf	___ftpack@exp
  8064  0988  0851               	movf	___ftadd@sign,w
  8065  0989  00CE               	movwf	??___ftadd+1
  8066  098A  084E               	movf	??___ftadd+1,w
  8067  098B  00F4               	movwf	___ftpack@sign
  8068  098C  160A  118A  2602   	fcall	___ftpack
  8069  098F  0870               	movf	?___ftpack,w
  8070  0990  1283               	bcf	3,5	;RP0=0, select bank0
  8071  0991  1303               	bcf	3,6	;RP1=0, select bank0
  8072  0992  00C7               	movwf	?___ftadd
  8073  0993  0871               	movf	?___ftpack+1,w
  8074  0994  00C8               	movwf	?___ftadd+1
  8075  0995  0872               	movf	?___ftpack+2,w
  8076  0996  00C9               	movwf	?___ftadd+2
  8077  0997  0008               	return
  8078  0998                     __end_of___ftadd:	
  8079                           
  8080                           	psect	text37
  8081  1602                     __ptext37:	
  8082 ;; *************** function ___ftpack *****************
  8083 ;; Defined at:
  8084 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  arg             3    0[COMMON] unsigned um
  8087 ;;  exp             1    3[COMMON] unsigned char 
  8088 ;;  sign            1    4[COMMON] unsigned char 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  3    0[COMMON] float 
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, status,0
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8100 ;;      Params:         5       0       0       0       0
  8101 ;;      Locals:         0       0       0       0       0
  8102 ;;      Temps:          3       0       0       0       0
  8103 ;;      Totals:         8       0       0       0       0
  8104 ;;Total ram usage:        8 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; This function calls:
  8107 ;;		Nothing
  8108 ;; This function is called by:
  8109 ;;		___ftadd
  8110 ;;		___ftmul
  8111 ;;		___lltoft
  8112 ;;		___lwtoft
  8113 ;; This function uses a non-reentrant model
  8114 ;;
  8115                           
  8116                           
  8117                           ;psect for function ___ftpack
  8118  1602                     ___ftpack:	
  8119                           
  8120                           ;incstack = 0
  8121                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  8122  1602  0873               	movf	___ftpack@exp,w
  8123  1603  1903               	btfsc	3,2
  8124  1604  2E0A               	goto	l1760
  8125  1605  0872               	movf	___ftpack@arg+2,w
  8126  1606  0471               	iorwf	___ftpack@arg+1,w
  8127  1607  0470               	iorwf	___ftpack@arg,w
  8128  1608  1D03               	skipz
  8129  1609  2E1D               	goto	l1766
  8130  160A                     l1760:	
  8131  160A  3000               	movlw	0
  8132  160B  00F0               	movwf	?___ftpack
  8133  160C  3000               	movlw	0
  8134  160D  00F1               	movwf	?___ftpack+1
  8135  160E  3000               	movlw	0
  8136  160F  00F2               	movwf	?___ftpack+2
  8137  1610  0008               	return
  8138  1611                     l1764:	
  8139  1611  3001               	movlw	1
  8140  1612  00F5               	movwf	??___ftpack
  8141  1613  0875               	movf	??___ftpack,w
  8142  1614  07F3               	addwf	___ftpack@exp,f
  8143  1615  3001               	movlw	1
  8144  1616                     u1945:	
  8145  1616  1003               	clrc
  8146  1617  0CF2               	rrf	___ftpack@arg+2,f
  8147  1618  0CF1               	rrf	___ftpack@arg+1,f
  8148  1619  0CF0               	rrf	___ftpack@arg,f
  8149  161A  3EFF               	addlw	-1
  8150  161B  1D03               	skipz
  8151  161C  2E16               	goto	u1945
  8152  161D                     l1766:	
  8153  161D  30FE               	movlw	254
  8154  161E  0572               	andwf	___ftpack@arg+2,w
  8155  161F  1903               	btfsc	3,2
  8156  1620  2E38               	goto	l512
  8157  1621  2E11               	goto	l1764
  8158  1622                     l1768:	
  8159  1622  3001               	movlw	1
  8160  1623  00F5               	movwf	??___ftpack
  8161  1624  0875               	movf	??___ftpack,w
  8162  1625  07F3               	addwf	___ftpack@exp,f
  8163  1626  3001               	movlw	1
  8164  1627  07F0               	addwf	___ftpack@arg,f
  8165  1628  3000               	movlw	0
  8166  1629  1803               	skipnc
  8167  162A  3001               	movlw	1
  8168  162B  07F1               	addwf	___ftpack@arg+1,f
  8169  162C  3000               	movlw	0
  8170  162D  1803               	skipnc
  8171  162E  3001               	movlw	1
  8172  162F  07F2               	addwf	___ftpack@arg+2,f
  8173  1630  3001               	movlw	1
  8174  1631                     u1965:	
  8175  1631  1003               	clrc
  8176  1632  0CF2               	rrf	___ftpack@arg+2,f
  8177  1633  0CF1               	rrf	___ftpack@arg+1,f
  8178  1634  0CF0               	rrf	___ftpack@arg,f
  8179  1635  3EFF               	addlw	-1
  8180  1636  1D03               	skipz
  8181  1637  2E31               	goto	u1965
  8182  1638                     l512:	
  8183  1638  30FF               	movlw	255
  8184  1639  0572               	andwf	___ftpack@arg+2,w
  8185  163A  1903               	btfsc	3,2
  8186  163B  2E47               	goto	l1776
  8187  163C  2E22               	goto	l1768
  8188  163D                     l1774:	
  8189  163D  3001               	movlw	1
  8190  163E  02F3               	subwf	___ftpack@exp,f
  8191  163F  3001               	movlw	1
  8192  1640                     u1985:	
  8193  1640  1003               	clrc
  8194  1641  0DF0               	rlf	___ftpack@arg,f
  8195  1642  0DF1               	rlf	___ftpack@arg+1,f
  8196  1643  0DF2               	rlf	___ftpack@arg+2,f
  8197  1644  3EFF               	addlw	-1
  8198  1645  1D03               	skipz
  8199  1646  2E40               	goto	u1985
  8200  1647                     l1776:	
  8201  1647  1FF1               	btfss	___ftpack@arg+1,7
  8202  1648  2E3D               	goto	l1774
  8203  1649  1873               	btfsc	___ftpack@exp,0
  8204  164A  2E51               	goto	l518
  8205  164B  30FF               	movlw	255
  8206  164C  05F0               	andwf	___ftpack@arg,f
  8207  164D  307F               	movlw	127
  8208  164E  05F1               	andwf	___ftpack@arg+1,f
  8209  164F  30FF               	movlw	255
  8210  1650  05F2               	andwf	___ftpack@arg+2,f
  8211  1651                     l518:	
  8212  1651  1003               	clrc
  8213  1652  0CF3               	rrf	___ftpack@exp,f
  8214  1653  0873               	movf	___ftpack@exp,w
  8215  1654  00F5               	movwf	??___ftpack
  8216  1655  01F6               	clrf	??___ftpack+1
  8217  1656  01F7               	clrf	??___ftpack+2
  8218  1657  3010               	movlw	16
  8219  1658                     u2015:	
  8220  1658  1003               	clrc
  8221  1659  0DF5               	rlf	??___ftpack,f
  8222  165A  0DF6               	rlf	??___ftpack+1,f
  8223  165B  0DF7               	rlf	??___ftpack+2,f
  8224  165C  3EFF               	addlw	-1
  8225  165D  1D03               	skipz
  8226  165E  2E58               	goto	u2015
  8227  165F  0875               	movf	??___ftpack,w
  8228  1660  04F0               	iorwf	___ftpack@arg,f
  8229  1661  0876               	movf	??___ftpack+1,w
  8230  1662  04F1               	iorwf	___ftpack@arg+1,f
  8231  1663  0877               	movf	??___ftpack+2,w
  8232  1664  04F2               	iorwf	___ftpack@arg+2,f
  8233  1665  0874               	movf	___ftpack@sign,w
  8234  1666  1903               	btfsc	3,2
  8235  1667  0008               	return
  8236  1668  17F2               	bsf	___ftpack@arg+2,7
  8237  1669  0008               	return
  8238  166A                     __end_of___ftpack:	
  8239  007E                     btemp	set	126	;btemp
  8240  007E                     wtemp	set	126
  8241  007E                     wtemp0	set	126
  8242  0080                     wtemp1	set	128
  8243  0082                     wtemp2	set	130
  8244  0084                     wtemp3	set	132
  8245  0086                     wtemp4	set	134
  8246  0088                     wtemp5	set	136
  8247  007F                     wtemp6	set	127
  8248  007E                     ttemp	set	126
  8249  007E                     ttemp0	set	126
  8250  0081                     ttemp1	set	129
  8251  0084                     ttemp2	set	132
  8252  0087                     ttemp3	set	135
  8253  007F                     ttemp4	set	127
  8254  007E                     ltemp	set	126
  8255  007E                     ltemp0	set	126
  8256  0082                     ltemp1	set	130
  8257  0086                     ltemp2	set	134
  8258  0080                     ltemp3	set	128


Data Sizes:
    Strings     5
    Constant    120
    Data        33
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     74      76
    BANK1            80     33      33
    BANK3            96     48      81
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_2(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 0
		 -> main@buf1(BANK3[0]), main@buf2(BANK3[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S239$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    SHT21_Measure@pMeasureand	PTR struct . size(1) Largest target is 2
		 -> main@rawTemp(BANK3[2]), main@rawRH(BANK3[2]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    _scale->___bmul
    _fround->___bmul
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    _initLCD->_instCTRL
    _instCTRL->_delay
    _dataCTRL->_delay
    _SHT21_SoftReset->_delay
    _SHT21_SetResolution->_I2C_Send
    _SHT21_Measure->_delay
    ___lwtoft->___ftpack
    ___ftmul->___bmul

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    _SHT21_CalcTemp->___ftadd
    _SHT21_CalcRH->___ftadd
    ___ftmul->___bmul
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                59    59      0   54581
                                             70 BANK0      4     4      0
                                              0 BANK3     48    48      0
                       _SHT21_CalcRH
                     _SHT21_CalcTemp
                      _SHT21_Measure
                _SHT21_SetResolution
                    _SHT21_SoftReset
                           _dataCTRL
                              _delay
                            _initLCD
                    _init_I2C_Master
                           _instCTRL
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             51    45      6   33806
                                             58 BANK0     12     6      6
                                              0 BANK1     33    33      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    7366
                                             23 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    7168
                                             23 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1276
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1807
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             32 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3100
                                             52 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     560
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) _init_I2C_Master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     750
                              _delay
                           _instCTRL
 ---------------------------------------------------------------------------------
 (1) _instCTRL                                             1     1      0     386
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _dataCTRL                                             1     1      0     386
                                              5 COMMON     1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _SHT21_SoftReset                                      0     0      0     386
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                              _delay
 ---------------------------------------------------------------------------------
 (1) _SHT21_SetResolution                                  0     0      0      22
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
 ---------------------------------------------------------------------------------
 (1) _SHT21_Measure                                        7     6      1     636
                                              5 COMMON     7     6      1
                        _I2C_Receive
                  _I2C_RepeatedStart
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     3      2     364
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_RepeatedStart                                    0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Receive                                          3     3      0      45
                                              0 COMMON     3     3      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SHT21_CalcTemp                                       6     3      3    8568
                                             52 BANK0      6     3      3
                            ___ftadd
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (1) _SHT21_CalcRH                                         6     3      3    8568
                                             52 BANK0      6     3      3
                            ___ftadd
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    1813
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3707
                                              7 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2949
                                             39 BANK0     13     7      6
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1685
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SHT21_CalcRH
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _SHT21_CalcTemp
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___lwtoft
       ___ftpack
   _SHT21_Measure
     _I2C_Receive
       _I2C_Wait
     _I2C_RepeatedStart
       _I2C_Wait
     _I2C_Send
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _delay
   _SHT21_SetResolution
     _I2C_Send
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
   _SHT21_SoftReset
     _I2C_Send
       _I2C_Wait
     _I2C_Start
       _I2C_Wait
     _I2C_Stop
       _I2C_Wait
     _delay
   _dataCTRL
     _delay
   _delay
   _initLCD
     _delay
     _instCTRL
       _delay
   _init_I2C_Master
   _instCTRL
     _delay
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     30      51       9       84.4%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     21      21       7       41.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4A      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CC      12        0.0%
ABS                  0      0      CC       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Apr 22 18:28:03 2024

                           pc 0002                ___bmul@product 0025            __size_of_I2C_Start 0007  
                 __CFG_CP$OFF 0000                            _RH 006A                  ___awdiv@sign 0021  
                          fsr 0004           ___wmul@multiplicand 0072                  ___ftadd@exp1 0053  
                ___ftadd@exp2 0052                  ___ftadd@sign 0051                           l123 12A8  
                         l203 0222                           l244 077D                           l334 1327  
                         l512 1638                           l541 0937                           l518 1651  
                         l492 0137                           l567 169C                           _GIE 005F  
                         _RC0 0038                           _RC1 0039                           _RC2 003A  
                         _PEN 048A                  __CFG_CPD$OFF 0000                           _SEN 0488  
                         fsr0 0004                           indf 0000                  ___awmod@sign 0076  
        __size_of_I2C_Receive 0026                  __CFG_FOSC$XT 0000                   _sprintf$252 00A3  
                 _sprintf$671 00A0                  __CFG_LVP$OFF 0000             SHT21_Measure@data 0079  
                        l2010 17D2                          l2006 17C2                          l2102 0E95  
                        l2120 0FE1                          l2202 009A                          l2114 0F73  
                        l2106 0EB4                          l2212 00E1                          l2132 121C  
                        l2230 0168                          l2142 1684                          l2240 0183  
                        l2080 0B02                          l2072 0A78                          l2058 1363  
                        l2330 0886                          l2322 086A                          l2314 084D  
                        l2260 14B2                          l2324 0875                          l2316 085D  
                        l2340 1555                          l2236 0175                          l2228 0158  
                        l2164 16DD                          l2156 16BD                          l2430 15C7  
                        l2422 15B1                          l2326 0878                          l2350 158D  
                        l2342 1565                          l2246 131F                          l2238 0180  
                        l2182 1716                          l2174 16F9                          l2502 0291  
                        l2424 15B8                          l2264 14D9                          l2184 1721  
                        l2176 1709                          l2096 0E27                          l2354 159A  
                        l2370 1475                          l2186 1724                          l1802 1268  
                        l2610 062C                          l2530 038D                          l2428 15BF  
                        l2364 1447                          l2196 007B                          l2604 05FB  
                        l1910 08BF                          l2366 1457                          l2374 1482  
                        l2382 1390                          l1830 14FF                          l1806 126E  
                        l2630 0766                          l2542 0411                          l2534 03D3  
                        l2526 0370                          l2518 0303                          l2462 01BA  
                        l1760 160A                          l2296 081B                          l2384 13A2  
                        l1840 1507                          l1824 14F4                          l2640 07A3  
                        l2624 074F                          l2632 076B                          l1906 08B8  
                        l1842 1515                          l2562 04E1                          l2546 0428  
                        l2650 0194                          l2730 0D2B                          l2714 0C6A  
                        l1764 1611                          l1940 0912                          l1916 08CE  
                        l1852 1536                          l2644 07C5                          l2492 0252  
                        l2652 07E5                          l2484 0224                          l2476 01D7  
                        l2740 0D37                          l2716 0CB2                          l1774 163D  
                        l1766 161D                          l1934 08FD                          l2590 0554  
                        l2558 0472                          l2486 023A                          l2478 021C  
                        l2742 0D55                          l1776 1647                          l1768 1622  
                        l1952 0949                          l1936 0909                          l1928 08E8  
                        l1856 153E                          l1848 152B                          l1880 0024  
                        l1872 001E                          l2592 05CA                          l2576 0537  
                        l2568 04E7                          l2744 0D57                          l2728 0CE3  
                        l2680 0B93                          l1946 0927                          l1938 090E  
                        l1882 0032                          l1890 004B                          l2690 0BB9  
                        l2682 0BB1                          l1956 095B                          l1948 0933  
                        l1788 1200                          l1796 12B7                          l1868 0017  
                        l2692 0BD7                          l1966 097E                          l1982 175B  
                        l1894 0053                          l1886 0040                          l2598 05E1  
                        l2694 0BD9                          l1976 1745                          l1994 179A  
                        l1998 17AA                          STR_1 107E                          STR_2 107E  
           main@errorToString 01A9                          u2015 1658                          u3005 0177  
                        u2125 150A                          u2065 12B2                          u2145 1516  
                        u2225 0027                          u3035 1328                          u2155 1522  
                        u2405 08FE                          u3045 132F                          u2165 152C  
                        u2245 0038                          u3071 14A5                          u3135 0822  
                        u2255 0041                          u3072 14A6                          u3073 14AB  
                        u3305 144B                          u3074 14AC                          u2435 0913  
                        u3091 14CC                          u3235 1559                          u3092 14CD  
                        u3093 14D2                          u3165 084E                          u3325 1465  
                        u3094 14D3                          u2375 08E9                          u3255 1567  
                        u3335 1476                          u2465 0928                          u2545 1767  
                        u3265 157C                          u2635 17D3                          u2555 1779  
                        u3195 086C                          u3275 158E                          u3355 1395  
                        u2660 1360                          u2645 17DB                          u2805 16D0  
                        u3525 040F                          u3445 02AB                          u2815 16DE  
                        u3615 05EA                          u1945 1616                          u2585 17AB  
                        u3705 0796                          u3625 05F7                          u2595 17B3  
                        u3715 07BC                          u3555 04EC                          u3740 0B3E  
                        u1965 1631                          u2925 00E3                          u3645 06A3  
                        u3565 0529                          u3485 0398                          u3750 0B53  
                        u2935 0112                          u2855 16FA                          u3655 0715  
                        u3495 03DE                          u3760 0B68                          u1985 1640  
                        u2795 16BF                          u3595 0565                          _RCEN 048B  
                        u2885 1718                          u2975 0159                          _TMR0 0001  
                        _RSEN 0489                  __CFG_WRT$OFF 0000                   main@rawTemp 01BC  
                        _main 0B34                  ___ftpack@arg 0070                  ___ftpack@exp 0073  
                        _temp 006B              __end_of_I2C_Send 000D                          btemp 007E  
            __end_of_I2C_Wait 1208              __end_of_I2C_Stop 1200                 __CFG_BOREN$ON 0000  
                        ltemp 007E                          start 0000                          ttemp 007E  
                        wtemp 007E             ___bmul@multiplier 0026                  ___ftmul@cntr 0035  
                ___ftmul@sign 0036                  ___fttol@exp1 004D                  ___fttol@lval 0049  
            ??_SHT21_CalcTemp 007D                         ?_main 0070                         _ACKEN 048C  
                       _ACKDT 048D            SHT21_Measure@error 0078               __end_of___awdiv 1545  
             __end_of___ftadd 0998                 __CFG_WDTE$OFF 0000               __end_of___awmod 005A  
             __end_of___ftneg 1210               __end_of___lldiv 15A3               __end_of___ftmul 1800  
             ___awdiv@divisor 0077               __end_of___llmod 148B               __end_of___ftsub 12DE  
             __end_of___fttol 088F               ___awdiv@counter 0020                         _PORTB 0006  
                       _TRISB 0086                         _TRISC 0087               instCTRL@LCD_CMD 0075  
               __CFG_PWRTE$ON 0000                  ___lltoft@exp 007D               __end_of_initLCD 138C  
                       _delay 12A6               __end_of_dpowers 102E                         _scale 0D61  
             __end_of_isdigit 121E                 ___ftpack@sign 0074                  main@resultRH 01B3  
           __end_of_I2C_Start 11F9                         pclath 000A      __size_of_SHT21_SoftReset 001E  
                       ltemp0 007E                         ltemp1 0082                         ltemp2 0086  
                       ltemp3 0080                         ttemp0 007E                         ttemp1 0081  
                       ttemp2 0084                         ttemp3 0087                         ttemp4 007F  
                       status 0003                         wtemp0 007E                         wtemp1 0080  
                       wtemp2 0082                         wtemp3 0084                         wtemp4 0086  
                       wtemp5 0088                         wtemp6 007F               __end_of_sprintf 07EE  
             __initialization 07EE                  __end_of_main 0D61             I2C_Receive@dataIN 0072  
                      ??_main 0066                 ___fttol@sign1 0048          __size_of__tdiv_to_l_ 00C3  
                      ?_delay 0070              ___llmod@dividend 0074                        ?_scale 0037  
            ___awdiv@dividend 0079              __end_of___ftpack 166A              __end_of___lltoft 13B7  
            __end_of___lwtoft 128B              __end_of_dataCTRL 1251                        _SSPADD 0093  
                      _SSPCON 0014                        _SSPBUF 0013              __end_of__powers_ 107C  
                      ___bmul 1264                        ___ftge 148B                        ___wmul 131D  
                   ??___awdiv 007B                     ??___ftadd 004D                 ?_SHT21_CalcRH 0054  
                   ??___awmod 0074                     ??___ftneg 0073                     ??___lldiv 0078  
                   ??___ftmul 002D                     ??___llmod 0078                     ??___ftsub 007E  
                   ??___fttol 0044              __end_of_instCTRL 1264      __size_of_init_I2C_Master 000F  
                      _fround 0998                        delay@i 0073              ___awdiv@quotient 0022  
             ___awmod@divisor 0070               ___awmod@counter 0075         ___ftmul@f3_as_product 0032  
                   ??_initLCD 0076                     ??_isdigit 0070                     ?_I2C_Send 0070  
                   ?_I2C_Wait 0070                     ?_I2C_Stop 0070                     ??_sprintf 0060  
     __end_of__initialization 07FC                    ___ftadd@f1 0047                    ___ftadd@f2 004A  
                  ___ftge@ff1 0070                    ___ftge@ff2 0073                    ___ftneg@f1 0070  
         ___bmul@multiplicand 0024             ??_SHT21_SoftReset 0075                    ___ftmul@f1 0027  
                  ___ftmul@f2 002A                    ___ftsub@f1 0057                    ___ftsub@f2 0054  
                  ___fttol@f1 0040        __size_of_SHT21_Measure 005F                __pcstackCOMMON 0070  
              ??_SHT21_CalcRH 007D                  __pidataBANK3 12FC                 __end_of_delay 12C2  
                  ___lltoft@c 0078                 __end_of_scale 1000   __end_of_SHT21_SetResolution 12A6  
                  ___lwtoft@c 0078                    __div_to_l_ 005A                    ??_I2C_Send 0070  
                  ??_I2C_Wait 0070                    ??_I2C_Stop 0070          SHT21_CalcRH@resultRH 0057  
                     ??_delay 0072               __div_to_l_@exp1 0025               __div_to_l_@cntr 0024  
                sprintf@integ 00B2                       ??_scale 003A               __div_to_l_@quot 0020  
                  __pbssBANK0 006A                 __div_to_l_@f1 0070                 __div_to_l_@f2 0073  
                  __pmaintext 0B34                       ?___bmul 0024                       ?___ftge 0070  
                     ?___wmul 0070                       ?_fround 0037                     ?___ftpack 0070  
    SHT21_Measure@pMeasureand 0075                 ??_I2C_Receive 0070                     ?___lltoft 0078  
                   ?___lwtoft 0078                     ?_dataCTRL 0070             ??_init_I2C_Master 0070  
               _SHT21_Measure 15A3                       _SSPCON2 0091                       _SSPSTAT 0094  
                  __stringtab 1000                     ?_instCTRL 0070                     _I2C_Start 11F2  
           __end_of__npowers_ 1055            __end_of_POLYNOMIAL 107E         SHT21_CalcTemp@u16Temp 0054  
             __size_of___bmul 0013               __size_of___ftge 005D                       ___awdiv 14E8  
                     ___ftadd 088F                       ___awmod 000D                       ___ftneg 1208  
                     ___lldiv 1545               __size_of___wmul 0023                       ___ftmul 172D  
                     ___llmod 143F                       ___ftsub 12C2                       ___fttol 0801  
                  _fround$668 0043                    _fround$669 0040                    ??___ftpack 0075  
             __size_of_fround 019C                    ??___lltoft 007C                       __ptext1 018C  
                     __ptext2 0D61                       __ptext3 1210                       __ptext4 0998  
                     __ptext5 1264                       __ptext6 000D                       __ptext7 14E8  
                     __ptext8 166A                       __ptext9 005A                    ??___lwtoft 007B  
                  ??_dataCTRL 0075                       _initLCD 1366                   ?__div_to_l_ 0070  
                     _dpowers 1006                       _isdigit 1210              ___awmod@dividend 0072  
              ?_SHT21_Measure 0075           __end_of_I2C_Receive 1366           I2C_Receive@ACK_NACK 0071  
        __end_of_SHT21_CalcRH 13FB                       _sprintf 018C          end_of_initialization 07FC  
               delay@overflow 0070                main@resultTemp 01B6                    ??_instCTRL 0075  
                  ?_I2C_Start 0070               ___lldiv@divisor 0070               ___lldiv@counter 007D  
              __tdiv_to_l_@f1 0070                __tdiv_to_l_@f2 0073                 ??__tdiv_to_l_ 0076  
           __size_of_I2C_Send 0009             __size_of_I2C_Wait 0008             __size_of_I2C_Stop 0007  
     __size_of_SHT21_CalcTemp 0044               _SHT21_SoftReset 12DE      SHT21_Measure@measureType 007B  
           SHT21_CalcRH@u16RH 0054           __size_of__div_to_l_ 0132                    main@status 01B1  
                 ___ftmul@exp 0031                __end_of___bmul 1277                __end_of___ftge 14E8  
              __end_of___wmul 1340                   _I2C_Receive 1340                __end_of_fround 0B34  
             ??_SHT21_Measure 0076           start_initialization 07EE           __end_of__tdiv_to_l_ 172D  
             ___llmod@divisor 0070                   ??_I2C_Start 0070               ___llmod@counter 0079  
    SHT21_CalcTemp@resultTemp 0057                      ??___bmul 007C                      ??___ftge 0076  
                    ??___wmul 0074                    init_fetch0 122D               _init_I2C_Master 121E  
               sprintf@vd_254 00AC             _I2C_RepeatedStart 11EB                   __pdataBANK3 01C0  
                    ??_fround 003A            ?_I2C_RepeatedStart 0070                    fround@prec 0046  
           __size_of___ftpack 0068       __end_of_SHT21_SoftReset 12FC         __size_of_SHT21_CalcRH 0044  
           __size_of___lltoft 002B                     ___latbits 0002             __size_of___lwtoft 0014  
__size_of_SHT21_SetResolution 001B                 __pcstackBANK0 0020                 __pcstackBANK1 00A0  
               __pcstackBANK3 0190             __size_of_dataCTRL 0013           ??_I2C_RepeatedStart 0070  
         __end_of__stringdata 1083                   sprintf@_val 00B5                   sprintf@flag 00B0  
                 sprintf@fval 00BD                   sprintf@prec 00BB             __size_of_instCTRL 0013  
   __end_of_I2C_RepeatedStart 11F2         SHT21_Measure@checksum 0077                      ?___awdiv 0077  
                    ?___ftadd 0047                      ?___awmod 0070                      ?___ftneg 0070  
                    ?___lldiv 0070                      ?___ftmul 0027                      ?___llmod 0070  
                    ?___ftsub 0054                     __npowers_ 102E                  _SHT21_CalcRH 13B7  
                    ?___fttol 0040                     __pstrings 1000                   __tdiv_to_l_ 166A  
                ??__div_to_l_ 0076                      ?_initLCD 0070                      ?_isdigit 0070  
                    _I2C_Send 0004                      _I2C_Wait 1200                      _I2C_Stop 11F9  
                   _scale$670 003C                _SHT21_CalcTemp 13FB                __size_of_delay 001C  
                    ?_sprintf 005A                __size_of_scale 029F               dataCTRL@LCD_DAT 0075  
        main@humidityToString 019E                ___wmul@product 0074       __end_of_init_I2C_Master 122D  
            main@tempToString 0190            __end_of__div_to_l_ 018C                     main@F1360 01C0  
                   main@F1362 01CE                     main@F1364 01D9                   __stringbase 1005  
                 __stringdata 107E             ___wmul@multiplier 0070              ?_SHT21_SoftReset 0070  
                   main@index 01BE                     main@rawRH 01BA                     main@error 01B9  
      __end_of_SHT21_CalcTemp 143F    __size_of_I2C_RepeatedStart 0007               I2C_Send@dataOUT 0070  
            __size_of___awdiv 005D              __size_of___ftadd 0109              __size_of___awmod 004D  
            __size_of___ftneg 0008              __size_of___lldiv 005E              __size_of___ftmul 00D3  
            __size_of___llmod 004C              __size_of___ftsub 001C              __size_of___fttol 008E  
                    ___ftpack 1602            __end_of__stringtab 1006                      ___lltoft 138C  
                ?_I2C_Receive 0070                   _isdigit$452 0070                      ___lwtoft 1277  
                    _dataCTRL 123E                    sprintf@exp 00B9              __size_of_initLCD 0026  
             ?_SHT21_CalcTemp 0054              __size_of_isdigit 000E                      __ptext10 131D  
                    __ptext11 138C                      __ptext20 1251                      __ptext12 143F  
                    __ptext21 123E                      __ptext13 1545                      __ptext30 1340  
                    __ptext22 12DE                      __ptext14 0801                      __ptext31 1200  
                    __ptext23 128B                      __ptext15 12C2                      __ptext32 13FB  
                    __ptext24 15A3                      __ptext16 1208                      __ptext33 13B7  
                    __ptext25 12A6                      __ptext17 148B                      __ptext34 1277  
                    __ptext26 11F9                      __ptext18 121E                      __ptext35 172D  
                    __ptext27 11F2                      __ptext19 1366                      __ptext36 088F  
                    __ptext28 0004                      __ptext37 1602                      __ptext29 11EB  
                    __powers_ 1055              __size_of_sprintf 0662                      _instCTRL 1251  
               __size_of_main 022D              ?_init_I2C_Master 0070           _SHT21_SetResolution 128B  
                    main@buf1 0190                      main@buf2 0190         __end_of_SHT21_Measure 1602  
        ?_SHT21_SetResolution 0070                      init_ram0 1231                      isdigit@c 0071  
                    scale@scl 003F                     sprintf@ap 00A7              __tdiv_to_l_@exp1 0025  
                   sprintf@vd 00A8                     sprintf@sp 005A              __tdiv_to_l_@cntr 0024  
            __tdiv_to_l_@quot 0020              ___lldiv@dividend 0074                     stringcode 1000  
                ?__tdiv_to_l_ 0070                    _OPTION_REG 0081                      sprintf@c 00C0  
                    sprintf@f 005C                    _POLYNOMIAL 107C              ___lldiv@quotient 0079  
       ??_SHT21_SetResolution 0071                      stringdir 1000                      stringtab 1000  
